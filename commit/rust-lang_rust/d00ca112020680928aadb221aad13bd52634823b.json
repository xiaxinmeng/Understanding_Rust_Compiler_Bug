{"sha": "d00ca112020680928aadb221aad13bd52634823b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMGNhMTEyMDIwNjgwOTI4YWFkYjIyMWFhZDEzYmQ1MjYzNDgyM2I=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-12T21:46:25Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-12T22:59:35Z"}, "message": "Add 'consider using' message to overflowing_literals\n\nIronically, the overflowing_literals handler for binary or hex already\nhad this message! You would think it would be the other way around :)", "tree": {"sha": "a38e92d34f674930d7fc3e8c785ebb94d33caa1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a38e92d34f674930d7fc3e8c785ebb94d33caa1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d00ca112020680928aadb221aad13bd52634823b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d00ca112020680928aadb221aad13bd52634823b", "html_url": "https://github.com/rust-lang/rust/commit/d00ca112020680928aadb221aad13bd52634823b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d00ca112020680928aadb221aad13bd52634823b/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bb68c31f8cef24174a7d3499de6b4ebea069900", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb68c31f8cef24174a7d3499de6b4ebea069900", "html_url": "https://github.com/rust-lang/rust/commit/5bb68c31f8cef24174a7d3499de6b4ebea069900"}], "stats": {"total": 78, "additions": 66, "deletions": 12}, "files": [{"sha": "d9f4da23d2f865fb8115c5583f2f2b4b66217cc0", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -331,18 +331,23 @@ fn lint_int_literal<'tcx>(\n         }\n \n         cx.struct_span_lint(OVERFLOWING_LITERALS, e.span, |lint| {\n-            lint.build(&format!(\"literal out of range for `{}`\", t.name_str()))\n-                .note(&format!(\n-                    \"the literal `{}` does not fit into the type `{}` whose range is `{}..={}`\",\n-                    cx.sess()\n-                        .source_map()\n-                        .span_to_snippet(lit.span)\n-                        .expect(\"must get snippet from literal\"),\n-                    t.name_str(),\n-                    min,\n-                    max,\n-                ))\n-                .emit();\n+            let mut err = lint.build(&format!(\"literal out of range for `{}`\", t.name_str()));\n+            err.note(&format!(\n+                \"the literal `{}` does not fit into the type `{}` whose range is `{}..={}`\",\n+                cx.sess()\n+                    .source_map()\n+                    .span_to_snippet(lit.span)\n+                    .expect(\"must get snippet from literal\"),\n+                t.name_str(),\n+                min,\n+                max,\n+            ));\n+            if let Some(sugg_ty) =\n+                get_type_suggestion(&cx.typeck_results().node_type(e.hir_id), v, negative)\n+            {\n+                err.help(&format!(\"consider using `{}` instead\", sugg_ty));\n+            }\n+            err.emit();\n         });\n     }\n }"}, {"sha": "f0deb26e96db4dd3b15af50cd9327d40166a0b35", "filename": "src/test/ui/enum/enum-discrim-too-small2.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -10,6 +10,7 @@ note: the lint level is defined here\n LL | #![deny(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n    = note: the literal `223` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n \n error: literal out of range for `i16`\n   --> $DIR/enum-discrim-too-small2.rs:15:12\n@@ -18,6 +19,7 @@ LL |     Ci16 = 55555,\n    |            ^^^^^\n    |\n    = note: the literal `55555` does not fit into the type `i16` whose range is `-32768..=32767`\n+   = help: consider using `u16` instead\n \n error: literal out of range for `i32`\n   --> $DIR/enum-discrim-too-small2.rs:22:12\n@@ -26,6 +28,7 @@ LL |     Ci32 = 3_000_000_000,\n    |            ^^^^^^^^^^^^^\n    |\n    = note: the literal `3_000_000_000` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n+   = help: consider using `u32` instead\n \n error: literal out of range for `i64`\n   --> $DIR/enum-discrim-too-small2.rs:29:12\n@@ -34,6 +37,7 @@ LL |     Ci64 = 9223372036854775809,\n    |            ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the literal `9223372036854775809` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n+   = help: consider using `u64` instead\n \n error: aborting due to 4 previous errors\n "}, {"sha": "49051f2cee6558a83e9a16a062a2631cb5e478aa", "filename": "src/test/ui/issues/issue-79744.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Fissues%2Fissue-79744.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Fissues%2Fissue-79744.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-79744.rs?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -0,0 +1,13 @@\n+fn main() {\n+    let elem = 6i8;\n+    let e2 = 230;\n+    //~^ ERROR literal out of range for `i8`\n+    //~| HELP consider using `u8` instead\n+\n+    let mut vec = Vec::new();\n+\n+    vec.push(e2);\n+    vec.push(elem);\n+\n+    println!(\"{:?}\", vec);\n+}"}, {"sha": "b35700cd4726863333784cc45f5cf3190b05191a", "filename": "src/test/ui/issues/issue-79744.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Fissues%2Fissue-79744.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Fissues%2Fissue-79744.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-79744.stderr?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -0,0 +1,12 @@\n+error: literal out of range for `i8`\n+  --> $DIR/issue-79744.rs:3:14\n+   |\n+LL |     let e2 = 230;\n+   |              ^^^\n+   |\n+   = note: `#[deny(overflowing_literals)]` on by default\n+   = note: the literal `230` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n+\n+error: aborting due to previous error\n+"}, {"sha": "357fde7151ca21b427d93786219e2f59ff636805", "filename": "src/test/ui/lint/lint-type-limits2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -18,6 +18,7 @@ note: the lint level is defined here\n LL | #![warn(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n    = note: the literal `128` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "c8558cfc2143c8d5f17440a2beff4cf4ea4817ac", "filename": "src/test/ui/lint/lint-type-limits3.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -18,6 +18,7 @@ note: the lint level is defined here\n LL | #![warn(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n    = note: the literal `200` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "f0a8f507d57237486a7fcdbd74a054673de6d56a", "filename": "src/test/ui/lint/lint-type-overflow.stderr", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -26,6 +26,7 @@ LL |     let x1: i8 = 128;\n    |                  ^^^\n    |\n    = note: the literal `128` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:18:19\n@@ -34,6 +35,7 @@ LL |     let x3: i8 = -129;\n    |                   ^^^\n    |\n    = note: the literal `129` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `i16` instead\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:19:19\n@@ -42,6 +44,7 @@ LL |     let x3: i8 = -(129);\n    |                   ^^^^^\n    |\n    = note: the literal `129` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `i16` instead\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:20:20\n@@ -50,6 +53,7 @@ LL |     let x3: i8 = -{129};\n    |                    ^^^\n    |\n    = note: the literal `129` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:22:10\n@@ -58,6 +62,7 @@ LL |     test(1000);\n    |          ^^^^\n    |\n    = note: the literal `1000` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `i16` instead\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:24:13\n@@ -66,6 +71,7 @@ LL |     let x = 128_i8;\n    |             ^^^^^^\n    |\n    = note: the literal `128_i8` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n \n error: literal out of range for `i8`\n   --> $DIR/lint-type-overflow.rs:28:14\n@@ -74,6 +80,7 @@ LL |     let x = -129_i8;\n    |              ^^^^^^\n    |\n    = note: the literal `129_i8` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `i16` instead\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:32:18\n@@ -82,6 +89,7 @@ LL |     let x: i32 = 2147483648;\n    |                  ^^^^^^^^^^\n    |\n    = note: the literal `2147483648` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n+   = help: consider using `u32` instead\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:33:13\n@@ -90,6 +98,7 @@ LL |     let x = 2147483648_i32;\n    |             ^^^^^^^^^^^^^^\n    |\n    = note: the literal `2147483648_i32` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n+   = help: consider using `u32` instead\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:36:19\n@@ -98,6 +107,7 @@ LL |     let x: i32 = -2147483649;\n    |                   ^^^^^^^^^^\n    |\n    = note: the literal `2147483649` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n+   = help: consider using `i64` instead\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:37:14\n@@ -106,6 +116,7 @@ LL |     let x = -2147483649_i32;\n    |              ^^^^^^^^^^^^^^\n    |\n    = note: the literal `2147483649_i32` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n+   = help: consider using `i64` instead\n \n error: literal out of range for `i32`\n   --> $DIR/lint-type-overflow.rs:38:13\n@@ -114,6 +125,7 @@ LL |     let x = 2147483648;\n    |             ^^^^^^^^^^\n    |\n    = note: the literal `2147483648` does not fit into the type `i32` whose range is `-2147483648..=2147483647`\n+   = help: consider using `u32` instead\n \n error: literal out of range for `i64`\n   --> $DIR/lint-type-overflow.rs:40:13\n@@ -122,6 +134,7 @@ LL |     let x = 9223372036854775808_i64;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the literal `9223372036854775808_i64` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n+   = help: consider using `u64` instead\n \n error: literal out of range for `i64`\n   --> $DIR/lint-type-overflow.rs:42:13\n@@ -130,6 +143,7 @@ LL |     let x = 18446744073709551615_i64;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the literal `18446744073709551615_i64` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n+   = help: consider using `u64` instead\n \n error: literal out of range for `i64`\n   --> $DIR/lint-type-overflow.rs:43:19\n@@ -138,6 +152,7 @@ LL |     let x: i64 = -9223372036854775809;\n    |                   ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the literal `9223372036854775809` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n+   = help: consider using `i128` instead\n \n error: literal out of range for `i64`\n   --> $DIR/lint-type-overflow.rs:44:14\n@@ -146,6 +161,7 @@ LL |     let x = -9223372036854775809_i64;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the literal `9223372036854775809_i64` does not fit into the type `i64` whose range is `-9223372036854775808..=9223372036854775807`\n+   = help: consider using `i128` instead\n \n error: aborting due to 18 previous errors\n "}, {"sha": "ab28c4aaf477b3827ae80cc0a2c9d605a7b292e6", "filename": "src/test/ui/lint/lint-type-overflow2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -10,6 +10,7 @@ note: the lint level is defined here\n LL | #![deny(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n    = note: the literal `128` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n \n error: literal out of range for `f32`\n   --> $DIR/lint-type-overflow2.rs:9:14"}, {"sha": "dafce414d2fdfb3470a8123517fc7e772de07f84", "filename": "src/test/ui/lint/type-overflow.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d00ca112020680928aadb221aad13bd52634823b/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr?ref=d00ca112020680928aadb221aad13bd52634823b", "patch": "@@ -10,6 +10,7 @@ note: the lint level is defined here\n LL | #![warn(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n    = note: the literal `255i8` does not fit into the type `i8` whose range is `-128..=127`\n+   = help: consider using `u8` instead\n \n warning: literal out of range for i8\n   --> $DIR/type-overflow.rs:10:16"}]}