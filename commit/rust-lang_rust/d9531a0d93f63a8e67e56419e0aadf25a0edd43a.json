{"sha": "d9531a0d93f63a8e67e56419e0aadf25a0edd43a", "node_id": "C_kwDOAAsO6NoAKGQ5NTMxYTBkOTNmNjNhOGU2N2U1NjQxOWUwYWFkZjI1YTBlZGQ0M2E", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-06-07T20:00:56Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-06-07T20:03:51Z"}, "message": "Remove wrongly emitted `.eh_frame` in `-Cpanic=abort`", "tree": {"sha": "0b928fb7f7d629721b25e964edddfcad8d7ab344", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b928fb7f7d629721b25e964edddfcad8d7ab344"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9531a0d93f63a8e67e56419e0aadf25a0edd43a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9531a0d93f63a8e67e56419e0aadf25a0edd43a", "html_url": "https://github.com/rust-lang/rust/commit/d9531a0d93f63a8e67e56419e0aadf25a0edd43a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9531a0d93f63a8e67e56419e0aadf25a0edd43a/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2807b2bf3be9fbed9a0aadc97841c20a1ab5f79", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2807b2bf3be9fbed9a0aadc97841c20a1ab5f79", "html_url": "https://github.com/rust-lang/rust/commit/b2807b2bf3be9fbed9a0aadc97841c20a1ab5f79"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "ef64f70fdf3495996e331f4d5a041990fb066b29", "filename": "compiler/rustc_mir_transform/src/check_alignment.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d9531a0d93f63a8e67e56419e0aadf25a0edd43a/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9531a0d93f63a8e67e56419e0aadf25a0edd43a/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs?ref=d9531a0d93f63a8e67e56419e0aadf25a0edd43a", "patch": "@@ -9,6 +9,7 @@ use rustc_middle::mir::{\n };\n use rustc_middle::ty::{Ty, TyCtxt, TypeAndMut};\n use rustc_session::Session;\n+use rustc_target::spec::PanicStrategy;\n \n pub struct CheckAlignment;\n \n@@ -236,7 +237,11 @@ fn insert_alignment_check<'tcx>(\n                 required: Operand::Copy(alignment),\n                 found: Operand::Copy(addr),\n             }),\n-            unwind: UnwindAction::Terminate,\n+            unwind: if tcx.sess.panic_strategy() == PanicStrategy::Unwind {\n+                UnwindAction::Terminate\n+            } else {\n+                UnwindAction::Unreachable\n+            },\n         },\n     });\n }"}, {"sha": "1cb7bf575cbdff2e27258fc74b97099a8b12a118", "filename": "tests/run-make/panic-abort-eh_frame/Makefile", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d9531a0d93f63a8e67e56419e0aadf25a0edd43a/tests%2Frun-make%2Fpanic-abort-eh_frame%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d9531a0d93f63a8e67e56419e0aadf25a0edd43a/tests%2Frun-make%2Fpanic-abort-eh_frame%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fpanic-abort-eh_frame%2FMakefile?ref=d9531a0d93f63a8e67e56419e0aadf25a0edd43a", "patch": "@@ -0,0 +1,10 @@\n+# only-linux\n+#\n+# This test ensures that `panic=abort` code (without `C-unwind`, that is) should not have any\n+# unwinding related `.eh_frame` sections emitted.\n+\n+include ../tools.mk\n+\n+all:\n+\t$(RUSTC) foo.rs --crate-type=lib --emit=obj=$(TMPDIR)/foo.o -Cpanic=abort\n+\tobjdump --dwarf=frames $(TMPDIR)/foo.o | $(CGREP) -v 'DW_CFA'"}, {"sha": "e185352945538335df6f525f270d20f443d990e2", "filename": "tests/run-make/panic-abort-eh_frame/foo.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d9531a0d93f63a8e67e56419e0aadf25a0edd43a/tests%2Frun-make%2Fpanic-abort-eh_frame%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9531a0d93f63a8e67e56419e0aadf25a0edd43a/tests%2Frun-make%2Fpanic-abort-eh_frame%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fpanic-abort-eh_frame%2Ffoo.rs?ref=d9531a0d93f63a8e67e56419e0aadf25a0edd43a", "patch": "@@ -0,0 +1,10 @@\n+#![no_std]\n+\n+#[panic_handler]\n+fn handler(_: &core::panic::PanicInfo<'_>) -> ! {\n+    loop {}\n+}\n+\n+pub unsafe fn oops(x: *const u32) -> u32 {\n+    *x\n+}"}]}