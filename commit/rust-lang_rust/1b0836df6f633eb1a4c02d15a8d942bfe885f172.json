{"sha": "1b0836df6f633eb1a4c02d15a8d942bfe885f172", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMDgzNmRmNmY2MzNlYjFhNGMwMmQxNWE4ZDk0MmJmZTg4NWYxNzI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-22T18:46:19Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-28T17:53:13Z"}, "message": "Tweak unexpected token wording", "tree": {"sha": "933a2dd9d59a17ce3916bded6cad9cb5f651d042", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/933a2dd9d59a17ce3916bded6cad9cb5f651d042"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b0836df6f633eb1a4c02d15a8d942bfe885f172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b0836df6f633eb1a4c02d15a8d942bfe885f172", "html_url": "https://github.com/rust-lang/rust/commit/1b0836df6f633eb1a4c02d15a8d942bfe885f172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b0836df6f633eb1a4c02d15a8d942bfe885f172/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d673d0ac8462bd30612b0cce719ac0bf15dfaf86", "url": "https://api.github.com/repos/rust-lang/rust/commits/d673d0ac8462bd30612b0cce719ac0bf15dfaf86", "html_url": "https://github.com/rust-lang/rust/commit/d673d0ac8462bd30612b0cce719ac0bf15dfaf86"}], "stats": {"total": 83, "additions": 42, "deletions": 41}, "files": [{"sha": "49949b775750dd6e904d69845a06f8ea2eb30550", "filename": "src/libsyntax/parse/parser/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -274,23 +274,23 @@ impl<'a> Parser<'a> {\n         expected.sort_by_cached_key(|x| x.to_string());\n         expected.dedup();\n         let expect = tokens_to_string(&expected[..]);\n-        let actual = self.this_token_to_string();\n+        let actual = self.this_token_descr();\n         let (msg_exp, (label_sp, label_exp)) = if expected.len() > 1 {\n             let short_expect = if expected.len() > 6 {\n                 format!(\"{} possible tokens\", expected.len())\n             } else {\n                 expect.clone()\n             };\n-            (format!(\"expected one of {}, found `{}`\", expect, actual),\n+            (format!(\"expected one of {}, found {}\", expect, actual),\n                 (self.sess.source_map().next_point(self.prev_span),\n                 format!(\"expected one of {} here\", short_expect)))\n         } else if expected.is_empty() {\n-            (format!(\"unexpected token: `{}`\", actual),\n+            (format!(\"unexpected token: {}\", actual),\n                 (self.prev_span, \"unexpected token after this\".to_string()))\n         } else {\n-            (format!(\"expected {}, found `{}`\", expect, actual),\n+            (format!(\"expected {}, found {}\", expect, actual),\n                 (self.sess.source_map().next_point(self.prev_span),\n-                format!(\"expected {} here\", expect)))\n+                format!(\"expected {}\", expect)))\n         };\n         self.last_unexpected_token_span = Some(self.token.span);\n         let mut err = self.fatal(&msg_exp);"}, {"sha": "44f02d1a7b19b79e10e4001ea777e115409cda7b", "filename": "src/test/ui/async-await/no-async-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -3,4 +3,4 @@\n // compile-flags: --crate-type lib\n \n pub async const fn x() {}\n-//~^ ERROR expected one of `fn` or `unsafe`, found `const`\n+//~^ ERROR expected one of `fn` or `unsafe`, found keyword `const`"}, {"sha": "f89d1810ba44920d86f30d86e7d0d130799fd006", "filename": "src/test/ui/async-await/no-async-const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-async-const.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `fn` or `unsafe`, found `const`\n+error: expected one of `fn` or `unsafe`, found keyword `const`\n   --> $DIR/no-async-const.rs:5:11\n    |\n LL | pub async const fn x() {}"}, {"sha": "1ac1bdffda9476615be71d2c28f92504e19985f5", "filename": "src/test/ui/async-await/no-unsafe-async.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -4,8 +4,8 @@ struct S;\n \n impl S {\n     #[cfg(FALSE)]\n-    unsafe async fn g() {} //~ ERROR expected one of `extern` or `fn`, found `async`\n+    unsafe async fn g() {} //~ ERROR expected one of `extern` or `fn`, found keyword `async`\n }\n \n #[cfg(FALSE)]\n-unsafe async fn f() {} //~ ERROR expected one of `extern`, `fn`, or `{`, found `async`\n+unsafe async fn f() {} //~ ERROR expected one of `extern`, `fn`, or `{`, found keyword `async`"}, {"sha": "79d9f1befd66ac83cc2a4ad9586df7eec64cae4d", "filename": "src/test/ui/async-await/no-unsafe-async.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,10 +1,10 @@\n-error: expected one of `extern` or `fn`, found `async`\n+error: expected one of `extern` or `fn`, found keyword `async`\n   --> $DIR/no-unsafe-async.rs:7:12\n    |\n LL |     unsafe async fn g() {}\n    |            ^^^^^ expected one of `extern` or `fn` here\n \n-error: expected one of `extern`, `fn`, or `{`, found `async`\n+error: expected one of `extern`, `fn`, or `{`, found keyword `async`\n   --> $DIR/no-unsafe-async.rs:11:8\n    |\n LL | unsafe async fn f() {}"}, {"sha": "8974d9f48c1e3076d759d036ae102e13bc568a35", "filename": "src/test/ui/can-begin-expr-check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fcan-begin-expr-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fcan-begin-expr-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcan-begin-expr-check.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -16,5 +16,5 @@ pub fn main() {\n         return break as ();\n     }\n \n-    return enum; //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `enum`\n+    return enum; //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found keyword `enum`\n }"}, {"sha": "0e03e9915fca2dbf6e2049bbe7284f300a0ac73f", "filename": "src/test/ui/can-begin-expr-check.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fcan-begin-expr-check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fcan-begin-expr-check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcan-begin-expr-check.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `.`, `;`, `?`, `}`, or an operator, found `enum`\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found keyword `enum`\n   --> $DIR/can-begin-expr-check.rs:19:12\n    |\n LL |     return enum;"}, {"sha": "4f7ed5cc6fdd819f53bc2a0a0479d09fd0e51962", "filename": "src/test/ui/issues/issue-43196.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fissues%2Fissue-43196.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fissues%2Fissue-43196.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43196.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -2,7 +2,7 @@ error: expected `|`, found `}`\n   --> $DIR/issue-43196.rs:3:1\n    |\n LL |     |\n-   |      - expected `|` here\n+   |      - expected `|`\n LL | }\n    | ^ unexpected token\n "}, {"sha": "48c2f556f1dd9f0754d47fdc8817c4ccf9669b00", "filename": "src/test/ui/keyword/extern/keyword-extern-as-identifier-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fkeyword%2Fextern%2Fkeyword-extern-as-identifier-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fkeyword%2Fextern%2Fkeyword-extern-as-identifier-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkeyword%2Fextern%2Fkeyword-extern-as-identifier-type.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -2,7 +2,7 @@ error: expected `fn`, found `::`\n   --> $DIR/keyword-extern-as-identifier-type.rs:1:16\n    |\n LL | type A = extern::foo::bar;\n-   |                ^^ expected `fn` here\n+   |                ^^ expected `fn`\n \n error: aborting due to previous error\n "}, {"sha": "9d18d1d517fc415737f18ece2214bdc2006fca85", "filename": "src/test/ui/macros/issue-54441.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fmacros%2Fissue-54441.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fmacros%2Fissue-54441.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-54441.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `crate`, `fn`, `pub`, `static`, or `type`, found `let`\n+error: expected one of `crate`, `fn`, `pub`, `static`, or `type`, found keyword `let`\n   --> $DIR/issue-54441.rs:3:9\n    |\n LL |         let"}, {"sha": "8843fd303ec0c654be09dd7613bcecd99fa570a3", "filename": "src/test/ui/parser/default.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `async`, `const`, `extern`, `fn`, `type`, or `unsafe`, found `pub`\n+error: expected one of `async`, `const`, `extern`, `fn`, `type`, or `unsafe`, found keyword `pub`\n   --> $DIR/default.rs:22:13\n    |\n LL |     default pub fn foo<T: Default>() -> T { T::default() }"}, {"sha": "675adb88d20847452150b1d255129b2ef440341a", "filename": "src/test/ui/parser/duplicate-visibility.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `(`, `fn`, `static`, or `type`, found `pub`\n+error: expected one of `(`, `fn`, `static`, or `type`, found keyword `pub`\n   --> $DIR/duplicate-visibility.rs:3:9\n    |\n LL |     pub pub fn foo();"}, {"sha": "907de0d8f91d84ddf81d7f08403a60fde4eff194", "filename": "src/test/ui/parser/extern-expected-fn-or-brace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n // Verifies that the expected token errors for `extern crate` are\n // raised\n \n-extern \"C\" mod foo; //~ERROR expected one of `fn` or `{`, found `mod`\n+extern \"C\" mod foo; //~ERROR expected one of `fn` or `{`, found keyword `mod`"}, {"sha": "691f4cddff29197ef9b002e7f1a2711652e3d716", "filename": "src/test/ui/parser/extern-expected-fn-or-brace.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `fn` or `{`, found `mod`\n+error: expected one of `fn` or `{`, found keyword `mod`\n   --> $DIR/extern-expected-fn-or-brace.rs:4:12\n    |\n LL | extern \"C\" mod foo;"}, {"sha": "e929fa53620f66884b44e51a229eb9830b4e31a9", "filename": "src/test/ui/parser/impl-parsing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -26,7 +26,7 @@ error: expected `impl`, found `FAIL`\n   --> $DIR/impl-parsing.rs:11:16\n    |\n LL | default unsafe FAIL\n-   |                ^^^^ expected `impl` here\n+   |                ^^^^ expected `impl`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "5842037fb8050bb57ba6d0d5c0b53551b588af94", "filename": "src/test/ui/parser/import-from-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -2,7 +2,7 @@ error: expected `;`, found `::`\n   --> $DIR/import-from-path.rs:2:15\n    |\n LL | use foo::{bar}::baz\n-   |               ^^ expected `;` here\n+   |               ^^ expected `;`\n \n error: aborting due to previous error\n "}, {"sha": "a966e9937373a79a8391e013e8c6c7f4d36b15f1", "filename": "src/test/ui/parser/import-from-rename.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,8 +1,8 @@\n-error: expected `;`, found `as`\n+error: expected `;`, found keyword `as`\n   --> $DIR/import-from-rename.rs:3:16\n    |\n LL | use foo::{bar} as baz;\n-   |                ^^ expected `;` here\n+   |                ^^ expected `;`\n \n error: aborting due to previous error\n "}, {"sha": "ebca2db8305c3884e0418fbfeb574bc7328908d5", "filename": "src/test/ui/parser/import-glob-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -2,7 +2,7 @@ error: expected `;`, found `::`\n   --> $DIR/import-glob-path.rs:2:11\n    |\n LL | use foo::*::bar\n-   |           ^^ expected `;` here\n+   |           ^^ expected `;`\n \n error: aborting due to previous error\n "}, {"sha": "2853873278251f5423abe0c7029be25da12dd3f8", "filename": "src/test/ui/parser/import-glob-rename.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,8 +1,8 @@\n-error: expected `;`, found `as`\n+error: expected `;`, found keyword `as`\n   --> $DIR/import-glob-rename.rs:3:12\n    |\n LL | use foo::* as baz;\n-   |            ^^ expected `;` here\n+   |            ^^ expected `;`\n \n error: aborting due to previous error\n "}, {"sha": "beb94c8042d5fe37c0291fcd881e149743a2c892", "filename": "src/test/ui/parser/issue-15980.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fissue-15980.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fissue-15980.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-15980.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -11,7 +11,7 @@ fn main(){\n         }\n         //~^ NOTE expected one of `.`, `=>`, `?`, or an operator here\n         _ => {}\n-        //~^ ERROR expected one of `.`, `=>`, `?`, or an operator, found `_`\n+        //~^ ERROR expected one of `.`, `=>`, `?`, or an operator, found reserved identifier `_`\n         //~| NOTE unexpected token\n     }\n }"}, {"sha": "26f75d45fa241dda1ae8c3c46cc65ffa5bb8eae4", "filename": "src/test/ui/parser/issue-15980.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -12,7 +12,7 @@ help: you can escape reserved keywords to use them as identifiers\n LL |             r#return\n    |\n \n-error: expected one of `.`, `=>`, `?`, or an operator, found `_`\n+error: expected one of `.`, `=>`, `?`, or an operator, found reserved identifier `_`\n   --> $DIR/issue-15980.rs:13:9\n    |\n LL |         }"}, {"sha": "90221039b4148cdde1778b1b34ced8a79c56aa24", "filename": "src/test/ui/parser/issue-19398.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fissue-19398.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fissue-19398.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-19398.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,5 +1,5 @@\n trait T {\n-    extern \"Rust\" unsafe fn foo(); //~ ERROR expected `fn`, found `unsafe`\n+    extern \"Rust\" unsafe fn foo(); //~ ERROR expected `fn`, found keyword `unsafe`\n }\n \n fn main() {}"}, {"sha": "41ec4f3ced4e907581792ebd506491db3a1cdfa2", "filename": "src/test/ui/parser/issue-19398.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fissue-19398.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fissue-19398.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-19398.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,8 +1,8 @@\n-error: expected `fn`, found `unsafe`\n+error: expected `fn`, found keyword `unsafe`\n   --> $DIR/issue-19398.rs:2:19\n    |\n LL |     extern \"Rust\" unsafe fn foo();\n-   |                   ^^^^^^ expected `fn` here\n+   |                   ^^^^^^ expected `fn`\n \n error: aborting due to previous error\n "}, {"sha": "bf9cbcdab2e89b58f2348eaed9894c6286e61c30", "filename": "src/test/ui/parser/raw/raw-literal-keywords.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,5 +1,5 @@\n fn test_if() {\n-    r#if true { } //~ ERROR found `true`\n+    r#if true { } //~ ERROR found keyword `true`\n }\n \n fn test_struct() {"}, {"sha": "4cea605be6f5e1adc8b28232339e9284cf5f65e0", "filename": "src/test/ui/parser/raw/raw-literal-keywords.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `true`\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `true`\n   --> $DIR/raw-literal-keywords.rs:2:10\n    |\n LL |     r#if true { }"}, {"sha": "779e1646344787b680be00576c3e9d588791201d", "filename": "src/test/ui/parser/recover-for-loop-parens-around-head.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -8,7 +8,7 @@ fn main() {\n     let vec = vec![1, 2, 3];\n \n     for ( elem in vec ) {\n-        //~^ ERROR expected one of `)`, `,`, `@`, or `|`, found `in`\n+        //~^ ERROR expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n         //~| ERROR unexpected closing `)`\n         const RECOVERY_WITNESS: () = 0; //~ ERROR mismatched types\n     }"}, {"sha": "1a1f395ee213eb0ad6c58ad0b239ed84ffc0a6e1", "filename": "src/test/ui/parser/recover-for-loop-parens-around-head.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `)`, `,`, `@`, or `|`, found `in`\n+error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n   --> $DIR/recover-for-loop-parens-around-head.rs:10:16\n    |\n LL |     for ( elem in vec ) {"}, {"sha": "af148e697118cc24e65f9e128a944d4d80d0079b", "filename": "src/test/ui/parser/removed-syntax-static-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-static-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-static-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-static-fn.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `async`, `const`, `crate`, `default`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found `static`\n+error: expected one of `async`, `const`, `crate`, `default`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found keyword `static`\n   --> $DIR/removed-syntax-static-fn.rs:4:5\n    |\n LL | impl S {"}, {"sha": "f9a9d071a3d1b5c5263242d9cfd538d94da41b25", "filename": "src/test/ui/parser/removed-syntax-uniq-mut-ty.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1 +1,2 @@\n-type mut_box = Box<mut isize>; //~ ERROR expected one of `>`, const, lifetime, or type, found `mut`\n+type mut_box = Box<mut isize>;\n+//~^ ERROR expected one of `>`, const, lifetime, or type, found keyword `mut`"}, {"sha": "9c47e3db67dd30d5997da1ceba412cc87c86aeb0", "filename": "src/test/ui/parser/removed-syntax-uniq-mut-ty.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -1,4 +1,4 @@\n-error: expected one of `>`, const, lifetime, or type, found `mut`\n+error: expected one of `>`, const, lifetime, or type, found keyword `mut`\n   --> $DIR/removed-syntax-uniq-mut-ty.rs:1:20\n    |\n LL | type mut_box = Box<mut isize>;"}, {"sha": "7b0d128f06f8a7c4151c5c364111a524506c17ed", "filename": "src/test/ui/parser/underscore_item_not_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Funderscore_item_not_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Funderscore_item_not_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funderscore_item_not_const.rs?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -25,6 +25,6 @@ use _ as g; //~ ERROR expected identifier, found reserved identifier `_`\n trait _ {} //~ ERROR expected identifier, found reserved identifier `_`\n trait _ = Copy; //~ ERROR expected identifier, found reserved identifier `_`\n macro_rules! _ { () => {} } //~ ERROR expected identifier, found reserved identifier `_`\n-union _ { f: u8 } //~ ERROR expected one of `!` or `::`, found `_`\n+union _ { f: u8 } //~ ERROR expected one of `!` or `::`, found reserved identifier `_`\n \n fn main() {}"}, {"sha": "8814aa3527153d2b337acc591bed40fcc72d14b0", "filename": "src/test/ui/parser/underscore_item_not_const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Funderscore_item_not_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b0836df6f633eb1a4c02d15a8d942bfe885f172/src%2Ftest%2Fui%2Fparser%2Funderscore_item_not_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funderscore_item_not_const.stderr?ref=1b0836df6f633eb1a4c02d15a8d942bfe885f172", "patch": "@@ -82,7 +82,7 @@ error: expected identifier, found reserved identifier `_`\n LL | macro_rules! _ { () => {} }\n    |              ^ expected identifier, found reserved identifier\n \n-error: expected one of `!` or `::`, found `_`\n+error: expected one of `!` or `::`, found reserved identifier `_`\n   --> $DIR/underscore_item_not_const.rs:28:7\n    |\n LL | union _ { f: u8 }"}]}