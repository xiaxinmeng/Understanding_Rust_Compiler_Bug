{"sha": "3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlN2VlMzUzNWVmNmRhNTNlYmIyZTQ5YzljMGJjMDdkNGIwYzZlZWY=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-05T17:45:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-05T17:45:13Z"}, "message": "Rollup merge of #39528 - dylanmckay:llvm-4.0-diglobalvar, r=alexcrichton\n\n[LLVM 4.0] Support a debug info API change for LLVM 4.0\n\nInstead of directly creating a `DIGlobalVariable`, we now have to create\na `DIGlobalVariableExpression` which itself contains a reference to a\n'DIGlobalVariable'.\n\nThis is a straightforward change.\n\nIn the future, we should rename `DIGlobalVariable` in the FFI\nbindings, assuming we will only refer to `DIGlobalVariableExpression`\nand not `DIGlobalVariable`.", "tree": {"sha": "3e45a8a1fc26dc79299044062029a9ea2e37ea2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e45a8a1fc26dc79299044062029a9ea2e37ea2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef", "html_url": "https://github.com/rust-lang/rust/commit/3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e67bf92e3fb1321325d375933c4c0d2b233fef9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e67bf92e3fb1321325d375933c4c0d2b233fef9", "html_url": "https://github.com/rust-lang/rust/commit/4e67bf92e3fb1321325d375933c4c0d2b233fef9"}, {"sha": "768c6c081e4a8cac6b6f8eee5cde72ed13a7e87a", "url": "https://api.github.com/repos/rust-lang/rust/commits/768c6c081e4a8cac6b6f8eee5cde72ed13a7e87a", "html_url": "https://github.com/rust-lang/rust/commit/768c6c081e4a8cac6b6f8eee5cde72ed13a7e87a"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "8510b9f523cb5eb34af3910c2372a5511e8ae227", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef", "patch": "@@ -8,6 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// FIXME: Rename 'DIGlobalVariable' to 'DIGlobalVariableExpression'\n+// once support for LLVM 3.9 is dropped.\n+//\n+// This method was changed in this LLVM patch:\n+// https://reviews.llvm.org/D26769\n+\n use debuginfo::{DIBuilderRef, DIDescriptor, DIFile, DILexicalBlock, DISubprogram, DIType,\n                 DIBasicType, DIDerivedType, DICompositeType, DIScope, DIVariable,\n                 DIGlobalVariable, DIArray, DISubrange, DITemplateTypeParameter, DIEnumerator,"}, {"sha": "c7bcd2558186e6f94ef24a4e82d14bbedd9326bf", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=3e7ee3535ef6da53ebb2e49c9c0bc07d4b0c6eef", "patch": "@@ -588,7 +588,11 @@ extern \"C\" LLVMRustMetadataRef LLVMRustDIBuilderCreateStaticVariable(\n   }\n #endif\n \n+#if LLVM_VERSION_GE(4, 0)\n+  return wrap(Builder->createGlobalVariableExpression(\n+#else\n   return wrap(Builder->createGlobalVariable(\n+#endif\n       unwrapDI<DIDescriptor>(Context), Name, LinkageName,\n       unwrapDI<DIFile>(File), LineNo, unwrapDI<DIType>(Ty), IsLocalToUnit,\n #if LLVM_VERSION_GE(4, 0)"}]}