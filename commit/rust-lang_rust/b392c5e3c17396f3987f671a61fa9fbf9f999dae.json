{"sha": "b392c5e3c17396f3987f671a61fa9fbf9f999dae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzOTJjNWUzYzE3Mzk2ZjM5ODdmNjcxYTYxZmE5ZmJmOWY5OTlkYWU=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-16T17:14:01Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-16T17:14:01Z"}, "message": "use the identifier span for missing struct field", "tree": {"sha": "c753184750571679ad744ab1cdfffa45b4a16d66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c753184750571679ad744ab1cdfffa45b4a16d66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b392c5e3c17396f3987f671a61fa9fbf9f999dae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlyNLwEWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdG69B/93jCwATKNDBq97siDVGnBLWBeX\nx9hgALyyebijLabJO0uCV52nogIcMTOZ4EoGKp6WVA+TIwU4gGKcMgAebyQvs+G0\nhcXlyEdW2wFm9bXD4eZW23AEQ+ipCrvq88Ip26gZrwGjwtCH0UJ9mMxiarmiRb16\n0x5sp9rXEajjq6n2CzK8blNAWKRFaVhjjrx0gUILZMZ8IbmMydS4Pe7YT04L7l2P\nHdWFXwjf9c6scFoHNL5JUE7PvvIJO/gDPhYZ1M5KZaoS8CVfBGZ0boRme1Rj4OJz\nbFoyHC2/pRJvdTToGZwAM5YYbee8sADMQ64I5ZsFIbaapsToGwPGgkEv8KZj\n=D18A\n-----END PGP SIGNATURE-----", "payload": "tree c753184750571679ad744ab1cdfffa45b4a16d66\nparent 16e7e05e95a6a5a1e0dba54ae722274bd7d725f7\nauthor Andy Russell <arussell123@gmail.com> 1552756441 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1552756441 -0400\n\nuse the identifier span for missing struct field\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b392c5e3c17396f3987f671a61fa9fbf9f999dae", "html_url": "https://github.com/rust-lang/rust/commit/b392c5e3c17396f3987f671a61fa9fbf9f999dae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b392c5e3c17396f3987f671a61fa9fbf9f999dae/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16e7e05e95a6a5a1e0dba54ae722274bd7d725f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/16e7e05e95a6a5a1e0dba54ae722274bd7d725f7", "html_url": "https://github.com/rust-lang/rust/commit/16e7e05e95a6a5a1e0dba54ae722274bd7d725f7"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "87e0f7d201c17b3fe5656859220a958770582c3b", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=b392c5e3c17396f3987f671a61fa9fbf9f999dae", "patch": "@@ -971,7 +971,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                             self.field_ty(span, f, substs)\n                         })\n                         .unwrap_or_else(|| {\n-                            inexistent_fields.push((span, field.ident));\n+                            inexistent_fields.push(field.ident);\n                             no_field_errors = false;\n                             tcx.types.err\n                         })\n@@ -987,24 +987,24 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                 .collect::<Vec<_>>();\n         if inexistent_fields.len() > 0 {\n             let (field_names, t, plural) = if inexistent_fields.len() == 1 {\n-                (format!(\"a field named `{}`\", inexistent_fields[0].1), \"this\", \"\")\n+                (format!(\"a field named `{}`\", inexistent_fields[0]), \"this\", \"\")\n             } else {\n                 (format!(\"fields named {}\",\n                          inexistent_fields.iter()\n-                            .map(|(_, name)| format!(\"`{}`\", name))\n+                            .map(|ident| format!(\"`{}`\", ident))\n                             .collect::<Vec<String>>()\n                             .join(\", \")), \"these\", \"s\")\n             };\n-            let spans = inexistent_fields.iter().map(|(span, _)| *span).collect::<Vec<_>>();\n+            let spans = inexistent_fields.iter().map(|ident| ident.span).collect::<Vec<_>>();\n             let mut err = struct_span_err!(tcx.sess,\n                                            spans,\n                                            E0026,\n                                            \"{} `{}` does not have {}\",\n                                            kind_name,\n                                            tcx.item_path_str(variant.did),\n                                            field_names);\n-            if let Some((span, ident)) = inexistent_fields.last() {\n-                err.span_label(*span,\n+            if let Some(ident) = inexistent_fields.last() {\n+                err.span_label(ident.span,\n                                format!(\"{} `{}` does not have {} field{}\",\n                                        kind_name,\n                                        tcx.item_path_str(variant.did),\n@@ -1016,8 +1016,8 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                         find_best_match_for_name(input, &ident.as_str(), None);\n                     if let Some(suggested_name) = suggested_name {\n                         err.span_suggestion(\n-                            *span,\n-                            \"did you mean\",\n+                            ident.span,\n+                            \"a field with a similar name exists\",\n                             suggested_name.to_string(),\n                             Applicability::MaybeIncorrect,\n                         );"}, {"sha": "6efc7f0c06e11c58686239a14fa0949094fda6a1", "filename": "src/test/ui/issues/issue-17800.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr?ref=b392c5e3c17396f3987f671a61fa9fbf9f999dae", "patch": "@@ -2,10 +2,10 @@ error[E0026]: variant `MyOption::MySome` does not have a field named `x`\n   --> $DIR/issue-17800.rs:8:28\n    |\n LL |         MyOption::MySome { x: 42 } => (),\n-   |                            ^^^^^\n+   |                            ^\n    |                            |\n    |                            variant `MyOption::MySome` does not have this field\n-   |                            help: did you mean: `0`\n+   |                            help: a field with a similar name exists: `0`\n \n error: aborting due to previous error\n "}, {"sha": "4d4b977374ef943e8c2e98a5b9abff141e6e5091", "filename": "src/test/ui/issues/issue-51102.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fissues%2Fissue-51102.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fissues%2Fissue-51102.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51102.stderr?ref=b392c5e3c17396f3987f671a61fa9fbf9f999dae", "patch": "@@ -2,7 +2,7 @@ error[E0026]: struct `SimpleStruct` does not have a field named `state`\n   --> $DIR/issue-51102.rs:13:17\n    |\n LL |                 state: 0,\n-   |                 ^^^^^^^^ struct `SimpleStruct` does not have this field\n+   |                 ^^^^^ struct `SimpleStruct` does not have this field\n \n error[E0025]: field `no_state_here` bound multiple times in the pattern\n   --> $DIR/issue-51102.rs:24:17\n@@ -16,7 +16,7 @@ error[E0026]: variant `SimpleEnum::NoState` does not have a field named `state`\n   --> $DIR/issue-51102.rs:33:17\n    |\n LL |                 state: 0\n-   |                 ^^^^^^^^ variant `SimpleEnum::NoState` does not have this field\n+   |                 ^^^^^ variant `SimpleEnum::NoState` does not have this field\n \n error: aborting due to 3 previous errors\n "}, {"sha": "468cdf2dcf9218d4004d9b414d1adcb2b7f770ab", "filename": "src/test/ui/issues/issue-52717.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fissues%2Fissue-52717.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fissues%2Fissue-52717.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52717.stderr?ref=b392c5e3c17396f3987f671a61fa9fbf9f999dae", "patch": "@@ -5,7 +5,7 @@ LL |     A::A { fob } => { println!(\"{}\", fob); }\n    |            ^^^\n    |            |\n    |            variant `A::A` does not have this field\n-   |            help: did you mean: `foo`\n+   |            help: a field with a similar name exists: `foo`\n \n error: aborting due to previous error\n "}, {"sha": "ce51bbaa114fd5905487d4ff5e1c62758f4b7298", "filename": "src/test/ui/numeric/numeric-fields.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr?ref=b392c5e3c17396f3987f671a61fa9fbf9f999dae", "patch": "@@ -10,7 +10,7 @@ error[E0026]: struct `S` does not have a field named `0x1`\n   --> $DIR/numeric-fields.rs:7:17\n    |\n LL |         S{0: a, 0x1: b, ..} => {}\n-   |                 ^^^^^^ struct `S` does not have this field\n+   |                 ^^^ struct `S` does not have this field\n \n error: aborting due to 2 previous errors\n "}, {"sha": "565866a682adaf65afb71ea91a7254aa8ab7a62c", "filename": "src/test/ui/structs/struct-field-cfg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b392c5e3c17396f3987f671a61fa9fbf9f999dae/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr?ref=b392c5e3c17396f3987f671a61fa9fbf9f999dae", "patch": "@@ -22,7 +22,7 @@ error[E0026]: struct `Foo` does not have a field named `absent`\n   --> $DIR/struct-field-cfg.rs:16:42\n    |\n LL |     let Foo { present: (), #[cfg(all())] absent: () } = foo;\n-   |                                          ^^^^^^^^^^ struct `Foo` does not have this field\n+   |                                          ^^^^^^ struct `Foo` does not have this field\n \n error: aborting due to 4 previous errors\n "}]}