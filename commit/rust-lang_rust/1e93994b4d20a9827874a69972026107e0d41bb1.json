{"sha": "1e93994b4d20a9827874a69972026107e0d41bb1", "node_id": "C_kwDOAAsO6NoAKDFlOTM5OTRiNGQyMGE5ODI3ODc0YTY5OTcyMDI2MTA3ZTBkNDFiYjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-17T10:32:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-17T10:32:52Z"}, "message": "Rollup merge of #100489 - lcnr:is_knowable-Result, r=davidtwco\n\n`is_knowable` use `Result` instead of `Option`", "tree": {"sha": "ebe54bd814f874a31260e65da36867ff122329ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebe54bd814f874a31260e65da36867ff122329ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e93994b4d20a9827874a69972026107e0d41bb1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi/MPUCRBK7hj4Ov3rIwAAMEkIAK3AeELGg2YiFvZEiSvwhV4X\nAjBXmqT+Z2xNFJT0lfQrGwz4FlGtrxo0AcqHwLISa2EOQiH+cn7qHE8172cBN6jO\ngOVwbe77EZGSsVU2gdfpG7ePKd/QOt84h2OGf0/+xogrAEZ8yxOwOmLMpeH9lT8j\nlI3LVsLonnN5qgEhbkp4UkfTtB0sHbH+ybR7jW442qirNA0JtnktDOyj2p3ON/FN\n/QvO2JzZcbwzcl9gURPBTXgkFUPTRT2hhh3VUEHPxGqJVEbNUz4f4x5U89R+a2H6\ndrrRdk475hoxZYpUHDIhNbudhSDUlEk8hKHeXjzGTpW7x05LxATJ2Wz5Bf3xxXg=\n=Fw0D\n-----END PGP SIGNATURE-----\n", "payload": "tree ebe54bd814f874a31260e65da36867ff122329ae\nparent 1948288615bb75ba916169e3eaf5e2ad33c5e7d7\nparent 1cede2c126b69cf4e9a237908dec3c560ce0fa71\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1660732372 +0200\ncommitter GitHub <noreply@github.com> 1660732372 +0200\n\nRollup merge of #100489 - lcnr:is_knowable-Result, r=davidtwco\n\n`is_knowable` use `Result` instead of `Option`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e93994b4d20a9827874a69972026107e0d41bb1", "html_url": "https://github.com/rust-lang/rust/commit/1e93994b4d20a9827874a69972026107e0d41bb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e93994b4d20a9827874a69972026107e0d41bb1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1948288615bb75ba916169e3eaf5e2ad33c5e7d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1948288615bb75ba916169e3eaf5e2ad33c5e7d7", "html_url": "https://github.com/rust-lang/rust/commit/1948288615bb75ba916169e3eaf5e2ad33c5e7d7"}, {"sha": "1cede2c126b69cf4e9a237908dec3c560ce0fa71", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cede2c126b69cf4e9a237908dec3c560ce0fa71", "html_url": "https://github.com/rust-lang/rust/commit/1cede2c126b69cf4e9a237908dec3c560ce0fa71"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "985600d9ebcc2228638bec7a03a42d4699858e5e", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1e93994b4d20a9827874a69972026107e0d41bb1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e93994b4d20a9827874a69972026107e0d41bb1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=1e93994b4d20a9827874a69972026107e0d41bb1", "patch": "@@ -404,12 +404,12 @@ fn resolve_negative_obligation<'cx, 'tcx>(\n pub fn trait_ref_is_knowable<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     trait_ref: ty::TraitRef<'tcx>,\n-) -> Option<Conflict> {\n+) -> Result<(), Conflict> {\n     debug!(\"trait_ref_is_knowable(trait_ref={:?})\", trait_ref);\n     if orphan_check_trait_ref(tcx, trait_ref, InCrate::Remote).is_ok() {\n         // A downstream or cousin crate is allowed to implement some\n         // substitution of this trait-ref.\n-        return Some(Conflict::Downstream);\n+        return Err(Conflict::Downstream);\n     }\n \n     if trait_ref_is_local_or_fundamental(tcx, trait_ref) {\n@@ -418,7 +418,7 @@ pub fn trait_ref_is_knowable<'tcx>(\n         // allowed to implement a substitution of this trait ref, which\n         // means impls could only come from dependencies of this crate,\n         // which we already know about.\n-        return None;\n+        return Ok(());\n     }\n \n     // This is a remote non-fundamental trait, so if another crate\n@@ -431,10 +431,10 @@ pub fn trait_ref_is_knowable<'tcx>(\n     // we are an owner.\n     if orphan_check_trait_ref(tcx, trait_ref, InCrate::Local).is_ok() {\n         debug!(\"trait_ref_is_knowable: orphan check passed\");\n-        None\n+        Ok(())\n     } else {\n         debug!(\"trait_ref_is_knowable: nonlocal, nonfundamental, unowned\");\n-        Some(Conflict::Upstream)\n+        Err(Conflict::Upstream)\n     }\n }\n "}, {"sha": "d67bd6292b434534556ea19f1896f3597294e377", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e93994b4d20a9827874a69972026107e0d41bb1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e93994b4d20a9827874a69972026107e0d41bb1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=1e93994b4d20a9827874a69972026107e0d41bb1", "patch": "@@ -75,7 +75,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         &mut self,\n         stack: &TraitObligationStack<'o, 'tcx>,\n     ) -> SelectionResult<'tcx, SelectionCandidate<'tcx>> {\n-        if let Some(conflict) = self.is_knowable(stack) {\n+        if let Err(conflict) = self.is_knowable(stack) {\n             debug!(\"coherence stage: not knowable\");\n             if self.intercrate_ambiguity_causes.is_some() {\n                 debug!(\"evaluate_stack: intercrate_ambiguity_causes is some\");"}, {"sha": "46b50dd92f1ef7a3ed17fa20b66ccaf9b7b7657b", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e93994b4d20a9827874a69972026107e0d41bb1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e93994b4d20a9827874a69972026107e0d41bb1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=1e93994b4d20a9827874a69972026107e0d41bb1", "patch": "@@ -1265,11 +1265,11 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         Ok(Some(candidate))\n     }\n \n-    fn is_knowable<'o>(&mut self, stack: &TraitObligationStack<'o, 'tcx>) -> Option<Conflict> {\n+    fn is_knowable<'o>(&mut self, stack: &TraitObligationStack<'o, 'tcx>) -> Result<(), Conflict> {\n         debug!(\"is_knowable(intercrate={:?})\", self.intercrate);\n \n         if !self.intercrate || stack.obligation.polarity() == ty::ImplPolarity::Negative {\n-            return None;\n+            return Ok(());\n         }\n \n         let obligation = &stack.obligation;"}]}