{"sha": "d5316163b66e194b2418bfe2cdc43cf2cc61afc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MzE2MTYzYjY2ZTE5NGIyNDE4YmZlMmNkYzQzY2YyY2M2MWFmYzI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-22T23:39:33Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-23T00:07:46Z"}, "message": "Rustup to rust-lang/rust#66877", "tree": {"sha": "0ad29829dcdebdce2e6631aed2eb4a3043655e2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ad29829dcdebdce2e6631aed2eb4a3043655e2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5316163b66e194b2418bfe2cdc43cf2cc61afc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5316163b66e194b2418bfe2cdc43cf2cc61afc2", "html_url": "https://github.com/rust-lang/rust/commit/d5316163b66e194b2418bfe2cdc43cf2cc61afc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5316163b66e194b2418bfe2cdc43cf2cc61afc2/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d1225981177587fbb68d9c4902c770c3dbaafb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d1225981177587fbb68d9c4902c770c3dbaafb0", "html_url": "https://github.com/rust-lang/rust/commit/6d1225981177587fbb68d9c4902c770c3dbaafb0"}], "stats": {"total": 26, "additions": 7, "deletions": 19}, "files": [{"sha": "5d62a7d513564ebe7115651029bd2b0d99ea8602", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d5316163b66e194b2418bfe2cdc43cf2cc61afc2/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5316163b66e194b2418bfe2cdc43cf2cc61afc2/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=d5316163b66e194b2418bfe2cdc43cf2cc61afc2", "patch": "@@ -6,7 +6,7 @@ use rustc::hir::def::{DefKind, Res};\n use rustc::hir::*;\n use rustc::lint::LateContext;\n use rustc::ty::subst::{Subst, SubstsRef};\n-use rustc::ty::{self, Instance, Ty, TyCtxt};\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc::{bug, span_bug};\n use rustc_data_structures::sync::Lrc;\n use std::cmp::Ordering::{self, Equal};\n@@ -328,8 +328,6 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n \n     /// Lookup a possibly constant expression from a `ExprKind::Path`.\n     fn fetch_path(&mut self, qpath: &QPath, id: HirId) -> Option<Constant> {\n-        use rustc::mir::interpret::GlobalId;\n-\n         let res = self.tables.qpath_res(qpath, id);\n         match res {\n             Res::Def(DefKind::Const, def_id) | Res::Def(DefKind::AssocConst, def_id) => {\n@@ -339,13 +337,12 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                 } else {\n                     substs.subst(self.lcx.tcx, self.substs)\n                 };\n-                let instance = Instance::resolve(self.lcx.tcx, self.param_env, def_id, substs)?;\n-                let gid = GlobalId {\n-                    instance,\n-                    promoted: None,\n-                };\n \n-                let result = self.lcx.tcx.const_eval(self.param_env.and(gid)).ok()?;\n+                let result = self\n+                    .lcx\n+                    .tcx\n+                    .const_eval_resolve(self.param_env, def_id, substs, None)\n+                    .ok()?;\n                 let result = miri_to_const(&result);\n                 if result.is_some() {\n                     self.needed_resolution = true;"}, {"sha": "aaa391077aabd3b1df2b6ac9635754c847d69d92", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d5316163b66e194b2418bfe2cdc43cf2cc61afc2/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5316163b66e194b2418bfe2cdc43cf2cc61afc2/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=d5316163b66e194b2418bfe2cdc43cf2cc61afc2", "patch": "@@ -6,9 +6,7 @@ use crate::utils::span_lint;\n use rustc::declare_lint_pass;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use rustc::mir::interpret::GlobalId;\n use rustc::ty;\n-use rustc::ty::subst::InternalSubsts;\n use rustc::ty::util::IntTypeExt;\n use rustc_session::declare_tool_lint;\n use std::convert::TryFrom;\n@@ -48,15 +46,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnportableVariant {\n         if let ItemKind::Enum(def, _) = &item.kind {\n             for var in def.variants {\n                 if let Some(anon_const) = &var.disr_expr {\n-                    let param_env = ty::ParamEnv::empty();\n                     let def_id = cx.tcx.hir().body_owner_def_id(anon_const.body);\n-                    let substs = InternalSubsts::identity_for_item(cx.tcx, def_id);\n-                    let instance = ty::Instance::new(def_id, substs);\n-                    let c_id = GlobalId {\n-                        instance,\n-                        promoted: None,\n-                    };\n-                    let constant = cx.tcx.const_eval(param_env.and(c_id)).ok();\n+                    let constant = cx.tcx.const_eval_poly(def_id).ok();\n                     if let Some(Constant::Int(val)) = constant.and_then(miri_to_const) {\n                         let mut ty = cx.tcx.type_of(def_id);\n                         if let ty::Adt(adt, _) = ty.kind {"}]}