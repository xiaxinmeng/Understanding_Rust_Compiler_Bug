{"sha": "9b443289cf32cbcff16768614340f0c844675340", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNDQzMjg5Y2YzMmNiY2ZmMTY3Njg2MTQzNDBmMGM4NDQ2NzUzNDA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-05T23:21:03Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-05T23:39:26Z"}, "message": "Register new snapshots", "tree": {"sha": "ded9adede0c133b63c4cac911a4d58b76ffadf07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded9adede0c133b63c4cac911a4d58b76ffadf07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b443289cf32cbcff16768614340f0c844675340", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b443289cf32cbcff16768614340f0c844675340", "html_url": "https://github.com/rust-lang/rust/commit/9b443289cf32cbcff16768614340f0c844675340", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b443289cf32cbcff16768614340f0c844675340/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f4c11be3b9706d1ba0e1b74b89de1478410a56f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4c11be3b9706d1ba0e1b74b89de1478410a56f", "html_url": "https://github.com/rust-lang/rust/commit/6f4c11be3b9706d1ba0e1b74b89de1478410a56f"}], "stats": {"total": 65, "additions": 12, "deletions": 53}, "files": [{"sha": "ce774a66381029d408d06cdd261118181acba4be", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/9b443289cf32cbcff16768614340f0c844675340/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b443289cf32cbcff16768614340f0c844675340/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=9b443289cf32cbcff16768614340f0c844675340", "patch": "@@ -832,53 +832,3 @@ impl<F,A,R> FnOnce<A,R> for F\n         self.call_mut(args)\n     }\n }\n-\n-#[cfg(stage0)]\n-mod fn_impls {\n-    use super::Fn;\n-\n-    impl<Result> Fn<(),Result> for extern \"Rust\" fn() -> Result {\n-        #[allow(non_snake_case)]\n-        extern \"rust-call\" fn call(&self, _args: ()) -> Result {\n-            (*self)()\n-        }\n-    }\n-\n-    impl<Result,A0> Fn<(A0,),Result> for extern \"Rust\" fn(A0) -> Result {\n-        #[allow(non_snake_case)]\n-        extern \"rust-call\" fn call(&self, args: (A0,)) -> Result {\n-            let (a0,) = args;\n-            (*self)(a0)\n-        }\n-    }\n-\n-    macro_rules! def_fn(\n-        ($($args:ident)*) => (\n-            impl<Result$(,$args)*>\n-            Fn<($($args,)*),Result>\n-            for extern \"Rust\" fn($($args: $args,)*) -> Result {\n-                #[allow(non_snake_case)]\n-                extern \"rust-call\" fn call(&self, args: ($($args,)*)) -> Result {\n-                    let ($($args,)*) = args;\n-                    (*self)($($args,)*)\n-                }\n-            }\n-        )\n-    )\n-\n-    def_fn!(A0 A1)\n-    def_fn!(A0 A1 A2)\n-    def_fn!(A0 A1 A2 A3)\n-    def_fn!(A0 A1 A2 A3 A4)\n-    def_fn!(A0 A1 A2 A3 A4 A5)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14)\n-    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15)\n-}"}, {"sha": "b282db5ba2b3fe37e818db7334b8b273dd8b5bd9", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b443289cf32cbcff16768614340f0c844675340/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b443289cf32cbcff16768614340f0c844675340/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=9b443289cf32cbcff16768614340f0c844675340", "patch": "@@ -764,7 +764,7 @@ impl<'a> StringReader<'a> {\n         }\n     }\n \n-    // SNAP c9f6d69\n+    // SNAP 361baab\n     #[allow(unused)]\n     fn old_escape_warning(&mut self, sp: Span) {\n         self.span_diagnostic\n@@ -797,15 +797,15 @@ impl<'a> StringReader<'a> {\n                                     self.scan_unicode_escape(delim)\n                                 } else {\n                                     let res = self.scan_hex_digits(4u, delim, false);\n-                                    // SNAP c9f6d69\n+                                    // SNAP 361baab\n                                     //let sp = codemap::mk_sp(escaped_pos, self.last_pos);\n                                     //self.old_escape_warning(sp);\n                                     res\n                                 }\n                             }\n                             'U' if !ascii_only => {\n                                 let res = self.scan_hex_digits(8u, delim, false);\n-                                // SNAP c9f6d69\n+                                // SNAP 361baab\n                                 //let sp = codemap::mk_sp(escaped_pos, self.last_pos);\n                                 //self.old_escape_warning(sp);\n                                 res"}, {"sha": "a1a840b4deb1b50ec58d351f3657e0d8ea0a86ce", "filename": "src/snapshots.txt", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9b443289cf32cbcff16768614340f0c844675340/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9b443289cf32cbcff16768614340f0c844675340/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=9b443289cf32cbcff16768614340f0c844675340", "patch": "@@ -1,3 +1,12 @@\n+S 2014-12-05 361baab\n+  freebsd-x86_64 73cbae4168538a07facd81cca45ed672badb7c3a\n+  linux-i386 211cf0fbdbc7045b765e7b92d92049bbe6788513\n+  linux-x86_64 f001cec306fc1ac77504884acf5dac2e7b39e164\n+  macos-i386 751dc02fac96114361c56eb45ce52e7a58d555e0\n+  macos-x86_64 58cad0275d7b33412501d7dd3386b924d2304e83\n+  winnt-i386 872c56b88cebd7d590fd00bcbd264f0003b4427b\n+  winnt-x86_64 2187d8b3187c03f95cd4e56a582f55ec0cfa8df9\n+\n S 2014-11-21 c9f6d69\n   freebsd-x86_64 0ef316e7c369177de043e69e964418bd637cbfc0\n   linux-i386 c8342e762a1720be939ed7c6a39bdaa27892f66f"}]}