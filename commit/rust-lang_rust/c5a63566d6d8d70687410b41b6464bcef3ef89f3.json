{"sha": "c5a63566d6d8d70687410b41b6464bcef3ef89f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YTYzNTY2ZDZkOGQ3MDY4NzQxMGI0MWI2NDY0YmNlZjNlZjg5ZjM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-07T09:59:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-11T10:04:49Z"}, "message": "allow the lint if a few UB-demonstrating doc tests", "tree": {"sha": "aef729d75f3b4194b49e9c14c686bee15428c733", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aef729d75f3b4194b49e9c14c686bee15428c733"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5a63566d6d8d70687410b41b6464bcef3ef89f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a63566d6d8d70687410b41b6464bcef3ef89f3", "html_url": "https://github.com/rust-lang/rust/commit/c5a63566d6d8d70687410b41b6464bcef3ef89f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5a63566d6d8d70687410b41b6464bcef3ef89f3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3972d05fec01cd46c207f6e98aca5ee20102e17a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3972d05fec01cd46c207f6e98aca5ee20102e17a", "html_url": "https://github.com/rust-lang/rust/commit/3972d05fec01cd46c207f6e98aca5ee20102e17a"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "1bbea02e0c7c984b8a6d3a12c031368f01c6cd17", "filename": "src/libcore/mem/maybe_uninit.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c5a63566d6d8d70687410b41b6464bcef3ef89f3/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5a63566d6d8d70687410b41b6464bcef3ef89f3/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs?ref=c5a63566d6d8d70687410b41b6464bcef3ef89f3", "patch": "@@ -13,6 +13,7 @@ use crate::mem::ManuallyDrop;\n /// ever gets used to access memory:\n ///\n /// ```rust,no_run\n+/// # #![allow(invalid_value)]\n /// use std::mem::{self, MaybeUninit};\n ///\n /// let x: &i32 = unsafe { mem::zeroed() }; // undefined behavior!\n@@ -27,6 +28,7 @@ use crate::mem::ManuallyDrop;\n /// always be `true` or `false`. Hence, creating an uninitialized `bool` is undefined behavior:\n ///\n /// ```rust,no_run\n+/// # #![allow(invalid_value)]\n /// use std::mem::{self, MaybeUninit};\n ///\n /// let b: bool = unsafe { mem::uninitialized() }; // undefined behavior!\n@@ -40,6 +42,7 @@ use crate::mem::ManuallyDrop;\n /// which otherwise can hold any *fixed* bit pattern:\n ///\n /// ```rust,no_run\n+/// # #![allow(invalid_value)]\n /// use std::mem::{self, MaybeUninit};\n ///\n /// let x: i32 = unsafe { mem::uninitialized() }; // undefined behavior!"}, {"sha": "16cfe0f7683a8e9cac1f7d66d5019d3e358079ff", "filename": "src/libcore/mem/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c5a63566d6d8d70687410b41b6464bcef3ef89f3/src%2Flibcore%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5a63566d6d8d70687410b41b6464bcef3ef89f3/src%2Flibcore%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmod.rs?ref=c5a63566d6d8d70687410b41b6464bcef3ef89f3", "patch": "@@ -445,7 +445,8 @@ pub const fn needs_drop<T>() -> bool {\n ///\n /// *Incorrect* usage of this function: initializing a reference with zero.\n ///\n-/// ```no_run\n+/// ```rust,no_run\n+/// # #![allow(invalid_value)]\n /// use std::mem;\n ///\n /// let _x: &i32 = unsafe { mem::zeroed() }; // Undefined behavior!"}]}