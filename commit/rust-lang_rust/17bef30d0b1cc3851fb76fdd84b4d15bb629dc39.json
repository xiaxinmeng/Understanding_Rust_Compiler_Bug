{"sha": "17bef30d0b1cc3851fb76fdd84b4d15bb629dc39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YmVmMzBkMGIxY2MzODUxZmI3NmZkZDg0YjRkMTViYjYyOWRjMzk=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-31T16:27:27Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-07T23:31:59Z"}, "message": "Settings to function", "tree": {"sha": "dfbf336e69c1252705cd0269fd2417ab79e2575e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfbf336e69c1252705cd0269fd2417ab79e2575e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17bef30d0b1cc3851fb76fdd84b4d15bb629dc39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17bef30d0b1cc3851fb76fdd84b4d15bb629dc39", "html_url": "https://github.com/rust-lang/rust/commit/17bef30d0b1cc3851fb76fdd84b4d15bb629dc39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17bef30d0b1cc3851fb76fdd84b4d15bb629dc39/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb40d5fa498603f041dcf1092099c0b93928e442", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb40d5fa498603f041dcf1092099c0b93928e442", "html_url": "https://github.com/rust-lang/rust/commit/bb40d5fa498603f041dcf1092099c0b93928e442"}], "stats": {"total": 55, "additions": 19, "deletions": 36}, "files": [{"sha": "2eb2ba4e2b20194d2ce95c95741ec42d41812a5f", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 19, "deletions": 36, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/17bef30d0b1cc3851fb76fdd84b4d15bb629dc39/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17bef30d0b1cc3851fb76fdd84b4d15bb629dc39/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=17bef30d0b1cc3851fb76fdd84b4d15bb629dc39", "patch": "@@ -1801,42 +1801,25 @@ fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n }\n }\n \n-#[derive(Debug)]\n-struct Settings<'a> {\n+fn settings(root_path: &str, suffix: &str) -> String {\n     // (id, explanation, default value)\n-    settings: Vec<(&'static str, &'static str, bool)>,\n-    root_path: &'a str,\n-    suffix: &'a str,\n-}\n-\n-impl<'a> Settings<'a> {\n-    pub fn new(root_path: &'a str, suffix: &'a str) -> Settings<'a> {\n-        Settings {\n-            settings: vec![\n-                (\"item-declarations\", \"Auto-hide item declarations.\", true),\n-                (\"item-attributes\", \"Auto-hide item attributes.\", true),\n-                (\"trait-implementations\", \"Auto-hide trait implementations documentation\",\n-                 true),\n-                (\"method-docs\", \"Auto-hide item methods' documentation\", false),\n-                (\"go-to-only-result\", \"Directly go to item in search if there is only one result\",\n-                 false),\n-                (\"line-numbers\", \"Show line numbers on code examples\", false),\n-            ],\n-            root_path,\n-            suffix,\n-        }\n-    }\n-}\n-\n-impl<'a> fmt::Display for Settings<'a> {\n-fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-    write!(f,\n+    let settings = [\n+        (\"item-declarations\", \"Auto-hide item declarations.\", true),\n+        (\"item-attributes\", \"Auto-hide item attributes.\", true),\n+        (\"trait-implementations\", \"Auto-hide trait implementations documentation\",\n+            true),\n+        (\"method-docs\", \"Auto-hide item methods' documentation\", false),\n+        (\"go-to-only-result\", \"Directly go to item in search if there is only one result\",\n+            false),\n+        (\"line-numbers\", \"Show line numbers on code examples\", false),\n+    ];\n+    format!(\n \"<h1 class='fqn'>\\\n     <span class='in-band'>Rustdoc settings</span>\\\n </h1>\\\n <div class='settings'>{}</div>\\\n <script src='{}settings{}.js'></script>\",\n-            self.settings.iter()\n+            settings.iter()\n                         .map(|(id, text, enabled)| {\n                             format!(\"<div class='setting-line'>\\\n                                             <label class='toggle'>\\\n@@ -1847,9 +1830,8 @@ fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n                                         </div>\", id, if *enabled { \" checked\" } else { \"\" }, text)\n                         })\n                         .collect::<String>(),\n-            self.root_path,\n-            self.suffix)\n-}\n+            root_path,\n+            suffix)\n }\n \n impl Context {\n@@ -1924,8 +1906,6 @@ impl Context {\n         self.shared.fs.write(&final_file, v.as_bytes())?;\n \n         // Generating settings page.\n-        let settings = Settings::new(self.shared.static_root_path.as_deref().unwrap_or(\"./\"),\n-                                     &self.shared.resource_suffix);\n         page.title = \"Rustdoc settings\";\n         page.description = \"Settings of Rustdoc\";\n         page.root_path = \"./\";\n@@ -1935,7 +1915,10 @@ impl Context {\n         themes.push(PathBuf::from(\"settings.css\"));\n         let v = layout::render(\n             &self.shared.layout,\n-            &page, sidebar, |buf: &mut Buffer| buf.from_display(settings),\n+            &page, sidebar, settings(\n+                self.shared.static_root_path.as_deref().unwrap_or(\"./\"),\n+                &self.shared.resource_suffix\n+            ),\n             &themes);\n         self.shared.fs.write(&settings_file, v.as_bytes())?;\n "}]}