{"sha": "6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMTllYmUxMjg4YzFmYzZmYTVkOWIxYzY1ZGEyNTZlZWRlN2E3N2M=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-11-03T19:15:15Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-11-03T19:36:18Z"}, "message": "Added tests for RFC 2008.", "tree": {"sha": "a11c51e4491bb7a1cd2ec3714fe0535f82443919", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a11c51e4491bb7a1cd2ec3714fe0535f82443919"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJZ/MUyAAoJEAF2C0+fU/FUNKYQALa/qifcdPRAThaiwpWfS6cQ\nKnF55e2LXekLXhx8XBRJuPaNweM53Ij7SOuvWPU1ikXsz5IEcTreydL1+qP+oTJq\ngICzbWD3MR/RzvEDk7ipqWu/YjJjSHT6ZExKaSyLjaELklSJQQnnH3Ceu3NOJ+XL\nS+n2y0w+ELlmSIE3V6tjucGuDKpjSvjCk1Y63BNhqwkyuf8sQuOYqaVApJ0XkQZp\n5/86XqViJwO8gR73To4hkcztKDAHRAlOEOnrBJkpNiVDyy78H/BfrV/tzxKFtcg8\nlKvDc+sgPt7OnL2F+gZJZmQ4LoR0neuUXc6gd+4k3e2mqwo5y03Pkw9uJZKYKnlx\nlw2yL9jErwBg8JAqvBxY9vKwDPFp07rG0ZiDGKZFUYjGX0nG8ae9ta1paaFq3XJD\ndli+mCfVSlM1u9AZKUffjjEFEt4WH9oJ6+6t+G7I7+pWXBCbCnOIJkGSDZ+A+d2F\nMgfpaZjKtr5GU3Kmfz8rwWyPxlXmgG1tf8hXx8CIO9VnS/pjuK7KrbELNyYYUgVm\nHqt9ODDbdOM04nyL9Ij5P8uf3zg9fZOYwEe3/7XADNx9NcAfc17udr8QBEYQxtSo\nJ60jseVn3fRyfdT4uPuJVBM0jyNz0TOu/EqTW8SHB6bVXQs8SXFfoHo9c3cAxD+6\nbgpfbG6EtOXb4upH3FAI\n=he+e\n-----END PGP SIGNATURE-----", "payload": "tree a11c51e4491bb7a1cd2ec3714fe0535f82443919\nparent d51ea538e4eddbf0e0d968484a3e980db239549c\nauthor David Wood <david@davidtw.co> 1509736515 +0000\ncommitter David Wood <david@davidtw.co> 1509737778 +0000\n\nAdded tests for RFC 2008.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "html_url": "https://github.com/rust-lang/rust/commit/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d51ea538e4eddbf0e0d968484a3e980db239549c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d51ea538e4eddbf0e0d968484a3e980db239549c", "html_url": "https://github.com/rust-lang/rust/commit/d51ea538e4eddbf0e0d968484a3e980db239549c"}], "stats": {"total": 480, "additions": 480, "deletions": 0}, "files": [{"sha": "d2711084a4d48d06cb24a9c8a1b687a1c57ca42e", "filename": "src/test/compile-fail/feature-gate-non_exhaustive.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Ffeature-gate-non_exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Ffeature-gate-non_exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-non_exhaustive.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//#![feature(non_exhaustive)]\n+\n+#[non_exhaustive] //~ERROR non exhaustive is an experimental feature (see issue #44109)\n+pub enum NonExhaustiveEnum {\n+    Unit,\n+    Tuple(u32),\n+    Struct { field: u32 }\n+}\n+\n+fn main() { }"}, {"sha": "12d1bf9ea910499d349b56cf5e99b06580c44960", "filename": "src/test/compile-fail/rfc-2008-non-exhaustive/auxiliary/enums.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+#![feature(non_exhaustive)]\n+\n+#[non_exhaustive]\n+pub enum NonExhaustiveEnum {\n+    Unit,\n+    Tuple(u32),\n+    Struct { field: u32 }\n+}"}, {"sha": "4d083cc5315aa5b15d4c6529621da7956e78185b", "filename": "src/test/compile-fail/rfc-2008-non-exhaustive/auxiliary/structs.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fstructs.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(non_exhaustive)]\n+\n+#[non_exhaustive]\n+pub struct NormalStruct {\n+    pub first_field: u16,\n+    pub second_field: u16,\n+}\n+\n+#[non_exhaustive]\n+pub struct UnitStruct;\n+\n+#[non_exhaustive]\n+pub struct TupleStruct(pub u16, pub u16);\n+\n+#[derive(Debug)]\n+#[non_exhaustive]\n+pub struct FunctionalRecord {\n+    pub first_field: u16,\n+    pub second_field: u16,\n+    pub third_field: bool\n+}\n+\n+impl Default for FunctionalRecord {\n+    fn default() -> FunctionalRecord {\n+        FunctionalRecord { first_field: 640, second_field: 480, third_field: false }\n+    }\n+}"}, {"sha": "d04c1073ad9b357fc615eaa979a8193abaa18766", "filename": "src/test/compile-fail/rfc-2008-non-exhaustive/auxiliary/variants.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fvariants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fvariants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fvariants.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+#![feature(non_exhaustive)]\n+\n+pub enum NonExhaustiveVariants {\n+    #[non_exhaustive] Unit,\n+    #[non_exhaustive] Tuple(u32),\n+    #[non_exhaustive] Struct { field: u32 }\n+}"}, {"sha": "0c19210e4a0ed9900fad4f19a19d1943fac247c1", "filename": "src/test/compile-fail/rfc-2008-non-exhaustive/enum.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fenum.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:enums.rs\n+extern crate enums;\n+\n+use enums::NonExhaustiveEnum;\n+\n+fn main() {\n+    let enum_unit = NonExhaustiveEnum::Unit;\n+\n+    match enum_unit {\n+        //~^ ERROR non-exhaustive patterns: `_` not covered [E0004]\n+        NonExhaustiveEnum::Unit => \"first\",\n+        NonExhaustiveEnum::Tuple(_) => \"second\",\n+        NonExhaustiveEnum::Struct { .. } => \"third\"\n+    };\n+}"}, {"sha": "74c9c7c61ace8ac083be9fe01dd4f5e375704f4a", "filename": "src/test/compile-fail/rfc-2008-non-exhaustive/structs.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fstructs.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:structs.rs\n+extern crate structs;\n+\n+use structs::{NormalStruct, UnitStruct, TupleStruct, FunctionalRecord};\n+\n+fn main() {\n+    let fr = FunctionalRecord {\n+    //~^ ERROR cannot create non-exhaustive struct\n+        first_field: 1920,\n+        second_field: 1080,\n+        ..FunctionalRecord::default()\n+    };\n+\n+    let ns = NormalStruct { first_field: 640, second_field: 480 };\n+    //~^ ERROR cannot create non-exhaustive struct\n+\n+    let NormalStruct { first_field, second_field } = ns;\n+    //~^ ERROR `..` required with struct marked as non-exhaustive\n+\n+    let ts = TupleStruct(640, 480);\n+    //~^ ERROR expected function, found struct `TupleStruct` [E0423]\n+\n+    let ts_explicit = structs::TupleStruct(640, 480);\n+    //~^ ERROR tuple struct `TupleStruct` is private [E0603]\n+\n+    let TupleStruct { 0: first_field, 1: second_field } = ts;\n+    //~^ ERROR `..` required with struct marked as non-exhaustive\n+\n+    let us = UnitStruct;\n+    //~^ ERROR expected value, found struct `UnitStruct` [E0423]\n+\n+    let us_explicit = structs::UnitStruct;\n+    //~^ ERROR unit struct `UnitStruct` is private [E0603]\n+\n+    let UnitStruct { } = us;\n+    //~^ ERROR `..` required with struct marked as non-exhaustive\n+}"}, {"sha": "d1b65ac1f3e523225542f16ba6c80c97bcbabe0d", "filename": "src/test/compile-fail/rfc-2008-non-exhaustive/variants.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fvariants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fvariants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fvariants.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:variants.rs\n+extern crate variants;\n+\n+use variants::NonExhaustiveVariants;\n+\n+/*\n+ * The initial implementation of #[non_exhaustive] (RFC 2008) does not include support for\n+ * variants. See issue #44109 and PR 45394.\n+ */\n+// ignore-test\n+\n+fn main() {\n+    let variant_struct = NonExhaustiveVariants::Struct { field: 640 };\n+    //~^ ERROR cannot create non-exhaustive variant\n+\n+    let variant_tuple = NonExhaustiveVariants::Tuple { 0: 640 };\n+    //~^ ERROR cannot create non-exhaustive variant\n+\n+    match variant_struct {\n+        NonExhaustiveVariants::Unit => \"\",\n+        NonExhaustiveVariants::Tuple(fe_tpl) => \"\",\n+        //~^ ERROR `..` required with variant marked as non-exhaustive\n+        NonExhaustiveVariants::Struct { field } => \"\"\n+        //~^ ERROR `..` required with variant marked as non-exhaustive\n+    };\n+}"}, {"sha": "f4e4b1bb84b8bf2f47da29fb8bc9154850d58790", "filename": "src/test/compile-fail/rfc-2008-non-exhaustive/variants_create.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fvariants_create.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fvariants_create.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Fvariants_create.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(non_exhaustive)]\n+\n+/*\n+ * The initial implementation of #[non_exhaustive] (RFC 2008) does not include support for\n+ * variants. See issue #44109 and PR 45394.\n+ */\n+\n+pub enum NonExhaustiveVariants {\n+    #[non_exhaustive] Unit,\n+    //~^ ERROR #[non_exhaustive] is not yet supported on variants\n+    #[non_exhaustive] Tuple(u32),\n+    //~^ ERROR #[non_exhaustive] is not yet supported on variants\n+    #[non_exhaustive] Struct { field: u32 }\n+    //~^ ERROR #[non_exhaustive] is not yet supported on variants\n+}\n+\n+fn main() { }"}, {"sha": "12d1bf9ea910499d349b56cf5e99b06580c44960", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/auxiliary/enums.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+#![feature(non_exhaustive)]\n+\n+#[non_exhaustive]\n+pub enum NonExhaustiveEnum {\n+    Unit,\n+    Tuple(u32),\n+    Struct { field: u32 }\n+}"}, {"sha": "a2c6f8c05e2c9fc881de2c5838db631baf2196b9", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/auxiliary/structs.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fstructs.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(non_exhaustive)]\n+\n+#[non_exhaustive]\n+pub struct NormalStruct {\n+    pub first_field: u16,\n+    pub second_field: u16,\n+}\n+\n+#[non_exhaustive]\n+pub struct UnitStruct;\n+\n+#[non_exhaustive]\n+pub struct TupleStruct (pub u16, pub u16);"}, {"sha": "d04c1073ad9b357fc615eaa979a8193abaa18766", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/auxiliary/variants.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fvariants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fvariants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fvariants.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+#![feature(non_exhaustive)]\n+\n+pub enum NonExhaustiveVariants {\n+    #[non_exhaustive] Unit,\n+    #[non_exhaustive] Tuple(u32),\n+    #[non_exhaustive] Struct { field: u32 }\n+}"}, {"sha": "aaee70d6d80ce91755d65bacd1961097aa75a006", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/enums.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fenums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fenums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fenums.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:enums.rs\n+extern crate enums;\n+\n+use enums::NonExhaustiveEnum;\n+\n+fn main() {\n+    let enum_unit = NonExhaustiveEnum::Unit;\n+\n+    match enum_unit {\n+        NonExhaustiveEnum::Unit => 1,\n+        NonExhaustiveEnum::Tuple(_) => 2,\n+        // This particular arm tests that a enum marked as non-exhaustive\n+        // will not error if its variants are matched exhaustively.\n+        NonExhaustiveEnum::Struct { field } => field,\n+        _ => 0 // no error with wildcard\n+    };\n+\n+    match enum_unit {\n+        _ => \"no error with only wildcard\"\n+    };\n+}"}, {"sha": "8f1ba364b0e2bd6cc5aa136b536d2a634f783ee4", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/enums_same_crate.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fenums_same_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fenums_same_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fenums_same_crate.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(non_exhaustive)]\n+\n+#[non_exhaustive]\n+pub enum NonExhaustiveEnum {\n+    Unit,\n+    Tuple(u32),\n+    Struct { field: u32 }\n+}\n+\n+fn main() {\n+    let enum_unit = NonExhaustiveEnum::Unit;\n+\n+    match enum_unit {\n+        NonExhaustiveEnum::Unit => \"first\",\n+        NonExhaustiveEnum::Tuple(_) => \"second\",\n+        NonExhaustiveEnum::Struct { .. } => \"third\",\n+    };\n+}"}, {"sha": "bb65e10da27bf1ebb064c11a6427a466114ac5fe", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/structs.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fstructs.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:structs.rs\n+extern crate structs;\n+\n+use structs::{NormalStruct, UnitStruct, TupleStruct};\n+\n+// We only test matching here as we cannot create non-exhaustive\n+// structs from another crate. ie. they'll never pass in run-pass tests.\n+\n+fn match_structs(ns: NormalStruct, ts: TupleStruct, us: UnitStruct) {\n+    let NormalStruct { first_field, second_field, .. } = ns;\n+\n+    let TupleStruct { 0: first, 1: second, .. } = ts;\n+\n+    let UnitStruct { .. } = us;\n+}\n+\n+fn main() { }"}, {"sha": "175782f10fc91964b89e12b9e8644d1ca12ae18a", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/structs_same_crate.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fstructs_same_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fstructs_same_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fstructs_same_crate.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(non_exhaustive)]\n+\n+#[non_exhaustive]\n+pub struct NormalStruct {\n+    pub first_field: u16,\n+    pub second_field: u16,\n+}\n+\n+#[non_exhaustive]\n+pub struct UnitStruct;\n+\n+#[non_exhaustive]\n+pub struct TupleStruct (pub u16, pub u16);\n+\n+fn main() {\n+    let ns = NormalStruct { first_field: 640, second_field: 480 };\n+\n+    let NormalStruct { first_field, second_field } = ns;\n+\n+    let ts = TupleStruct { 0: 340, 1: 480 };\n+    let ts_constructor = TupleStruct(340, 480);\n+\n+    let TupleStruct { 0: first, 1: second } = ts;\n+    let TupleStruct(first, second) = ts_constructor;\n+\n+    let us = UnitStruct {};\n+    let us_constructor = UnitStruct;\n+\n+    let UnitStruct { } = us;\n+}"}, {"sha": "2658c59a6998506d7ccbfad47b6ff8ca5df62512", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/variants.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fvariants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fvariants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fvariants.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:variants.rs\n+extern crate variants;\n+\n+use variants::NonExhaustiveVariants;\n+\n+/*\n+ * The initial implementation of #[non_exhaustive] (RFC 2008) does not include support for\n+ * variants. See issue #44109 and PR 45394.\n+ */\n+// ignore-test\n+\n+fn main() {\n+    let variant_tuple = NonExhaustiveVariants::Tuple { 0: 340 };\n+    let variant_struct = NonExhaustiveVariants::Struct { field: 340 };\n+\n+    match variant_struct {\n+        NonExhaustiveVariants::Unit => \"\",\n+        NonExhaustiveVariants::Struct { field, .. } => \"\",\n+        NonExhaustiveVariants::Tuple(fe_tpl, ..) => \"\"\n+    };\n+}"}, {"sha": "a1c376c17985d3ebe8a7cde85e61c943cae4939f", "filename": "src/test/run-pass/rfc-2008-non-exhaustive/variants_same_crate.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fvariants_same_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fvariants_same_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2008-non-exhaustive%2Fvariants_same_crate.rs?ref=6c19ebe1288c1fc6fa5d9b1c65da256eede7a77c", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(non_exhaustive)]\n+\n+/*\n+ * The initial implementation of #[non_exhaustive] (RFC 2008) does not include support for\n+ * variants. See issue #44109 and PR 45394.\n+ */\n+// ignore-test\n+\n+pub enum NonExhaustiveVariants {\n+    #[non_exhaustive] Unit,\n+    #[non_exhaustive] Tuple(u32),\n+    #[non_exhaustive] Struct { field: u32 }\n+}\n+\n+fn main() {\n+    let variant_tuple = NonExhaustiveVariants::Tuple(340);\n+    let variant_struct = NonExhaustiveVariants::Struct { field: 340 };\n+\n+    match variant_tuple {\n+        NonExhaustiveVariants::Unit => \"\",\n+        NonExhaustiveVariants::Tuple(fe_tpl) => \"\",\n+        NonExhaustiveVariants::Struct { field } => \"\"\n+    };\n+}"}]}