{"sha": "a85e035038b2850cd65b9fa53cbccd2e00cf9153", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NWUwMzUwMzhiMjg1MGNkNjViOWZhNTNjYmNjZDJlMDBjZjkxNTM=", "commit": {"author": {"name": "David Rajchenbach-Teller", "email": "dteller@mozilla.com", "date": "2011-10-17T12:44:29Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-17T18:22:57Z"}, "message": "[Lib] rand.rs: type rng now defines next_float", "tree": {"sha": "57f1f93ff1abb6b280b13b4015bbd97fd960cf1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57f1f93ff1abb6b280b13b4015bbd97fd960cf1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a85e035038b2850cd65b9fa53cbccd2e00cf9153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a85e035038b2850cd65b9fa53cbccd2e00cf9153", "html_url": "https://github.com/rust-lang/rust/commit/a85e035038b2850cd65b9fa53cbccd2e00cf9153", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a85e035038b2850cd65b9fa53cbccd2e00cf9153/comments", "author": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eba88ef3ea4a50247961075c1487650dbcf86262", "url": "https://api.github.com/repos/rust-lang/rust/commits/eba88ef3ea4a50247961075c1487650dbcf86262", "html_url": "https://github.com/rust-lang/rust/commit/eba88ef3ea4a50247961075c1487650dbcf86262"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "b4e5ebc3058ffc834626cc8830e945c0bdd469a6", "filename": "src/lib/rand.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a85e035038b2850cd65b9fa53cbccd2e00cf9153/src%2Flib%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85e035038b2850cd65b9fa53cbccd2e00cf9153/src%2Flib%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Frand.rs?ref=a85e035038b2850cd65b9fa53cbccd2e00cf9153", "patch": "@@ -14,13 +14,21 @@ native \"rust\" mod rustrt {\n type rng =\n     obj {\n         fn next() -> u32;\n+        fn next_float() -> float;\n     };\n \n resource rand_res(c: rustrt::rctx) { rustrt::rand_free(c); }\n \n fn mk_rng() -> rng {\n     obj rt_rng(c: @rand_res) {\n         fn next() -> u32 { ret rustrt::rand_next(**c); }\n+        fn next_float() -> float {\n+          let u1 = rustrt::rand_next(**c) as float;\n+          let u2 = rustrt::rand_next(**c) as float;\n+          let u3 = rustrt::rand_next(**c) as float;\n+          let scale = u32::max_value() as float;\n+          ret ((u1 / scale + u2) / scale + u3) / scale;\n+        }\n     }\n     ret rt_rng(@rand_res(rustrt::rand_new()));\n }"}]}