{"sha": "2dd45b73172bf4ef8f60e8ed32588d688bc27fb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZDQ1YjczMTcyYmY0ZWY4ZjYwZThlZDMyNTg4ZDY4OGJjMjdmYjE=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2017-02-19T15:14:30Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2017-02-19T15:14:30Z"}, "message": "Use span of impl/trait in len_without_is_empty error message, rather than the span of the len method", "tree": {"sha": "67419227e21a5d37d51273be4339cf5fee74ceb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67419227e21a5d37d51273be4339cf5fee74ceb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dd45b73172bf4ef8f60e8ed32588d688bc27fb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd45b73172bf4ef8f60e8ed32588d688bc27fb1", "html_url": "https://github.com/rust-lang/rust/commit/2dd45b73172bf4ef8f60e8ed32588d688bc27fb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dd45b73172bf4ef8f60e8ed32588d688bc27fb1/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a227c75777bf154ac8fb1673d970133e9a02d56", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a227c75777bf154ac8fb1673d970133e9a02d56", "html_url": "https://github.com/rust-lang/rust/commit/8a227c75777bf154ac8fb1673d970133e9a02d56"}], "stats": {"total": 57, "additions": 37, "deletions": 20}, "files": [{"sha": "f2609dd574352ea38612178355028f3006e006e7", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2dd45b73172bf4ef8f60e8ed32588d688bc27fb1/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dd45b73172bf4ef8f60e8ed32588d688bc27fb1/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=2dd45b73172bf4ef8f60e8ed32588d688bc27fb1", "patch": "@@ -107,7 +107,7 @@ fn check_trait_items(cx: &LateContext, item: &Item, trait_items: &[TraitItemRef]\n             if cx.access_levels.is_exported(i.id.node_id) {\n                 span_lint(cx,\n                           LEN_WITHOUT_IS_EMPTY,\n-                          i.span,\n+                          item.span,\n                           &format!(\"trait `{}` has a `len` method but no `is_empty` method\", item.name));\n             }\n         }\n@@ -146,7 +146,7 @@ fn check_impl_items(cx: &LateContext, item: &Item, impl_items: &[ImplItemRef]) {\n \n             span_lint(cx,\n                       LEN_WITHOUT_IS_EMPTY,\n-                      i.span,\n+                      item.span,\n                       &format!(\"item `{}` has a public `len` method but {} `is_empty` method\", ty, is_empty));\n         }\n     }"}, {"sha": "430cf8575bf15eec178afba5dd4145cf1f3ac02a", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 35, "deletions": 18, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/2dd45b73172bf4ef8f60e8ed32588d688bc27fb1/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dd45b73172bf4ef8f60e8ed32588d688bc27fb1/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=2dd45b73172bf4ef8f60e8ed32588d688bc27fb1", "patch": "@@ -1,11 +1,13 @@\n error: item `PubOne` has a public `len` method but no corresponding `is_empty` method\n-  --> $DIR/len_zero.rs:10:5\n+  --> $DIR/len_zero.rs:9:1\n    |\n-10 |       pub fn len(self: &Self) -> isize {\n-   |  _____^ starting here...\n+9  |   impl PubOne {\n+   |  _^ starting here...\n+10 | |     pub fn len(self: &Self) -> isize {\n 11 | |         1\n 12 | |     }\n-   | |_____^ ...ending here\n+13 | | }\n+   | |_^ ...ending here\n    |\n note: lint level defined here\n   --> $DIR/len_zero.rs:4:9\n@@ -14,28 +16,43 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: trait `PubTraitsToo` has a `len` method but no `is_empty` method\n-  --> $DIR/len_zero.rs:32:5\n+  --> $DIR/len_zero.rs:31:1\n    |\n-32 |     fn len(self: &Self) -> isize;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+31 |   pub trait PubTraitsToo {\n+   |  _^ starting here...\n+32 | |     fn len(self: &Self) -> isize;\n+33 | | }\n+   | |_^ ...ending here\n \n error: item `HasIsEmpty` has a public `len` method but a private `is_empty` method\n-  --> $DIR/len_zero.rs:66:5\n+  --> $DIR/len_zero.rs:65:1\n    |\n-66 |       pub fn len(self: &Self) -> isize {\n-   |  _____^ starting here...\n+65 |   impl HasIsEmpty {\n+   |  _^ starting here...\n+66 | |     pub fn len(self: &Self) -> isize {\n 67 | |         1\n 68 | |     }\n-   | |_____^ ...ending here\n+69 | |\n+70 | |     fn is_empty(self: &Self) -> bool {\n+71 | |         false\n+72 | |     }\n+73 | | }\n+   | |_^ ...ending here\n \n error: item `HasWrongIsEmpty` has a public `len` method but no corresponding `is_empty` method\n-  --> $DIR/len_zero.rs:95:5\n-   |\n-95 |       pub fn len(self: &Self) -> isize {\n-   |  _____^ starting here...\n-96 | |         1\n-97 | |     }\n-   | |_____^ ...ending here\n+   --> $DIR/len_zero.rs:94:1\n+    |\n+94  |   impl HasWrongIsEmpty {\n+    |  _^ starting here...\n+95  | |     pub fn len(self: &Self) -> isize {\n+96  | |         1\n+97  | |     }\n+98  | |\n+99  | |     pub fn is_empty(self: &Self, x : u32) -> bool {\n+100 | |         false\n+101 | |     }\n+102 | | }\n+    | |_^ ...ending here\n \n error: length comparison to zero\n    --> $DIR/len_zero.rs:106:8"}]}