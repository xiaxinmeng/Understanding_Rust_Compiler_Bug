{"sha": "b017bae8370e166034ac569c357b662358d45f19", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMTdiYWU4MzcwZTE2NjAzNGFjNTY5YzM1N2I2NjIzNThkNDVmMTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-08T11:26:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-08T11:26:53Z"}, "message": "remove `infer` method from CodeModel", "tree": {"sha": "0f726a02fc0906469807313a3abe45c08ee3391e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f726a02fc0906469807313a3abe45c08ee3391e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b017bae8370e166034ac569c357b662358d45f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b017bae8370e166034ac569c357b662358d45f19", "html_url": "https://github.com/rust-lang/rust/commit/b017bae8370e166034ac569c357b662358d45f19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b017bae8370e166034ac569c357b662358d45f19/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aacf9a19739f53a45840df2d08b5f3cca761192", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aacf9a19739f53a45840df2d08b5f3cca761192", "html_url": "https://github.com/rust-lang/rust/commit/7aacf9a19739f53a45840df2d08b5f3cca761192"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "0100ac91c0342c87040a1fc7d4e313a32280f827", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b017bae8370e166034ac569c357b662358d45f19/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b017bae8370e166034ac569c357b662358d45f19/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=b017bae8370e166034ac569c357b662358d45f19", "patch": "@@ -31,7 +31,7 @@ use ra_syntax::ast;\n use crate::{\n     db::{DefDatabase, HirDatabase},\n     ty::display::HirFormatter,\n-    ty::{self, InEnvironment, InferenceResult, TraitEnvironment, Ty, TyDefId, TypeCtor, TypeWalk},\n+    ty::{self, InEnvironment, TraitEnvironment, Ty, TyDefId, TypeCtor, TypeWalk},\n     CallableDef, HirDisplay, InFile, Name,\n };\n \n@@ -519,10 +519,6 @@ impl Function {\n         db.body(self.id.into())\n     }\n \n-    pub fn infer(self, db: &impl HirDatabase) -> Arc<InferenceResult> {\n-        db.infer(self.id.into())\n-    }\n-\n     /// The containing impl block, if this is a method.\n     pub fn impl_block(self, db: &impl DefDatabase) -> Option<ImplBlock> {\n         match self.container(db) {\n@@ -548,7 +544,7 @@ impl Function {\n     }\n \n     pub fn diagnostics(self, db: &impl HirDatabase, sink: &mut DiagnosticSink) {\n-        let infer = self.infer(db);\n+        let infer = db.infer(self.id.into());\n         infer.add_diagnostics(db, self.id, sink);\n         let mut validator = ExprValidator::new(self.id, infer, sink);\n         validator.validate_body(db);\n@@ -573,10 +569,6 @@ impl Const {\n         db.const_data(self.id).name.clone()\n     }\n \n-    pub fn infer(self, db: &impl HirDatabase) -> Arc<InferenceResult> {\n-        db.infer(self.id.into())\n-    }\n-\n     /// The containing impl block, if this is a type alias.\n     pub fn impl_block(self, db: &impl DefDatabase) -> Option<ImplBlock> {\n         match self.container(db) {\n@@ -615,10 +607,6 @@ impl Static {\n     pub fn krate(self, db: &impl DefDatabase) -> Option<Crate> {\n         Some(self.module(db).krate())\n     }\n-\n-    pub fn infer(self, db: &impl HirDatabase) -> Arc<InferenceResult> {\n-        db.infer(self.id.into())\n-    }\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]"}]}