{"sha": "c92342d58ddb8b653deaeda8eb7d775017291f9d", "node_id": "C_kwDOAAsO6NoAKGM5MjM0MmQ1OGRkYjhiNjUzZGVhZWRhOGViN2Q3NzUwMTcyOTFmOWQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-02T03:21:26Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-13T21:53:01Z"}, "message": "Erase regions even if normalization fails in writeback", "tree": {"sha": "112fd9ea62c7036e36c8ab894a032f03b7ee0f9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/112fd9ea62c7036e36c8ab894a032f03b7ee0f9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c92342d58ddb8b653deaeda8eb7d775017291f9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c92342d58ddb8b653deaeda8eb7d775017291f9d", "html_url": "https://github.com/rust-lang/rust/commit/c92342d58ddb8b653deaeda8eb7d775017291f9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c92342d58ddb8b653deaeda8eb7d775017291f9d/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5683791ebb7bbc440366635c322ad82badc554ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/5683791ebb7bbc440366635c322ad82badc554ca", "html_url": "https://github.com/rust-lang/rust/commit/5683791ebb7bbc440366635c322ad82badc554ca"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "29abe921bbdcdac80ade89658355311cde561473", "filename": "compiler/rustc_hir_typeck/src/writeback.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c92342d58ddb8b653deaeda8eb7d775017291f9d/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c92342d58ddb8b653deaeda8eb7d775017291f9d/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs?ref=c92342d58ddb8b653deaeda8eb7d775017291f9d", "patch": "@@ -136,7 +136,10 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n \n     fn write_ty_to_typeck_results(&mut self, hir_id: hir::HirId, ty: Ty<'tcx>) {\n         debug!(\"write_ty_to_typeck_results({:?}, {:?})\", hir_id, ty);\n-        assert!(!ty.has_infer() && !ty.has_placeholders() && !ty.has_free_regions());\n+        assert!(\n+            !ty.has_infer() && !ty.has_placeholders() && !ty.has_free_regions(),\n+            \"{ty} can't be put into typeck results\"\n+        );\n         self.typeck_results.node_types_mut().insert(hir_id, ty);\n     }\n \n@@ -803,7 +806,11 @@ impl<'cx, 'tcx> TypeFolder<TyCtxt<'tcx>> for Resolver<'cx, 'tcx> {\n                 // We must normalize erasing regions here, since later lints\n                 // expect that types that show up in the typeck are fully\n                 // normalized.\n-                self.fcx.tcx.try_normalize_erasing_regions(self.fcx.param_env, t).unwrap_or(t)\n+                if let Ok(t) = self.fcx.tcx.try_normalize_erasing_regions(self.fcx.param_env, t) {\n+                    t\n+                } else {\n+                    EraseEarlyRegions { tcx: self.fcx.tcx }.fold_ty(t)\n+                }\n             }\n             Ok(t) => {\n                 // Do not anonymize late-bound regions"}, {"sha": "b9a53cbd4fcb28bd2106f33e733664b89b6dc56d", "filename": "tests/ui/issues/issue-20605.current.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c92342d58ddb8b653deaeda8eb7d775017291f9d/tests%2Fui%2Fissues%2Fissue-20605.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c92342d58ddb8b653deaeda8eb7d775017291f9d/tests%2Fui%2Fissues%2Fissue-20605.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-20605.current.stderr?ref=c92342d58ddb8b653deaeda8eb7d775017291f9d", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the size for values of type `dyn Iterator<Item = &'a mut u8>` cannot be known at compilation time\n-  --> $DIR/issue-20605.rs:2:17\n+  --> $DIR/issue-20605.rs:5:17\n    |\n LL |     for item in *things { *item = 0 }\n    |                 ^^^^^^^ the trait `IntoIterator` is not implemented for `dyn Iterator<Item = &'a mut u8>`", "previous_filename": "tests/ui/issues/issue-20605.stderr"}, {"sha": "5362a68c834a3a9017df16b623f9947a56ed282c", "filename": "tests/ui/issues/issue-20605.next.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c92342d58ddb8b653deaeda8eb7d775017291f9d/tests%2Fui%2Fissues%2Fissue-20605.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c92342d58ddb8b653deaeda8eb7d775017291f9d/tests%2Fui%2Fissues%2Fissue-20605.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-20605.next.stderr?ref=c92342d58ddb8b653deaeda8eb7d775017291f9d", "patch": "@@ -0,0 +1,25 @@\n+error[E0277]: the trait bound `dyn Iterator<Item = &'a mut u8>: IntoIterator` is not satisfied\n+  --> $DIR/issue-20605.rs:5:17\n+   |\n+LL |     for item in *things { *item = 0 }\n+   |                 ^^^^^^^ the trait `IntoIterator` is not implemented for `dyn Iterator<Item = &'a mut u8>`\n+\n+error[E0277]: the size for values of type `<dyn Iterator<Item = &'a mut u8> as IntoIterator>::IntoIter` cannot be known at compilation time\n+  --> $DIR/issue-20605.rs:5:17\n+   |\n+LL |     for item in *things { *item = 0 }\n+   |                 ^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `<dyn Iterator<Item = &'a mut u8> as IntoIterator>::IntoIter`\n+   = note: all local variables must have a statically known size\n+   = help: unsized locals are gated as an unstable feature\n+\n+error: the type `<_ as IntoIterator>::IntoIter` is not well-formed\n+  --> $DIR/issue-20605.rs:5:17\n+   |\n+LL |     for item in *things { *item = 0 }\n+   |                 ^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "66bdc52e6b1a296fc3f25124dd160f0ba9a961fa", "filename": "tests/ui/issues/issue-20605.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c92342d58ddb8b653deaeda8eb7d775017291f9d/tests%2Fui%2Fissues%2Fissue-20605.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c92342d58ddb8b653deaeda8eb7d775017291f9d/tests%2Fui%2Fissues%2Fissue-20605.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-20605.rs?ref=c92342d58ddb8b653deaeda8eb7d775017291f9d", "patch": "@@ -1,6 +1,11 @@\n+// revisions: current next\n+//[next] compile-flags: -Ztrait-solver=next\n+\n fn changer<'a>(mut things: Box<dyn Iterator<Item=&'a mut u8>>) {\n     for item in *things { *item = 0 }\n //~^ ERROR the size for values of type\n+//[next]~^^ ERROR the type `<_ as IntoIterator>::IntoIter` is not well-formed\n+//[next]~| ERROR the trait bound `dyn Iterator<Item = &'a mut u8>: IntoIterator` is not satisfied\n }\n \n fn main() {}"}]}