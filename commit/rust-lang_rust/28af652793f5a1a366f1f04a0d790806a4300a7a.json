{"sha": "28af652793f5a1a366f1f04a0d790806a4300a7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YWY2NTI3OTNmNWExYTM2NmYxZjA0YTBkNzkwODA2YTQzMDBhN2E=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-21T15:54:15Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-21T15:54:15Z"}, "message": "Drop petgraph dependency from bootstrap\n\nIt was essentially unused, likely leftover from a previous refactoring\niteration.", "tree": {"sha": "ad82ade157cfaa7922225c398cb3ac6fecdffc9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad82ade157cfaa7922225c398cb3ac6fecdffc9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28af652793f5a1a366f1f04a0d790806a4300a7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28af652793f5a1a366f1f04a0d790806a4300a7a", "html_url": "https://github.com/rust-lang/rust/commit/28af652793f5a1a366f1f04a0d790806a4300a7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28af652793f5a1a366f1f04a0d790806a4300a7a/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c64eecf4d0907095928fb36fd3a1dd5fb2d9ff06", "url": "https://api.github.com/repos/rust-lang/rust/commits/c64eecf4d0907095928fb36fd3a1dd5fb2d9ff06", "html_url": "https://github.com/rust-lang/rust/commit/c64eecf4d0907095928fb36fd3a1dd5fb2d9ff06"}], "stats": {"total": 71, "additions": 1, "deletions": 70}, "files": [{"sha": "13230a9b8e78f50973918f2ec62f16623f4cb031", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/28af652793f5a1a366f1f04a0d790806a4300a7a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/28af652793f5a1a366f1f04a0d790806a4300a7a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=28af652793f5a1a366f1f04a0d790806a4300a7a", "patch": "@@ -195,7 +195,6 @@ dependencies = [\n  \"lazy_static 1.3.0\",\n  \"libc\",\n  \"num_cpus\",\n- \"petgraph\",\n  \"pretty_assertions\",\n  \"serde\",\n  \"serde_json\",\n@@ -1081,12 +1080,6 @@ dependencies = [\n  \"redox_syscall\",\n ]\n \n-[[package]]\n-name = \"fixedbitset\"\n-version = \"0.1.9\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"86d4de0081402f5e88cdac65c8dcdcc73118c1a7a465e2a05f0da05843a8ea33\"\n-\n [[package]]\n name = \"flate2\"\n version = \"1.0.12\"\n@@ -2288,12 +2281,6 @@ dependencies = [\n  \"vcpkg\",\n ]\n \n-[[package]]\n-name = \"ordermap\"\n-version = \"0.3.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a86ed3f5f244b372d6b1a00b72ef7f8876d0bc6a78a4c9985c53614041512063\"\n-\n [[package]]\n name = \"ordslice\"\n version = \"0.3.0\"\n@@ -2429,16 +2416,6 @@ dependencies = [\n  \"sha-1\",\n ]\n \n-[[package]]\n-name = \"petgraph\"\n-version = \"0.4.13\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9c3659d1ee90221741f65dd128d9998311b0e40c5d3c23a62445938214abce4f\"\n-dependencies = [\n- \"fixedbitset\",\n- \"ordermap\",\n-]\n-\n [[package]]\n name = \"phf\"\n version = \"0.7.24\""}, {"sha": "7be16cf3f171fa48534f61df9ca74de1962f05b2", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28af652793f5a1a366f1f04a0d790806a4300a7a/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/28af652793f5a1a366f1f04a0d790806a4300a7a/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=28af652793f5a1a366f1f04a0d790806a4300a7a", "patch": "@@ -47,7 +47,6 @@ serde_json = \"1.0.2\"\n toml = \"0.5\"\n lazy_static = \"1.3.0\"\n time = \"0.1\"\n-petgraph = \"0.4.13\"\n \n [dev-dependencies]\n pretty_assertions = \"0.5\""}, {"sha": "2093a49c6f9c2f75cde43654b6ebdede7d51aed6", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/28af652793f5a1a366f1f04a0d790806a4300a7a/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28af652793f5a1a366f1f04a0d790806a4300a7a/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=28af652793f5a1a366f1f04a0d790806a4300a7a", "patch": "@@ -1,7 +1,6 @@\n use std::any::Any;\n use std::cell::{Cell, RefCell};\n use std::collections::BTreeSet;\n-use std::collections::HashMap;\n use std::env;\n use std::ffi::OsStr;\n use std::fmt::Debug;\n@@ -29,9 +28,6 @@ use crate::{Build, DocTests, Mode, GitRepo};\n \n pub use crate::Compiler;\n \n-use petgraph::graph::NodeIndex;\n-use petgraph::Graph;\n-\n pub struct Builder<'a> {\n     pub build: &'a Build,\n     pub top_stage: u32,\n@@ -40,9 +36,6 @@ pub struct Builder<'a> {\n     stack: RefCell<Vec<Box<dyn Any>>>,\n     time_spent_on_dependencies: Cell<Duration>,\n     pub paths: Vec<PathBuf>,\n-    graph_nodes: RefCell<HashMap<String, NodeIndex>>,\n-    graph: RefCell<Graph<String, bool>>,\n-    parent: Cell<Option<NodeIndex>>,\n }\n \n impl<'a> Deref for Builder<'a> {\n@@ -490,9 +483,6 @@ impl<'a> Builder<'a> {\n             stack: RefCell::new(Vec::new()),\n             time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n             paths: vec![],\n-            graph_nodes: RefCell::new(HashMap::new()),\n-            graph: RefCell::new(Graph::new()),\n-            parent: Cell::new(None),\n         };\n \n         let builder = &builder;\n@@ -535,17 +525,13 @@ impl<'a> Builder<'a> {\n             stack: RefCell::new(Vec::new()),\n             time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n             paths: paths.to_owned(),\n-            graph_nodes: RefCell::new(HashMap::new()),\n-            graph: RefCell::new(Graph::new()),\n-            parent: Cell::new(None),\n         };\n \n         builder\n     }\n \n-    pub fn execute_cli(&self) -> Graph<String, bool> {\n+    pub fn execute_cli(&self) {\n         self.run_step_descriptions(&Builder::get_step_descriptions(self.kind), &self.paths);\n-        self.graph.borrow().clone()\n     }\n \n     pub fn default_doc(&self, paths: Option<&[PathBuf]>) {\n@@ -1260,41 +1246,12 @@ impl<'a> Builder<'a> {\n             if let Some(out) = self.cache.get(&step) {\n                 self.verbose(&format!(\"{}c {:?}\", \"  \".repeat(stack.len()), step));\n \n-                {\n-                    let mut graph = self.graph.borrow_mut();\n-                    let parent = self.parent.get();\n-                    let us = *self\n-                        .graph_nodes\n-                        .borrow_mut()\n-                        .entry(format!(\"{:?}\", step))\n-                        .or_insert_with(|| graph.add_node(format!(\"{:?}\", step)));\n-                    if let Some(parent) = parent {\n-                        graph.add_edge(parent, us, false);\n-                    }\n-                }\n-\n                 return out;\n             }\n             self.verbose(&format!(\"{}> {:?}\", \"  \".repeat(stack.len()), step));\n             stack.push(Box::new(step.clone()));\n         }\n \n-        let prev_parent = self.parent.get();\n-\n-        {\n-            let mut graph = self.graph.borrow_mut();\n-            let parent = self.parent.get();\n-            let us = *self\n-                .graph_nodes\n-                .borrow_mut()\n-                .entry(format!(\"{:?}\", step))\n-                .or_insert_with(|| graph.add_node(format!(\"{:?}\", step)));\n-            self.parent.set(Some(us));\n-            if let Some(parent) = parent {\n-                graph.add_edge(parent, us, true);\n-            }\n-        }\n-\n         let (out, dur) = {\n             let start = Instant::now();\n             let zero = Duration::new(0, 0);\n@@ -1305,8 +1262,6 @@ impl<'a> Builder<'a> {\n             (out, dur - deps)\n         };\n \n-        self.parent.set(prev_parent);\n-\n         if self.config.print_step_timings && dur > Duration::from_millis(100) {\n             println!(\n                 \"[TIMING] {:?} -- {}.{:03}\","}]}