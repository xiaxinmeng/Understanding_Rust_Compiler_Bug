{"sha": "39d1fea6d60235ee1fae82acf326c88e488bc110", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZDFmZWE2ZDYwMjM1ZWUxZmFlODJhY2YzMjZjODhlNDg4YmMxMTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-23T05:43:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-23T05:43:15Z"}, "message": "Auto merge of #4126 - phansch:rustup, r=Manishearth\n\nRustup to https://github.com/rust-lang/rust/pull/60740\n\nhttps://github.com/rust-lang/rust/pull/60740\n\nchangelog: none", "tree": {"sha": "bd2e2e89326b93ae8966cc81ebcf76b0312d3676", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd2e2e89326b93ae8966cc81ebcf76b0312d3676"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39d1fea6d60235ee1fae82acf326c88e488bc110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39d1fea6d60235ee1fae82acf326c88e488bc110", "html_url": "https://github.com/rust-lang/rust/commit/39d1fea6d60235ee1fae82acf326c88e488bc110", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39d1fea6d60235ee1fae82acf326c88e488bc110/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "url": "https://api.github.com/repos/rust-lang/rust/commits/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "html_url": "https://github.com/rust-lang/rust/commit/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca"}, {"sha": "edb698105fdd123e5b4ac8880c861b508a80d55a", "url": "https://api.github.com/repos/rust-lang/rust/commits/edb698105fdd123e5b4ac8880c861b508a80d55a", "html_url": "https://github.com/rust-lang/rust/commit/edb698105fdd123e5b4ac8880c861b508a80d55a"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "fefd180953f29928fac540cf1e3098ec87d2b86c", "filename": "clippy_lints/src/const_static_lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39d1fea6d60235ee1fae82acf326c88e488bc110/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39d1fea6d60235ee1fae82acf326c88e488bc110/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs?ref=39d1fea6d60235ee1fae82acf326c88e488bc110", "patch": "@@ -47,7 +47,7 @@ impl StaticConst {\n                 if let Some(lifetime) = *optional_lifetime {\n                     match borrow_type.ty.node {\n                         TyKind::Path(..) | TyKind::Slice(..) | TyKind::Array(..) | TyKind::Tup(..) => {\n-                            if lifetime.ident.name == syntax::symbol::keywords::StaticLifetime.name() {\n+                            if lifetime.ident.name == syntax::symbol::kw::StaticLifetime {\n                                 let snip = snippet(cx, borrow_type.ty.span, \"<type>\");\n                                 let sugg = format!(\"&{}\", snip);\n                                 span_lint_and_then("}, {"sha": "8c167db913159727c3c9c6e4d00cbd797f6d2451", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/39d1fea6d60235ee1fae82acf326c88e488bc110/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39d1fea6d60235ee1fae82acf326c88e488bc110/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=39d1fea6d60235ee1fae82acf326c88e488bc110", "patch": "@@ -6,7 +6,7 @@ use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintC\n use rustc::{declare_lint_pass, declare_tool_lint};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use syntax::source_map::Span;\n-use syntax::symbol::keywords;\n+use syntax::symbol::kw;\n \n use crate::reexport::*;\n use crate::utils::{last_path_segment, span_lint};\n@@ -476,9 +476,7 @@ struct BodyLifetimeChecker {\n impl<'tcx> Visitor<'tcx> for BodyLifetimeChecker {\n     // for lifetimes as parameters of generics\n     fn visit_lifetime(&mut self, lifetime: &'tcx Lifetime) {\n-        if lifetime.name.ident().name != keywords::Invalid.name()\n-            && lifetime.name.ident().name != syntax::symbol::keywords::StaticLifetime.name()\n-        {\n+        if lifetime.name.ident().name != kw::Invalid && lifetime.name.ident().name != kw::StaticLifetime {\n             self.lifetimes_used_in_body = true;\n         }\n     }"}, {"sha": "c6ada386f2aa0820d8229e33614786a45945fde1", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39d1fea6d60235ee1fae82acf326c88e488bc110/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39d1fea6d60235ee1fae82acf326c88e488bc110/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=39d1fea6d60235ee1fae82acf326c88e488bc110", "patch": "@@ -8,7 +8,7 @@ use rustc::ty;\n use rustc::ty::{DefIdTree, Ty};\n use rustc::{declare_lint_pass, declare_tool_lint};\n use rustc_errors::Applicability;\n-use syntax_pos::symbol::keywords::SelfUpper;\n+use syntax_pos::symbol::kw;\n \n use crate::utils::span_lint_and_sugg;\n \n@@ -220,7 +220,7 @@ struct UseSelfVisitor<'a, 'tcx: 'a> {\n \n impl<'a, 'tcx> Visitor<'tcx> for UseSelfVisitor<'a, 'tcx> {\n     fn visit_path(&mut self, path: &'tcx Path, _id: HirId) {\n-        if path.segments.last().expect(SEGMENTS_MSG).ident.name != SelfUpper.name() {\n+        if path.segments.last().expect(SEGMENTS_MSG).ident.name != kw::SelfUpper {\n             if self.item_path.res == path.res {\n                 span_use_self_lint(self.cx, path);\n             } else if let Res::Def(DefKind::Ctor(def::CtorOf::Struct, CtorKind::Fn), ctor_did) = path.res {"}, {"sha": "b28615ec54c6e58ae7263049bce67c4ed1c7c10b", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39d1fea6d60235ee1fae82acf326c88e488bc110/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39d1fea6d60235ee1fae82acf326c88e488bc110/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=39d1fea6d60235ee1fae82acf326c88e488bc110", "patch": "@@ -45,7 +45,7 @@ use syntax::ast::{self, LitKind};\n use syntax::attr;\n use syntax::ext::hygiene::ExpnFormat;\n use syntax::source_map::{Span, DUMMY_SP};\n-use syntax::symbol::{keywords, Symbol};\n+use syntax::symbol::{kw, Symbol};\n \n use crate::reexport::*;\n \n@@ -839,7 +839,7 @@ pub fn remove_blocks(expr: &Expr) -> &Expr {\n \n pub fn is_self(slf: &Arg) -> bool {\n     if let PatKind::Binding(.., name, _) = slf.pat.node {\n-        name.name == keywords::SelfLower.name()\n+        name.name == kw::SelfLower\n     } else {\n         false\n     }"}]}