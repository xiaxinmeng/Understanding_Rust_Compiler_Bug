{"sha": "e119ab402fca139e0973f176a9e4b8e49727a3f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMTlhYjQwMmZjYTEzOWUwOTczZjE3NmE5ZTRiOGU0OTcyN2EzZjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-27T19:59:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-27T19:59:33Z"}, "message": "Auto merge of #4150 - rust-lang:rustup, r=oli-obk\n\nRustup to rustc 1.36.0-nightly (fa40a111f 2019-05-27)\n\nchangelog: none", "tree": {"sha": "567fbdca3342eba556973585db57b985b16df8e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/567fbdca3342eba556973585db57b985b16df8e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e119ab402fca139e0973f176a9e4b8e49727a3f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e119ab402fca139e0973f176a9e4b8e49727a3f7", "html_url": "https://github.com/rust-lang/rust/commit/e119ab402fca139e0973f176a9e4b8e49727a3f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e119ab402fca139e0973f176a9e4b8e49727a3f7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b501f0f6af678aa0a081ea1c32d3afa7d1bd641", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b501f0f6af678aa0a081ea1c32d3afa7d1bd641", "html_url": "https://github.com/rust-lang/rust/commit/7b501f0f6af678aa0a081ea1c32d3afa7d1bd641"}, {"sha": "73d18308121fa4cfe334512763517cde287cd2bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d18308121fa4cfe334512763517cde287cd2bc", "html_url": "https://github.com/rust-lang/rust/commit/73d18308121fa4cfe334512763517cde287cd2bc"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "fff029155891b923f35ca3f4e6bbfb5031d3db78", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e119ab402fca139e0973f176a9e4b8e49727a3f7/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e119ab402fca139e0973f176a9e4b8e49727a3f7/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=e119ab402fca139e0973f176a9e4b8e49727a3f7", "patch": "@@ -14,7 +14,7 @@ use std::cmp::PartialOrd;\n use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n use syntax::ast::{FloatTy, LitKind};\n-use syntax_pos::symbol::{LocalInternedString, Symbol};\n+use syntax_pos::symbol::Symbol;\n \n /// A `LitKind`-like enum to fold constant `Expr`s into.\n #[derive(Debug, Clone)]\n@@ -250,14 +250,18 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                     if let ExprKind::Path(qpath) = &callee.node;\n                     let res = self.tables.qpath_res(qpath, callee.hir_id);\n                     if let Some(def_id) = res.opt_def_id();\n-                    let get_def_path = self.lcx.get_def_path(def_id);\n+                    let get_def_path = self.lcx.get_def_path(def_id, );\n                     let def_path = get_def_path\n                         .iter()\n-                        .map(LocalInternedString::get)\n+                        .copied()\n+                        .map(Symbol::as_str)\n                         .collect::<Vec<_>>();\n-                    if let &[\"core\", \"num\", impl_ty, \"max_value\"] = &def_path[..];\n+                    if def_path[0] == \"core\";\n+                    if def_path[1] == \"num\";\n+                    if def_path[3] == \"max_value\";\n+                    if def_path.len() == 4;\n                     then {\n-                       let value = match impl_ty {\n+                       let value = match &*def_path[2] {\n                            \"<impl i8>\" => i8::max_value() as u128,\n                            \"<impl i16>\" => i16::max_value() as u128,\n                            \"<impl i32>\" => i32::max_value() as u128,"}, {"sha": "7b41bea4ff4bea2e5c190a3a435df7b4e6c44fdc", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e119ab402fca139e0973f176a9e4b8e49727a3f7/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e119ab402fca139e0973f176a9e4b8e49727a3f7/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=e119ab402fca139e0973f176a9e4b8e49727a3f7", "patch": "@@ -18,6 +18,7 @@ use rustc_typeck::hir_ty_to_ty;\n use syntax::ast::{FloatTy, IntTy, UintTy};\n use syntax::errors::DiagnosticBuilder;\n use syntax::source_map::Span;\n+use syntax::symbol::sym;\n \n use crate::consts::{constant, Constant};\n use crate::utils::paths;\n@@ -1091,7 +1092,7 @@ fn is_c_void(cx: &LateContext<'_, '_>, ty: Ty<'_>) -> bool {\n         if names.is_empty() {\n             return false;\n         }\n-        if names[0] == \"libc\" || names[0] == \"core\" && *names.last().unwrap() == \"c_void\" {\n+        if names[0] == sym!(libc) || names[0] == sym::core && *names.last().unwrap() == sym!(c_void) {\n             return true;\n         }\n     }"}, {"sha": "a812b1709bbc42b4fe5128e99bacddaea16acbba", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e119ab402fca139e0973f176a9e4b8e49727a3f7/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e119ab402fca139e0973f176a9e4b8e49727a3f7/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=e119ab402fca139e0973f176a9e4b8e49727a3f7", "patch": "@@ -1123,5 +1123,7 @@ mod test {\n }\n \n pub fn match_def_path<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, did: DefId, syms: &[&str]) -> bool {\n+    // HACK: find a way to use symbols from clippy or just go fully to diagnostic items\n+    let syms: Vec<_> = syms.iter().map(|sym| Symbol::intern(sym)).collect();\n     cx.match_def_path(did, &syms)\n }"}]}