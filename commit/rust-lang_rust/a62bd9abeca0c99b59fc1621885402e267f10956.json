{"sha": "a62bd9abeca0c99b59fc1621885402e267f10956", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MmJkOWFiZWNhMGM5OWI1OWZjMTYyMTg4NTQwMmUyNjdmMTA5NTY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-09T15:07:35Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-09T15:25:39Z"}, "message": "Work around recursive type check for iface types\n\nThey are nominal, and can safely refer to themselves.", "tree": {"sha": "843563ff1ee00d4b7f31fbad5d9471f81c8f4996", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/843563ff1ee00d4b7f31fbad5d9471f81c8f4996"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a62bd9abeca0c99b59fc1621885402e267f10956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a62bd9abeca0c99b59fc1621885402e267f10956", "html_url": "https://github.com/rust-lang/rust/commit/a62bd9abeca0c99b59fc1621885402e267f10956", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a62bd9abeca0c99b59fc1621885402e267f10956/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c13f0874542aa47361fa82cf280f6d8c3d46d84b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c13f0874542aa47361fa82cf280f6d8c3d46d84b", "html_url": "https://github.com/rust-lang/rust/commit/c13f0874542aa47361fa82cf280f6d8c3d46d84b"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "ee97ce4a15f62f20c53887938bd8b1e6465f31f5", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a62bd9abeca0c99b59fc1621885402e267f10956/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a62bd9abeca0c99b59fc1621885402e267f10956/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=a62bd9abeca0c99b59fc1621885402e267f10956", "patch": "@@ -430,9 +430,6 @@ fn ty_of_item(tcx: ty::ctxt, mode: mode, it: @ast::item)\n                              @it.ident);\n         let tpt = {bounds: bounds, ty: t};\n         tcx.tcache.insert(local_def(it.id), tpt);\n-        ty::store_iface_methods(tcx, it.id, @vec::map(ms, {|m|\n-            ty_of_ty_method(tcx, m_collect, m)\n-        }));\n         ret tpt;\n       }\n       ast::item_impl(_, _, _, _) | ast::item_mod(_) |\n@@ -818,6 +815,13 @@ mod collect {\n                                  {bounds: bounds, ty: t_ctor});\n             write::ty_only(cx.tcx, dtor_id, t_dtor);\n           }\n+          ast::item_iface(_, ms) {\n+            let tpt = ty_of_item(cx.tcx, m_collect, it);\n+            write::ty_only(cx.tcx, it.id, tpt.ty);\n+            ty::store_iface_methods(cx.tcx, it.id, @vec::map(ms, {|m|\n+                ty_of_ty_method(cx.tcx, m_collect, m)\n+            }));\n+          }\n           _ {\n             // This call populates the type cache with the converted type\n             // of the item in passing. All we have to do here is to write"}]}