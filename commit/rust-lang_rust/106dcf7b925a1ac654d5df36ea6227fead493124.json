{"sha": "106dcf7b925a1ac654d5df36ea6227fead493124", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNmRjZjdiOTI1YTFhYzY1NGQ1ZGYzNmVhNjIyN2ZlYWQ0OTMxMjQ=", "commit": {"author": {"name": "Lenny222", "email": "github@kudling.de", "date": "2012-01-17T18:14:05Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-17T18:51:43Z"}, "message": "spin-off rustdocs tuple code to libstd", "tree": {"sha": "c8a399496f657031a43e8138cc2c7d2366d77833", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8a399496f657031a43e8138cc2c7d2366d77833"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/106dcf7b925a1ac654d5df36ea6227fead493124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/106dcf7b925a1ac654d5df36ea6227fead493124", "html_url": "https://github.com/rust-lang/rust/commit/106dcf7b925a1ac654d5df36ea6227fead493124", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/106dcf7b925a1ac654d5df36ea6227fead493124/comments", "author": null, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a83ad1b9e657307f395361be0c687a4690bbcd6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a83ad1b9e657307f395361be0c687a4690bbcd6f", "html_url": "https://github.com/rust-lang/rust/commit/a83ad1b9e657307f395361be0c687a4690bbcd6f"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "34297b1aaeffe0621e7f9808d7498c5a5028f1dd", "filename": "src/libstd/std.rc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/106dcf7b925a1ac654d5df36ea6227fead493124/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/106dcf7b925a1ac654d5df36ea6227fead493124/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=106dcf7b925a1ac654d5df36ea6227fead493124", "patch": "@@ -12,7 +12,7 @@ export c_vec, four, tri, util;\n export bitv, deque, fun_treemap, list, map, smallintmap, sort, treemap, ufind;\n export rope;\n export ebml, dbg, getopts, json, rand, sha1, term, time;\n-export extfmt, test, tempfile;\n+export extfmt, test, tempfile, tuple;\n // FIXME: generic_os and os_fs shouldn't be exported\n export generic_os, os, os_fs;\n \n@@ -61,6 +61,7 @@ mod md4;\n mod tempfile;\n mod term;\n mod time;\n+mod tuple;\n \n #[cfg(unicode)]\n mod unicode;"}, {"sha": "9d24f428d42e45c61d354ef58598709b8c000901", "filename": "src/libstd/tuple.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/106dcf7b925a1ac654d5df36ea6227fead493124/src%2Flibstd%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106dcf7b925a1ac654d5df36ea6227fead493124/src%2Flibstd%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftuple.rs?ref=106dcf7b925a1ac654d5df36ea6227fead493124", "patch": "@@ -0,0 +1,28 @@\n+/*\n+Module: tuple\n+*/\n+\n+// FIXME #1546: Would rather write fst<T, U>(+pair: (T, U)) -> T\n+fn first<T:copy, U:copy>(pair: (T, U)) -> T {\n+    let (t, _) = pair;\n+    ret t;\n+}\n+\n+fn second<T:copy, U:copy>(pair: (T, U)) -> U {\n+    let (_, u) = pair;\n+    ret u;\n+}\n+\n+fn swap<T:copy, U:copy>(pair: (T, U)) -> (U, T) {\n+    let (t, u) = pair;\n+    ret (u, t);\n+}\n+\n+\n+#[test]\n+fn test_tuple() {\n+    assert first((948, 4039.48)) == 948;\n+    assert second((34.5, \"foo\")) == \"foo\";\n+    assert swap(('a', 2)) == (2, 'a');\n+}\n+"}, {"sha": "5b8b8eeffa147ff359463e0dd2b5d2a611701435", "filename": "src/rustdoc/attr_parser.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/106dcf7b925a1ac654d5df36ea6227fead493124/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106dcf7b925a1ac654d5df36ea6227fead493124/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=106dcf7b925a1ac654d5df36ea6227fead493124", "patch": "@@ -1,5 +1,6 @@\n import rustc::syntax::ast;\n import rustc::front::attr;\n+import std::tuple;\n \n export fn_attrs, arg_attrs;\n export parse_fn;\n@@ -83,8 +84,8 @@ fn parse_fn_(\n         vec::filter_map(items) {|item|\n             option::map(attr::name_value_str_pair(item)) { |pair|\n                 {\n-                    name: util::fst(pair),\n-                    desc: util::snd(pair)\n+                    name: tuple::first(pair),\n+                    desc: tuple::second(pair)\n                 }\n             }\n         }\n@@ -172,4 +173,4 @@ mod tests {\n         assert attrs.args[0] == {name: \"a\", desc: \"arg a\"};\n         assert attrs.args[1] == {name: \"b\", desc: \"arg b\"};\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/rustdoc/util.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/106dcf7b925a1ac654d5df36ea6227fead493124/src%2Frustdoc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106dcf7b925a1ac654d5df36ea6227fead493124/src%2Frustdoc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Futil.rs?ref=106dcf7b925a1ac654d5df36ea6227fead493124", "patch": "@@ -1,10 +0,0 @@\n-// FIXME #1546: Would rather write fst<T, U>(+pair: (T, U)) -> T\n-fn fst<T:copy, U:copy>(pair: (T, U)) -> T {\n-    let (t, _) = pair;\n-    ret t;\n-}\n-\n-fn snd<T:copy, U:copy>(pair: (T, U)) -> U {\n-    let (_, u) = pair;\n-    ret u;\n-}"}]}