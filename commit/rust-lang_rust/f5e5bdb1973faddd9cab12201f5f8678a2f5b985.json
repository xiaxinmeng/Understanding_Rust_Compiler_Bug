{"sha": "f5e5bdb1973faddd9cab12201f5f8678a2f5b985", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZTViZGIxOTczZmFkZGQ5Y2FiMTIyMDFmNWY4Njc4YTJmNWI5ODU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-03T21:50:12Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-03T21:50:12Z"}, "message": "Fix test", "tree": {"sha": "160584bc8655fd0abba43672b7760f6d5932c5cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/160584bc8655fd0abba43672b7760f6d5932c5cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5e5bdb1973faddd9cab12201f5f8678a2f5b985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e5bdb1973faddd9cab12201f5f8678a2f5b985", "html_url": "https://github.com/rust-lang/rust/commit/f5e5bdb1973faddd9cab12201f5f8678a2f5b985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5e5bdb1973faddd9cab12201f5f8678a2f5b985/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d02d4c3c9bf0500d951efb20f273207e075259df", "url": "https://api.github.com/repos/rust-lang/rust/commits/d02d4c3c9bf0500d951efb20f273207e075259df", "html_url": "https://github.com/rust-lang/rust/commit/d02d4c3c9bf0500d951efb20f273207e075259df"}], "stats": {"total": 45, "additions": 4, "deletions": 41}, "files": [{"sha": "7ac3925fb24766385d7958742fa5dc49d84b44f0", "filename": "src/test/auxiliary/lint_stability.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f5e5bdb1973faddd9cab12201f5f8678a2f5b985/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e5bdb1973faddd9cab12201f5f8678a2f5b985/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_stability.rs?ref=f5e5bdb1973faddd9cab12201f5f8678a2f5b985", "patch": "@@ -11,6 +11,7 @@\n #![crate_type = \"lib\"]\n #![feature(staged_api)]\n #![staged_api]\n+#![stable(feature = \"lint_stability\", since = \"1.0.0\")]\n \n #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n #[deprecated(since = \"1.0.0\")]\n@@ -31,8 +32,6 @@ pub fn unstable() {}\n #[unstable(feature = \"test_feature\", reason = \"text\")]\n pub fn unstable_text() {}\n \n-pub fn unmarked() {}\n-\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn stable() {}\n #[stable(feature = \"rust1\", since = \"1.0.0\", reason = \"text\")]\n@@ -61,8 +60,6 @@ impl MethodTester {\n     #[unstable(feature = \"test_feature\", reason = \"text\")]\n     pub fn method_unstable_text(&self) {}\n \n-    pub fn method_unmarked(&self) {}\n-\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn method_stable(&self) {}\n     #[stable(feature = \"rust1\", since = \"1.0.0\", reason = \"text\")]\n@@ -79,6 +76,7 @@ impl MethodTester {\n     pub fn method_frozen_text(&self) {}\n }\n \n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n pub trait Trait {\n     #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n     #[deprecated(since = \"1.0.0\")]\n@@ -99,8 +97,6 @@ pub trait Trait {\n     #[unstable(feature = \"test_feature\", reason = \"text\")]\n     fn trait_unstable_text(&self) {}\n \n-    fn trait_unmarked(&self) {}\n-\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn trait_stable(&self) {}\n     #[stable(feature = \"rust1\", since = \"1.0.0\", reason = \"text\")]\n@@ -130,7 +126,6 @@ pub struct DeprecatedStruct { pub i: int }\n pub struct DeprecatedUnstableStruct { pub i: int }\n #[unstable(feature = \"test_feature\")]\n pub struct UnstableStruct { pub i: int }\n-pub struct UnmarkedStruct { pub i: int }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StableStruct { pub i: int }\n \n@@ -142,10 +137,10 @@ pub struct DeprecatedUnitStruct;\n pub struct DeprecatedUnstableUnitStruct;\n #[unstable(feature = \"test_feature\")]\n pub struct UnstableUnitStruct;\n-pub struct UnmarkedUnitStruct;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StableUnitStruct;\n \n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n pub enum Enum {\n     #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n     #[deprecated(since = \"1.0.0\")]\n@@ -156,7 +151,6 @@ pub enum Enum {\n     #[unstable(feature = \"test_feature\")]\n     UnstableVariant,\n \n-    UnmarkedVariant,\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     StableVariant,\n }\n@@ -169,7 +163,6 @@ pub struct DeprecatedTupleStruct(pub int);\n pub struct DeprecatedUnstableTupleStruct(pub int);\n #[unstable(feature = \"test_feature\")]\n pub struct UnstableTupleStruct(pub int);\n-pub struct UnmarkedTupleStruct(pub int);\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StableTupleStruct(pub int);\n "}, {"sha": "4cf75bf15de275bd44262c8812893786967c4b7f", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f5e5bdb1973faddd9cab12201f5f8678a2f5b985/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e5bdb1973faddd9cab12201f5f8678a2f5b985/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=f5e5bdb1973faddd9cab12201f5f8678a2f5b985", "patch": "@@ -20,7 +20,7 @@\n #![staged_api]\n \n #[macro_use]\n-extern crate lint_stability; //~ ERROR: use of unmarked library feature\n+extern crate lint_stability;\n \n mod cross_crate {\n     extern crate stability_cfg1;\n@@ -61,10 +61,6 @@ mod cross_crate {\n         foo.method_unstable_text(); //~ WARNING use of unstable library feature 'test_feature': text\n         foo.trait_unstable_text(); //~ WARNING use of unstable library feature 'test_feature': text\n \n-        unmarked(); //~ ERROR use of unmarked library feature\n-        foo.method_unmarked(); //~ ERROR use of unmarked library feature\n-        foo.trait_unmarked(); //~ ERROR use of unmarked library feature\n-\n         stable();\n         foo.method_stable();\n         foo.trait_stable();\n@@ -77,28 +73,24 @@ mod cross_crate {\n         let _ = DeprecatedUnstableStruct { i: 0 }; //~ ERROR use of deprecated item\n         //~^ WARNING use of unstable library feature\n         let _ = UnstableStruct { i: 0 }; //~ WARNING use of unstable library feature\n-        let _ = UnmarkedStruct { i: 0 }; //~ ERROR use of unmarked library feature\n         let _ = StableStruct { i: 0 };\n \n         let _ = DeprecatedUnitStruct; //~ ERROR use of deprecated item\n         let _ = DeprecatedUnstableUnitStruct; //~ ERROR use of deprecated item\n         //~^ WARNING use of unstable library feature\n         let _ = UnstableUnitStruct; //~ WARNING use of unstable library feature\n-        let _ = UnmarkedUnitStruct; //~ ERROR use of unmarked library feature\n         let _ = StableUnitStruct;\n \n         let _ = Enum::DeprecatedVariant; //~ ERROR use of deprecated item\n         let _ = Enum::DeprecatedUnstableVariant; //~ ERROR use of deprecated item\n         //~^ WARNING use of unstable library feature\n         let _ = Enum::UnstableVariant; //~ WARNING use of unstable library feature\n-        let _ = Enum::UnmarkedVariant; //~ ERROR use of unmarked library feature\n         let _ = Enum::StableVariant;\n \n         let _ = DeprecatedTupleStruct (1); //~ ERROR use of deprecated item\n         let _ = DeprecatedUnstableTupleStruct (1); //~ ERROR use of deprecated item\n         //~^ WARNING use of unstable library feature\n         let _ = UnstableTupleStruct (1); //~ WARNING use of unstable library feature\n-        let _ = UnmarkedTupleStruct (1); //~ ERROR use of unmarked library feature\n         let _ = StableTupleStruct (1);\n \n         // At the moment, the lint checker only checks stability in\n@@ -123,7 +115,6 @@ mod cross_crate {\n         //~^ WARNING use of unstable library feature\n         foo.trait_unstable(); //~ WARNING use of unstable library feature\n         foo.trait_unstable_text(); //~ WARNING use of unstable library feature 'test_feature': text\n-        foo.trait_unmarked(); //~ ERROR use of unmarked library feature\n         foo.trait_stable();\n     }\n \n@@ -136,7 +127,6 @@ mod cross_crate {\n         //~^ WARNING use of unstable library feature\n         foo.trait_unstable(); //~ WARNING use of unstable library feature\n         foo.trait_unstable_text(); //~ WARNING use of unstable library feature 'test_feature': text\n-        foo.trait_unmarked(); //~ ERROR use of unmarked library feature\n         foo.trait_stable();\n     }\n \n@@ -183,8 +173,6 @@ mod this_crate {\n     #[unstable(feature = \"test_feature\", reason = \"text\")]\n     pub fn unstable_text() {}\n \n-    pub fn unmarked() {}\n-\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn stable() {}\n     #[stable(feature = \"rust1\", since = \"1.0.0\", reason = \"text\")]\n@@ -206,8 +194,6 @@ mod this_crate {\n         #[unstable(feature = \"test_feature\", reason = \"text\")]\n         pub fn method_unstable_text(&self) {}\n \n-        pub fn method_unmarked(&self) {}\n-\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         pub fn method_stable(&self) {}\n         #[stable(feature = \"rust1\", since = \"1.0.0\", reason = \"text\")]\n@@ -227,8 +213,6 @@ mod this_crate {\n         #[unstable(feature = \"test_feature\", reason = \"text\")]\n         fn trait_unstable_text(&self) {}\n \n-        fn trait_unmarked(&self) {}\n-\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         fn trait_stable(&self) {}\n         #[stable(feature = \"rust1\", since = \"1.0.0\", reason = \"text\")]\n@@ -242,7 +226,6 @@ mod this_crate {\n     pub struct DeprecatedStruct { i: isize }\n     #[unstable(feature = \"test_feature\")]\n     pub struct UnstableStruct { i: isize }\n-    pub struct UnmarkedStruct { i: isize }\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableStruct { i: isize }\n \n@@ -251,7 +234,6 @@ mod this_crate {\n     pub struct DeprecatedUnitStruct;\n     #[unstable(feature = \"test_feature\")]\n     pub struct UnstableUnitStruct;\n-    pub struct UnmarkedUnitStruct;\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableUnitStruct;\n \n@@ -262,7 +244,6 @@ mod this_crate {\n         #[unstable(feature = \"test_feature\")]\n         UnstableVariant,\n \n-        UnmarkedVariant,\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         StableVariant,\n     }\n@@ -272,7 +253,6 @@ mod this_crate {\n     pub struct DeprecatedTupleStruct(isize);\n     #[unstable(feature = \"test_feature\")]\n     pub struct UnstableTupleStruct(isize);\n-    pub struct UnmarkedTupleStruct(isize);\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableTupleStruct(isize);\n \n@@ -299,10 +279,6 @@ mod this_crate {\n         foo.method_unstable_text();\n         foo.trait_unstable_text();\n \n-        unmarked();\n-        foo.method_unmarked();\n-        foo.trait_unmarked();\n-\n         stable();\n         foo.method_stable();\n         foo.trait_stable();\n@@ -313,22 +289,18 @@ mod this_crate {\n \n         let _ = DeprecatedStruct { i: 0 }; //~ ERROR use of deprecated item\n         let _ = UnstableStruct { i: 0 };\n-        let _ = UnmarkedStruct { i: 0 };\n         let _ = StableStruct { i: 0 };\n \n         let _ = DeprecatedUnitStruct; //~ ERROR use of deprecated item\n         let _ = UnstableUnitStruct;\n-        let _ = UnmarkedUnitStruct;\n         let _ = StableUnitStruct;\n \n         let _ = Enum::DeprecatedVariant; //~ ERROR use of deprecated item\n         let _ = Enum::UnstableVariant;\n-        let _ = Enum::UnmarkedVariant;\n         let _ = Enum::StableVariant;\n \n         let _ = DeprecatedTupleStruct (1); //~ ERROR use of deprecated item\n         let _ = UnstableTupleStruct (1);\n-        let _ = UnmarkedTupleStruct (1);\n         let _ = StableTupleStruct (1);\n     }\n \n@@ -337,7 +309,6 @@ mod this_crate {\n         foo.trait_deprecated_text(); //~ ERROR use of deprecated item: text\n         foo.trait_unstable();\n         foo.trait_unstable_text();\n-        foo.trait_unmarked();\n         foo.trait_stable();\n     }\n \n@@ -346,7 +317,6 @@ mod this_crate {\n         foo.trait_deprecated_text(); //~ ERROR use of deprecated item: text\n         foo.trait_unstable();\n         foo.trait_unstable_text();\n-        foo.trait_unmarked();\n         foo.trait_stable();\n     }\n "}]}