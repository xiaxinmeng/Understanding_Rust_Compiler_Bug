{"sha": "d071ce1d5774a6bd93a623df1a3cabf940b12b46", "node_id": "C_kwDOAAsO6NoAKGQwNzFjZTFkNTc3NGE2YmQ5M2E2MjNkZjFhM2NhYmY5NDBiMTJiNDY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-01-28T00:25:15Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-02-15T05:08:52Z"}, "message": "Overhaul `RegionKind` and `Region`.\n\nSpecifically, change `Region` from this:\n```\npub type Region<'tcx> = &'tcx RegionKind;\n```\nto this:\n```\npub struct Region<'tcx>(&'tcx Interned<RegionKind>);\n```\n\nThis now matches `Ty` and `Predicate` more closely.\n\nThings to note\n- Regions have always been interned, but we haven't been using pointer-based\n  `Eq` and `Hash`. This is now happening.\n- I chose to impl `Deref` for `Region` because it makes pattern matching a lot\n  nicer, and `Region` can be viewed as just a smart wrapper for `RegionKind`.\n- Various methods are moved from `RegionKind` to `Region`.\n- There is a lot of tedious sigil changes.\n- A couple of types like `HighlightBuilder`, `RegionHighlightMode` now have a\n  `'tcx` lifetime because they hold a `Ty<'tcx>`, so they can call `mk_region`.\n- A couple of test outputs change slightly, I'm not sure why, but the new\n  outputs are a little better.", "tree": {"sha": "815f22892ff114b10fcf4fd006f807b4b436e43d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/815f22892ff114b10fcf4fd006f807b4b436e43d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d071ce1d5774a6bd93a623df1a3cabf940b12b46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d071ce1d5774a6bd93a623df1a3cabf940b12b46", "html_url": "https://github.com/rust-lang/rust/commit/d071ce1d5774a6bd93a623df1a3cabf940b12b46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d071ce1d5774a6bd93a623df1a3cabf940b12b46/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fa961b9519d68f0378f4f4f2331e4eb940cfca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fa961b9519d68f0378f4f4f2331e4eb940cfca1", "html_url": "https://github.com/rust-lang/rust/commit/5fa961b9519d68f0378f4f4f2331e4eb940cfca1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c3cb02329a11c7c3b944ae1be9de30170de4c80d", "filename": "clippy_lints/src/methods/expect_fun_call.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d071ce1d5774a6bd93a623df1a3cabf940b12b46/clippy_lints%2Fsrc%2Fmethods%2Fexpect_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d071ce1d5774a6bd93a623df1a3cabf940b12b46/clippy_lints%2Fsrc%2Fmethods%2Fexpect_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fexpect_fun_call.rs?ref=d071ce1d5774a6bd93a623df1a3cabf940b12b46", "patch": "@@ -73,7 +73,7 @@ pub(super) fn check<'tcx>(\n                     match cx.qpath_res(p, fun.hir_id) {\n                         hir::def::Res::Def(hir::def::DefKind::Fn | hir::def::DefKind::AssocFn, def_id) => matches!(\n                             cx.tcx.fn_sig(def_id).output().skip_binder().kind(),\n-                            ty::Ref(ty::ReStatic, ..)\n+                            ty::Ref(re, ..) if re.is_static(),\n                         ),\n                         _ => false,\n                     }\n@@ -87,7 +87,7 @@ pub(super) fn check<'tcx>(\n                     .map_or(false, |method_id| {\n                         matches!(\n                             cx.tcx.fn_sig(method_id).output().skip_binder().kind(),\n-                            ty::Ref(ty::ReStatic, ..)\n+                            ty::Ref(re, ..) if re.is_static()\n                         )\n                     })\n             },"}]}