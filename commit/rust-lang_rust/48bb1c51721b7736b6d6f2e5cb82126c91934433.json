{"sha": "48bb1c51721b7736b6d6f2e5cb82126c91934433", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YmIxYzUxNzIxYjc3MzZiNmQ2ZjJlNWNiODIxMjZjOTE5MzQ0MzM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-06T23:18:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-06T23:18:28Z"}, "message": "Merge #3504\n\n3504: Normalize waiting queries names r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "464e625dd0ca6a888800a89dbb188a480e17ec92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/464e625dd0ca6a888800a89dbb188a480e17ec92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48bb1c51721b7736b6d6f2e5cb82126c91934433", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeYtpECRBK7hj4Ov3rIwAAdHIIAINLQU/32IfqXo+k6lPT8bOg\nvSJIRmmaQNTZgy5bzxqzhrfzzepOOB3iHnBQ3LknsJo2eanzhFFnKsUJx+OmIexQ\nga29KhG6psx2wx1wXLyM7dOTgSJMnqu8tEU2B4jaU57uHG87AwqcC2qeXOBSsK6I\nrJexSbNtpgBP+uXMc9sIuapenJKkyE6uhU6OsDHFZGFrb87MI+vkq+D9VFg6FgcW\nsg2oKX3b+Lno7o9H0a0zbS0RjNxLedmY3gb9eE9U4umBb7ELKG87crj+8zpmlb3r\nykrpDrG3qHenma8kuFBKasTtzER92kWc7v7qP3ZH2T+9IoVE3xMzYZpHYgcWsEU=\n=wyMZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 464e625dd0ca6a888800a89dbb188a480e17ec92\nparent d4cea98bc342b0aa2603106a155722dcbe5534e1\nparent 9abf0d9659d0d48036c4172e29fe33770134dd61\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1583536708 +0000\ncommitter GitHub <noreply@github.com> 1583536708 +0000\n\nMerge #3504\n\n3504: Normalize waiting queries names r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48bb1c51721b7736b6d6f2e5cb82126c91934433", "html_url": "https://github.com/rust-lang/rust/commit/48bb1c51721b7736b6d6f2e5cb82126c91934433", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48bb1c51721b7736b6d6f2e5cb82126c91934433/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4cea98bc342b0aa2603106a155722dcbe5534e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4cea98bc342b0aa2603106a155722dcbe5534e1", "html_url": "https://github.com/rust-lang/rust/commit/d4cea98bc342b0aa2603106a155722dcbe5534e1"}, {"sha": "9abf0d9659d0d48036c4172e29fe33770134dd61", "url": "https://api.github.com/repos/rust-lang/rust/commits/9abf0d9659d0d48036c4172e29fe33770134dd61", "html_url": "https://github.com/rust-lang/rust/commit/9abf0d9659d0d48036c4172e29fe33770134dd61"}], "stats": {"total": 57, "additions": 26, "deletions": 31}, "files": [{"sha": "fcba950911a53bf5c42dfed66ea42eed3693c561", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=48bb1c51721b7736b6d6f2e5cb82126c91934433", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n \n pub use hir_def::db::{\n-    AttrsQuery, BodyQuery, BodyWithSourceMapQuery, ComputeCrateDefMapQuery, ConstDataQuery,\n+    AttrsQuery, BodyQuery, BodyWithSourceMapQuery, ConstDataQuery, CrateDefMapQueryQuery,\n     CrateLangItemsQuery, DefDatabase, DefDatabaseStorage, DocumentationQuery, EnumDataQuery,\n     ExprScopesQuery, FunctionDataQuery, GenericParamsQuery, ImplDataQuery, InternConstQuery,\n     InternDatabase, InternDatabaseStorage, InternEnumQuery, InternFunctionQuery, InternImplQuery,\n@@ -14,10 +14,10 @@ pub use hir_expand::db::{\n     MacroExpandQuery, ParseMacroQuery,\n };\n pub use hir_ty::db::{\n-    AssociatedTyDataQuery, AssociatedTyValueQuery, CallableItemSignatureQuery, DoInferQuery,\n-    FieldTypesQuery, GenericDefaultsQuery, GenericPredicatesForParamQuery, GenericPredicatesQuery,\n-    HirDatabase, HirDatabaseStorage, ImplDatumQuery, ImplSelfTyQuery, ImplTraitQuery,\n-    ImplsForTraitQuery, ImplsInCrateQuery, InternAssocTyValueQuery, InternChalkImplQuery,\n+    AssociatedTyDataQuery, AssociatedTyValueQuery, CallableItemSignatureQuery, FieldTypesQuery,\n+    GenericDefaultsQuery, GenericPredicatesForParamQuery, GenericPredicatesQuery, HirDatabase,\n+    HirDatabaseStorage, ImplDatumQuery, ImplSelfTyQuery, ImplTraitQuery, ImplsForTraitQuery,\n+    ImplsInCrateQuery, InferQueryQuery, InternAssocTyValueQuery, InternChalkImplQuery,\n     InternTypeCtorQuery, StructDatumQuery, TraitDatumQuery, TraitSolveQuery, TyQuery, ValueTyQuery,\n };\n "}, {"sha": "dcd377aae22264b1dec4badf6d91c1fb7989d409", "filename": "crates/ra_hir_def/src/db.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdb.rs?ref=48bb1c51721b7736b6d6f2e5cb82126c91934433", "patch": "@@ -47,11 +47,11 @@ pub trait DefDatabase: InternDatabase + AstDatabase {\n     #[salsa::invoke(RawItems::raw_items_query)]\n     fn raw_items(&self, file_id: HirFileId) -> Arc<RawItems>;\n \n-    #[salsa::transparent]\n+    #[salsa::invoke(crate_def_map_wait)]\n     fn crate_def_map(&self, krate: CrateId) -> Arc<CrateDefMap>;\n \n-    #[salsa::invoke(CrateDefMap::compute_crate_def_map_query)]\n-    fn compute_crate_def_map(&self, krate: CrateId) -> Arc<CrateDefMap>;\n+    #[salsa::invoke(CrateDefMap::crate_def_map_query)]\n+    fn crate_def_map_query(&self, krate: CrateId) -> Arc<CrateDefMap>;\n \n     #[salsa::invoke(StructData::struct_data_query)]\n     fn struct_data(&self, id: StructId) -> Arc<StructData>;\n@@ -109,7 +109,7 @@ pub trait DefDatabase: InternDatabase + AstDatabase {\n     fn documentation(&self, def: AttrDefId) -> Option<Documentation>;\n }\n \n-fn crate_def_map(db: &impl DefDatabase, krate: CrateId) -> Arc<CrateDefMap> {\n-    let _p = profile(\"wait_crate_def_map\");\n-    db.compute_crate_def_map(krate)\n+fn crate_def_map_wait(db: &impl DefDatabase, krate: CrateId) -> Arc<CrateDefMap> {\n+    let _p = profile(\"crate_def_map:wait\");\n+    db.crate_def_map_query(krate)\n }"}, {"sha": "628c44c99f4552a00ece3aaa1cdf9e3df188596e", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=48bb1c51721b7736b6d6f2e5cb82126c91934433", "patch": "@@ -176,13 +176,8 @@ pub struct ModuleData {\n }\n \n impl CrateDefMap {\n-    pub(crate) fn compute_crate_def_map_query(\n-        // Note that this doesn't have `+ AstDatabase`!\n-        // This gurantess that `CrateDefMap` is stable across reparses.\n-        db: &impl DefDatabase,\n-        krate: CrateId,\n-    ) -> Arc<CrateDefMap> {\n-        let _p = profile(\"crate_def_map\");\n+    pub(crate) fn crate_def_map_query(db: &impl DefDatabase, krate: CrateId) -> Arc<CrateDefMap> {\n+        let _p = profile(\"crate_def_map_query\");\n         let def_map = {\n             let crate_graph = db.crate_graph();\n             let edition = crate_graph.edition(krate);"}, {"sha": "74b30900553efc62a044d4cba7a14d1a7c7f51e8", "filename": "crates/ra_hir_ty/src/db.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs?ref=48bb1c51721b7736b6d6f2e5cb82126c91934433", "patch": "@@ -21,11 +21,11 @@ use hir_expand::name::Name;\n #[salsa::query_group(HirDatabaseStorage)]\n #[salsa::requires(salsa::Database)]\n pub trait HirDatabase: DefDatabase {\n-    #[salsa::transparent]\n+    #[salsa::invoke(infer_wait)]\n     fn infer(&self, def: DefWithBodyId) -> Arc<InferenceResult>;\n \n-    #[salsa::invoke(crate::do_infer_query)]\n-    fn do_infer(&self, def: DefWithBodyId) -> Arc<InferenceResult>;\n+    #[salsa::invoke(crate::infer::infer_query)]\n+    fn infer_query(&self, def: DefWithBodyId) -> Arc<InferenceResult>;\n \n     #[salsa::invoke(crate::lower::ty_query)]\n     #[salsa::cycle(crate::lower::ty_recover)]\n@@ -103,8 +103,8 @@ pub trait HirDatabase: DefDatabase {\n     ) -> Option<crate::traits::Solution>;\n }\n \n-fn infer(db: &impl HirDatabase, def: DefWithBodyId) -> Arc<InferenceResult> {\n-    let _p = profile(\"wait_infer\").detail(|| match def {\n+fn infer_wait(db: &impl HirDatabase, def: DefWithBodyId) -> Arc<InferenceResult> {\n+    let _p = profile(\"infer:wait\").detail(|| match def {\n         DefWithBodyId::FunctionId(it) => db.function_data(it).name.to_string(),\n         DefWithBodyId::StaticId(it) => {\n             db.static_data(it).name.clone().unwrap_or_else(Name::missing).to_string()\n@@ -113,7 +113,7 @@ fn infer(db: &impl HirDatabase, def: DefWithBodyId) -> Arc<InferenceResult> {\n             db.const_data(it).name.clone().unwrap_or_else(Name::missing).to_string()\n         }\n     });\n-    db.do_infer(def)\n+    db.infer_query(def)\n }\n \n #[test]"}, {"sha": "947833412317bbc1fee59867f897de1b294ee28f", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=48bb1c51721b7736b6d6f2e5cb82126c91934433", "patch": "@@ -63,8 +63,8 @@ mod pat;\n mod coerce;\n \n /// The entry point of type inference.\n-pub fn do_infer_query(db: &impl HirDatabase, def: DefWithBodyId) -> Arc<InferenceResult> {\n-    let _p = profile(\"infer\");\n+pub(crate) fn infer_query(db: &impl HirDatabase, def: DefWithBodyId) -> Arc<InferenceResult> {\n+    let _p = profile(\"infer_query\");\n     let resolver = def.resolver(db);\n     let mut ctx = InferenceContext::new(db, def, resolver);\n "}, {"sha": "4127f1a8d55581c7c3918a01196fe9e2f5cc79ab", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=48bb1c51721b7736b6d6f2e5cb82126c91934433", "patch": "@@ -26,7 +26,7 @@ pub mod traits;\n pub mod method_resolution;\n mod op;\n mod lower;\n-mod infer;\n+pub(crate) mod infer;\n pub mod display;\n pub(crate) mod utils;\n pub mod db;\n@@ -57,7 +57,7 @@ use crate::{\n use display::HirDisplay;\n \n pub use autoderef::autoderef;\n-pub use infer::{do_infer_query, InferTy, InferenceResult};\n+pub use infer::{InferTy, InferenceResult};\n pub use lower::CallableDef;\n pub use lower::{\n     callable_item_sig, ImplTraitLoweringMode, TyDefId, TyLoweringContext, ValueTyDefId,"}, {"sha": "8b5be9d21433caf721b29481ea06ab480b48d1e4", "filename": "crates/ra_ide_db/src/change.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_ide_db%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bb1c51721b7736b6d6f2e5cb82126c91934433/crates%2Fra_ide_db%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fchange.rs?ref=48bb1c51721b7736b6d6f2e5cb82126c91934433", "patch": "@@ -279,7 +279,7 @@ impl RootDatabase {\n         self.query(hir::db::BodyWithSourceMapQuery).sweep(sweep);\n \n         self.query(hir::db::ExprScopesQuery).sweep(sweep);\n-        self.query(hir::db::DoInferQuery).sweep(sweep);\n+        self.query(hir::db::InferQueryQuery).sweep(sweep);\n         self.query(hir::db::BodyQuery).sweep(sweep);\n     }\n \n@@ -318,7 +318,7 @@ impl RootDatabase {\n \n             // DefDatabase\n             hir::db::RawItemsQuery\n-            hir::db::ComputeCrateDefMapQuery\n+            hir::db::CrateDefMapQueryQuery\n             hir::db::StructDataQuery\n             hir::db::UnionDataQuery\n             hir::db::EnumDataQuery\n@@ -350,7 +350,7 @@ impl RootDatabase {\n             hir::db::InternImplQuery\n \n             // HirDatabase\n-            hir::db::DoInferQuery\n+            hir::db::InferQueryQuery\n             hir::db::TyQuery\n             hir::db::ValueTyQuery\n             hir::db::ImplSelfTyQuery"}]}