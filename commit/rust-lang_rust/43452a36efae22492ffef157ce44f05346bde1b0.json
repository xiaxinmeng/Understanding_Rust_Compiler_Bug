{"sha": "43452a36efae22492ffef157ce44f05346bde1b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNDUyYTM2ZWZhZTIyNDkyZmZlZjE1N2NlNDRmMDUzNDZiZGUxYjA=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-11-04T04:04:16Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-11-04T05:11:41Z"}, "message": "Shrink `Expr_::ExprStruct`.\n\nOn 64-bit platforms this reduces the size of `Expr_` from  64 bytes to\n56 bytes, and reduces the size of `Expr` from 88 bytes to 80 bytes.", "tree": {"sha": "f06f6637303132a548c8aa029f42eed27ffff8b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f06f6637303132a548c8aa029f42eed27ffff8b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43452a36efae22492ffef157ce44f05346bde1b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43452a36efae22492ffef157ce44f05346bde1b0", "html_url": "https://github.com/rust-lang/rust/commit/43452a36efae22492ffef157ce44f05346bde1b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43452a36efae22492ffef157ce44f05346bde1b0/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9366ba31668af3575ecadb3b35d2b67e138c3605", "url": "https://api.github.com/repos/rust-lang/rust/commits/9366ba31668af3575ecadb3b35d2b67e138c3605", "html_url": "https://github.com/rust-lang/rust/commit/9366ba31668af3575ecadb3b35d2b67e138c3605"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7567c405bcaec74a1dea293bdd883712f57b0c61", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43452a36efae22492ffef157ce44f05346bde1b0/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43452a36efae22492ffef157ce44f05346bde1b0/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=43452a36efae22492ffef157ce44f05346bde1b0", "patch": "@@ -1239,7 +1239,7 @@ impl<'a> LoweringContext<'a> {\n                 }), outputs.iter().map(|out| self.lower_expr(&out.expr)).collect(),\n                    inputs.iter().map(|&(_, ref input)| self.lower_expr(input)).collect()),\n                 ExprKind::Struct(ref path, ref fields, ref maybe_expr) => {\n-                    hir::ExprStruct(self.lower_path(path),\n+                    hir::ExprStruct(P(self.lower_path(path)),\n                                     fields.iter().map(|x| self.lower_field(x)).collect(),\n                                     maybe_expr.as_ref().map(|x| self.lower_expr(x)))\n                 }\n@@ -1743,7 +1743,7 @@ impl<'a> LoweringContext<'a> {\n                    e: Option<P<hir::Expr>>,\n                    attrs: ThinVec<Attribute>) -> P<hir::Expr> {\n         let def = self.resolver.resolve_generated_global_path(&path, false);\n-        let expr = self.expr(sp, hir::ExprStruct(path, fields, e), attrs);\n+        let expr = self.expr(sp, hir::ExprStruct(P(path), fields, e), attrs);\n         self.resolver.record_resolution(expr.id, def);\n         expr\n     }"}, {"sha": "5f57ceac353cc62e27d8438d60dd020f48278257", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43452a36efae22492ffef157ce44f05346bde1b0/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43452a36efae22492ffef157ce44f05346bde1b0/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=43452a36efae22492ffef157ce44f05346bde1b0", "patch": "@@ -946,7 +946,7 @@ pub enum Expr_ {\n     ///\n     /// For example, `Foo {x: 1, y: 2}`, or\n     /// `Foo {x: 1, .. base}`, where `base` is the `Option<Expr>`.\n-    ExprStruct(Path, HirVec<Field>, Option<P<Expr>>),\n+    ExprStruct(P<Path>, HirVec<Field>, Option<P<Expr>>),\n \n     /// An array literal constructed from one repeated element.\n     ///"}, {"sha": "ad9e718617a52646ce3eacff868dbc979d478508", "filename": "src/librustc_const_eval/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43452a36efae22492ffef157ce44f05346bde1b0/src%2Flibrustc_const_eval%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43452a36efae22492ffef157ce44f05346bde1b0/src%2Flibrustc_const_eval%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Feval.rs?ref=43452a36efae22492ffef157ce44f05346bde1b0", "patch": "@@ -314,7 +314,7 @@ pub fn const_expr_to_pat<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                           },\n                       }))\n                       .collect::<Result<_, _>>()?;\n-            PatKind::Struct(path.clone(), field_pats, false)\n+            PatKind::Struct((**path).clone(), field_pats, false)\n         }\n \n         hir::ExprArray(ref exprs) => {"}]}