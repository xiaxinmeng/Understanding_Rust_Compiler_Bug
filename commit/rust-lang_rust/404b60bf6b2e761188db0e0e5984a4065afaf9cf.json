{"sha": "404b60bf6b2e761188db0e0e5984a4065afaf9cf", "node_id": "C_kwDOAAsO6NoAKDQwNGI2MGJmNmIyZTc2MTE4OGRiMGUwZTU5ODRhNDA2NWFmYWY5Y2Y", "commit": {"author": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2022-09-13T23:42:40Z"}, "committer": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2022-09-14T12:19:11Z"}, "message": "Constify impl Fn* &(mut) Fn*", "tree": {"sha": "021778e944831f4016b368859a32fde75035df24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/021778e944831f4016b368859a32fde75035df24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/404b60bf6b2e761188db0e0e5984a4065afaf9cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/404b60bf6b2e761188db0e0e5984a4065afaf9cf", "html_url": "https://github.com/rust-lang/rust/commit/404b60bf6b2e761188db0e0e5984a4065afaf9cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/404b60bf6b2e761188db0e0e5984a4065afaf9cf/comments", "author": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c97922dca563cb7f9385b18dbf7ca8c97f8e1597", "url": "https://api.github.com/repos/rust-lang/rust/commits/c97922dca563cb7f9385b18dbf7ca8c97f8e1597", "html_url": "https://github.com/rust-lang/rust/commit/c97922dca563cb7f9385b18dbf7ca8c97f8e1597"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "827851c62ae7b3937b457087f0504898baaeb7a0", "filename": "library/core/src/ops/function.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/404b60bf6b2e761188db0e0e5984a4065afaf9cf/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/404b60bf6b2e761188db0e0e5984a4065afaf9cf/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs?ref=404b60bf6b2e761188db0e0e5984a4065afaf9cf", "patch": "@@ -250,29 +250,32 @@ pub trait FnOnce<Args> {\n \n mod impls {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> Fn<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"none\")]\n+    impl<A, F: ?Sized> const Fn<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         extern \"rust-call\" fn call(&self, args: A) -> F::Output {\n             (**self).call(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> FnMut<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"none\")]\n+    impl<A, F: ?Sized> const FnMut<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         extern \"rust-call\" fn call_mut(&mut self, args: A) -> F::Output {\n             (**self).call(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> FnOnce<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"none\")]\n+    impl<A, F: ?Sized> const FnOnce<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         type Output = F::Output;\n \n@@ -282,19 +285,21 @@ mod impls {\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> FnMut<A> for &mut F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"none\")]\n+    impl<A, F: ?Sized> const FnMut<A> for &mut F\n     where\n-        F: FnMut<A>,\n+        F: ~const FnMut<A>,\n     {\n         extern \"rust-call\" fn call_mut(&mut self, args: A) -> F::Output {\n             (*self).call_mut(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> FnOnce<A> for &mut F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"none\")]\n+    impl<A, F: ?Sized> const FnOnce<A> for &mut F\n     where\n-        F: FnMut<A>,\n+        F: ~const FnMut<A>,\n     {\n         type Output = F::Output;\n         extern \"rust-call\" fn call_once(self, args: A) -> F::Output {"}]}