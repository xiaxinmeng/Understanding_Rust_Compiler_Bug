{"sha": "ac0027d45c1891d56e734b4aa6c3aaa8223a9850", "node_id": "C_kwDOAAsO6NoAKGFjMDAyN2Q0NWMxODkxZDU2ZTczNGI0YWE2YzNhYWE4MjIzYTk4NTA", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-05T09:45:50Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-05T09:45:50Z"}, "message": "update comment", "tree": {"sha": "f423edb076a8a728390d160aad09f018a96aaf13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f423edb076a8a728390d160aad09f018a96aaf13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac0027d45c1891d56e734b4aa6c3aaa8223a9850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac0027d45c1891d56e734b4aa6c3aaa8223a9850", "html_url": "https://github.com/rust-lang/rust/commit/ac0027d45c1891d56e734b4aa6c3aaa8223a9850", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac0027d45c1891d56e734b4aa6c3aaa8223a9850/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c55c8362de32be1530b2441c3e3a51e73edeb21", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c55c8362de32be1530b2441c3e3a51e73edeb21", "html_url": "https://github.com/rust-lang/rust/commit/4c55c8362de32be1530b2441c3e3a51e73edeb21"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0ca7988ca152f6c48059a6c494fec820493bb688", "filename": "compiler/rustc_builtin_macros/src/deriving/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac0027d45c1891d56e734b4aa6c3aaa8223a9850/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac0027d45c1891d56e734b4aa6c3aaa8223a9850/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fmod.rs?ref=ac0027d45c1891d56e734b4aa6c3aaa8223a9850", "patch": "@@ -134,7 +134,7 @@ fn inject_impl_of_structural_trait(\n \n     // Create the type of `self`.\n     //\n-    // in addition, remove defaults from type params (impls cannot have them).\n+    // in addition, remove defaults from generic params (impls cannot have them).\n     let self_params: Vec<_> = generics\n         .params\n         .iter_mut()"}]}