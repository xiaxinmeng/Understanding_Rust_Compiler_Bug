{"sha": "69c3d0add4a35d0a643cbdec2d91fc28808618b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YzNkMGFkZDRhMzVkMGE2NDNjYmRlYzJkOTFmYzI4ODA4NjE4YjA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2016-09-20T00:21:48Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2016-09-28T20:30:30Z"}, "message": "Remove unused `TypeError` variants\n\nThese weren't flagged by the lint because they were still technically\ncreated somewhere... if you created them before, somehow.", "tree": {"sha": "8a601e6e2024a5b707c31e4bbeb191f9b908806b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a601e6e2024a5b707c31e4bbeb191f9b908806b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69c3d0add4a35d0a643cbdec2d91fc28808618b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69c3d0add4a35d0a643cbdec2d91fc28808618b0", "html_url": "https://github.com/rust-lang/rust/commit/69c3d0add4a35d0a643cbdec2d91fc28808618b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69c3d0add4a35d0a643cbdec2d91fc28808618b0/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcc8d578a0287093a816605408c8893df9cf1de7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcc8d578a0287093a816605408c8893df9cf1de7", "html_url": "https://github.com/rust-lang/rust/commit/dcc8d578a0287093a816605408c8893df9cf1de7"}], "stats": {"total": 34, "additions": 0, "deletions": 34}, "files": [{"sha": "9b345c2d02329b5f1f6ca1e7a3a7da130cdb01b8", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/69c3d0add4a35d0a643cbdec2d91fc28808618b0/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c3d0add4a35d0a643cbdec2d91fc28808618b0/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=69c3d0add4a35d0a643cbdec2d91fc28808618b0", "patch": "@@ -33,28 +33,21 @@ pub enum TypeError<'tcx> {\n     UnsafetyMismatch(ExpectedFound<hir::Unsafety>),\n     AbiMismatch(ExpectedFound<abi::Abi>),\n     Mutability,\n-    BoxMutability,\n-    PtrMutability,\n-    RefMutability,\n-    VecMutability,\n     TupleSize(ExpectedFound<usize>),\n     FixedArraySize(ExpectedFound<usize>),\n-    TyParamSize(ExpectedFound<usize>),\n     ArgCount,\n     RegionsDoesNotOutlive(&'tcx Region, &'tcx Region),\n     RegionsNotSame(&'tcx Region, &'tcx Region),\n     RegionsNoOverlap(&'tcx Region, &'tcx Region),\n     RegionsInsufficientlyPolymorphic(BoundRegion, &'tcx Region),\n     RegionsOverlyPolymorphic(BoundRegion, &'tcx Region),\n     Sorts(ExpectedFound<Ty<'tcx>>),\n-    IntegerAsChar,\n     IntMismatch(ExpectedFound<ty::IntVarValue>),\n     FloatMismatch(ExpectedFound<ast::FloatTy>),\n     Traits(ExpectedFound<DefId>),\n     BuiltinBoundsMismatch(ExpectedFound<ty::BuiltinBounds>),\n     VariadicMismatch(ExpectedFound<bool>),\n     CyclicTy,\n-    ConvergenceMismatch(ExpectedFound<bool>),\n     ProjectionNameMismatched(ExpectedFound<Name>),\n     ProjectionBoundsLength(ExpectedFound<usize>),\n     TyParamDefaultMismatch(ExpectedFound<type_variable::Default<'tcx>>)\n@@ -99,18 +92,6 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n                        values.found)\n             }\n             Mutability => write!(f, \"types differ in mutability\"),\n-            BoxMutability => {\n-                write!(f, \"boxed types differ in mutability\")\n-            }\n-            VecMutability => write!(f, \"vectors differ in mutability\"),\n-            PtrMutability => write!(f, \"pointers differ in mutability\"),\n-            RefMutability => write!(f, \"references differ in mutability\"),\n-            TyParamSize(values) => {\n-                write!(f, \"expected a type with {} type params, \\\n-                           found one with {} type params\",\n-                       values.expected,\n-                       values.found)\n-            }\n             FixedArraySize(values) => {\n                 write!(f, \"expected an array with a fixed size of {} elements, \\\n                            found one with {} elements\",\n@@ -167,9 +148,6 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n                            values.found)\n                 }\n             }\n-            IntegerAsChar => {\n-                write!(f, \"expected an integral type, found `char`\")\n-            }\n             IntMismatch(ref values) => {\n                 write!(f, \"expected `{:?}`, found `{:?}`\",\n                        values.expected,\n@@ -185,11 +163,6 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n                        if values.expected { \"variadic\" } else { \"non-variadic\" },\n                        if values.found { \"variadic\" } else { \"non-variadic\" })\n             }\n-            ConvergenceMismatch(ref values) => {\n-                write!(f, \"expected {} fn, found {} function\",\n-                       if values.expected { \"converging\" } else { \"diverging\" },\n-                       if values.found { \"converging\" } else { \"diverging\" })\n-            }\n             ProjectionNameMismatched(ref values) => {\n                 write!(f, \"expected {}, found {}\",\n                        values.expected,"}, {"sha": "abd5cb51f39baa795d2a4cb2d265ce80926a96d2", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/69c3d0add4a35d0a643cbdec2d91fc28808618b0/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c3d0add4a35d0a643cbdec2d91fc28808618b0/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=69c3d0add4a35d0a643cbdec2d91fc28808618b0", "patch": "@@ -296,13 +296,8 @@ impl<'a, 'tcx> Lift<'tcx> for ty::error::TypeError<'a> {\n             UnsafetyMismatch(x) => UnsafetyMismatch(x),\n             AbiMismatch(x) => AbiMismatch(x),\n             Mutability => Mutability,\n-            BoxMutability => BoxMutability,\n-            PtrMutability => PtrMutability,\n-            RefMutability => RefMutability,\n-            VecMutability => VecMutability,\n             TupleSize(x) => TupleSize(x),\n             FixedArraySize(x) => FixedArraySize(x),\n-            TyParamSize(x) => TyParamSize(x),\n             ArgCount => ArgCount,\n             RegionsDoesNotOutlive(a, b) => {\n                 return tcx.lift(&(a, b)).map(|(a, b)| RegionsDoesNotOutlive(a, b))\n@@ -319,14 +314,12 @@ impl<'a, 'tcx> Lift<'tcx> for ty::error::TypeError<'a> {\n             RegionsOverlyPolymorphic(a, b) => {\n                 return tcx.lift(&b).map(|b| RegionsOverlyPolymorphic(a, b))\n             }\n-            IntegerAsChar => IntegerAsChar,\n             IntMismatch(x) => IntMismatch(x),\n             FloatMismatch(x) => FloatMismatch(x),\n             Traits(x) => Traits(x),\n             BuiltinBoundsMismatch(x) => BuiltinBoundsMismatch(x),\n             VariadicMismatch(x) => VariadicMismatch(x),\n             CyclicTy => CyclicTy,\n-            ConvergenceMismatch(x) => ConvergenceMismatch(x),\n             ProjectionNameMismatched(x) => ProjectionNameMismatched(x),\n             ProjectionBoundsLength(x) => ProjectionBoundsLength(x),\n "}]}