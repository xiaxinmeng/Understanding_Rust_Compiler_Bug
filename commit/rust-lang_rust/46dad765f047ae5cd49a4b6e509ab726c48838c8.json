{"sha": "46dad765f047ae5cd49a4b6e509ab726c48838c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZGFkNzY1ZjA0N2FlNWNkNDlhNGI2ZTUwOWFiNzI2YzQ4ODM4Yzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-02T08:06:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-02T08:06:39Z"}, "message": "auto merge of #14596 : Sawyer47/rust/encodable-fix, r=alexcrichton\n\nCloses #14021", "tree": {"sha": "9e5141d69692bb35779be040497206c6938c8ce8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e5141d69692bb35779be040497206c6938c8ce8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46dad765f047ae5cd49a4b6e509ab726c48838c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46dad765f047ae5cd49a4b6e509ab726c48838c8", "html_url": "https://github.com/rust-lang/rust/commit/46dad765f047ae5cd49a4b6e509ab726c48838c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46dad765f047ae5cd49a4b6e509ab726c48838c8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b981add9ee56a2d6dc11aa48f01aac5d0dda9327", "url": "https://api.github.com/repos/rust-lang/rust/commits/b981add9ee56a2d6dc11aa48f01aac5d0dda9327", "html_url": "https://github.com/rust-lang/rust/commit/b981add9ee56a2d6dc11aa48f01aac5d0dda9327"}, {"sha": "1dc13e4ad4a140ae1ac4d84e13411c7406196926", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc13e4ad4a140ae1ac4d84e13411c7406196926", "html_url": "https://github.com/rust-lang/rust/commit/1dc13e4ad4a140ae1ac4d84e13411c7406196926"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "4f92dff0c596f15ca01d6f2054116349f52a4ba5", "filename": "src/libsyntax/ext/deriving/encodable.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/46dad765f047ae5cd49a4b6e509ab726c48838c8/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46dad765f047ae5cd49a4b6e509ab726c48838c8/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs?ref=46dad765f047ae5cd49a4b6e509ab726c48838c8", "patch": "@@ -175,6 +175,14 @@ fn encodable_substructure(cx: &mut ExtCtxt, trait_span: Span,\n                 stmts.push(cx.stmt_expr(call));\n             }\n \n+            // unit structs have no fields and need to return Ok()\n+            if stmts.is_empty() {\n+                let ret_ok = cx.expr(trait_span,\n+                                     ExprRet(Some(cx.expr_ok(trait_span,\n+                                                             cx.expr_lit(trait_span, LitNil)))));\n+                stmts.push(cx.stmt_expr(ret_ok));\n+            }\n+\n             let blk = cx.lambda_stmts_1(trait_span, stmts, blkarg);\n             cx.expr_method_call(trait_span,\n                                 encoder,"}, {"sha": "f25a1fcdab6f219588f01af731f0f4d8d1a4fb99", "filename": "src/test/run-pass/issue-14021.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/46dad765f047ae5cd49a4b6e509ab726c48838c8/src%2Ftest%2Frun-pass%2Fissue-14021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46dad765f047ae5cd49a4b6e509ab726c48838c8/src%2Ftest%2Frun-pass%2Fissue-14021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14021.rs?ref=46dad765f047ae5cd49a4b6e509ab726c48838c8", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+extern crate serialize;\n+\n+use serialize::{Encodable, Decodable};\n+use serialize::json;\n+\n+#[deriving(Encodable, Decodable, PartialEq, Show)]\n+struct UnitLikeStruct;\n+\n+pub fn main() {\n+    let obj = UnitLikeStruct;\n+    let json_str: String = json::Encoder::str_encode(&obj);\n+\n+    let json_object = json::from_str(json_str.as_slice());\n+    let mut decoder = json::Decoder::new(json_object.unwrap());\n+    let mut decoded_obj: UnitLikeStruct = Decodable::decode(&mut decoder).unwrap();\n+\n+    assert_eq!(obj, decoded_obj);\n+}"}]}