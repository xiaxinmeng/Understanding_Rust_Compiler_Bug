{"sha": "3b0fc3c309b1de721af95fa56f410b0c91f648c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMGZjM2MzMDliMWRlNzIxYWY5NWZhNTZmNDEwYjBjOTFmNjQ4YzQ=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-05T21:22:45Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-05T21:22:45Z"}, "message": "Add useful attributes", "tree": {"sha": "98962c2d2d45e7ec967930979e2046d9fc9e7e8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98962c2d2d45e7ec967930979e2046d9fc9e7e8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b0fc3c309b1de721af95fa56f410b0c91f648c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b0fc3c309b1de721af95fa56f410b0c91f648c4", "html_url": "https://github.com/rust-lang/rust/commit/3b0fc3c309b1de721af95fa56f410b0c91f648c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b0fc3c309b1de721af95fa56f410b0c91f648c4/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7", "html_url": "https://github.com/rust-lang/rust/commit/2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "02c7689e2b6c89b168d1a223988909c2bc69fd2b", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3b0fc3c309b1de721af95fa56f410b0c91f648c4/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b0fc3c309b1de721af95fa56f410b0c91f648c4/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=3b0fc3c309b1de721af95fa56f410b0c91f648c4", "patch": "@@ -4771,7 +4771,10 @@ pub struct ParseIntError {\n     pub kind: IntErrorKind,\n }\n \n+#[unstable(feature = \"int_error_matching\",\n+           reason = \"it can be useful to match errors when making error messages for integer parsing\")]\n #[derive(Debug, Clone, PartialEq, Eq)]\n+#[non_exhaustive]\n pub enum IntErrorKind {\n     Empty,\n     InvalidDigit,"}]}