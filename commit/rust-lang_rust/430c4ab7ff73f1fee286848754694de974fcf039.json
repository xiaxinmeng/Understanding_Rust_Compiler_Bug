{"sha": "430c4ab7ff73f1fee286848754694de974fcf039", "node_id": "C_kwDOAAsO6NoAKDQzMGM0YWI3ZmY3M2YxZmVlMjg2ODQ4NzU0Njk0ZGU5NzRmY2YwMzk", "commit": {"author": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2023-02-22T02:18:40Z"}, "committer": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2023-02-22T17:04:58Z"}, "message": "Remove type-traversal trait aliases", "tree": {"sha": "0a8909e0226eb68309e50eeb4f714e7b4738e71b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a8909e0226eb68309e50eeb4f714e7b4738e71b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/430c4ab7ff73f1fee286848754694de974fcf039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/430c4ab7ff73f1fee286848754694de974fcf039", "html_url": "https://github.com/rust-lang/rust/commit/430c4ab7ff73f1fee286848754694de974fcf039", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/430c4ab7ff73f1fee286848754694de974fcf039/comments", "author": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71b8646854d00ce03320038f98aa6442f1ca2c1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/71b8646854d00ce03320038f98aa6442f1ca2c1e", "html_url": "https://github.com/rust-lang/rust/commit/71b8646854d00ce03320038f98aa6442f1ca2c1e"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "ef46e23123b92a7fa121d99e72a0077b61b42eea", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -27,7 +27,7 @@ use rustc_middle::mir::{Rvalue, StatementKind};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability};\n use rustc_middle::ty::{\n     self, Binder, BoundVariableKind, Clause, EarlyBinder, FnSig, GenericArgKind, List, ParamTy, PredicateKind,\n-    ProjectionPredicate, Ty, TyCtxt, TypeVisitable, TypeckResults,\n+    ProjectionPredicate, Ty, TyCtxt, TypeVisitableExt, TypeckResults,\n };\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{symbol::sym, Span, Symbol};"}, {"sha": "b2071f4dcb1e2b5589eecdb578f65258317dcb74", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -11,7 +11,7 @@ use rustc_hir::{Closure, Expr, ExprKind, Param, PatKind, Unsafety};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n use rustc_middle::ty::binding::BindingMode;\n-use rustc_middle::ty::{self, EarlyBinder, SubstsRef, Ty, TypeVisitable};\n+use rustc_middle::ty::{self, EarlyBinder, SubstsRef, Ty, TypeVisitableExt};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::sym;\n "}, {"sha": "5a533261cad8c336e5f6ba7b58ee763ae262efe6", "filename": "clippy_lints/src/mut_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_key.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -3,7 +3,7 @@ use clippy_utils::{def_path_def_ids, trait_ref_of_method};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::TypeVisitable;\n+use rustc_middle::ty::TypeVisitableExt;\n use rustc_middle::ty::{Adt, Array, Ref, Slice, Tuple, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::def_id::LocalDefId;"}, {"sha": "da3b6fa9899df7b29a8cacfe3a1310b9006539fe", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -18,7 +18,7 @@ use rustc_hir_typeck::expr_use_visitor as euv;\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::mir::FakeReadCause;\n-use rustc_middle::ty::{self, TypeVisitable};\n+use rustc_middle::ty::{self, TypeVisitableExt};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::symbol::kw;"}, {"sha": "6bdb9aa5a26d213bc2393998df675d7412ee4002", "filename": "clippy_lints/src/transmute/transmute_ptr_to_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -6,7 +6,7 @@ use clippy_utils::sugg;\n use rustc_errors::Applicability;\n use rustc_hir::{self as hir, Expr, GenericArg, Mutability, Path, TyKind};\n use rustc_lint::LateContext;\n-use rustc_middle::ty::{self, Ty, TypeVisitable};\n+use rustc_middle::ty::{self, Ty, TypeVisitableExt};\n \n /// Checks for `transmute_ptr_to_ref` lint.\n /// Returns `true` if it's triggered, otherwise returns `false`."}, {"sha": "56207fe767c5716107cca75b48388463013e2a93", "filename": "clippy_lints/src/transmute/useless_transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -4,7 +4,7 @@ use clippy_utils::sugg;\n use rustc_errors::Applicability;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n-use rustc_middle::ty::{self, Ty, TypeVisitable};\n+use rustc_middle::ty::{self, Ty, TypeVisitableExt};\n \n /// Checks for `useless_transmute` lint.\n /// Returns `true` if it's triggered, otherwise returns `false`."}, {"sha": "f7adc9d35558b8eaae9b16223409574bb89b4723", "filename": "clippy_lints/src/types/redundant_allocation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -5,7 +5,7 @@ use rustc_errors::Applicability;\n use rustc_hir::{self as hir, def_id::DefId, QPath, TyKind};\n use rustc_hir_analysis::hir_ty_to_ty;\n use rustc_lint::LateContext;\n-use rustc_middle::ty::TypeVisitable;\n+use rustc_middle::ty::TypeVisitableExt;\n use rustc_span::symbol::sym;\n \n use super::{utils, REDUNDANT_ALLOCATION};"}, {"sha": "d3062f3d2e36002f3dcf5e2135535397e29dc8d4", "filename": "clippy_lints/src/types/vec_box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -7,7 +7,7 @@ use rustc_hir::{self as hir, def_id::DefId, GenericArg, QPath, TyKind};\n use rustc_hir_analysis::hir_ty_to_ty;\n use rustc_lint::LateContext;\n use rustc_middle::ty::layout::LayoutOf;\n-use rustc_middle::ty::TypeVisitable;\n+use rustc_middle::ty::TypeVisitableExt;\n use rustc_span::symbol::sym;\n \n use super::VEC_BOX;"}, {"sha": "93e4b023c5c79a6e03f3cfcb0d7994b50706ead0", "filename": "clippy_lints/src/zero_sized_map_values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -5,7 +5,7 @@ use rustc_hir::{self as hir, HirId, ItemKind, Node};\n use rustc_hir_analysis::hir_ty_to_ty;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::layout::LayoutOf as _;\n-use rustc_middle::ty::{Adt, Ty, TypeVisitable};\n+use rustc_middle::ty::{Adt, Ty, TypeVisitableExt};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n "}, {"sha": "f02f8ecb43d7204568c012be76a2d7d4d87a10d0", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -104,7 +104,7 @@ use rustc_middle::ty::fast_reject::SimplifiedType::{\n     PtrSimplifiedType, SliceSimplifiedType, StrSimplifiedType, UintSimplifiedType,\n };\n use rustc_middle::ty::{\n-    layout::IntegerExt, BorrowKind, ClosureKind, DefIdTree, Ty, TyCtxt, TypeAndMut, TypeVisitable, UpvarCapture,\n+    layout::IntegerExt, BorrowKind, ClosureKind, DefIdTree, Ty, TyCtxt, TypeAndMut, TypeVisitableExt, UpvarCapture,\n };\n use rustc_middle::ty::{FloatTy, IntTy, UintTy};\n use rustc_span::hygiene::{ExpnKind, MacroKind};"}, {"sha": "920ce8e655be01d9dc44d38d4d2364c66026e906", "filename": "clippy_utils/src/mir/possible_borrower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -4,7 +4,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_lint::LateContext;\n use rustc_middle::mir::{self, visit::Visitor as _, Mutability};\n-use rustc_middle::ty::{self, visit::ir::TypeVisitor, TyCtxt};\n+use rustc_middle::ty::{self, visit::TypeVisitor, TyCtxt};\n use rustc_mir_dataflow::{impls::MaybeStorageLive, Analysis, ResultsCursor};\n use std::borrow::Cow;\n use std::ops::ControlFlow;"}, {"sha": "34b9bb5994efa6ad8879c4df4626de3c207a6f0d", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/430c4ab7ff73f1fee286848754694de974fcf039/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430c4ab7ff73f1fee286848754694de974fcf039/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=430c4ab7ff73f1fee286848754694de974fcf039", "patch": "@@ -17,8 +17,8 @@ use rustc_lint::LateContext;\n use rustc_middle::mir::interpret::{ConstValue, Scalar};\n use rustc_middle::ty::{\n     self, AdtDef, AliasTy, AssocKind, Binder, BoundRegion, DefIdTree, FnSig, IntTy, List, ParamEnv, Predicate,\n-    PredicateKind, Region, RegionKind, SubstsRef, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, ir::TypeVisitor, UintTy,\n-    VariantDef, VariantDiscr,\n+    PredicateKind, Region, RegionKind, SubstsRef, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor, UintTy,\n+    VariantDef, VariantDiscr, TypeVisitableExt,\n };\n use rustc_middle::ty::{GenericArg, GenericArgKind};\n use rustc_span::symbol::Ident;\n@@ -847,7 +847,7 @@ pub fn for_each_top_level_late_bound_region<B>(\n                 ControlFlow::Continue(())\n             }\n         }\n-        fn visit_binder<T: TypeVisitable<'tcx>>(&mut self, t: &Binder<'tcx, T>) -> ControlFlow<Self::BreakTy> {\n+        fn visit_binder<T: TypeVisitable<TyCtxt<'tcx>>>(&mut self, t: &Binder<'tcx, T>) -> ControlFlow<Self::BreakTy> {\n             self.index += 1;\n             let res = t.super_visit_with(self);\n             self.index -= 1;"}]}