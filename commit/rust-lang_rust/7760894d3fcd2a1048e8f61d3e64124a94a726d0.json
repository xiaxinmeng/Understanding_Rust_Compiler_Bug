{"sha": "7760894d3fcd2a1048e8f61d3e64124a94a726d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NjA4OTRkM2ZjZDJhMTA0OGU4ZjYxZDNlNjQxMjRhOTRhNzI2ZDA=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-29T14:56:19Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-29T14:56:19Z"}, "message": "Allow cranelift to handle atomic pointers", "tree": {"sha": "217fa5aea79d3b702fd7a48ce132287f67ee4861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/217fa5aea79d3b702fd7a48ce132287f67ee4861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7760894d3fcd2a1048e8f61d3e64124a94a726d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7760894d3fcd2a1048e8f61d3e64124a94a726d0", "html_url": "https://github.com/rust-lang/rust/commit/7760894d3fcd2a1048e8f61d3e64124a94a726d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7760894d3fcd2a1048e8f61d3e64124a94a726d0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5f6c0032ef4162c7d94e88adccbb586b38f49ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f6c0032ef4162c7d94e88adccbb586b38f49ea", "html_url": "https://github.com/rust-lang/rust/commit/b5f6c0032ef4162c7d94e88adccbb586b38f49ea"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e5482187a731d281829dfec9f03871b5325ead05", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7760894d3fcd2a1048e8f61d3e64124a94a726d0/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7760894d3fcd2a1048e8f61d3e64124a94a726d0/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=7760894d3fcd2a1048e8f61d3e64124a94a726d0", "patch": "@@ -146,12 +146,12 @@ macro atomic_minmax($fx:expr, $cc:expr, <$T:ident> ($ptr:ident, $src:ident) -> $\n \n macro validate_atomic_type($fx:ident, $intrinsic:ident, $span:ident, $ty:expr) {\n     match $ty.kind() {\n-        ty::Uint(_) | ty::Int(_) => {}\n+        ty::Uint(_) | ty::Int(_) | ty::RawPtr(..) => {}\n         _ => {\n             $fx.tcx.sess.span_err(\n                 $span,\n                 &format!(\n-                    \"`{}` intrinsic: expected basic integer type, found `{:?}`\",\n+                    \"`{}` intrinsic: expected basic integer or raw pointer type, found `{:?}`\",\n                     $intrinsic, $ty\n                 ),\n             );"}]}