{"sha": "137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzN2E2NDBkNjFhNGMwZmUzYzg4YWUwMDYyZDFhZTAxZmFmOGZiZjU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-19T14:24:03Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-04T09:17:37Z"}, "message": "Automatically generate imports for newtype_index `Deserialize` impls", "tree": {"sha": "eb2d6357db4cd937653641ecd8e71e0fc8a5a307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb2d6357db4cd937653641ecd8e71e0fc8a5a307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "html_url": "https://github.com/rust-lang/rust/commit/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ce211dbd0f55f79212fcde773a2060ccfec031d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce211dbd0f55f79212fcde773a2060ccfec031d", "html_url": "https://github.com/rust-lang/rust/commit/3ce211dbd0f55f79212fcde773a2060ccfec031d"}], "stats": {"total": 41, "additions": 19, "deletions": 22}, "files": [{"sha": "4c94c993ab40595131f83168c737a4c2b5292806", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -18,7 +18,6 @@ use std::env;\n use std::hash::Hash;\n use ty::{self, TyCtxt};\n use util::common::{ProfileQueriesMsg, profq_msg};\n-use serialize::{Decodable, Decoder};\n \n use ich::{StableHashingContext, StableHashingContextProvider, Fingerprint};\n "}, {"sha": "0c6c224fa914c9009a5b1546d0cc125301a09337", "filename": "src/librustc/dep_graph/serialized.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fdep_graph%2Fserialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fdep_graph%2Fserialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fserialized.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -13,7 +13,6 @@\n use dep_graph::DepNode;\n use ich::Fingerprint;\n use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n-use serialize::{Decodable, Decoder};\n \n newtype_index! {\n     pub struct SerializedDepNodeIndex { .. }"}, {"sha": "1674320165e65f7fa0260eba170ae4cab3e5b35e", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -122,7 +122,6 @@ impl serialize::UseSpecializedDecodable for HirId {\n // hack to ensure that we don't try to access the private parts of `ItemLocalId` in this module\n mod item_local_id_inner {\n     use rustc_data_structures::indexed_vec::Idx;\n-    use serialize::{Decodable, Decoder};\n     /// An `ItemLocalId` uniquely identifies something within a given \"item-like\",\n     /// that is within a hir::Item, hir::TraitItem, or hir::ImplItem. There is no\n     /// guarantee that the numerical value of a given `ItemLocalId` corresponds to"}, {"sha": "35d1a4dd2cb7c5e691ede2c7d72cf258cfa4c0c8", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -28,7 +28,6 @@ use syntax::ast;\n use syntax_pos::{Span, DUMMY_SP};\n use ty::TyCtxt;\n use ty::query::Providers;\n-use serialize::{Decodable, Decoder};\n \n use hir;\n use hir::Node;"}, {"sha": "4a463c0d5a394dd82080b9aa36a841e2fb39d34c", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -25,7 +25,7 @@ use rustc_data_structures::graph::{self, GraphPredecessors, GraphSuccessors};\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::sync::MappedReadGuard;\n-use rustc_serialize::{self as serialize, Decodable, Decoder};\n+use rustc_serialize::{self as serialize};\n use smallvec::SmallVec;\n use std::borrow::Cow;\n use std::fmt::{self, Debug, Formatter, Write};"}, {"sha": "4633ab11663472df322e5b73b54b364889150771", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -41,7 +41,7 @@ use util::nodemap::{NodeSet, DefIdMap, FxHashMap};\n use arena::SyncDroplessArena;\n use session::DataTypeKind;\n \n-use serialize::{self, Encodable, Encoder, Decodable, Decoder};\n+use serialize::{self, Encodable, Encoder};\n use std::cell::RefCell;\n use std::cmp::{self, Ordering};\n use std::fmt;"}, {"sha": "1416cb17feaedf9832f70e4783a9d5ecd0f5f9a1", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -29,7 +29,7 @@ use rustc_target::spec::abi;\n use syntax::ast::{self, Ident};\n use syntax::symbol::{keywords, InternedString};\n \n-use serialize::{self, Decodable, Decoder};\n+use serialize;\n \n use hir;\n "}, {"sha": "6522dbe117994d75ead05ff1a07a25e6c683672c", "filename": "src/librustc_data_structures/indexed_vec.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_data_structures%2Findexed_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_data_structures%2Findexed_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Findexed_vec.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -340,11 +340,7 @@ macro_rules! newtype_index {\n             @vis          [$v]\n             @debug_format [$debug_format]\n                           $($tokens)*);\n-        impl Decodable for $type {\n-            fn decode<D: Decoder>(d: &mut D) -> Result<Self, D::Error> {\n-                d.read_u32().into()\n-            }\n-        }\n+        newtype_index!(@decodable $type);\n     );\n \n     // The case where no derives are added, but encodable is overridden. Don't\n@@ -377,9 +373,21 @@ macro_rules! newtype_index {\n             @vis          [$v]\n             @debug_format [$debug_format]\n                           $($tokens)*);\n-        impl Decodable for $type {\n-            fn decode<D: Decoder>(d: &mut D) -> Result<Self, D::Error> {\n-                d.read_u32().map(Self::from)\n+        newtype_index!(@decodable $type);\n+    );\n+\n+    (@decodable $type:ident) => (\n+        impl $type {\n+            fn __decodable__impl__hack() {\n+                mod __more_hacks_because__self_doesnt_work_in_functions {\n+                    extern crate serialize;\n+                    use self::serialize::{Decodable, Decoder};\n+                    impl Decodable for super::$type {\n+                        fn decode<D: Decoder>(d: &mut D) -> Result<Self, D::Error> {\n+                            d.read_u32().map(Self::from)\n+                        }\n+                    }\n+                }\n             }\n         }\n     );"}, {"sha": "b3e159dd84457c14b2a35ca5d7821a84024195eb", "filename": "src/librustc_mir/borrow_check/location.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -10,7 +10,6 @@\n \n use rustc::mir::{BasicBlock, Location, Mir};\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n-use rustc_serialize::{Decodable, Decoder};\n \n /// Maps between a MIR Location, which identifies a particular\n /// statement within a basic block, to a \"rich location\", which"}, {"sha": "a873af8333a7fb0af867ae6423ed36645e4951d6", "filename": "src/librustc_mir/borrow_check/nll/constraints/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -13,7 +13,6 @@ use rustc::ty::RegionVid;\n use rustc_data_structures::graph::scc::Sccs;\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use borrow_check::nll::type_check::Locations;\n-use rustc_serialize::{Decodable, Decoder};\n \n use std::fmt;\n use std::ops::Deref;"}, {"sha": "69e2c896d33e515b3ce77fdcb4305f8333fc65ad", "filename": "src/librustc_mir/borrow_check/nll/region_infer/values.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -16,7 +16,6 @@ use rustc_data_structures::indexed_vec::Idx;\n use rustc_data_structures::indexed_vec::IndexVec;\n use std::fmt::Debug;\n use std::rc::Rc;\n-use rustc_serialize::{Decodable, Decoder};\n \n /// Maps between a `Location` and a `PointIndex` (and vice versa).\n crate struct RegionValueElements {"}, {"sha": "cc176cbc40392aa733851faa605d681645fc1ee6", "filename": "src/librustc_mir/borrow_check/nll/type_check/liveness/liveness_map.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Fliveness_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Fliveness_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Fliveness_map.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -23,7 +23,6 @@ use rustc::ty::{RegionVid, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use util::liveness::LiveVariableMap;\n-use rustc_serialize::{Decodable, Decoder};\n \n /// Map between Local and LiveVar indices: the purpose of this\n /// map is to define the subset of local variables for which we need"}, {"sha": "4b39d58cd96a82e3c7479aa84429241bb63908f5", "filename": "src/librustc_mir/borrow_check/nll/type_check/liveness/local_use_map.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Flocal_use_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Flocal_use_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Flocal_use_map.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -15,7 +15,6 @@ use rustc::mir::{Local, Location, Mir};\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use rustc_data_structures::vec_linked_list as vll;\n use util::liveness::{categorize, DefUse, LiveVariableMap};\n-use rustc_serialize::{Decodable, Decoder};\n \n /// A map that cross references each local with the locations where it\n /// is defined (assigned), used, or dropped. Used during liveness"}, {"sha": "cc927df6350bdb3cc3b93893cd8556e6c662079e", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -32,7 +32,6 @@ use syntax::ast;\n use syntax::attr::{self, UnwindAttr};\n use syntax::symbol::keywords;\n use syntax_pos::Span;\n-use rustc_serialize::{Decodable, Decoder};\n use transform::MirSource;\n use util as mir_util;\n "}, {"sha": "50ce0ad6915da3c9916c1c99ad1d754932590048", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=137a640d61a4c0fe3c88ae0062d1ae01faf8fbf5", "patch": "@@ -17,7 +17,6 @@ use std::fmt;\n use std::ops::{Add, Deref, Sub, Mul, AddAssign, Range, RangeInclusive};\n \n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n-use rustc_serialize::{Decodable, Decoder};\n \n pub mod call;\n "}]}