{"sha": "1e99f26894a766f5861ae2805c13e915e74493f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlOTlmMjY4OTRhNzY2ZjU4NjFhZTI4MDVjMTNlOTE1ZTc0NDkzZjA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-31T00:47:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-31T00:47:25Z"}, "message": "Rollup merge of #80470 - SimonSapin:array-intoiter-type, r=m-ou-se\n\nStabilize by-value `[T; N]` iterator `core::array::IntoIter`\n\nTracking issue: https://github.com/rust-lang/rust/issues/65798\n\nThis is unblocked now that `min_const_generics` has been stabilized in https://github.com/rust-lang/rust/pull/79135.\n\nThis PR does *not* include the corresponding `IntoIterator` impl, which is https://github.com/rust-lang/rust/pull/65819. Instead, an iterator can be constructed through the `new` method.\n\n`new` would become unnecessary when `IntoIterator` is implemented and might be deprecated then, although it will stay stable.", "tree": {"sha": "bc5f9dc73d235f276c5e593edef9d9c5f66ddbc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc5f9dc73d235f276c5e593edef9d9c5f66ddbc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e99f26894a766f5861ae2805c13e915e74493f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFf4eCRBK7hj4Ov3rIwAAdHIIADtnJkiOVyuyK7sIlBPT+gql\nGv8nCE2GlOu+R2jTGdhCZZVvOy7nW9QJd77/laE8lFuln8h0E0W0tZv6NDbK68v/\n9Bizpx6DC0U3xh9I2QMpkP8naxNWcSZU6HBRGy190/4UQy33Av1AxkD5uEjOOe38\nruwCXwaEuJbTGQinhXVZuXqP6gyyAuhGtgg58/wNxuMHYC2HI0o30pbes96cD43f\n7eDLTeCr9W0riAcyQ6CizMxcdZq77kHYabad46VHaBPy1wbB0ImGZOs9pkw6zlcr\n9PPsTpDAAuGl1+0dxZQhTrQRj9RHy+UtIHfdDWTXv1LOx8UD9br8soKoCKCqh7Y=\n=1phV\n-----END PGP SIGNATURE-----\n", "payload": "tree bc5f9dc73d235f276c5e593edef9d9c5f66ddbc3\nparent 054c29d22ca171ea8565cc5c53dbbf0d473f05eb\nparent 83d32b0a27350fd640cb29d0514598e4630874bb\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612054045 +0100\ncommitter GitHub <noreply@github.com> 1612054045 +0100\n\nRollup merge of #80470 - SimonSapin:array-intoiter-type, r=m-ou-se\n\nStabilize by-value `[T; N]` iterator `core::array::IntoIter`\n\nTracking issue: https://github.com/rust-lang/rust/issues/65798\n\nThis is unblocked now that `min_const_generics` has been stabilized in https://github.com/rust-lang/rust/pull/79135.\n\nThis PR does *not* include the corresponding `IntoIterator` impl, which is https://github.com/rust-lang/rust/pull/65819. Instead, an iterator can be constructed through the `new` method.\n\n`new` would become unnecessary when `IntoIterator` is implemented and might be deprecated then, although it will stay stable.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e99f26894a766f5861ae2805c13e915e74493f0", "html_url": "https://github.com/rust-lang/rust/commit/1e99f26894a766f5861ae2805c13e915e74493f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e99f26894a766f5861ae2805c13e915e74493f0/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "054c29d22ca171ea8565cc5c53dbbf0d473f05eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/054c29d22ca171ea8565cc5c53dbbf0d473f05eb", "html_url": "https://github.com/rust-lang/rust/commit/054c29d22ca171ea8565cc5c53dbbf0d473f05eb"}, {"sha": "83d32b0a27350fd640cb29d0514598e4630874bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/83d32b0a27350fd640cb29d0514598e4630874bb", "html_url": "https://github.com/rust-lang/rust/commit/83d32b0a27350fd640cb29d0514598e4630874bb"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "651f4c6fabd0e660eedde744dca708916b9b00c9", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -11,11 +11,9 @@\n     html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\",\n     test(no_crate_inject, attr(deny(warnings)))\n )]\n-#![feature(array_value_iter_slice)]\n #![feature(dropck_eyepatch)]\n #![feature(new_uninit)]\n #![feature(maybe_uninit_slice)]\n-#![feature(array_value_iter)]\n #![cfg_attr(bootstrap, feature(min_const_generics))]\n #![feature(min_specialization)]\n #![cfg_attr(test, feature(test))]"}, {"sha": "8f2e49e299c8be0896ea0be401b4f51a899d1a5f", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -30,7 +30,6 @@\n //! get confused if the spans from leaf AST nodes occur in multiple places\n //! in the HIR, especially for multiple identifiers.\n \n-#![feature(array_value_iter)]\n #![feature(crate_visibility_modifier)]\n #![feature(or_patterns)]\n #![recursion_limit = \"256\"]"}, {"sha": "efc516a662fb7e0df57a0e167e37fb51d1944058", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -2,7 +2,6 @@\n //!\n //! [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/hir.html\n \n-#![feature(array_value_iter)]\n #![feature(crate_visibility_modifier)]\n #![feature(const_fn)] // For the unsizing cast on `&[]`\n #![feature(const_panic)]"}, {"sha": "e1f8d59991f21128b28967453c4ef13da2a7424a", "filename": "compiler/rustc_trait_selection/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -11,7 +11,6 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n-#![feature(array_value_iter)]\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(drain_filter)]"}, {"sha": "8a21fdf5e7acbc79a73005a6aad5fec88ab2c4e2", "filename": "compiler/rustc_typeck/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Flib.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -56,7 +56,6 @@ This API is completely unstable and subject to change.\n */\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n-#![feature(array_value_iter)]\n #![feature(bool_to_option)]\n #![feature(box_syntax)]\n #![feature(crate_visibility_modifier)]"}, {"sha": "13f4d902d3b2ad0edb6d9141427979233315a2d1", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -78,7 +78,6 @@\n #![feature(allocator_api)]\n #![feature(array_chunks)]\n #![feature(array_methods)]\n-#![feature(array_value_iter)]\n #![feature(array_windows)]\n #![feature(allow_internal_unstable)]\n #![feature(arbitrary_self_types)]"}, {"sha": "535291471b1d0e9b33a6b1399a65a4e2965bbfdf", "filename": "library/core/src/array/iter.rs", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fiter.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -11,7 +11,7 @@ use crate::{\n /// A by-value [array] iterator.\n ///\n /// [array]: ../../std/primitive.array.html\n-#[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n+#[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n pub struct IntoIter<T, const N: usize> {\n     /// This is the array we are iterating over.\n     ///\n@@ -38,10 +38,21 @@ pub struct IntoIter<T, const N: usize> {\n impl<T, const N: usize> IntoIter<T, N> {\n     /// Creates a new iterator over the given `array`.\n     ///\n-    /// *Note*: this method might never get stabilized and/or removed in the\n-    /// future as there will likely be another, preferred way of obtaining this\n-    /// iterator (either via `IntoIterator` for arrays or via another way).\n-    #[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n+    /// *Note*: this method might be deprecated in the future,\n+    /// after [`IntoIterator` is implemented for arrays][array-into-iter].\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::array;\n+    ///\n+    /// for value in array::IntoIter::new([1, 2, 3, 4, 5]) {\n+    ///     // The type of `value` is a `i32` here, instead of `&i32`\n+    ///     let _: i32 = value;\n+    /// }\n+    /// ```\n+    /// [array-into-iter]: https://github.com/rust-lang/rust/pull/65819\n+    #[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n     pub fn new(array: [T; N]) -> Self {\n         // SAFETY: The transmute here is actually safe. The docs of `MaybeUninit`\n         // promise:\n@@ -69,7 +80,7 @@ impl<T, const N: usize> IntoIter<T, N> {\n \n     /// Returns an immutable slice of all elements that have not been yielded\n     /// yet.\n-    #[unstable(feature = \"array_value_iter_slice\", issue = \"65798\")]\n+    #[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n     pub fn as_slice(&self) -> &[T] {\n         // SAFETY: We know that all elements within `alive` are properly initialized.\n         unsafe {\n@@ -79,7 +90,7 @@ impl<T, const N: usize> IntoIter<T, N> {\n     }\n \n     /// Returns a mutable slice of all elements that have not been yielded yet.\n-    #[unstable(feature = \"array_value_iter_slice\", issue = \"65798\")]\n+    #[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n     pub fn as_mut_slice(&mut self) -> &mut [T] {\n         // SAFETY: We know that all elements within `alive` are properly initialized.\n         unsafe {"}, {"sha": "d13061d220389558e5857b3bd88d6d17aef69c43", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -18,7 +18,7 @@ use crate::slice::{Iter, IterMut};\n \n mod iter;\n \n-#[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n+#[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n pub use iter::IntoIter;\n \n /// Converts a reference to `T` into a reference to an array of length 1 (without copying)."}, {"sha": "bc0e3e059c9172ff86d26d106828740b4015c329", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -50,7 +50,6 @@\n #![feature(slice_internals)]\n #![feature(slice_partition_dedup)]\n #![feature(int_error_matching)]\n-#![feature(array_value_iter)]\n #![feature(iter_advance_by)]\n #![feature(iter_partition_in_place)]\n #![feature(iter_intersperse)]"}, {"sha": "6ba1b2813a177e4ad2ca3e9bfe6ff34ab55c6066", "filename": "src/test/ui/const-generics/array-impls/into-iter-impls-length-32.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -1,6 +1,5 @@\n // check-pass\n \n-#![feature(array_value_iter)]\n #![feature(trusted_len)]\n \n use std::{"}, {"sha": "deafde2912bb722e2949706a358cf9db1674f30b", "filename": "src/test/ui/const-generics/array-impls/into-iter-impls-length-33.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e99f26894a766f5861ae2805c13e915e74493f0/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99f26894a766f5861ae2805c13e915e74493f0/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs?ref=1e99f26894a766f5861ae2805c13e915e74493f0", "patch": "@@ -1,6 +1,5 @@\n // check-pass\n \n-#![feature(array_value_iter)]\n #![feature(trusted_len)]\n \n use std::{"}]}