{"sha": "a01ef8ef87d9697307c5d4fec4d1fa1ede0d65ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMWVmOGVmODdkOTY5NzMwN2M1ZDRmZWM0ZDFmYTFlZGUwZDY1YWU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-02-17T22:54:18Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-02-18T04:09:20Z"}, "message": "Change SmallBitv to use uint instead of u32", "tree": {"sha": "412c8fbd518402daf2e0a89dbb14d191dbec654c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/412c8fbd518402daf2e0a89dbb14d191dbec654c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a01ef8ef87d9697307c5d4fec4d1fa1ede0d65ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a01ef8ef87d9697307c5d4fec4d1fa1ede0d65ae", "html_url": "https://github.com/rust-lang/rust/commit/a01ef8ef87d9697307c5d4fec4d1fa1ede0d65ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a01ef8ef87d9697307c5d4fec4d1fa1ede0d65ae/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91fae2791292c7374143e82814a375a12bfd4e83", "url": "https://api.github.com/repos/rust-lang/rust/commits/91fae2791292c7374143e82814a375a12bfd4e83", "html_url": "https://github.com/rust-lang/rust/commit/91fae2791292c7374143e82814a375a12bfd4e83"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "4d995c733bef7e7eaf80b4dbd0b3867f5da2b8f2", "filename": "src/libstd/bitv.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a01ef8ef87d9697307c5d4fec4d1fa1ede0d65ae/src%2Flibstd%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a01ef8ef87d9697307c5d4fec4d1fa1ede0d65ae/src%2Flibstd%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbitv.rs?ref=a01ef8ef87d9697307c5d4fec4d1fa1ede0d65ae", "patch": "@@ -16,25 +16,25 @@ use core::vec;\n \n struct SmallBitv {\n     /// only the lowest nbits of this value are used. the rest is undefined.\n-    bits: u32\n+    bits: uint\n }\n \n /// a mask that has a 1 for each defined bit in a small_bitv, assuming n bits\n #[inline(always)]\n-fn small_mask(nbits: uint) -> u32 {\n+fn small_mask(nbits: uint) -> uint {\n     (1 << nbits) - 1\n }\n \n impl SmallBitv {\n-    static fn new(bits: u32) -> SmallBitv {\n+    static fn new(bits: uint) -> SmallBitv {\n         SmallBitv {bits: bits}\n     }\n \n     #[inline(always)]\n-    fn bits_op(&mut self, right_bits: u32, nbits: uint,\n-               f: fn(u32, u32) -> u32) -> bool {\n+    fn bits_op(&mut self, right_bits: uint, nbits: uint,\n+               f: fn(uint, uint) -> uint) -> bool {\n         let mask = small_mask(nbits);\n-        let old_b: u32 = self.bits;\n+        let old_b: uint = self.bits;\n         let new_b = f(old_b, right_bits);\n         self.bits = new_b;\n         mask & old_b != mask & new_b\n@@ -71,7 +71,7 @@ impl SmallBitv {\n             self.bits |= 1<<i;\n         }\n         else {\n-            self.bits &= !(1<<i as u32);\n+            self.bits &= !(1<<i as uint);\n         }\n     }\n \n@@ -259,7 +259,7 @@ priv impl Bitv {\n \n impl Bitv {\n     static fn new(nbits: uint, init: bool) -> Bitv {\n-        let rep = if nbits <= 32 {\n+        let rep = if nbits <= uint::bits {\n             Small(~SmallBitv::new(if init {!0} else {0}))\n         }\n         else {"}]}