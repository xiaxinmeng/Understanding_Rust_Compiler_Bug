{"sha": "fb5539b475586c31e6e51f252dae1559343b2be7", "node_id": "C_kwDOAAsO6NoAKGZiNTUzOWI0NzU1ODZjMzFlNmU1MWYyNTJkYWUxNTU5MzQzYjJiZTc", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-02-19T21:46:49Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-02-21T18:28:22Z"}, "message": "Add tests", "tree": {"sha": "387b8a57f5f50421b6d8950a3b4a214eba74dbd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/387b8a57f5f50421b6d8950a3b4a214eba74dbd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb5539b475586c31e6e51f252dae1559343b2be7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb5539b475586c31e6e51f252dae1559343b2be7", "html_url": "https://github.com/rust-lang/rust/commit/fb5539b475586c31e6e51f252dae1559343b2be7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb5539b475586c31e6e51f252dae1559343b2be7/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc41d4bf351b9c39aac58b7d0e307495ddf60dfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc41d4bf351b9c39aac58b7d0e307495ddf60dfc", "html_url": "https://github.com/rust-lang/rust/commit/fc41d4bf351b9c39aac58b7d0e307495ddf60dfc"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "987bf9705293338c6a28c3d0f195a3158347ca6a", "filename": "compiler/rustc_target/src/asm/riscv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb5539b475586c31e6e51f252dae1559343b2be7/compiler%2Frustc_target%2Fsrc%2Fasm%2Friscv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb5539b475586c31e6e51f252dae1559343b2be7/compiler%2Frustc_target%2Fsrc%2Fasm%2Friscv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Friscv.rs?ref=fb5539b475586c31e6e51f252dae1559343b2be7", "patch": "@@ -1,5 +1,5 @@\n use super::{InlineAsmArch, InlineAsmType};\n-use crate::spec::{Target, RelocModel};\n+use crate::spec::{RelocModel, Target};\n use rustc_data_structures::stable_set::FxHashSet;\n use rustc_macros::HashStable_Generic;\n use rustc_span::{sym, Symbol};"}, {"sha": "7c136a475486b63eb835a2e3bdac065f6204f54a", "filename": "compiler/rustc_target/src/asm/x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb5539b475586c31e6e51f252dae1559343b2be7/compiler%2Frustc_target%2Fsrc%2Fasm%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb5539b475586c31e6e51f252dae1559343b2be7/compiler%2Frustc_target%2Fsrc%2Fasm%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fx86.rs?ref=fb5539b475586c31e6e51f252dae1559343b2be7", "patch": "@@ -1,5 +1,5 @@\n use super::{InlineAsmArch, InlineAsmType};\n-use crate::spec::{Target, RelocModel};\n+use crate::spec::{RelocModel, Target};\n use rustc_data_structures::stable_set::FxHashSet;\n use rustc_macros::HashStable_Generic;\n use rustc_span::Symbol;"}, {"sha": "e64f5e8af52384a2de783a8d0d848a1d804ddd04", "filename": "src/test/ui/asm/issue-85247.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fb5539b475586c31e6e51f252dae1559343b2be7/src%2Ftest%2Fui%2Fasm%2Fissue-85247.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb5539b475586c31e6e51f252dae1559343b2be7/src%2Ftest%2Fui%2Fasm%2Fissue-85247.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fissue-85247.rs?ref=fb5539b475586c31e6e51f252dae1559343b2be7", "patch": "@@ -0,0 +1,26 @@\n+// revisions: ropi rwpi\n+\n+// [ropi] compile-flags: --target armv7-unknown-linux-gnueabihf -C relocation-model=ropi\n+// [rwpi] compile-flags: --target armv7-unknown-linux-gnueabihf -C relocation-model=rwpi\n+// [ropi] needs-llvm-components: arm\n+// [rwpi] needs-llvm-components: arm\n+// [ropi] build-pass\n+\n+#![feature(no_core, lang_items, rustc_attrs)]\n+#![no_core]\n+#![crate_type = \"rlib\"]\n+\n+#[rustc_builtin_macro]\n+macro_rules! asm {\n+    () => {};\n+}\n+#[lang = \"sized\"]\n+trait Sized {}\n+\n+// R9 is reserved as the RWPI base register\n+fn main() {\n+    unsafe {\n+        asm!(\"\", out(\"r9\") _);\n+        //[rwpi]~^ cannot use register `r9`\n+    }\n+}"}, {"sha": "996b0933a34122bfeca371fc039977b33c29bb9c", "filename": "src/test/ui/asm/issue-85247.rwpi.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fb5539b475586c31e6e51f252dae1559343b2be7/src%2Ftest%2Fui%2Fasm%2Fissue-85247.rwpi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb5539b475586c31e6e51f252dae1559343b2be7/src%2Ftest%2Fui%2Fasm%2Fissue-85247.rwpi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fissue-85247.rwpi.stderr?ref=fb5539b475586c31e6e51f252dae1559343b2be7", "patch": "@@ -0,0 +1,8 @@\n+error: cannot use register `r9`: the RWPI static base register (r9) cannot be used as an operand for inline asm\n+  --> $DIR/issue-85247.rs:23:18\n+   |\n+LL |         asm!(\"\", out(\"r9\") _);\n+   |                  ^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "d595e88ff80c5d6536641408aaa3eb6946983adc", "filename": "src/test/ui/asm/issue-92378.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fb5539b475586c31e6e51f252dae1559343b2be7/src%2Ftest%2Fui%2Fasm%2Fissue-92378.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb5539b475586c31e6e51f252dae1559343b2be7/src%2Ftest%2Fui%2Fasm%2Fissue-92378.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fissue-92378.rs?ref=fb5539b475586c31e6e51f252dae1559343b2be7", "patch": "@@ -0,0 +1,30 @@\n+// compile-flags: --target armv5te-unknown-linux-gnueabi\n+// needs-llvm-components: arm\n+// build-pass\n+\n+#![feature(no_core, lang_items, rustc_attrs, isa_attribute)]\n+#![no_core]\n+#![crate_type = \"rlib\"]\n+\n+#[rustc_builtin_macro]\n+macro_rules! asm {\n+    () => {};\n+}\n+#[lang = \"sized\"]\n+trait Sized {}\n+\n+// ARM uses R11 for the frame pointer, make sure R7 is usable.\n+#[instruction_set(arm::a32)]\n+pub fn arm() {\n+    unsafe {\n+        asm!(\"\", out(\"r7\") _);\n+    }\n+}\n+\n+// Thumb uses R7 for the frame pointer, make sure R11 is usable.\n+#[instruction_set(arm::t32)]\n+pub fn thumb() {\n+    unsafe {\n+        asm!(\"\", out(\"r11\") _);\n+    }\n+}"}]}