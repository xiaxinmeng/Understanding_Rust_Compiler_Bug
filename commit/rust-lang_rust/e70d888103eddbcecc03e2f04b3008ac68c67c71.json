{"sha": "e70d888103eddbcecc03e2f04b3008ac68c67c71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MGQ4ODgxMDNlZGRiY2VjYzAzZTJmMDRiMzAwOGFjNjhjNjdjNzE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-12-19T23:36:04Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-12-19T23:36:04Z"}, "message": "Use def span for associated function suggestions", "tree": {"sha": "c232eb8a0378da15120009bb781130a176296fb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c232eb8a0378da15120009bb781130a176296fb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e70d888103eddbcecc03e2f04b3008ac68c67c71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e70d888103eddbcecc03e2f04b3008ac68c67c71", "html_url": "https://github.com/rust-lang/rust/commit/e70d888103eddbcecc03e2f04b3008ac68c67c71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e70d888103eddbcecc03e2f04b3008ac68c67c71/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b39c4bc12358078f77ddd01288b24252f757f37d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b39c4bc12358078f77ddd01288b24252f757f37d", "html_url": "https://github.com/rust-lang/rust/commit/b39c4bc12358078f77ddd01288b24252f757f37d"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "f29009c1973a274e017c6850718bd78379f763be", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e70d888103eddbcecc03e2f04b3008ac68c67c71/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70d888103eddbcecc03e2f04b3008ac68c67c71/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=e70d888103eddbcecc03e2f04b3008ac68c67c71", "patch": "@@ -122,7 +122,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                                impl_ty);\n                         if let Some(note_span) = note_span {\n                             // We have a span pointing to the method. Show note with snippet.\n-                            err.span_note(note_span, &note_str);\n+                            err.span_note(self.tcx.sess.codemap().def_span(note_span), &note_str);\n                         } else {\n                             err.note(&note_str);\n                         }\n@@ -131,7 +131,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         let item = self\n                             .associated_item(trait_did, item_name, Namespace::Value)\n                             .unwrap();\n-                        let item_span = self.tcx.def_span(item.def_id);\n+                        let item_span = self.tcx.sess.codemap()\n+                            .def_span(self.tcx.def_span(item.def_id));\n                         span_note!(err,\n                                    item_span,\n                                    \"candidate #{} is defined in the trait `{}`\","}, {"sha": "e9a1fe82f142aeafffeb467364181365a8d08c70", "filename": "src/test/ui/span/issue-37767.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e70d888103eddbcecc03e2f04b3008ac68c67c71/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e70d888103eddbcecc03e2f04b3008ac68c67c71/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr?ref=e70d888103eddbcecc03e2f04b3008ac68c67c71", "patch": "@@ -8,13 +8,13 @@ note: candidate #1 is defined in the trait `A`\n   --> $DIR/issue-37767.rs:12:5\n    |\n 12 |     fn foo(&mut self) {}\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `A::foo(&a)` instead\n note: candidate #2 is defined in the trait `B`\n   --> $DIR/issue-37767.rs:16:5\n    |\n 16 |     fn foo(&mut self) {}\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `B::foo(&a)` instead\n \n error[E0034]: multiple applicable items in scope\n@@ -27,13 +27,13 @@ note: candidate #1 is defined in the trait `C`\n   --> $DIR/issue-37767.rs:24:5\n    |\n 24 |     fn foo(&self) {}\n-   |     ^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `C::foo(&a)` instead\n note: candidate #2 is defined in the trait `D`\n   --> $DIR/issue-37767.rs:28:5\n    |\n 28 |     fn foo(&self) {}\n-   |     ^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `D::foo(&a)` instead\n \n error[E0034]: multiple applicable items in scope\n@@ -46,13 +46,13 @@ note: candidate #1 is defined in the trait `E`\n   --> $DIR/issue-37767.rs:36:5\n    |\n 36 |     fn foo(self) {}\n-   |     ^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `E::foo(a)` instead\n note: candidate #2 is defined in the trait `F`\n   --> $DIR/issue-37767.rs:40:5\n    |\n 40 |     fn foo(self) {}\n-   |     ^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `F::foo(a)` instead\n \n error: aborting due to 3 previous errors"}, {"sha": "aeb98e4cabc26d97493c23a1e933891aa2ab4f8a", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e70d888103eddbcecc03e2f04b3008ac68c67c71/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e70d888103eddbcecc03e2f04b3008ac68c67c71/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=e70d888103eddbcecc03e2f04b3008ac68c67c71", "patch": "@@ -44,10 +44,8 @@ error[E0599]: no method named `fff` found for type `Myisize` in the current scop\n note: candidate #1 is defined in an impl for the type `Myisize`\n   --> $DIR/issue-7575.rs:51:5\n    |\n-51 | /     fn fff(i: isize) -> isize {\n-52 | |         i\n-53 | |     }\n-   | |_____^\n+51 |     fn fff(i: isize) -> isize {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0599]: no method named `is_str` found for type `T` in the current scope\n   --> $DIR/issue-7575.rs:82:7\n@@ -60,10 +58,8 @@ error[E0599]: no method named `is_str` found for type `T` in the current scope\n note: candidate #1 is defined in the trait `ManyImplTrait`\n   --> $DIR/issue-7575.rs:57:5\n    |\n-57 | /     fn is_str() -> bool {\n-58 | |         false\n-59 | |     }\n-   | |_____^\n+57 |     fn is_str() -> bool {\n+   |     ^^^^^^^^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `ManyImplTrait::is_str(t)` instead\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `is_str`, perhaps you need to implement it:"}]}