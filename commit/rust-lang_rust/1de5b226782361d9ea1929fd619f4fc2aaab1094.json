{"sha": "1de5b226782361d9ea1929fd619f4fc2aaab1094", "node_id": "C_kwDOAAsO6NoAKDFkZTViMjI2NzgyMzYxZDllYTE5MjlmZDYxOWY0ZmMyYWFhYjEwOTQ", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2022-08-28T05:22:21Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2022-08-28T05:22:21Z"}, "message": "add riscv64gc-unknown-openbsd support (target riscv64-unknown-openbsd on OpenBSD)\n\n- add platform-support documentation\n- add riscv64gc-unknown-openbsd spec\n- do not try to link with -latomic on openbsd", "tree": {"sha": "0742821dd5728fcef0747ec3fefe1dbb52fb5081", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0742821dd5728fcef0747ec3fefe1dbb52fb5081"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1de5b226782361d9ea1929fd619f4fc2aaab1094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1de5b226782361d9ea1929fd619f4fc2aaab1094", "html_url": "https://github.com/rust-lang/rust/commit/1de5b226782361d9ea1929fd619f4fc2aaab1094", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1de5b226782361d9ea1929fd619f4fc2aaab1094/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dacb6ee7b00fcd46f1a0e17dae2c81c7580843e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/dacb6ee7b00fcd46f1a0e17dae2c81c7580843e4", "html_url": "https://github.com/rust-lang/rust/commit/dacb6ee7b00fcd46f1a0e17dae2c81c7580843e4"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "28e092c1eb72c1c9205068aa388bc5d912dc0a8c", "filename": "compiler/rustc_llvm/build.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1de5b226782361d9ea1929fd619f4fc2aaab1094/compiler%2Frustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5b226782361d9ea1929fd619f4fc2aaab1094/compiler%2Frustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fbuild.rs?ref=1de5b226782361d9ea1929fd619f4fc2aaab1094", "patch": "@@ -342,10 +342,10 @@ fn main() {\n     };\n \n     // RISC-V GCC erroneously requires libatomic for sub-word\n-    // atomic operations. FreeBSD uses Clang as its system\n+    // atomic operations. Some BSD uses Clang as its system\n     // compiler and provides no libatomic in its base system so\n     // does not want this.\n-    if !target.contains(\"freebsd\") && target.starts_with(\"riscv\") {\n+    if target.starts_with(\"riscv\") && !target.contains(\"freebsd\") && !target.contains(\"openbsd\") {\n         println!(\"cargo:rustc-link-lib=atomic\");\n     }\n "}, {"sha": "d1bffa2e6ee30d358f19fc4ed7b7e07892eb3956", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1de5b226782361d9ea1929fd619f4fc2aaab1094/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5b226782361d9ea1929fd619f4fc2aaab1094/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=1de5b226782361d9ea1929fd619f4fc2aaab1094", "patch": "@@ -895,6 +895,7 @@ supported_targets! {\n     (\"i686-unknown-openbsd\", i686_unknown_openbsd),\n     (\"powerpc-unknown-openbsd\", powerpc_unknown_openbsd),\n     (\"powerpc64-unknown-openbsd\", powerpc64_unknown_openbsd),\n+    (\"riscv64gc-unknown-openbsd\", riscv64gc_unknown_openbsd),\n     (\"sparc64-unknown-openbsd\", sparc64_unknown_openbsd),\n     (\"x86_64-unknown-openbsd\", x86_64_unknown_openbsd),\n "}, {"sha": "cd10f3afaac06362542da6b58d332f1ee2b929bf", "filename": "compiler/rustc_target/src/spec/riscv64gc_unknown_openbsd.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1de5b226782361d9ea1929fd619f4fc2aaab1094/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5b226782361d9ea1929fd619f4fc2aaab1094/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_openbsd.rs?ref=1de5b226782361d9ea1929fd619f4fc2aaab1094", "patch": "@@ -0,0 +1,18 @@\n+use crate::spec::{CodeModel, Target, TargetOptions};\n+\n+pub fn target() -> Target {\n+    Target {\n+        llvm_target: \"riscv64-unknown-openbsd\".into(),\n+        pointer_width: 64,\n+        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n64-S128\".into(),\n+        arch: \"riscv64\".into(),\n+        options: TargetOptions {\n+            code_model: Some(CodeModel::Medium),\n+            cpu: \"generic-rv64\".into(),\n+            features: \"+m,+a,+f,+d,+c\".into(),\n+            llvm_abiname: \"lp64d\".into(),\n+            max_atomic_width: Some(64),\n+            ..super::openbsd_base::opts()\n+        },\n+    }\n+}"}, {"sha": "e1cc8d671d7fe892a0048627a1b3ba2e3bbad846", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1de5b226782361d9ea1929fd619f4fc2aaab1094/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5b226782361d9ea1929fd619f4fc2aaab1094/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=1de5b226782361d9ea1929fd619f4fc2aaab1094", "patch": "@@ -432,12 +432,13 @@ impl Step for Llvm {\n             cfg.define(\"LLVM_LINK_LLVM_DYLIB\", \"ON\");\n         }\n \n-        if target.starts_with(\"riscv\") && !target.contains(\"freebsd\") {\n+        if target.starts_with(\"riscv\") && !target.contains(\"freebsd\") && !target.contains(\"openbsd\")\n+        {\n             // RISC-V GCC erroneously requires linking against\n             // `libatomic` when using 1-byte and 2-byte C++\n             // atomics but the LLVM build system check cannot\n             // detect this. Therefore it is set manually here.\n-            // FreeBSD uses Clang as its system compiler and\n+            // Some BSD uses Clang as its system compiler and\n             // provides no libatomic in its base system so does\n             // not want this.\n             ldflags.exe.push(\" -latomic\");"}, {"sha": "742fbe11d9c6fbab4ae13be216ad7a35e65643c8", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1de5b226782361d9ea1929fd619f4fc2aaab1094/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/1de5b226782361d9ea1929fd619f4fc2aaab1094/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=1de5b226782361d9ea1929fd619f4fc2aaab1094", "patch": "@@ -285,6 +285,7 @@ target | std | host | notes\n `riscv32imc-esp-espidf` | \u2713 |  | RISC-V ESP-IDF\n `riscv64gc-unknown-freebsd` |   |   | RISC-V FreeBSD\n `riscv64gc-unknown-linux-musl` |   |   | RISC-V Linux (kernel 4.20, musl 1.2.0)\n+[`riscv64gc-unknown-openbsd`](platform-support/openbsd.md) | \u2713 | \u2713 | OpenBSD/riscv64\n `s390x-unknown-linux-musl` |  |  | S390x Linux (kernel 3.2, MUSL)\n `sparc-unknown-linux-gnu` | \u2713 |  | 32-bit SPARC Linux\n `sparc64-unknown-netbsd` | \u2713 | \u2713 | NetBSD/sparc64"}, {"sha": "4ce80157dbf9c04762024da82394fda3814532ad", "filename": "src/doc/rustc/src/platform-support/openbsd.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1de5b226782361d9ea1929fd619f4fc2aaab1094/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fopenbsd.md", "raw_url": "https://github.com/rust-lang/rust/raw/1de5b226782361d9ea1929fd619f4fc2aaab1094/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fopenbsd.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fopenbsd.md?ref=1de5b226782361d9ea1929fd619f4fc2aaab1094", "patch": "@@ -13,6 +13,7 @@ The target names follow this format: `$ARCH-unknown-openbsd`, where `$ARCH` spec\n | `aarch64-unknown-openbsd`      | libc++      | [64-bit ARM systems](https://www.openbsd.org/arm64.html)  |\n | `i686-unknown-openbsd`         | libc++      | [Standard PC and clones based on the Intel i386 architecture and compatible processors](https://www.openbsd.org/i386.html) |\n | `powerpc64-unknown-openbsd`    | libc++      | [IBM POWER-based PowerNV systems](https://www.openbsd.org/powerpc64.html) |\n+| `riscv64gc-unknown-openbsd`    | libc++      | [64-bit RISC-V systems](https://www.openbsd.org/riscv64.html) |\n | `sparc64-unknown-openbsd`      | estdc++     | [Sun UltraSPARC and Fujitsu SPARC64 systems](https://www.openbsd.org/sparc64.html) |\n | `x86_64-unknown-openbsd`       | libc++      | [AMD64-based systems](https://www.openbsd.org/amd64.html) |\n "}]}