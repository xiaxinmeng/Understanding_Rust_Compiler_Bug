{"sha": "d64b583e5a67e15db7151a7877871174655729a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NGI1ODNlNWE2N2UxNWRiNzE1MWE3ODc3ODcxMTc0NjU1NzI5YTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-13T12:27:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-13T12:27:51Z"}, "message": "Merge #4869\n\n4869: Discourage allocation r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "942c0f56d93bb433cf1b1da4773b4840b27e46ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/942c0f56d93bb433cf1b1da4773b4840b27e46ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d64b583e5a67e15db7151a7877871174655729a4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe5MZHCRBK7hj4Ov3rIwAAdHIIAJy5YDNkC+4izSebIhp6/cis\ngI5Arnk4z8/NkVBDzCMtlCtRAqQ3lvpVSOPZMFC8ljL0bueZNvudwKugkGe8lv+H\nzVDU055xDgYsgppLhM9jKGlKueK6nXDAVZQz1Trcuh9buEXTKtGXtMjE8Jjq128G\n4+uXoIeb0OCQkAeGlMsHV0tiQzN9JApzKEzk0BODFr7kAu0GUeciKr/r70L6rAbH\nOwdoYVeuFZHSIE3srJY0JvN8BVepY+v8mWitfQflY5009l8BGVG+quWHhMBBqbVw\noADGQNnfxdrAd7k1SiTZRmwHBHdVIJg0qBL0PwAK76SR+ukp8ypW2lyf47J2fHU=\n=NwFa\n-----END PGP SIGNATURE-----\n", "payload": "tree 942c0f56d93bb433cf1b1da4773b4840b27e46ef\nparent d00ca86da41da2df8381131f35733cbc129ac7fd\nparent be0bb857c143f4712dffc40094e1e35debbf5e8b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1592051271 +0000\ncommitter GitHub <noreply@github.com> 1592051271 +0000\n\nMerge #4869\n\n4869: Discourage allocation r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d64b583e5a67e15db7151a7877871174655729a4", "html_url": "https://github.com/rust-lang/rust/commit/d64b583e5a67e15db7151a7877871174655729a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d64b583e5a67e15db7151a7877871174655729a4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d00ca86da41da2df8381131f35733cbc129ac7fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d00ca86da41da2df8381131f35733cbc129ac7fd", "html_url": "https://github.com/rust-lang/rust/commit/d00ca86da41da2df8381131f35733cbc129ac7fd"}, {"sha": "be0bb857c143f4712dffc40094e1e35debbf5e8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/be0bb857c143f4712dffc40094e1e35debbf5e8b", "html_url": "https://github.com/rust-lang/rust/commit/be0bb857c143f4712dffc40094e1e35debbf5e8b"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "1ce8666e3e6954ebef87d85ebde046b121184658", "filename": "docs/dev/README.md", "status": "modified", "additions": 32, "deletions": 11, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d64b583e5a67e15db7151a7877871174655729a4/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/d64b583e5a67e15db7151a7877871174655729a4/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=d64b583e5a67e15db7151a7877871174655729a4", "patch": "@@ -219,7 +219,7 @@ Do\n ```rust\n // Good\n struct Foo {\n-  bars: Vec<Bar>\n+    bars: Vec<Bar>\n }\n \n struct Bar;\n@@ -232,35 +232,56 @@ rather than\n struct Bar;\n \n struct Foo {\n-  bars: Vec<Bar>\n+    bars: Vec<Bar>\n }\n ```\n \n-## Documentation\n-\n-For `.md` and `.adoc` files, prefer a sentence-per-line format, don't wrap lines.\n-If the line is too long, you want to split the sentence in two :-)\n-\n ## Preconditions\n \n Function preconditions should generally be expressed in types and provided by the caller (rather than checked by callee):\n \n ```rust\n // Good\n fn frbonicate(walrus: Walrus) {\n-  ...\n+    ...\n }\n \n // Not as good\n fn frobnicate(walrus: Option<Walrus>) {\n-  let walrus = match walrus {\n+    let walrus = match walrus {\n+        Some(it) => it,\n+        None => return,\n+    };\n+    ...\n+}\n+```\n+\n+## Premature Pessimization\n+\n+While we don't specifically optimize code yet, avoid writing the code which is slower than it needs to be.\n+Don't allocate a `Vec` were an iterator would do, don't allocate strings needlessly.\n+\n+```rust\n+// Good\n+use itertools::Itertools;\n+\n+let (first_word, second_word) = match text.split_ascii_whitespace().collect_tuple() {\n     Some(it) => it,\n     None => return,\n-  };\n-  ...\n+}\n+\n+// Not as good\n+let words = text.split_ascii_whitespace().collect::<Vec<_>>();\n+if words.len() != 2 {\n+    return\n }\n ```\n \n+## Documentation\n+\n+For `.md` and `.adoc` files, prefer a sentence-per-line format, don't wrap lines.\n+If the line is too long, you want to split the sentence in two :-)\n+\n ## Commit Style\n \n We don't have specific rules around git history hygiene."}]}