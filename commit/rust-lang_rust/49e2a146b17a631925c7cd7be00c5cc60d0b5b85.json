{"sha": "49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZTJhMTQ2YjE3YTYzMTkyNWM3Y2Q3YmUwMGM1Y2M2MGQwYjViODU=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-11-20T21:44:15Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-11-21T20:06:29Z"}, "message": "Rewrite module declarations", "tree": {"sha": "bc83bfd4eb84df70ff600abb4741795c8823954e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc83bfd4eb84df70ff600abb4741795c8823954e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "html_url": "https://github.com/rust-lang/rust/commit/49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc76558910b0eb8917e7e20a79a0080aa75a1b73", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc76558910b0eb8917e7e20a79a0080aa75a1b73", "html_url": "https://github.com/rust-lang/rust/commit/bc76558910b0eb8917e7e20a79a0080aa75a1b73"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "bf6e99e17c336374a611594dce1d2e10b696120b", "filename": "src/visitor.rs", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "patch": "@@ -101,10 +101,15 @@ impl<'a> FmtVisitor<'a> {\n \n         // TODO: we should compress any newlines here to just one\n         self.format_missing_with_indent(b.span.hi - brace_compensation);\n-        // FIXME: this is a terrible hack to indent the comments between the last\n-        // item in the block and the closing brace to the block's level.\n-        // The closing brace itself, however, should be indented at a shallower\n-        // level.\n+        self.close_block();\n+        self.last_pos = b.span.hi;\n+    }\n+\n+    // FIXME: this is a terrible hack to indent the comments between the last\n+    // item in the block and the closing brace to the block's level.\n+    // The closing brace itself, however, should be indented at a shallower\n+    // level.\n+    fn close_block(&mut self) {\n         let total_len = self.buffer.len;\n         let chars_too_many = if self.config.hard_tabs {\n             1\n@@ -113,7 +118,6 @@ impl<'a> FmtVisitor<'a> {\n         };\n         self.buffer.truncate(total_len - chars_too_many);\n         self.buffer.push_str(\"}\");\n-        self.last_pos = b.span.hi;\n         self.block_indent = self.block_indent.block_unindent(self.config);\n     }\n \n@@ -239,7 +243,7 @@ impl<'a> FmtVisitor<'a> {\n             }\n             ast::Item_::ItemMod(ref module) => {\n                 self.format_missing_with_indent(item.span.lo);\n-                self.format_mod(module, item.span, item.ident);\n+                self.format_mod(module, item.vis, item.span, item.ident);\n             }\n             ast::Item_::ItemMac(..) => {\n                 self.format_missing_with_indent(item.span.lo);\n@@ -433,23 +437,26 @@ impl<'a> FmtVisitor<'a> {\n         }\n     }\n \n-    fn format_mod(&mut self, m: &ast::Mod, s: Span, ident: ast::Ident) {\n-        debug!(\"FmtVisitor::format_mod: ident: {:?}, span: {:?}\", ident, s);\n-\n+    fn format_mod(&mut self, m: &ast::Mod, vis: ast::Visibility, s: Span, ident: ast::Ident) {\n         // Decide whether this is an inline mod or an external mod.\n         let local_file_name = self.codemap.span_to_filename(s);\n         let is_internal = local_file_name == self.codemap.span_to_filename(m.inner);\n \n-        // TODO: Should rewrite properly `mod X;`\n+        self.buffer.push_str(utils::format_visibility(vis));\n+        self.buffer.push_str(\"mod \");\n+        self.buffer.push_str(&ident.to_string());\n \n         if is_internal {\n+            self.buffer.push_str(\" {\");\n+            self.last_pos = ::utils::span_after(s, \"{\", self.codemap);\n             self.block_indent = self.block_indent.block_indent(self.config);\n             self.walk_mod_items(m);\n-            self.block_indent = self.block_indent.block_unindent(self.config);\n-\n             self.format_missing_with_indent(m.inner.hi - BytePos(1));\n-            self.buffer.push_str(\"}\");\n+            self.close_block();\n             self.last_pos = m.inner.hi;\n+        } else {\n+            self.buffer.push_str(\";\");\n+            self.last_pos = s.hi;\n         }\n     }\n "}, {"sha": "427a355b6bee0920517137ee772e2a1ee289aedd", "filename": "tests/source/mod-1.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/tests%2Fsource%2Fmod-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/tests%2Fsource%2Fmod-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmod-1.rs?ref=49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "patch": "@@ -16,11 +16,14 @@ mod foo {\n \n mod boxed { pub use std::boxed::{Box, HEAP}; }\n \n-mod x {\n+pub  mod x {\n         pub fn freopen(filename: *const c_char,\n                    mode: *const c_char,\n                      mode2: *const c_char,\n                    mode3: *const c_char,\n                    file: *mut FILE)\n                    -> *mut FILE{}\n }\n+\n+  mod    y    { // sup boooooiiii\n+   }"}, {"sha": "00b70e972cd45390aa1fc1c2571a57d7af27ec44", "filename": "tests/source/mod-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/tests%2Fsource%2Fmod-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/tests%2Fsource%2Fmod-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmod-2.rs?ref=49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "patch": "@@ -1,4 +1,4 @@\n // Some nested mods\n \n-mod nestedmod;\n-mod no_new_line_beginning;\n+ mod   nestedmod  ;\n+pub  mod no_new_line_beginning;"}, {"sha": "6fe2e65c565d2319b9671ba93ec1cab2aefb4de7", "filename": "tests/target/mod-1.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/tests%2Ftarget%2Fmod-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/tests%2Ftarget%2Fmod-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmod-1.rs?ref=49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "patch": "@@ -25,7 +25,7 @@ mod boxed {\n     pub use std::boxed::{Box, HEAP};\n }\n \n-mod x {\n+pub mod x {\n     pub fn freopen(filename: *const c_char,\n                    mode: *const c_char,\n                    mode2: *const c_char,\n@@ -34,3 +34,7 @@ mod x {\n                    -> *mut FILE {\n     }\n }\n+\n+mod y {\n+    // sup boooooiiii\n+}"}, {"sha": "426c266cecf311c76c1157aec5b526b7699dd48a", "filename": "tests/target/mod-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/tests%2Ftarget%2Fmod-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e2a146b17a631925c7cd7be00c5cc60d0b5b85/tests%2Ftarget%2Fmod-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmod-2.rs?ref=49e2a146b17a631925c7cd7be00c5cc60d0b5b85", "patch": "@@ -1,4 +1,4 @@\n // Some nested mods\n \n mod nestedmod;\n-mod no_new_line_beginning;\n+pub mod no_new_line_beginning;"}]}