{"sha": "b3cbf7c8351dd48dc2e07a1cdc69620f8e40dd2f", "node_id": "C_kwDOAAsO6NoAKGIzY2JmN2M4MzUxZGQ0OGRjMmUwN2ExY2RjNjk2MjBmOGU0MGRkMmY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-24T13:35:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-24T13:35:30Z"}, "message": "Auto merge of #111694 - Amanieu:no-assume-bdynamic, r=petrochenkov\n\nDon't assume that `-Bdynamic` is the default linker mode\n\nIn particular this is false when passing `-static` or `-static-pie` to the linker, which changes the default to `-Bstatic`. This PR ensures we explicitly initialize the correct mode when we first need it.", "tree": {"sha": "bef08c021c173d0bde7777635c67c1fb0ad16efc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bef08c021c173d0bde7777635c67c1fb0ad16efc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3cbf7c8351dd48dc2e07a1cdc69620f8e40dd2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3cbf7c8351dd48dc2e07a1cdc69620f8e40dd2f", "html_url": "https://github.com/rust-lang/rust/commit/b3cbf7c8351dd48dc2e07a1cdc69620f8e40dd2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3cbf7c8351dd48dc2e07a1cdc69620f8e40dd2f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70db8369226c4d2386b25d66a49c8989247934bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/70db8369226c4d2386b25d66a49c8989247934bf", "html_url": "https://github.com/rust-lang/rust/commit/70db8369226c4d2386b25d66a49c8989247934bf"}, {"sha": "c2f0313d9493ca1e899a45fddc2349d1167116e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f0313d9493ca1e899a45fddc2349d1167116e4", "html_url": "https://github.com/rust-lang/rust/commit/c2f0313d9493ca1e899a45fddc2349d1167116e4"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "cd56f85cccdea850c77fb093253a1c1c5c794da2", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b3cbf7c8351dd48dc2e07a1cdc69620f8e40dd2f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3cbf7c8351dd48dc2e07a1cdc69620f8e40dd2f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=b3cbf7c8351dd48dc2e07a1cdc69620f8e40dd2f", "patch": "@@ -144,7 +144,7 @@ pub fn get_linker<'a>(\n             cmd,\n             sess,\n             target_cpu,\n-            hinted_static: false,\n+            hinted_static: None,\n             is_ld: cc == Cc::No,\n             is_gnu: flavor.is_gnu(),\n         }) as Box<dyn Linker>,\n@@ -214,7 +214,7 @@ pub struct GccLinker<'a> {\n     cmd: Command,\n     sess: &'a Session,\n     target_cpu: &'a str,\n-    hinted_static: bool, // Keeps track of the current hinting mode.\n+    hinted_static: Option<bool>, // Keeps track of the current hinting mode.\n     // Link as ld\n     is_ld: bool,\n     is_gnu: bool,\n@@ -275,19 +275,19 @@ impl<'a> GccLinker<'a> {\n         if !self.takes_hints() {\n             return;\n         }\n-        if !self.hinted_static {\n+        if self.hinted_static != Some(true) {\n             self.linker_arg(\"-Bstatic\");\n-            self.hinted_static = true;\n+            self.hinted_static = Some(true);\n         }\n     }\n \n     fn hint_dynamic(&mut self) {\n         if !self.takes_hints() {\n             return;\n         }\n-        if self.hinted_static {\n+        if self.hinted_static != Some(false) {\n             self.linker_arg(\"-Bdynamic\");\n-            self.hinted_static = false;\n+            self.hinted_static = Some(false);\n         }\n     }\n \n@@ -1484,25 +1484,25 @@ impl<'a> L4Bender<'a> {\n pub struct AixLinker<'a> {\n     cmd: Command,\n     sess: &'a Session,\n-    hinted_static: bool,\n+    hinted_static: Option<bool>,\n }\n \n impl<'a> AixLinker<'a> {\n     pub fn new(cmd: Command, sess: &'a Session) -> AixLinker<'a> {\n-        AixLinker { cmd: cmd, sess: sess, hinted_static: false }\n+        AixLinker { cmd: cmd, sess: sess, hinted_static: None }\n     }\n \n     fn hint_static(&mut self) {\n-        if !self.hinted_static {\n+        if self.hinted_static != Some(true) {\n             self.cmd.arg(\"-bstatic\");\n-            self.hinted_static = true;\n+            self.hinted_static = Some(true);\n         }\n     }\n \n     fn hint_dynamic(&mut self) {\n-        if self.hinted_static {\n+        if self.hinted_static != Some(false) {\n             self.cmd.arg(\"-bdynamic\");\n-            self.hinted_static = false;\n+            self.hinted_static = Some(false);\n         }\n     }\n "}]}