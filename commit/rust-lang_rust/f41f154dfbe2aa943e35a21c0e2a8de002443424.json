{"sha": "f41f154dfbe2aa943e35a21c0e2a8de002443424", "node_id": "C_kwDOAAsO6NoAKGY0MWYxNTRkZmJlMmFhOTQzZTM1YTIxYzBlMmE4ZGUwMDI0NDM0MjQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-01T04:54:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-01T04:54:40Z"}, "message": "Rollup merge of #107533 - pnkfelix:distinguish-generator-state-in-print-type-sizes, r=compiler-errors\n\nExtend `-Z print-type-sizes` to distinguish generator upvars+locals from \"normal\" fields.\n\nFor example, for this code:\n\n```rust\nasync fn wait() {}\n\nasync fn test(arg: [u8; 8192]) {\n    wait().await;\n    drop(arg);\n}\n\nasync fn test_ideal(_rg: [u8; 8192]) {\n    wait().await;\n    // drop(arg);\n}\n\nfn main() {\n    let gen_t = test([0; 8192]);\n    let gen_i = test_ideal([0; 8192]);\n    println!(\"expect {}, got: {}\",\n             std::mem::size_of_val(&gen_i),\n             std::mem::size_of_val(&gen_t));\n}\n```\n\nthe `-Z print-type-sizes` output used to start with:\n\n```\nprint-type-size type: `[async fn body@issue-62958-a.rs:3:32: 6:2]`: 16386 bytes, alignment: 1 bytes\nprint-type-size     discriminant: 1 bytes\nprint-type-size     variant `Suspend0`: 16385 bytes\nprint-type-size         field `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\nprint-type-size         field `.arg`: 8192 bytes\nprint-type-size         field `.__awaitee`: 1 bytes\n...\nprint-type-size type: `std::mem::ManuallyDrop<[u8; 8192]>`: 8192 bytes, alignment: 1 bytes\nprint-type-size     field `.value`: 8192 bytes\n...\n```\n\nbut with this change, it now instead prints:\n\n```\nprint-type-size type: `[async fn body@issue-62958-a.rs:3:32: 6:2]`: 16386 bytes, alignment: 1 bytes\nprint-type-size     discriminant: 1 bytes\nprint-type-size     variant `Suspend0`: 16385 bytes\nprint-type-size         upvar `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\nprint-type-size         local `.arg`: 8192 bytes\nprint-type-size         local `.__awaitee`: 1 bytes\n...\nprint-type-size type: `std::mem::ManuallyDrop<[u8; 8192]>`: 8192 bytes, alignment: 1 bytes\nprint-type-size     field `.value`: 8192 bytes\n```\n\n(spawned off of investigation of https://github.com/rust-lang/rust/issues/62958 )", "tree": {"sha": "d1d9ed4c985d189742536f71c18fe239180b32a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1d9ed4c985d189742536f71c18fe239180b32a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f41f154dfbe2aa943e35a21c0e2a8de002443424", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj2fCQCRBK7hj4Ov3rIwAAw/sIABSt4t28oHeJou10T3DfP+W9\nfswl5YH5iBS3BaTWUIWuwtb4+cpYy3u2HWRklcmDDszDiQ0E/kzejSobQuZ//XB+\n8IVUGt3cgcciQAGuYaMH5Oo+WaJ/F4GifuevRABlYJbaq2t2xjH2y5MqSpD/xPwX\n3lwjB2snBVxNdpOAbjabDI5MHo45PPL80DAizELXpMVNWxWK7CBwcjbfgAP5+w1z\n4h6/K15iCDa4aZSc8DZmyd4/uY+YMVrOolOBQ6/tJnfKAbyzopCXAy/YZ1zDZ+B6\n2/T77rO+c6ZBA05T+PrpXGJ2GUQyobLXNoVD3H9lhd0NzPzvEWrK6SyjePmYdEg=\n=E38U\n-----END PGP SIGNATURE-----\n", "payload": "tree d1d9ed4c985d189742536f71c18fe239180b32a8\nparent a37a59f45e40434cff2b5a23402b0bec42cce848\nparent 362c4fa755a52891f79b00a0bac53b6a597f2b72\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675227280 +0100\ncommitter GitHub <noreply@github.com> 1675227280 +0100\n\nRollup merge of #107533 - pnkfelix:distinguish-generator-state-in-print-type-sizes, r=compiler-errors\n\nExtend `-Z print-type-sizes` to distinguish generator upvars+locals from \"normal\" fields.\n\nFor example, for this code:\n\n```rust\nasync fn wait() {}\n\nasync fn test(arg: [u8; 8192]) {\n    wait().await;\n    drop(arg);\n}\n\nasync fn test_ideal(_rg: [u8; 8192]) {\n    wait().await;\n    // drop(arg);\n}\n\nfn main() {\n    let gen_t = test([0; 8192]);\n    let gen_i = test_ideal([0; 8192]);\n    println!(\"expect {}, got: {}\",\n             std::mem::size_of_val(&gen_i),\n             std::mem::size_of_val(&gen_t));\n}\n```\n\nthe `-Z print-type-sizes` output used to start with:\n\n```\nprint-type-size type: `[async fn body@issue-62958-a.rs:3:32: 6:2]`: 16386 bytes, alignment: 1 bytes\nprint-type-size     discriminant: 1 bytes\nprint-type-size     variant `Suspend0`: 16385 bytes\nprint-type-size         field `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\nprint-type-size         field `.arg`: 8192 bytes\nprint-type-size         field `.__awaitee`: 1 bytes\n...\nprint-type-size type: `std::mem::ManuallyDrop<[u8; 8192]>`: 8192 bytes, alignment: 1 bytes\nprint-type-size     field `.value`: 8192 bytes\n...\n```\n\nbut with this change, it now instead prints:\n\n```\nprint-type-size type: `[async fn body@issue-62958-a.rs:3:32: 6:2]`: 16386 bytes, alignment: 1 bytes\nprint-type-size     discriminant: 1 bytes\nprint-type-size     variant `Suspend0`: 16385 bytes\nprint-type-size         upvar `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\nprint-type-size         local `.arg`: 8192 bytes\nprint-type-size         local `.__awaitee`: 1 bytes\n...\nprint-type-size type: `std::mem::ManuallyDrop<[u8; 8192]>`: 8192 bytes, alignment: 1 bytes\nprint-type-size     field `.value`: 8192 bytes\n```\n\n(spawned off of investigation of https://github.com/rust-lang/rust/issues/62958 )\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f41f154dfbe2aa943e35a21c0e2a8de002443424", "html_url": "https://github.com/rust-lang/rust/commit/f41f154dfbe2aa943e35a21c0e2a8de002443424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f41f154dfbe2aa943e35a21c0e2a8de002443424/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a37a59f45e40434cff2b5a23402b0bec42cce848", "url": "https://api.github.com/repos/rust-lang/rust/commits/a37a59f45e40434cff2b5a23402b0bec42cce848", "html_url": "https://github.com/rust-lang/rust/commit/a37a59f45e40434cff2b5a23402b0bec42cce848"}, {"sha": "362c4fa755a52891f79b00a0bac53b6a597f2b72", "url": "https://api.github.com/repos/rust-lang/rust/commits/362c4fa755a52891f79b00a0bac53b6a597f2b72", "html_url": "https://github.com/rust-lang/rust/commit/362c4fa755a52891f79b00a0bac53b6a597f2b72"}], "stats": {"total": 57, "additions": 39, "deletions": 18}, "files": [{"sha": "87dfccdef2f10af64e15d34525aad68f19a52b0d", "filename": "compiler/rustc_session/src/code_stats.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f41f154dfbe2aa943e35a21c0e2a8de002443424/compiler%2Frustc_session%2Fsrc%2Fcode_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f41f154dfbe2aa943e35a21c0e2a8de002443424/compiler%2Frustc_session%2Fsrc%2Fcode_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fcode_stats.rs?ref=f41f154dfbe2aa943e35a21c0e2a8de002443424", "patch": "@@ -19,8 +19,26 @@ pub enum SizeKind {\n     Min,\n }\n \n+#[derive(Copy, Clone, PartialEq, Eq, Hash, Debug)]\n+pub enum FieldKind {\n+    AdtField,\n+    Upvar,\n+    GeneratorLocal,\n+}\n+\n+impl std::fmt::Display for FieldKind {\n+    fn fmt(&self, w: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        match self {\n+            FieldKind::AdtField => write!(w, \"field\"),\n+            FieldKind::Upvar => write!(w, \"upvar\"),\n+            FieldKind::GeneratorLocal => write!(w, \"local\"),\n+        }\n+    }\n+}\n+\n #[derive(Copy, Clone, PartialEq, Eq, Hash, Debug)]\n pub struct FieldInfo {\n+    pub kind: FieldKind,\n     pub name: Symbol,\n     pub offset: u64,\n     pub size: u64,\n@@ -145,7 +163,7 @@ impl CodeStats {\n                 fields.sort_by_key(|f| (f.offset, f.size));\n \n                 for field in fields {\n-                    let FieldInfo { ref name, offset, size, align } = field;\n+                    let FieldInfo { kind, ref name, offset, size, align } = field;\n \n                     if offset > min_offset {\n                         let pad = offset - min_offset;\n@@ -155,16 +173,16 @@ impl CodeStats {\n                     if offset < min_offset {\n                         // If this happens it's probably a union.\n                         println!(\n-                            \"print-type-size {indent}field `.{name}`: {size} bytes, \\\n+                            \"print-type-size {indent}{kind} `.{name}`: {size} bytes, \\\n                                   offset: {offset} bytes, \\\n                                   alignment: {align} bytes\"\n                         );\n                     } else if info.packed || offset == min_offset {\n-                        println!(\"print-type-size {indent}field `.{name}`: {size} bytes\");\n+                        println!(\"print-type-size {indent}{kind} `.{name}`: {size} bytes\");\n                     } else {\n                         // Include field alignment in output only if it caused padding injection\n                         println!(\n-                            \"print-type-size {indent}field `.{name}`: {size} bytes, \\\n+                            \"print-type-size {indent}{kind} `.{name}`: {size} bytes, \\\n                                   alignment: {align} bytes\"\n                         );\n                     }"}, {"sha": "746e0f169bcf30ca37971009f60aabce0cc5b481", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f41f154dfbe2aa943e35a21c0e2a8de002443424/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f41f154dfbe2aa943e35a21c0e2a8de002443424/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=f41f154dfbe2aa943e35a21c0e2a8de002443424", "patch": "@@ -1,6 +1,6 @@\n use crate::cgu_reuse_tracker::CguReuseTracker;\n use crate::code_stats::CodeStats;\n-pub use crate::code_stats::{DataTypeKind, FieldInfo, SizeKind, VariantInfo};\n+pub use crate::code_stats::{DataTypeKind, FieldInfo, FieldKind, SizeKind, VariantInfo};\n use crate::config::Input;\n use crate::config::{self, CrateType, InstrumentCoverage, OptLevel, OutputType, SwitchWithOptPath};\n use crate::errors::{"}, {"sha": "93c9c675c9a6be2cfb88826ca27b7c5e35e13b0c", "filename": "compiler/rustc_ty_utils/src/layout.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f41f154dfbe2aa943e35a21c0e2a8de002443424/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f41f154dfbe2aa943e35a21c0e2a8de002443424/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs?ref=f41f154dfbe2aa943e35a21c0e2a8de002443424", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::ty::layout::{\n use rustc_middle::ty::{\n     self, subst::SubstsRef, AdtDef, EarlyBinder, ReprOptions, Ty, TyCtxt, TypeVisitable,\n };\n-use rustc_session::{DataTypeKind, FieldInfo, SizeKind, VariantInfo};\n+use rustc_session::{DataTypeKind, FieldInfo, FieldKind, SizeKind, VariantInfo};\n use rustc_span::symbol::Symbol;\n use rustc_span::DUMMY_SP;\n use rustc_target::abi::*;\n@@ -881,6 +881,7 @@ fn variant_info_for_adt<'tcx>(\n                 let offset = layout.fields.offset(i);\n                 min_size = min_size.max(offset + field_layout.size);\n                 FieldInfo {\n+                    kind: FieldKind::AdtField,\n                     name,\n                     offset: offset.bytes(),\n                     size: field_layout.size.bytes(),\n@@ -960,6 +961,7 @@ fn variant_info_for_generator<'tcx>(\n             let offset = layout.fields.offset(field_idx);\n             upvars_size = upvars_size.max(offset + field_layout.size);\n             FieldInfo {\n+                kind: FieldKind::Upvar,\n                 name: Symbol::intern(&name),\n                 offset: offset.bytes(),\n                 size: field_layout.size.bytes(),\n@@ -983,6 +985,7 @@ fn variant_info_for_generator<'tcx>(\n                     // The struct is as large as the last field's end\n                     variant_size = variant_size.max(offset + field_layout.size);\n                     FieldInfo {\n+                        kind: FieldKind::GeneratorLocal,\n                         name: state_specific_names.get(*local).copied().flatten().unwrap_or(\n                             Symbol::intern(&format!(\".generator_field{}\", local.as_usize())),\n                         ),"}, {"sha": "4588c0ebd81b0c250862e941b6ee986500f7e401", "filename": "tests/ui/print_type_sizes/async.stdout", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f41f154dfbe2aa943e35a21c0e2a8de002443424/tests%2Fui%2Fprint_type_sizes%2Fasync.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f41f154dfbe2aa943e35a21c0e2a8de002443424/tests%2Fui%2Fprint_type_sizes%2Fasync.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_type_sizes%2Fasync.stdout?ref=f41f154dfbe2aa943e35a21c0e2a8de002443424", "patch": "@@ -1,15 +1,15 @@\n print-type-size type: `[async fn body@$DIR/async.rs:8:36: 11:2]`: 16386 bytes, alignment: 1 bytes\n print-type-size     discriminant: 1 bytes\n print-type-size     variant `Suspend0`: 16385 bytes\n-print-type-size         field `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n-print-type-size         field `.arg`: 8192 bytes\n-print-type-size         field `.__awaitee`: 1 bytes\n+print-type-size         upvar `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         local `.arg`: 8192 bytes\n+print-type-size         local `.__awaitee`: 1 bytes\n print-type-size     variant `Unresumed`: 8192 bytes\n-print-type-size         field `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         upvar `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Returned`: 8192 bytes\n-print-type-size         field `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         upvar `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Panicked`: 8192 bytes\n-print-type-size         field `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         upvar `.arg`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size type: `std::mem::ManuallyDrop<[u8; 8192]>`: 8192 bytes, alignment: 1 bytes\n print-type-size     field `.value`: 8192 bytes\n print-type-size type: `std::mem::MaybeUninit<[u8; 8192]>`: 8192 bytes, alignment: 1 bytes"}, {"sha": "13d850a66902f87654273f3a61248b2ddcd4e334", "filename": "tests/ui/print_type_sizes/generator.stdout", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f41f154dfbe2aa943e35a21c0e2a8de002443424/tests%2Fui%2Fprint_type_sizes%2Fgenerator.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f41f154dfbe2aa943e35a21c0e2a8de002443424/tests%2Fui%2Fprint_type_sizes%2Fgenerator.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_type_sizes%2Fgenerator.stdout?ref=f41f154dfbe2aa943e35a21c0e2a8de002443424", "patch": "@@ -1,10 +1,10 @@\n print-type-size type: `[generator@$DIR/generator.rs:10:5: 10:14]`: 8193 bytes, alignment: 1 bytes\n print-type-size     discriminant: 1 bytes\n print-type-size     variant `Unresumed`: 8192 bytes\n-print-type-size         field `.array`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         upvar `.array`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Returned`: 8192 bytes\n-print-type-size         field `.array`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         upvar `.array`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Panicked`: 8192 bytes\n-print-type-size         field `.array`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         upvar `.array`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Suspend0`: 8192 bytes\n-print-type-size         field `.array`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         upvar `.array`: 8192 bytes, offset: 0 bytes, alignment: 1 bytes"}, {"sha": "b294b2d139c3cfab9e60feb561adb5d3b65fb119", "filename": "tests/ui/print_type_sizes/generator_discr_placement.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f41f154dfbe2aa943e35a21c0e2a8de002443424/tests%2Fui%2Fprint_type_sizes%2Fgenerator_discr_placement.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f41f154dfbe2aa943e35a21c0e2a8de002443424/tests%2Fui%2Fprint_type_sizes%2Fgenerator_discr_placement.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_type_sizes%2Fgenerator_discr_placement.stdout?ref=f41f154dfbe2aa943e35a21c0e2a8de002443424", "patch": "@@ -2,10 +2,10 @@ print-type-size type: `[generator@$DIR/generator_discr_placement.rs:11:13: 11:15\n print-type-size     discriminant: 1 bytes\n print-type-size     variant `Suspend0`: 7 bytes\n print-type-size         padding: 3 bytes\n-print-type-size         field `.w`: 4 bytes, alignment: 4 bytes\n+print-type-size         local `.w`: 4 bytes, alignment: 4 bytes\n print-type-size     variant `Suspend1`: 7 bytes\n print-type-size         padding: 3 bytes\n-print-type-size         field `.z`: 4 bytes, alignment: 4 bytes\n+print-type-size         local `.z`: 4 bytes, alignment: 4 bytes\n print-type-size     variant `Unresumed`: 0 bytes\n print-type-size     variant `Returned`: 0 bytes\n print-type-size     variant `Panicked`: 0 bytes"}]}