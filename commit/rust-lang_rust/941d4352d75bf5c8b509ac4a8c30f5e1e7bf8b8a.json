{"sha": "941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MWQ0MzUyZDc1YmY1YzhiNTA5YWM0YThjMzBmNWUxZTdiZjhiOGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-12T00:31:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-12T00:31:11Z"}, "message": "Auto merge of #69926 - RoccoDev:master, r=estebank,varkor\n\nrustc: Add a warning count upon completion\n\nThis adds a `build completed with one warning/x warnings` message, similar to the already present `aborted due to previous error` message.", "tree": {"sha": "9fbf839de02435cea4e0b849bd3086e60f754e52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fbf839de02435cea4e0b849bd3086e60f754e52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "html_url": "https://github.com/rust-lang/rust/commit/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "378901d988cd59d29b3643ab6e9cba8a31421271", "url": "https://api.github.com/repos/rust-lang/rust/commits/378901d988cd59d29b3643ab6e9cba8a31421271", "html_url": "https://github.com/rust-lang/rust/commit/378901d988cd59d29b3643ab6e9cba8a31421271"}, {"sha": "b85c64c3ea147cadc6014fdea710718a8a153b6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b85c64c3ea147cadc6014fdea710718a8a153b6b", "html_url": "https://github.com/rust-lang/rust/commit/b85c64c3ea147cadc6014fdea710718a8a153b6b"}], "stats": {"total": 647, "additions": 515, "deletions": 132}, "files": [{"sha": "55eb9fd566d8721e7c9e164f45288f48b4e9eac4", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -312,6 +312,9 @@ struct HandlerInner {\n     /// The stashed diagnostics count towards the total error count.\n     /// When `.abort_if_errors()` is called, these are also emitted.\n     stashed_diagnostics: FxIndexMap<(Span, StashKey), Diagnostic>,\n+\n+    /// The warning count, used for a recap upon finishing\n+    deduplicated_warn_count: usize,\n }\n \n /// A key denoting where from a diagnostic was stashed.\n@@ -414,6 +417,7 @@ impl Handler {\n                 flags,\n                 err_count: 0,\n                 deduplicated_err_count: 0,\n+                deduplicated_warn_count: 0,\n                 emitter,\n                 delayed_span_bugs: Vec::new(),\n                 taught_diagnostics: Default::default(),\n@@ -439,6 +443,7 @@ impl Handler {\n         let mut inner = self.inner.borrow_mut();\n         inner.err_count = 0;\n         inner.deduplicated_err_count = 0;\n+        inner.deduplicated_warn_count = 0;\n \n         // actually free the underlying memory (which `clear` would not do)\n         inner.delayed_span_bugs = Default::default();\n@@ -745,6 +750,8 @@ impl HandlerInner {\n             self.emitter.emit_diagnostic(diagnostic);\n             if diagnostic.is_error() {\n                 self.deduplicated_err_count += 1;\n+            } else if diagnostic.level == Warning {\n+                self.deduplicated_warn_count += 1;\n             }\n         }\n         if diagnostic.is_error() {\n@@ -763,16 +770,30 @@ impl HandlerInner {\n     fn print_error_count(&mut self, registry: &Registry) {\n         self.emit_stashed_diagnostics();\n \n-        let s = match self.deduplicated_err_count {\n-            0 => return,\n+        let warnings = match self.deduplicated_warn_count {\n+            0 => String::new(),\n+            1 => \"1 warning emitted\".to_string(),\n+            count => format!(\"{} warnings emitted\", count),\n+        };\n+        let errors = match self.deduplicated_err_count {\n+            0 => String::new(),\n             1 => \"aborting due to previous error\".to_string(),\n             count => format!(\"aborting due to {} previous errors\", count),\n         };\n         if self.treat_err_as_bug() {\n             return;\n         }\n \n-        let _ = self.fatal(&s);\n+        match (errors.len(), warnings.len()) {\n+            (0, 0) => return,\n+            (0, _) => self.emit_diagnostic(&Diagnostic::new(Level::Warning, &warnings)),\n+            (_, 0) => {\n+                let _ = self.fatal(&errors);\n+            }\n+            (_, _) => {\n+                let _ = self.fatal(&format!(\"{}; {}\", &errors, &warnings));\n+            }\n+        }\n \n         let can_show_explain = self.emitter.should_show_explain();\n         let are_there_diagnostics = !self.emitted_diagnostic_codes.is_empty();"}, {"sha": "f68fb467448054469c491da489182f066345974c", "filename": "src/test/rustdoc-ui/deprecated-attrs.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -7,3 +7,5 @@ warning: the `#![doc(passes = \"...\")]` attribute is considered deprecated\n    |\n    = warning: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n \n+warning: 2 warnings emitted\n+"}, {"sha": "ac8691a8743ba7dbffe9e984e029f1b07c183f41", "filename": "src/test/rustdoc-ui/intra-links-warning-crlf.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning-crlf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning-crlf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning-crlf.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -31,3 +31,5 @@ LL |  * It also has an [error].\n    |\n    = help: to escape `[` and `]` characters, just add '\\' before them like `\\[` or `\\]`\n \n+warning: 4 warnings emitted\n+"}, {"sha": "914a19fc536c7f185e6f9126f4b09fe11e1b4ef8", "filename": "src/test/rustdoc-ui/intra-links-warning.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -177,3 +177,5 @@ LL | f!(\"Foo\\nbar [BarF] bar\\nbaz\");\n    = help: to escape `[` and `]` characters, just add '\\' before them like `\\[` or `\\]`\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+warning: 19 warnings emitted\n+"}, {"sha": "9a7a4d2101362b8e669ac51c346cec04e64b21a1", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -147,3 +147,5 @@ help: mark blocks that do not contain Rust code as text\n LL | /// ```text\n    |     ^^^^^^^\n \n+warning: 12 warnings emitted\n+"}, {"sha": "5e40561c7f55c065b4409c6d321a38e52c046153", "filename": "src/test/ui-fulldeps/feature-gate-plugin.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Ffeature-gate-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Ffeature-gate-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Ffeature-gate-plugin.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -15,6 +15,6 @@ LL | #![plugin(empty_plugin)]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "b8b7dd23c1cd30f1cc03b0018df47b79aa72c8bf", "filename": "src/test/ui-fulldeps/gated-plugin.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fgated-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fgated-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fgated-plugin.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -15,6 +15,6 @@ LL | #![plugin(empty_plugin)]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "a37893e120351f60d6ae77e47ba9c29346f1290c", "filename": "src/test/ui-fulldeps/issue-15778-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fissue-15778-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fissue-15778-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-15778-fail.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,5 +18,5 @@ LL | | pub fn main() { }\n    |\n    = note: requested on the command line with `-D crate-not-okay`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "a9d9721ac7b89ebde6022f8c719c25b3dc0aaaf1", "filename": "src/test/ui-fulldeps/issue-15778-pass.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![plugin(lint_for_crate_rpass)]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "73ec0692464addb489c80934b23c7dd0c2d787ae", "filename": "src/test/ui-fulldeps/issue-40001.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fissue-40001.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fissue-40001.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-40001.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![plugin(issue_40001_plugin)]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "20486d596d9a30ab2c212a2bbea7304031209001", "filename": "src/test/ui-fulldeps/lint-group-plugin-deny-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin-deny-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin-deny-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin-deny-cmdline.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -22,5 +22,5 @@ LL | fn pleaselintme() { }\n    |\n    = note: `-D please-lint` implied by `-D lint-me`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "6f429dad01757e426918c5417ec50a96a18b5575", "filename": "src/test/ui-fulldeps/lint-group-plugin.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -22,3 +22,5 @@ LL | fn pleaselintme() { }\n    |\n    = note: `#[warn(please_lint)]` on by default\n \n+warning: 3 warnings emitted\n+"}, {"sha": "f06703a27848ad9f61367f31263054b2425c9244", "filename": "src/test/ui-fulldeps/lint-plugin-cmdline-allow.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![plugin(lint_plugin_test)]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "981631494fafdaf8a246a98b7e65a71335906b81", "filename": "src/test/ui-fulldeps/lint-plugin-cmdline-load.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-load.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,3 +14,5 @@ LL | fn lintme() { }\n    |\n    = note: `#[warn(test_lint)]` on by default\n \n+warning: 2 warnings emitted\n+"}, {"sha": "b9774c044623cd9798c5172b8364c7b444436317", "filename": "src/test/ui-fulldeps/lint-plugin-deny-attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-attr.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,5 +18,5 @@ note: the lint level is defined here\n LL | #![deny(test_lint)]\n    |         ^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "cbabb09f6a5967cb26bacdc109895dc65c2669d5", "filename": "src/test/ui-fulldeps/lint-plugin-deny-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-cmdline.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,5 +14,5 @@ LL | fn lintme() { }\n    |\n    = note: requested on the command line with `-D test-lint`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "7b868c3393f5034102e777d86172a3e4208849f1", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-attrs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -45,6 +45,6 @@ LL | #![forbid(test_lint)]\n LL | #[allow(test_lint)]\n    |         ^^^^^^^^^ overruled by previous forbid\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 4 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0453`."}, {"sha": "e9ec63ef9831a4fa3795ca588fb1e0efc7265de2", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -38,6 +38,6 @@ LL | #[allow(test_lint)]\n    |\n    = note: `forbid` lint level was set on command line\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 4 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0453`."}, {"sha": "765832071cbeaf43029bb3afa5f4e4a08945813c", "filename": "src/test/ui-fulldeps/lint-plugin.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,3 +14,5 @@ LL | fn lintme() { }\n    |\n    = note: `#[warn(test_lint)]` on by default\n \n+warning: 2 warnings emitted\n+"}, {"sha": "b4fb9e22da417da4e37bf9ae855dd254a0a2de5d", "filename": "src/test/ui-fulldeps/lint-tool-cmdline-allow.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-tool-cmdline-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-tool-cmdline-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-tool-cmdline-allow.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -30,3 +30,5 @@ warning: lint name `test_lint` is deprecated and does not have an effect anymore\n    |\n    = note: requested on the command line with `-A test_lint`\n \n+warning: 6 warnings emitted\n+"}, {"sha": "5e1cb4fb843fd76c1bb64b1c76c1c7a7926c4826", "filename": "src/test/ui-fulldeps/lint-tool-test.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -96,5 +96,5 @@ warning: lint name `test_group` is deprecated and may not have an effect in the\n LL | #[allow(test_group)]\n    |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 11 warnings emitted\n "}, {"sha": "555493f32305ad8da2fbdb27ba9e5141cdaa0741", "filename": "src/test/ui-fulldeps/lto-syntax-extension.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flto-syntax-extension.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Flto-syntax-extension.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flto-syntax-extension.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![plugin(lto_syntax_extension_plugin)]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "342663312a8539708136fcf6b84ff25d70a45f00", "filename": "src/test/ui-fulldeps/macro-crate-rlib.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fmacro-crate-rlib.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fmacro-crate-rlib.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmacro-crate-rlib.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ LL | #![plugin(rlib_crate_test)]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "e40a08ae73b6037a1ef240b9ad6ed7df1ee9a286", "filename": "src/test/ui-fulldeps/outlive-expansion-phase.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Foutlive-expansion-phase.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Foutlive-expansion-phase.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Foutlive-expansion-phase.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![plugin(outlive_expansion_phase)]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "2e255f185e291c5d2fbf805f8ed096a1d13354e4", "filename": "src/test/ui-fulldeps/plugin-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fplugin-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui-fulldeps%2Fplugin-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fplugin-args.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ LL | #![plugin(empty_plugin(args))]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "c1bf5f690ecbaad55947a2ac08a85d4439f4a307", "filename": "src/test/ui/anon-params/anon-params-deprecated.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-deprecated.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -30,3 +30,5 @@ LL |     fn bar_with_default_impl(String, String) {}\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n    = note: for more information, see issue #41686 <https://github.com/rust-lang/rust/issues/41686>\n \n+warning: 3 warnings emitted\n+"}, {"sha": "09f65f6acd069f6d7692b7c2daaf4bea911fb246", "filename": "src/test/ui/array-slice-vec/match_arr_unknown_len.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -15,6 +15,6 @@ LL |         [1, 2] => true,\n    = note: expected array `[u32; 2]`\n               found array `[u32; _]`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "ea155b91c5d61f39ad79d1a0282855e884cd027c", "filename": "src/test/ui/asm/asm-misplaced-option.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fasm%2Fasm-misplaced-option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fasm%2Fasm-misplaced-option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fasm-misplaced-option.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,3 +10,5 @@ warning: expected a clobber, found an option\n LL |         llvm_asm!(\"add $2, $1; mov $1, $0\" : \"=r\"(x) : \"r\"(x), \"r\"(8_usize) : \"cc\", \"volatile\");\n    |                                                                                     ^^^^^^^^^^\n \n+warning: 2 warnings emitted\n+"}, {"sha": "9f219fb7c53d4bfea0db4dad2615860151bbc9b3", "filename": "src/test/ui/associated-type-bounds/duplicate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -726,6 +726,6 @@ error: could not find defining uses\n LL | type TADyn3 = dyn Iterator<Item: 'static, Item: 'static>;\n    |                                           ^^^^^^^^^^^^^\n \n-error: aborting due to 96 previous errors\n+error: aborting due to 96 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0719`."}, {"sha": "7414c148452aa29519971fcb364042372cd62fef", "filename": "src/test/ui/associated-type-bounds/dyn-lcsit.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(impl_trait_in_bindings)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "8c225a30638440620cd305afa3233c65c6a82986", "filename": "src/test/ui/associated-type-bounds/lcsit.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(impl_trait_in_bindings)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "42be09de03f22ca83687a41f7e6cf2e402daf4a9", "filename": "src/test/ui/associated-type-bounds/type-alias.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fassociated-type-bounds%2Ftype-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fassociated-type-bounds%2Ftype-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Ftype-alias.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -131,3 +131,5 @@ help: the bound will not be checked when the type alias is used, and should be r\n LL | type _TaInline6<T> = T;\n    |                 --\n \n+warning: 12 warnings emitted\n+"}, {"sha": "e39a049e2d30483e34ea8e9368f49ceff1249acb", "filename": "src/test/ui/async-await/issues/issue-54752-async-block.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-54752-async-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-54752-async-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-54752-async-block.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | fn main() { let _a = (async  { }); }\n    |\n    = note: `#[warn(unused_parens)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "0fb65322f39e690ab269a8565c0b2d98826a9d85", "filename": "src/test/ui/bad/bad-lint-cap3.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -11,3 +11,5 @@ LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[warn(unused_imports)]` implied by `#[warn(warnings)]`\n \n+warning: 1 warning emitted\n+"}, {"sha": "f6a80c3c7d38cd2512cdbb64a92ecdfb266305be", "filename": "src/test/ui/binding/const-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fbinding%2Fconst-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fbinding%2Fconst-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Fconst-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,6 +12,6 @@ error[E0158]: const parameters cannot be referenced in patterns\n LL |         N => {}\n    |         ^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0158`."}, {"sha": "d4b8dfbade5d6b60bee8cedb5e798ade1ca7ca0c", "filename": "src/test/ui/binding/issue-53114-safety-checks.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-safety-checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-safety-checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-safety-checks.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -95,6 +95,6 @@ LL |     match (&u2.a,) { (_,) => { } }\n    |\n    = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 7 previous errors; 4 warnings emitted\n \n For more information about this error, try `rustc --explain E0133`."}, {"sha": "c28980bf14786588ea49e2f5fabf747edcb0fd2c", "filename": "src/test/ui/block-expr-precedence.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fblock-expr-precedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fblock-expr-precedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-expr-precedence.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |   if (true) { 12; };;; -num;\n    |\n    = note: `#[warn(redundant_semicolons)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "5dabaf5e6493320d53421ad5558e0b208464ee1a", "filename": "src/test/ui/block-result/block-must-not-have-result-while.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,6 +12,6 @@ error[E0308]: mismatched types\n LL |         true\n    |         ^^^^ expected `()`, found `bool`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "260b9673d74baf019213d1aaf63ecbdb8540561a", "filename": "src/test/ui/borrowck/mut-borrow-in-loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -42,6 +42,6 @@ LL |             (self.func)(arg)\n    |             |           mutable borrow starts here in previous iteration of loop\n    |             argument requires that `*arg` is borrowed for `'a`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 3 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0499`."}, {"sha": "e4fceb197be59af21471a464c42b06f6a1b8bc68", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-2.migrate2015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2015.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -35,6 +35,6 @@ LL |     v.push(shared.len());\n    = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future\n    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0502`."}, {"sha": "e4fceb197be59af21471a464c42b06f6a1b8bc68", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-2.migrate2018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2018.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -35,6 +35,6 @@ LL |     v.push(shared.len());\n    = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future\n    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0502`."}, {"sha": "03f49d2d92fa14cfc2e21912db9d8bf391aab86f", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-future-compat-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -36,5 +36,5 @@ LL |     #![deny(mutable_borrow_reservation_conflict)]\n    = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future\n    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "a35ed99d8a3dd411cac5c0a7036d3fee71c2a340", "filename": "src/test/ui/codemap_tests/unicode_3.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |     let s = \"Z\u0368A\u0351\u0366\u0352\u034b\u0364\u0351\u031aL\u0304\u0351\u034bG\u0302\u0368\u0365\u033f\u0352\u033d\u0344O\u0365\u035b\u036d!\u030f\"; while tru\n    |\n    = note: `#[warn(while_true)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "b3c2f4516349e84861d07fae1cc13af310d39306", "filename": "src/test/ui/coherence/coherence-subtyping.old.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.old.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ LL | impl TheTrait for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n    = note: for more information, see issue #56105 <https://github.com/rust-lang/rust/issues/56105>\n    = note: this behavior recently changed as a result of a bug fix; see rust-lang/rust#56105 for details\n \n+warning: 1 warning emitted\n+"}, {"sha": "b3c2f4516349e84861d07fae1cc13af310d39306", "filename": "src/test/ui/coherence/coherence-subtyping.re.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.re.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ LL | impl TheTrait for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n    = note: for more information, see issue #56105 <https://github.com/rust-lang/rust/issues/56105>\n    = note: this behavior recently changed as a result of a bug fix; see rust-lang/rust#56105 for details\n \n+warning: 1 warning emitted\n+"}, {"sha": "d7b5d2d263a10397239f5552d422033abb50a885", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-true.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -36,3 +36,5 @@ note: the lint level is defined here\n LL | #![warn(unused_must_use)]\n    |         ^^^^^^^^^^^^^^^\n \n+warning: 5 warnings emitted\n+"}, {"sha": "b6b83b78d3beb132e8851bfe8cc75b428c946b38", "filename": "src/test/ui/const-generics/apit-with-const-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "7c55cb59a225478bcc45ec9486f9a115e903290b", "filename": "src/test/ui/const-generics/argument_order.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "05f30a1cc5ed6fc15d5c625761732a0a84615243", "filename": "src/test/ui/const-generics/array-size-in-generic-struct-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -22,5 +22,5 @@ LL |     arr: [u8; CFG.arr_size],\n    |\n    = note: this may fail depending on what value the parameter takes\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "e28f65a3827537401866bee96913f773dfc6ca93", "filename": "src/test/ui/const-generics/array-wrapper-struct-ctor.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "8b8e0fd1120a375ae7d611782f26d6c981ef6eb1", "filename": "src/test/ui/const-generics/broken-mir-1.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "cbb8159e9b5df9f3c8d0ff5579e3ef44207de4f5", "filename": "src/test/ui/const-generics/broken-mir-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -17,6 +17,6 @@ LL | struct S<T: Debug, const N: usize>([T; N]);\n    = note: required for the cast to the object type `dyn std::fmt::Debug`\n    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "fc426bf4f488dae929b9c3331e9ceb4c825400b2", "filename": "src/test/ui/const-generics/cannot-infer-const-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,6 +12,6 @@ error[E0282]: type annotations needed\n LL |     foo();\n    |     ^^^ cannot infer type for fn item `fn() -> usize {foo::<{_: usize}>}`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0282`."}, {"sha": "f273c4e9335022cc5090515c85d4146e71be9c49", "filename": "src/test/ui/const-generics/cannot-infer-type-for-const-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "e83ccf9adb7266fcc26b2581d12b1fd223fc4c95", "filename": "src/test/ui/const-generics/concrete-const-as-fn-arg.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "c9145837ea44ecd816920692095b27b20ed00a53", "filename": "src/test/ui/const-generics/concrete-const-impl-method.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "12a51d05f46e60be54183c84031ed18225001e8f", "filename": "src/test/ui/const-generics/condition-in-trait-const-arg.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "74919ba0ae7799a00aeb467424c5f6446592d3db", "filename": "src/test/ui/const-generics/const-arg-in-fn.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "5795a492c22580adcbda95498845812cd4c46e5b", "filename": "src/test/ui/const-generics/const-arg-type-arg-misordered.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,6 +14,6 @@ LL | fn foo<const N: usize>() -> Array<N, ()> {\n    |\n    = note: type arguments must be provided before constant arguments\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0747`."}, {"sha": "6784aeebf0fec3a533f6d5410500e74499534869", "filename": "src/test/ui/const-generics/const-expression-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "e944b02101e8caa315c065877d49a3ac841cf1c0", "filename": "src/test/ui/const-generics/const-fn-with-const-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -19,5 +19,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "1d05381b59b27f108f6a0217eadbc3d1fb422135", "filename": "src/test/ui/const-generics/const-generic-array-wrapper.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "641b868dcb2e0d36634e3f34a09d820a3faaff1f", "filename": "src/test/ui/const-generics/const-generic-type_name.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "edc26d6348c7de28a2aa90011439643de0cd6d95", "filename": "src/test/ui/const-generics/const-param-elided-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -36,6 +36,6 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 5 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0637`."}, {"sha": "a03ba0809007cf511c32b2a296311445cf2e3802", "filename": "src/test/ui/const-generics/const-param-from-outer-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -16,6 +16,6 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0401`."}, {"sha": "6afbce67e334238c1a7f0d32f46ac67f1346062c", "filename": "src/test/ui/const-generics/const-param-in-trait.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "724e3909e458fd76dd803037236308ed4e242f1b", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,6 +12,6 @@ error[E0741]: the types of const generic parameters must derive `PartialEq` and\n LL | pub struct Dependent<T, const X: T>([(); X]);\n    |                                  ^ `T` doesn't derive both `PartialEq` and `Eq`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0741`."}, {"sha": "826dc702c0dc4c2bd6e5e04ec9d0fa3ec5eb0093", "filename": "src/test/ui/const-generics/const-parameter-uppercase-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,5 +18,5 @@ note: the lint level is defined here\n LL | #![deny(non_upper_case_globals)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "935baf1a63a2b54d648e921e46a738600f284636", "filename": "src/test/ui/const-generics/const-types.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "672586fd3fe00c24bdb641313aaefa4976de7f9e", "filename": "src/test/ui/const-generics/derive-debug-array-wrapper.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -17,6 +17,6 @@ LL |     a: [u32; N],\n    = note: required for the cast to the object type `dyn std::fmt::Debug`\n    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "872ec11ad1bfe609c91ee43a202a53cf4bb07a7c", "filename": "src/test/ui/const-generics/fn-const-param-call.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics, const_compare_raw_pointers)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "7bfb0873a10299f4d873abd0bea79d8f81513e92", "filename": "src/test/ui/const-generics/fn-const-param-infer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -43,7 +43,7 @@ LL |     let _: Checked<{generic::<u32>}> = Checked::<{generic::<u16>}>;\n    = note: expected struct `Checked<{generic::<u32> as fn(usize) -> bool}>`\n               found struct `Checked<{generic::<u16> as fn(usize) -> bool}>`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 4 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0282, E0308.\n For more information about an error, try `rustc --explain E0282`."}, {"sha": "5a2ef780e14221f77d8b29719fd66b22dfc2451f", "filename": "src/test/ui/const-generics/fn-taking-const-generic-array.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "d2469ca766ec7c89b230820f1fe128e660e0cf37", "filename": "src/test/ui/const-generics/forbid-non-structural_match-types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,6 +12,6 @@ error[E0741]: the types of const generic parameters must derive `PartialEq` and\n LL | struct D<const X: C>;\n    |                   ^ `C` doesn't derive both `PartialEq` and `Eq`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0741`."}, {"sha": "b8fd9854ff6005dca1ae1d5bd023aaa350765e6b", "filename": "src/test/ui/const-generics/foreign-item-const-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -22,6 +22,6 @@ LL |     fn bar<T, const X: usize>(_: T);\n    |\n    = help: replace the type or const parameters with concrete types or consts\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0044`."}, {"sha": "64dbc210d92fbc7922bf10eb97f7fc584efab196", "filename": "src/test/ui/const-generics/impl-const-generic-struct.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "a2492e27e2089d00e6d84176708f5560d2453fa3", "filename": "src/test/ui/const-generics/incorrect-number-of-const-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,6 +18,6 @@ error[E0107]: wrong number of const arguments: expected 2, found 3\n LL |     foo::<0, 0, 0>();\n    |                 ^ unexpected const argument\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0107`."}, {"sha": "7a6da2582a826b22a61bd9b7226d881a2036e205", "filename": "src/test/ui/const-generics/infer_arg_from_pat.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "d698abd2bae61cdd1c26306479034e885053610a", "filename": "src/test/ui/const-generics/infer_arr_len_from_pat.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "0924f8da25f680361ea158fabc8459b97e3749db", "filename": "src/test/ui/const-generics/integer-literal-generic-arg-in-where-clause.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "d52ae10ee07bd4273e7d21ba63cae327542fe7cd", "filename": "src/test/ui/const-generics/issue-61522-array-len-succ.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -22,5 +22,5 @@ LL |     fn inner(&self) -> &[u8; COUNT + 1] {\n    |\n    = note: this may fail depending on what value the parameter takes\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "edaa59bbdc719fbd5c3394aadbb1b0e9b278069b", "filename": "src/test/ui/const-generics/issue-66596-impl-trait-for-str-const-arg.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "887d4547933b18e44fc94a408172b1beadc046c8", "filename": "src/test/ui/const-generics/issues/issue-60818-struct-constructors.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "34920d8907fc1280d8e51fff660f80cc664de128", "filename": "src/test/ui/const-generics/issues/issue-61336-1.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "27ee4f88870b937778ede199ffcb2485a614b6e4", "filename": "src/test/ui/const-generics/issues/issue-61336-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,6 +18,6 @@ help: consider restricting type parameter `T`\n LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n    |       ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "772a07cccf8840161c01c0d9e33e5760a3eb5724", "filename": "src/test/ui/const-generics/issues/issue-61336.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,6 +18,6 @@ help: consider restricting type parameter `T`\n LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n    |       ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "a66224b6d170f04b5ca586e93a08a0494d478ae8", "filename": "src/test/ui/const-generics/issues/issue-61422.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "cb2fa99f6d88811f3d5e073c91e5c81890261ead", "filename": "src/test/ui/const-generics/issues/issue-61432.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "3465db152084ccb13c3ea7173ffe2fb698cbc8b0", "filename": "src/test/ui/const-generics/issues/issue-61747.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "70d0b61cc26e3581465cb25895985532a2f676c2", "filename": "src/test/ui/const-generics/issues/issue-62187-encountered-polymorphic-const.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,3 +14,5 @@ LL |     let foo = <[u8; 2]>::BIT_LEN;\n    |\n    = note: `#[warn(unused_variables)]` on by default\n \n+warning: 2 warnings emitted\n+"}, {"sha": "fc26f68d2359b739bf39d14965327af3fc8b3867", "filename": "src/test/ui/const-generics/issues/issue-62456.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "31f8d230935af0695bc0928bd0046b40fe2e8b10", "filename": "src/test/ui/const-generics/issues/issue-62579-no-match.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "94c010ba26095a574c540a85b383d5ce7da72d04", "filename": "src/test/ui/const-generics/issues/issue-64519.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "6730c97604cfe8a9275744beb2e200559a7c3d4a", "filename": "src/test/ui/const-generics/issues/issue-66906.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "b095d577fb7cf6e3af9b101aca3a526fbcc3e6e3", "filename": "src/test/ui/const-generics/issues/issue-70125-1.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "6a30e5e783e3c50b55ba202877e7293625861e3d", "filename": "src/test/ui/const-generics/issues/issue-70125-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "2b56ed977ee9a1feba58c901a9263ea2f419d43c", "filename": "src/test/ui/const-generics/issues/issue-70167.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "afd2a50242f9ccd4cbe47efa2717e0dd133650b1", "filename": "src/test/ui/const-generics/issues/issue70273-assoc-fn.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "336364e5aeafca833aade2f45ff8168a5e0ac7e3", "filename": "src/test/ui/const-generics/mut-ref-const-param-array.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "736c9b497250305332c5f95ae1a2aec226715b0b", "filename": "src/test/ui/const-generics/raw-ptr-const-param-deref.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics, const_compare_raw_pointers)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "a2496a6558de2073991d5c7b426a9650b3e507e7", "filename": "src/test/ui/const-generics/raw-ptr-const-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -17,6 +17,6 @@ LL |     let _: Const<{ 15 as *const _ }> = Const::<{ 10 as *const _ }>;\n    = note: expected struct `Const<{0xf as *const u32}>`\n               found struct `Const<{0xa as *const u32}>`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "e497cc3220d54d4cb8962c9e0ece451025677b76", "filename": "src/test/ui/const-generics/slice-const-param-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -39,6 +39,6 @@ LL |     let _: ConstBytes<b\"AAA\"> = ConstBytes::<b\"BBB\">;\n    = note: expected struct `ConstBytes<b\"AAA\">`\n               found struct `ConstBytes<b\"BBB\">`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 3 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "80fdf3296bc81e7d158775fb1f60c4318dd4b6b1", "filename": "src/test/ui/const-generics/slice-const-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "7472793f8096fba94618bb35da78ba53334c5ec8", "filename": "src/test/ui/const-generics/struct-with-invalid-const-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -15,6 +15,6 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0573`."}, {"sha": "0bf4083981353af4608e61c4a6d4d038dd27f313", "filename": "src/test/ui/const-generics/transparent-maybeunit-array-wrapper.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "5f848c3ec524d16f6aa676bb70e63d28248124b2", "filename": "src/test/ui/const-generics/type_of_anon_const.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "a76bbd177fbfd56af9a33c9d83f34d63aa4d24ed", "filename": "src/test/ui/const-generics/types-mismatch-const-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -28,6 +28,6 @@ LL |     let _: A<'a, u16, {2u32}, {3u32}> = A::<'b, u32, {2u32}, {3u32}> { data\n    = note: expected struct `A<'a, u16, _, _>`\n               found struct `A<'b, u32, _, _>`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "c1d115b4f1da78e3e24df19306341a550f4163b2", "filename": "src/test/ui/const-generics/uninferred-consts-during-codegen-1.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "2738f37b21e003fa003f7cccc41a085fc80a52ca", "filename": "src/test/ui/const-generics/uninferred-consts-during-codegen-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "6d3d1a612b8fa77a87c777424c59b2db572e9d42", "filename": "src/test/ui/const-generics/unused-const-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "2cc4070f76e028b8e1484405fd67d01e48444000", "filename": "src/test/ui/const-generics/unused_braces.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,3 +18,5 @@ note: the lint level is defined here\n LL | #![warn(unused_braces)]\n    |         ^^^^^^^^^^^^^\n \n+warning: 2 warnings emitted\n+"}, {"sha": "08c0231536a7f1419c54445b235460359bf23f50", "filename": "src/test/ui/consts/array-literal-index-oob.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -30,3 +30,5 @@ warning: erroneous constant used\n LL |     &{ [1, 2, 3][4] };\n    |     ^^^^^^^^^^^^^^^^^ referenced constant has errors\n \n+warning: 3 warnings emitted\n+"}, {"sha": "cd27331ad512d159ac86a0330c57f3d6dde09a28", "filename": "src/test/ui/consts/assoc_const_generic_impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fassoc_const_generic_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fassoc_const_generic_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fassoc_const_generic_impl.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,5 +18,5 @@ error: erroneous constant encountered\n LL |         let () = Self::I_AM_ZERO_SIZED;\n    |                  ^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "ea27aa8fc8da0356bbcf809f21b2fbf7d18336cf", "filename": "src/test/ui/consts/const-err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,6 +24,6 @@ error[E0080]: erroneous constant used\n LL |     black_box((FOO, FOO));\n    |                     ^^^ referenced constant has errors\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "df8efc44c4966fdb4885b31555d40fb6efc5db36", "filename": "src/test/ui/consts/const-eval/conditional_array_execution.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,6 +24,6 @@ warning: erroneous constant used\n LL |     println!(\"{}\", FOO);\n    |                    ^^^ referenced constant has errors\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "5f1e85b0d6dc9848a2624921d2c4f76356445bb5", "filename": "src/test/ui/consts/const-eval/const_fn_ptr.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -16,3 +16,5 @@ warning: skipping const checks\n LL |     x(y)\n    |     ^^^^\n \n+warning: 3 warnings emitted\n+"}, {"sha": "396769659323daab840a63dd06e1b068ad104164", "filename": "src/test/ui/consts/const-eval/const_fn_ptr_fail.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -4,3 +4,5 @@ warning: skipping const checks\n LL |     X(x) // FIXME: this should error someday\n    |     ^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "b980deea1e1c52d4a8420a3b8c4a2862d1594b92", "filename": "src/test/ui/consts/const-eval/const_fn_ptr_fail2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr_fail2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,6 +24,6 @@ LL |     assert_eq!(Z, 4);\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "d78e0da00f5e17723dbd25199aec95b686b6b8b9", "filename": "src/test/ui/consts/const-eval/index-out-of-bounds-never-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Findex-out-of-bounds-never-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Findex-out-of-bounds-never-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Findex-out-of-bounds-never-type.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,5 +18,5 @@ error: erroneous constant encountered\n LL |     let _ = PrintName::<T>::VOID;\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "8aaae9fe6a7d168da9468dae63167beb0c02927c", "filename": "src/test/ui/consts/const-eval/issue-43197.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -44,6 +44,6 @@ warning: erroneous constant used\n LL |     println!(\"{} {}\", X, Y);\n    |                          ^ referenced constant has errors\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 4 warnings emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "979f4a5904d1cca986dedafc681f993c2883e6d0", "filename": "src/test/ui/consts/const-eval/panic-assoc-never-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -19,6 +19,6 @@ error[E0080]: erroneous constant used\n LL |     let _ = PrintName::VOID;\n    |             ^^^^^^^^^^^^^^^ referenced constant has errors\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "af68a2ff44211deaebf60466fa2da6363a847ffa", "filename": "src/test/ui/consts/const-eval/panic-never-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -19,6 +19,6 @@ error[E0080]: erroneous constant used\n LL |     let _ = VOID;\n    |             ^^^^ referenced constant has errors\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "a545503ce8955a3385b521f6ffab45d3ce974cc6", "filename": "src/test/ui/consts/const-eval/promoted_errors.noopt.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.noopt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.noopt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.noopt.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -76,3 +76,5 @@ warning: this operation will panic at runtime\n LL |     let _x = 1 / (false as u32);\n    |              ^^^^^^^^^^^^^^^^^^ attempt to divide by zero\n \n+warning: 10 warnings emitted\n+"}, {"sha": "48878261782446854b568d17080c5d698b9a2641", "filename": "src/test/ui/consts/const-eval/promoted_errors.opt.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.opt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.opt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.opt.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -70,3 +70,5 @@ warning: this operation will panic at runtime\n LL |     let _x = 1 / (false as u32);\n    |              ^^^^^^^^^^^^^^^^^^ attempt to divide by zero\n \n+warning: 9 warnings emitted\n+"}, {"sha": "a545503ce8955a3385b521f6ffab45d3ce974cc6", "filename": "src/test/ui/consts/const-eval/promoted_errors.opt_with_overflow_checks.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.opt_with_overflow_checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.opt_with_overflow_checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.opt_with_overflow_checks.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -76,3 +76,5 @@ warning: this operation will panic at runtime\n LL |     let _x = 1 / (false as u32);\n    |              ^^^^^^^^^^^^^^^^^^ attempt to divide by zero\n \n+warning: 10 warnings emitted\n+"}, {"sha": "1f1dd203a640186dfe3c503c370e5fa313932e7a", "filename": "src/test/ui/consts/const-eval/pub_const_err.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ note: the lint level is defined here\n LL | #![warn(const_err)]\n    |         ^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "3ae0a11026f38bfcbf40794422134a18812d55a7", "filename": "src/test/ui/consts/const-eval/pub_const_err_bin.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err_bin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err_bin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err_bin.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ note: the lint level is defined here\n LL | #![warn(const_err)]\n    |         ^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "2adff5fc7d4082a31b970b26f74250f15a23e9ce", "filename": "src/test/ui/consts/const-eval/validate_uninhabited_zsts.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -48,6 +48,6 @@ LL | const BAR: [Empty; 3] = [unsafe { std::mem::transmute(()) }; 3];\n    |\n    = note: enums with no variants have no valid value\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 3 warnings emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "62e59531c1e9fa3e409913db86af0d97665846f4", "filename": "src/test/ui/consts/const-points-to-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-points-to-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-points-to-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-points-to-static.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,6 +12,6 @@ LL | const TEST: &u8 = &MY_STATIC;\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "0da2dbc888a63b9bda7746d255718741fe4fe090", "filename": "src/test/ui/consts/const-prop-read-static-in-const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-prop-read-static-in-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fconst-prop-read-static-in-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-prop-read-static-in-const.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,5 +14,5 @@ LL | const TEST: u8 = MY_STATIC;\n    |\n    = note: `#[deny(const_err)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "dba00d72ef036223d3a9d6ca9a7ce049584d4a60", "filename": "src/test/ui/consts/miri_unleashed/abi-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fabi-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fabi-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fabi-mismatch.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -25,5 +25,5 @@ LL | const VAL: () = call_rust_fn(unsafe { std::mem::transmute(c_fn as extern \"C\n    |\n    = note: `#[deny(const_err)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 2 warnings emitted\n "}, {"sha": "8d8d9f9ba4cd87d5a57f88ff3e7e8dd94a23e0d4", "filename": "src/test/ui/consts/miri_unleashed/assoc_const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fassoc_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fassoc_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fassoc_const.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,6 +10,6 @@ error[E0080]: erroneous constant used\n LL |     let y = <String as Bar<Vec<u32>, String>>::F;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "92e782612b253644f695c73da4a8420f774e7d5a", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -101,6 +101,6 @@ LL | | };\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 10 warnings emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "9d89836e3f8ad6d1fe9bbdb4de302d6e6cebe63e", "filename": "src/test/ui/consts/miri_unleashed/drop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -22,6 +22,6 @@ LL | | }\n LL |   };\n    |   - inside `TEST_BAD` at $DIR/drop.rs:19:1\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "8b847e4bf731f16543d641982fa491babf352828", "filename": "src/test/ui/consts/miri_unleashed/mutable_const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -22,5 +22,5 @@ note: the lint level is defined here\n LL | #![deny(const_err)]\n    |         ^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "1699223f74f4317bd97a46a328db3dfb77d81ec1", "filename": "src/test/ui/consts/miri_unleashed/mutable_const2.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -4,13 +4,15 @@ warning: skipping const checks\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    |                                      ^^^^^^^^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+\n error: internal compiler error: mutable allocation in constant\n   --> $DIR/mutable_const2.rs:15:1\n    |\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-thread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:360:17\n+thread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:363:17\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n \n error: internal compiler error: unexpected panic"}, {"sha": "69d02bd543d432212d70ead65a4821a309033948", "filename": "src/test/ui/consts/miri_unleashed/mutable_references.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,6 +10,6 @@ error[E0594]: cannot assign to `*OH_YES`, as `OH_YES` is an immutable static ite\n LL |     *OH_YES = 99;\n    |     ^^^^^^^^^^^^ cannot assign\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0594`."}, {"sha": "545a1af5c6f584a914c6117d076e2fc1b51ec6b7", "filename": "src/test/ui/consts/miri_unleashed/mutable_references_ice.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_ice.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -19,3 +19,5 @@ note: rustc VERSION running on TARGET\n \n note: compiler flags: FLAGS\n \n+warning: 1 warning emitted\n+"}, {"sha": "dd449d5da35ef284e3e5bf9b437f4dd527fbf343", "filename": "src/test/ui/consts/miri_unleashed/mutating_global.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutating_global.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutating_global.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutating_global.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -25,5 +25,5 @@ LL | | };\n    |\n    = note: `#[deny(const_err)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 2 warnings emitted\n "}, {"sha": "cc31c41164fe5438a593c826112d44b5f5f6cc99", "filename": "src/test/ui/consts/miri_unleashed/non_const_fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fnon_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fnon_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fnon_const_fn.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -30,6 +30,6 @@ warning: erroneous constant used\n LL |     println!(\"{:?}\", C);\n    |                      ^ referenced constant has errors\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 3 warnings emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "9ca50a95e4e4176630a1997fc7a891dc38ab803b", "filename": "src/test/ui/consts/packed_pattern.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fpacked_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fpacked_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpacked_pattern.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |         FOO => unreachable!(),\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "4dc54461eeb24485c44470168e2108156ef86d79", "filename": "src/test/ui/consts/packed_pattern2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fpacked_pattern2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fconsts%2Fpacked_pattern2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpacked_pattern2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |         FOO => unreachable!(),\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "7f6a432d5ab1bcf2fc876bd91f8e6e065f8a27eb", "filename": "src/test/ui/deduplicate-diagnostics-2.deduplicate.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeduplicate-diagnostics-2.deduplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeduplicate-diagnostics-2.deduplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeduplicate-diagnostics-2.deduplicate.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -26,3 +26,5 @@ LL |         1.0 => {}\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\n \n+warning: 3 warnings emitted\n+"}, {"sha": "f2315bc91ec64cbb6e271766cc23197b7ab41621", "filename": "src/test/ui/deduplicate-diagnostics-2.duplicate.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeduplicate-diagnostics-2.duplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeduplicate-diagnostics-2.duplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeduplicate-diagnostics-2.duplicate.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -35,3 +35,5 @@ LL |         2.0 => {}\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\n \n+warning: 4 warnings emitted\n+"}, {"sha": "75baf4a1bf90d7678b9447376875047e0388be3d", "filename": "src/test/ui/deprecation/atomic_initializers.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeprecation%2Fatomic_initializers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeprecation%2Fatomic_initializers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fatomic_initializers.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | static FOO: AtomicIsize = ATOMIC_ISIZE_INIT;\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "5b866bbbe836715d69f2e4de86fc82cb3da98e47", "filename": "src/test/ui/deprecation/deprecated-macro_escape-inner.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecated-macro_escape-inner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecated-macro_escape-inner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecated-macro_escape-inner.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |     #![macro_escape]\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n+warning: 1 warning emitted\n+"}, {"sha": "0bb8dc17e4293c43be46bd8116df0a4dfd9abd5a", "filename": "src/test/ui/deprecation/deprecated-macro_escape.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecated-macro_escape.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecated-macro_escape.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecated-macro_escape.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -4,3 +4,5 @@ warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "3040dcd9939fe7c4a526efaf50a8698cdb438ffc", "filename": "src/test/ui/deprecation/deprecation-in-future.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-future.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-future.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-future.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |     deprecated_future(); // ok; deprecated_in_future only applies to rustc_\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "72607629d3c10dc6ee43ffecafe9b52ff9669b05", "filename": "src/test/ui/derive-uninhabited-enum-38885.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |     Void(Void),\n    |\n    = note: `-W dead-code` implied by `-W unused`\n \n+warning: 1 warning emitted\n+"}, {"sha": "b9eb8dd236d2d4024f9b6a7c5b6fc65a89d995d4", "filename": "src/test/ui/did_you_mean/issue-31424.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -28,6 +28,6 @@ LL |         (&mut self).bar();\n    |         cannot borrow as mutable\n    |         try removing `&mut` here\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0596`."}, {"sha": "dde774c520d71184ce03d7a81086fed44edca97f", "filename": "src/test/ui/editions/edition-extern-crate-allowed.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -11,3 +11,5 @@ LL | #![warn(rust_2018_idioms)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[warn(unused_extern_crates)]` implied by `#[warn(rust_2018_idioms)]`\n \n+warning: 1 warning emitted\n+"}, {"sha": "b11e616d7f2e91150bab0b039c0fb0cf9adeb988", "filename": "src/test/ui/editions/edition-feature-redundant.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -4,3 +4,6 @@ warning[E0705]: the feature `rust_2018_preview` is included in the Rust 2018 edi\n LL | #![feature(rust_2018_preview)]\n    |            ^^^^^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0705`."}, {"sha": "6012033dc62d47e07d1548b90f6fb1be61cdaad0", "filename": "src/test/ui/enum/enum-size-variance.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fenum%2Fenum-size-variance.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fenum%2Fenum-size-variance.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-size-variance.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,3 +10,5 @@ note: the lint level is defined here\n LL | #![warn(variant_size_differences)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "6fa843158bbf1997bce51aff484461c0bf09eaa0", "filename": "src/test/ui/error-codes/E0705.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ferror-codes%2FE0705.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ferror-codes%2FE0705.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0705.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -4,3 +4,6 @@ warning[E0705]: the feature `test_2018_feature` is included in the Rust 2018 edi\n LL | #![feature(test_2018_feature)]\n    |            ^^^^^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0705`."}, {"sha": "b0d43225be6be2fcb91b78542b9dad72e155a894", "filename": "src/test/ui/error-codes/E0730.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,6 +12,6 @@ error[E0730]: cannot pattern-match on an array without a fixed length\n LL |         [1, 2, ..] => true,\n    |         ^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0730`."}, {"sha": "02bed6723bf72ade800105604f6c52aebf23b2ae", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -1234,3 +1234,5 @@ warning: unused attribute\n LL | #![proc_macro_derive()]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n \n+warning: 203 warnings emitted\n+"}, {"sha": "0eaec5202c41862465723fd37b81c0a99279a2ec", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-macro_escape.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-macro_escape.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-macro_escape.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-macro_escape.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![macro_escape]\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n+warning: 1 warning emitted\n+"}, {"sha": "b3a43f4eef2a9ecaf764cd5c1320e7020369f4ee", "filename": "src/test/ui/feature-gates/feature-gate-plugin_registrar.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,6 +24,6 @@ LL | #[plugin_registrar]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "d6b1cf3ae1f8302362519c8e5a5b82129503f15b", "filename": "src/test/ui/fn_must_use.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ffn_must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ffn_must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn_must_use.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -55,3 +55,5 @@ warning: unused comparison that must be used\n LL |     m == n;\n    |     ^^^^^^\n \n+warning: 8 warnings emitted\n+"}, {"sha": "50f3c1e0d5ab227d9c47d8f1fc178b25608c6f98", "filename": "src/test/ui/generic-associated-types/gat-incomplete-warning.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-incomplete-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-incomplete-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-incomplete-warning.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(generic_associated_types)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "edce0e6702ee14e55cc7a97b8871648588c0eb13", "filename": "src/test/ui/hrtb/hrtb-perfect-forwarding.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.nll.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -76,5 +76,5 @@ LL | | }\n    |\n    = help: a `loop` may express intention better if this is on purpose\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 4 warnings emitted\n "}, {"sha": "94a1eca4953d624533be4b2d1396179185551992", "filename": "src/test/ui/hygiene/generic_params.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(decl_macro, rustc_attrs, const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "3ff45a8a566bb2d38844decd336be2dbf9f2ca26", "filename": "src/test/ui/hygiene/hygienic-labels-in-let.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels-in-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels-in-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels-in-let.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -330,3 +330,5 @@ LL |             run_once!(continue 'x);\n    |\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+warning: 28 warnings emitted\n+"}, {"sha": "25098c25c82e3ce86bb5616e6e14a6e2b6e2560b", "filename": "src/test/ui/hygiene/hygienic-labels.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -330,3 +330,5 @@ LL |         run_once!(continue 'x);\n    |\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+warning: 28 warnings emitted\n+"}, {"sha": "11dba87d97b931f69fc6c563f6a84ed4a109a680", "filename": "src/test/ui/hygiene/issue-61574-const-parameters.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "1a48fc12b8f5b242ddaeaf8496b869f1dcbfda71", "filename": "src/test/ui/if-attrs/let-chains-attr.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fif-attrs%2Flet-chains-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fif-attrs%2Flet-chains-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif-attrs%2Flet-chains-attr.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(let_chains)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "41bbd791862be5ec217f63b0f0a133f814696288", "filename": "src/test/ui/if-ret.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fif-ret.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fif-ret.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif-ret.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -8,3 +8,5 @@ LL | fn foo() { if (return) { } }\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "ee2b78af3b84d03ede4cef6743415a72780fc18e", "filename": "src/test/ui/if/if-let.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fif%2Fif-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fif%2Fif-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-let.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -63,3 +63,5 @@ LL | |         println!(\"irrefutable pattern\");\n LL | |     }\n    | |_____^\n \n+warning: 6 warnings emitted\n+"}, {"sha": "2623d8e2d025ecae63c442200c3871e00c57ff80", "filename": "src/test/ui/impl-trait-in-bindings.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(impl_trait_in_bindings)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "14d33270ca50d38050338907adbd2883125173d3", "filename": "src/test/ui/impl-trait/bindings-opaque.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,6 +24,6 @@ error[E0599]: no method named `count_ones` found for opaque type `impl std::mark\n LL |     let _ = foo.count_ones();\n    |                 ^^^^^^^^^^ method not found in `impl std::marker::Copy`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 3 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0599`."}, {"sha": "7d64980074a8f2e3e5ffc4e5137373886ef80649", "filename": "src/test/ui/impl-trait/bindings.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -30,6 +30,6 @@ LL | #![feature(impl_trait_in_bindings)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 4 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0435`."}, {"sha": "314ed96fd5ef0d2fc439f9abdd9e5ee598e3b288", "filename": "src/test/ui/impl-trait/bound-normalization-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -36,6 +36,6 @@ LL |     fn foo2_fail<'a, T: Trait<'a>>() -> impl FooLike<Output=T::Assoc> {\n    = note: for more information, visit https://doc.rust-lang.org/book/ch19-03-advanced-traits.html\n    = note: the return type of a function must have a statically known size\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 3 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0271`."}, {"sha": "fcc3cc512362675eb0f9413bf1ebd989d2a56fc2", "filename": "src/test/ui/impl-trait/bound-normalization-pass.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | #![feature(impl_trait_in_bindings)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "51247f1d7b07a85ab3b42d339dc88c27e22072af", "filename": "src/test/ui/impl-trait/equal-hidden-lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fequal-hidden-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimpl-trait%2Fequal-hidden-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fequal-hidden-lifetimes.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | fn equal_regions_static<'a: 'static>(x: &'a i32) -> impl Sized {\n    |\n    = help: you can use the `'static` lifetime directly, in place of `'a`\n \n+warning: 1 warning emitted\n+"}, {"sha": "8cbff0ac73deeef9f8da46f7f916d4fa309a27a3", "filename": "src/test/ui/imports/reexports.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -56,7 +56,7 @@ note: the lint level is defined here\n LL | #![warn(unused_imports)]\n    |         ^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 3 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0364, E0603.\n For more information about an error, try `rustc --explain E0364`."}, {"sha": "39f5d3c6d8c84abe391b5c86a83d8fa1b237d9df", "filename": "src/test/ui/inference/cannot-infer-async-enabled-impl-trait-bindings.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,6 +14,6 @@ LL |     let fut = async {\n LL |         make_unit()?;\n    |         ^^^^^^^^^^^^ cannot infer type\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0282`."}, {"sha": "12848982b8d28750791de19ac4aadaac64064ef4", "filename": "src/test/ui/inference/inference-variable-behind-raw-pointer.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Finference%2Finference-variable-behind-raw-pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Finference%2Finference-variable-behind-raw-pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Finference-variable-behind-raw-pointer.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -8,3 +8,5 @@ LL |     if data.is_null() {}\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n    = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\n \n+warning: 1 warning emitted\n+"}, {"sha": "df52012463255ba34c8b7779b5255eae5d43f5bb", "filename": "src/test/ui/inference/inference_unstable.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Finference%2Finference_unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Finference%2Finference_unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Finference_unstable.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,3 +10,5 @@ LL |     assert_eq!('x'.ipu_flatten(), 1);\n    = help: call with fully qualified syntax `inference_unstable_itertools::IpuItertools::ipu_flatten(...)` to keep using the current method\n    = help: add `#![feature(ipu_flatten)]` to the crate attributes to enable `inference_unstable_iterator::IpuIterator::ipu_flatten`\n \n+warning: 1 warning emitted\n+"}, {"sha": "c822d908dddf9d2a7f3be2eeb8f6586dc1449fe1", "filename": "src/test/ui/invalid/invalid-plugin-attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Finvalid%2Finvalid-plugin-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Finvalid%2Finvalid-plugin-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid%2Finvalid-plugin-attr.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,5 +24,5 @@ error: crate-level attribute should be an inner attribute: add an exclamation ma\n LL | #[plugin(bla)]\n    | ^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "fc8ae1ed7b5b07e06812fbeb7766c3671afb96d4", "filename": "src/test/ui/issues/issue-14221.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-14221.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-14221.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14221.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -27,6 +27,6 @@ note: the lint level is defined here\n LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0170`."}, {"sha": "293430691ddcf5a7128a38c55d1c3a12364d5c27", "filename": "src/test/ui/issues/issue-19100.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-19100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-19100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19100.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,6 @@ warning[E0170]: pattern binding `Baz` is named the same as one of the variants o\n LL | Baz if false\n    | ^^^ help: to match on the variant, qualify the path: `Foo::Baz`\n \n+warning: 2 warnings emitted\n+\n+For more information about this error, try `rustc --explain E0170`."}, {"sha": "7dee1a6a5f0448aadcda6e29c54597f7db316830", "filename": "src/test/ui/issues/issue-27042.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-27042.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-27042.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27042.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -43,6 +43,6 @@ LL | /         'd:\n LL | |         while let Some(_) = None { break };\n    | |__________________________________________^ expected `i32`, found `()`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 4 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "f4a530124ff34a857706f1fed365682a2ec7e37e", "filename": "src/test/ui/issues/issue-30079.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-30079.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-30079.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30079.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -26,6 +26,6 @@ LL |     impl ::SemiPrivTrait for () {\n LL |         type Assoc = Priv;\n    |         ^^^^^^^^^^^^^^^^^^ can't leak private type\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0446`."}, {"sha": "849ff1ebd9236183243008893688da508441acfa", "filename": "src/test/ui/issues/issue-30302.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-30302.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-30302.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30302.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -21,6 +21,6 @@ note: the lint level is defined here\n LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0170`."}, {"sha": "781decb5ae2813cc6b2dd1eef21853537bf4b834", "filename": "src/test/ui/issues/issue-33140-traitobject-crate.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -38,3 +38,5 @@ LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send + Sync { }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n \n+warning: 3 warnings emitted\n+"}, {"sha": "204a39bc8e8e9e317477b39b59c9913b137984ed", "filename": "src/test/ui/issues/issue-37515.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-37515.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-37515.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37515.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -11,3 +11,5 @@ LL | #![warn(unused)]\n    |         ^^^^^^\n    = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`\n \n+warning: 1 warning emitted\n+"}, {"sha": "b82e7b38914acbe7be26fdff0449c68622cf1989", "filename": "src/test/ui/issues/issue-37534.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -23,7 +23,7 @@ LL | struct Foo<T: ?Hash> { }\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0392, E0404.\n For more information about an error, try `rustc --explain E0392`."}, {"sha": "8a5596521ec55acf535af6886a72d575efe970cc", "filename": "src/test/ui/issues/issue-49934.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-49934.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-49934.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49934.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -36,3 +36,5 @@ warning: unused attribute\n LL |         #[derive(Debug)]\n    |         ^^^^^^^^^^^^^^^^\n \n+warning: 5 warnings emitted\n+"}, {"sha": "45cbfef07097d79b693f6830436b36cb9125d5d6", "filename": "src/test/ui/issues/issue-50993.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-50993.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-50993.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50993.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -1,2 +1,4 @@\n warning: dropping unsupported crate type `dylib` for target `thumbv7em-none-eabihf`\n \n+warning: 1 warning emitted\n+"}, {"sha": "d526ddb78e98ec6f0f952d668c114ba32b051821", "filename": "src/test/ui/issues/issue-55511.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,6 +24,6 @@ LL |         <() as Foo<'static>>::C => { }\n LL | }\n    | - `a` dropped here while still borrowed\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0597`."}, {"sha": "25efbb10529ff5c609cbd336088ec72db75da389", "filename": "src/test/ui/issues/issue-59508-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "ecd618eae8b0743465061f0e8cb06b83979d9149", "filename": "src/test/ui/issues/issue-70041.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-70041.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-70041.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-70041.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -17,3 +17,5 @@ LL | use regex;\n    |\n    = note: `#[warn(unused_imports)]` on by default\n \n+warning: 2 warnings emitted\n+"}, {"sha": "ee0672c598d5c10a177cc3fff6769766f157061e", "filename": "src/test/ui/issues/issue-8727.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-8727.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fissues%2Fissue-8727.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8727.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -17,5 +17,5 @@ LL | |     generic::<Option<T>>();\n LL | | }\n    | |_^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "bbec9147f574b7ace25750ac9195d151fdbc713c", "filename": "src/test/ui/iterators/into-iter-on-arrays-lint.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -107,3 +107,5 @@ LL |     Box::new(Box::new([0u8; 33])).into_iter();\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #66145 <https://github.com/rust-lang/rust/issues/66145>\n \n+warning: 12 warnings emitted\n+"}, {"sha": "e9c80b4ef21af4c9ebe4e98833bae158c3dfd3b2", "filename": "src/test/ui/lint/command-line-lint-group-warn.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |     let _InappropriateCamelCasing = true;\n    |\n    = note: `-W non-snake-case` implied by `-W bad-style`\n \n+warning: 1 warning emitted\n+"}, {"sha": "19fe9ed892acb3d2885cce931feaa2f397bb58f2", "filename": "src/test/ui/lint/inclusive-range-pattern-syntax.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -16,3 +16,5 @@ warning: `...` range patterns are deprecated\n LL |         &1...2 => {}\n    |         ^^^^^^ help: use `..=` for an inclusive range: `&(1..=2)`\n \n+warning: 2 warnings emitted\n+"}, {"sha": "15aaf8961b7b186912dd9800b9e45bf5dd0559e1", "filename": "src/test/ui/lint/inline-trait-and-foreign-items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -67,6 +67,6 @@ error: could not find defining uses\n LL |     type U = impl Trait;\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 6 previous errors; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0518`."}, {"sha": "2ef655efdbdf045d8e19bc22c190ca060c562af5", "filename": "src/test/ui/lint/issue-47390-unused-variable-in-struct-pattern.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -122,3 +122,5 @@ LL |     let (mut var, unused_var) = (1, 2);\n    |          |\n    |          help: remove this `mut`\n \n+warning: 16 warnings emitted\n+"}, {"sha": "3fd5283aa6a4aea5279a98990b902d564cc79bb9", "filename": "src/test/ui/lint/lint-change-warnings.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-change-warnings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-change-warnings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-change-warnings.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -32,5 +32,5 @@ LL | #[forbid(warnings)]\n    |          ^^^^^^^^\n    = note: `#[forbid(while_true)]` implied by `#[forbid(warnings)]`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "0ce33090f663a794c6982f666dfc472e7479e364", "filename": "src/test/ui/lint/lint-group-nonstandard-style.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -63,5 +63,5 @@ LL |         #![warn(nonstandard_style)]\n    |                 ^^^^^^^^^^^^^^^^^\n    = note: `#[warn(non_snake_case)]` implied by `#[warn(nonstandard_style)]`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 3 previous errors; 2 warnings emitted\n "}, {"sha": "a95fd69fb01c7f2de960c8df6cf720c32901b2d7", "filename": "src/test/ui/lint/lint-output-format-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-output-format-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-output-format-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-output-format-2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ warning: use of deprecated item 'lint_output_format::foo': text\n LL |     let _x = foo();\n    |              ^^^\n \n+warning: 2 warnings emitted\n+"}, {"sha": "6efd03f14a1dcb14e6e9945f0c6646b855925588", "filename": "src/test/ui/lint/lint-pre-expansion-extern-module.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-pre-expansion-extern-module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-pre-expansion-extern-module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-pre-expansion-extern-module.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -8,3 +8,5 @@ LL | pub fn try() {}\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n+warning: 1 warning emitted\n+"}, {"sha": "1c45c38774e5aa70b08910ad806810d1ffc0246e", "filename": "src/test/ui/lint/lint-removed-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -27,5 +27,5 @@ LL | #[deny(warnings)]\n    |        ^^^^^^^^\n    = note: `#[deny(unused_variables)]` implied by `#[deny(warnings)]`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 4 warnings emitted\n "}, {"sha": "44480d84203bd05c80ca0a7bf05bf8305c09fbfe", "filename": "src/test/ui/lint/lint-removed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,5 +18,5 @@ note: the lint level is defined here\n LL | #[deny(unused_variables)]\n    |        ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "1c37a5baa6db088dd909b0e470cd2d942aa967ab", "filename": "src/test/ui/lint/lint-renamed-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -27,5 +27,5 @@ LL | #[deny(unused)]\n    |        ^^^^^^\n    = note: `#[deny(unused_variables)]` implied by `#[deny(unused)]`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 4 warnings emitted\n "}, {"sha": "984254571452928185f6450bf8c2a310d1c157f9", "filename": "src/test/ui/lint/lint-renamed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -19,5 +19,5 @@ LL | #[deny(unused)]\n    |        ^^^^^^\n    = note: `#[deny(unused_variables)]` implied by `#[deny(unused)]`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "801e04a7f4f8371a0177e9bbf5389663c06b25b6", "filename": "src/test/ui/lint/lint-stability-deprecated.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -652,3 +652,5 @@ warning: use of deprecated item 'lint_stability::TraitWithAssociatedTypes::TypeD\n LL |             TypeDeprecated = u16,\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n+warning: 108 warnings emitted\n+"}, {"sha": "e8746ce980a96f46ed7f348f29d6221335c149d0", "filename": "src/test/ui/lint/lint-type-limits2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -19,5 +19,5 @@ LL | #![warn(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n    = note: the literal `128` does not fit into the type `i8` whose range is `-128..=127`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "0e8a64510695ae2cf8b4ea9f77ccee1a6593f4e3", "filename": "src/test/ui/lint/lint-type-limits3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -19,5 +19,5 @@ LL | #![warn(overflowing_literals)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n    = note: the literal `200` does not fit into the type `i8` whose range is `-128..=127`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "48d9b38a99b658094dab907e8b3f50a5910eea71", "filename": "src/test/ui/lint/lint-unexported-no-mangle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-unexported-no-mangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-unexported-no-mangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unexported-no-mangle.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -48,5 +48,5 @@ LL | pub const PUB_FOO: u64 = 1;\n    | |\n    | help: try a static value: `pub static`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 8 warnings emitted\n "}, {"sha": "f5a2564a5ff65b46d5061b1e59faf902a676074e", "filename": "src/test/ui/lint/lint-unnecessary-parens.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -114,5 +114,5 @@ error: unnecessary parentheses around assigned value\n LL |     _a += (1);\n    |           ^^^ help: remove these parentheses\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 17 previous errors; 1 warning emitted\n "}, {"sha": "42365f24274b9a65cb24283eb006554aaa2ee180", "filename": "src/test/ui/lint/lint-unused-mut-variables.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -218,5 +218,5 @@ note: the lint level is defined here\n LL | #[deny(unused_mut)]\n    |        ^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 25 warnings emitted\n "}, {"sha": "d476d856e24c59b060ccdd85be6ff1c681e4180a", "filename": "src/test/ui/lint/lint-uppercase-variables.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -85,6 +85,6 @@ error: variable `Foo` should have a snake case name\n LL |     fn in_param(Foo: foo::Foo) {}\n    |                 ^^^ help: convert the identifier to snake case (notice the capitalization): `foo`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 6 previous errors; 6 warnings emitted\n \n For more information about this error, try `rustc --explain E0170`."}, {"sha": "ea8d4bf96411558c280998ecc35ecc8b593c5b80", "filename": "src/test/ui/lint/lints-in-foreign-macros.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -56,3 +56,5 @@ warning: missing documentation for a function\n LL | baz2!(pub fn undocumented2() {});\n    |       ^^^^^^^^^^^^^^^^^^^^^^\n \n+warning: 6 warnings emitted\n+"}, {"sha": "3fb80f7e79881b1f5f25b539a7f85b8d9cf47f8a", "filename": "src/test/ui/lint/must-use-ops.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -130,3 +130,5 @@ warning: unused unary operation that must be used\n LL |     *val_pointer;\n    |     ^^^^^^^^^^^^\n \n+warning: 21 warnings emitted\n+"}, {"sha": "ea118c73ce78497aab8cce2ab17e9e83ce88332a", "filename": "src/test/ui/lint/not_found.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fnot_found.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fnot_found.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fnot_found.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,3 +18,5 @@ warning: unknown lint: `Warnings`\n LL | #[deny(Warnings)]\n    |        ^^^^^^^^ help: did you mean (notice the capitalization): `warnings`\n \n+warning: 3 warnings emitted\n+"}, {"sha": "d7926b73cee576454cd20c72840d6130719c5a95", "filename": "src/test/ui/lint/reasons-erroneous.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -186,6 +186,6 @@ error[E0452]: malformed lint attribute input\n LL | #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n-error: aborting due to 30 previous errors\n+error: aborting due to 30 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0452`."}, {"sha": "150237c6be2933bae4d1cbdc31c9f930134abe13", "filename": "src/test/ui/lint/reasons.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Freasons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Freasons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -26,3 +26,5 @@ LL |     nonstandard_style,\n    |     ^^^^^^^^^^^^^^^^^\n    = note: `#[warn(non_snake_case)]` implied by `#[warn(nonstandard_style)]`\n \n+warning: 2 warnings emitted\n+"}, {"sha": "0730c22417c05c7baf151864ba7e74c889c0e16e", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -105,5 +105,5 @@ LL |     #[no_mangle] pub(crate) fn crossfield<T>() {}\n    |     |\n    |     help: remove this attribute\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 3 previous errors; 8 warnings emitted\n "}, {"sha": "6ba8b43954d3e6999749e2ba5d4c7be3d1b77a49", "filename": "src/test/ui/lint/type-overflow.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -61,3 +61,5 @@ LL |     let fail = -0b1111_1111i8;\n    |\n    = note: the literal `0b1111_1111i8` (decimal `255`) does not fit into the type `i8` and will become `-1i8`\n \n+warning: 7 warnings emitted\n+"}, {"sha": "ef38a516e149ae790656c5583a4663c773c09b81", "filename": "src/test/ui/lint/unreachable_pub-pub_crate.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -144,3 +144,5 @@ LL |         pub fn catalyze() -> bool;\n    |\n    = help: or consider exporting it for use by other crates\n \n+warning: 14 warnings emitted\n+"}, {"sha": "1e554612fa865c6670aa1b433402fd5049927791", "filename": "src/test/ui/lint/unreachable_pub.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -144,3 +144,5 @@ LL |         pub fn catalyze() -> bool;\n    |\n    = help: or consider exporting it for use by other crates\n \n+warning: 14 warnings emitted\n+"}, {"sha": "541d64b3e2a5d233189caae4ff7503844919c24a", "filename": "src/test/ui/lint/unused_braces.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -40,3 +40,5 @@ warning: unnecessary braces around function argument\n LL |     consume({ 7 });\n    |             ^^^^^ help: remove these braces\n \n+warning: 5 warnings emitted\n+"}, {"sha": "187fb9a212e0b430cc3c02d8b8c23cd9571383dc", "filename": "src/test/ui/lint/unused_braces_borrow.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,3 +10,5 @@ note: the lint level is defined here\n LL | #![warn(unused_braces)]\n    |         ^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "fa8699abcbde6aa1d0f8655e90d18d90d71df4cc", "filename": "src/test/ui/lint/unused_import_warning_issue_45268.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funused_import_warning_issue_45268.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funused_import_warning_issue_45268.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_import_warning_issue_45268.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,3 +10,5 @@ note: the lint level is defined here\n LL | #![warn(unused_imports)] // Warning explanation here, it's OK\n    |         ^^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "443faebd0f802ced6c65bb894e775ab8b0fd00a1", "filename": "src/test/ui/lint/unused_labels.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -61,3 +61,5 @@ LL |\n LL |         'many_used_shadowed: for _ in 0..10 {\n    |         ^^^^^^^^^^^^^^^^^^^ lifetime 'many_used_shadowed already in scope\n \n+warning: 9 warnings emitted\n+"}, {"sha": "c861a1956e1d113d19183ef2049adced7d0aa53c", "filename": "src/test/ui/lint/use-redundant.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fuse-redundant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flint%2Fuse-redundant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse-redundant.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -25,3 +25,5 @@ LL | use crate::foo::Bar;\n LL |     use crate::foo::Bar;\n    |         ^^^^^^^^^^^^^^^\n \n+warning: 3 warnings emitted\n+"}, {"sha": "45c00e8d6d331fd6391fc1e54c4368ffa83b505e", "filename": "src/test/ui/liveness/liveness-move-in-while.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -29,6 +29,6 @@ LL |         println!(\"{}\", y);\n LL |         while true { while true { while true { x = y; x.clone(); } } }\n    |                                                    - value moved here, in previous iteration of loop\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 3 warnings emitted\n \n For more information about this error, try `rustc --explain E0382`."}, {"sha": "4a6122681a946d584c8af9a05fa3311a3d882459", "filename": "src/test/ui/liveness/liveness-unused.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -112,5 +112,5 @@ LL |         x = 0;\n    |\n    = help: maybe it is overwritten before being read?\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 13 previous errors; 1 warning emitted\n "}, {"sha": "0503d3d4c7817351e63f48e00891391218d80bfa", "filename": "src/test/ui/loops/loop-break-value.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floop-break-value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floop-break-value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floop-break-value.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -151,7 +151,7 @@ LL |         break;\n    |         expected integer, found `()`\n    |         help: give it a value of the expected type: `break value`\n \n-error: aborting due to 16 previous errors\n+error: aborting due to 16 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0308, E0571.\n For more information about an error, try `rustc --explain E0308`."}, {"sha": "3c8e2938d41888108fca5a59b23436e6bf001a7b", "filename": "src/test/ui/loops/loops-reject-duplicate-labels-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -62,3 +62,5 @@ LL |     { 'lt: loop { break; } }\n LL |     { 'lt: while let Some(_) = None::<i32> { break; } }\n    |       ^^^ lifetime 'lt already in scope\n \n+warning: 8 warnings emitted\n+"}, {"sha": "5a3e5158fed8c0d95c3e3d22cf9ff7abdee59974", "filename": "src/test/ui/loops/loops-reject-duplicate-labels.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -62,3 +62,5 @@ LL |     'lt: loop { break; }\n LL |     'lt: while let Some(_) = None::<i32> { break; }\n    |     ^^^ lifetime 'lt already in scope\n \n+warning: 8 warnings emitted\n+"}, {"sha": "c27e61190bbec0a104d45236f9b16e55bb1328fb", "filename": "src/test/ui/loops/loops-reject-labels-shadowing-lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -100,3 +100,5 @@ LL |         fn meth_bad<'bad>(&self) {\n LL |             'bad: loop { break 'bad; }\n    |             ^^^^ lifetime 'bad already in scope\n \n+warning: 12 warnings emitted\n+"}, {"sha": "b31ef273fc6252adf156042e526486aff11d8723", "filename": "src/test/ui/loops/loops-reject-lifetime-shadowing-label.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL |     'a: loop {\n LL |         let b = Box::new(|x: &i8| *x) as Box<dyn for <'a> Fn(&'a i8) -> i8>;\n    |                                                       ^^ lifetime 'a already in scope\n \n+warning: 1 warning emitted\n+"}, {"sha": "02204830120a507beb61bdaadb1b7129de3b677d", "filename": "src/test/ui/lto-duplicate-symbols.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flto-duplicate-symbols.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Flto-duplicate-symbols.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flto-duplicate-symbols.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -2,5 +2,5 @@ warning: Linking globals named 'foo': symbol multiply defined!\n \n error: failed to load bc of \"lto_duplicate_symbols2.3a1fbbbh-cgu.0\": \n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "0e8ecb58fe588a9754d994cf81b85c3eebd1a9d6", "filename": "src/test/ui/macros/macro-deprecation.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmacro-deprecation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmacro-deprecation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-deprecation.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ warning: use of deprecated item 'deprecated_macro': deprecation note\n LL |     deprecated_macro!();\n    |     ^^^^^^^^^^^^^^^^\n \n+warning: 2 warnings emitted\n+"}, {"sha": "98ee85d908d4eab817f7d5c5b2118126faeab302", "filename": "src/test/ui/macros/macro-lifetime-used-with-labels.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmacro-lifetime-used-with-labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmacro-lifetime-used-with-labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-lifetime-used-with-labels.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -11,3 +11,5 @@ LL |         br2!('b);\n    |\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+warning: 1 warning emitted\n+"}, {"sha": "9e127a3b8559b6ff3d9ecfe7a341628d5b9d7af2", "filename": "src/test/ui/macros/macro-stability.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmacro-stability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmacro-stability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-stability.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -36,6 +36,6 @@ warning: use of deprecated item 'local_deprecated': local deprecation reason\n LL |     local_deprecated!();\n    |     ^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 3 previous errors; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "bdee5f4d872a8e73cc9af80a59cf77dd03cbd5e3", "filename": "src/test/ui/macros/macro-use-all-and-none.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-all-and-none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-all-and-none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-all-and-none.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,3 +10,5 @@ note: the lint level is defined here\n LL | #![warn(unused_attributes)]\n    |         ^^^^^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "a694c887085f0aa34a10abd057829b49a1e43bb2", "filename": "src/test/ui/macros/must-use-in-macro-55516.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmust-use-in-macro-55516.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmacros%2Fmust-use-in-macro-55516.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmust-use-in-macro-55516.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -8,3 +8,5 @@ LL |     write!(&mut example, \"{}\", 42);\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+warning: 1 warning emitted\n+"}, {"sha": "98744434d4f8c916aadfd9d4838ccfda4580091b", "filename": "src/test/ui/malformed/malformed-plugin-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-1.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ LL | #![plugin]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "9bf0bf9345c6cccd911fc39dd934b395ba0885f5", "filename": "src/test/ui/malformed/malformed-plugin-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ LL | #![plugin=\"bleh\"]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "11abdb16e0b4eca6c59c9e1bda72cc9b6680c1a5", "filename": "src/test/ui/malformed/malformed-plugin-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-plugin-3.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ LL | #![plugin(foo=\"bleh\")]\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "0ef8e9e9c795a92fb1631e240ff4a0934e2c9352", "filename": "src/test/ui/maybe-bounds-where.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmaybe-bounds-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmaybe-bounds-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmaybe-bounds-where.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -40,6 +40,6 @@ warning: default bound relaxed for a type parameter, but this does nothing becau\n LL | struct S5<T>(*const T) where T: ?Trait<'static> + ?Sized;\n    |           ^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 6 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0203`."}, {"sha": "dffc73a21e418896079872e3c96a866a7ec314b3", "filename": "src/test/ui/multiple-plugin-registrars.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -25,5 +25,5 @@ note: one is here\n LL | pub fn two() {}\n    | ^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 2 warnings emitted\n "}, {"sha": "5c5cafadc85fb89b4efd5665cdfe172084f53fa2", "filename": "src/test/ui/never_type/never-assign-dead-code.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -34,3 +34,5 @@ LL | #![warn(unused)]\n    |         ^^^^^^\n    = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`\n \n+warning: 3 warnings emitted\n+"}, {"sha": "4e2e4c20a02be8a8348e58af52b48964a19d871c", "filename": "src/test/ui/nll/issue-51191.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fnll%2Fissue-51191.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fnll%2Fissue-51191.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-51191.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -48,6 +48,6 @@ LL |         (&mut self).bar();\n    |         cannot borrow as mutable\n    |         try removing `&mut` here\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 5 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0596`."}, {"sha": "f732abc52b71286ddf52096ff7e1fbce34d9f754", "filename": "src/test/ui/non-ice-error-on-worker-io-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fnon-ice-error-on-worker-io-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fnon-ice-error-on-worker-io-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-ice-error-on-worker-io-fail.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -2,5 +2,5 @@ warning: ignoring --out-dir flag due to -o flag\n \n error: io error modifying /dev/\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "7678ee6c821f4c2851a4fe28df96197bd9da1de2", "filename": "src/test/ui/parser/impl-item-type-no-body-semantic-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Fimpl-item-type-no-body-semantic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Fimpl-item-type-no-body-semantic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimpl-item-type-no-body-semantic-fail.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -74,6 +74,6 @@ error[E0202]: associated types are not yet supported in inherent impls (see #899\n LL |     type W where Self: Eq;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 10 previous errors\n+error: aborting due to 10 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0202`."}, {"sha": "e51c2c0e8428b6462068c6f25f15d91e90f8ab2a", "filename": "src/test/ui/parser/issue-68890-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Fissue-68890-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Fissue-68890-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-68890-2.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,6 +18,6 @@ error[E0224]: at least one trait is required for an object type\n LL | type X<'a> = (?'a) +;\n    |              ^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0224`."}, {"sha": "b12eedf3581b52d50e898bffc3ba99e5ee3175db", "filename": "src/test/ui/parser/macro/trait-object-macro-matcher.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Fmacro%2Ftrait-object-macro-matcher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Fmacro%2Ftrait-object-macro-matcher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Ftrait-object-macro-matcher.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,6 +18,6 @@ error[E0224]: at least one trait is required for an object type\n LL |     m!('static);\n    |        ^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0224`."}, {"sha": "62da99bc47d2653f83a6075d70cd7da18a98de24", "filename": "src/test/ui/parser/trait-object-trait-parens.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -69,6 +69,6 @@ LL |     let _: Box<(for<'a> Trait<'a>) + (Obj) + (?Sized)>;\n    |                 first non-auto trait\n    |                 trait alias used in trait object type (first use)\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 6 previous errors; 3 warnings emitted\n \n For more information about this error, try `rustc --explain E0225`."}, {"sha": "00c7657f17bd3801eece9293703845766967536a", "filename": "src/test/ui/parser/underscore-suffix-for-string.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Funderscore-suffix-for-string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fparser%2Funderscore-suffix-for-string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funderscore-suffix-for-string.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -7,3 +7,5 @@ LL |     let _ = \"Foo\"_;\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: see issue #42326 <https://github.com/rust-lang/rust/issues/42326> for more information\n \n+warning: 1 warning emitted\n+"}, {"sha": "7a57b6100f3805d1887a86a3761e4e44bbf29ea4", "filename": "src/test/ui/path-lookahead.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpath-lookahead.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -10,3 +10,5 @@ note: the lint level is defined here\n LL | #![warn(unused_parens)]\n    |         ^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "6f3613b63c9aa4245f3b2460bdf1fdaa3779b57e", "filename": "src/test/ui/pattern/issue-67776-match-same-name-enum-variant-refs.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -36,3 +36,6 @@ warning[E0170]: pattern binding `Baz` is named the same as one of the variants o\n LL |         Baz => {},\n    |         ^^^ help: to match on the variant, qualify the path: `Foo::Baz`\n \n+warning: 6 warnings emitted\n+\n+For more information about this error, try `rustc --explain E0170`."}, {"sha": "6e65c51dd3cf32ae9e14cd3a8b2b20c380d51bf9", "filename": "src/test/ui/pattern/usefulness/issue-43253.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -48,3 +48,5 @@ warning: unreachable pattern\n LL |         6 => {},\n    |         ^\n \n+warning: 6 warnings emitted\n+"}, {"sha": "6922170fccbc8f748cf44185fb2f27eba53468d4", "filename": "src/test/ui/pattern/usefulness/match-range-fail-dominate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-range-fail-dominate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-range-fail-dominate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-range-fail-dominate.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -89,5 +89,5 @@ LL |       0.02f64 => {}\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 5 previous errors; 6 warnings emitted\n "}, {"sha": "dd2ea7481f33191963e8cf90529958d916f1c1d7", "filename": "src/test/ui/privacy/private-in-public-assoc-ty.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-assoc-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-assoc-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-assoc-ty.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -89,7 +89,7 @@ LL |     trait PrivTr {}\n LL |         type Exist = impl PrivTr;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ can't leak private trait\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 5 previous errors; 3 warnings emitted\n \n Some errors have detailed explanations: E0445, E0446.\n For more information about an error, try `rustc --explain E0445`."}, {"sha": "43469f74538ea0900f2549ddb40d9e57044bd055", "filename": "src/test/ui/privacy/private-in-public-non-principal.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -20,5 +20,5 @@ note: the lint level is defined here\n LL | #[deny(missing_docs)]\n    |        ^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "38081295e7eabaf2d702e929e4c9415b5b1dd978", "filename": "src/test/ui/privacy/private-in-public-warn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-warn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-warn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-warn.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -356,6 +356,6 @@ help: the clause will not be checked when the type alias is used, and should be\n LL |     pub type Alias<T>  = T;\n    |                      --\n \n-error: aborting due to 36 previous errors\n+error: aborting due to 36 previous errors; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0446`."}, {"sha": "72c88d5d8b75203ee78a1afc8c709f9883b7caaa", "filename": "src/test/ui/proc-macro/attributes-included.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -11,3 +11,5 @@ LL | #![warn(unused)]\n    |         ^^^^^^\n    = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`\n \n+warning: 1 warning emitted\n+"}, {"sha": "3e6b8f6a435d8eac58cced764ae04106a40de8c3", "filename": "src/test/ui/proc-macro/attributes-on-definitions.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-on-definitions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-on-definitions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-on-definitions.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -6,3 +6,5 @@ LL | attributes_on_definitions::with_attrs!();\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "5a329639e8eee3dd05d5abf8edfbc57c40ac9c96", "filename": "src/test/ui/proc-macro/generate-mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -75,6 +75,6 @@ LL |     #[derive(generate_mod::CheckDerive)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #50504 <https://github.com/rust-lang/rust/issues/50504>\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 4 previous errors; 4 warnings emitted\n \n For more information about this error, try `rustc --explain E0412`."}, {"sha": "1831300a0d97c2fc8f7326f8842c03d191ace022", "filename": "src/test/ui/proc-macro/no-macro-use-attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -16,5 +16,5 @@ error: fatal error triggered by #[rustc_error]\n LL | fn main() {}\n    | ^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "3a4a514df7adea54eb57391d876316f9756367cc", "filename": "src/test/ui/range/range-inclusive-pattern-precedence.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -28,5 +28,5 @@ warning: `...` range patterns are deprecated\n LL |         box 0...9 => {}\n    |              ^^^ help: use `..=` for an inclusive range\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 2 warnings emitted\n "}, {"sha": "8f3e23119fb9e9b28750389e235f3eaf5adaa2ed", "filename": "src/test/ui/reachable/unreachable-try-pattern.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Freachable%2Funreachable-try-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Freachable%2Funreachable-try-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-try-pattern.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -31,3 +31,5 @@ warning: unreachable pattern\n LL |     let y = (match x { Ok(n) => Ok(n), Err(e) => Err(e) })?;\n    |                                        ^^^^^^\n \n+warning: 3 warnings emitted\n+"}, {"sha": "a2396ad4286f7b65204a6ea4d663e8e0d653c1c3", "filename": "src/test/ui/regions/region-bound-on-closure-outlives-call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fregions%2Fregion-bound-on-closure-outlives-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fregions%2Fregion-bound-on-closure-outlives-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-bound-on-closure-outlives-call.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -19,6 +19,6 @@ LL |     (|x| f(x))(call_rec(f))\n    |      |   borrow occurs due to use in closure\n    |      borrow of `f` occurs here\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0505`."}, {"sha": "4dddf160ce27baa8ff3d299da03e3187b26d8ff2", "filename": "src/test/ui/removing-extern-crate.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -29,3 +29,5 @@ warning: unused extern crate\n LL |     extern crate core;\n    |     ^^^^^^^^^^^^^^^^^^ help: remove it\n \n+warning: 4 warnings emitted\n+"}, {"sha": "18e13d30f7632fa98602eb0a20bd2a4e23bc280b", "filename": "src/test/ui/resolve/issue-65035-static-with-parent-generics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -57,7 +57,7 @@ LL |     static a: [u8; N] = [0; N];\n    = note: expected array `[u8; _]`\n               found array `[u8; _]`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 6 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0308, E0401.\n For more information about an error, try `rustc --explain E0308`."}, {"sha": "3a9be6a28fab5e82c7274476aee1e0b90ba4ae59", "filename": "src/test/ui/rfc-2091-track-caller/caller-location-fnptr-rt-ctfe-equiv.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-fnptr-rt-ctfe-equiv.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-fnptr-rt-ctfe-equiv.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-fnptr-rt-ctfe-equiv.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -4,3 +4,5 @@ warning: skipping const checks\n LL |     ptr()\n    |     ^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "4f11c306f5036f3de03b0fb6f958f375fa114664", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -980,7 +980,7 @@ LL |         let 0 = 0?;\n    = help: the trait `std::ops::Try` is not implemented for `{integer}`\n    = note: required by `std::ops::Try::into_result`\n \n-error: aborting due to 106 previous errors\n+error: aborting due to 106 previous errors; 2 warnings emitted\n \n Some errors have detailed explanations: E0277, E0308, E0600, E0614, E0658.\n For more information about an error, try `rustc --explain E0277`."}, {"sha": "81cefdd29b3eaab0b1545c1a142732295d225ed9", "filename": "src/test/ui/rfc-2497-if-let-chains/protect-precedences.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fprotect-precedences.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fprotect-precedences.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fprotect-precedences.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -8,3 +8,5 @@ LL |         if let _ = return true && false {};\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n \n+warning: 1 warning emitted\n+"}, {"sha": "c7765a453c4b84800e4266eb77adebd1db728a3b", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-and-name.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,5 +12,5 @@ error: cannot use `#[link_name]` with `#[link_ordinal]`\n LL |     #[link_ordinal(42)]\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "4826c46e90cf7e482db2e60f83bc3df36b070a50", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-invalid-format.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,5 +14,5 @@ LL |     #[link_ordinal(\"JustMonika\")]\n    |\n    = note: an unsuffixed integer value, e.g., `1`, is expected\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "f8bfe5a62b86fc7cc05472ec66d3db336ece628f", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-too-large.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -14,5 +14,5 @@ LL |     #[link_ordinal(18446744073709551616)]\n    |\n    = note: the value may not exceed `usize::MAX`\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "659a9812672330b8ead5893c3e64a67e2629fb4e", "filename": "src/test/ui/rfc1445/cant-hide-behind-doubly-indirect-embedded.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-embedded.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ LL | #![warn(indirect_structural_match)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n \n+warning: 1 warning emitted\n+"}, {"sha": "c8c36510542a2d47378b60bda79bd661a23c9d45", "filename": "src/test/ui/rfc1445/cant-hide-behind-doubly-indirect-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-doubly-indirect-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ LL | #![warn(indirect_structural_match)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n \n+warning: 1 warning emitted\n+"}, {"sha": "8abbd5d342be782ae3880076386cfcd97d29393a", "filename": "src/test/ui/rfc1445/cant-hide-behind-indirect-struct-embedded.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-embedded.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ LL | #![warn(indirect_structural_match)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n \n+warning: 1 warning emitted\n+"}, {"sha": "3a716d54fcc2cd4577996abbdb2bb0e044fdff2c", "filename": "src/test/ui/rfc1445/cant-hide-behind-indirect-struct-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fcant-hide-behind-indirect-struct-param.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ LL | #![warn(indirect_structural_match)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n \n+warning: 1 warning emitted\n+"}, {"sha": "ae011dfcdba90eee8c85d03bd64400e15e10ddf1", "filename": "src/test/ui/rfc1445/issue-62307-match-ref-ref-forbidden-without-eq.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fissue-62307-match-ref-ref-forbidden-without-eq.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -21,3 +21,5 @@ LL |         RR_B1 => { println!(\"CLAIM RR1: {:?} matches {:?}\", RR_B1, RR_B1);\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n \n+warning: 2 warnings emitted\n+"}, {"sha": "1f26f0f11dc145300cd49cd99c87128eff13c33b", "filename": "src/test/ui/rfc1445/match-forbidden-without-eq.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fmatch-forbidden-without-eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frfc1445%2Fmatch-forbidden-without-eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fmatch-forbidden-without-eq.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -29,5 +29,5 @@ LL |         f32::INFINITY => { }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 2 previous errors; 2 warnings emitted\n "}, {"sha": "6b46f002e32eeed1f0b5e1bf636bcae1b2d5f599", "filename": "src/test/ui/rust-2018/macro-use-warned-against.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -23,3 +23,5 @@ LL | #![warn(macro_use_extern_crate, unused)]\n    |                                 ^^^^^^\n    = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`\n \n+warning: 2 warnings emitted\n+"}, {"sha": "bde4c180811fa81f39cbe186b31c0dcb1b71fadc", "filename": "src/test/ui/rust-2018/remove-extern-crate.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -17,3 +17,5 @@ warning: `extern crate` is not idiomatic in the new edition\n LL |     extern crate core;\n    |     ^^^^^^^^^^^^^^^^^^ help: convert it to a `use`\n \n+warning: 2 warnings emitted\n+"}, {"sha": "45502a5b880815550d49d793d20318cc5f0627ca", "filename": "src/test/ui/rust-2018/suggestions-not-always-applicable.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Fsuggestions-not-always-applicable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Fsuggestions-not-always-applicable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fsuggestions-not-always-applicable.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,3 +24,5 @@ LL |     #[foo]\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n    = note: this warning originates in an attribute macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+warning: 2 warnings emitted\n+"}, {"sha": "2939dc1df705ab97bb83fb3de6ba678776063f1e", "filename": "src/test/ui/rust-2018/try-ident.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Ftry-ident.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Ftry-ident.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftry-ident.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -22,3 +22,5 @@ LL | fn try() {\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n+warning: 2 warnings emitted\n+"}, {"sha": "cdbb215605e717e461a039d81406fc32ce423932", "filename": "src/test/ui/rust-2018/try-macro.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -13,3 +13,5 @@ LL | #![warn(rust_2018_compatibility)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n+warning: 1 warning emitted\n+"}, {"sha": "918762d1f66df34a7067abc40bfa96bc649dabfc", "filename": "src/test/ui/sanitize/inline-always.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fsanitize%2Finline-always.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fsanitize%2Finline-always.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Finline-always.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -11,3 +11,5 @@ note: inlining requested here\n LL | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "73e166e6403e446bac4c27fb8ce8a59eafd13d4c", "filename": "src/test/ui/span/issue-24690.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -25,3 +25,5 @@ warning: variable `theOtherTwo` should have a snake case name\n LL |     let theOtherTwo = 2;\n    |         ^^^^^^^^^^^ help: convert the identifier to snake case: `the_other_two`\n \n+warning: 3 warnings emitted\n+"}, {"sha": "45cf5f8688cd1f77bc2637fb5ce11b481fb19b0f", "filename": "src/test/ui/span/macro-span-replacement.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -15,3 +15,5 @@ LL | #![warn(unused)]\n    = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+warning: 1 warning emitted\n+"}, {"sha": "4a955d1b31f58e0a67e198094b5a2f944ef054a4", "filename": "src/test/ui/span/multispan-import-lint.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -11,3 +11,5 @@ LL | #![warn(unused)]\n    |         ^^^^^^\n    = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`\n \n+warning: 1 warning emitted\n+"}, {"sha": "6ef877da122f545a70ca053319e3af22ac091937", "filename": "src/test/ui/span/unused-warning-point-at-identifier.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -29,3 +29,5 @@ warning: function is never used: `func_complete_span`\n LL | func_complete_span()\n    | ^^^^^^^^^^^^^^^^^^\n \n+warning: 4 warnings emitted\n+"}, {"sha": "79d9506619e17fbde574c674fe89201921fd4980", "filename": "src/test/ui/static/static-lifetime-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fstatic%2Fstatic-lifetime-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Fstatic%2Fstatic-lifetime-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-lifetime-bound.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -17,6 +17,6 @@ LL |     f(&x);\n LL | }\n    | - `x` dropped here while still borrowed\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0597`."}, {"sha": "98190b060cec59e35a8758c2831e1e0273b75f22", "filename": "src/test/ui/test-attrs/test-on-macro.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-on-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-on-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-on-macro.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -4,3 +4,5 @@ warning: `#[test]` attribute should not be used on macros. Use `#[cfg(test)]` in\n LL | foo!();\n    | ^^^^^^^\n \n+warning: 1 warning emitted\n+"}, {"sha": "375ee79ca5ab723d1b05b8eacf90bba7ff41fea4", "filename": "src/test/ui/test-attrs/test-should-panic-attr.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-should-panic-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-should-panic-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-should-panic-attr.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -30,3 +30,5 @@ LL | #[should_panic(expected = \"foo\", bar)]\n    |\n    = note: errors in this attribute were erroneously allowed and will become a hard error in a future release.\n \n+warning: 4 warnings emitted\n+"}, {"sha": "5e685105b45a3ebc4a8ca2820bda3fa4dc8875b8", "filename": "src/test/ui/traits/trait-bounds-not-on-bare-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftraits%2Ftrait-bounds-not-on-bare-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftraits%2Ftrait-bounds-not-on-bare-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-bounds-not-on-bare-trait.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -17,6 +17,6 @@ LL | fn foo(_x: Foo + Send) {\n    = note: all local variables must have a statically known size\n    = help: unsized locals are gated as an unstable feature\n \n-error: aborting due to previous error\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "39f7fb148f0419c4b03c562d2cf914490f03b0f0", "filename": "src/test/ui/trivial-bounds/trivial-bounds-inconsistent-copy.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-copy.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -24,3 +24,5 @@ warning: Trait bound for<'b> &'b mut i32: std::marker::Copy does not depend on a\n LL | fn copy_mut<'a>(t: &&'a mut i32) -> &'a mut i32 where for<'b> &'b mut i32: Copy {\n    |                                                                            ^^^^\n \n+warning: 4 warnings emitted\n+"}, {"sha": "e7835814cb83effa8f2cc52edf5c7dd6ee52e0eb", "filename": "src/test/ui/trivial-bounds/trivial-bounds-inconsistent-projection.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-projection.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -42,3 +42,5 @@ warning: Trait bound B: A does not depend on any type or lifetime parameters\n LL |     B: A<X = u8> + A\n    |                    ^\n \n+warning: 7 warnings emitted\n+"}, {"sha": "aa5d4fcc724c2ce0b41a860163a67c043751fed9", "filename": "src/test/ui/trivial-bounds/trivial-bounds-inconsistent-sized.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-sized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-sized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-sized.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -18,3 +18,5 @@ warning: Trait bound str: std::marker::Sized does not depend on any type or life\n LL | fn return_str() -> str where str: Sized {\n    |                                   ^^^^^\n \n+warning: 3 warnings emitted\n+"}, {"sha": "ffcfbdf54a7aba051ec70a0d6a515f855cfe3ec6", "filename": "src/test/ui/trivial-bounds/trivial-bounds-inconsistent-well-formed.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-well-formed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-well-formed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent-well-formed.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -12,3 +12,5 @@ warning: Trait bound str: std::marker::Copy does not depend on any type or lifet\n LL | pub fn foo() where Vec<str>: Debug, str: Copy {\n    |                                          ^^^^\n \n+warning: 2 warnings emitted\n+"}, {"sha": "d863cf62491426bdbac9ae9eb6292acd8653051c", "filename": "src/test/ui/trivial-bounds/trivial-bounds-inconsistent.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-inconsistent.stderr?ref=941d4352d75bf5c8b509ac4a8c30f5e1e7bf8b8a", "patch": "@@ -90,3 +90,5 @@ warning: Trait bound i32: std::iter::Iterator does not depend on any type or lif\n LL | fn use_for() where i32: Iterator {\n    |                         ^^^^^^^^\n \n+warning: 14 warnings emitted\n+"}]}