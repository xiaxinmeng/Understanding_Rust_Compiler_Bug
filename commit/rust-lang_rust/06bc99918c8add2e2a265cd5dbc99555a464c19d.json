{"sha": "06bc99918c8add2e2a265cd5dbc99555a464c19d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YmM5OTkxOGM4YWRkMmUyYTI2NWNkNWRiYzk5NTU1YTQ2NGMxOWQ=", "commit": {"author": {"name": "Liam Monahan", "email": "liam@monahan.io", "date": "2015-04-03T00:02:57Z"}, "committer": {"name": "Liam Monahan", "email": "liam@monahan.io", "date": "2015-04-03T00:02:57Z"}, "message": "doc/trpl: Fixing a comma splice in iterators.md.", "tree": {"sha": "f6b0a70e610296aa86218989dbf0c2ec49542574", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6b0a70e610296aa86218989dbf0c2ec49542574"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06bc99918c8add2e2a265cd5dbc99555a464c19d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06bc99918c8add2e2a265cd5dbc99555a464c19d", "html_url": "https://github.com/rust-lang/rust/commit/06bc99918c8add2e2a265cd5dbc99555a464c19d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06bc99918c8add2e2a265cd5dbc99555a464c19d/comments", "author": {"login": "liammonahan", "id": 37177, "node_id": "MDQ6VXNlcjM3MTc3", "avatar_url": "https://avatars.githubusercontent.com/u/37177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liammonahan", "html_url": "https://github.com/liammonahan", "followers_url": "https://api.github.com/users/liammonahan/followers", "following_url": "https://api.github.com/users/liammonahan/following{/other_user}", "gists_url": "https://api.github.com/users/liammonahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/liammonahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liammonahan/subscriptions", "organizations_url": "https://api.github.com/users/liammonahan/orgs", "repos_url": "https://api.github.com/users/liammonahan/repos", "events_url": "https://api.github.com/users/liammonahan/events{/privacy}", "received_events_url": "https://api.github.com/users/liammonahan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liammonahan", "id": 37177, "node_id": "MDQ6VXNlcjM3MTc3", "avatar_url": "https://avatars.githubusercontent.com/u/37177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liammonahan", "html_url": "https://github.com/liammonahan", "followers_url": "https://api.github.com/users/liammonahan/followers", "following_url": "https://api.github.com/users/liammonahan/following{/other_user}", "gists_url": "https://api.github.com/users/liammonahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/liammonahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liammonahan/subscriptions", "organizations_url": "https://api.github.com/users/liammonahan/orgs", "repos_url": "https://api.github.com/users/liammonahan/repos", "events_url": "https://api.github.com/users/liammonahan/events{/privacy}", "received_events_url": "https://api.github.com/users/liammonahan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1835ae7cc175b9aff383432e934e7ad13825ebc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1835ae7cc175b9aff383432e934e7ad13825ebc", "html_url": "https://github.com/rust-lang/rust/commit/d1835ae7cc175b9aff383432e934e7ad13825ebc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eea575658b92c6a616f13cc82dac8f28da290bbb", "filename": "src/doc/trpl/iterators.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06bc99918c8add2e2a265cd5dbc99555a464c19d/src%2Fdoc%2Ftrpl%2Fiterators.md", "raw_url": "https://github.com/rust-lang/rust/raw/06bc99918c8add2e2a265cd5dbc99555a464c19d/src%2Fdoc%2Ftrpl%2Fiterators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fiterators.md?ref=06bc99918c8add2e2a265cd5dbc99555a464c19d", "patch": "@@ -291,7 +291,7 @@ If you are trying to execute a closure on an iterator for its side effects,\n just use `for` instead.\n \n There are tons of interesting iterator adapters. `take(n)` will return an\n-iterator over the next `n` elements of the original iterator, note that this\n+iterator over the next `n` elements of the original iterator. Note that this\n has no side effect on the original iterator. Let's try it out with our infinite\n iterator from before:\n "}]}