{"sha": "a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZmVhMGQzNGVlOGYzNDM2YWVmZDg3ZDRjMTMzYTdmZjUwZmZiYjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-27T18:55:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-27T18:55:05Z"}, "message": "Merge #3745\n\n3745: Fix merge-imports assist for wildcard imports r=matklad a=piotr-szpetkowski\n\nRefs #3728 \r\n\r\nBesides the case mentioned in issue merging two diff-prefix wildcard uses will now work as well e.g. \r\n\r\n```rust\r\nuse std::cell::*;\r\nuse std::str::*;\r\n```\r\n\r\nwill translate into:\r\n\r\n```rust\r\nuse std::{cell::*, str::*}\r\n```\r\n\r\nI'd also like to explore usage of the `merge-imports` for same-prefix uses to simplify redundancy, but it seems like an idea for another issue and I'm not sure if it's something that this assist should do e.g.:\r\n\r\n```rust\r\nuse std::cell::Cell;\r\nuse std::cell::*;\r\n```\r\n\r\ninto:\r\n\r\n```rust\r\nuse std::cell::*;\r\n```\n\nCo-authored-by: Piotr Szpetkowski <piotr.szpetkowski@pyquest.space>", "tree": {"sha": "9afc05a20e5e51f757317a71906dc45a97861415", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9afc05a20e5e51f757317a71906dc45a97861415"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJefkwJCRBK7hj4Ov3rIwAAdHIIABf1/g4PkpoOtkbcIOtTN8uD\nFh0XiTvi459u6XxuMxiX1wEPVmC8e+xoGNRIY7igxwwfxo6ajW9TQJ1RvDMtg+CY\n+0Yy8hv9uFtR+6JQZahx64ijyt0fnjOQUMHn1gRusggNpI0MtEGfQELU5wN5a5s+\naJmiYpgmvEgNkV14dGqiUS3C2A0AtYH7nKUFPrpJusYL9BPaBJctsJpm8drLYkq2\npUxihPXcc7EWV0GXNcme2t7VmVZsta8Upe6wIw+0hFgnIfIDDq7qw/Gi/Je8hjkq\nKsOGjvSId5DVXl7V9wvnMMHpNhvx4qjra6wr5UDKopg5R+a9ZY5bchPSuvebq18=\n=SIo3\n-----END PGP SIGNATURE-----\n", "payload": "tree 9afc05a20e5e51f757317a71906dc45a97861415\nparent 75f6ab208a2b3e5fea9e8b6362df3fad7308a0d5\nparent f016d8b900792c8ae4fce268920edea3035b6559\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1585335305 +0000\ncommitter GitHub <noreply@github.com> 1585335305 +0000\n\nMerge #3745\n\n3745: Fix merge-imports assist for wildcard imports r=matklad a=piotr-szpetkowski\n\nRefs #3728 \r\n\r\nBesides the case mentioned in issue merging two diff-prefix wildcard uses will now work as well e.g. \r\n\r\n```rust\r\nuse std::cell::*;\r\nuse std::str::*;\r\n```\r\n\r\nwill translate into:\r\n\r\n```rust\r\nuse std::{cell::*, str::*}\r\n```\r\n\r\nI'd also like to explore usage of the `merge-imports` for same-prefix uses to simplify redundancy, but it seems like an idea for another issue and I'm not sure if it's something that this assist should do e.g.:\r\n\r\n```rust\r\nuse std::cell::Cell;\r\nuse std::cell::*;\r\n```\r\n\r\ninto:\r\n\r\n```rust\r\nuse std::cell::*;\r\n```\n\nCo-authored-by: Piotr Szpetkowski <piotr.szpetkowski@pyquest.space>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0", "html_url": "https://github.com/rust-lang/rust/commit/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f6ab208a2b3e5fea9e8b6362df3fad7308a0d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f6ab208a2b3e5fea9e8b6362df3fad7308a0d5", "html_url": "https://github.com/rust-lang/rust/commit/75f6ab208a2b3e5fea9e8b6362df3fad7308a0d5"}, {"sha": "f016d8b900792c8ae4fce268920edea3035b6559", "url": "https://api.github.com/repos/rust-lang/rust/commits/f016d8b900792c8ae4fce268920edea3035b6559", "html_url": "https://github.com/rust-lang/rust/commit/f016d8b900792c8ae4fce268920edea3035b6559"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "5d4b74e567a1422fb73e79aa665532e61a5dbe28", "filename": "crates/ra_assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0", "patch": "@@ -170,6 +170,34 @@ use std::{fmt::<|>{Display, Debug}};\n         );\n     }\n \n+    #[test]\n+    fn test_merge_single_wildcard_diff_prefixes() {\n+        check_assist(\n+            merge_imports,\n+            r\"\n+use std<|>::cell::*;\n+use std::str;\n+\",\n+            r\"\n+use std<|>::{cell::*, str};\n+\",\n+        )\n+    }\n+\n+    #[test]\n+    fn test_merge_both_wildcard_diff_prefixes() {\n+        check_assist(\n+            merge_imports,\n+            r\"\n+use std<|>::cell::*;\n+use std::str::*;\n+\",\n+            r\"\n+use std<|>::{cell::*, str::*};\n+\",\n+        )\n+    }\n+\n     #[test]\n     fn removes_just_enough_whitespace() {\n         check_assist("}, {"sha": "2304e00cf96edb5cea3921433f1f3b77443c51dd", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0", "patch": "@@ -302,9 +302,10 @@ impl ast::UseTree {\n             Some(it) => it,\n             None => return self.clone(),\n         };\n-        let use_tree = make::use_tree(suffix.clone(), self.use_tree_list(), self.alias());\n+        let use_tree =\n+            make::use_tree(suffix.clone(), self.use_tree_list(), self.alias(), self.has_star());\n         let nested = make::use_tree_list(iter::once(use_tree));\n-        return make::use_tree(prefix.clone(), Some(nested), None);\n+        return make::use_tree(prefix.clone(), Some(nested), None, false);\n \n         fn split_path_prefix(prefix: &ast::Path) -> Option<ast::Path> {\n             let parent = prefix.parent_path()?;"}, {"sha": "dbf8e63704195956209402b343805f90406a7f75", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=a1fea0d34ee8f3436aefd87d4c133a7ff50ffbb0", "patch": "@@ -29,12 +29,17 @@ pub fn use_tree(\n     path: ast::Path,\n     use_tree_list: Option<ast::UseTreeList>,\n     alias: Option<ast::Alias>,\n+    add_star: bool,\n ) -> ast::UseTree {\n     let mut buf = \"use \".to_string();\n     buf += &path.syntax().to_string();\n     if let Some(use_tree_list) = use_tree_list {\n         buf += &format!(\"::{}\", use_tree_list);\n     }\n+    if add_star {\n+        buf += \"::*\";\n+    }\n+\n     if let Some(alias) = alias {\n         buf += &format!(\" {}\", alias);\n     }"}]}