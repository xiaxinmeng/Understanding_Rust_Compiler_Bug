{"sha": "7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYzk3NGFiMmMyOWY4OTZhMGQ5Y2E5NTJhZDMwNmE5ZWQzOGY2ZjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-07T18:40:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-07T18:40:18Z"}, "message": "G: some attributes", "tree": {"sha": "2c39c8dcde0080a065ef0e8d59e5c4147b330a2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c39c8dcde0080a065ef0e8d59e5c4147b330a2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2", "html_url": "https://github.com/rust-lang/rust/commit/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5562931e4f3c6c57e9122c3ce34d941fb1ff6e5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5562931e4f3c6c57e9122c3ce34d941fb1ff6e5b", "html_url": "https://github.com/rust-lang/rust/commit/5562931e4f3c6c57e9122c3ce34d941fb1ff6e5b"}], "stats": {"total": 115, "additions": 83, "deletions": 32}, "files": [{"sha": "e3b450d2beff7da3b205f22ea8ceb76630c6bad0", "filename": "grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/grammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/grammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/grammar.ron?ref=7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2", "patch": "@@ -66,5 +66,6 @@ Grammar(\n         \"STRUCT_FIELD\",\n         \"FN_ITEM\",\n         \"ATTR\",\n+        \"META_ITEM\",\n     ]\n )\n\\ No newline at end of file"}, {"sha": "acf27aec947d93e09821fd5fdcd674e39c00b4ec", "filename": "src/parser/event_parser/grammar.rs", "status": "modified", "additions": 43, "deletions": 9, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/src%2Fparser%2Fevent_parser%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/src%2Fparser%2Fevent_parser%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar.rs?ref=7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2", "patch": "@@ -34,7 +34,7 @@ fn item(p: &mut Parser) {\n \n fn struct_item(p: &mut Parser) {\n     p.expect(IDENT)\n-        && p.curly_block(|p| comma_list(p, struct_field));\n+        && p.curly_block(|p| comma_list(p, EOF, struct_field));\n }\n \n fn struct_field(p: &mut Parser) -> bool {\n@@ -52,19 +52,45 @@ fn fn_item(p: &mut Parser) {\n // Paths, types, attributes, and stuff //\n \n fn inner_attributes(p: &mut Parser) {\n-    many(p, inner_attribute)\n+    many(p, |p| attribute(p, true))\n }\n \n-fn inner_attribute(p: &mut Parser) -> bool {\n-    if !(p.lookahead(&[EXCL, POUND])) {\n+fn attribute(p: &mut Parser, inner: bool) -> bool {\n+    let attr_start = inner && p.lookahead(&[POUND, EXCL, L_BRACK])\n+        || !inner && p.lookahead(&[POUND, L_BRACK]);\n+    if !attr_start {\n         return false;\n     }\n     node(p, ATTR, |p| {\n-        p.bump_n(2);\n+        p.bump_n(if inner { 3 } else { 2 });\n+        meta_item(p) && p.expect(R_BRACK);\n     });\n     true\n }\n \n+fn meta_item(p: &mut Parser) -> bool {\n+    node_if(p, IDENT, META_ITEM, |p| {\n+        if p.eat(EQ) {\n+            if !literal(p) {\n+                p.error()\n+                    .message(\"expected literal\")\n+                    .emit();\n+            }\n+        } else if p.eat(L_PAREN) {\n+            comma_list(p, R_PAREN, meta_item_inner);\n+            p.expect(R_PAREN);\n+        }\n+    })\n+}\n+\n+fn meta_item_inner(p: &mut Parser) -> bool {\n+    meta_item(p) || literal(p)\n+}\n+\n+fn literal(p: &mut Parser) -> bool {\n+    p.eat(INT_NUMBER) || p.eat(FLOAT_NUMBER)\n+}\n+\n fn outer_attributes(_: &mut Parser) {\n }\n \n@@ -75,7 +101,12 @@ fn visibility(_: &mut Parser) {\n \n // Error recovery and high-order utils //\n \n-fn node_if<F: FnOnce(&mut Parser)>(p: &mut Parser, first: SyntaxKind, node_kind: SyntaxKind, rest: F) -> bool {\n+fn node_if<F: FnOnce(&mut Parser)>(\n+    p: &mut Parser,\n+    first: SyntaxKind,\n+    node_kind: SyntaxKind,\n+    rest: F\n+) -> bool {\n     p.current() == first && { node(p, node_kind, |p| { p.bump(); rest(p); }); true }\n }\n \n@@ -89,10 +120,9 @@ fn many<F: Fn(&mut Parser) -> bool>(p: &mut Parser, f: F) {\n     while f(p) { }\n }\n \n-fn comma_list<F: Fn(&mut Parser) -> bool>(p: &mut Parser, f: F) {\n+fn comma_list<F: Fn(&mut Parser) -> bool>(p: &mut Parser, end: SyntaxKind, f: F) {\n     many(p, |p| {\n-        f(p);\n-        if p.current() == EOF {\n+        if !f(p) || p.current() == end {\n             false\n         } else {\n             p.expect(COMMA);\n@@ -157,4 +187,8 @@ impl<'p> Parser<'p> {\n             self.bump();\n         }\n     }\n+\n+    fn eat(&mut self, kind: SyntaxKind) -> bool {\n+        self.current() == kind && { self.bump(); true }\n+    }\n }\n\\ No newline at end of file"}, {"sha": "eea7819a3674d6351464275f8c51900642711f42", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2", "patch": "@@ -63,8 +63,9 @@ pub const STRUCT_ITEM: SyntaxKind = SyntaxKind(58);\n pub const STRUCT_FIELD: SyntaxKind = SyntaxKind(59);\n pub const FN_ITEM: SyntaxKind = SyntaxKind(60);\n pub const ATTR: SyntaxKind = SyntaxKind(61);\n+pub const META_ITEM: SyntaxKind = SyntaxKind(62);\n \n-static INFOS: [SyntaxInfo; 62] = [\n+static INFOS: [SyntaxInfo; 63] = [\n     SyntaxInfo { name: \"USE_KW\" },\n     SyntaxInfo { name: \"FN_KW\" },\n     SyntaxInfo { name: \"STRUCT_KW\" },\n@@ -127,6 +128,7 @@ static INFOS: [SyntaxInfo; 62] = [\n     SyntaxInfo { name: \"STRUCT_FIELD\" },\n     SyntaxInfo { name: \"FN_ITEM\" },\n     SyntaxInfo { name: \"ATTR\" },\n+    SyntaxInfo { name: \"META_ITEM\" },\n ];\n \n pub(crate) fn syntax_info(kind: SyntaxKind) -> &'static SyntaxInfo {"}, {"sha": "a19d2f49c085e0dc4515a2e006e95ede1aa7ea59", "filename": "tests/data/parser/ok/0006_inner_attributes.txt", "status": "modified", "additions": 36, "deletions": 22, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/tests%2Fdata%2Fparser%2Fok%2F0006_inner_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2/tests%2Fdata%2Fparser%2Fok%2F0006_inner_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0006_inner_attributes.txt?ref=7bc974ab2c29f896a0d9ca952ad306a9ed38f6f2", "patch": "@@ -1,44 +1,58 @@\n FILE@[0; 236)\n-  ERROR@[0; 236)\n-  err: `expected item`\n+  ATTR@[0; 9)\n     POUND@[0; 1)\n     EXCL@[1; 2)\n     L_BRACK@[2; 3)\n-    IDENT@[3; 7)\n+    META_ITEM@[3; 7)\n+      IDENT@[3; 7)\n     R_BRACK@[7; 8)\n     WHITESPACE@[8; 9)\n+  ATTR@[9; 24)\n     POUND@[9; 10)\n     EXCL@[10; 11)\n     L_BRACK@[11; 12)\n-    IDENT@[12; 16)\n-    L_PAREN@[16; 17)\n-    IDENT@[17; 21)\n-    R_PAREN@[21; 22)\n+    META_ITEM@[12; 22)\n+      IDENT@[12; 16)\n+      L_PAREN@[16; 17)\n+      META_ITEM@[17; 21)\n+        IDENT@[17; 21)\n+      R_PAREN@[21; 22)\n     R_BRACK@[22; 23)\n     WHITESPACE@[23; 24)\n+  ATTR@[24; 40)\n     POUND@[24; 25)\n     EXCL@[25; 26)\n     L_BRACK@[26; 27)\n-    IDENT@[27; 31)\n-    L_PAREN@[31; 32)\n-    IDENT@[32; 37)\n-    R_PAREN@[37; 38)\n+    META_ITEM@[27; 38)\n+      IDENT@[27; 31)\n+      L_PAREN@[31; 32)\n+      META_ITEM@[32; 37)\n+        IDENT@[32; 37)\n+      R_PAREN@[37; 38)\n     R_BRACK@[38; 39)\n     WHITESPACE@[39; 40)\n+  ATTR@[40; 66)\n     POUND@[40; 41)\n     EXCL@[41; 42)\n     L_BRACK@[42; 43)\n-    IDENT@[43; 47)\n-    L_PAREN@[47; 48)\n-    IDENT@[48; 53)\n-    COMMA@[53; 54)\n-    WHITESPACE@[54; 55)\n-    INT_NUMBER@[55; 58)\n-    COMMA@[58; 59)\n-    WHITESPACE@[59; 60)\n-    IDENT@[60; 64)\n-    COMMA@[64; 65)\n-    WHITESPACE@[65; 66)\n+    META_ITEM@[43; 66)\n+      IDENT@[43; 47)\n+      L_PAREN@[47; 48)\n+      META_ITEM@[48; 53)\n+        IDENT@[48; 53)\n+      COMMA@[53; 54)\n+      WHITESPACE@[54; 55)\n+      INT_NUMBER@[55; 58)\n+      COMMA@[58; 59)\n+      META_ITEM@[59; 64)\n+        WHITESPACE@[59; 60)\n+        IDENT@[60; 64)\n+      COMMA@[64; 65)\n+      err: `expected R_PAREN`\n+      WHITESPACE@[65; 66)\n+    err: `expected R_BRACK`\n+  ERROR@[66; 236)\n+  err: `expected item`\n     STRING@[66; 72)\n     COMMA@[72; 73)\n     WHITESPACE@[73; 74)"}]}