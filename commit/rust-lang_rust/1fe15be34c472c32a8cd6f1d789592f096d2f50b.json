{"sha": "1fe15be34c472c32a8cd6f1d789592f096d2f50b", "node_id": "C_kwDOAAsO6NoAKDFmZTE1YmUzNGM0NzJjMzJhOGNkNmYxZDc4OTU5MmYwOTZkMmY1MGI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-12T18:17:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-12T18:17:28Z"}, "message": "Rollup merge of #90589 - durin42:llvm-14-ASO-now-struct, r=nikic\n\nrustc_llvm: update PassWrapper for recent LLVM\n\nNow AddressSanitizerOptions is a struct, but at least the change was\ntiny.\n\nr? `@nikic`", "tree": {"sha": "7e1c0ce589fa6c86925a7fe7f271f7c0f2e43caf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e1c0ce589fa6c86925a7fe7f271f7c0f2e43caf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fe15be34c472c32a8cd6f1d789592f096d2f50b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhjq+4CRBK7hj4Ov3rIwAAIiUIAEW3ZNSxbVEftRq73U9EmIRn\n8seq6bbewqvTodKX0G9ncyDgV2eO+Oh3RdnFPhECTy9ocVCvLHqquetYdmSEaJEg\ngfRFlJGLMHJ6x389qPOUArIQAMZLMWCqw9OZVr2rBRgWtdIUYzjz90iXNLMD0JdD\nGIeqPYqENNuNED7ajk3FSNJI50Kwa0hODi9Kg3ewRcX9FJ4UpY2vy2m4aNdd4kgK\nK9w9gbuolHBGOwTDUTU6RJoHRU3wuSBNL83zGFFnw9HB3Wiv/DoIV4wRdHqsKrae\n2kKUsIZ9AYrS3TUC27YBXB5EHPQpmrywndVZOFjwFIv+Gw1nlrxT3xTj2C3KjLs=\n=x+J1\n-----END PGP SIGNATURE-----\n", "payload": "tree 7e1c0ce589fa6c86925a7fe7f271f7c0f2e43caf\nparent f31622a50b06e4e5775cf71d1dfe3e59ffc21aa5\nparent d9f2d5f0e9c55f440d043c3614b164d7c9fa70ce\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1636741048 +0100\ncommitter GitHub <noreply@github.com> 1636741048 +0100\n\nRollup merge of #90589 - durin42:llvm-14-ASO-now-struct, r=nikic\n\nrustc_llvm: update PassWrapper for recent LLVM\n\nNow AddressSanitizerOptions is a struct, but at least the change was\ntiny.\n\nr? `@nikic`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fe15be34c472c32a8cd6f1d789592f096d2f50b", "html_url": "https://github.com/rust-lang/rust/commit/1fe15be34c472c32a8cd6f1d789592f096d2f50b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fe15be34c472c32a8cd6f1d789592f096d2f50b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f31622a50b06e4e5775cf71d1dfe3e59ffc21aa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f31622a50b06e4e5775cf71d1dfe3e59ffc21aa5", "html_url": "https://github.com/rust-lang/rust/commit/f31622a50b06e4e5775cf71d1dfe3e59ffc21aa5"}, {"sha": "d9f2d5f0e9c55f440d043c3614b164d7c9fa70ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9f2d5f0e9c55f440d043c3614b164d7c9fa70ce", "html_url": "https://github.com/rust-lang/rust/commit/d9f2d5f0e9c55f440d043c3614b164d7c9fa70ce"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "4f77db8a24dc4be05217c7cbce4a49b5ca35f44c", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1fe15be34c472c32a8cd6f1d789592f096d2f50b/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1fe15be34c472c32a8cd6f1d789592f096d2f50b/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=1fe15be34c472c32a8cd6f1d789592f096d2f50b", "patch": "@@ -889,15 +889,17 @@ LLVMRustOptimizeWithNewPassManager(\n       OptimizerLastEPCallbacks.push_back(\n         [SanitizerOptions](ModulePassManager &MPM, OptimizationLevel Level) {\n           MPM.addPass(RequireAnalysisPass<ASanGlobalsMetadataAnalysis, Module>());\n-          MPM.addPass(ModuleAddressSanitizerPass(\n-              /*CompileKernel=*/false, SanitizerOptions->SanitizeAddressRecover));\n #if LLVM_VERSION_GE(14, 0)\n-          AddressSanitizerOptions opts(/*CompileKernel=*/false,\n-                                       SanitizerOptions->SanitizeAddressRecover,\n-                                       /*UseAfterScope=*/true,\n-                                       AsanDetectStackUseAfterReturnMode::Runtime);\n-          MPM.addPass(createModuleToFunctionPassAdaptor(AddressSanitizerPass(opts)));\n+          AddressSanitizerOptions opts = AddressSanitizerOptions{\n+            /*CompileKernel=*/false,\n+            SanitizerOptions->SanitizeAddressRecover,\n+            /*UseAfterScope=*/true,\n+            AsanDetectStackUseAfterReturnMode::Runtime,\n+          };\n+          MPM.addPass(ModuleAddressSanitizerPass(opts));\n #else\n+          MPM.addPass(ModuleAddressSanitizerPass(\n+              /*CompileKernel=*/false, SanitizerOptions->SanitizeAddressRecover));\n           MPM.addPass(createModuleToFunctionPassAdaptor(AddressSanitizerPass(\n               /*CompileKernel=*/false, SanitizerOptions->SanitizeAddressRecover,\n               /*UseAfterScope=*/true)));"}]}