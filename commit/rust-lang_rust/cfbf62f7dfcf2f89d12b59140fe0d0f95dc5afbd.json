{"sha": "cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYmY2MmY3ZGZjZjJmODlkMTJiNTkxNDBmZTBkMGY5NWRjNWFmYmQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-03-23T08:58:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-23T17:28:14Z"}, "message": "add `Goal::CannotProve` and extract `ProgramClause` struct", "tree": {"sha": "b623822b37b5670d15dbb6b897dcba74cfeccb7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b623822b37b5670d15dbb6b897dcba74cfeccb7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd", "html_url": "https://github.com/rust-lang/rust/commit/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8a52850cffd1e13e1f695451127f981345c72ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a52850cffd1e13e1f695451127f981345c72ec", "html_url": "https://github.com/rust-lang/rust/commit/c8a52850cffd1e13e1f695451127f981345c72ec"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "322cfd55510bb84d9687d3365d0d47ca885869f3", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd", "patch": "@@ -1413,6 +1413,7 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for traits::Goal<'tcx> {\n                 quantifier.hash_stable(hcx, hasher);\n                 goal.hash_stable(hcx, hasher);\n             },\n+            CannotProve => { },\n         }\n     }\n }"}, {"sha": "b05c4539f6a49c06e686c1b258849aa5f35e2c14", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd", "patch": "@@ -286,7 +286,8 @@ pub enum Goal<'tcx> {\n     And(&'tcx Goal<'tcx>, &'tcx Goal<'tcx>),\n     Not(&'tcx Goal<'tcx>),\n     DomainGoal(DomainGoal<'tcx>),\n-    Quantified(QuantifierKind, ty::Binder<&'tcx Goal<'tcx>>)\n+    Quantified(QuantifierKind, ty::Binder<&'tcx Goal<'tcx>>),\n+    CannotProve,\n }\n \n impl<'tcx> Goal<'tcx> {"}, {"sha": "1e3e4160de1963b611897a9df1a4dcebe780e33d", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=cfbf62f7dfcf2f89d12b59140fe0d0f95dc5afbd", "patch": "@@ -491,6 +491,7 @@ impl<'tcx> fmt::Display for traits::Goal<'tcx> {\n                 // FIXME: appropriate binder names\n                 write!(fmt, \"{}<> {{ {} }}\", qkind, goal.skip_binder())\n             }\n+            CannotProve => write!(fmt, \"CannotProve\"),\n         }\n     }\n }\n@@ -557,6 +558,7 @@ EnumTypeFoldableImpl! {\n         (traits::Goal::Not)(goal),\n         (traits::Goal::DomainGoal)(domain_goal),\n         (traits::Goal::Quantified)(qkind, goal),\n+        (traits::Goal::CannotProve),\n     }\n }\n "}]}