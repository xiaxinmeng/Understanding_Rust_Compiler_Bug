{"sha": "b62f48f535039e123b46f2d8b3e9d403cbfe1967", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MmY0OGY1MzUwMzllMTIzYjQ2ZjJkOGIzZTlkNDAzY2JmZTE5Njc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-14T10:26:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-14T10:26:13Z"}, "message": "Merge #6217\n\n6217: Bump pulldown-cmark r=matklad a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "362577255b872671f1f7ad959d9d209413170a84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/362577255b872671f1f7ad959d9d209413170a84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b62f48f535039e123b46f2d8b3e9d403cbfe1967", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfhtJFCRBK7hj4Ov3rIwAAdHIIAHtXGiVXlPc1cM82SI+22WC7\nyuCJ5bvReGDRpK/1Sjoueln/O5kPNzkEsQoZZNFDHirP6zF1GMzm+gcvZAhgVwiJ\nVU6OyDgZXnLs4GMdLPrUALXz2exhld5tB0mrIsT5mXtMlwsz3PI6BN6dIgJImPQC\n/chnCgXR5O/lWgu5SDhwf9QOyw/4PhlnoRgSmgWshyaRGIeJ0feMcKH64sBxgIwL\nn6I2W6orJ1E3aFLypG6CvmyijlCbyEzcRmNeasFD1pX/7ZwoCyN19VLITEyJXnmK\nOCVNBn9f6S5x+aStW0PlVNigtGMldO+Vnyackn9f4r6/kt/cu9pJzFMckrPuNyw=\n=zNK/\n-----END PGP SIGNATURE-----\n", "payload": "tree 362577255b872671f1f7ad959d9d209413170a84\nparent 69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100\nparent e559066bed54fd679ce853b7280ec131ad03dbf7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602671173 +0000\ncommitter GitHub <noreply@github.com> 1602671173 +0000\n\nMerge #6217\n\n6217: Bump pulldown-cmark r=matklad a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b62f48f535039e123b46f2d8b3e9d403cbfe1967", "html_url": "https://github.com/rust-lang/rust/commit/b62f48f535039e123b46f2d8b3e9d403cbfe1967", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b62f48f535039e123b46f2d8b3e9d403cbfe1967/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "html_url": "https://github.com/rust-lang/rust/commit/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100"}, {"sha": "e559066bed54fd679ce853b7280ec131ad03dbf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e559066bed54fd679ce853b7280ec131ad03dbf7", "html_url": "https://github.com/rust-lang/rust/commit/e559066bed54fd679ce853b7280ec131ad03dbf7"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "bcd89f3a838543cc3c3af5cc2350f7d9bcedc906", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b62f48f535039e123b46f2d8b3e9d403cbfe1967/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b62f48f535039e123b46f2d8b3e9d403cbfe1967/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b62f48f535039e123b46f2d8b3e9d403cbfe1967", "patch": "@@ -1191,9 +1191,9 @@ dependencies = [\n \n [[package]]\n name = \"pulldown-cmark\"\n-version = \"0.7.2\"\n+version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ca36dea94d187597e104a5c8e4b07576a8a45aa5db48a65e12940d3eb7461f55\"\n+checksum = \"ffade02495f22453cd593159ea2f59827aae7f53fa8323f756799b670881dcf8\"\n dependencies = [\n  \"bitflags\",\n  \"memchr\",\n@@ -1202,9 +1202,9 @@ dependencies = [\n \n [[package]]\n name = \"pulldown-cmark-to-cmark\"\n-version = \"5.0.0\"\n+version = \"6.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"32accf4473121d8c0b508ca5673363703762d6cc59cf25af1df48f653346f736\"\n+checksum = \"e8f2b9878102358ec65434fdd1a9a161f8648bb2f531acc9260e4d094c96de23\"\n dependencies = [\n  \"pulldown-cmark\",\n ]"}, {"sha": "29dc9a6a8e34d78b5321a23c74fd3255d44cb1c3", "filename": "crates/ide/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b62f48f535039e123b46f2d8b3e9d403cbfe1967/crates%2Fide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b62f48f535039e123b46f2d8b3e9d403cbfe1967/crates%2Fide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2FCargo.toml?ref=b62f48f535039e123b46f2d8b3e9d403cbfe1967", "patch": "@@ -16,8 +16,8 @@ itertools = \"0.9.0\"\n log = \"0.4.8\"\n rustc-hash = \"1.1.0\"\n oorandom = \"11.1.2\"\n-pulldown-cmark-to-cmark = \"5.0.0\"\n-pulldown-cmark = {version = \"0.7.2\", default-features = false}\n+pulldown-cmark-to-cmark = \"6.0.0\"\n+pulldown-cmark = { version = \"0.8.0\", default-features = false }\n url = \"2.1.1\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }"}, {"sha": "db3f911c82f0a2d9e9f1998ca5e1f805cf00e945", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b62f48f535039e123b46f2d8b3e9d403cbfe1967/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b62f48f535039e123b46f2d8b3e9d403cbfe1967/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=b62f48f535039e123b46f2d8b3e9d403cbfe1967", "patch": "@@ -1,9 +1,10 @@\n //! Resolves and rewrites links in markdown documentation.\n \n+use std::convert::TryFrom;\n use std::iter::once;\n \n use itertools::Itertools;\n-use pulldown_cmark::{CowStr, Event, LinkType, Options, Parser, Tag};\n+use pulldown_cmark::{BrokenLink, CowStr, Event, InlineStr, LinkType, Options, Parser, Tag};\n use pulldown_cmark_to_cmark::{cmark_with_options, Options as CmarkOptions};\n use url::Url;\n \n@@ -24,11 +25,13 @@ pub type DocumentationLink = String;\n \n /// Rewrite documentation links in markdown to point to an online host (e.g. docs.rs)\n pub fn rewrite_links(db: &RootDatabase, markdown: &str, definition: &Definition) -> String {\n-    let doc = Parser::new_with_broken_link_callback(\n-        markdown,\n-        Options::empty(),\n-        Some(&|label, _| Some((/*url*/ label.to_string(), /*title*/ label.to_string()))),\n-    );\n+    let mut cb = |link: BrokenLink| {\n+        Some((\n+            /*url*/ link.reference.to_owned().into(),\n+            /*title*/ link.reference.to_owned().into(),\n+        ))\n+    };\n+    let doc = Parser::new_with_broken_link_callback(markdown, Options::empty(), Some(&mut cb));\n \n     let doc = map_links(doc, |target, title: &str| {\n         // This check is imperfect, there's some overlap between valid intra-doc links\n@@ -66,11 +69,11 @@ pub fn remove_links(markdown: &str) -> String {\n     let mut opts = Options::empty();\n     opts.insert(Options::ENABLE_FOOTNOTES);\n \n-    let doc = Parser::new_with_broken_link_callback(\n-        markdown,\n-        opts,\n-        Some(&|_, _| Some((String::new(), String::new()))),\n-    );\n+    let mut cb = |_: BrokenLink| {\n+        let empty = InlineStr::try_from(\"\").unwrap();\n+        Some((CowStr::Inlined(empty.clone()), CowStr::Inlined(empty)))\n+    };\n+    let doc = Parser::new_with_broken_link_callback(markdown, opts, Some(&mut cb));\n     let doc = doc.filter_map(move |evt| match evt {\n         Event::Start(Tag::Link(link_type, ref target, ref title)) => {\n             if link_type == LinkType::Inline && target.contains(\"://\") {"}]}