{"sha": "dd54459bfc7be527bc5dcca6c2724593e2ae7830", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNTQ0NTliZmM3YmU1MjdiYzVkY2NhNmMyNzI0NTkzZTJhZTc4MzA=", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-04-12T17:14:51Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-04-12T19:09:04Z"}, "message": "don't bump in check_mistyped_turbofish_with_multiple_type_params", "tree": {"sha": "d700fdcf8583c92d273c4e7ab3d94c551db34f2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d700fdcf8583c92d273c4e7ab3d94c551db34f2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd54459bfc7be527bc5dcca6c2724593e2ae7830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd54459bfc7be527bc5dcca6c2724593e2ae7830", "html_url": "https://github.com/rust-lang/rust/commit/dd54459bfc7be527bc5dcca6c2724593e2ae7830", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd54459bfc7be527bc5dcca6c2724593e2ae7830/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68f7a2f50958d632ef8dc79212481e4f183ed36", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68f7a2f50958d632ef8dc79212481e4f183ed36", "html_url": "https://github.com/rust-lang/rust/commit/d68f7a2f50958d632ef8dc79212481e4f183ed36"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "70a5ac6f15ec221c3ee9c0ab3a9aa1bdf8a0fa13", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/dd54459bfc7be527bc5dcca6c2724593e2ae7830/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd54459bfc7be527bc5dcca6c2724593e2ae7830/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=dd54459bfc7be527bc5dcca6c2724593e2ae7830", "patch": "@@ -666,21 +666,23 @@ impl<'a> Parser<'a> {\n                     );\n                     match x {\n                         Ok((_, _, false)) => {\n-                            self.bump(); // `>`\n-                            match self.parse_expr() {\n-                                Ok(_) => {\n-                                    e.span_suggestion_verbose(\n-                                        binop.span.shrink_to_lo(),\n-                                        TURBOFISH_SUGGESTION_STR,\n-                                        \"::\".to_string(),\n-                                        Applicability::MaybeIncorrect,\n-                                    );\n-                                    e.emit();\n-                                    *expr = self.mk_expr_err(expr.span.to(self.prev_token.span));\n-                                    return Ok(());\n-                                }\n-                                Err(mut err) => {\n-                                    err.cancel();\n+                            if self.eat(&token::Gt) {\n+                                match self.parse_expr() {\n+                                    Ok(_) => {\n+                                        e.span_suggestion_verbose(\n+                                            binop.span.shrink_to_lo(),\n+                                            TURBOFISH_SUGGESTION_STR,\n+                                            \"::\".to_string(),\n+                                            Applicability::MaybeIncorrect,\n+                                        );\n+                                        e.emit();\n+                                        *expr =\n+                                            self.mk_expr_err(expr.span.to(self.prev_token.span));\n+                                        return Ok(());\n+                                    }\n+                                    Err(mut err) => {\n+                                        err.cancel();\n+                                    }\n                                 }\n                             }\n                         }"}]}