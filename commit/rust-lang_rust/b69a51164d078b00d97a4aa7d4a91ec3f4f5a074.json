{"sha": "b69a51164d078b00d97a4aa7d4a91ec3f4f5a074", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2OWE1MTE2NGQwNzhiMDBkOTdhNGFhN2Q0YTkxZWMzZjRmNWEwNzQ=", "commit": {"author": {"name": "christopherdumas", "email": "christopherdumas@me.com", "date": "2015-09-15T17:31:48Z"}, "committer": {"name": "christopherdumas", "email": "christopherdumas@me.com", "date": "2015-09-15T17:34:57Z"}, "message": "Added anchors for the code snippets.", "tree": {"sha": "dca13c5e13a2073919dde0259c68cbd6bb0fa695", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dca13c5e13a2073919dde0259c68cbd6bb0fa695"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b69a51164d078b00d97a4aa7d4a91ec3f4f5a074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b69a51164d078b00d97a4aa7d4a91ec3f4f5a074", "html_url": "https://github.com/rust-lang/rust/commit/b69a51164d078b00d97a4aa7d4a91ec3f4f5a074", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b69a51164d078b00d97a4aa7d4a91ec3f4f5a074/comments", "author": null, "committer": null, "parents": [{"sha": "320880eed5e960f6107cfbe039a5eba33f209f32", "url": "https://api.github.com/repos/rust-lang/rust/commits/320880eed5e960f6107cfbe039a5eba33f209f32", "html_url": "https://github.com/rust-lang/rust/commit/320880eed5e960f6107cfbe039a5eba33f209f32"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "0687c2b13b5b583bf8d15165a7b329613abf1cbe", "filename": "src/doc/trpl/error-handling.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b69a51164d078b00d97a4aa7d4a91ec3f4f5a074/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/b69a51164d078b00d97a4aa7d4a91ec3f4f5a074/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ferror-handling.md?ref=b69a51164d078b00d97a4aa7d4a91ec3f4f5a074", "patch": "@@ -87,7 +87,9 @@ thread '<main>' panicked at 'Invalid number: 11', src/bin/panic-simple.rs:5\n Here's another example that is slightly less contrived. A program that accepts\n an integer as an argument, doubles it and prints it.\n \n+<a name=\"code-unwrap-double\"/>\n ```rust,should_panic\n+\n use std::env;\n \n fn main() {\n@@ -137,6 +139,7 @@ system is an important concept because it will cause the compiler to force the\n programmer to handle that absence. Let's take a look at an example that tries\n to find a character in a string:\n \n+<a name=\"code-option-ex-string-find\"/>\n ```rust\n // Searches `haystack` for the Unicode character `needle`. If one is found, the\n // byte offset of the character is returned. Otherwise, `None` is returned."}]}