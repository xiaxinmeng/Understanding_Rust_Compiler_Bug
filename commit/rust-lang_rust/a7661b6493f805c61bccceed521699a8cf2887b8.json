{"sha": "a7661b6493f805c61bccceed521699a8cf2887b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NjYxYjY0OTNmODA1YzYxYmNjY2VlZDUyMTY5OWE4Y2YyODg3Yjg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-21T17:06:55Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-21T17:06:55Z"}, "message": "Merge pull request #868 from cramertj/master\n\nAdd lint for `mem::forget(_)`", "tree": {"sha": "a83ea37d9155dfe31d5dedd4d78f1e4c93aa8b6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a83ea37d9155dfe31d5dedd4d78f1e4c93aa8b6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7661b6493f805c61bccceed521699a8cf2887b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7661b6493f805c61bccceed521699a8cf2887b8", "html_url": "https://github.com/rust-lang/rust/commit/a7661b6493f805c61bccceed521699a8cf2887b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7661b6493f805c61bccceed521699a8cf2887b8/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e16d9a425d91cbcf9eed88f196b8ec6f8f314e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e16d9a425d91cbcf9eed88f196b8ec6f8f314e2", "html_url": "https://github.com/rust-lang/rust/commit/0e16d9a425d91cbcf9eed88f196b8ec6f8f314e2"}, {"sha": "1e2cc78e08b2a119a3d69a82e24234fabdeee019", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e2cc78e08b2a119a3d69a82e24234fabdeee019", "html_url": "https://github.com/rust-lang/rust/commit/1e2cc78e08b2a119a3d69a82e24234fabdeee019"}], "stats": {"total": 82, "additions": 80, "deletions": 2}, "files": [{"sha": "0ad943c3f8a073e930c3a92a2ce21ab3fadca56b", "filename": "CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7661b6493f805c61bccceed521699a8cf2887b8/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a7661b6493f805c61bccceed521699a8cf2887b8/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a7661b6493f805c61bccceed521699a8cf2887b8", "patch": "@@ -2,7 +2,7 @@\n All notable changes to this project will be documented in this file.\n \n ## Unreleased\n-* New lint: [`temporary_cstring_as_ptr`] and [`unsafe_removed_from_name`]\n+* New lints: [`temporary_cstring_as_ptr`], [`unsafe_removed_from_name`], and [`mem_forget`]\n \n ## 0.0.63 \u2014 2016-04-08\n * Rustup to *rustc 1.9.0-nightly (7979dd608 2016-04-07)*\n@@ -135,6 +135,7 @@ All notable changes to this project will be documented in this file.\n [`match_overlapping_arm`]: https://github.com/Manishearth/rust-clippy/wiki#match_overlapping_arm\n [`match_ref_pats`]: https://github.com/Manishearth/rust-clippy/wiki#match_ref_pats\n [`match_same_arms`]: https://github.com/Manishearth/rust-clippy/wiki#match_same_arms\n+[`mem_forget`]: https://github.com/Manishearth/rust-clippy/wiki#mem_forget\n [`min_max`]: https://github.com/Manishearth/rust-clippy/wiki#min_max\n [`modulo_one`]: https://github.com/Manishearth/rust-clippy/wiki#modulo_one\n [`mut_mut`]: https://github.com/Manishearth/rust-clippy/wiki#mut_mut"}, {"sha": "d55536c033d8892bc6946f0db6f50e1687f7c6ff", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7661b6493f805c61bccceed521699a8cf2887b8/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/a7661b6493f805c61bccceed521699a8cf2887b8/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=a7661b6493f805c61bccceed521699a8cf2887b8", "patch": "@@ -14,7 +14,7 @@ Table of contents:\n * [License](#license)\n \n ##Lints\n-There are 143 lints included in this crate:\n+There are 144 lints included in this crate:\n \n name                                                                                                                 | default | meaning\n ---------------------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -85,6 +85,7 @@ name\n [match_overlapping_arm](https://github.com/Manishearth/rust-clippy/wiki#match_overlapping_arm)                       | warn    | a match has overlapping arms\n [match_ref_pats](https://github.com/Manishearth/rust-clippy/wiki#match_ref_pats)                                     | warn    | a match or `if let` has all arms prefixed with `&`; the match expression can be dereferenced instead\n [match_same_arms](https://github.com/Manishearth/rust-clippy/wiki#match_same_arms)                                   | warn    | `match` with identical arm bodies\n+[mem_forget](https://github.com/Manishearth/rust-clippy/wiki#mem_forget)                                             | allow   | `mem::forget` usage on `Drop` types is likely to cause memory leaks\n [min_max](https://github.com/Manishearth/rust-clippy/wiki#min_max)                                                   | warn    | `min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\n [modulo_one](https://github.com/Manishearth/rust-clippy/wiki#modulo_one)                                             | warn    | taking a number modulo 1, which always returns 0\n [mut_mut](https://github.com/Manishearth/rust-clippy/wiki#mut_mut)                                                   | allow   | usage of double-mut refs, e.g. `&mut &mut ...` (either copy'n'paste error, or shows a fundamental misunderstanding of references)"}, {"sha": "5f3b3999f9516efa63c7c238918c89642349fd62", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7661b6493f805c61bccceed521699a8cf2887b8/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7661b6493f805c61bccceed521699a8cf2887b8/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=a7661b6493f805c61bccceed521699a8cf2887b8", "patch": "@@ -79,6 +79,7 @@ pub mod lifetimes;\n pub mod loops;\n pub mod map_clone;\n pub mod matches;\n+pub mod mem_forget;\n pub mod methods;\n pub mod minmax;\n pub mod misc;\n@@ -236,13 +237,15 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_early_lint_pass(box doc::Doc::new(conf.doc_valid_idents));\n     reg.register_late_lint_pass(box neg_multiply::NegMultiply);\n     reg.register_late_lint_pass(box unsafe_removed_from_name::UnsafeNameRemoval);\n+    reg.register_late_lint_pass(box mem_forget::MemForget);\n \n     reg.register_lint_group(\"clippy_pedantic\", vec![\n         array_indexing::INDEXING_SLICING,\n         booleans::NONMINIMAL_BOOL,\n         enum_glob_use::ENUM_GLOB_USE,\n         if_not_else::IF_NOT_ELSE,\n         matches::SINGLE_MATCH_ELSE,\n+        mem_forget::MEM_FORGET,\n         methods::OPTION_UNWRAP_USED,\n         methods::RESULT_UNWRAP_USED,\n         methods::WRONG_PUB_SELF_CONVENTION,"}, {"sha": "1f627d614ff3ec92a363a546aad40a4bb819fff7", "filename": "src/mem_forget.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a7661b6493f805c61bccceed521699a8cf2887b8/src%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7661b6493f805c61bccceed521699a8cf2887b8/src%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmem_forget.rs?ref=a7661b6493f805c61bccceed521699a8cf2887b8", "patch": "@@ -0,0 +1,44 @@\n+use rustc::lint::*;\n+use rustc::hir::{Expr, ExprCall, ExprPath};\n+use utils::{match_def_path, paths, span_lint};\n+\n+/// **What it does:** This lint checks for usage of `std::mem::forget(t)` where `t` is `Drop`.\n+///\n+/// **Why is this bad?** `std::mem::forget(t)` prevents `t` from running its destructor, possibly causing leaks\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:** `mem::forget(Rc::new(55)))`\n+declare_lint! {\n+    pub MEM_FORGET,\n+    Allow,\n+    \"`mem::forget` usage on `Drop` types is likely to cause memory leaks\"\n+}\n+\n+pub struct MemForget;\n+\n+impl LintPass for MemForget {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array![MEM_FORGET]\n+    }\n+}\n+\n+impl LateLintPass for MemForget {\n+    fn check_expr(&mut self, cx: &LateContext, e: &Expr) {\n+        if let ExprCall(ref path_expr, ref args) = e.node {\n+            if let ExprPath(None, _) = path_expr.node {\n+                let def_id = cx.tcx.def_map.borrow()[&path_expr.id].def_id();\n+                if match_def_path(cx, def_id, &paths::MEM_FORGET) {\n+                    let forgot_ty = cx.tcx.expr_ty(&args[0]);\n+\n+                    if match forgot_ty.ty_adt_def() {\n+                        Some(def) => def.has_dtor(),\n+                        _ => false\n+                    } {\n+                        span_lint(cx, MEM_FORGET, e.span, \"usage of mem::forget on Drop type\");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "38985373085b606cf896f1915425605d9c504e35", "filename": "src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a7661b6493f805c61bccceed521699a8cf2887b8/src%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7661b6493f805c61bccceed521699a8cf2887b8/src%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fpaths.rs?ref=a7661b6493f805c61bccceed521699a8cf2887b8", "patch": "@@ -20,6 +20,7 @@ pub const HASHMAP: [&'static str; 5] = [\"std\", \"collections\", \"hash\", \"map\", \"Ha\n pub const HASH: [&'static str; 2] = [\"hash\", \"Hash\"];\n pub const IO_PRINT: [&'static str; 3] = [\"std\", \"io\", \"_print\"];\n pub const LINKED_LIST: [&'static str; 3] = [\"collections\", \"linked_list\", \"LinkedList\"];\n+pub const MEM_FORGET: [&'static str; 3] = [\"core\", \"mem\", \"forget\"];\n pub const MUTEX: [&'static str; 4] = [\"std\", \"sync\", \"mutex\", \"Mutex\"];\n pub const OPEN_OPTIONS: [&'static str; 3] = [\"std\", \"fs\", \"OpenOptions\"];\n pub const OPTION: [&'static str; 3] = [\"core\", \"option\", \"Option\"];"}, {"sha": "c8cebcb2a42dca72b1ebffc7b359672434fd958e", "filename": "tests/compile-fail/mem_forget.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a7661b6493f805c61bccceed521699a8cf2887b8/tests%2Fcompile-fail%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7661b6493f805c61bccceed521699a8cf2887b8/tests%2Fcompile-fail%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmem_forget.rs?ref=a7661b6493f805c61bccceed521699a8cf2887b8", "patch": "@@ -0,0 +1,28 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+use std::sync::Arc;\n+use std::rc::Rc;\n+\n+use std::mem::forget as forgetSomething;\n+use std::mem as memstuff;\n+\n+#[deny(mem_forget)]\n+fn main() {\n+    let five: i32 = 5;\n+    forgetSomething(five);\n+\n+    let six: Arc<i32> = Arc::new(6);\n+    memstuff::forget(six);\n+    //~^ ERROR usage of mem::forget on Drop type\n+\n+    let seven: Rc<i32> = Rc::new(7);\n+    std::mem::forget(seven);\n+    //~^ ERROR usage of mem::forget on Drop type\n+\n+    let eight: Vec<i32> = vec![8];\n+    forgetSomething(eight);\n+    //~^ ERROR usage of mem::forget on Drop type\n+\n+    std::mem::forget(7);\n+}"}]}