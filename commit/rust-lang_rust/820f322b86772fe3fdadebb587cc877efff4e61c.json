{"sha": "820f322b86772fe3fdadebb587cc877efff4e61c", "node_id": "C_kwDOAAsO6NoAKDgyMGYzMjJiODY3NzJmZTNmZGFkZWJiNTg3Y2M4NzdlZmZmNGU2MWM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-14T12:07:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-14T12:07:59Z"}, "message": "add work-around for #2164", "tree": {"sha": "1b6341705d0819a4c0aaa68418ef8106543a07ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b6341705d0819a4c0aaa68418ef8106543a07ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/820f322b86772fe3fdadebb587cc877efff4e61c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/820f322b86772fe3fdadebb587cc877efff4e61c", "html_url": "https://github.com/rust-lang/rust/commit/820f322b86772fe3fdadebb587cc877efff4e61c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/820f322b86772fe3fdadebb587cc877efff4e61c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a272ca2cf7f4cfa227d9d9ffddf910aa2e0fb169", "url": "https://api.github.com/repos/rust-lang/rust/commits/a272ca2cf7f4cfa227d9d9ffddf910aa2e0fb169", "html_url": "https://github.com/rust-lang/rust/commit/a272ca2cf7f4cfa227d9d9ffddf910aa2e0fb169"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "8b7ce50d2d42e5350c2bfb7337a63d47119805d1", "filename": "tests/pass/0weak_memory_consistency.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/820f322b86772fe3fdadebb587cc877efff4e61c/tests%2Fpass%2F0weak_memory_consistency.rs", "raw_url": "https://github.com/rust-lang/rust/raw/820f322b86772fe3fdadebb587cc877efff4e61c/tests%2Fpass%2F0weak_memory_consistency.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2F0weak_memory_consistency.rs?ref=820f322b86772fe3fdadebb587cc877efff4e61c", "patch": "@@ -34,10 +34,12 @@ unsafe impl<T> Sync for EvilSend<T> {}\n // multiple times\n fn static_atomic(val: i32) -> &'static AtomicI32 {\n     let ret = Box::leak(Box::new(AtomicI32::new(val)));\n+    ret.store(val, Relaxed); // work around https://github.com/rust-lang/miri/issues/2164\n     ret\n }\n fn static_atomic_bool(val: bool) -> &'static AtomicBool {\n     let ret = Box::leak(Box::new(AtomicBool::new(val)));\n+    ret.store(val, Relaxed); // work around https://github.com/rust-lang/miri/issues/2164\n     ret\n }\n "}]}