{"sha": "a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNDVkOWJiY2FiZDRlNDU5M2M4ZTVkN2ZlZGMzNjI0OWQ5ZTk4YmI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-08-30T18:15:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-30T18:15:30Z"}, "message": "Rollup merge of #53476 - GuillaumeGomez:try-from-int-error-partial-eq, r=KodrAus\n\nAdd partialeq implementation for TryFromIntError type\n\nFixes #53458.", "tree": {"sha": "4e4dd03e07e46bae58f92cc38944ea776d8bde16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e4dd03e07e46bae58f92cc38944ea776d8bde16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbiDRCCRBK7hj4Ov3rIwAAdHIIAB5HPD1KPf/IjoQQg+uDFmgF\n3PemvEKj6ifSVHPKK3AFA+P5do924xwsJH7psZFujk3ebeIKdJ/6hgO7b7ePpUw6\neOJ+Kp1NeOHkUaGFAxvo8Uq7grN8E44MnHTgg7Ze5/dXAUFmkCFLLTNqPQq1WN0e\nV+kdk7SFtUdct2OfvhmEQf5L9/5Ov/9I7qNffBL/W0HYV0qGoU5vhUPwCrymIPFg\nr+Z2JIcE3u1iFf4H+jsH2cSQRBBTtT0B96SQtV7Uq0LK87fggDAbwSBHrTsqxQuj\ncVxW32tjgsodTXqU5PQEpTcgrz4CLUPcE93TpSxOl0kRH/Zq5n/pjQhM7Nfqypg=\n=3yLq\n-----END PGP SIGNATURE-----\n", "payload": "tree 4e4dd03e07e46bae58f92cc38944ea776d8bde16\nparent ba832707cfb8dc4e3f22f18f86a00061772d5f07\nparent da4febd51e96f312f80f1c8cc7c7d65b00c50df6\nauthor Pietro Albini <pietro@pietroalbini.org> 1535652930 +0200\ncommitter GitHub <noreply@github.com> 1535652930 +0200\n\nRollup merge of #53476 - GuillaumeGomez:try-from-int-error-partial-eq, r=KodrAus\n\nAdd partialeq implementation for TryFromIntError type\n\nFixes #53458.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb", "html_url": "https://github.com/rust-lang/rust/commit/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba832707cfb8dc4e3f22f18f86a00061772d5f07", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba832707cfb8dc4e3f22f18f86a00061772d5f07", "html_url": "https://github.com/rust-lang/rust/commit/ba832707cfb8dc4e3f22f18f86a00061772d5f07"}, {"sha": "da4febd51e96f312f80f1c8cc7c7d65b00c50df6", "url": "https://api.github.com/repos/rust-lang/rust/commits/da4febd51e96f312f80f1c8cc7c7d65b00c50df6", "html_url": "https://github.com/rust-lang/rust/commit/da4febd51e96f312f80f1c8cc7c7d65b00c50df6"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "fc405881b28da96fa2f43dfdbe0ada795a07c9fb", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb", "patch": "@@ -4323,7 +4323,7 @@ from_str_radix_int_impl! { isize i8 i16 i32 i64 i128 usize u8 u16 u32 u64 u128 }\n \n /// The error type returned when a checked integral type conversion fails.\n #[unstable(feature = \"try_from\", issue = \"33417\")]\n-#[derive(Debug, Copy, Clone)]\n+#[derive(Debug, Copy, Clone, PartialEq, Eq)]\n pub struct TryFromIntError(());\n \n impl TryFromIntError {"}, {"sha": "1122f5a75592caae0602f3e003ee6c35f14c7ec1", "filename": "src/test/run-pass/try-from-int-error-partial-eq.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb/src%2Ftest%2Frun-pass%2Ftry-from-int-error-partial-eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb/src%2Ftest%2Frun-pass%2Ftry-from-int-error-partial-eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-from-int-error-partial-eq.rs?ref=a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(try_from)]\n+#![allow(unused_must_use)]\n+\n+use std::convert::TryFrom;\n+use std::num::TryFromIntError;\n+\n+fn main() {\n+    let x: u32 = 125;\n+    let y: Result<u8, TryFromIntError> = u8::try_from(x);\n+    y == Ok(125);\n+}"}]}