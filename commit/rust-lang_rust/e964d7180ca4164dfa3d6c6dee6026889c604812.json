{"sha": "e964d7180ca4164dfa3d6c6dee6026889c604812", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NjRkNzE4MGNhNDE2NGRmYTNkNmM2ZGVlNjAyNjg4OWM2MDQ4MTI=", "commit": {"author": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-03-21T15:40:28Z"}, "committer": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-03-21T15:40:28Z"}, "message": "slightly change the `Iterator::map_while` docs", "tree": {"sha": "e5b091ee9e6dcbec9d187ba205134f43494b0c95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b091ee9e6dcbec9d187ba205134f43494b0c95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e964d7180ca4164dfa3d6c6dee6026889c604812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e964d7180ca4164dfa3d6c6dee6026889c604812", "html_url": "https://github.com/rust-lang/rust/commit/e964d7180ca4164dfa3d6c6dee6026889c604812", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e964d7180ca4164dfa3d6c6dee6026889c604812/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "605bc1b19b45534b0860fad4b1d44678bc8b34e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/605bc1b19b45534b0860fad4b1d44678bc8b34e9", "html_url": "https://github.com/rust-lang/rust/commit/605bc1b19b45534b0860fad4b1d44678bc8b34e9"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "b8becb68008fa189cd3aea802119b53c9b598b86", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e964d7180ca4164dfa3d6c6dee6026889c604812/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e964d7180ca4164dfa3d6c6dee6026889c604812/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=e964d7180ca4164dfa3d6c6dee6026889c604812", "patch": "@@ -1080,8 +1080,8 @@ pub trait Iterator {\n     /// let iter = a.iter().map_while(|x| u32::try_from(*x).ok());\n     /// let vec = iter.collect::<Vec<_>>();\n     ///\n-    /// // We have more elements which could fit in u32 (4, 5), but `map_while`\n-    /// // has stopped on the first `None` from predicate (when working with `-3`)\n+    /// // We have more elements which could fit in u32 (4, 5), but `map_while` returned `None` for `-3`\n+    /// // (as the `predicate` returned `None`) and `collect` stops at the first `None` entcountered.\n     /// assert_eq!(vec, vec![0, 1, 2]);\n     /// ```\n     ///\n@@ -1110,18 +1110,8 @@ pub trait Iterator {\n     /// The `-3` is no longer there, because it was consumed in order to see if\n     /// the iteration should stop, but wasn't placed back into the iterator.\n     ///\n-    /// Note that unlike [`take_while`] this iterator is **not** fused:\n-    ///\n-    /// ```\n-    /// #![feature(iter_map_while)]\n-    /// use std::convert::identity;\n-    ///\n-    /// let mut iter = vec![Some(0), None, Some(1)].into_iter().map_while(identity);\n-    /// assert_eq!(iter.next(), Some(0));\n-    /// assert_eq!(iter.next(), None);\n-    /// assert_eq!(iter.next(), Some(1));\n-    /// ```\n-    ///\n+    /// Note that unlike [`take_while`] this iterator is **not** fused.\n+    /// It is also not specified what this iterator returns after the first` None` is returned.\n     /// If you need fused iterator, use [`fuse`].\n     ///\n     /// [`Some`]: ../../std/option/enum.Option.html#variant.Some"}]}