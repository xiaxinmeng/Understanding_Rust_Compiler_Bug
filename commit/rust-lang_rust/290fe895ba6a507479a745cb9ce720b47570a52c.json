{"sha": "290fe895ba6a507479a745cb9ce720b47570a52c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MGZlODk1YmE2YTUwNzQ3OWE3NDVjYjljZTcyMGI0NzU3MGE1MmM=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-21T12:43:53Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:15Z"}, "message": "specialize creating a Vec from a slice iterator where T: Copy\n\nthis was already implemented for Extend but not for FromIterator", "tree": {"sha": "63ba801c44e11303f18a711847dc70382fc6f5d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63ba801c44e11303f18a711847dc70382fc6f5d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/290fe895ba6a507479a745cb9ce720b47570a52c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/290fe895ba6a507479a745cb9ce720b47570a52c", "html_url": "https://github.com/rust-lang/rust/commit/290fe895ba6a507479a745cb9ce720b47570a52c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/290fe895ba6a507479a745cb9ce720b47570a52c/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dac0edfaaaa5a8c668f70a1cd58468c700a04627", "url": "https://api.github.com/repos/rust-lang/rust/commits/dac0edfaaaa5a8c668f70a1cd58468c700a04627", "html_url": "https://github.com/rust-lang/rust/commit/dac0edfaaaa5a8c668f70a1cd58468c700a04627"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "9e5b6096152090950037c8a762c50324ac8868c7", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/290fe895ba6a507479a745cb9ce720b47570a52c/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/290fe895ba6a507479a745cb9ce720b47570a52c/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=290fe895ba6a507479a745cb9ce720b47570a52c", "patch": "@@ -2299,6 +2299,20 @@ where\n     }\n }\n \n+impl<'a, T: 'a> SpecFrom<&'a T, slice::Iter<'a, T>> for Vec<T>\n+where\n+    T: Copy,\n+{\n+    // reuses the extend specialization for T: Copy\n+    fn from_iter(iterator: slice::Iter<'a, T>) -> Self {\n+        let mut vec = Vec::new();\n+        // must delegate to spec_extend() since extend() itself delegates\n+        // to spec_from for empty Vecs\n+        vec.spec_extend(iterator);\n+        vec\n+    }\n+}\n+\n // Specialization trait used for Vec::extend\n trait SpecExtend<T, I> {\n     fn spec_extend(&mut self, iter: I);"}]}