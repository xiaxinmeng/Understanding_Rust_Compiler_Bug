{"sha": "87a782c0b3034d0833f677ffc1161ddfb4c6765d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YTc4MmMwYjMwMzRkMDgzM2Y2NzdmZmMxMTYxZGRmYjRjNjc2NWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-17T19:47:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-17T22:12:35Z"}, "message": "Simplify default_test_to_task\n\nDoesn't appear to require an unsafe pointer now", "tree": {"sha": "2bb9ca2fd32741cab5ad3285ac7e3faf087a6d6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bb9ca2fd32741cab5ad3285ac7e3faf087a6d6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87a782c0b3034d0833f677ffc1161ddfb4c6765d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87a782c0b3034d0833f677ffc1161ddfb4c6765d", "html_url": "https://github.com/rust-lang/rust/commit/87a782c0b3034d0833f677ffc1161ddfb4c6765d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87a782c0b3034d0833f677ffc1161ddfb4c6765d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "deef212bf77e84ef35ef33b5725059bb4bf5d154", "url": "https://api.github.com/repos/rust-lang/rust/commits/deef212bf77e84ef35ef33b5725059bb4bf5d154", "html_url": "https://github.com/rust-lang/rust/commit/deef212bf77e84ef35ef33b5725059bb4bf5d154"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "5d272bded7ee8c64dd80ba20659f035b6b17466e", "filename": "src/lib/test.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/87a782c0b3034d0833f677ffc1161ddfb4c6765d/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87a782c0b3034d0833f677ffc1161ddfb4c6765d/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=87a782c0b3034d0833f677ffc1161ddfb4c6765d", "patch": "@@ -332,17 +332,13 @@ fn run_test(test: &test_desc, to_task: &test_to_task) -> test_future {\n }\n \n // We need to run our tests in another task in order to trap test failures.\n-// But, at least currently, functions can't be used as spawn arguments so\n-// we've got to treat our test functions as unsafe pointers.  This function\n-// only works with functions that don't contain closures.\n+// This function only works with functions that don't contain closures.\n fn default_test_to_task(f: &fn()) -> task_id {\n-    fn run_task(fptr: *mutable fn() ) {\n+    fn run_task(f: fn()) {\n         configure_test_task();\n-        // Run the test\n-        (*fptr)()\n+        f();\n     }\n-    let fptr = ptr::addr_of(f);\n-    ret task::spawn(bind run_task(fptr));\n+    ret task::spawn(bind run_task(f));\n }\n \n // Call from within a test task to make sure it's set up correctly"}]}