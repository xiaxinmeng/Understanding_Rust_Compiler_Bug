{"sha": "8bc0e48540b38edfae892828db6cacd3bc4e5b95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYzBlNDg1NDBiMzhlZGZhZTg5MjgyOGRiNmNhY2QzYmM0ZTViOTU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-28T01:48:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-28T01:48:19Z"}, "message": "Rollup merge of #68571 - Centril:check_in_cx, r=oli-obk\n\ncheck_match: extract common logic\n\nThis is part of work on `hir::ExprKind::Let` which I thought made sense on its own (though makes even more sense with `::Let`).\n\nr? @oli-obk", "tree": {"sha": "e2c5ddbba647272e74d1a60def45f234c4b7940e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2c5ddbba647272e74d1a60def45f234c4b7940e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bc0e48540b38edfae892828db6cacd3bc4e5b95", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeL5LjCRBK7hj4Ov3rIwAAdHIIAI+tPG57JNGF+cQtO3BPeydv\n3JjHph/sEfqYwIUSG3hAR/DJ8WPxRw6GGlMJm95NG3L4mjcVqALT2wY2QRVzyYmy\naF2g14VTQKXSHCYbsLm5uSZJgw1494+SZ33x/tWCLj+QZgt4T7mIhmLsLY02bH3Z\nCh4SD2wprQSwtREuo9WGisHK3HeFegeRmj6ttWvicGB9wnxWa3/jFhUdqoipBS9p\n6S+PMAPxYrv3RCpuv8v0ZTxoyeTJDvFk9ThEclsZIpj3gYmgoBs+9s9WNDwhzyRm\nkNbry7kzk8XICSYv+0QpBxZOLp7xTC6N5MJWBCjY3QYKoQd/NEqxMzFWZjGwxV8=\n=OGs8\n-----END PGP SIGNATURE-----\n", "payload": "tree e2c5ddbba647272e74d1a60def45f234c4b7940e\nparent 1e47ca518f3efcbdd7b45baba6eead385c909878\nparent de7f16d4313791a51b28822cbf08e8fbcaf78bde\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1580176099 +0900\ncommitter GitHub <noreply@github.com> 1580176099 +0900\n\nRollup merge of #68571 - Centril:check_in_cx, r=oli-obk\n\ncheck_match: extract common logic\n\nThis is part of work on `hir::ExprKind::Let` which I thought made sense on its own (though makes even more sense with `::Let`).\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bc0e48540b38edfae892828db6cacd3bc4e5b95", "html_url": "https://github.com/rust-lang/rust/commit/8bc0e48540b38edfae892828db6cacd3bc4e5b95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bc0e48540b38edfae892828db6cacd3bc4e5b95/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e47ca518f3efcbdd7b45baba6eead385c909878", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e47ca518f3efcbdd7b45baba6eead385c909878", "html_url": "https://github.com/rust-lang/rust/commit/1e47ca518f3efcbdd7b45baba6eead385c909878"}, {"sha": "de7f16d4313791a51b28822cbf08e8fbcaf78bde", "url": "https://api.github.com/repos/rust-lang/rust/commits/de7f16d4313791a51b28822cbf08e8fbcaf78bde", "html_url": "https://github.com/rust-lang/rust/commit/de7f16d4313791a51b28822cbf08e8fbcaf78bde"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "08ed6b521b502d04a2356bdfa3202502a366d1c4", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc0e48540b38edfae892828db6cacd3bc4e5b95/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc0e48540b38edfae892828db6cacd3bc4e5b95/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=8bc0e48540b38edfae892828db6cacd3bc4e5b95", "patch": "@@ -586,7 +586,7 @@ impl<'a, 'tcx> MatchCheckCtxt<'a, 'tcx> {\n         tcx: TyCtxt<'tcx>,\n         param_env: ty::ParamEnv<'tcx>,\n         module: DefId,\n-        f: impl for<'b> FnOnce(MatchCheckCtxt<'b, 'tcx>) -> R,\n+        f: impl FnOnce(MatchCheckCtxt<'_, 'tcx>) -> R,\n     ) -> R {\n         let pattern_arena = TypedArena::default();\n "}, {"sha": "82822f0c471a4d2be1a83acaeec5f464e3dc40de", "filename": "src/librustc_mir_build/hair/pattern/check_match.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8bc0e48540b38edfae892828db6cacd3bc4e5b95/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc0e48540b38edfae892828db6cacd3bc4e5b95/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs?ref=8bc0e48540b38edfae892828db6cacd3bc4e5b95", "patch": "@@ -140,6 +140,11 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n         (pattern, pattern_ty)\n     }\n \n+    fn check_in_cx(&self, hir_id: HirId, f: impl FnOnce(MatchCheckCtxt<'_, 'tcx>)) {\n+        let module = self.tcx.hir().get_module_parent(hir_id);\n+        MatchCheckCtxt::create_and_enter(self.tcx, self.param_env, module, |cx| f(cx));\n+    }\n+\n     fn check_match(\n         &mut self,\n         scrut: &hir::Expr<'_>,\n@@ -151,8 +156,7 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n             self.check_patterns(arm.guard.is_some(), &arm.pat);\n         }\n \n-        let module = self.tcx.hir().get_module_parent(scrut.hir_id);\n-        MatchCheckCtxt::create_and_enter(self.tcx, self.param_env, module, |ref mut cx| {\n+        self.check_in_cx(scrut.hir_id, |ref mut cx| {\n             let mut have_errors = false;\n \n             let inlined_arms: Vec<_> = arms\n@@ -180,8 +184,7 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n     }\n \n     fn check_irrefutable(&self, pat: &'tcx Pat<'tcx>, origin: &str, sp: Option<Span>) {\n-        let module = self.tcx.hir().get_module_parent(pat.hir_id);\n-        MatchCheckCtxt::create_and_enter(self.tcx, self.param_env, module, |ref mut cx| {\n+        self.check_in_cx(pat.hir_id, |ref mut cx| {\n             let (pattern, pattern_ty) = self.lower_pattern(cx, pat, &mut false);\n             let pats: Matrix<'_, '_> = vec![PatStack::from_pattern(pattern)].into_iter().collect();\n "}]}