{"sha": "c0e8dc6dce5d847b7bf53b306d6d842e3a223c28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZThkYzZkY2U1ZDg0N2I3YmY1M2IzMDZkNmQ4NDJlM2EyMjNjMjg=", "commit": {"author": {"name": "elszben", "email": "notgonna@tellyou", "date": "2014-12-16T18:15:05Z"}, "committer": {"name": "elszben", "email": "notgonna@tellyou", "date": "2014-12-16T18:23:06Z"}, "message": "Added example to TempDir", "tree": {"sha": "356b1842f4e2af1698f69df3ba1e3f28121b7067", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/356b1842f4e2af1698f69df3ba1e3f28121b7067"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0e8dc6dce5d847b7bf53b306d6d842e3a223c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e8dc6dce5d847b7bf53b306d6d842e3a223c28", "html_url": "https://github.com/rust-lang/rust/commit/c0e8dc6dce5d847b7bf53b306d6d842e3a223c28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0e8dc6dce5d847b7bf53b306d6d842e3a223c28/comments", "author": null, "committer": null, "parents": [{"sha": "ef0bc464af110d24d4663fbe51eca3646a897308", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef0bc464af110d24d4663fbe51eca3646a897308", "html_url": "https://github.com/rust-lang/rust/commit/ef0bc464af110d24d4663fbe51eca3646a897308"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "334ee9e1e1b6ddd6ac6eaeee6b0898050722b9ec", "filename": "src/libstd/io/tempfile.rs", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/c0e8dc6dce5d847b7bf53b306d6d842e3a223c28/src%2Flibstd%2Fio%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e8dc6dce5d847b7bf53b306d6d842e3a223c28/src%2Flibstd%2Fio%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ftempfile.rs?ref=c0e8dc6dce5d847b7bf53b306d6d842e3a223c28", "patch": "@@ -23,6 +23,59 @@ use sync::atomic;\n \n /// A wrapper for a path to temporary directory implementing automatic\n /// scope-based deletion.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// # fn main() {}\n+/// # fn foo () {\n+/// use std::io::TempDir;\n+///\n+/// {\n+///     // create a temporary directory\n+///     let tmpdir = match TempDir::new(\"mysuffix\") {\n+///         Ok(dir) => dir,\n+///         Err(e) => panic!(\"couldn't create temporary directory: {}\", e)\n+///     };\n+///\n+///     // get the path of the temporary directory without affecting the wrapper\n+///     let tmppath = tmpdir.path();\n+///\n+///     println!(\"The path of temporary directory is {}\", tmppath.as_str().unwrap());\n+///\n+///     // the temporary directory is automatically removed when tmpdir goes\n+///     // out of scope at the end of the block\n+/// }\n+/// {\n+///     // create a temporary directory, this time using a custom path\n+///     let tmpdir = match TempDir::new_in(&Path::new(\"/tmp/best/custom/path\"), \"mysuffix\") {\n+///         Ok(dir) => dir,\n+///         Err(e) => panic!(\"couldn't create temporary directory: {}\", e)\n+///     };\n+///\n+///     // get the path of the temporary directory and disable automatic deletion in the wrapper\n+///     let tmppath = tmpdir.into_inner();\n+///\n+///     println!(\"The path of the not-so-temporary directory is {}\", tmppath.as_str().unwrap());\n+///\n+///     // the temporary directory is not removed here\n+///     // because the directory is detached from the wrapper\n+/// }\n+/// {\n+///     // create a temporary directory\n+///     let tmpdir = match TempDir::new(\"mysuffix\") {\n+///         Ok(dir) => dir,\n+///         Err(e) => panic!(\"couldn't create temporary directory: {}\", e)\n+///     };\n+///\n+///     // close the temporary directory manually and check the result\n+///     match tmpdir.close() {\n+///         Ok(_) => println!(\"success!\"),\n+///         Err(e) => panic!(\"couldn't remove temporary directory: {}\", e)\n+///     };\n+/// }\n+/// # }\n+/// ```\n pub struct TempDir {\n     path: Option<Path>,\n     disarmed: bool"}]}