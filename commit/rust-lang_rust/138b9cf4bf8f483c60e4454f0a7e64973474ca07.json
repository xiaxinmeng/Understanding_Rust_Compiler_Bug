{"sha": "138b9cf4bf8f483c60e4454f0a7e64973474ca07", "node_id": "C_kwDOAAsO6NoAKDEzOGI5Y2Y0YmY4ZjQ4M2M2MGU0NDU0ZjBhN2U2NDk3MzQ3NGNhMDc", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-01-13T22:59:55Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-01-13T22:59:55Z"}, "message": "Use intrinsic for min/max", "tree": {"sha": "c044dcf40c18fa00875e984068878d94e19c4fc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c044dcf40c18fa00875e984068878d94e19c4fc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/138b9cf4bf8f483c60e4454f0a7e64973474ca07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/138b9cf4bf8f483c60e4454f0a7e64973474ca07", "html_url": "https://github.com/rust-lang/rust/commit/138b9cf4bf8f483c60e4454f0a7e64973474ca07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/138b9cf4bf8f483c60e4454f0a7e64973474ca07/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65cb2c90a0688c110d983a2dbb9932900cd6b5d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/65cb2c90a0688c110d983a2dbb9932900cd6b5d9", "html_url": "https://github.com/rust-lang/rust/commit/65cb2c90a0688c110d983a2dbb9932900cd6b5d9"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "70f1d47c08b372cc7a0dc63f82a58a0b42861706", "filename": "crates/core_simd/src/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138b9cf4bf8f483c60e4454f0a7e64973474ca07/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138b9cf4bf8f483c60e4454f0a7e64973474ca07/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs?ref=138b9cf4bf8f483c60e4454f0a7e64973474ca07", "patch": "@@ -46,6 +46,10 @@ extern \"platform-intrinsic\" {\n     /// fabs\n     pub(crate) fn simd_fabs<T>(x: T) -> T;\n \n+    // minnum/maxnum\n+    pub(crate) fn simd_fmin<T>(x: T, y: T) -> T;\n+    pub(crate) fn simd_fmax<T>(x: T, y: T) -> T;\n+\n     pub(crate) fn simd_eq<T, U>(x: T, y: T) -> U;\n     pub(crate) fn simd_ne<T, U>(x: T, y: T) -> U;\n     pub(crate) fn simd_lt<T, U>(x: T, y: T) -> U;"}, {"sha": "0e179d6fa76bb0972a3a458b310fea73389fab31", "filename": "crates/core_simd/src/vector/float.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/138b9cf4bf8f483c60e4454f0a7e64973474ca07/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138b9cf4bf8f483c60e4454f0a7e64973474ca07/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs?ref=138b9cf4bf8f483c60e4454f0a7e64973474ca07", "patch": "@@ -141,11 +141,7 @@ macro_rules! impl_float_vector {\n             #[inline]\n             #[must_use = \"method returns a new vector and does not mutate the original value\"]\n             pub fn min(self, other: Self) -> Self {\n-                // TODO consider using an intrinsic\n-                self.is_nan().select(\n-                    other,\n-                    self.lanes_ge(other).select(other, self)\n-                )\n+                unsafe { intrinsics::simd_fmin(self, other) }\n             }\n \n             /// Returns the maximum of each lane.\n@@ -154,11 +150,7 @@ macro_rules! impl_float_vector {\n             #[inline]\n             #[must_use = \"method returns a new vector and does not mutate the original value\"]\n             pub fn max(self, other: Self) -> Self {\n-                // TODO consider using an intrinsic\n-                self.is_nan().select(\n-                    other,\n-                    self.lanes_le(other).select(other, self)\n-                )\n+                unsafe { intrinsics::simd_fmax(self, other) }\n             }\n \n             /// Restrict each lane to a certain interval unless it is NaN."}]}