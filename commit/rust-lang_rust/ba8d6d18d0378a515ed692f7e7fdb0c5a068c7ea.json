{"sha": "ba8d6d18d0378a515ed692f7e7fdb0c5a068c7ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhOGQ2ZDE4ZDAzNzhhNTE1ZWQ2OTJmN2U3ZmRiMGM1YTA2OGM3ZWE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2018-02-08T23:48:07Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2018-02-18T05:48:35Z"}, "message": "Fix span bug.", "tree": {"sha": "5d1a1031fcace76a031d8dade36b4b1101c2584b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d1a1031fcace76a031d8dade36b4b1101c2584b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba8d6d18d0378a515ed692f7e7fdb0c5a068c7ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba8d6d18d0378a515ed692f7e7fdb0c5a068c7ea", "html_url": "https://github.com/rust-lang/rust/commit/ba8d6d18d0378a515ed692f7e7fdb0c5a068c7ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba8d6d18d0378a515ed692f7e7fdb0c5a068c7ea/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5313e8728f028cb7914f3c9f02804158a5732b52", "url": "https://api.github.com/repos/rust-lang/rust/commits/5313e8728f028cb7914f3c9f02804158a5732b52", "html_url": "https://github.com/rust-lang/rust/commit/5313e8728f028cb7914f3c9f02804158a5732b52"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b21813accf911d2e459f591715dc0e31457f81e0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba8d6d18d0378a515ed692f7e7fdb0c5a068c7ea/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba8d6d18d0378a515ed692f7e7fdb0c5a068c7ea/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ba8d6d18d0378a515ed692f7e7fdb0c5a068c7ea", "patch": "@@ -2121,8 +2121,8 @@ impl<'a> Parser<'a> {\n         // Check if a colon exists one ahead. This means we're parsing a fieldname.\n         let (fieldname, expr, is_shorthand) = if self.look_ahead(1, |t| t == &token::Colon) {\n             let fieldname = self.parse_field_name()?;\n-            self.bump();\n             hi = self.prev_span;\n+            self.bump();\n             (fieldname, self.parse_expr()?, false)\n         } else {\n             let fieldname = self.parse_ident_common(false)?;"}]}