{"sha": "2b2eeda0831401935a45c70667cf4c3eaedafe7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMmVlZGEwODMxNDAxOTM1YTQ1YzcwNjY3Y2Y0YzNlYWVkYWZlN2Q=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-04-07T23:08:07Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-04-08T00:22:55Z"}, "message": "Move tests from ui to cfail", "tree": {"sha": "106da472ebf34bff79bd10643ac757eb441fe28c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/106da472ebf34bff79bd10643ac757eb441fe28c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b2eeda0831401935a45c70667cf4c3eaedafe7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b2eeda0831401935a45c70667cf4c3eaedafe7d", "html_url": "https://github.com/rust-lang/rust/commit/2b2eeda0831401935a45c70667cf4c3eaedafe7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b2eeda0831401935a45c70667cf4c3eaedafe7d/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "url": "https://api.github.com/repos/rust-lang/rust/commits/73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "html_url": "https://github.com/rust-lang/rust/commit/73f6f5e0968ebe032a0730e2e3dfccea5a61c384"}], "stats": {"total": 185, "additions": 67, "deletions": 118}, "files": [{"sha": "f990c2c42fe1431a266970a5837e9b7f2646dc40", "filename": "src/test/compile-fail/issue-35675.rs", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/2b2eeda0831401935a45c70667cf4c3eaedafe7d/src%2Ftest%2Fcompile-fail%2Fissue-35675.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b2eeda0831401935a45c70667cf4c3eaedafe7d/src%2Ftest%2Fcompile-fail%2Fissue-35675.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-35675.rs?ref=2b2eeda0831401935a45c70667cf4c3eaedafe7d", "patch": "@@ -0,0 +1,67 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Fruit {\n+    Apple(i64),\n+    //~^ HELP there is an enum variant `Fruit::Apple`, did you mean to use `Fruit`?\n+    //~| HELP there is an enum variant `Fruit::Apple`, did you mean to use `Fruit`?\n+    Orange(i64),\n+}\n+\n+fn should_return_fruit() -> Apple {\n+    //~^ ERROR cannot find type `Apple` in this scope\n+    //~| NOTE not found in this scope\n+    Apple(5)\n+    //~^ ERROR cannot find function `Apple` in this scope\n+    //~| NOTE not found in this scope\n+    //~| HELP possible candidate is found in another module, you can import it into scope\n+}\n+\n+fn should_return_fruit_too() -> Fruit::Apple {\n+    //~^ ERROR expected type, found variant `Fruit::Apple`\n+    //~| NOTE not a type\n+    Apple(5)\n+    //~^ ERROR cannot find function `Apple` in this scope\n+    //~| NOTE not found in this scope\n+    //~| HELP possible candidate is found in another module, you can import it into scope\n+}\n+\n+fn foo() -> Ok {\n+    //~^ ERROR expected type, found variant `Ok`\n+    //~| NOTE not a type\n+    //~| HELP there is an enum variant\n+    //~| HELP there is an enum variant\n+    Ok(())\n+}\n+\n+fn bar() -> Variant3 {\n+    //~^ ERROR cannot find type `Variant3` in this scope\n+    //~| NOTE not found in this scope\n+}\n+\n+fn qux() -> Some {\n+    //~^ ERROR expected type, found variant `Some`\n+    //~| NOTE not a type\n+    //~| HELP there is an enum variant\n+    //~| HELP there is an enum variant\n+    Some(1)\n+}\n+\n+fn main() {}\n+\n+mod x {\n+    enum Enum {\n+        Variant1,\n+        Variant2(),\n+        Variant3(usize),\n+        //~^ HELP there is an enum variant `x::Enum::Variant3`, did you mean to use `x::Enum`?\n+        Variant4 {},\n+    }\n+}"}, {"sha": "ff29f3ad4078ba482d41bbf21cefbafe42b10c7c", "filename": "src/test/ui/did_you_mean/issue-35675.rs", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.rs?ref=73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "patch": "@@ -1,44 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-enum Fruit {\n-    Apple(i64),\n-    Orange(i64),\n-}\n-\n-fn should_return_fruit() -> Apple {\n-    Apple(5)\n-}\n-\n-fn should_return_fruit_too() -> Fruit::Apple {\n-    Apple(5)\n-}\n-\n-fn foo() -> Ok {\n-    Ok(())\n-}\n-\n-fn bar() -> Variant3 {\n-}\n-\n-fn qux() -> Some {\n-    Some(1)\n-}\n-\n-fn main() {}\n-\n-mod x {\n-    enum Enum {\n-        Variant1,\n-        Variant2(),\n-        Variant3(usize),\n-        Variant4 {},\n-    }\n-}"}, {"sha": "3d615785b25fa0828b606ea5686d80a26f9e5572", "filename": "src/test/ui/did_you_mean/issue-35675.stderr", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.stderr?ref=73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "patch": "@@ -1,74 +0,0 @@\n-error[E0412]: cannot find type `Apple` in this scope\n-  --> $DIR/issue-35675.rs:16:29\n-   |\n-16 | fn should_return_fruit() -> Apple {\n-   |                             ^^^^^ not found in this scope\n-   |\n-help: there is an enum variant `Fruit::Apple`, did you mean to use `Fruit`?\n-  --> $DIR/issue-35675.rs:12:5\n-   |\n-12 |     Apple(i64),\n-   |     ^^^^^^^^^^\n-\n-error[E0425]: cannot find function `Apple` in this scope\n-  --> $DIR/issue-35675.rs:17:5\n-   |\n-17 |     Apple(5)\n-   |     ^^^^^ not found in this scope\n-   |\n-   = help: possible candidate is found in another module, you can import it into scope:\n-             `use Fruit::Apple;`\n-\n-error[E0573]: expected type, found variant `Fruit::Apple`\n-  --> $DIR/issue-35675.rs:20:33\n-   |\n-20 | fn should_return_fruit_too() -> Fruit::Apple {\n-   |                                 ^^^^^^^^^^^^ not a type\n-   |\n-help: there is an enum variant `Fruit::Apple`, did you mean to use `Fruit`?\n-  --> $DIR/issue-35675.rs:12:5\n-   |\n-12 |     Apple(i64),\n-   |     ^^^^^^^^^^\n-\n-error[E0425]: cannot find function `Apple` in this scope\n-  --> $DIR/issue-35675.rs:21:5\n-   |\n-21 |     Apple(5)\n-   |     ^^^^^ not found in this scope\n-   |\n-   = help: possible candidate is found in another module, you can import it into scope:\n-             `use Fruit::Apple;`\n-\n-error[E0573]: expected type, found variant `Ok`\n-  --> $DIR/issue-35675.rs:24:13\n-   |\n-24 | fn foo() -> Ok {\n-   |             ^^ not a type\n-   |\n-   = help: there is an enum variant `std::prelude::v1::Ok`, did you mean to use `std::prelude::v1`?\n-   = help: there is an enum variant `std::prelude::v1::Result::Ok`, did you mean to use `std::prelude::v1::Result`?\n-\n-error[E0412]: cannot find type `Variant3` in this scope\n-  --> $DIR/issue-35675.rs:28:13\n-   |\n-28 | fn bar() -> Variant3 {\n-   |             ^^^^^^^^ not found in this scope\n-   |\n-help: there is an enum variant `x::Enum::Variant3`, did you mean to use `x::Enum`?\n-  --> $DIR/issue-35675.rs:41:9\n-   |\n-41 |         Variant3(usize),\n-   |         ^^^^^^^^^^^^^^^\n-\n-error[E0573]: expected type, found variant `Some`\n-  --> $DIR/issue-35675.rs:31:13\n-   |\n-31 | fn qux() -> Some {\n-   |             ^^^^ not a type\n-   |\n-   = help: there is an enum variant `std::prelude::v1::Option::Some`, did you mean to use `std::prelude::v1::Option`?\n-   = help: there is an enum variant `std::prelude::v1::Some`, did you mean to use `std::prelude::v1`?\n-\n-error: aborting due to 7 previous errors\n-"}]}