{"sha": "38048763e885a3ee139abf39d59a530b16484150", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MDQ4NzYzZTg4NWEzZWUxMzlhYmYzOWQ1OWE1MzBiMTY0ODQxNTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-06T18:12:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-06T18:12:57Z"}, "message": "Auto merge of #65728 - ecstatic-morse:promotion-const-proj, r=eddyb\n\nFix promotion in a `const` when projections are present\n\nResolves #65727.\n\nThis marks the entire local as \"needs promotion\" when only a projection of that local appears in a promotable context. This should only affect promotion in a `const` or `static`, not in a `fn` or `const fn`, which is handled in `promote_consts.rs`.\n\nr? @eddyb", "tree": {"sha": "eebdd688668c68e916174d7ab859f964a59feff9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eebdd688668c68e916174d7ab859f964a59feff9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38048763e885a3ee139abf39d59a530b16484150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38048763e885a3ee139abf39d59a530b16484150", "html_url": "https://github.com/rust-lang/rust/commit/38048763e885a3ee139abf39d59a530b16484150", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38048763e885a3ee139abf39d59a530b16484150/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f0e16473de5ec010f44290a8c3ea1d90e0ad7a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0e16473de5ec010f44290a8c3ea1d90e0ad7a2", "html_url": "https://github.com/rust-lang/rust/commit/3f0e16473de5ec010f44290a8c3ea1d90e0ad7a2"}, {"sha": "420457e5ca9e724b045fc45f6b05dac8476a5ef4", "url": "https://api.github.com/repos/rust-lang/rust/commits/420457e5ca9e724b045fc45f6b05dac8476a5ef4", "html_url": "https://github.com/rust-lang/rust/commit/420457e5ca9e724b045fc45f6b05dac8476a5ef4"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "3de9998653d0a6702d9cd5a5262eac13b3b1ffe1", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/38048763e885a3ee139abf39d59a530b16484150/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38048763e885a3ee139abf39d59a530b16484150/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=38048763e885a3ee139abf39d59a530b16484150", "patch": "@@ -1066,32 +1066,23 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n         } else {\n             self.valid_promotion_candidates()\n         };\n+\n         debug!(\"qualify_const: promotion_candidates={:?}\", promotion_candidates);\n         for candidate in promotion_candidates {\n             match candidate {\n-                Candidate::Repeat(Location { block: bb, statement_index: stmt_idx }) => {\n-                    if let StatementKind::Assign(box(_, Rvalue::Repeat(\n-                        Operand::Move(place),\n-                        _\n-                    ))) = &self.body[bb].statements[stmt_idx].kind {\n-                        if let Some(index) = place.as_local() {\n-                            promoted_temps.insert(index);\n-                        }\n-                    }\n-                }\n                 Candidate::Ref(Location { block: bb, statement_index: stmt_idx }) => {\n-                    if let StatementKind::Assign(\n-                        box(\n-                            _,\n-                            Rvalue::Ref(_, _, place)\n-                        )\n-                    ) = &self.body[bb].statements[stmt_idx].kind {\n-                        if let Some(index) = place.as_local() {\n-                            promoted_temps.insert(index);\n+                    if let StatementKind::Assign(box( _, Rvalue::Ref(_, _, place)))\n+                        = &self.body[bb].statements[stmt_idx].kind\n+                    {\n+                        if let PlaceBase::Local(local) = place.base {\n+                            promoted_temps.insert(local);\n                         }\n                     }\n                 }\n-                Candidate::Argument { .. } => {}\n+\n+                // Only rvalue-static promotion requires extending the lifetime of the promoted\n+                // local.\n+                Candidate::Argument { .. } | Candidate::Repeat(_) => {}\n             }\n         }\n "}, {"sha": "c4841b46f60d9dc8a975d68c885b9f271222f0ed", "filename": "src/test/ui/consts/promote_borrowed_field.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/38048763e885a3ee139abf39d59a530b16484150/src%2Ftest%2Fui%2Fconsts%2Fpromote_borrowed_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38048763e885a3ee139abf39d59a530b16484150/src%2Ftest%2Fui%2Fconsts%2Fpromote_borrowed_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote_borrowed_field.rs?ref=38048763e885a3ee139abf39d59a530b16484150", "patch": "@@ -0,0 +1,12 @@\n+// run-pass\n+\n+// From https://github.com/rust-lang/rust/issues/65727\n+\n+const _: &i32 = {\n+    let x = &(5, false).0;\n+    x\n+};\n+\n+fn main() {\n+    let _: &'static i32 = &(5, false).0;\n+}"}]}