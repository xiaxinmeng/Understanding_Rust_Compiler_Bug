{"sha": "95937990c5e772721e83c603dcca7c5aed8cdd0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OTM3OTkwYzVlNzcyNzIxZTgzYzYwM2RjY2E3YzVhZWQ4Y2RkMGU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-07T20:46:06Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-07T20:46:06Z"}, "message": "save-analysis: fix regression from #45709\n\ncloses https://github.com/nrc/rls-analysis/issues/117", "tree": {"sha": "f06ce627192dea5059b7356378ec0202c907aca6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f06ce627192dea5059b7356378ec0202c907aca6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95937990c5e772721e83c603dcca7c5aed8cdd0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95937990c5e772721e83c603dcca7c5aed8cdd0e", "html_url": "https://github.com/rust-lang/rust/commit/95937990c5e772721e83c603dcca7c5aed8cdd0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95937990c5e772721e83c603dcca7c5aed8cdd0e/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ade24f67201531778e7674b4b63ebf1a23c9643", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ade24f67201531778e7674b4b63ebf1a23c9643", "html_url": "https://github.com/rust-lang/rust/commit/7ade24f67201531778e7674b4b63ebf1a23c9643"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "fdd7a8e8d74f755bc798a5ca42dc53116794ff5b", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/95937990c5e772721e83c603dcca7c5aed8cdd0e/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95937990c5e772721e83c603dcca7c5aed8cdd0e/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=95937990c5e772721e83c603dcca7c5aed8cdd0e", "patch": "@@ -785,21 +785,19 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n         }\n     }\n \n+    fn dump_path_ref(&mut self, id: NodeId, path: &ast::Path) {\n+        let path_data = self.save_ctxt.get_path_data(id, path);\n+        if let Some(path_data) = path_data {\n+            self.dumper.dump_ref(path_data);\n+        }\n+    }\n+\n     fn process_path(&mut self, id: NodeId, path: &'l ast::Path) {\n         debug!(\"process_path {:?}\", path);\n-        let path_data = self.save_ctxt.get_path_data(id, path);\n-        if generated_code(path.span) && path_data.is_none() {\n+        if generated_code(path.span) {\n             return;\n         }\n-\n-        let path_data = match path_data {\n-            Some(pd) => pd,\n-            None => {\n-                return;\n-            }\n-        };\n-\n-        self.dumper.dump_ref(path_data);\n+        self.dump_path_ref(id, path);\n \n         // Type parameters\n         for seg in &path.segments {\n@@ -1508,6 +1506,13 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tc\n                         });\n                     }\n                 }\n+                HirDef::StructCtor(..) | HirDef::VariantCtor(..) |\n+                HirDef::Const(..) | HirDef::AssociatedConst(..) |\n+                HirDef::Struct(..) | HirDef::Variant(..) |\n+                HirDef::TyAlias(..) | HirDef::AssociatedTy(..) |\n+                HirDef::SelfTy(..) => {\n+                    self.dump_path_ref(id, &ast::Path::from_ident(sp, i));\n+                }\n                 def => error!(\"unexpected definition kind when processing collected idents: {:?}\",\n                               def),\n             }"}]}