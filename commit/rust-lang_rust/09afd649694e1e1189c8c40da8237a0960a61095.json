{"sha": "09afd649694e1e1189c8c40da8237a0960a61095", "node_id": "C_kwDOAAsO6NoAKDA5YWZkNjQ5Njk0ZTFlMTE4OWM4YzQwZGE4MjM3YTA5NjBhNjEwOTU", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-01-03T03:37:05Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-01-11T15:16:22Z"}, "message": "Store a `Symbol` instead of an `Ident` in `VariantDef`/`FieldDef`\n\nThe field is also renamed from `ident` to `name. In most cases,\nwe don't actually need the `Span`. A new `ident` method is added\nto `VariantDef` and `FieldDef`, which constructs the full `Ident`\nusing `tcx.def_ident_span()`. This method is used in the cases\nwhere we actually need an `Ident`.\n\nThis makes incremental compilation properly track changes\nto the `Span`, without all of the invalidations caused by storing\na `Span` directly via an `Ident`.", "tree": {"sha": "a0d67be4cb8afa949b49f676472c57dbc33f2383", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0d67be4cb8afa949b49f676472c57dbc33f2383"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09afd649694e1e1189c8c40da8237a0960a61095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09afd649694e1e1189c8c40da8237a0960a61095", "html_url": "https://github.com/rust-lang/rust/commit/09afd649694e1e1189c8c40da8237a0960a61095", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09afd649694e1e1189c8c40da8237a0960a61095/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37069f1a0894f22509af758644eb158b81f10c96", "url": "https://api.github.com/repos/rust-lang/rust/commits/37069f1a0894f22509af758644eb158b81f10c96", "html_url": "https://github.com/rust-lang/rust/commit/37069f1a0894f22509af758644eb158b81f10c96"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "281e49fa8a35ed4b6344c58688b792236b42fa3d", "filename": "src/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09afd649694e1e1189c8c40da8237a0960a61095/src%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09afd649694e1e1189c8c40da8237a0960a61095/src%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftype_of.rs?ref=09afd649694e1e1189c8c40da8237a0960a61095", "patch": "@@ -57,7 +57,7 @@ pub fn uncached_gcc_type<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, layout: TyAndLa\n                 (layout.ty.kind(), &layout.variants)\n             {\n                 if def.is_enum() && !def.variants.is_empty() {\n-                    write!(&mut name, \"::{}\", def.variants[index].ident).unwrap();\n+                    write!(&mut name, \"::{}\", def.variants[index].name).unwrap();\n                 }\n             }\n             if let (&ty::Generator(_, _, _), &Variants::Single { index }) ="}]}