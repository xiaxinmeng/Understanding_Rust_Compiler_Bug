{"sha": "e7d26a491724f347059a2f89cc4da676b6d2c970", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZDI2YTQ5MTcyNGYzNDcwNTlhMmY4OWNjNGRhNjc2YjZkMmM5NzA=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-31T17:21:15Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-31T17:22:32Z"}, "message": "make option::map_default<T,U> instead of U:copy", "tree": {"sha": "375bc36b6292353f3468d1e498497cc94d35a1ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/375bc36b6292353f3468d1e498497cc94d35a1ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7d26a491724f347059a2f89cc4da676b6d2c970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7d26a491724f347059a2f89cc4da676b6d2c970", "html_url": "https://github.com/rust-lang/rust/commit/e7d26a491724f347059a2f89cc4da676b6d2c970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7d26a491724f347059a2f89cc4da676b6d2c970/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09e893ba2e7158c8bc24bac8bd4fcecf2353c3d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/09e893ba2e7158c8bc24bac8bd4fcecf2353c3d3", "html_url": "https://github.com/rust-lang/rust/commit/09e893ba2e7158c8bc24bac8bd4fcecf2353c3d3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "074dd0869267b35c69074f49327f09037e7dbb90", "filename": "src/libcore/option.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7d26a491724f347059a2f89cc4da676b6d2c970/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d26a491724f347059a2f89cc4da676b6d2c970/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=e7d26a491724f347059a2f89cc4da676b6d2c970", "patch": "@@ -88,7 +88,7 @@ pure fn get_default<T: copy>(opt: option<T>, def: T) -> T {\n     alt opt { some(x) { x } none { def } }\n }\n \n-pure fn map_default<T, U: copy>(opt: option<T>, def: U, f: fn(T) -> U) -> U {\n+pure fn map_default<T, U>(opt: option<T>, +def: U, f: fn(T) -> U) -> U {\n     //! Applies a function to the contained value or returns a default\n \n     alt opt { none { def } some(t) { f(t) } }\n@@ -133,7 +133,7 @@ impl extensions<T> for option<T> {\n      */\n     pure fn chain<U>(f: fn(T) -> option<U>) -> option<U> { chain(self, f) }\n     /// Applies a function to the contained value or returns a default\n-    pure fn map_default<U: copy>(def: U, f: fn(T) -> U) -> U\n+    pure fn map_default<U>(+def: U, f: fn(T) -> U) -> U\n         { map_default(self, def, f) }\n     /// Performs an operation on the contained value or does nothing\n     pure fn iter(f: fn(T)) { iter(self, f) }"}]}