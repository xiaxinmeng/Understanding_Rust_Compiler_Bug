{"sha": "e731520be5d43059b5b87ffc8e1b249e4a824a9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MzE1MjBiZTVkNDMwNTliNWI4N2ZmYzhlMWIyNDllNGE4MjRhOWE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-21T06:04:34Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-21T06:04:34Z"}, "message": "Add helper function to double-check non-null types.", "tree": {"sha": "25e073de490a71703744adf9938d0f04d4d84b0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25e073de490a71703744adf9938d0f04d4d84b0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e731520be5d43059b5b87ffc8e1b249e4a824a9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e731520be5d43059b5b87ffc8e1b249e4a824a9a", "html_url": "https://github.com/rust-lang/rust/commit/e731520be5d43059b5b87ffc8e1b249e4a824a9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e731520be5d43059b5b87ffc8e1b249e4a824a9a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "244c59ac205fdb28128908f39d39b3eb9cb7a772", "url": "https://api.github.com/repos/rust-lang/rust/commits/244c59ac205fdb28128908f39d39b3eb9cb7a772", "html_url": "https://github.com/rust-lang/rust/commit/244c59ac205fdb28128908f39d39b3eb9cb7a772"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "b93235f2c5b6b8061435818bd41810c530b72381", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e731520be5d43059b5b87ffc8e1b249e4a824a9a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e731520be5d43059b5b87ffc8e1b249e4a824a9a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=e731520be5d43059b5b87ffc8e1b249e4a824a9a", "patch": "@@ -239,6 +239,12 @@ fn T_taskptr() -> TypeRef {\n }\n \n fn type_of(@trans_ctxt cx, @typeck.ty t) -> TypeRef {\n+    let TypeRef llty = type_of_inner(cx, t);\n+    check (llty as int != 0);\n+    ret llty;\n+}\n+\n+fn type_of_inner(@trans_ctxt cx, @typeck.ty t) -> TypeRef {\n     alt (t.struct) {\n         case (typeck.ty_nil) { ret T_nil(); }\n         case (typeck.ty_bool) { ret T_bool(); }"}]}