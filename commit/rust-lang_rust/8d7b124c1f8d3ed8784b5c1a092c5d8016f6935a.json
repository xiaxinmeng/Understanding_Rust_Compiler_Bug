{"sha": "8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a", "node_id": "C_kwDOAAsO6NoAKDhkN2IxMjRjMWY4ZDNlZDg3ODRiNWMxYTA5MmM1ZDgwMTZmNjkzNWE", "commit": {"author": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2022-03-30T21:28:19Z"}, "committer": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2022-03-30T21:28:19Z"}, "message": "a few mode feedback fixes per @bjorn3", "tree": {"sha": "c28308133ddc8ad5141c8f2fb30ef99a5284ca8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c28308133ddc8ad5141c8f2fb30ef99a5284ca8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a", "html_url": "https://github.com/rust-lang/rust/commit/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a/comments", "author": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6dd6582540ad20e385bcf8326968aa94f33694b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6dd6582540ad20e385bcf8326968aa94f33694b", "html_url": "https://github.com/rust-lang/rust/commit/a6dd6582540ad20e385bcf8326968aa94f33694b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5a13216846d54e8d8a5ad7c61f33711be0b36989", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a", "patch": "@@ -284,7 +284,7 @@ static_assert_size!(TyKind<'_>, 32);\n /// - 'l0...'li and T0...Tj are the generic parameters\n ///   in scope on the function that defined the closure,\n /// - CK represents the *closure kind* (Fn vs FnMut vs FnOnce). This\n-///   is rather hacky encoded via a scalar type. See\n+///   is rather hackily encoded via a scalar type. See\n ///   `Ty::to_opt_closure_kind` for details.\n /// - CS represents the *closure signature*, representing as a `fn()`\n ///   type. For example, `fn(u32, u32) -> u32` would mean that the closure"}, {"sha": "ce4b45062e8de7d0ca9ab61351245ea7cb7c07b4", "filename": "compiler/rustc_mir_transform/src/simplify_try.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_try.rs?ref=8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a", "patch": "@@ -72,7 +72,7 @@ struct ArmIdentityInfo<'tcx> {\n     /// (StorageLive index,, StorageDead index, Local)\n     storage_stmts: Vec<(usize, usize, Local)>,\n \n-    /// The statements that should be removed (turned into noops)\n+    /// The statements that should be removed (turned into nops)\n     stmts_to_remove: Vec<usize>,\n \n     /// Indices of debug variables that need to be adjusted to point to"}, {"sha": "4953dafe89bdce3575f3ad5f6f63bad7930a7f70", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=8d7b124c1f8d3ed8784b5c1a092c5d8016f6935a", "patch": "@@ -1255,7 +1255,7 @@ pub struct TargetOptions {\n     /// handling COFF object files with more than 2<sup>15</sup> sections. Since each weak\n     /// symbol needs its own COMDAT section, weak linkage implies a large\n     /// number sections that easily exceeds the given limit for larger\n-    /// codebase. Consequently we want a way to disallow weak linkage on some\n+    /// codebases. Consequently we want a way to disallow weak linkage on some\n     /// platforms.\n     pub allows_weak_linkage: bool,\n     /// Whether the linker support rpaths or not. Defaults to false."}]}