{"sha": "e5b278b702afc0fa26eda0517fd6907712790b5a", "node_id": "C_kwDOAAsO6NoAKGU1YjI3OGI3MDJhZmMwZmEyNmVkYTA1MTdmZDY5MDc3MTI3OTBiNWE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-05T01:42:22Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-22T18:17:29Z"}, "message": "Deduplicate check_expr in builtin calls with error", "tree": {"sha": "181a8337d66b99f907397f366e6f97a9c122ca96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/181a8337d66b99f907397f366e6f97a9c122ca96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5b278b702afc0fa26eda0517fd6907712790b5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b278b702afc0fa26eda0517fd6907712790b5a", "html_url": "https://github.com/rust-lang/rust/commit/e5b278b702afc0fa26eda0517fd6907712790b5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5b278b702afc0fa26eda0517fd6907712790b5a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e4eef02d443eae5089a330e59a69a4f350db81", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e4eef02d443eae5089a330e59a69a4f350db81", "html_url": "https://github.com/rust-lang/rust/commit/e5e4eef02d443eae5089a330e59a69a4f350db81"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "c5435277913798e96b9d5df8949b1338c0ff413b", "filename": "compiler/rustc_hir_typeck/src/callee.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5b278b702afc0fa26eda0517fd6907712790b5a/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5b278b702afc0fa26eda0517fd6907712790b5a/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs?ref=e5b278b702afc0fa26eda0517fd6907712790b5a", "patch": "@@ -399,6 +399,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n             ty::FnPtr(sig) => (sig, None),\n             _ => {\n+                let mut skip_first_expr = false;\n                 if let hir::ExprKind::Path(hir::QPath::Resolved(_, path)) = &callee_expr.kind\n                     && let [segment] = path.segments\n                     && let Some(mut diag) = self\n@@ -421,11 +422,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         return ty;\n                     } else {\n                         diag.emit();\n+                        skip_first_expr = true;\n                     }\n                 }\n \n                 let err = self.report_invalid_callee(call_expr, callee_expr, callee_ty, arg_exprs);\n \n+                for arg in arg_exprs.iter().skip(skip_first_expr as usize) {\n+                    self.check_expr(arg);\n+                }\n+\n                 return self.tcx.ty_error_with_guaranteed(err);\n             }\n         };\n@@ -486,7 +492,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         expected: Expectation<'tcx>,\n     ) -> Option<Ty<'tcx>> {\n         if let [callee_expr, rest @ ..] = arg_exprs {\n-            let callee_ty = self.check_expr(callee_expr);\n+            // This may happen recursively -- if so, avoid repeatedly checking the expr.\n+            let callee_ty = self.typeck_results.borrow().expr_ty_adjusted_opt(callee_expr);\n+            let callee_ty = callee_ty.unwrap_or_else(|| self.check_expr(callee_expr));\n             // First, do a probe with `IsSuggestion(true)` to avoid emitting\n             // any strange errors. If it's successful, then we'll do a true\n             // method lookup."}, {"sha": "58ee3d6409a7e19ed0b1d7c5b83c64fa0b649cbc", "filename": "src/test/ui/suggestions/fn-to-method-deeply-nested.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5b278b702afc0fa26eda0517fd6907712790b5a/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5b278b702afc0fa26eda0517fd6907712790b5a/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.rs?ref=e5b278b702afc0fa26eda0517fd6907712790b5a", "patch": "@@ -0,0 +1,13 @@\n+fn main() -> Result<(), ()> {\n+    a(b(c(d(e(\n+        //~^ ERROR cannot find function `a` in this scope\n+        //~| ERROR cannot find function `b` in this scope\n+        //~| ERROR cannot find function `c` in this scope\n+        //~| ERROR cannot find function `d` in this scope\n+        //~| ERROR cannot find function `e` in this scope\n+        z????????????????????????????????????????????????????????????????????????????????????????\n+        ?????????????????????????????????????????????????????????????????????????????????????????\n+        ??????????????????????????????????????????????????????????????????\n+        //~^^^ ERROR cannot find value `z` in this scope\n+    )))))\n+}"}, {"sha": "ce813ea7abae8acc4349f60798855012ce7e0e90", "filename": "src/test/ui/suggestions/fn-to-method-deeply-nested.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/e5b278b702afc0fa26eda0517fd6907712790b5a/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5b278b702afc0fa26eda0517fd6907712790b5a/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.stderr?ref=e5b278b702afc0fa26eda0517fd6907712790b5a", "patch": "@@ -0,0 +1,39 @@\n+error[E0425]: cannot find value `z` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:8:9\n+   |\n+LL |         z????????????????????????????????????????????????????????????????????????????????????????\n+   |         ^ not found in this scope\n+\n+error[E0425]: cannot find function `e` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:13\n+   |\n+LL |     a(b(c(d(e(\n+   |             ^ not found in this scope\n+\n+error[E0425]: cannot find function `d` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:11\n+   |\n+LL |     a(b(c(d(e(\n+   |           ^ not found in this scope\n+\n+error[E0425]: cannot find function `c` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:9\n+   |\n+LL |     a(b(c(d(e(\n+   |         ^ not found in this scope\n+\n+error[E0425]: cannot find function `b` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:7\n+   |\n+LL |     a(b(c(d(e(\n+   |       ^ not found in this scope\n+\n+error[E0425]: cannot find function `a` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:5\n+   |\n+LL |     a(b(c(d(e(\n+   |     ^ not found in this scope\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}]}