{"sha": "4b42a6d90b850eb697a56bddb9e3239d7e5c72fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNDJhNmQ5MGI4NTBlYjY5N2E1NmJkZGI5ZTMyMzlkN2U1YzcyZmI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-17T13:57:07Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-02-13T20:14:57Z"}, "message": "Introduce query_stored module.", "tree": {"sha": "18f595352dbabe29712b1c79005ec9845768b237", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18f595352dbabe29712b1c79005ec9845768b237"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b42a6d90b850eb697a56bddb9e3239d7e5c72fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b42a6d90b850eb697a56bddb9e3239d7e5c72fb", "html_url": "https://github.com/rust-lang/rust/commit/4b42a6d90b850eb697a56bddb9e3239d7e5c72fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b42a6d90b850eb697a56bddb9e3239d7e5c72fb/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8684e9e47dcc52cc51dccdf1a74bac69deb38207", "url": "https://api.github.com/repos/rust-lang/rust/commits/8684e9e47dcc52cc51dccdf1a74bac69deb38207", "html_url": "https://github.com/rust-lang/rust/commit/8684e9e47dcc52cc51dccdf1a74bac69deb38207"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "7a46bad0c1fd7860875f44026b4cf96193c9cf5d", "filename": "compiler/rustc_middle/src/ty/query/plumbing.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4b42a6d90b850eb697a56bddb9e3239d7e5c72fb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b42a6d90b850eb697a56bddb9e3239d7e5c72fb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs?ref=4b42a6d90b850eb697a56bddb9e3239d7e5c72fb", "patch": "@@ -342,14 +342,20 @@ macro_rules! define_queries {\n \n             $(pub type $name<$tcx> = $V;)*\n         }\n+        #[allow(nonstandard_style, unused_lifetimes)]\n+        pub mod query_stored {\n+            use super::*;\n+\n+            $(pub type $name<$tcx> = <\n+                query_storage!([$($modifiers)*][$($K)*, $V])\n+                as QueryStorage\n+            >::Stored;)*\n+        }\n \n         $(impl<$tcx> QueryConfig for queries::$name<$tcx> {\n             type Key = $($K)*;\n             type Value = $V;\n-            type Stored = <\n-                query_storage!([$($modifiers)*][$($K)*, $V])\n-                as QueryStorage\n-            >::Stored;\n+            type Stored = query_stored::$name<$tcx>;\n             const NAME: &'static str = stringify!($name);\n         }\n \n@@ -442,8 +448,7 @@ macro_rules! define_queries {\n             $($(#[$attr])*\n             #[inline(always)]\n             #[must_use]\n-            pub fn $name(self, key: query_helper_param_ty!($($K)*))\n-                -> <queries::$name<$tcx> as QueryConfig>::Stored\n+            pub fn $name(self, key: query_helper_param_ty!($($K)*)) -> query_stored::$name<$tcx>\n             {\n                 self.at(DUMMY_SP).$name(key.into_query_param())\n             })*\n@@ -481,8 +486,7 @@ macro_rules! define_queries {\n         impl TyCtxtAt<$tcx> {\n             $($(#[$attr])*\n             #[inline(always)]\n-            pub fn $name(self, key: query_helper_param_ty!($($K)*))\n-                -> <queries::$name<$tcx> as QueryConfig>::Stored\n+            pub fn $name(self, key: query_helper_param_ty!($($K)*)) -> query_stored::$name<$tcx>\n             {\n                 get_query::<queries::$name<'_>, _>(self.tcx, self.span, key.into_query_param(), QueryMode::Get).unwrap()\n             })*"}]}