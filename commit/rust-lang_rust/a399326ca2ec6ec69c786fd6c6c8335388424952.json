{"sha": "a399326ca2ec6ec69c786fd6c6c8335388424952", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzOTkzMjZjYTJlYzZlYzY5Yzc4NmZkNmM2YzgzMzUzODg0MjQ5NTI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-15T19:25:05Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-15T19:25:05Z"}, "message": "Improve error messages on LLVM bitcode parsing failure\n\nThe LLVM error causing the parse failure is now printed, in the style\nof the other thin LTO error messages. This prevents a flood of\nassertion failure messages if the bitcode can\u2019t be parsed.", "tree": {"sha": "08e9789eaea9429e5404b275991ae349bdc61290", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08e9789eaea9429e5404b275991ae349bdc61290"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a399326ca2ec6ec69c786fd6c6c8335388424952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a399326ca2ec6ec69c786fd6c6c8335388424952", "html_url": "https://github.com/rust-lang/rust/commit/a399326ca2ec6ec69c786fd6c6c8335388424952", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a399326ca2ec6ec69c786fd6c6c8335388424952/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50f6c3ece0ec738da48f8e77e6379a14bd02d1f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/50f6c3ece0ec738da48f8e77e6379a14bd02d1f4", "html_url": "https://github.com/rust-lang/rust/commit/50f6c3ece0ec738da48f8e77e6379a14bd02d1f4"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "aa7754a7ab0ff5d621bc573cbebcc17373e6f3de", "filename": "src/librustc_trans/back/lto.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a399326ca2ec6ec69c786fd6c6c8335388424952/src%2Flibrustc_trans%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a399326ca2ec6ec69c786fd6c6c8335388424952/src%2Flibrustc_trans%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flto.rs?ref=a399326ca2ec6ec69c786fd6c6c8335388424952", "patch": "@@ -613,7 +613,10 @@ impl ThinModule {\n             self.data().len(),\n             self.shared.module_names[self.idx].as_ptr(),\n         );\n-        assert!(!llmod.is_null());\n+        if llmod.is_null() {\n+            let msg = format!(\"failed to parse bitcode for thin LTO module\");\n+            return Err(write::llvm_err(&diag_handler, msg));\n+        }\n         let mtrans = ModuleTranslation {\n             source: ModuleSource::Translated(ModuleLlvm {\n                 llmod,"}]}