{"sha": "7e86c8eccbd032068cc474611e41a13ac6d0bbd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlODZjOGVjY2JkMDMyMDY4Y2M0NzQ2MTFlNDFhMTNhYzZkMGJiZDc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-30T20:04:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-30T20:04:23Z"}, "message": "Rollup merge of #74751 - GuillaumeGomez:cleanup-e0730, r=jyn514\n\nClean up E0730 explanation\n\nr? @Dylan-DPC", "tree": {"sha": "7d61b0cb81e542b707090d47692a9e20ac8a087c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d61b0cb81e542b707090d47692a9e20ac8a087c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e86c8eccbd032068cc474611e41a13ac6d0bbd7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIyfICRBK7hj4Ov3rIwAAdHIIAKh/EDRMVaUDX0B+G0Qwj4oS\nEqsQXkfsu2n9T38dLa4esy4sYLyVvnUZHy2hZYJQs9uvxG4L2WvAN//WXC4IJD1s\n/efVncGQwi0XV8nejOb6u6cGddU/W2xCoRtTUGGPuX9OQ77x/GYznUWJEW6iD0tn\nqLWIZO5AWRpykYX0B//Eq7fBeFYD8urNBmEx810CcRSNZMddF46cC2E12G1dtH1A\naP3fDp6zuZKsX8Qw7h4/6n5hL+P0W7rZXbvJ31YFwIWPUEyDJNrQnoakTL6WfcjI\nOUt0QLrvfy/okhgKiJnbKLY10p0fCXYHigVwgZFXW76Rc5ulzkslgj/8YGums4A=\n=NYMs\n-----END PGP SIGNATURE-----\n", "payload": "tree 7d61b0cb81e542b707090d47692a9e20ac8a087c\nparent 6b09c37ddc240e25748e53d7a8f81f252def6dee\nparent 89e4fe33130a17888a2add6baadd850653263242\nauthor Manish Goregaokar <manishsmail@gmail.com> 1596139463 -0700\ncommitter GitHub <noreply@github.com> 1596139463 -0700\n\nRollup merge of #74751 - GuillaumeGomez:cleanup-e0730, r=jyn514\n\nClean up E0730 explanation\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e86c8eccbd032068cc474611e41a13ac6d0bbd7", "html_url": "https://github.com/rust-lang/rust/commit/7e86c8eccbd032068cc474611e41a13ac6d0bbd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e86c8eccbd032068cc474611e41a13ac6d0bbd7/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b09c37ddc240e25748e53d7a8f81f252def6dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b09c37ddc240e25748e53d7a8f81f252def6dee", "html_url": "https://github.com/rust-lang/rust/commit/6b09c37ddc240e25748e53d7a8f81f252def6dee"}, {"sha": "89e4fe33130a17888a2add6baadd850653263242", "url": "https://api.github.com/repos/rust-lang/rust/commits/89e4fe33130a17888a2add6baadd850653263242", "html_url": "https://github.com/rust-lang/rust/commit/89e4fe33130a17888a2add6baadd850653263242"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "016b3f38aa310598bba2365a47289709238af03a", "filename": "src/librustc_error_codes/error_codes/E0730.md", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7e86c8eccbd032068cc474611e41a13ac6d0bbd7/src%2Flibrustc_error_codes%2Ferror_codes%2FE0730.md", "raw_url": "https://github.com/rust-lang/rust/raw/7e86c8eccbd032068cc474611e41a13ac6d0bbd7/src%2Flibrustc_error_codes%2Ferror_codes%2FE0730.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0730.md?ref=7e86c8eccbd032068cc474611e41a13ac6d0bbd7", "patch": "@@ -1,6 +1,6 @@\n An array without a fixed length was pattern-matched.\n \n-Example of erroneous code:\n+Erroneous code example:\n \n ```compile_fail,E0730\n #![feature(const_generics)]\n@@ -14,14 +14,28 @@ fn is_123<const N: usize>(x: [u32; N]) -> bool {\n }\n ```\n \n-Ensure that the pattern is consistent with the size of the matched\n-array. Additional elements can be matched with `..`:\n+To fix this error, you have two solutions:\n+ 1. Use an array with a fixed length.\n+ 2. Use a slice.\n \n+Example with an array with a fixed length:\n+\n+```\n+fn is_123(x: [u32; 3]) -> bool { // We use an array with a fixed size\n+    match x {\n+        [1, 2, ..] => true, // ok!\n+        _ => false\n+    }\n+}\n ```\n-let r = &[1, 2, 3, 4];\n-match r {\n-    &[a, b, ..] => { // ok!\n-        println!(\"a={}, b={}\", a, b);\n+\n+Example with a slice:\n+\n+```\n+fn is_123(x: &[u32]) -> bool { // We use a slice\n+    match x {\n+        [1, 2, ..] => true, // ok!\n+        _ => false\n     }\n }\n ```"}]}