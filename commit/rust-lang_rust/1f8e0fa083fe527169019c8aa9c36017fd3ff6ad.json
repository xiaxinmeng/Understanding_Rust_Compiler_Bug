{"sha": "1f8e0fa083fe527169019c8aa9c36017fd3ff6ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmOGUwZmEwODNmZTUyNzE2OTAxOWM4YWE5YzM2MDE3ZmQzZmY2YWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-09T23:26:03Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-10T00:02:17Z"}, "message": "rt: Implement comparison of functions, objects, ports, channels, and tasks", "tree": {"sha": "e3d151ce0674d09122a978a0a9276f2082db18dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3d151ce0674d09122a978a0a9276f2082db18dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f8e0fa083fe527169019c8aa9c36017fd3ff6ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8e0fa083fe527169019c8aa9c36017fd3ff6ad", "html_url": "https://github.com/rust-lang/rust/commit/1f8e0fa083fe527169019c8aa9c36017fd3ff6ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f8e0fa083fe527169019c8aa9c36017fd3ff6ad/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ade998d743a313d9881ee59bcd38741541287c98", "url": "https://api.github.com/repos/rust-lang/rust/commits/ade998d743a313d9881ee59bcd38741541287c98", "html_url": "https://github.com/rust-lang/rust/commit/ade998d743a313d9881ee59bcd38741541287c98"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "3e927b0f39378091253b962fc68326af7db78626", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1f8e0fa083fe527169019c8aa9c36017fd3ff6ad/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1f8e0fa083fe527169019c8aa9c36017fd3ff6ad/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=1f8e0fa083fe527169019c8aa9c36017fd3ff6ad", "patch": "@@ -1031,11 +1031,25 @@ class cmp : public data<cmp,ptr_pair> {\n     void walk_vec(bool align, bool is_pod,\n                   const std::pair<ptr_pair,ptr_pair> &data_range);\n \n-    void walk_subcontext(bool align, cmp &sub) {\n+    inline void walk_subcontext(bool align, cmp &sub) {\n         sub.walk(align);\n         result = sub.result;\n     }\n \n+    inline void cmp_two_pointers(bool align) {\n+        if (align) dp = align_to(dp, ALIGNOF(uint8_t *) * 2);\n+        data_pair<uint8_t *> fst = bump_dp<uint8_t *>(dp);\n+        data_pair<uint8_t *> snd = bump_dp<uint8_t *>(dp);\n+        cmp_number(fst);\n+        if (!result)\n+            cmp_number(snd);\n+    }\n+\n+    inline void cmp_pointer(bool align) {\n+        if (align) dp = align_to(dp, ALIGNOF(uint8_t *));\n+        cmp_number(bump_dp<uint8_t *>(dp));\n+    }\n+\n     template<typename T>\n     void cmp_number(const data_pair<T> &nums) {\n         result = (nums.fst < nums.snd) ? -1 : (nums.fst == nums.snd) ? 0 : 1;\n@@ -1078,6 +1092,12 @@ class cmp : public data<cmp,ptr_pair> {\n         return walk_vec(align, is_pod, get_ivec_data_range(dp));\n     }\n \n+    void walk_fn(bool align) { return cmp_two_pointers(align); }\n+    void walk_obj(bool align) { return cmp_two_pointers(align); }\n+    void walk_port(bool align) { return cmp_pointer(align); }\n+    void walk_chan(bool align) { return cmp_pointer(align); }\n+    void walk_task(bool align) { return cmp_pointer(align); }\n+\n     void walk_tag(bool align, tag_info &tinfo,\n                   const data_pair<uint32_t> &tag_variants);\n     void walk_box(bool align);"}]}