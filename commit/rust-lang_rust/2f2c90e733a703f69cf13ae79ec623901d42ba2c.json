{"sha": "2f2c90e733a703f69cf13ae79ec623901d42ba2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMmM5MGU3MzNhNzAzZjY5Y2YxM2FlNzllYzYyMzkwMWQ0MmJhMmM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-01-25T13:15:56Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:10Z"}, "message": "Destructure Rc wrapped ErrorKind in miri", "tree": {"sha": "d775004388ee08384b0aa4c0145701732a417906", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d775004388ee08384b0aa4c0145701732a417906"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f2c90e733a703f69cf13ae79ec623901d42ba2c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53IACgkQpp+NIls6\n19mtaw//Tqf8a8xsMjT65KVZQCa0sImBSX935NZptDmfkgsZyvYTeQQfwrvcyUTb\nTyKpyeIVSMbqoE8oDsiAE9wzvGHxiQUKY1Vq6j6UHOT/z2JWI+KJhNQ6Ulzv3S6j\nB0xP/Ab001poePtCzY+xbK5Ng8a/H+UrxvgLBdXXbZsldVbtg3dwdAXVbL+5n3iv\npqBWB6T6F1mk7ShwFw+g5RM20Db7WYk4yIOn3O56OE8ggPHtBoJOUBPmKHyfKe6S\nNIBtELxuWY0PuU4i0L0bkcqLYFhMO/as6CMi2OvDjc1ExMGW3EYtBBHCqfFevd++\nGAn2O/3SuQZSDqhkBmPMxJiQfgjsLLyw3dzLocKEtbQdj9IY1FQG4CUjaWHsSTl9\nnzRr9/OKwE94U2jR6pUGPbgAYtczEk0LBwWod0NRE9lMUdfc6m0seyBFtcPYZnCy\nfiv0EB37KfJyJepuj0ehH5idBG6v0VsOVgcVwPNgSV8ToakJl5Sf2lmem/oUCRlv\nyLXmX4nyh1V8Vv+CI87cJCSE+DjrXUDWiDt/l2oANuUDPm6Xoy7ZYGkp2mYKc8af\nSqqhtfg27gskOA14ZgDQtlQqWgAsLLur4gpK/OkCjrgTTeoYZsKz2nTX8hpdS+ad\nu7LAeD93cVvpp9IF1l9PZ/K/taSM2xqdCZkjJlzVT+a+K7YuUnU=\n=PSTf\n-----END PGP SIGNATURE-----", "payload": "tree d775004388ee08384b0aa4c0145701732a417906\nparent 790d131ac23835b13c494e88495fcdf3e45d9b07\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1516886156 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494450 +0100\n\nDestructure Rc wrapped ErrorKind in miri\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f2c90e733a703f69cf13ae79ec623901d42ba2c", "html_url": "https://github.com/rust-lang/rust/commit/2f2c90e733a703f69cf13ae79ec623901d42ba2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f2c90e733a703f69cf13ae79ec623901d42ba2c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "790d131ac23835b13c494e88495fcdf3e45d9b07", "url": "https://api.github.com/repos/rust-lang/rust/commits/790d131ac23835b13c494e88495fcdf3e45d9b07", "html_url": "https://github.com/rust-lang/rust/commit/790d131ac23835b13c494e88495fcdf3e45d9b07"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "611633163fad5421198e1c95fe8870060eb48042", "filename": "src/librustc_mir/interpret/const_eval.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2f2c90e733a703f69cf13ae79ec623901d42ba2c/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2c90e733a703f69cf13ae79ec623901d42ba2c/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs?ref=2f2c90e733a703f69cf13ae79ec623901d42ba2c", "patch": "@@ -235,13 +235,15 @@ impl<'mir, 'tcx> super::Machine<'mir, 'tcx> for CompileTimeEvaluator {\n         }\n         let mir = match ecx.load_mir(instance.def) {\n             Ok(mir) => mir,\n-            Err(EvalError { kind: EvalErrorKind::NoMirFor(path), .. }) => {\n-                return Err(\n-                    ConstEvalError::NeedsRfc(format!(\"calling extern function `{}`\", path))\n-                        .into(),\n-                );\n+            Err(err) => {\n+                if let EvalErrorKind::NoMirFor(ref path) = *err.kind {\n+                    return Err(\n+                        ConstEvalError::NeedsRfc(format!(\"calling extern function `{}`\", path))\n+                            .into(),\n+                    );\n+                }\n+                return Err(err);\n             }\n-            Err(other) => return Err(other),\n         };\n         let (return_place, return_to_block) = match destination {\n             Some((place, block)) => (place, StackPopCleanup::Goto(block)),"}, {"sha": "eaa1bcb96a903c856bf81d7ce3770886935826f1", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2f2c90e733a703f69cf13ae79ec623901d42ba2c/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2c90e733a703f69cf13ae79ec623901d42ba2c/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=2f2c90e733a703f69cf13ae79ec623901d42ba2c", "patch": "@@ -1513,11 +1513,12 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n                 write!(msg, \":\").unwrap();\n \n                 match self.stack[frame].get_local(local) {\n-                    Err(EvalError { kind: EvalErrorKind::DeadLocal, .. }) => {\n-                        write!(msg, \" is dead\").unwrap();\n-                    }\n                     Err(err) => {\n-                        panic!(\"Failed to access local: {:?}\", err);\n+                        if let EvalErrorKind::DeadLocal = *err.kind {\n+                            write!(msg, \" is dead\").unwrap();\n+                        } else {\n+                            panic!(\"Failed to access local: {:?}\", err);\n+                        }\n                     }\n                     Ok(Value::ByRef(ptr, align)) => {\n                         match ptr.into_inner_primval() {\n@@ -1576,7 +1577,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n     }\n \n     pub fn report(&self, e: &mut EvalError, as_err: bool, explicit_span: Option<Span>) {\n-        if let EvalErrorKind::TypeckError = e.kind {\n+        if let EvalErrorKind::TypeckError = *e.kind {\n             return;\n         }\n         if let Some(ref mut backtrace) = e.backtrace {"}, {"sha": "640fd7cadab2cf61ec7a2ca22c74e04480416346", "filename": "src/librustc_mir/transform/instcombine.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f2c90e733a703f69cf13ae79ec623901d42ba2c/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2c90e733a703f69cf13ae79ec623901d42ba2c/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs?ref=2f2c90e733a703f69cf13ae79ec623901d42ba2c", "patch": "@@ -362,12 +362,8 @@ impl<'b, 'a, 'tcx:'b> OptimizationFinder<'b, 'a, 'tcx> {\n                             )\n                         } else {\n                             if overflow {\n-                                use rustc::mir::interpret::EvalError;\n                                 use rustc::mir::interpret::EvalErrorKind;\n-                                let mut err = EvalError {\n-                                    kind: EvalErrorKind::OverflowingMath,\n-                                    backtrace: None,\n-                                };\n+                                let mut err = EvalErrorKind::OverflowingMath.into();\n                                 ecx.report(&mut err, false, Some(span));\n                                 return None;\n                             }"}]}