{"sha": "5e77d5532681f74e57fda63900fe2792ec77457b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNzdkNTUzMjY4MWY3NGU1N2ZkYTYzOTAwZmUyNzkyZWM3NzQ1N2I=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-29T21:36:43Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-29T21:36:43Z"}, "message": "Merge pull request #4664 from thestinger/fuzzy\n\nFuzzyEq improvements", "tree": {"sha": "04d99f6e7fb443cc8d016f25ac19dbf3ea7b4c16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04d99f6e7fb443cc8d016f25ac19dbf3ea7b4c16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e77d5532681f74e57fda63900fe2792ec77457b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e77d5532681f74e57fda63900fe2792ec77457b", "html_url": "https://github.com/rust-lang/rust/commit/5e77d5532681f74e57fda63900fe2792ec77457b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e77d5532681f74e57fda63900fe2792ec77457b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ddb2a32c2de840211607c9b9e32a2aed4fa7e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ddb2a32c2de840211607c9b9e32a2aed4fa7e8", "html_url": "https://github.com/rust-lang/rust/commit/f1ddb2a32c2de840211607c9b9e32a2aed4fa7e8"}, {"sha": "e0728d41f2fe9c87e086dc5bcc0260dcffcb7517", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0728d41f2fe9c87e086dc5bcc0260dcffcb7517", "html_url": "https://github.com/rust-lang/rust/commit/e0728d41f2fe9c87e086dc5bcc0260dcffcb7517"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "ef893b067be89785fa8c46ce7650ee880aa0e2bf", "filename": "src/libstd/cmp.rs", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5e77d5532681f74e57fda63900fe2792ec77457b/src%2Flibstd%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e77d5532681f74e57fda63900fe2792ec77457b/src%2Flibstd%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcmp.rs?ref=5e77d5532681f74e57fda63900fe2792ec77457b", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #[forbid(deprecated_mode)];\n-/// Additional general-purpose comparison functionality.\n+//! Additional general-purpose comparison functionality.\n \n use core::f32;\n use core::f64;\n@@ -18,31 +18,49 @@ use core::float;\n const fuzzy_epsilon: float = 1.0e-6;\n \n pub trait FuzzyEq {\n-    pure fn fuzzy_eq(other: &self) -> bool;\n+    pure fn fuzzy_eq(&self, other: &self) -> bool;\n+    pure fn fuzzy_eq_eps(&self, other: &self, epsilon: &self) -> bool;\n }\n \n impl float: FuzzyEq {\n-    pure fn fuzzy_eq(other: &float) -> bool {\n-        return float::abs(self - *other) < fuzzy_epsilon;\n+    pure fn fuzzy_eq(&self, other: &float) -> bool {\n+        self.fuzzy_eq_eps(other, fuzzy_epsilon)\n+    }\n+\n+    pure fn fuzzy_eq_eps(&self, other: &float, epsilon: &float) -> bool {\n+        float::abs(*self - *other) < *epsilon\n     }\n }\n \n impl f32: FuzzyEq {\n-    pure fn fuzzy_eq(other: &f32) -> bool {\n-        return f32::abs(self - *other) < (fuzzy_epsilon as f32);\n+    pure fn fuzzy_eq(&self, other: &f32) -> bool {\n+        self.fuzzy_eq_eps(other, fuzzy_epsilon as f32)\n+    }\n+\n+    pure fn fuzzy_eq_eps(&self, other: &f32, epsilon: &f32) -> bool {\n+        f32::abs(*self - *other) < *epsilon\n     }\n }\n \n impl f64: FuzzyEq {\n-    pure fn fuzzy_eq(other: &f64) -> bool {\n-        return f64::abs(self - *other) < (fuzzy_epsilon as f64);\n+    pure fn fuzzy_eq(&self, other: &f64) -> bool {\n+        self.fuzzy_eq_eps(other, fuzzy_epsilon as f64)\n+    }\n+\n+    pure fn fuzzy_eq_eps(&self, other: &f64, epsilon: &f64) -> bool {\n+        f64::abs(*self - *other) < *epsilon\n     }\n }\n \n #[test]\n fn test_fuzzy_equals() {\n-    assert ((&1.0).fuzzy_eq(&1.0));\n-    assert ((&1.0f32).fuzzy_eq(&1.0f32));\n-    assert ((&1.0f64).fuzzy_eq(&1.0f64));\n+    assert (&1.0).fuzzy_eq(&1.0);\n+    assert (&1.0f32).fuzzy_eq(&1.0f32);\n+    assert (&1.0f64).fuzzy_eq(&1.0f64);\n }\n \n+#[test]\n+fn test_fuzzy_eq_eps() {\n+    assert (&1.2).fuzzy_eq_eps(&0.9, &0.5);\n+    assert !(&1.5).fuzzy_eq_eps(&0.9, &0.5);\n+}"}]}