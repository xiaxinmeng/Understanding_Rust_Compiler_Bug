{"sha": "eb4ba58572bfaec9a9ca843b368e05564d9b1cb0", "node_id": "C_kwDOAAsO6NoAKGViNGJhNTg1NzJiZmFlYzlhOWNhODQzYjM2OGUwNTU2NGQ5YjFjYjA", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-10-02T02:07:22Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-10-02T02:07:22Z"}, "message": "perf: only check for rustc_trivial_field_reads attribute on traits\n\nThe checks removed here caused a small perf regression:\nhttps://github.com/rust-lang/rust/pull/88824#issuecomment-932664761\n\nSince the attribute is currently only applied to traits, I don't think\nit's worth keeping the additional checks for now.\nIf/when we decide to apply the attribute somewhere else, we can\n(partially) revert this and evaluate if the perf impact is acceptable.", "tree": {"sha": "33981148743e9c1efa776fa3b12ccaf84be0bde6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33981148743e9c1efa776fa3b12ccaf84be0bde6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb4ba58572bfaec9a9ca843b368e05564d9b1cb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4ba58572bfaec9a9ca843b368e05564d9b1cb0", "html_url": "https://github.com/rust-lang/rust/commit/eb4ba58572bfaec9a9ca843b368e05564d9b1cb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb4ba58572bfaec9a9ca843b368e05564d9b1cb0/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c02371c442f811878ab3a0f5a813402b6dfd45d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c02371c442f811878ab3a0f5a813402b6dfd45d2", "html_url": "https://github.com/rust-lang/rust/commit/c02371c442f811878ab3a0f5a813402b6dfd45d2"}], "stats": {"total": 24, "additions": 1, "deletions": 23}, "files": [{"sha": "c6f34aad97814fbca274e2bd4d3ad988ebfd4660", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/eb4ba58572bfaec9a9ca843b368e05564d9b1cb0/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4ba58572bfaec9a9ca843b368e05564d9b1cb0/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=eb4ba58572bfaec9a9ca843b368e05564d9b1cb0", "patch": "@@ -254,31 +254,11 @@ impl<'tcx> MarkSymbolVisitor<'tcx> {\n \n         let has_attr = |def_id| self.tcx.has_attr(def_id, sym::rustc_trivial_field_reads);\n \n-        if has_attr(def_id) {\n-            return true;\n-        }\n-\n         if let Some(impl_of) = self.tcx.impl_of_method(def_id) {\n-            if has_attr(impl_of) {\n-                return true;\n-            }\n-\n             if let Some(trait_of) = self.tcx.trait_id_of_impl(impl_of) {\n                 if has_attr(trait_of) {\n                     return true;\n                 }\n-\n-                if let Some(method_ident) = self.tcx.opt_item_name(def_id) {\n-                    if let Some(trait_method) = self\n-                        .tcx\n-                        .associated_items(trait_of)\n-                        .find_by_name_and_kind(self.tcx, method_ident, ty::AssocKind::Fn, trait_of)\n-                    {\n-                        if has_attr(trait_method.def_id) {\n-                            return true;\n-                        }\n-                    }\n-                }\n             }\n         } else if let Some(trait_of) = self.tcx.trait_of_item(def_id) {\n             if has_attr(trait_of) {\n@@ -291,9 +271,7 @@ impl<'tcx> MarkSymbolVisitor<'tcx> {\n \n     fn visit_node(&mut self, node: Node<'tcx>) {\n         if let Some(item_def_id) = match node {\n-            Node::Item(hir::Item { def_id, .. })\n-            | Node::ForeignItem(hir::ForeignItem { def_id, .. })\n-            | Node::TraitItem(hir::TraitItem { def_id, .. })\n+            Node::TraitItem(hir::TraitItem { def_id, .. })\n             | Node::ImplItem(hir::ImplItem { def_id, .. }) => Some(def_id.to_def_id()),\n             _ => None,\n         } {"}]}