{"sha": "b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZjYxZmRkZGUwMzhiNmRjODI3NmI2ZWEyYjU2OWEyZjE4YjJhOWY=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-31T04:06:32Z"}, "committer": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-31T04:21:57Z"}, "message": "Repair RIMOV damage to benchmarks", "tree": {"sha": "b0a3d212f4c01e49db5c02f2800a0afd7d3e4e7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0a3d212f4c01e49db5c02f2800a0afd7d3e4e7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f", "html_url": "https://github.com/rust-lang/rust/commit/b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df04bd6c6cf639c6889896c6e4ea6d2c89ea4fcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/df04bd6c6cf639c6889896c6e4ea6d2c89ea4fcf", "html_url": "https://github.com/rust-lang/rust/commit/df04bd6c6cf639c6889896c6e4ea6d2c89ea4fcf"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c9430cf7e385fc73b96db5dec93825b93bdd5f21", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f", "patch": "@@ -121,7 +121,7 @@ fn gen_search_keys(graph: graph, n: uint) -> ~[node_id] {\n  */\n fn bfs(graph: graph, key: node_id) -> bfs_result {\n     let mut marks : ~[node_id] \n-        = vec::cast_to_mut(vec::from_elem(vec::len(graph), -1i64));\n+        = vec::from_elem(vec::len(graph), -1i64);\n \n     let Q = deque::create();\n \n@@ -140,7 +140,7 @@ fn bfs(graph: graph, key: node_id) -> bfs_result {\n         };\n     }\n \n-    vec::cast_from_mut(move marks)\n+    move marks\n }\n \n /**"}, {"sha": "91ef3f3f7ab4dadfdfd64571f3b9729f36e2dd8f", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=b5f61fddde038b6dc8276b6ea2b569a2f18b2a9f", "patch": "@@ -41,8 +41,8 @@ enum grid_t { grid_ctor(grid), }\n fn read_grid(f: io::Reader) -> grid_t {\n     assert f.read_line() == ~\"9,9\"; /* assert first line is exactly \"9,9\" */\n \n-    let g = vec::from_fn(10u, {|_i|\n-        vec::cast_to_mut(vec::from_elem(10u, 0 as u8))\n+    let mut g = vec::from_fn(10u, {|_i|\n+        vec::from_elem(10u, 0 as u8)\n     });\n     while !f.eof() {\n         let comps = str::split_char(str::trim(f.read_line()), ',');\n@@ -57,7 +57,7 @@ fn read_grid(f: io::Reader) -> grid_t {\n \n // solve sudoku grid\n fn solve_grid(g: grid_t) {\n-    fn next_color(g: grid, row: u8, col: u8, start_color: u8) -> bool {\n+    fn next_color(mut g: grid, row: u8, col: u8, start_color: u8) -> bool {\n         if start_color < 10u8 {\n             // colors not yet used\n             let avail = bitv::Bitv(10u, false);\n@@ -141,8 +141,8 @@ fn main() {\n     let grid = if vec::len(args) == 1u {\n         // FIXME create sudoku inline since nested vec consts dont work yet\n         // (#3733)\n-        let g = vec::from_fn(10u, |_i| {\n-            vec::cast_to_mut(vec::from_elem(10u, 0 as u8))\n+        let mut g = vec::from_fn(10u, |_i| {\n+            vec::from_elem(10u, 0 as u8)\n         });\n         g[0][1] = 4u8;\n         g[0][3] = 6u8;"}]}