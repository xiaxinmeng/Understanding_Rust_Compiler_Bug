{"sha": "d27e55c5d81eaee11ff2d414793cb7278d58d578", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyN2U1NWM1ZDgxZWFlZTExZmYyZDQxNDc5M2NiNzI3OGQ1OGQ1Nzg=", "commit": {"author": {"name": "petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-07-08T10:35:17Z"}, "committer": {"name": "petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-07-08T10:35:17Z"}, "message": "Stabilize `FnOnce::Output` + Fix rebase", "tree": {"sha": "3bbc035f54cdc0e4728c26582306f24956a77a2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bbc035f54cdc0e4728c26582306f24956a77a2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d27e55c5d81eaee11ff2d414793cb7278d58d578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d27e55c5d81eaee11ff2d414793cb7278d58d578", "html_url": "https://github.com/rust-lang/rust/commit/d27e55c5d81eaee11ff2d414793cb7278d58d578", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d27e55c5d81eaee11ff2d414793cb7278d58d578/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "390b639e59adbb35b491f3080a07ba7b2ed84072", "url": "https://api.github.com/repos/rust-lang/rust/commits/390b639e59adbb35b491f3080a07ba7b2ed84072", "html_url": "https://github.com/rust-lang/rust/commit/390b639e59adbb35b491f3080a07ba7b2ed84072"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "9347ac2a8c82f0eb40d953f9318c39018ee72fa7", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=d27e55c5d81eaee11ff2d414793cb7278d58d578", "patch": "@@ -1929,7 +1929,7 @@ pub trait FnMut<Args> : FnOnce<Args> {\n #[fundamental] // so that regex can rely that `&str: !FnMut`\n pub trait FnOnce<Args> {\n     /// The returned type after the call operator is used.\n-    #[unstable(feature = \"fn_traits\", issue = \"29625\")]\n+    #[stable(feature = \"fn_once_output\", since = \"1.12.0\")]\n     type Output;\n \n     /// This is called when the call operator is used."}, {"sha": "9079cc8ccb122b86ecf41654a760b6c0e595ef08", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=d27e55c5d81eaee11ff2d414793cb7278d58d578", "patch": "@@ -2287,7 +2287,7 @@ impl<'a> Resolver<'a> {\n                                          .and_then(|resolution| {\n                         let always_binding = !pat_src.is_refutable() || opt_pat.is_some() ||\n                                              bmode != BindingMode::ByValue(Mutability::Immutable);\n-                        match def {\n+                        match resolution.base_def {\n                             Def::Struct(..) | Def::Variant(..) |\n                             Def::Const(..) | Def::AssociatedConst(..) if !always_binding => {\n                                 // A constant, unit variant, etc pattern.\n@@ -2296,12 +2296,11 @@ impl<'a> Resolver<'a> {\n                             Def::Struct(..) | Def::Variant(..) |\n                             Def::Const(..) | Def::AssociatedConst(..) | Def::Static(..) => {\n                                 // A fresh binding that shadows something unacceptable.\n-                                let kind_name = PathResolution::new(def).kind_name();\n                                 resolve_error(\n                                     self,\n                                     ident.span,\n                                     ResolutionError::BindingShadowsSomethingUnacceptable(\n-                                        pat_src.descr(), kind_name, ident.node.name)\n+                                        pat_src.descr(), resolution.kind_name(), ident.node.name)\n                                 );\n                                 None\n                             }"}, {"sha": "c5557cee7cc1dce3d01d76fc8cf86418662fa93c", "filename": "src/test/compile-fail/associated-types/cache/project-fn-ret-contravariant.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Ftest%2Fcompile-fail%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Ftest%2Fcompile-fail%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.rs?ref=d27e55c5d81eaee11ff2d414793cb7278d58d578", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(fn_traits)]\n #![feature(unboxed_closures)]\n #![feature(rustc_attrs)]\n "}, {"sha": "a15422e42d94a339f617e675ff3aa590a65408f2", "filename": "src/test/compile-fail/associated-types/cache/project-fn-ret-invariant.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Ftest%2Fcompile-fail%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Ftest%2Fcompile-fail%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.rs?ref=d27e55c5d81eaee11ff2d414793cb7278d58d578", "patch": "@@ -18,7 +18,6 @@\n \n // revisions: ok oneuse transmute krisskross\n \n-#![feature(fn_traits)]\n #![allow(dead_code, unused_variables)]\n \n use std::marker::PhantomData;"}, {"sha": "f44a535e8176e25aa895dfccc16c0694348eb74c", "filename": "src/test/run-pass/issue-28550.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Ftest%2Frun-pass%2Fissue-28550.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27e55c5d81eaee11ff2d414793cb7278d58d578/src%2Ftest%2Frun-pass%2Fissue-28550.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-28550.rs?ref=d27e55c5d81eaee11ff2d414793cb7278d58d578", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(fn_traits)]\n-\n struct A<F: FnOnce()->T,T>(F::Output);\n struct B<F: FnOnce()->T,T>(A<F,T>);\n "}]}