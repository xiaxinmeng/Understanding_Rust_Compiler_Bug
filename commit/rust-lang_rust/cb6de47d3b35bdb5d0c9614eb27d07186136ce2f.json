{"sha": "cb6de47d3b35bdb5d0c9614eb27d07186136ce2f", "node_id": "C_kwDOAAsO6NoAKGNiNmRlNDdkM2IzNWJkYjVkMGM5NjE0ZWIyN2QwNzE4NjEzNmNlMmY", "commit": {"author": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-01-31T18:56:55Z"}, "committer": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-02-02T01:20:12Z"}, "message": "Move ignore-pass to large-arg test", "tree": {"sha": "bb749940fb6e84f1e558353b0b0470f82d5f63d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb749940fb6e84f1e558353b0b0470f82d5f63d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f", "html_url": "https://github.com/rust-lang/rust/commit/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f/comments", "author": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e56265ea04a4082283f6855903d2caf9eb2b7a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e56265ea04a4082283f6855903d2caf9eb2b7a7", "html_url": "https://github.com/rust-lang/rust/commit/7e56265ea04a4082283f6855903d2caf9eb2b7a7"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "6a545c6a8aa67adcfbeffd8307f1ea207d343f3f", "filename": "tests/ui/async-await/future-sizes/future-as-arg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Ffuture-as-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Ffuture-as-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Ffuture-as-arg.rs?ref=cb6de47d3b35bdb5d0c9614eb27d07186136ce2f", "patch": "@@ -1,6 +1,5 @@\n // edition: 2021\n // run-pass\n-// ignore-pass\n \n async fn test(_arg: [u8; 8192]) {}\n "}, {"sha": "7e7ff9d8d00e841e97ab81e74fb09b55aa1d3279", "filename": "tests/ui/async-await/future-sizes/large-arg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.rs?ref=cb6de47d3b35bdb5d0c9614eb27d07186136ce2f", "patch": "@@ -1,6 +1,7 @@\n // compile-flags: -Z print-type-sizes --crate-type=lib\n // edition: 2021\n // build-pass\n+// ignore-pass\n \n pub async fn test() {\n     let _ = a([0u8; 1024]).await;"}, {"sha": "ccc91a1d19beb32bb24c95f9021fce1acf363d11", "filename": "tests/ui/async-await/future-sizes/large-arg.stdout", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/cb6de47d3b35bdb5d0c9614eb27d07186136ce2f/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.stdout?ref=cb6de47d3b35bdb5d0c9614eb27d07186136ce2f", "patch": "@@ -1,11 +1,11 @@\n-print-type-size type: `[async fn body@$DIR/large-arg.rs:5:21: 7:2]`: 3076 bytes, alignment: 1 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:6:21: 8:2]`: 3076 bytes, alignment: 1 bytes\n print-type-size     discriminant: 1 bytes\n print-type-size     variant `Suspend0`: 3075 bytes\n print-type-size         field `.__awaitee`: 3075 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Unresumed`: 0 bytes\n print-type-size     variant `Returned`: 0 bytes\n print-type-size     variant `Panicked`: 0 bytes\n-print-type-size type: `[async fn body@$DIR/large-arg.rs:9:30: 11:2]`: 3075 bytes, alignment: 1 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:10:30: 12:2]`: 3075 bytes, alignment: 1 bytes\n print-type-size     discriminant: 1 bytes\n print-type-size     variant `Suspend0`: 3074 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n@@ -16,13 +16,13 @@ print-type-size     variant `Returned`: 1024 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Panicked`: 1024 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n-print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:9:30: 11:2]>`: 3075 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:10:30: 12:2]>`: 3075 bytes, alignment: 1 bytes\n print-type-size     field `.value`: 3075 bytes\n-print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:9:30: 11:2]>`: 3075 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:10:30: 12:2]>`: 3075 bytes, alignment: 1 bytes\n print-type-size     variant `MaybeUninit`: 3075 bytes\n print-type-size         field `.uninit`: 0 bytes\n print-type-size         field `.value`: 3075 bytes\n-print-type-size type: `[async fn body@$DIR/large-arg.rs:12:26: 14:2]`: 2050 bytes, alignment: 1 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:13:26: 15:2]`: 2050 bytes, alignment: 1 bytes\n print-type-size     discriminant: 1 bytes\n print-type-size     variant `Suspend0`: 2049 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n@@ -33,23 +33,23 @@ print-type-size     variant `Returned`: 1024 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Panicked`: 1024 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n-print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:12:26: 14:2]>`: 2050 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:13:26: 15:2]>`: 2050 bytes, alignment: 1 bytes\n print-type-size     field `.value`: 2050 bytes\n-print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:12:26: 14:2]>`: 2050 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:13:26: 15:2]>`: 2050 bytes, alignment: 1 bytes\n print-type-size     variant `MaybeUninit`: 2050 bytes\n print-type-size         field `.uninit`: 0 bytes\n print-type-size         field `.value`: 2050 bytes\n-print-type-size type: `[async fn body@$DIR/large-arg.rs:15:26: 17:2]`: 1025 bytes, alignment: 1 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:16:26: 18:2]`: 1025 bytes, alignment: 1 bytes\n print-type-size     discriminant: 1 bytes\n print-type-size     variant `Unresumed`: 1024 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Returned`: 1024 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n print-type-size     variant `Panicked`: 1024 bytes\n print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n-print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:15:26: 17:2]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:16:26: 18:2]>`: 1025 bytes, alignment: 1 bytes\n print-type-size     field `.value`: 1025 bytes\n-print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:15:26: 17:2]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:16:26: 18:2]>`: 1025 bytes, alignment: 1 bytes\n print-type-size     variant `MaybeUninit`: 1025 bytes\n print-type-size         field `.uninit`: 0 bytes\n print-type-size         field `.value`: 1025 bytes"}]}