{"sha": "1b676fb7603cd2aa4e0506cb5b67d48c9da1123f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNjc2ZmI3NjAzY2QyYWE0ZTA1MDZjYjViNjdkNDhjOWRhMTEyM2Y=", "commit": {"author": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-08-27T21:49:17Z"}, "committer": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-09-05T16:18:57Z"}, "message": "don't leave unwanted temporary files with --emit=ir/asm", "tree": {"sha": "3d0ed78979ca00ee66dce2b5aab6a1ab3c0a39ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d0ed78979ca00ee66dce2b5aab6a1ab3c0a39ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f", "html_url": "https://github.com/rust-lang/rust/commit/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f/comments", "author": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5a0b700c64639043bce0a2ba0a8b40dd853d469", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5a0b700c64639043bce0a2ba0a8b40dd853d469", "html_url": "https://github.com/rust-lang/rust/commit/b5a0b700c64639043bce0a2ba0a8b40dd853d469"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "d87dd84bb32b20031b963e7926b59858df46bb90", "filename": "src/librustc/back/write.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f/src%2Flibrustc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f/src%2Flibrustc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fwrite.rs?ref=1b676fb7603cd2aa4e0506cb5b67d48c9da1123f", "patch": "@@ -588,12 +588,15 @@ pub fn run_passes(sess: &Session,\n             //    to copy `foo.0.x` to `foo.x`.\n             fs::copy(&crate_output.with_extension(ext),\n                      &crate_output.path(output_type)).unwrap();\n+            if !sess.opts.cg.save_temps {\n+                // The user just wants `foo.x`, not `foo.0.x`.\n+                remove(sess, &crate_output.with_extension(ext));\n+            }\n         } else {\n             if crate_output.single_output_file.is_some() {\n                 // 2) Multiple codegen units, with `-o some_name`.  We have\n                 //    no good solution for this case, so warn the user.\n-                sess.warn(format!(\"ignoring specified output filename \\\n-                                   because multiple .{} files were produced\",\n+                sess.warn(format!(\"ignoring -o because multiple .{} files were produced\",\n                                   ext).as_slice());\n             } else {\n                 // 3) Multiple codegen units, but no `-o some_name`.  We\n@@ -670,7 +673,7 @@ pub fn run_passes(sess: &Session,\n     //  - crate.metadata.bc\n     //  - crate.metadata.o\n     //  - crate.o (linked from crate.##.o)\n-    //  - crate.bc (copied from crate.0.bc, or an empty bitcode file)\n+    //  - crate.bc (copied from crate.0.bc)\n     // We may create additional files if requested by the user (through\n     // `-C save-temps` or `--emit=` flags).\n "}, {"sha": "fed071d1a43c28a27435a5169d058609cc829291", "filename": "src/test/run-make/output-type-permutations/Makefile", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile?ref=1b676fb7603cd2aa4e0506cb5b67d48c9da1123f", "patch": "@@ -5,40 +5,69 @@ all:\n \t$(call REMOVE_RLIBS,bar)\n \t$(call REMOVE_DYLIBS,bar)\n \trm $(TMPDIR)/$(call STATICLIB_GLOB,bar)\n+\t# Check that $(TMPDIR) is empty.\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --crate-type=bin\n \trm $(TMPDIR)/$(call BIN,bar)\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --emit=asm,ir,bc,obj,link\n \trm $(TMPDIR)/bar.ll\n \trm $(TMPDIR)/bar.bc\n \trm $(TMPDIR)/bar.s\n \trm $(TMPDIR)/bar.o\n \trm $(TMPDIR)/$(call BIN,bar)\n-\t$(RUSTC) foo.rs --emit=asm,ir,bc,obj,link --crate-type=staticlib\n-\trm $(TMPDIR)/bar.ll\n-\trm $(TMPDIR)/bar.s\n-\trm $(TMPDIR)/bar.o\n-\trm $(TMPDIR)/$(call STATICLIB_GLOB,bar)\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --emit=asm -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --emit=bc -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --emit=ir -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --emit=obj -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --emit=link -o $(TMPDIR)/foo\n \trm $(TMPDIR)/$(call BIN,foo)\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --crate-type=rlib -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --crate-type=dylib -o $(TMPDIR)/foo\n \trm $(TMPDIR)/$(call BIN,foo)  # FIXME 13794\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --crate-type=staticlib -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n \t$(RUSTC) foo.rs --crate-type=bin -o $(TMPDIR)/foo\n \trm $(TMPDIR)/$(call BIN,foo)\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n+\n+\t$(RUSTC) foo.rs --emit=asm,ir,bc,obj,link --crate-type=staticlib\n+\trm $(TMPDIR)/bar.ll\n+\trm $(TMPDIR)/bar.s\n+\trm $(TMPDIR)/bar.o\n+\trm $(TMPDIR)/$(call STATICLIB_GLOB,bar)\n \tmv $(TMPDIR)/bar.bc $(TMPDIR)/foo.bc\n+\t# Don't check that the $(TMPDIR) is empty - we left `foo.bc` for later\n+\t# comparison.\n+\n \t$(RUSTC) foo.rs --emit=bc,link --crate-type=rlib\n \tcmp $(TMPDIR)/foo.bc $(TMPDIR)/bar.bc\n \trm $(TMPDIR)/bar.bc\n \trm $(TMPDIR)/foo.bc\n \t$(call REMOVE_RLIBS,bar)\n+\t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]"}]}