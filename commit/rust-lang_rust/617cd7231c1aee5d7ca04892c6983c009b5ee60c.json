{"sha": "617cd7231c1aee5d7ca04892c6983c009b5ee60c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxN2NkNzIzMWMxYWVlNWQ3Y2EwNDg5MmM2OTgzYzAwOWI1ZWU2MGM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-04-19T17:28:41Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-04-19T17:28:41Z"}, "message": "Remove SyntaxRewriter usage in eager::eager_macro_recur", "tree": {"sha": "19db08c5ce035ef41df066d17191b1c40cc96233", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19db08c5ce035ef41df066d17191b1c40cc96233"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/617cd7231c1aee5d7ca04892c6983c009b5ee60c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/617cd7231c1aee5d7ca04892c6983c009b5ee60c", "html_url": "https://github.com/rust-lang/rust/commit/617cd7231c1aee5d7ca04892c6983c009b5ee60c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/617cd7231c1aee5d7ca04892c6983c009b5ee60c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f1a220f32220cd4a664ca1adac5eb36e9eb33b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f1a220f32220cd4a664ca1adac5eb36e9eb33b2", "html_url": "https://github.com/rust-lang/rust/commit/3f1a220f32220cd4a664ca1adac5eb36e9eb33b2"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "f413a63f7a74aa97c19618026b48524604ac386c", "filename": "crates/hir_expand/src/eager.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/617cd7231c1aee5d7ca04892c6983c009b5ee60c/crates%2Fhir_expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/617cd7231c1aee5d7ca04892c6983c009b5ee60c/crates%2Fhir_expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Feager.rs?ref=617cd7231c1aee5d7ca04892c6983c009b5ee60c", "patch": "@@ -29,7 +29,7 @@ use base_db::CrateId;\n use mbe::ExpandResult;\n use parser::FragmentKind;\n use std::sync::Arc;\n-use syntax::{algo::SyntaxRewriter, SyntaxNode};\n+use syntax::{ted, SyntaxNode};\n \n pub struct ErrorEmitted {\n     _private: (),\n@@ -191,10 +191,10 @@ fn eager_macro_recur(\n     macro_resolver: &dyn Fn(ast::Path) -> Option<MacroDefId>,\n     mut diagnostic_sink: &mut dyn FnMut(mbe::ExpandError),\n ) -> Result<SyntaxNode, ErrorEmitted> {\n-    let original = curr.value.clone();\n+    let original = curr.value.clone().clone_for_update();\n \n-    let children = curr.value.descendants().filter_map(ast::MacroCall::cast);\n-    let mut rewriter = SyntaxRewriter::default();\n+    let children = original.descendants().filter_map(ast::MacroCall::cast);\n+    let mut replacements = Vec::new();\n \n     // Collect replacement\n     for child in children {\n@@ -213,6 +213,7 @@ fn eager_macro_recur(\n                 .into();\n                 db.parse_or_expand(id.as_file())\n                     .expect(\"successful macro expansion should be parseable\")\n+                    .clone_for_update()\n             }\n             MacroDefKind::Declarative(_)\n             | MacroDefKind::BuiltIn(..)\n@@ -226,15 +227,14 @@ fn eager_macro_recur(\n             }\n         };\n \n-        // check if the whole original sytnax is replaced\n-        // Note that SyntaxRewriter cannot replace the root node itself\n+        // check if the whole original syntax is replaced\n         if child.syntax() == &original {\n             return Ok(insert);\n         }\n \n-        rewriter.replace(child.syntax(), &insert);\n+        replacements.push((child, insert));\n     }\n \n-    let res = rewriter.rewrite(&original);\n-    Ok(res)\n+    replacements.into_iter().rev().for_each(|(old, new)| ted::replace(old.syntax(), new));\n+    Ok(original)\n }"}]}