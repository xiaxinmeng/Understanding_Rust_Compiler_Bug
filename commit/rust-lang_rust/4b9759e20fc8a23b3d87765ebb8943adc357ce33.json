{"sha": "4b9759e20fc8a23b3d87765ebb8943adc357ce33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiOTc1OWUyMGZjOGEyM2IzZDg3NzY1ZWJiODk0M2FkYzM1N2NlMzM=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-07-20T00:21:28Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-07-24T00:06:32Z"}, "message": "Add a to_owned_vec method to IteratorUtil.", "tree": {"sha": "79160b04176c9234ed0c5c7d8092584014ebf8c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79160b04176c9234ed0c5c7d8092584014ebf8c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b9759e20fc8a23b3d87765ebb8943adc357ce33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9759e20fc8a23b3d87765ebb8943adc357ce33", "html_url": "https://github.com/rust-lang/rust/commit/4b9759e20fc8a23b3d87765ebb8943adc357ce33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b9759e20fc8a23b3d87765ebb8943adc357ce33/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89c4af0ea959dd911eb4a2fe18b9f1e95ef77b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/89c4af0ea959dd911eb4a2fe18b9f1e95ef77b8c", "html_url": "https://github.com/rust-lang/rust/commit/89c4af0ea959dd911eb4a2fe18b9f1e95ef77b8c"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "1aca34894b4fc100da864825ea07ba5ac21233e9", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4b9759e20fc8a23b3d87765ebb8943adc357ce33/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b9759e20fc8a23b3d87765ebb8943adc357ce33/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=4b9759e20fc8a23b3d87765ebb8943adc357ce33", "patch": "@@ -333,6 +333,18 @@ pub trait IteratorUtil<A> {\n     /// ~~~\n     fn collect<B: FromIterator<A, Self>>(&mut self) -> B;\n \n+    /// Loops through the entire iterator, collecting all of the elements into\n+    /// a unique vector. This is simply collect() specialized for vectors.\n+    ///\n+    /// # Example\n+    ///\n+    /// ~~~ {.rust}\n+    /// let a = [1, 2, 3, 4, 5];\n+    /// let b: ~[int] = a.iter().transform(|&x| x).to_owned_vec();\n+    /// assert!(a == b);\n+    /// ~~~\n+    fn to_owned_vec(&mut self) -> ~[A];\n+\n     /// Loops through `n` iterations, returning the `n`th element of the\n     /// iterator.\n     ///\n@@ -529,6 +541,11 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n         FromIterator::from_iterator(self)\n     }\n \n+    #[inline]\n+    fn to_owned_vec(&mut self) -> ~[A] {\n+        self.collect()\n+    }\n+\n     /// Return the `n`th item yielded by an iterator.\n     #[inline]\n     fn nth(&mut self, mut n: uint) -> Option<A> {"}]}