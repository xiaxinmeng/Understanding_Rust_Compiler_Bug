{"sha": "89666d9818fab0bf970403d41848c22985f55d76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NjY2ZDk4MThmYWIwYmY5NzA0MDNkNDE4NDhjMjI5ODVmNTVkNzY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-24T17:15:23Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-03-02T19:25:08Z"}, "message": "Implement CastKind::ClosureFnPointer", "tree": {"sha": "fb6b290828dd253ee2c40b542a3fbb3273df8057", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb6b290828dd253ee2c40b542a3fbb3273df8057"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89666d9818fab0bf970403d41848c22985f55d76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89666d9818fab0bf970403d41848c22985f55d76", "html_url": "https://github.com/rust-lang/rust/commit/89666d9818fab0bf970403d41848c22985f55d76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89666d9818fab0bf970403d41848c22985f55d76/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25f3ef5ff998eea060e73be04bfe88cbedf57dc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/25f3ef5ff998eea060e73be04bfe88cbedf57dc9", "html_url": "https://github.com/rust-lang/rust/commit/25f3ef5ff998eea060e73be04bfe88cbedf57dc9"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "e07dcf6ba9e7dde4aeeb41e20d3ec26fc9359138", "filename": "example/mini_core_hello_world.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89666d9818fab0bf970403d41848c22985f55d76/example%2Fmini_core_hello_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89666d9818fab0bf970403d41848c22985f55d76/example%2Fmini_core_hello_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core_hello_world.rs?ref=89666d9818fab0bf970403d41848c22985f55d76", "patch": "@@ -190,4 +190,6 @@ fn main() {\n         [] => assert_eq!(0u32, 1),\n         [_, ref y..] => assert_eq!(&x[1] as *const u32 as usize, &y[0] as *const u32 as usize),\n     }\n+\n+    assert_eq!(((|()| 42u8) as fn(()) -> u8)(()), 42);\n }"}, {"sha": "0c78613c2450c94dd3f5125fcb8dd81e2f99eff9", "filename": "src/base.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/89666d9818fab0bf970403d41848c22985f55d76/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89666d9818fab0bf970403d41848c22985f55d76/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=89666d9818fab0bf970403d41848c22985f55d76", "patch": "@@ -586,8 +586,24 @@ fn trans_stmt<'a, 'tcx: 'a>(\n                         _ => unimpl!(\"rval misc {:?} {:?}\", from_ty, to_ty),\n                     }\n                 }\n-                Rvalue::Cast(CastKind::ClosureFnPointer, operand, ty) => {\n-                    unimplemented!(\"rval closure_fn_ptr {:?} {:?}\", operand, ty)\n+                Rvalue::Cast(CastKind::ClosureFnPointer, operand, _ty) => {\n+                    let operand = trans_operand(fx, operand);\n+                    match operand.layout().ty.sty {\n+                        ty::Closure(def_id, substs) => {\n+                            let instance = rustc_mir::monomorphize::resolve_closure(\n+                                fx.tcx,\n+                                def_id,\n+                                substs,\n+                                ty::ClosureKind::FnOnce,\n+                            );\n+                            let func_ref = fx.get_function_ref(instance);\n+                            let func_addr = fx.bcx.ins().func_addr(fx.pointer_type, func_ref);\n+                            lval.write_cvalue(fx, CValue::ByVal(func_addr, lval.layout()));\n+                        }\n+                        _ => {\n+                            bug!(\"{} cannot be cast to a fn ptr\", operand.layout().ty)\n+                        }\n+                    }\n                 }\n                 Rvalue::Cast(CastKind::Unsize, operand, _ty) => {\n                     let operand = trans_operand(fx, operand);"}]}