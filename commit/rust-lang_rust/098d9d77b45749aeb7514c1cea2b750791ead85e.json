{"sha": "098d9d77b45749aeb7514c1cea2b750791ead85e", "node_id": "C_kwDOAAsO6NoAKDA5OGQ5ZDc3YjQ1NzQ5YWViNzUxNGMxY2VhMmI3NTA3OTFlYWQ4NWU", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-02-14T08:34:14Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-02-14T08:34:14Z"}, "message": "Search raw identifiers without prefix", "tree": {"sha": "8a98d8cf9aa3d7a85d0b595cad4b22e5aeb6e881", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a98d8cf9aa3d7a85d0b595cad4b22e5aeb6e881"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/098d9d77b45749aeb7514c1cea2b750791ead85e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmPrR4YACgkQ4laYqTBY\nYXHPXw//c34/4imkNrgKmJ6GFM5+hOcPcCdt6Fl/udU2vNJ0XCh6x1DM5KU1JCWc\nvA620xfwLlK8axnWHWWjW/uywyqGlg/z/SDMvvQhtGUFmwezFXOVFKPbKeHkOphc\nX/8X60zNOPAd67xypW/4mrWD8sAq0qdmrWS+3lFVL66A0SL7SUXL1pQTHebjGj0a\nWZOxbw1irNhVPjGi3ST03Ytj3xmZWCwes7qcMRu80LATZQ7BkEslWOvPUO/BYLLg\nM3zTjxD7a88iKXvbICPGdXORju67TcTMET7dvcrciTBcuESBesuvlaGhcv2RNZIt\n2X7dxO2zq46YMUa7bXLEKzH3iuvK2HYXTTuIhoLjtjpTu0aP10pRsVMih+3vjRn4\nvUguvEhSHowcIyoJYdgKhY9XaE60w8IAzJYTXaKogJRscFuDw3cYDC1MSTLMFqja\nnoHl/hYTy/N+SEndOJll8ne+mnAL6aIV7Iz3C4FltchWAkTvkzcEQe4tYHxstAdX\nbpd1vlmNWmh6rtaZDgxuFgRWuE0fVueaJgGbtQ+AF06/ekwBoeivoAZ0R0SUu3f/\nEU8apUNK4GPzbOqAslX7BsonlQClwvsQYBjx+QOYBPlYazi9CKpb/3NbM/nS4d5h\n69jf0QeCKE+rQdwV8nI8QxzIRCKYSchuBqp2BAn5O+YySfzf3v4=\n=nMD4\n-----END PGP SIGNATURE-----", "payload": "tree 8a98d8cf9aa3d7a85d0b595cad4b22e5aeb6e881\nparent 2a57b019808370d6b4d95a7e7dae354fe12de9db\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1676363654 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1676363654 +0900\n\nSearch raw identifiers without prefix\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/098d9d77b45749aeb7514c1cea2b750791ead85e", "html_url": "https://github.com/rust-lang/rust/commit/098d9d77b45749aeb7514c1cea2b750791ead85e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/098d9d77b45749aeb7514c1cea2b750791ead85e/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a57b019808370d6b4d95a7e7dae354fe12de9db", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a57b019808370d6b4d95a7e7dae354fe12de9db", "html_url": "https://github.com/rust-lang/rust/commit/2a57b019808370d6b4d95a7e7dae354fe12de9db"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "d09c91942f2508bd3fb49e0aca5385d3ebd16cd5", "filename": "crates/ide-db/src/search.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/098d9d77b45749aeb7514c1cea2b750791ead85e/crates%2Fide-db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/098d9d77b45749aeb7514c1cea2b750791ead85e/crates%2Fide-db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fsearch.rs?ref=098d9d77b45749aeb7514c1cea2b750791ead85e", "patch": "@@ -455,15 +455,20 @@ impl<'a> FindUsages<'a> {\n         }\n \n         let find_nodes = move |name: &str, node: &syntax::SyntaxNode, offset: TextSize| {\n-            node.token_at_offset(offset).find(|it| it.text() == name).map(|token| {\n-                // FIXME: There should be optimization potential here\n-                // Currently we try to descend everything we find which\n-                // means we call `Semantics::descend_into_macros` on\n-                // every textual hit. That function is notoriously\n-                // expensive even for things that do not get down mapped\n-                // into macros.\n-                sema.descend_into_macros(token).into_iter().filter_map(|it| it.parent())\n-            })\n+            node.token_at_offset(offset)\n+                .find(|it| {\n+                    // `name` is stripped of raw ident prefix. See the comment on name retrieval above.\n+                    it.text().trim_start_matches(\"r#\") == name\n+                })\n+                .map(|token| {\n+                    // FIXME: There should be optimization potential here\n+                    // Currently we try to descend everything we find which\n+                    // means we call `Semantics::descend_into_macros` on\n+                    // every textual hit. That function is notoriously\n+                    // expensive even for things that do not get down mapped\n+                    // into macros.\n+                    sema.descend_into_macros(token).into_iter().filter_map(|it| it.parent())\n+                })\n         };\n \n         for (text, file_id, search_range) in scope_files(sema, &search_scope) {"}, {"sha": "cabbc287279f691938c5ec45f68edb31462acfda", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/098d9d77b45749aeb7514c1cea2b750791ead85e/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/098d9d77b45749aeb7514c1cea2b750791ead85e/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=098d9d77b45749aeb7514c1cea2b750791ead85e", "patch": "@@ -2016,4 +2016,19 @@ fn method$0() {}\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn raw_identifier() {\n+        check(\n+            r#\"\n+fn r#fn$0() {}\n+fn main() { r#fn(); }\n+\"#,\n+            expect![[r#\"\n+                r#fn Function FileId(0) 0..12 3..7\n+\n+                FileId(0) 25..29\n+            \"#]],\n+        );\n+    }\n }"}, {"sha": "c0237e1edd0d39fe5e2cece547bbdbaf200799dc", "filename": "crates/ide/src/rename.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/098d9d77b45749aeb7514c1cea2b750791ead85e/crates%2Fide%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/098d9d77b45749aeb7514c1cea2b750791ead85e/crates%2Fide%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frename.rs?ref=098d9d77b45749aeb7514c1cea2b750791ead85e", "patch": "@@ -1371,7 +1371,6 @@ pub fn baz() {}\n \n     #[test]\n     fn test_rename_mod_from_raw_ident() {\n-        // FIXME: `r#fn` in path expression is not renamed.\n         check_expect(\n             \"foo\",\n             r#\"\n@@ -1397,6 +1396,10 @@ pub fn baz() {}\n                                     insert: \"foo\",\n                                     delete: 4..8,\n                                 },\n+                                Indel {\n+                                    insert: \"foo\",\n+                                    delete: 23..27,\n+                                },\n                             ],\n                         },\n                     },"}]}