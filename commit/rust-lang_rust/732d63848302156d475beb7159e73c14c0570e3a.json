{"sha": "732d63848302156d475beb7159e73c14c0570e3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMmQ2Mzg0ODMwMjE1NmQ0NzViZWI3MTU5ZTczYzE0YzA1NzBlM2E=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-25T08:47:37Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-16T19:09:05Z"}, "message": "Replace ... with ..= in suggestions\n\nAs ... is \"(silently) deprecated\". Presumably this means we should be giving correct, up-to-date suggestions, though.", "tree": {"sha": "f3f46794031b260f1fb577bfbe0a42a8ebdb29d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3f46794031b260f1fb577bfbe0a42a8ebdb29d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/732d63848302156d475beb7159e73c14c0570e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/732d63848302156d475beb7159e73c14c0570e3a", "html_url": "https://github.com/rust-lang/rust/commit/732d63848302156d475beb7159e73c14c0570e3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/732d63848302156d475beb7159e73c14c0570e3a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aa749469bfc57ae023be6fbb1141b806bcb3d62", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aa749469bfc57ae023be6fbb1141b806bcb3d62", "html_url": "https://github.com/rust-lang/rust/commit/1aa749469bfc57ae023be6fbb1141b806bcb3d62"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9bf7aa24ae63b625c1ab483af277e74fd2ab7cda", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/732d63848302156d475beb7159e73c14c0570e3a/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/732d63848302156d475beb7159e73c14c0570e3a/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=732d63848302156d475beb7159e73c14c0570e3a", "patch": "@@ -233,7 +233,7 @@ impl<'tcx> fmt::Display for Pattern<'tcx> {\n             PatternKind::Range { lo, hi, end } => {\n                 fmt_const_val(f, lo)?;\n                 match end {\n-                    RangeEnd::Included => write!(f, \"...\")?,\n+                    RangeEnd::Included => write!(f, \"..=\")?,\n                     RangeEnd::Excluded => write!(f, \"..\")?,\n                 }\n                 fmt_const_val(f, hi)"}, {"sha": "0f7ab8688c678bbda42ee9c121acab211b3fc5c7", "filename": "src/test/ui/exhaustive_integer_patterns.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/732d63848302156d475beb7159e73c14c0570e3a/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/732d63848302156d475beb7159e73c14c0570e3a/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr?ref=732d63848302156d475beb7159e73c14c0570e3a", "patch": "@@ -10,29 +10,29 @@ note: lint level defined here\n LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error[E0004]: non-exhaustive patterns: `128u8...255u8` not covered\n+error[E0004]: non-exhaustive patterns: `128u8..=255u8` not covered\n   --> $DIR/exhaustive_integer_patterns.rs:37:11\n    |\n LL |     match x { //~ ERROR non-exhaustive patterns\n-   |           ^ pattern `128u8...255u8` not covered\n+   |           ^ pattern `128u8..=255u8` not covered\n \n-error[E0004]: non-exhaustive patterns: `11u8...19u8`, `31u8...34u8`, `36u8...69u8` and 1 more not covered\n+error[E0004]: non-exhaustive patterns: `11u8..=19u8`, `31u8..=34u8`, `36u8..=69u8` and 1 more not covered\n   --> $DIR/exhaustive_integer_patterns.rs:42:11\n    |\n LL |     match x { //~ ERROR non-exhaustive patterns\n-   |           ^ patterns `11u8...19u8`, `31u8...34u8`, `36u8...69u8` and 1 more not covered\n+   |           ^ patterns `11u8..=19u8`, `31u8..=34u8`, `36u8..=69u8` and 1 more not covered\n \n error: unreachable pattern\n   --> $DIR/exhaustive_integer_patterns.rs:53:9\n    |\n LL |         -2..=20 => {} //~ ERROR unreachable pattern\n    |         ^^^^^^^\n \n-error[E0004]: non-exhaustive patterns: `-128i8...-8i8`, `-6i8`, `121i8...124i8` and 1 more not covered\n+error[E0004]: non-exhaustive patterns: `-128i8..=-8i8`, `-6i8`, `121i8..=124i8` and 1 more not covered\n   --> $DIR/exhaustive_integer_patterns.rs:50:11\n    |\n LL |     match x { //~ ERROR non-exhaustive patterns\n-   |           ^ patterns `-128i8...-8i8`, `-6i8`, `121i8...124i8` and 1 more not covered\n+   |           ^ patterns `-128i8..=-8i8`, `-6i8`, `121i8..=124i8` and 1 more not covered\n \n error[E0004]: non-exhaustive patterns: `-128i8` not covered\n   --> $DIR/exhaustive_integer_patterns.rs:99:11"}]}