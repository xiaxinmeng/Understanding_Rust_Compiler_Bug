{"sha": "65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZWI3ZTUxNmM3OThhOTQ0N2RiZmUxZDAyYWVlYjMxNGQ0ZmVjNTQ=", "commit": {"author": {"name": "Theodore Luo Wang", "email": "wangtheo662@gmail.com", "date": "2021-09-05T02:35:59Z"}, "committer": {"name": "Theodore Luo Wang", "email": "wangtheo662@gmail.com", "date": "2021-09-05T02:35:59Z"}, "message": "Use verbose suggestions and only match if the + is seen before a numeric literal", "tree": {"sha": "59b304b05a220c76dae75df4119d7809561ae5f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59b304b05a220c76dae75df4119d7809561ae5f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "html_url": "https://github.com/rust-lang/rust/commit/65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/comments", "author": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc9877c5af5155174f1a517d41d997b446cc074e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc9877c5af5155174f1a517d41d997b446cc074e", "html_url": "https://github.com/rust-lang/rust/commit/bc9877c5af5155174f1a517d41d997b446cc074e"}], "stats": {"total": 147, "additions": 55, "deletions": 92}, "files": [{"sha": "e467bd963bf3c9304e903b7f5c80d6a44d91e029", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -586,6 +586,10 @@ impl Token {\n         self.is_non_raw_ident_where(|id| id.name.is_bool_lit())\n     }\n \n+    pub fn is_numeric_lit(&self) -> bool {\n+        matches!(self.kind, Literal(Lit { kind: LitKind::Integer, ..}) | Literal(Lit { kind: LitKind::Float, ..}))\n+    }\n+\n     /// Returns `true` if the token is a non-raw identifier for which `pred` holds.\n     pub fn is_non_raw_ident_where(&self, pred: impl FnOnce(Ident) -> bool) -> bool {\n         match self.ident() {"}, {"sha": "83e1c5ff753a82dff5a4393488ee83d56eb28371", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -516,16 +516,15 @@ impl<'a> Parser<'a> {\n             token::BinOp(token::And) | token::AndAnd => {\n                 make_it!(this, attrs, |this, _| this.parse_borrow_expr(lo))\n             }\n-            token::BinOp(token::Plus) => {\n+            token::BinOp(token::Plus) if this.look_ahead(1, |tok| tok.is_numeric_lit()) => {\n                 let mut err = this.struct_span_err(lo, \"leading `+` is not supported\");\n                 err.span_label(lo, \"unexpected `+`\");\n \n                 // a block on the LHS might have been intended to be an expression instead\n-                let sp = this.sess.source_map().start_point(lo);\n-                if let Some(sp) = this.sess.ambiguous_block_expr_parse.borrow().get(&sp) {\n+                if let Some(sp) = this.sess.ambiguous_block_expr_parse.borrow().get(&lo) {\n                     this.sess.expr_parentheses_needed(&mut err, *sp);\n                 } else {\n-                    err.span_suggestion(\n+                    err.span_suggestion_verbose(\n                         lo,\n                         \"try removing the `+`\",\n                         \"\".to_string(),"}, {"sha": "610798d880f0a795cd7458726cf3dbaf80253181", "filename": "src/test/ui/associated-types/issue-36499.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fassociated-types%2Fissue-36499.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fassociated-types%2Fissue-36499.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-36499.stderr?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -2,10 +2,13 @@ error: leading `+` is not supported\n   --> $DIR/issue-36499.rs:4:9\n    |\n LL |     2 + +2;\n-   |         ^\n-   |         |\n-   |         unexpected `+`\n-   |         help: try removing the `+`\n+   |         ^ unexpected `+`\n+   |\n+help: try removing the `+`\n+   |\n+LL -     2 + +2;\n+LL +     2 + 2;\n+   | \n \n error: aborting due to previous error\n "}, {"sha": "5f5e25991e0cc732dffa898cf5ede8fe6785476c", "filename": "src/test/ui/parser/expr-as-stmt.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -5,7 +5,7 @@\n #![allow(unused_must_use)]\n \n fn foo() -> i32 {\n-    ({2}) + {2} //~ ERROR leading `+` is not supported\n+    ({2}) + {2} //~ ERROR expected expression, found `+`\n     //~^ ERROR mismatched types\n }\n \n@@ -16,7 +16,7 @@ fn bar() -> i32 {\n \n fn zul() -> u32 {\n     let foo = 3;\n-    ({ 42 }) + foo; //~ ERROR leading `+` is not supported\n+    ({ 42 }) + foo; //~ ERROR expected expression, found `+`\n     //~^ ERROR mismatched types\n     32\n }"}, {"sha": "5428e1c32fed3edbe0a9bef2cf7c890b3ce6246e", "filename": "src/test/ui/parser/expr-as-stmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -5,7 +5,7 @@\n #![allow(unused_must_use)]\n \n fn foo() -> i32 {\n-    {2} + {2} //~ ERROR leading `+` is not supported\n+    {2} + {2} //~ ERROR expected expression, found `+`\n     //~^ ERROR mismatched types\n }\n \n@@ -16,7 +16,7 @@ fn bar() -> i32 {\n \n fn zul() -> u32 {\n     let foo = 3;\n-    { 42 } + foo; //~ ERROR leading `+` is not supported\n+    { 42 } + foo; //~ ERROR expected expression, found `+`\n     //~^ ERROR mismatched types\n     32\n }"}, {"sha": "d99e9be0000c312ef65101aef774f070e78f8cd2", "filename": "src/test/ui/parser/expr-as-stmt.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -1,8 +1,8 @@\n-error: leading `+` is not supported\n+error: expected expression, found `+`\n   --> $DIR/expr-as-stmt.rs:8:9\n    |\n LL |     {2} + {2}\n-   |         ^ unexpected `+`\n+   |         ^ expected expression\n    |\n help: parentheses are required to parse this as an expression\n    |\n@@ -20,11 +20,11 @@ help: parentheses are required to parse this as an expression\n LL |     ({2}) + 2\n    |     +   +\n \n-error: leading `+` is not supported\n+error: expected expression, found `+`\n   --> $DIR/expr-as-stmt.rs:19:12\n    |\n LL |     { 42 } + foo;\n-   |            ^ unexpected `+`\n+   |            ^ expected expression\n    |\n help: parentheses are required to parse this as an expression\n    |"}, {"sha": "25b7c340f600d792c8360a4d39d986d32905383e", "filename": "src/test/ui/parser/issue-88276-unary-plus.fixed", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.fixed?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -2,12 +2,7 @@\n #[allow(unused_parens)]\n fn main() {\n     let _ = 1; //~ ERROR leading `+` is not supported\n-    let _ = -(1+2)*3; //~ ERROR leading `+` is not supported\n-    let _ = --(1+2)*3; //~ ERROR leading `+` is not supported\n-                         //~| ERROR leading `+` is not supported\n-    let _ = (1 + 2) * 3; //~ ERROR leading `+` is not supported\n+    let _ = (1.0 + 2.0) * 3.0; //~ ERROR leading `+` is not supported\n                            //~| ERROR leading `+` is not supported\n-    let _ = (&\"hello\"); //~ ERROR leading `+` is not supported\n     let _ = [3, 4+6]; //~ ERROR leading `+` is not supported\n-                        //~| ERROR leading `+` is not supported\n }"}, {"sha": "11b2e9d601653f9f02b1f5d5c2e5c330ae2e3eb3", "filename": "src/test/ui/parser/issue-88276-unary-plus.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.rs?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -2,12 +2,7 @@\n #[allow(unused_parens)]\n fn main() {\n     let _ = +1; //~ ERROR leading `+` is not supported\n-    let _ = -+(1+2)*3; //~ ERROR leading `+` is not supported\n-    let _ = -+-+(1+2)*3; //~ ERROR leading `+` is not supported\n-                         //~| ERROR leading `+` is not supported\n-    let _ = (1 + +2) * +3; //~ ERROR leading `+` is not supported\n+    let _ = (1.0 + +2.0) * +3.0; //~ ERROR leading `+` is not supported\n                            //~| ERROR leading `+` is not supported\n-    let _ = (+&\"hello\"); //~ ERROR leading `+` is not supported\n-    let _ = +[+3, 4+6]; //~ ERROR leading `+` is not supported\n-                        //~| ERROR leading `+` is not supported\n+    let _ = [+3, 4+6]; //~ ERROR leading `+` is not supported\n }"}, {"sha": "b26761729a837dcec48dc22d0b27b3be069a88bd", "filename": "src/test/ui/parser/issue-88276-unary-plus.stderr", "status": "modified", "additions": 30, "deletions": 63, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65eb7e516c798a9447dbfe1d02aeeb314d4fec54/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.stderr?ref=65eb7e516c798a9447dbfe1d02aeeb314d4fec54", "patch": "@@ -2,82 +2,49 @@ error: leading `+` is not supported\n   --> $DIR/issue-88276-unary-plus.rs:4:13\n    |\n LL |     let _ = +1;\n-   |             ^\n-   |             |\n-   |             unexpected `+`\n-   |             help: try removing the `+`\n-\n-error: leading `+` is not supported\n-  --> $DIR/issue-88276-unary-plus.rs:5:14\n+   |             ^ unexpected `+`\n    |\n-LL |     let _ = -+(1+2)*3;\n-   |              ^\n-   |              |\n-   |              unexpected `+`\n-   |              help: try removing the `+`\n-\n-error: leading `+` is not supported\n-  --> $DIR/issue-88276-unary-plus.rs:6:14\n+help: try removing the `+`\n    |\n-LL |     let _ = -+-+(1+2)*3;\n-   |              ^\n-   |              |\n-   |              unexpected `+`\n-   |              help: try removing the `+`\n+LL -     let _ = +1;\n+LL +     let _ = 1;\n+   | \n \n error: leading `+` is not supported\n-  --> $DIR/issue-88276-unary-plus.rs:6:16\n+  --> $DIR/issue-88276-unary-plus.rs:5:20\n    |\n-LL |     let _ = -+-+(1+2)*3;\n-   |                ^\n-   |                |\n-   |                unexpected `+`\n-   |                help: try removing the `+`\n-\n-error: leading `+` is not supported\n-  --> $DIR/issue-88276-unary-plus.rs:8:18\n+LL |     let _ = (1.0 + +2.0) * +3.0;\n+   |                    ^ unexpected `+`\n    |\n-LL |     let _ = (1 + +2) * +3;\n-   |                  ^\n-   |                  |\n-   |                  unexpected `+`\n-   |                  help: try removing the `+`\n-\n-error: leading `+` is not supported\n-  --> $DIR/issue-88276-unary-plus.rs:8:24\n+help: try removing the `+`\n    |\n-LL |     let _ = (1 + +2) * +3;\n-   |                        ^\n-   |                        |\n-   |                        unexpected `+`\n-   |                        help: try removing the `+`\n+LL -     let _ = (1.0 + +2.0) * +3.0;\n+LL +     let _ = (1.0 + 2.0) * +3.0;\n+   | \n \n error: leading `+` is not supported\n-  --> $DIR/issue-88276-unary-plus.rs:10:14\n+  --> $DIR/issue-88276-unary-plus.rs:5:28\n    |\n-LL |     let _ = (+&\"hello\");\n-   |              ^\n-   |              |\n-   |              unexpected `+`\n-   |              help: try removing the `+`\n-\n-error: leading `+` is not supported\n-  --> $DIR/issue-88276-unary-plus.rs:11:13\n+LL |     let _ = (1.0 + +2.0) * +3.0;\n+   |                            ^ unexpected `+`\n    |\n-LL |     let _ = +[+3, 4+6];\n-   |             ^\n-   |             |\n-   |             unexpected `+`\n-   |             help: try removing the `+`\n+help: try removing the `+`\n+   |\n+LL -     let _ = (1.0 + +2.0) * +3.0;\n+LL +     let _ = (1.0 + +2.0) * 3.0;\n+   | \n \n error: leading `+` is not supported\n-  --> $DIR/issue-88276-unary-plus.rs:11:15\n+  --> $DIR/issue-88276-unary-plus.rs:7:14\n+   |\n+LL |     let _ = [+3, 4+6];\n+   |              ^ unexpected `+`\n+   |\n+help: try removing the `+`\n    |\n-LL |     let _ = +[+3, 4+6];\n-   |               ^\n-   |               |\n-   |               unexpected `+`\n-   |               help: try removing the `+`\n+LL -     let _ = [+3, 4+6];\n+LL +     let _ = [3, 4+6];\n+   | \n \n-error: aborting due to 9 previous errors\n+error: aborting due to 4 previous errors\n "}]}