{"sha": "3cadc11d838d5f07b2849ba148dfb83c006fb70f", "node_id": "C_kwDOAAsO6NoAKDNjYWRjMTFkODM4ZDVmMDdiMjg0OWJhMTQ4ZGZiODNjMDA2ZmI3MGY", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2022-05-11T04:50:48Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2022-05-11T04:50:48Z"}, "message": "avoid using both Some() and ? on linux/android/freebsd code", "tree": {"sha": "acc1c009608a472e7df385006896afe32d836adb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acc1c009608a472e7df385006896afe32d836adb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cadc11d838d5f07b2849ba148dfb83c006fb70f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cadc11d838d5f07b2849ba148dfb83c006fb70f", "html_url": "https://github.com/rust-lang/rust/commit/3cadc11d838d5f07b2849ba148dfb83c006fb70f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cadc11d838d5f07b2849ba148dfb83c006fb70f/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f75d02d66975bed3636e89f56077bbc53fe5f74d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f75d02d66975bed3636e89f56077bbc53fe5f74d", "html_url": "https://github.com/rust-lang/rust/commit/f75d02d66975bed3636e89f56077bbc53fe5f74d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8d05cb44b94794acb5309abbb467c7b55a0828c8", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cadc11d838d5f07b2849ba148dfb83c006fb70f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cadc11d838d5f07b2849ba148dfb83c006fb70f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=3cadc11d838d5f07b2849ba148dfb83c006fb70f", "patch": "@@ -25,7 +25,7 @@ pub fn futex_wait(futex: &AtomicU32, expected: u32, timeout: Option<Duration>) -\n     //\n     // Overflows are rounded up to an infinite timeout (None).\n     let timespec = timeout\n-        .and_then(|d| Some(Timespec::now(libc::CLOCK_MONOTONIC).checked_add_duration(&d)?))\n+        .and_then(|d| Timespec::now(libc::CLOCK_MONOTONIC).checked_add_duration(&d))\n         .and_then(|t| t.to_timespec());\n \n     loop {"}]}