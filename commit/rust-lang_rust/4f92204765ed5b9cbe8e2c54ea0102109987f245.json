{"sha": "4f92204765ed5b9cbe8e2c54ea0102109987f245", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmOTIyMDQ3NjVlZDViOWNiZThlMmM1NGVhMDEwMjEwOTk4N2YyNDU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-29T15:07:25Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-29T20:51:11Z"}, "message": "make check-fast work", "tree": {"sha": "413dab1c0e2a7310f18aa158694bd09e561aa15d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/413dab1c0e2a7310f18aa158694bd09e561aa15d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f92204765ed5b9cbe8e2c54ea0102109987f245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f92204765ed5b9cbe8e2c54ea0102109987f245", "html_url": "https://github.com/rust-lang/rust/commit/4f92204765ed5b9cbe8e2c54ea0102109987f245", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f92204765ed5b9cbe8e2c54ea0102109987f245/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "821298737a123da856ad9d994343371c02c97a2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/821298737a123da856ad9d994343371c02c97a2b", "html_url": "https://github.com/rust-lang/rust/commit/821298737a123da856ad9d994343371c02c97a2b"}], "stats": {"total": 148, "additions": 90, "deletions": 58}, "files": [{"sha": "fc699321b09b239b0e18b224c73bb5dcdca714c5", "filename": "mk/tests.mk", "status": "modified", "additions": 88, "deletions": 56, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/4f92204765ed5b9cbe8e2c54ea0102109987f245/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4f92204765ed5b9cbe8e2c54ea0102109987f245/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=4f92204765ed5b9cbe8e2c54ea0102109987f245", "patch": "@@ -29,7 +29,6 @@ PRETTY_TESTS := $(PRETTY_RS)\n FT := run_pass_stage2\n FT_LIB := $(call CFG_LIB_NAME,$(FT))\n FT_DRIVER := $(FT)_driver\n-GENERATED += test/$(FT).rc test/$(FT_DRIVER).rs\n \n # The arguments to all test runners\n ifdef TESTNAME\n@@ -75,10 +74,6 @@ check: tidy check-stage2 \\\n \n check-full: tidy check-stage1 check-stage2 check-stage3 \\\n \n-check-fast: tidy \\\n-\tcheck-stage2-rustc check-stage2-std \\\n-\ttest/$(FT_DRIVER).out\n-\n # Run the tidy script in multiple parts to avoid huge 'echo' commands\n ifdef CFG_NOTIDY\n tidy:\n@@ -214,18 +209,18 @@ RFAIL_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\\\n         --mode run-fail\t\t\t\t\t\t\t\\\n         $$(CTEST_RUNTOOL)\n \n-RPASS_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\\\n+RPASS_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\\\n \t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n         --src-base $$(S)src/test/run-pass/\t\t\\\n         --build-base $(3)/test/run-pass/\t\t\\\n-        --mode run-pass\t\t\t\t\t\t\t\\\n+        --mode run-pass\t\t\t\t\t\\\n         $$(CTEST_RUNTOOL)\n \n-BENCH_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\\\n+BENCH_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\\\n \t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n         --src-base $$(S)src/test/bench/\t\t\t\\\n         --build-base $(3)/test/bench/\t\t\t\\\n-        --mode run-pass\t\t\t\t\t\t\t\\\n+        --mode run-pass\t\t\t\t\t\\\n         $$(CTEST_RUNTOOL)\n \n PERF_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\\\n@@ -261,32 +256,32 @@ PRETTY_PRETTY_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\\\n \n check-stage$(1)-T-$(2)-H-$(3)-cfail-dummy:\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n-\t    $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n-        $$(CFAIL_TESTS)\n+\t\t$$(SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n+\t        $$(CFAIL_TESTS)\n \t@$$(call E, run cfail: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n \t\t$$(CFAIL_ARGS$(1)-T-$(2)-H-$(3))\n \n check-stage$(1)-T-$(2)-H-$(3)-rfail-dummy:\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n-\t    $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n-        $$(RFAIL_TESTS)\n+\t\t$$(SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n+\t\t$$(RFAIL_TESTS)\n \t@$$(call E, run rfail: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n \t\t$$(RFAIL_ARGS$(1)-T-$(2)-H-$(3))\n \n check-stage$(1)-T-$(2)-H-$(3)-rpass-dummy:\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n-\t    $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n-        $$(RPASS_TESTS)\n+\t\t$$(SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n+\t        $$(RPASS_TESTS)\n \t@$$(call E, run rpass: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n \t\t$$(RPASS_ARGS$(1)-T-$(2)-H-$(3))\n \n check-stage$(1)-T-$(2)-H-$(3)-bench-dummy:\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n-\t    $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n-        $$(BENCH_TESTS)\n+\t\t$$(SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n+\t\t$$(BENCH_TESTS)\n \t@$$(call E, run bench: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n \t\t$$(BENCH_ARGS$(1)-T-$(2)-H-$(3))\n@@ -300,33 +295,33 @@ check-stage$(1)-T-$(2)-H-$(3)-perf-dummy:\t\t\\\n \t\t$$(PERF_ARGS$(1)-T-$(2)-H-$(3))\n \n check-stage$(1)-T-$(2)-H-$(3)-pretty-rpass-dummy:\t\\\n-\t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\t\\\n-        $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\t\\\n-        $$(RPASS_TESTS)\n+\t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n+\t        $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n+\t        $$(RPASS_TESTS)\n \t@$$(call E, run pretty-rpass: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n \t\t$$(PRETTY_RPASS_ARGS$(1)-T-$(2)-H-$(3))\n \n check-stage$(1)-T-$(2)-H-$(3)-pretty-rfail-dummy:\t\\\n-\t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\t\\\n-        $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\t\\\n-        $$(RFAIL_TESTS)\n+\t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n+\t        $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n+\t        $$(RFAIL_TESTS)\n \t@$$(call E, run pretty-rfail: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n \t\t$$(PRETTY_RFAIL_ARGS$(1)-T-$(2)-H-$(3))\n \n check-stage$(1)-T-$(2)-H-$(3)-pretty-bench-dummy:\t\\\n-\t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\t\\\n-\t\t$$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\t\\\n-        $$(BENCH_TESTS)\n+\t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n+\t\t$$(SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n+\t        $$(BENCH_TESTS)\n \t@$$(call E, run pretty-bench: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n \t\t$$(PRETTY_BENCH_ARGS$(1)-T-$(2)-H-$(3))\n \n check-stage$(1)-T-$(2)-H-$(3)-pretty-pretty-dummy:\t\\\n-\t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\t\\\n-        $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\t\\\n-        $$(PRETTY_TESTS)\n+\t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n+\t        $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n+\t        $$(PRETTY_TESTS)\n \t@$$(call E, run pretty-pretty: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n \t\t$$(PRETTY_PRETTY_ARGS$(1)-T-$(2)-H-$(3))\n@@ -340,10 +335,57 @@ $(foreach host,$(CFG_TARGET_TRIPLES), \\\n   $(eval $(foreach stage,$(STAGES), \\\n    $(eval $(call TEST_STAGEN,$(stage),$(target),$(host))))))))\n \n-# Make convenient Shorthand Targets for use on command\n-# line or by other rules:\n+######################################################################\n+# Fast-test rules\n+######################################################################\n \n-define DEF_CHECK_SAME\n+GENERATED += tmp/$$(FT).rc tmp/$$(FT_DRIVER).rs\n+\n+tmp/$$(FT).rc tmp/$$(FT_DRIVER).rs: \\\n+\t\t$$(TEST_RPASS_SOURCES_STAGE2) \\\n+\t\t$$(S)src/etc/combine-tests.py\n+\t@$$(call E, check: building combined stage2 test runner)\n+\t$$(Q)$$(S)src/etc/combine-tests.py\n+\n+define DEF_CHECK_FAST_FOR_T_H\n+# $(1) unused\n+# $(2) target triple\n+# $(3) host triple\n+\n+$$(TLIB2_T_$(2)_H_$(3))/$$(FT_LIB): \\\n+\t\ttmp/$$(FT).rc \\\n+\t\t$$(SREQ2_T_$(2)_H_$(3))\n+\t@$$(call E, compile_and_link: $$@)\n+\t$$(STAGE2_$(CFG_HOST_TRIPLE)) --lib -o $$@ $$<\n+\n+$(3)/test/$(FT_DRIVER)-$(2)$(X): \\\n+\t\ttmp/$(FT_DRIVER).rs \\\n+\t\t$(TLIB2_T_$(2)_H_$(3))/$(FT_LIB) \\\n+\t\t$(SREQ2_T_$(2)_H_$(3))\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE2_$(CFG_HOST_TRIPLE)) -L $(HOST_LIB2) -o $@ $<\n+\n+$(3)/test/$(FT_DRIVER)-$(2).out: \\\n+\t\t$(3)/test/$(FT_DRIVER)-$(2)$(X) \\\n+\t\t$(SREQ2_T_$(2)_H_$(3))\n+\t$(Q)$(call CFG_RUN_TEST,$<,$(2),$(3))\n+\n+check-fast-T-$(2)-H-$(3): tidy\t\t\t\\\n+\tcheck-stage2-T-$(2)-H-$(3)-rustc\t\\\n+\tcheck-stage2-T-$(2)-H-$(3)-std\t\t\\\n+\t$(3)/test/$(FT_DRIVER)-$(2).out\n+\n+endef\n+\n+$(foreach host,$(CFG_TARGET_TRIPLES), \\\n+ $(eval $(foreach target,$(CFG_TARGET_TRIPLES), \\\n+   $(eval $(call DEF_CHECK_FAST_FOR_T_H,,$(target),$(host))))))\n+\n+######################################################################\n+# Shortcut rules\n+######################################################################\n+\n+define DEF_CHECK_FOR_STAGE_H\n \n check-stage$(1)-H-$(2):        check-stage$(1)-T-$(2)-H-$(2)\n check-stage$(1)-H-$(2)-perf:   check-stage$(1)-T-$(2)-H-$(2)-perf\n@@ -356,11 +398,20 @@ check-stage$(1)-H-$(2)-bench:  check-stage$(1)-T-$(2)-H-$(2)-bench\n \n endef\n \n-$(foreach stage,$(STAGES),\t\t\t\t\t\t\t\t\\\n+$(foreach stage,$(STAGES),\t\t\t\t\t\\\n  $(eval $(foreach target,$(CFG_TARGET_TRIPLES),\t\t\t\\\n-  $(eval $(call DEF_CHECK_SAME,$(stage),$(target))))))\n+  $(eval $(call DEF_CHECK_FOR_STAGE_H,$(stage),$(target))))))\n+\n+define DEF_CHECK_FAST_FOR_H\n+\n+check-fast-H-$(1): \t\tcheck-fast-T-$(1)-H-$(1)\n+\n+endef\n \n-define DEF_CHECK_HOST\n+$(foreach target,$(CFG_TARGET_TRIPLES),\t\t\t\\\n+ $(eval $(call DEF_CHECK_FAST_FOR_H,$(target))))\n+\n+define DEF_CHECK_FOR_STAGE\n \n check-stage$(1):        check-stage$(1)-H-$(CFG_HOST_TRIPLE)\n check-stage$(1)-perf:   check-stage$(1)-H-$(CFG_HOST_TRIPLE)-perf\n@@ -374,25 +425,6 @@ check-stage$(1)-bench:  check-stage$(1)-H-$(CFG_HOST_TRIPLE)-bench\n endef\n \n $(foreach stage,$(STAGES),\t\t\t\t\t\t\\\n- $(eval $(call DEF_CHECK_HOST,$(stage))))\n-\n-######################################################################\n-# Fast-test rules\n-######################################################################\n-\n-test/$(FT).rc test/$(FT_DRIVER).rs: $(TEST_RPASS_SOURCES_STAGE2) \\\n-    $(S)src/etc/combine-tests.py\n-\t@$(call E, check: building combined stage2 test runner)\n-\t$(Q)$(S)src/etc/combine-tests.py\n-\n-$(TARGET_HOST_LIB2)/$(FT_LIB): test/$(FT).rc $(SREQ2$(CFG_HOST_TRIPLE))\n-\t@$(call E, compile_and_link: $@)\n-\t$(STAGE2_$(CFG_HOST_TRIPLE)) --lib -o $@ $<\n-\n-test/$(FT_DRIVER)$(X): test/$(FT_DRIVER).rs $(TARGET_HOST_LIB2)/$(FT_LIB) \\\n-\t$(SREQ2$(CFG_HOST_TRIPLE))\n-\t@$(call E, compile_and_link: $@)\n-\t$(STAGE2_$(CFG_HOST_TRIPLE)) -L $(HOST_LIB2) -o $@ $<\n+ $(eval $(call DEF_CHECK_FOR_STAGE,$(stage))))\n \n-test/$(FT_DRIVER).out: test/$(FT_DRIVER)$(X) $(SREQ2$(CFG_HOST_TRIPLE))\n-\t$(Q)$(call CFG_RUN_TEST,$<,$(CFG_HOST_TRIPLE),$(CFG_HOST_TRIPLE))\n+check-fast: check-fast-H-$(CFG_HOST_TRIPLE)\n\\ No newline at end of file"}, {"sha": "288afe91032da9c6bf69cec5877deb04b83c1b0a", "filename": "src/etc/combine-tests.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f92204765ed5b9cbe8e2c54ea0102109987f245/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/4f92204765ed5b9cbe8e2c54ea0102109987f245/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=4f92204765ed5b9cbe8e2c54ea0102109987f245", "patch": "@@ -36,7 +36,7 @@ def scrub(b):\n \n stage2_tests.sort()\n \n-c = open(\"test/run_pass_stage2.rc\", \"w\")\n+c = open(\"tmp/run_pass_stage2.rc\", \"w\")\n i = 0\n c.write(\"// AUTO-GENERATED FILE: DO NOT EDIT\\n\")\n c.write(\"#[link(name=\\\"run_pass_stage2\\\", vers=\\\"0.1\\\")];\\n\")\n@@ -49,7 +49,7 @@ def scrub(b):\n c.close()\n \n \n-d = open(\"test/run_pass_stage2_driver.rs\", \"w\")\n+d = open(\"tmp/run_pass_stage2_driver.rs\", \"w\")\n d.write(\"// AUTO-GENERATED FILE: DO NOT EDIT\\n\")\n d.write(\"use std;\\n\")\n d.write(\"use run_pass_stage2;\\n\")"}]}