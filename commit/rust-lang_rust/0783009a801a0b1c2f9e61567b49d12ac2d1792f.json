{"sha": "0783009a801a0b1c2f9e61567b49d12ac2d1792f", "node_id": "C_kwDOAAsO6NoAKDA3ODMwMDlhODAxYTBiMWMyZjllNjE1NjdiNDlkMTJhYzJkMTc5MmY", "commit": {"author": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-12-12T03:02:16Z"}, "committer": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-02-18T14:33:52Z"}, "message": "Add test checking that fallthrough branches are correctly identified as dead", "tree": {"sha": "9449cad25dd153fa859cf2dae4dd3945d6e115a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9449cad25dd153fa859cf2dae4dd3945d6e115a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0783009a801a0b1c2f9e61567b49d12ac2d1792f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0783009a801a0b1c2f9e61567b49d12ac2d1792f", "html_url": "https://github.com/rust-lang/rust/commit/0783009a801a0b1c2f9e61567b49d12ac2d1792f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0783009a801a0b1c2f9e61567b49d12ac2d1792f/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a5c07889586564017bc0d88826a48aecf721600", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a5c07889586564017bc0d88826a48aecf721600", "html_url": "https://github.com/rust-lang/rust/commit/3a5c07889586564017bc0d88826a48aecf721600"}], "stats": {"total": 145, "additions": 128, "deletions": 17}, "files": [{"sha": "79b923a28894ba3189982e0989d3cf4febdd857f", "filename": "src/test/mir-opt/early_otherwise_branch.opt2.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt2.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt2.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt2.EarlyOtherwiseBranch.diff?ref=0783009a801a0b1c2f9e61567b49d12ac2d1792f", "patch": "@@ -31,7 +31,7 @@\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch.rs:12:16: 12:17\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch.rs:12:16: 12:17\n           _8 = discriminant((_3.0: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:12:11: 12:17\n--         switchInt(move _8) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch.rs:12:5: 12:17\n+-         switchInt(move _8) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb7]; // scope 0 at $DIR/early_otherwise_branch.rs:12:5: 12:17\n +         StorageLive(_11);                // scope 0 at $DIR/early_otherwise_branch.rs:12:5: 12:17\n +         _11 = discriminant((_3.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:12:5: 12:17\n +         StorageLive(_12);                // scope 0 at $DIR/early_otherwise_branch.rs:12:5: 12:17\n@@ -81,8 +81,10 @@\n +     bb4: {\n           StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch.rs:17:1: 17:2\n           return;                          // scope 0 at $DIR/early_otherwise_branch.rs:17:2: 17:2\n-+     }\n-+ \n+      }\n+  \n+-     bb7: {\n+-         unreachable;                     // scope 0 at $DIR/early_otherwise_branch.rs:15:14: 15:15\n +     bb5: {\n +         StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch.rs:12:5: 12:17\n +         switchInt(_8) -> [0_isize: bb3, 1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:12:5: 12:17"}, {"sha": "db6794db298196ad77a5c930f31f5bf1dd1aec66", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyConstCondition-final.after.diff", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyConstCondition-final.after.diff", "raw_url": "https://github.com/rust-lang/rust/raw/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyConstCondition-final.after.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyConstCondition-final.after.diff?ref=0783009a801a0b1c2f9e61567b49d12ac2d1792f", "patch": "@@ -81,7 +81,7 @@\n -         StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n           _11 = discriminant((*(_4.0: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+-         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb11]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n +         StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n +         _34 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n +         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n@@ -217,14 +217,9 @@\n -         StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n -         StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n -         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n-+         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n-+         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n-      }\n-  \n-      bb7: {\n+-     }\n+- \n+-     bb7: {\n -         StorageLive(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n -         _17 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n -         StorageLive(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n@@ -289,10 +284,18 @@\n - \n -     bb10: {\n -         ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n--         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n+          discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n -         StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n -         StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n--         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n+      }\n+  \n+-     bb11: {\n+-         unreachable;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n++     bb7: {\n +         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n +         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n       }"}, {"sha": "c8d8ae7766d2accb16963afb8671118a207bd472", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff?ref=0783009a801a0b1c2f9e61567b49d12ac2d1792f", "patch": "@@ -67,7 +67,7 @@\n           StorageDead(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n           _11 = discriminant((*(_4.0: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n--         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n+-         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb11]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n +         StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n +         _34 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n +         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n@@ -206,8 +206,10 @@\n           StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n           return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n-+     }\n-+ \n+      }\n+  \n+-     bb11: {\n+-         unreachable;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n +     bb7: {\n +         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24\n +         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 21:24"}, {"sha": "7e843b65e88fc77375c808f25ad8ac05a84fb7db", "filename": "src/test/mir-opt/uninhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff", "raw_url": "https://github.com/rust-lang/rust/raw/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff?ref=0783009a801a0b1c2f9e61567b49d12ac2d1792f", "patch": "@@ -0,0 +1,38 @@\n+- // MIR for `eliminate_fallthrough` before UninhabitedEnumBranching\n++ // MIR for `eliminate_fallthrough` after UninhabitedEnumBranching\n+  \n+  fn eliminate_fallthrough(_1: S) -> u32 {\n+      debug s => _1;                       // in scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:21:26: 21:27\n+      let mut _0: u32;                     // return place in scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:21:35: 21:38\n+      let mut _2: isize;                   // in scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:23:9: 23:10\n+  \n+      bb0: {\n+          _2 = discriminant(_1);           // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:22:11: 22:12\n+-         switchInt(move _2) -> [1_isize: bb3, 2_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:22:5: 22:12\n++         switchInt(move _2) -> [1_isize: bb3, 2_isize: bb2, otherwise: bb5]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:22:5: 22:12\n+      }\n+  \n+      bb1: {\n+          _0 = const 3_u32;                // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:25:14: 25:15\n+          goto -> bb4;                     // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:25:14: 25:15\n+      }\n+  \n+      bb2: {\n+          _0 = const 1_u32;                // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:23:14: 23:15\n+          goto -> bb4;                     // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:23:14: 23:15\n+      }\n+  \n+      bb3: {\n+          _0 = const 2_u32;                // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:24:14: 24:15\n+          goto -> bb4;                     // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:24:14: 24:15\n+      }\n+  \n+      bb4: {\n+          return;                          // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:27:2: 27:2\n++     }\n++ \n++     bb5: {\n++         unreachable;                     // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:25:14: 25:15\n+      }\n+  }\n+  "}, {"sha": "5da011d427a2caefb6ce0318854fc6327ed14f7e", "filename": "src/test/mir-opt/uninhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff", "raw_url": "https://github.com/rust-lang/rust/raw/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff?ref=0783009a801a0b1c2f9e61567b49d12ac2d1792f", "patch": "@@ -0,0 +1,34 @@\n+- // MIR for `keep_fallthrough` before UninhabitedEnumBranching\n++ // MIR for `keep_fallthrough` after UninhabitedEnumBranching\n+  \n+  fn keep_fallthrough(_1: S) -> u32 {\n+      debug s => _1;                       // in scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:12:21: 12:22\n+      let mut _0: u32;                     // return place in scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:12:30: 12:33\n+      let mut _2: isize;                   // in scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:14:9: 14:13\n+  \n+      bb0: {\n+          _2 = discriminant(_1);           // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:13:11: 13:12\n+-         switchInt(move _2) -> [0_isize: bb2, 1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:13:5: 13:12\n++         switchInt(move _2) -> [1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:13:5: 13:12\n+      }\n+  \n+      bb1: {\n+          _0 = const 3_u32;                // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:16:14: 16:15\n+          goto -> bb4;                     // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:16:14: 16:15\n+      }\n+  \n+      bb2: {\n+          _0 = const 1_u32;                // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:14:17: 14:18\n+          goto -> bb4;                     // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:14:17: 14:18\n+      }\n+  \n+      bb3: {\n+          _0 = const 2_u32;                // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:15:14: 15:15\n+          goto -> bb4;                     // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:15:14: 15:15\n+      }\n+  \n+      bb4: {\n+          return;                          // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:18:2: 18:2\n+      }\n+  }\n+  "}, {"sha": "0853883f8b841d54758885a7105dbe3dc1884441", "filename": "src/test/mir-opt/uninhabited_fallthrough_elimination.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0783009a801a0b1c2f9e61567b49d12ac2d1792f/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.rs?ref=0783009a801a0b1c2f9e61567b49d12ac2d1792f", "patch": "@@ -0,0 +1,32 @@\n+enum Empty {}\n+\n+enum S {\n+    A(Empty),\n+    B,\n+    C,\n+}\n+\n+use S::*;\n+\n+// EMIT_MIR uninhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff\n+fn keep_fallthrough(s: S) -> u32 {\n+    match s {\n+        A(_) => 1,\n+        B => 2,\n+        _ => 3,\n+    }\n+}\n+\n+// EMIT_MIR uninhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff\n+fn eliminate_fallthrough(s: S) -> u32 {\n+    match s {\n+        C => 1,\n+        B => 2,\n+        _ => 3,\n+    }\n+}\n+\n+fn main() {\n+    keep_fallthrough(B);\n+    eliminate_fallthrough(B);\n+}"}]}