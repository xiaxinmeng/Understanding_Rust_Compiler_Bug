{"sha": "2862f08b79c73233e338a063d7a58e642903c9f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NjJmMDhiNzljNzMyMzNlMzM4YTA2M2Q3YTU4ZTY0MjkwM2M5ZjU=", "commit": {"author": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-06-01T01:46:58Z"}, "committer": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-06-18T19:20:45Z"}, "message": "factor out maybe_suggest_unsized_generics", "tree": {"sha": "87f221a8cc2dd3efdd9cdd5b8308c9c55c47761f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87f221a8cc2dd3efdd9cdd5b8308c9c55c47761f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2862f08b79c73233e338a063d7a58e642903c9f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2862f08b79c73233e338a063d7a58e642903c9f5", "html_url": "https://github.com/rust-lang/rust/commit/2862f08b79c73233e338a063d7a58e642903c9f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2862f08b79c73233e338a063d7a58e642903c9f5/comments", "author": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce982a35e18e08b81a1524435f390b291f6e32b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce982a35e18e08b81a1524435f390b291f6e32b8", "html_url": "https://github.com/rust-lang/rust/commit/ce982a35e18e08b81a1524435f390b291f6e32b8"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "0441e3a1693e134e301293000f59fa3bc05a32ad", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2862f08b79c73233e338a063d7a58e642903c9f5/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2862f08b79c73233e338a063d7a58e642903c9f5/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=2862f08b79c73233e338a063d7a58e642903c9f5", "patch": "@@ -1088,6 +1088,13 @@ trait InferCtxtPrivExt<'tcx> {\n         obligation: &PredicateObligation<'tcx>,\n     );\n \n+    fn maybe_suggest_unsized_generics(\n+        &self,\n+        err: &mut DiagnosticBuilder<'tcx>,\n+        span: Span,\n+        node: Node<'hir>,\n+    );\n+\n     fn is_recursive_obligation(\n         &self,\n         obligated_types: &mut Vec<&ty::TyS<'tcx>>,\n@@ -1774,6 +1781,15 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n             (Some(node), true) => node,\n             _ => return,\n         };\n+        self.maybe_suggest_unsized_generics(err, span, node);\n+    }\n+\n+    fn maybe_suggest_unsized_generics(\n+        &self,\n+        err: &mut DiagnosticBuilder<'tcx>,\n+        span: Span,\n+        node: Node<'hir>,\n+    ) {\n         let generics = match node.generics() {\n             Some(generics) => generics,\n             None => return,\n@@ -1792,7 +1808,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n             {\n                 continue;\n             }\n-            debug!(\"suggest_unsized_bound_if_applicable: param={:?}\", param);\n+            debug!(\"maybe_suggest_unsized_generics: param={:?}\", param);\n             match node {\n                 hir::Node::Item(\n                     item"}]}