{"sha": "0c53b45e8581e439cf890adaba857014f7ef1fdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNTNiNDVlODU4MWU0MzljZjg5MGFkYWJhODU3MDE0ZjdlZjFmZGI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-13T04:26:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-13T04:26:51Z"}, "message": "Rollup merge of #57461 - nnethercote:ParseResult-Failure-static-str, r=simulacrum\n\nChange `String` to `&'static str` in `ParseResult::Failure`.\n\nThis avoids 770,000 allocations when compiling the `html5ever`\nbenchmark, reducing instruction counts by up to 2%.", "tree": {"sha": "38b4b38ddf1aa656f5f57d4a2249b827a4c6f9a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38b4b38ddf1aa656f5f57d4a2249b827a4c6f9a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c53b45e8581e439cf890adaba857014f7ef1fdb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcOr4LCRBK7hj4Ov3rIwAAdHIIAHNpzq91m4fdxnUms96DvNSh\nejn72cxv+zBjeCzMggok7pMD5sntlieBXZEdtg1QhCsLCPNiBPWCqjqSF1At15y5\nmWteWRFJbKfSA5DWgUcDR3qIlMRZOwH4LLFJSId2SxyxZYgqSFwSX5ygp6fxV4M/\niUm98VXSt4xg71EkrCD+7A86xhOtok+onK8bQciIPsN29/M5MUVoupDidCJrZUul\n9oqs/sYsgjx4gyZMogrB+Bqyp7dIm6RNkNU1mu74rt5iAXjxk7I3y5f2DYdIniVs\ntw3EeL9PKnvLiCGBqJS+CD6dQnFpWblmgk52tA1UEgCTOlJ+tqVbuip56LKPEbM=\n=Iuei\n-----END PGP SIGNATURE-----\n", "payload": "tree 38b4b38ddf1aa656f5f57d4a2249b827a4c6f9a2\nparent b7093e51c9352c22e780a5a5039da59297c4e846\nparent 46fa818d3443d4a62cd97be086d4d7a416b2d03e\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547353611 +0100\ncommitter GitHub <noreply@github.com> 1547353611 +0100\n\nRollup merge of #57461 - nnethercote:ParseResult-Failure-static-str, r=simulacrum\n\nChange `String` to `&'static str` in `ParseResult::Failure`.\n\nThis avoids 770,000 allocations when compiling the `html5ever`\nbenchmark, reducing instruction counts by up to 2%.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c53b45e8581e439cf890adaba857014f7ef1fdb", "html_url": "https://github.com/rust-lang/rust/commit/0c53b45e8581e439cf890adaba857014f7ef1fdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c53b45e8581e439cf890adaba857014f7ef1fdb/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7093e51c9352c22e780a5a5039da59297c4e846", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7093e51c9352c22e780a5a5039da59297c4e846", "html_url": "https://github.com/rust-lang/rust/commit/b7093e51c9352c22e780a5a5039da59297c4e846"}, {"sha": "46fa818d3443d4a62cd97be086d4d7a416b2d03e", "url": "https://api.github.com/repos/rust-lang/rust/commits/46fa818d3443d4a62cd97be086d4d7a416b2d03e", "html_url": "https://github.com/rust-lang/rust/commit/46fa818d3443d4a62cd97be086d4d7a416b2d03e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b4003ac729addf611bc7130f38be8804568ea61d", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0c53b45e8581e439cf890adaba857014f7ef1fdb/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c53b45e8581e439cf890adaba857014f7ef1fdb/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=0c53b45e8581e439cf890adaba857014f7ef1fdb", "patch": "@@ -271,7 +271,7 @@ pub enum ParseResult<T> {\n     Success(T),\n     /// Arm failed to match. If the second parameter is `token::Eof`, it indicates an unexpected\n     /// end of macro invocation. Otherwise, it indicates that no rules expected the given token.\n-    Failure(syntax_pos::Span, Token, String),\n+    Failure(syntax_pos::Span, Token, &'static str),\n     /// Fatal error (malformed macro?). Abort compilation.\n     Error(syntax_pos::Span, String),\n }\n@@ -721,7 +721,7 @@ pub fn parse(\n                         sess.source_map().next_point(parser.span)\n                     },\n                     token::Eof,\n-                    \"missing tokens in macro arguments\".to_string(),\n+                    \"missing tokens in macro arguments\",\n                 );\n             }\n         }\n@@ -760,7 +760,7 @@ pub fn parse(\n             return Failure(\n                 parser.span,\n                 parser.token,\n-                \"no rules expected this token in macro call\".to_string(),\n+                \"no rules expected this token in macro call\",\n             );\n         }\n         // Dump all possible `next_items` into `cur_items` for the next iteration."}, {"sha": "24202ca8fbdc08774ccf38079239d2bf4fe24a57", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c53b45e8581e439cf890adaba857014f7ef1fdb/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c53b45e8581e439cf890adaba857014f7ef1fdb/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=0c53b45e8581e439cf890adaba857014f7ef1fdb", "patch": "@@ -202,7 +202,7 @@ fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n     let best_fail_msg = parse_failure_msg(best_fail_tok.expect(\"ran no matchers\"));\n     let span = best_fail_spot.substitute_dummy(sp);\n     let mut err = cx.struct_span_err(span, &best_fail_msg);\n-    err.span_label(span, best_fail_text.unwrap_or(best_fail_msg));\n+    err.span_label(span, best_fail_text.unwrap_or(&best_fail_msg));\n     if let Some(sp) = def_span {\n         if cx.source_map().span_to_filename(sp).is_real() && !sp.is_dummy() {\n             err.span_label(cx.source_map().def_span(sp), \"when calling this macro\");"}]}