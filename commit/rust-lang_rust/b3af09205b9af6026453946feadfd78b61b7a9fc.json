{"sha": "b3af09205b9af6026453946feadfd78b61b7a9fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYWYwOTIwNWI5YWY2MDI2NDUzOTQ2ZmVhZGZkNzhiNjFiN2E5ZmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-04T20:56:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-04T20:56:11Z"}, "message": "Auto merge of #56486 - matthewjasper:propagate-all-closure-bounds, r=pnkfelix\n\nPropagate all closure requirements to the caller\n\nCloses #56477\n\nThis should be backported to 1.32 if it doesn't make the cut.\n\nr? @pnkfelix\ncc @nikomatsakis", "tree": {"sha": "738aa1f6faba7cba1f31a244071919578ac38f24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/738aa1f6faba7cba1f31a244071919578ac38f24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3af09205b9af6026453946feadfd78b61b7a9fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3af09205b9af6026453946feadfd78b61b7a9fc", "html_url": "https://github.com/rust-lang/rust/commit/b3af09205b9af6026453946feadfd78b61b7a9fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3af09205b9af6026453946feadfd78b61b7a9fc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "906deae0790bd18681b937fe9a141a3c26cf1855", "url": "https://api.github.com/repos/rust-lang/rust/commits/906deae0790bd18681b937fe9a141a3c26cf1855", "html_url": "https://github.com/rust-lang/rust/commit/906deae0790bd18681b937fe9a141a3c26cf1855"}, {"sha": "b2e6da7a7f8e3a82a48b0e3d6cb7912d2e31e758", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2e6da7a7f8e3a82a48b0e3d6cb7912d2e31e758", "html_url": "https://github.com/rust-lang/rust/commit/b2e6da7a7f8e3a82a48b0e3d6cb7912d2e31e758"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "fbde699264b4a485a52c518e2a577abb5982c03a", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3af09205b9af6026453946feadfd78b61b7a9fc/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3af09205b9af6026453946feadfd78b61b7a9fc/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=b3af09205b9af6026453946feadfd78b61b7a9fc", "patch": "@@ -1208,7 +1208,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                         blame_span: blame_span_category.1,\n                         category: blame_span_category.0,\n                     });\n-                    return;\n+                    continue;\n                 }\n             }\n "}, {"sha": "e5fe74f23056fca63ff059eaa333b6aa2d666e6b", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b3af09205b9af6026453946feadfd78b61b7a9fc/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3af09205b9af6026453946feadfd78b61b7a9fc/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=b3af09205b9af6026453946feadfd78b61b7a9fc", "patch": "@@ -355,13 +355,13 @@ fn check_item_type<'a, 'tcx>(\n ) {\n     debug!(\"check_item_type: {:?}\", item_id);\n \n-    for_id(tcx, item_id, ty_span).with_fcx(|fcx, _this| {\n-        let ty = fcx.tcx.type_of(fcx.tcx.hir.local_def_id(item_id));\n+    for_id(tcx, item_id, ty_span).with_fcx(|fcx, gcx| {\n+        let ty = gcx.type_of(gcx.hir.local_def_id(item_id));\n         let item_ty = fcx.normalize_associated_types_in(ty_span, &ty);\n \n         let mut forbid_unsized = true;\n         if allow_foreign_ty {\n-            if let TyKind::Foreign(_) = tcx.struct_tail(item_ty).sty {\n+            if let TyKind::Foreign(_) = fcx.tcx.struct_tail(item_ty).sty {\n                 forbid_unsized = false;\n             }\n         }"}, {"sha": "dbc659b4aeef94c145180dcea3ff23a7148d7349", "filename": "src/test/ui/nll/closure-requirements/propagate-multiple-requirements.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b3af09205b9af6026453946feadfd78b61b7a9fc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-multiple-requirements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3af09205b9af6026453946feadfd78b61b7a9fc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-multiple-requirements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-multiple-requirements.rs?ref=b3af09205b9af6026453946feadfd78b61b7a9fc", "patch": "@@ -0,0 +1,25 @@\n+// Test that we propagate *all* requirements to the caller, not just the first\n+// one.\n+\n+#![feature(nll)]\n+\n+fn once<S, T, U, F: FnOnce(S, T) -> U>(f: F, s: S, t: T) -> U {\n+    f(s, t)\n+}\n+\n+pub fn dangle() -> &'static [i32] {\n+    let other_local_arr = [0, 2, 4];\n+    let local_arr = other_local_arr;\n+    let mut out: &mut &'static [i32] = &mut (&[1] as _);\n+    once(|mut z: &[i32], mut out_val: &mut &[i32]| {\n+        // We unfortunately point to the first use in the closure in the error\n+        // message\n+        z = &local_arr; //~ ERROR\n+        *out_val = &local_arr;\n+    }, &[] as &[_], &mut *out);\n+    *out\n+}\n+\n+fn main() {\n+    println!(\"{:?}\", dangle());\n+}"}, {"sha": "2ad4577869a5536ef6c482f8a35caf04133b4988", "filename": "src/test/ui/nll/closure-requirements/propagate-multiple-requirements.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b3af09205b9af6026453946feadfd78b61b7a9fc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-multiple-requirements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3af09205b9af6026453946feadfd78b61b7a9fc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-multiple-requirements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-multiple-requirements.stderr?ref=b3af09205b9af6026453946feadfd78b61b7a9fc", "patch": "@@ -0,0 +1,17 @@\n+error[E0597]: `local_arr` does not live long enough\n+  --> $DIR/propagate-multiple-requirements.rs:17:14\n+   |\n+LL |     let mut out: &mut &'static [i32] = &mut (&[1] as _);\n+   |                  ------------------- type annotation requires that `local_arr` is borrowed for `'static`\n+LL |     once(|mut z: &[i32], mut out_val: &mut &[i32]| {\n+   |          ----------------------------------------- value captured here\n+...\n+LL |         z = &local_arr; //~ ERROR\n+   |              ^^^^^^^^^ borrowed value does not live long enough\n+...\n+LL | }\n+   | - `local_arr` dropped here while still borrowed\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}]}