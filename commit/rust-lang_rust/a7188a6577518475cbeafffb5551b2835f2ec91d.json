{"sha": "a7188a6577518475cbeafffb5551b2835f2ec91d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MTg4YTY1Nzc1MTg0NzVjYmVhZmZmYjU1NTFiMjgzNWYyZWM5MWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-16T01:48:00Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-16T01:53:44Z"}, "message": "rustc: Don't sign extend uints during translation\n\nDoing so produces incorrect results on a 32-bit compiler targeting 64-bits", "tree": {"sha": "23a03793b665f58bebf77f0a88b6641919ffc498", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23a03793b665f58bebf77f0a88b6641919ffc498"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7188a6577518475cbeafffb5551b2835f2ec91d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7188a6577518475cbeafffb5551b2835f2ec91d", "html_url": "https://github.com/rust-lang/rust/commit/a7188a6577518475cbeafffb5551b2835f2ec91d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7188a6577518475cbeafffb5551b2835f2ec91d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f47f92235acd84e42cce4e31b36f507a460b0f53", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47f92235acd84e42cce4e31b36f507a460b0f53", "html_url": "https://github.com/rust-lang/rust/commit/f47f92235acd84e42cce4e31b36f507a460b0f53"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e9e58cf52bbd47f58712d18acb78f72f74118ad7", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7188a6577518475cbeafffb5551b2835f2ec91d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7188a6577518475cbeafffb5551b2835f2ec91d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=a7188a6577518475cbeafffb5551b2835f2ec91d", "patch": "@@ -2124,7 +2124,7 @@ fn store_temp_expr(cx: @block_ctxt, action: copy_action, dst: ValueRef,\n fn trans_crate_lit(cx: @crate_ctxt, lit: ast::lit) -> ValueRef {\n     alt lit.node {\n       ast::lit_int(i) { ret C_int(cx, i); }\n-      ast::lit_uint(u) { ret C_int(cx, u as int); }\n+      ast::lit_uint(u) { ret C_uint(cx, u); }\n       ast::lit_mach_int(tm, i) {\n         // FIXME: the entire handling of mach types falls apart\n         // if target int width is larger than host, at the moment;"}]}