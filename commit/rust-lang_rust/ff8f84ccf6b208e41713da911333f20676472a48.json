{"sha": "ff8f84ccf6b208e41713da911333f20676472a48", "node_id": "C_kwDOAAsO6NoAKGZmOGY4NGNjZjZiMjA4ZTQxNzEzZGE5MTEzMzNmMjA2NzY0NzJhNDg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-02T19:41:54Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-05T18:05:45Z"}, "message": "Bless more tests", "tree": {"sha": "549f5afc93a8d65290ae8b1843d62f655fb5be3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/549f5afc93a8d65290ae8b1843d62f655fb5be3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff8f84ccf6b208e41713da911333f20676472a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff8f84ccf6b208e41713da911333f20676472a48", "html_url": "https://github.com/rust-lang/rust/commit/ff8f84ccf6b208e41713da911333f20676472a48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff8f84ccf6b208e41713da911333f20676472a48/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9891563d30375df1854dd2ec0271ac3d058e10c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9891563d30375df1854dd2ec0271ac3d058e10c", "html_url": "https://github.com/rust-lang/rust/commit/d9891563d30375df1854dd2ec0271ac3d058e10c"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "cbbcfad3ef4833016debbc3b8ad3eb299f0fb5b5", "filename": "src/test/codegen/avr/avr-func-addrspace.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ff8f84ccf6b208e41713da911333f20676472a48/src%2Ftest%2Fcodegen%2Favr%2Favr-func-addrspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff8f84ccf6b208e41713da911333f20676472a48/src%2Ftest%2Fcodegen%2Favr%2Favr-func-addrspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Favr%2Favr-func-addrspace.rs?ref=ff8f84ccf6b208e41713da911333f20676472a48", "patch": "@@ -19,6 +19,8 @@ pub trait Sized { }\n pub trait Copy { }\n #[lang = \"receiver\"]\n pub trait Receiver { }\n+#[lang = \"tuple_trait\"]\n+pub trait Tuple { }\n \n pub struct Result<T, E> { _a: T, _b: E }\n \n@@ -29,32 +31,24 @@ impl Copy for &usize {}\n pub unsafe fn drop_in_place<T: ?Sized>(_: *mut T) {}\n \n #[lang = \"fn_once\"]\n-pub trait FnOnce<Args> {\n+pub trait FnOnce<Args: Tuple> {\n     #[lang = \"fn_once_output\"]\n     type Output;\n \n     extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\n }\n \n #[lang = \"fn_mut\"]\n-pub trait FnMut<Args> : FnOnce<Args> {\n+pub trait FnMut<Args: Tuple> : FnOnce<Args> {\n     extern \"rust-call\" fn call_mut(&mut self, args: Args) -> Self::Output;\n }\n \n #[lang = \"fn\"]\n-pub trait Fn<Args>: FnOnce<Args> {\n+pub trait Fn<Args: Tuple>: FnOnce<Args> {\n     /// Performs the call operation.\n     extern \"rust-call\" fn call(&self, args: Args) -> Self::Output;\n }\n \n-impl<'a, A, R> FnOnce<A> for &'a fn(A) -> R {\n-    type Output = R;\n-\n-    extern \"rust-call\" fn call_once(self, args: A) -> R {\n-        (*self)(args)\n-    }\n-}\n-\n pub static mut STORAGE_FOO: fn(&usize, &mut u32) -> Result<(), ()> = arbitrary_black_box;\n pub static mut STORAGE_BAR: u32 = 12;\n "}, {"sha": "3121abbea369b04de3b071b4389f918b81ddf32b", "filename": "src/test/incremental/hashes/extern_mods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff8f84ccf6b208e41713da911333f20676472a48/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff8f84ccf6b208e41713da911333f20676472a48/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs?ref=ff8f84ccf6b208e41713da911333f20676472a48", "patch": "@@ -128,7 +128,7 @@ extern \"C\" {\n // Change calling convention ---------------------------------------------------\n #[cfg(any(cfail1,cfail4))]\n extern \"C\" {\n-    pub fn change_calling_convention(c: i32);\n+    pub fn change_calling_convention(c: (i32,));\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n@@ -137,7 +137,7 @@ extern \"C\" {\n #[rustc_clean(cfg = \"cfail5\", except = \"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg = \"cfail6\")]\n extern \"rust-call\" {\n-    pub fn change_calling_convention(c: i32);\n+    pub fn change_calling_convention(c: (i32,));\n }\n \n // Make function public --------------------------------------------------------"}, {"sha": "ece4dea9aaf6ff6b6ad5445e25b8faa3f956db70", "filename": "src/test/run-pass-valgrind/unsized-locals/by-value-trait-objects-rust-call.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff8f84ccf6b208e41713da911333f20676472a48/src%2Ftest%2Frun-pass-valgrind%2Funsized-locals%2Fby-value-trait-objects-rust-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff8f84ccf6b208e41713da911333f20676472a48/src%2Ftest%2Frun-pass-valgrind%2Funsized-locals%2Fby-value-trait-objects-rust-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Funsized-locals%2Fby-value-trait-objects-rust-call.rs?ref=ff8f84ccf6b208e41713da911333f20676472a48", "patch": "@@ -1,7 +1,8 @@\n #![feature(unsized_locals)]\n #![feature(unboxed_closures)]\n+#![feature(tuple_trait)]\n \n-pub trait FnOnce<Args> {\n+pub trait FnOnce<Args: std::marker::Tuple> {\n     type Output;\n     extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\n }"}, {"sha": "94df2b0b83f0c23b9835ea1c66ca12f9eb58938c", "filename": "src/test/run-pass-valgrind/unsized-locals/by-value-trait-objects-rust-call2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff8f84ccf6b208e41713da911333f20676472a48/src%2Ftest%2Frun-pass-valgrind%2Funsized-locals%2Fby-value-trait-objects-rust-call2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff8f84ccf6b208e41713da911333f20676472a48/src%2Ftest%2Frun-pass-valgrind%2Funsized-locals%2Fby-value-trait-objects-rust-call2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Funsized-locals%2Fby-value-trait-objects-rust-call2.rs?ref=ff8f84ccf6b208e41713da911333f20676472a48", "patch": "@@ -1,7 +1,8 @@\n #![feature(unsized_locals)]\n #![feature(unboxed_closures)]\n+#![feature(tuple_trait)]\n \n-pub trait FnOnce<Args> {\n+pub trait FnOnce<Args: std::marker::Tuple> {\n     type Output;\n     extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\n }"}]}