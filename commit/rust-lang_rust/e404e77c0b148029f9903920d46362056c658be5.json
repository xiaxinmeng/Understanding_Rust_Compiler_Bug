{"sha": "e404e77c0b148029f9903920d46362056c658be5", "node_id": "C_kwDOAAsO6NoAKGU0MDRlNzdjMGIxNDgwMjlmOTkwMzkyMGQ0NjM2MjA1NmM2NThiZTU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-04-14T07:28:56Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-04-14T07:28:56Z"}, "message": "Add a stable MIR way to get the main function", "tree": {"sha": "964d5b99ae9873cf23870cd8300477b57a43dd61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/964d5b99ae9873cf23870cd8300477b57a43dd61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e404e77c0b148029f9903920d46362056c658be5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e404e77c0b148029f9903920d46362056c658be5", "html_url": "https://github.com/rust-lang/rust/commit/e404e77c0b148029f9903920d46362056c658be5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e404e77c0b148029f9903920d46362056c658be5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fab99073b01539ce2664366011c7f3e378e52b7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fab99073b01539ce2664366011c7f3e378e52b7e", "html_url": "https://github.com/rust-lang/rust/commit/fab99073b01539ce2664366011c7f3e378e52b7e"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "4dad3c6bce7f1c508ee9cd502d60de4f804a5a47", "filename": "compiler/rustc_smir/src/rustc_smir/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e404e77c0b148029f9903920d46362056c658be5/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e404e77c0b148029f9903920d46362056c658be5/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs?ref=e404e77c0b148029f9903920d46362056c658be5", "patch": "@@ -40,6 +40,10 @@ pub fn all_local_items() -> stable_mir::CrateItems {\n     with(|tcx| tcx.mir_keys(()).iter().map(|item| crate_item(item.to_def_id())).collect())\n }\n \n+pub fn entry_fn() -> Option<stable_mir::CrateItem> {\n+    with(|tcx| Some(crate_item(tcx.entry_fn(())?.0)))\n+}\n+\n /// Build a stable mir crate from a given crate number.\n fn smir_crate(tcx: TyCtxt<'_>, crate_num: CrateNum) -> stable_mir::Crate {\n     let crate_name = tcx.crate_name(crate_num).to_string();"}, {"sha": "1d2efb5eab9475617ca1ad5fc96ed4d8dd4eca71", "filename": "compiler/rustc_smir/src/stable_mir/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e404e77c0b148029f9903920d46362056c658be5/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e404e77c0b148029f9903920d46362056c658be5/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmod.rs?ref=e404e77c0b148029f9903920d46362056c658be5", "patch": "@@ -45,6 +45,13 @@ impl CrateItem {\n     }\n }\n \n+/// Return the function where execution starts if the current\n+/// crate defines that. This is usually `main`, but could be\n+/// `start` if the crate is a no-std crate.\n+pub fn entry_fn() -> Option<CrateItem> {\n+    crate::rustc_smir::entry_fn()\n+}\n+\n /// Access to the local crate.\n pub fn local_crate() -> Crate {\n     crate::rustc_smir::local_crate()"}, {"sha": "dfde8c97ec264beab7187b79191e94b07bb5c478", "filename": "tests/ui-fulldeps/stable-mir/crate-info.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e404e77c0b148029f9903920d46362056c658be5/tests%2Fui-fulldeps%2Fstable-mir%2Fcrate-info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e404e77c0b148029f9903920d46362056c658be5/tests%2Fui-fulldeps%2Fstable-mir%2Fcrate-info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fstable-mir%2Fcrate-info.rs?ref=e404e77c0b148029f9903920d46362056c658be5", "patch": "@@ -29,6 +29,8 @@ fn test_stable_mir(tcx: TyCtxt<'_>) {\n     let local = stable_mir::local_crate();\n     assert_eq!(&local.name, CRATE_NAME);\n \n+    assert_eq!(stable_mir::entry_fn(), None);\n+\n     // Find items in the local crate.\n     let items = stable_mir::all_local_items();\n     assert!(get_item(tcx, &items, (DefKind::Fn, \"foo_bar\")).is_some());"}]}