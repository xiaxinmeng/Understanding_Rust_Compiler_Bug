{"sha": "114da8499642b0b29d624c7e30c8f07e25933ff6", "node_id": "C_kwDOAAsO6NoAKDExNGRhODQ5OTY0MmIwYjI5ZDYyNGM3ZTMwYzhmMDdlMjU5MzNmZjY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-19T23:57:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T21:12:07Z"}, "message": "use extern type for extra opaqueness", "tree": {"sha": "b26f886225a7ab52bdb81d81f4b2609036b78391", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b26f886225a7ab52bdb81d81f4b2609036b78391"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/114da8499642b0b29d624c7e30c8f07e25933ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/114da8499642b0b29d624c7e30c8f07e25933ff6", "html_url": "https://github.com/rust-lang/rust/commit/114da8499642b0b29d624c7e30c8f07e25933ff6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/114da8499642b0b29d624c7e30c8f07e25933ff6/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e840c5c8c75081dda4b33f8afcb0c77ad3105bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e840c5c8c75081dda4b33f8afcb0c77ad3105bb", "html_url": "https://github.com/rust-lang/rust/commit/5e840c5c8c75081dda4b33f8afcb0c77ad3105bb"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "2becaa833625483181c86be7f8841143fa26b2e7", "filename": "library/core/src/ptr/metadata.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/114da8499642b0b29d624c7e30c8f07e25933ff6/library%2Fcore%2Fsrc%2Fptr%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/114da8499642b0b29d624c7e30c8f07e25933ff6/library%2Fcore%2Fsrc%2Fptr%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmetadata.rs?ref=114da8499642b0b29d624c7e30c8f07e25933ff6", "patch": "@@ -180,14 +180,15 @@ pub struct DynMetadata<Dyn: ?Sized> {\n     phantom: crate::marker::PhantomData<Dyn>,\n }\n \n-/// Opaque type for accessing vtables.\n-///\n-/// Private implementation detail of `DynMetadata::size_of` etc.\n-/// Must be zero-sized since there is conceptually not actually any Abstract Machine memory behind this pointer.\n-/// However, we can require pointer alignment.\n-#[repr(C)]\n #[cfg(not(bootstrap))]\n-struct VTable([usize; 0]);\n+extern \"C\" {\n+    /// Opaque type for accessing vtables.\n+    ///\n+    /// Private implementation detail of `DynMetadata::size_of` etc.\n+    /// Must be zero-sized since there is conceptually not actually any Abstract Machine memory behind this pointer.\n+    /// However, we can require pointer alignment.\n+    type VTable;\n+}\n \n /// The common prefix of all vtables. It is followed by function pointers for trait methods.\n ///"}]}