{"sha": "09ad993a259006c41bd63f14ad68b3a99e365e94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YWQ5OTNhMjU5MDA2YzQxYmQ2M2YxNGFkNjhiM2E5OWUzNjVlOTQ=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-02-19T01:37:25Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-02-24T12:16:02Z"}, "message": "tests: add two new run-pass tests for method behavior after UFCS.", "tree": {"sha": "5ea4af9e3c421edbb6908a66b3a6708b386ed243", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ea4af9e3c421edbb6908a66b3a6708b386ed243"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09ad993a259006c41bd63f14ad68b3a99e365e94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09ad993a259006c41bd63f14ad68b3a99e365e94", "html_url": "https://github.com/rust-lang/rust/commit/09ad993a259006c41bd63f14ad68b3a99e365e94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09ad993a259006c41bd63f14ad68b3a99e365e94/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d31b9ebef5c39de3fff9da02eea880d1838a8a3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d31b9ebef5c39de3fff9da02eea880d1838a8a3b", "html_url": "https://github.com/rust-lang/rust/commit/d31b9ebef5c39de3fff9da02eea880d1838a8a3b"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "663ed24d60e48483ba246e1f41a977f2aa94fea8", "filename": "src/test/run-pass/impl-inherent-non-conflict.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/09ad993a259006c41bd63f14ad68b3a99e365e94/src%2Ftest%2Frun-pass%2Fimpl-inherent-non-conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09ad993a259006c41bd63f14ad68b3a99e365e94/src%2Ftest%2Frun-pass%2Fimpl-inherent-non-conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-inherent-non-conflict.rs?ref=09ad993a259006c41bd63f14ad68b3a99e365e94", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Ensure that an user-defined type admits multiple inherent methods\n+// with the same name, which can be called on values that have a\n+// precise enough type to allow distinguishing between the methods.\n+\n+struct Foo<T>(T);\n+\n+impl Foo<usize> {\n+    fn bar(&self) -> i32 { self.0 as i32 }\n+}\n+\n+impl Foo<isize> {\n+    fn bar(&self) -> i32 { -(self.0 as i32) }\n+}\n+\n+fn main() {\n+    let foo_u = Foo::<usize>(5);\n+    assert_eq!(foo_u.bar(), 5);\n+\n+    let foo_i = Foo::<isize>(3);\n+    assert_eq!(foo_i.bar(), -3);\n+}"}, {"sha": "3031228b3ab44f5361fd2a6263e4dc706381a3cd", "filename": "src/test/run-pass/impl-inherent-prefer-over-trait.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/09ad993a259006c41bd63f14ad68b3a99e365e94/src%2Ftest%2Frun-pass%2Fimpl-inherent-prefer-over-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09ad993a259006c41bd63f14ad68b3a99e365e94/src%2Ftest%2Frun-pass%2Fimpl-inherent-prefer-over-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-inherent-prefer-over-trait.rs?ref=09ad993a259006c41bd63f14ad68b3a99e365e94", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo;\n+\n+trait Trait {\n+    fn bar(&self);\n+}\n+\n+// Inherent impls should be preferred over trait ones.\n+impl Foo {\n+    fn bar(&self) {}\n+}\n+\n+impl Trait {\n+    fn baz(_: &Foo) {}\n+}\n+\n+impl Trait for Foo {\n+    fn bar(&self) { panic!(\"wrong method called!\") }\n+}\n+\n+fn main() {\n+    Foo.bar();\n+    Foo::bar(&Foo);\n+    <Foo>::bar(&Foo);\n+\n+    // Should work even if Trait::baz doesn't exist.\n+    // N.B: `<Trait>::bar` would be ambiguous.\n+    <Trait>::baz(&Foo);\n+}"}]}