{"sha": "9d41e8f90dc837cff4960a67d839db015a15ed74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNDFlOGY5MGRjODM3Y2ZmNDk2MGE2N2Q4MzlkYjAxNWExNWVkNzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-23T10:44:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-23T10:44:05Z"}, "message": "(try to) fix cranelift", "tree": {"sha": "634851d6b8b5215dea3f19fb2230475e6949bffd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/634851d6b8b5215dea3f19fb2230475e6949bffd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d41e8f90dc837cff4960a67d839db015a15ed74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d41e8f90dc837cff4960a67d839db015a15ed74", "html_url": "https://github.com/rust-lang/rust/commit/9d41e8f90dc837cff4960a67d839db015a15ed74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d41e8f90dc837cff4960a67d839db015a15ed74/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e52b61040223ce8b107fb759f7981d5fd90bdcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e52b61040223ce8b107fb759f7981d5fd90bdcc", "html_url": "https://github.com/rust-lang/rust/commit/5e52b61040223ce8b107fb759f7981d5fd90bdcc"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "6b132e4ff0fb8093712495e2935ff17cb7d2f3a6", "filename": "src/constant.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d41e8f90dc837cff4960a67d839db015a15ed74/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d41e8f90dc837cff4960a67d839db015a15ed74/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=9d41e8f90dc837cff4960a67d839db015a15ed74", "patch": "@@ -2,6 +2,7 @@\n \n use rustc_span::DUMMY_SP;\n \n+use rustc_ast::Mutability;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::ErrorReported;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n@@ -175,6 +176,7 @@ pub(crate) fn codegen_const_value<'tcx>(\n                 let mut alloc = Allocation::from_bytes(\n                     std::iter::repeat(0).take(size.bytes_usize()).collect::<Vec<u8>>(),\n                     align,\n+                    Mutability::Not,\n                 );\n                 alloc.write_scalar(fx, alloc_range(Size::ZERO, size), x.into()).unwrap();\n                 let alloc = fx.tcx.intern_const_alloc(alloc);"}]}