{"sha": "6e7b45e12b76cad70262281d5fae7ad98032fafc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlN2I0NWUxMmI3NmNhZDcwMjYyMjgxZDVmYWU3YWQ5ODAzMmZhZmM=", "commit": {"author": {"name": "Fabian Drinck", "email": "fabian.drinck@rwth-aachen.de", "date": "2019-03-17T08:49:31Z"}, "committer": {"name": "Fabian Drinck", "email": "fabian.drinck@rwth-aachen.de", "date": "2019-03-30T21:37:02Z"}, "message": "Replace REDUNDANT_IMPORT with UNUSED_IMPORTS", "tree": {"sha": "f11b4f1903a78e7469dff3c76ff95327ff0dea81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f11b4f1903a78e7469dff3c76ff95327ff0dea81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e7b45e12b76cad70262281d5fae7ad98032fafc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e7b45e12b76cad70262281d5fae7ad98032fafc", "html_url": "https://github.com/rust-lang/rust/commit/6e7b45e12b76cad70262281d5fae7ad98032fafc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e7b45e12b76cad70262281d5fae7ad98032fafc/comments", "author": {"login": "fabric-and-ink", "id": 13430670, "node_id": "MDQ6VXNlcjEzNDMwNjcw", "avatar_url": "https://avatars.githubusercontent.com/u/13430670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabric-and-ink", "html_url": "https://github.com/fabric-and-ink", "followers_url": "https://api.github.com/users/fabric-and-ink/followers", "following_url": "https://api.github.com/users/fabric-and-ink/following{/other_user}", "gists_url": "https://api.github.com/users/fabric-and-ink/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabric-and-ink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabric-and-ink/subscriptions", "organizations_url": "https://api.github.com/users/fabric-and-ink/orgs", "repos_url": "https://api.github.com/users/fabric-and-ink/repos", "events_url": "https://api.github.com/users/fabric-and-ink/events{/privacy}", "received_events_url": "https://api.github.com/users/fabric-and-ink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fabric-and-ink", "id": 13430670, "node_id": "MDQ6VXNlcjEzNDMwNjcw", "avatar_url": "https://avatars.githubusercontent.com/u/13430670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabric-and-ink", "html_url": "https://github.com/fabric-and-ink", "followers_url": "https://api.github.com/users/fabric-and-ink/followers", "following_url": "https://api.github.com/users/fabric-and-ink/following{/other_user}", "gists_url": "https://api.github.com/users/fabric-and-ink/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabric-and-ink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabric-and-ink/subscriptions", "organizations_url": "https://api.github.com/users/fabric-and-ink/orgs", "repos_url": "https://api.github.com/users/fabric-and-ink/repos", "events_url": "https://api.github.com/users/fabric-and-ink/events{/privacy}", "received_events_url": "https://api.github.com/users/fabric-and-ink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9272364bf443ec29cf9cc3548f37a7579b35bfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9272364bf443ec29cf9cc3548f37a7579b35bfd", "html_url": "https://github.com/rust-lang/rust/commit/f9272364bf443ec29cf9cc3548f37a7579b35bfd"}], "stats": {"total": 89, "additions": 17, "deletions": 72}, "files": [{"sha": "6908674bc13a283acfdb12a9ae126f07febab0a3", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=6e7b45e12b76cad70262281d5fae7ad98032fafc", "patch": "@@ -392,12 +392,6 @@ declare_lint! {\n     \"nested occurrence of `impl Trait` type\"\n }\n \n-declare_lint! {\n-    pub REDUNDANT_IMPORT,\n-    Warn,\n-    \"redundant import\"\n-}\n-\n /// Does nothing as a lint pass, but registers some `Lint`s\n /// that are used by other parts of the compiler.\n #[derive(Copy, Clone)]\n@@ -591,7 +585,7 @@ impl BuiltinLintDiagnostics {\n                     let introduced = if is_imported { \"imported\" } else { \"defined\" };\n                     db.span_label(\n                         span,\n-                        format!(\"the item `{}` was {} here\", ident, introduced)\n+                        format!(\"the item `{}` was already {} here\", ident, introduced)\n                     );\n                 }\n             }"}, {"sha": "99e20c398d92f02c007e9fc9043f6b4c45d2f009", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=6e7b45e12b76cad70262281d5fae7ad98032fafc", "patch": "@@ -18,7 +18,7 @@ use rustc::lint::builtin::BuiltinLintDiagnostics;\n use rustc::lint::builtin::{\n     DUPLICATE_MACRO_EXPORTS,\n     PUB_USE_OF_PRIVATE_EXTERN_CRATE,\n-    REDUNDANT_IMPORT,\n+    UNUSED_IMPORTS,\n };\n use rustc::hir::def_id::{CrateNum, DefId};\n use rustc::hir::def::*;\n@@ -1308,7 +1308,7 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n             is_redundant.present_items().all(|is_redundant| is_redundant)\n         {\n             self.session.buffer_lint_with_diagnostic(\n-                REDUNDANT_IMPORT,\n+                UNUSED_IMPORTS,\n                 directive.id,\n                 directive.span,\n                 &format!(\"the item `{}` is imported redundantly\", ident),"}, {"sha": "9c5b206203c1dc9df0fca647d9c91b4f575d453f", "filename": "src/test/ui/lint/lint-unused-imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.rs?ref=6e7b45e12b76cad70262281d5fae7ad98032fafc", "patch": "@@ -1,6 +1,5 @@\n #![deny(unused_imports)]\n #![allow(dead_code)]\n-#![allow(redundant_import)]\n \n use bar::c::cc as cal;\n "}, {"sha": "62490972420a269ecd3a858e1a66c9c70b0e3e89", "filename": "src/test/ui/lint/lint-unused-imports.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr?ref=6e7b45e12b76cad70262281d5fae7ad98032fafc", "patch": "@@ -34,7 +34,7 @@ error: unused import: `foo::Square`\n LL |         use foo::Square;\n    |             ^^^^^^^^^^^\n \n-warning: the item `g` is imported redundantly\n+error: the item `g` is imported redundantly\n   --> $DIR/lint-unused-imports.rs:68:9\n    |\n LL | / fn g() {\n@@ -44,17 +44,15 @@ LL | |     fn f() {\n LL | |         self::g();\n LL | |     }\n LL | | }\n-   | |_- the item `g` was already imported here\n-   |\n-   = note: #[warn(redundant_import)] on by default\n+   | |_- the item `g` was already defined here\n \n error: unused import: `self::g`\n   --> $DIR/lint-unused-imports.rs:68:9\n    |\n LL |     use self::g;\n    |         ^^^^^^^\n \n-warning: the item `foo` is imported redundantly\n+error: the item `foo` is imported redundantly\n   --> $DIR/lint-unused-imports.rs:77:9\n    |\n LL | use test2::{foo, bar};\n@@ -75,5 +73,5 @@ error: unused import: `test::B2`\n LL | use test::B2;\n    |     ^^^^^^^^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "2c388cf3713b0c0aafc4be604803c3a9d1cd9212", "filename": "src/test/ui/rust-2018/future-proofing-locals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Ftest%2Fui%2Frust-2018%2Ffuture-proofing-locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Ftest%2Fui%2Frust-2018%2Ffuture-proofing-locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ffuture-proofing-locals.rs?ref=6e7b45e12b76cad70262281d5fae7ad98032fafc", "patch": "@@ -1,7 +1,7 @@\n // edition:2018\n \n #![allow(non_camel_case_types)]\n-#![allow(redundant_import)]\n+#![allow(unused_imports)]\n \n mod T {\n     pub struct U;"}, {"sha": "7021489a6ddcfaf9e1b3e7ea33f276279a28e86b", "filename": "src/test/ui/rust-2018/future-proofing-locals.stderr", "status": "modified", "additions": 9, "deletions": 55, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Ftest%2Fui%2Frust-2018%2Ffuture-proofing-locals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e7b45e12b76cad70262281d5fae7ad98032fafc/src%2Ftest%2Fui%2Frust-2018%2Ffuture-proofing-locals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ffuture-proofing-locals.stderr?ref=6e7b45e12b76cad70262281d5fae7ad98032fafc", "patch": "@@ -1,102 +1,56 @@\n error: imports cannot refer to type parameters\n-  --> $DIR/future-proofing-locals.rs:13:9\n+  --> $DIR/future-proofing-locals.rs:14:9\n    |\n LL |     use T as _;\n    |         ^\n \n error: imports cannot refer to type parameters\n-  --> $DIR/future-proofing-locals.rs:14:9\n+  --> $DIR/future-proofing-locals.rs:15:9\n    |\n LL |     use T::U;\n    |         ^\n \n error: imports cannot refer to type parameters\n-  --> $DIR/future-proofing-locals.rs:15:9\n+  --> $DIR/future-proofing-locals.rs:16:9\n    |\n LL |     use T::*;\n    |         ^\n \n error: imports cannot refer to type parameters\n-  --> $DIR/future-proofing-locals.rs:19:9\n+  --> $DIR/future-proofing-locals.rs:20:9\n    |\n LL |     use T;\n    |         ^\n \n error: imports cannot refer to local variables\n-  --> $DIR/future-proofing-locals.rs:25:9\n+  --> $DIR/future-proofing-locals.rs:26:9\n    |\n LL |     use x as _;\n    |         ^\n \n error: imports cannot refer to local variables\n-  --> $DIR/future-proofing-locals.rs:31:9\n+  --> $DIR/future-proofing-locals.rs:32:9\n    |\n LL |     use x;\n    |         ^\n \n error: imports cannot refer to local variables\n-  --> $DIR/future-proofing-locals.rs:37:17\n+  --> $DIR/future-proofing-locals.rs:38:17\n    |\n LL |             use x;\n    |                 ^\n \n error: imports cannot refer to type parameters\n-  --> $DIR/future-proofing-locals.rs:45:10\n+  --> $DIR/future-proofing-locals.rs:46:10\n    |\n LL |     use {T as _, x};\n    |          ^\n \n error: imports cannot refer to local variables\n-  --> $DIR/future-proofing-locals.rs:45:18\n+  --> $DIR/future-proofing-locals.rs:46:18\n    |\n LL |     use {T as _, x};\n    |                  ^\n \n-warning: the item `T` is imported redundantly\n-  --> $DIR/future-proofing-locals.rs:19:9\n-   |\n-LL | / mod T {\n-LL | |     pub struct U;\n-LL | | }\n-   | |_- the item `T` was already imported here\n-...\n-LL |       use T;\n-   |           ^\n-   |\n-   = note: #[warn(redundant_import)] on by default\n-\n-warning: the item `x` is imported redundantly\n-  --> $DIR/future-proofing-locals.rs:31:9\n-   |\n-LL | / mod x {\n-LL | |     pub struct y;\n-LL | | }\n-   | |_- the item `x` was already imported here\n-...\n-LL |       use x;\n-   |           ^\n-\n-warning: the item `x` is imported redundantly\n-  --> $DIR/future-proofing-locals.rs:37:17\n-   |\n-LL | / mod x {\n-LL | |     pub struct y;\n-LL | | }\n-   | |_- the item `x` was already imported here\n-...\n-LL |               use x;\n-   |                   ^\n-\n-warning: the item `x` is imported redundantly\n-  --> $DIR/future-proofing-locals.rs:45:18\n-   |\n-LL | / mod x {\n-LL | |     pub struct y;\n-LL | | }\n-   | |_- the item `x` was already imported here\n-...\n-LL |       use {T as _, x};\n-   |                    ^\n-\n error: aborting due to 9 previous errors\n "}]}