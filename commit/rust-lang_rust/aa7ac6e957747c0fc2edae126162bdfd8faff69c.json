{"sha": "aa7ac6e957747c0fc2edae126162bdfd8faff69c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhN2FjNmU5NTc3NDdjMGZjMmVkYWUxMjYxNjJiZGZkOGZhZmY2OWM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-03-07T23:03:46Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-03-07T23:03:46Z"}, "message": "Remove notes, increase S/N ratio", "tree": {"sha": "8f0c16367efd250fe3eaeef6bc676e1c0b640cfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f0c16367efd250fe3eaeef6bc676e1c0b640cfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa7ac6e957747c0fc2edae126162bdfd8faff69c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7ac6e957747c0fc2edae126162bdfd8faff69c", "html_url": "https://github.com/rust-lang/rust/commit/aa7ac6e957747c0fc2edae126162bdfd8faff69c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa7ac6e957747c0fc2edae126162bdfd8faff69c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63fb294a7455b76ecfbef6831410e5362ee9d514", "url": "https://api.github.com/repos/rust-lang/rust/commits/63fb294a7455b76ecfbef6831410e5362ee9d514", "html_url": "https://github.com/rust-lang/rust/commit/63fb294a7455b76ecfbef6831410e5362ee9d514"}], "stats": {"total": 32, "additions": 11, "deletions": 21}, "files": [{"sha": "c9a5541585fc73050d55d5f2d19b78dfd3fc1b47", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/aa7ac6e957747c0fc2edae126162bdfd8faff69c/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7ac6e957747c0fc2edae126162bdfd8faff69c/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=aa7ac6e957747c0fc2edae126162bdfd8faff69c", "patch": "@@ -366,24 +366,17 @@ impl<'hir> LoweringContext<'_, 'hir> {\n     fn if_let_expr_with_parens(&mut self, cond: &Expr, paren: &Expr) {\n         let start = cond.span.until(paren.span);\n         let end = paren.span.shrink_to_hi().until(cond.span.shrink_to_hi());\n-        let mut err = self.sess.struct_span_err(\n-            vec![start, end],\n-            \"invalid parentheses around `let` expression in `if let`\",\n-        );\n-        if self.sess.opts.unstable_features.is_nightly_build() {\n-            err.note(\n-                \"only supported directly without parentheses in conditions of `if`- and \\\n-                 `while`-expressions, as well as in `let` chains within parentheses\",\n-            );\n-        } else {\n-            err.note(\"variable declaration using `let` is a statement, not a condition\");\n-        }\n-        err.multipart_suggestion(\n-            \"`if let` needs to be written without parentheses\",\n-            vec![(start, String::new()), (end, String::new())],\n-            rustc_errors::Applicability::MachineApplicable,\n-        );\n-        err.emit();\n+        self.sess\n+            .struct_span_err(\n+                vec![start, end],\n+                \"invalid parentheses around `let` expression in `if let`\",\n+            )\n+            .multipart_suggestion(\n+                \"`if let` needs to be written without parentheses\",\n+                vec![(start, String::new()), (end, String::new())],\n+                rustc_errors::Applicability::MachineApplicable,\n+            )\n+            .emit();\n         // Ideally, we'd remove the feature gating of a `let` expression since we are already\n         // complaining about it here, but `feature_gate::check_crate` has already run by now:\n         // self.sess.parse_sess.gated_spans.ungate_last(sym::let_chains, paren.span);"}, {"sha": "7364f62c922298b9dcb1863c827e88ba334bb97c", "filename": "src/test/ui/rfc-2497-if-let-chains/feature-gate.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aa7ac6e957747c0fc2edae126162bdfd8faff69c/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa7ac6e957747c0fc2edae126162bdfd8faff69c/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr?ref=aa7ac6e957747c0fc2edae126162bdfd8faff69c", "patch": "@@ -333,7 +333,6 @@ error: invalid parentheses around `let` expression in `if let`\n LL |     if (let 0 = 1) {}\n    |        ^         ^\n    |\n-   = note: only supported directly without parentheses in conditions of `if`- and `while`-expressions, as well as in `let` chains within parentheses\n help: `if let` needs to be written without parentheses\n    |\n LL |     if let 0 = 1 {}\n@@ -345,7 +344,6 @@ error: invalid parentheses around `let` expression in `if let`\n LL |     if (((let 0 = 1))) {}\n    |        ^^^         ^^^\n    |\n-   = note: only supported directly without parentheses in conditions of `if`- and `while`-expressions, as well as in `let` chains within parentheses\n help: `if let` needs to be written without parentheses\n    |\n LL |     if let 0 = 1 {}\n@@ -581,7 +579,6 @@ error: invalid parentheses around `let` expression in `if let`\n LL |     use_expr!((let 0 = 1));\n    |               ^         ^\n    |\n-   = note: only supported directly without parentheses in conditions of `if`- and `while`-expressions, as well as in `let` chains within parentheses\n help: `if let` needs to be written without parentheses\n    |\n LL |     use_expr!(let 0 = 1);"}]}