{"sha": "a30e2259daacb0075cb5d0ecdca63afd8016b607", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMGUyMjU5ZGFhY2IwMDc1Y2I1ZDBlY2RjYTYzYWZkODAxNmI2MDc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-07T11:25:59Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-13T17:20:27Z"}, "message": "fix closure tests now that MIR typeck works properly\n\nThese tests had FIXMEs for errors that were not previously being\nreported.", "tree": {"sha": "2fdf51281af5a3c47336f26dec881ecd539842f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fdf51281af5a3c47336f26dec881ecd539842f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a30e2259daacb0075cb5d0ecdca63afd8016b607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a30e2259daacb0075cb5d0ecdca63afd8016b607", "html_url": "https://github.com/rust-lang/rust/commit/a30e2259daacb0075cb5d0ecdca63afd8016b607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a30e2259daacb0075cb5d0ecdca63afd8016b607/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "decbbb3fc03875e7b188d8ed30ded23a87d81696", "url": "https://api.github.com/repos/rust-lang/rust/commits/decbbb3fc03875e7b188d8ed30ded23a87d81696", "html_url": "https://github.com/rust-lang/rust/commit/decbbb3fc03875e7b188d8ed30ded23a87d81696"}], "stats": {"total": 221, "additions": 142, "deletions": 79}, "files": [{"sha": "93c774e89961856ace6a17d5548ef623e5089701", "filename": "src/test/compile-fail/nll/where_clauses_in_repeat_rvalue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_repeat_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_repeat_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_repeat_rvalue.rs?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -27,7 +27,8 @@ fn main() {\n     let mut x = 22;\n \n     {\n-        let p = &x; //~ ERROR borrowed value does not live long enough\n+        let p = &x;\n+        //~^ ERROR `x` does not live long enough\n         let w = Foo { t: p };\n \n         let v = [w; 22];\n@@ -36,4 +37,3 @@ fn main() {\n     x += 1;\n     //~^ ERROR cannot assign to `x` because it is borrowed [E0506]\n }\n-//~^ ERROR borrowed value does not live long enough [E0597]"}, {"sha": "678da45fce41fc23bc47ddb38242d2de11333bb6", "filename": "src/test/compile-fail/regions-static-bound.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fcompile-fail%2Fregions-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fcompile-fail%2Fregions-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-static-bound.rs?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -24,11 +24,10 @@ fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {\n fn error(u: &(), v: &()) {\n     static_id(&u); //[ll]~ ERROR cannot infer an appropriate lifetime\n     //[nll]~^ WARNING not reporting region error due to -Znll\n+    //[nll]~| ERROR free region `'_#1r` does not outlive free region `'static`\n     static_id_indirect(&v); //[ll]~ ERROR cannot infer an appropriate lifetime\n     //[nll]~^ WARNING not reporting region error due to -Znll\n-\n-    // FIXME(#45827) -- MIR type checker shortcomings mean we don't\n-    // see these errors (yet) in nll mode.\n+    //[nll]~| ERROR free region `'_#2r` does not outlive free region `'static`\n }\n \n fn main() {}"}, {"sha": "80a40581b8957c188640c9ef5d0d3f3eba2264d9", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -21,14 +21,8 @@\n //\n // Note: the use of `Cell` here is to introduce invariance. One less\n // variable.\n-//\n-// FIXME(#45827): The `supply` function *ought* to generate an error, but it\n-// currently does not. This is I believe a shortcoming of the MIR type\n-// checker: the closure inference is expressing the correct\n-// requirement, as you can see from the `#[rustc_regions]` output.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n \n #![feature(rustc_attrs)]\n \n@@ -57,8 +51,10 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+        //~^ ERROR free region `'_#1r` does not outlive free region `'_#2r`\n+\n         // Only works if 'x: 'y:\n-        demand_y(x, y, x.get())\n+        demand_y(x, y, x.get()) //~ WARNING not reporting region error due to -Znll\n     });\n }\n "}, {"sha": "717cf481a01d193d1d4343161e6ed5389d80d070", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.stderr", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -1,17 +1,19 @@\n warning: not reporting region error due to -Znll\n-  --> $DIR/propagate-approximated-ref.rs:61:9\n+  --> $DIR/propagate-approximated-ref.rs:57:9\n    |\n-61 |         demand_y(x, y, x.get())\n+57 |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to -Znll\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n note: External requirements\n-  --> $DIR/propagate-approximated-ref.rs:59:47\n+  --> $DIR/propagate-approximated-ref.rs:53:47\n    |\n-59 |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+53 |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n    |  _______________________________________________^\n-60 | |         // Only works if 'x: 'y:\n-61 | |         demand_y(x, y, x.get())\n-62 | |     });\n+54 | |         //~^ ERROR free region `'_#1r` does not outlive free region `'_#2r`\n+55 | |\n+56 | |         // Only works if 'x: 'y:\n+57 | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to -Znll\n+58 | |     });\n    | |_____^\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_approximated_ref[317d]::supply[0]::{{closure}}[0]) with closure substs [\n@@ -21,16 +23,25 @@ note: External requirements\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#2r\n \n+error: free region `'_#1r` does not outlive free region `'_#2r`\n+  --> $DIR/propagate-approximated-ref.rs:53:38\n+   |\n+53 |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+   |                                      ^^^^^^^\n+\n note: No external requirements\n-  --> $DIR/propagate-approximated-ref.rs:58:1\n+  --> $DIR/propagate-approximated-ref.rs:52:1\n    |\n-58 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-59 | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-60 | |         // Only works if 'x: 'y:\n-61 | |         demand_y(x, y, x.get())\n-62 | |     });\n-63 | | }\n+52 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+53 | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+54 | |         //~^ ERROR free region `'_#1r` does not outlive free region `'_#2r`\n+55 | |\n+...  |\n+58 | |     });\n+59 | | }\n    | |_^\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_ref[317d]::supply[0]) with substs []\n \n+error: aborting due to previous error\n+"}, {"sha": "244929d71dba8ed9b81b20dd05c1f3bc25d7f1b2", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -39,12 +39,10 @@ fn case1() {\n fn case2() {\n     let a = 0;\n     let cell = Cell::new(&a);\n+    //~^ ERROR `a` does not live long enough\n \n     // As you can see in the stderr output, this closure propoagates a\n     // requirement that `'a: 'static'.\n-    //\n-    // FIXME(#45827) However, because of shortcomings in the MIR type\n-    // checker, this does not result in errors later on (yet).\n     foo(cell, |cell_a, cell_x| {\n         cell_x.set(cell_a.get()); // forces 'a: 'x, implies 'a = 'static -> borrow error\n     })"}, {"sha": "b93c69dc13f46ba691b79412cd196884879be704", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.stderr", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -42,12 +42,12 @@ note: No external requirements\n    = note: defining type: DefId(0/0:5 ~ propagate_approximated_shorter_to_static_comparing_against_free[317d]::case1[0]) with substs []\n \n note: External requirements\n-  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:48:15\n+  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:46:15\n    |\n-48 |       foo(cell, |cell_a, cell_x| {\n+46 |       foo(cell, |cell_a, cell_x| {\n    |  _______________^\n-49 | |         cell_x.set(cell_a.get()); // forces 'a: 'x, implies 'a = 'static -> borrow error\n-50 | |     })\n+47 | |         cell_x.set(cell_a.get()); // forces 'a: 'x, implies 'a = 'static -> borrow error\n+48 | |     })\n    | |_____^\n    |\n    = note: defining type: DefId(0/1:13 ~ propagate_approximated_shorter_to_static_comparing_against_free[317d]::case2[0]::{{closure}}[0]) with closure substs [\n@@ -63,13 +63,24 @@ note: No external requirements\n 39 | / fn case2() {\n 40 | |     let a = 0;\n 41 | |     let cell = Cell::new(&a);\n-42 | |\n+42 | |     //~^ ERROR `a` does not live long enough\n ...  |\n-50 | |     })\n-51 | | }\n+48 | |     })\n+49 | | }\n    | |_^\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_shorter_to_static_comparing_against_free[317d]::case2[0]) with substs []\n \n-error: aborting due to previous error\n+error[E0597]: `a` does not live long enough\n+  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:41:26\n+   |\n+41 |     let cell = Cell::new(&a);\n+   |                          ^^ does not live long enough\n+...\n+49 | }\n+   | - borrowed value only lives until here\n+   |\n+   = note: borrowed value must be valid for lifetime '_#1r...\n+\n+error: aborting due to 2 previous errors\n "}, {"sha": "54007f0191da1f5ba1127806d80353892bc32057", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -17,7 +17,6 @@\n // these errors are not (yet) reported.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n \n #![feature(rustc_attrs)]\n \n@@ -44,8 +43,10 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+        //~^ ERROR free region `'_#1r` does not outlive free region `ReStatic`\n+\n         // Only works if 'x: 'y:\n-        demand_y(x, y, x.get())\n+        demand_y(x, y, x.get()) //~ WARNING not reporting region error due to -Znll\n     });\n }\n "}, {"sha": "86b9fecb80e2ef989cfd0fa9935cf1030885f3b1", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.stderr", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -1,17 +1,19 @@\n warning: not reporting region error due to -Znll\n-  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:48:9\n+  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:49:9\n    |\n-48 |         demand_y(x, y, x.get())\n+49 |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to -Znll\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n note: External requirements\n-  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:46:47\n+  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:45:47\n    |\n-46 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+45 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n    |  _______________________________________________^\n-47 | |         // Only works if 'x: 'y:\n-48 | |         demand_y(x, y, x.get())\n-49 | |     });\n+46 | |         //~^ ERROR free region `'_#1r` does not outlive free region `ReStatic`\n+47 | |\n+48 | |         // Only works if 'x: 'y:\n+49 | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to -Znll\n+50 | |     });\n    | |_____^\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_approximated_shorter_to_static_no_bound[317d]::supply[0]::{{closure}}[0]) with closure substs [\n@@ -21,16 +23,31 @@ note: External requirements\n    = note: number of external vids: 2\n    = note: where '_#1r: '_#0r\n \n+error: free region `'_#1r` does not outlive free region `ReStatic`\n+  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:45:47\n+   |\n+45 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+   |  _______________________________________________^\n+46 | |         //~^ ERROR free region `'_#1r` does not outlive free region `ReStatic`\n+47 | |\n+48 | |         // Only works if 'x: 'y:\n+49 | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to -Znll\n+50 | |     });\n+   | |_____^\n+\n note: No external requirements\n-  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:45:1\n+  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:44:1\n    |\n-45 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-46 | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-47 | |         // Only works if 'x: 'y:\n-48 | |         demand_y(x, y, x.get())\n-49 | |     });\n-50 | | }\n+44 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+45 | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+46 | |         //~^ ERROR free region `'_#1r` does not outlive free region `ReStatic`\n+47 | |\n+...  |\n+50 | |     });\n+51 | | }\n    | |_^\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_shorter_to_static_no_bound[317d]::supply[0]) with substs []\n \n+error: aborting due to previous error\n+"}, {"sha": "68d51e2b7d105f15833592f51e5055b056347f3a", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -18,7 +18,6 @@\n // these errors are not (yet) reported.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n \n #![feature(rustc_attrs)]\n \n@@ -47,8 +46,10 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+        //~^ ERROR free region `'_#1r` does not outlive free region `ReStatic`\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n+        //~^ WARNING not reporting region error due to -Znll\n     });\n }\n "}, {"sha": "adc6b1ac595e928205ce528bb8d462f183622c4d", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.stderr", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -5,13 +5,15 @@ warning: not reporting region error due to -Znll\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n note: External requirements\n-  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:49:47\n+  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:48:47\n    |\n-49 |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+48 |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n    |  _______________________________________________^\n+49 | |         //~^ ERROR free region `'_#1r` does not outlive free region `ReStatic`\n 50 | |         // Only works if 'x: 'y:\n 51 | |         demand_y(x, y, x.get())\n-52 | |     });\n+52 | |         //~^ WARNING not reporting region error due to -Znll\n+53 | |     });\n    | |_____^\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_approximated_shorter_to_static_wrong_bound[317d]::supply[0]::{{closure}}[0]) with closure substs [\n@@ -21,16 +23,31 @@ note: External requirements\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#0r\n \n-note: No external requirements\n-  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:48:1\n+error: free region `'_#1r` does not outlive free region `ReStatic`\n+  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:48:47\n    |\n-48 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-49 | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+48 |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+   |  _______________________________________________^\n+49 | |         //~^ ERROR free region `'_#1r` does not outlive free region `ReStatic`\n 50 | |         // Only works if 'x: 'y:\n 51 | |         demand_y(x, y, x.get())\n-52 | |     });\n-53 | | }\n+52 | |         //~^ WARNING not reporting region error due to -Znll\n+53 | |     });\n+   | |_____^\n+\n+note: No external requirements\n+  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:47:1\n+   |\n+47 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+48 | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+49 | |         //~^ ERROR free region `'_#1r` does not outlive free region `ReStatic`\n+50 | |         // Only works if 'x: 'y:\n+...  |\n+53 | |     });\n+54 | | }\n    | |_^\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_shorter_to_static_wrong_bound[317d]::supply[0]) with substs []\n \n+error: aborting due to previous error\n+"}, {"sha": "b4a759d5e705d24078973eedb3e50115599c8bc3", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -16,7 +16,6 @@\n // anonymous regions as well.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n \n #![feature(rustc_attrs)]\n \n@@ -45,8 +44,10 @@ fn demand_y<'x, 'y>(_outlives1: Cell<&&'x u32>, _outlives2: Cell<&'y &u32>, _y:\n #[rustc_regions]\n fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n+        //~^ ERROR free region `'_#1r` does not outlive free region `'_#2r`\n+\n         // Only works if 'x: 'y:\n-        demand_y(outlives1, outlives2, x.get())\n+        demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to -Znll\n     });\n }\n "}, {"sha": "43464bfb2b9a7213dac8d1d994a0b38a57f2c28b", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.stderr", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a30e2259daacb0075cb5d0ecdca63afd8016b607/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr?ref=a30e2259daacb0075cb5d0ecdca63afd8016b607", "patch": "@@ -1,17 +1,19 @@\n warning: not reporting region error due to -Znll\n-  --> $DIR/propagate-approximated-val.rs:49:9\n+  --> $DIR/propagate-approximated-val.rs:50:9\n    |\n-49 |         demand_y(outlives1, outlives2, x.get())\n+50 |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to -Znll\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: External requirements\n-  --> $DIR/propagate-approximated-val.rs:47:45\n+  --> $DIR/propagate-approximated-val.rs:46:45\n    |\n-47 |       establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n+46 |       establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n    |  _____________________________________________^\n-48 | |         // Only works if 'x: 'y:\n-49 | |         demand_y(outlives1, outlives2, x.get())\n-50 | |     });\n+47 | |         //~^ ERROR free region `'_#1r` does not outlive free region `'_#2r`\n+48 | |\n+49 | |         // Only works if 'x: 'y:\n+50 | |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to -Znll\n+51 | |     });\n    | |_____^\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_approximated_val[317d]::test[0]::{{closure}}[0]) with closure substs [\n@@ -21,16 +23,25 @@ note: External requirements\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#2r\n \n+error: free region `'_#1r` does not outlive free region `'_#2r`\n+  --> $DIR/propagate-approximated-val.rs:46:37\n+   |\n+46 |     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n+   |                                     ^^^^^^\n+\n note: No external requirements\n-  --> $DIR/propagate-approximated-val.rs:46:1\n+  --> $DIR/propagate-approximated-val.rs:45:1\n    |\n-46 | / fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-47 | |     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n-48 | |         // Only works if 'x: 'y:\n-49 | |         demand_y(outlives1, outlives2, x.get())\n-50 | |     });\n-51 | | }\n+45 | / fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+46 | |     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n+47 | |         //~^ ERROR free region `'_#1r` does not outlive free region `'_#2r`\n+48 | |\n+...  |\n+51 | |     });\n+52 | | }\n    | |_^\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_val[317d]::test[0]) with substs []\n \n+error: aborting due to previous error\n+"}]}