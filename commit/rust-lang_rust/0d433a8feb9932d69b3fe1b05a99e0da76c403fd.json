{"sha": "0d433a8feb9932d69b3fe1b05a99e0da76c403fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNDMzYThmZWI5OTMyZDY5YjNmZTFiMDVhOTllMGRhNzZjNDAzZmQ=", "commit": {"author": {"name": "Wang Xuerui", "email": "idontknw.wang@gmail.com", "date": "2016-11-07T06:29:15Z"}, "committer": {"name": "Wang Xuerui", "email": "idontknw.wang@gmail.com", "date": "2016-11-07T06:29:15Z"}, "message": "rustbuild: support MIPS host builds\n\nThere is a *little* code duplication, but primarily for sake of \"match\nexhaustiveness\". Let's blame Linux/MIPS for not exposing endianness\nexplicitly in `uname -m` (that's user-space interface and as such is\nfrozen).\n\nCurrently the build won't work as we have to wait for a new stage0 for\nthe MIPS host compilers, but this paves the way to self-hosted Rust on\nMIPS. The cross-compiled MIPS binaries are confirmed to work on the\nLoongson 3A2000 (MIPS64r2-compatible) so we have plenty of confidence\nthat they'll work on other MIPS platforms too, as Linux/MIPS user-space\nABI is consistent across machines of the same bitness.", "tree": {"sha": "5aef9f025508eca6a2976e16e6f9334740d26749", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5aef9f025508eca6a2976e16e6f9334740d26749"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d433a8feb9932d69b3fe1b05a99e0da76c403fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d433a8feb9932d69b3fe1b05a99e0da76c403fd", "html_url": "https://github.com/rust-lang/rust/commit/0d433a8feb9932d69b3fe1b05a99e0da76c403fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d433a8feb9932d69b3fe1b05a99e0da76c403fd/comments", "author": {"login": "xen0n", "id": 1175567, "node_id": "MDQ6VXNlcjExNzU1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1175567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xen0n", "html_url": "https://github.com/xen0n", "followers_url": "https://api.github.com/users/xen0n/followers", "following_url": "https://api.github.com/users/xen0n/following{/other_user}", "gists_url": "https://api.github.com/users/xen0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/xen0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xen0n/subscriptions", "organizations_url": "https://api.github.com/users/xen0n/orgs", "repos_url": "https://api.github.com/users/xen0n/repos", "events_url": "https://api.github.com/users/xen0n/events{/privacy}", "received_events_url": "https://api.github.com/users/xen0n/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xen0n", "id": 1175567, "node_id": "MDQ6VXNlcjExNzU1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1175567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xen0n", "html_url": "https://github.com/xen0n", "followers_url": "https://api.github.com/users/xen0n/followers", "following_url": "https://api.github.com/users/xen0n/following{/other_user}", "gists_url": "https://api.github.com/users/xen0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/xen0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xen0n/subscriptions", "organizations_url": "https://api.github.com/users/xen0n/orgs", "repos_url": "https://api.github.com/users/xen0n/repos", "events_url": "https://api.github.com/users/xen0n/events{/privacy}", "received_events_url": "https://api.github.com/users/xen0n/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e2b57d3e443378c6b7855b4886e3a1fb92d8fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e2b57d3e443378c6b7855b4886e3a1fb92d8fe6", "html_url": "https://github.com/rust-lang/rust/commit/8e2b57d3e443378c6b7855b4886e3a1fb92d8fe6"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "63feea1057ea445d00f67dad695a3fc1c724b0fb", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0d433a8feb9932d69b3fe1b05a99e0da76c403fd/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/0d433a8feb9932d69b3fe1b05a99e0da76c403fd/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=0d433a8feb9932d69b3fe1b05a99e0da76c403fd", "patch": "@@ -344,6 +344,22 @@ def build_triple(self):\n             ostype += 'eabihf'\n         elif cputype == 'aarch64':\n             cputype = 'aarch64'\n+        elif cputype == 'mips':\n+            if sys.byteorder == 'big':\n+                cputype = 'mips'\n+            elif sys.byteorder == 'little':\n+                cputype = 'mipsel'\n+            else:\n+                raise ValueError('unknown byteorder: ' + sys.byteorder)\n+        elif cputype == 'mips64':\n+            if sys.byteorder == 'big':\n+                cputype = 'mips64'\n+            elif sys.byteorder == 'little':\n+                cputype = 'mips64el'\n+            else:\n+                raise ValueError('unknown byteorder: ' + sys.byteorder)\n+            # only the n64 ABI is supported, indicate it\n+            ostype += 'abi64'\n         elif cputype in {'powerpc', 'ppc', 'ppc64'}:\n             cputype = 'powerpc'\n         elif cputype in {'amd64', 'x86_64', 'x86-64', 'x64'}:"}]}