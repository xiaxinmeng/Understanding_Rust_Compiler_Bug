{"sha": "3b8e85a5dccd47c7284b30ad29d3144d5c152235", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiOGU4NWE1ZGNjZDQ3YzcyODRiMzBhZDI5ZDMxNDRkNWMxNTIyMzU=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-24T15:15:15Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-24T15:15:21Z"}, "message": "fix false positive in manual_flatten", "tree": {"sha": "2c6cf9c4a5cf7dcd42add63c356e54ef5f131fb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c6cf9c4a5cf7dcd42add63c356e54ef5f131fb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b8e85a5dccd47c7284b30ad29d3144d5c152235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b8e85a5dccd47c7284b30ad29d3144d5c152235", "html_url": "https://github.com/rust-lang/rust/commit/3b8e85a5dccd47c7284b30ad29d3144d5c152235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b8e85a5dccd47c7284b30ad29d3144d5c152235/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "919a1a40fe4ec1118eece46b1f4c03c311ab8cda", "url": "https://api.github.com/repos/rust-lang/rust/commits/919a1a40fe4ec1118eece46b1f4c03c311ab8cda", "html_url": "https://github.com/rust-lang/rust/commit/919a1a40fe4ec1118eece46b1f4c03c311ab8cda"}], "stats": {"total": 117, "additions": 105, "deletions": 12}, "files": [{"sha": "8d2b9cccba468421a7126532c52eab0ccdf10de9", "filename": "clippy_lints/src/loops/manual_flatten.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3b8e85a5dccd47c7284b30ad29d3144d5c152235/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b8e85a5dccd47c7284b30ad29d3144d5c152235/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs?ref=3b8e85a5dccd47c7284b30ad29d3144d5c152235", "patch": "@@ -6,6 +6,7 @@ use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, MatchSource, Pat, PatKind, QPath, StmtKind};\n use rustc_lint::LateContext;\n+use rustc_middle::ty;\n use rustc_span::source_map::Span;\n \n /// Check for unnecessary `if let` usage in a for loop where only the `Some` or `Ok` variant of the\n@@ -54,14 +55,21 @@ pub(super) fn check<'tcx>(\n                 // Prepare the help message\n                 let mut applicability = Applicability::MaybeIncorrect;\n                 let arg_snippet = make_iterator_snippet(cx, arg, &mut applicability);\n+                let copied = match cx.typeck_results().expr_ty(match_expr).kind() {\n+                    ty::Ref(_, inner, _) => match inner.kind() {\n+                        ty::Ref(..) => \".copied()\",\n+                        _ => \"\"\n+                    }\n+                    _ => \"\"\n+                };\n \n                 span_lint_and_then(\n                     cx,\n                     MANUAL_FLATTEN,\n                     span,\n                     &msg,\n                     |diag| {\n-                        let sugg = format!(\"{}.flatten()\", arg_snippet);\n+                        let sugg = format!(\"{}{}.flatten()\", arg_snippet, copied);\n                         diag.span_suggestion(\n                             arg.span,\n                             \"try\","}, {"sha": "b5bd35a68785a9242e67f9b964b4822ef0d9eaae", "filename": "tests/ui/manual_flatten.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3b8e85a5dccd47c7284b30ad29d3144d5c152235/tests%2Fui%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b8e85a5dccd47c7284b30ad29d3144d5c152235/tests%2Fui%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_flatten.rs?ref=3b8e85a5dccd47c7284b30ad29d3144d5c152235", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::manual_flatten)]\n+#![allow(clippy::useless_vec)]\n \n fn main() {\n     // Test for loop over implicitly adjusted `Iterator` with `if let` expression\n@@ -69,6 +70,27 @@ fn main() {\n         }\n     }\n \n+    let vec_of_ref = vec![&Some(1)];\n+    for n in &vec_of_ref {\n+        if let Some(n) = n {\n+            println!(\"{:?}\", n);\n+        }\n+    }\n+\n+    let vec_of_ref = &vec_of_ref;\n+    for n in vec_of_ref {\n+        if let Some(n) = n {\n+            println!(\"{:?}\", n);\n+        }\n+    }\n+\n+    let slice_of_ref = &[&Some(1)];\n+    for n in slice_of_ref {\n+        if let Some(n) = n {\n+            println!(\"{:?}\", n);\n+        }\n+    }\n+\n     // Using manual flatten should not trigger the lint\n     for n in vec![Some(1), Some(2), Some(3)].iter().flatten() {\n         println!(\"{}\", n);"}, {"sha": "be5f8a1d818847b8ce672df247d5e218d80bbd71", "filename": "tests/ui/manual_flatten.stderr", "status": "modified", "additions": 74, "deletions": 11, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/3b8e85a5dccd47c7284b30ad29d3144d5c152235/tests%2Fui%2Fmanual_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b8e85a5dccd47c7284b30ad29d3144d5c152235/tests%2Fui%2Fmanual_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_flatten.stderr?ref=3b8e85a5dccd47c7284b30ad29d3144d5c152235", "patch": "@@ -1,5 +1,5 @@\n error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:6:5\n+  --> $DIR/manual_flatten.rs:7:5\n    |\n LL |       for n in x {\n    |       ^        - help: try: `x.into_iter().flatten()`\n@@ -13,15 +13,15 @@ LL | |     }\n    |\n    = note: `-D clippy::manual-flatten` implied by `-D warnings`\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:7:9\n+  --> $DIR/manual_flatten.rs:8:9\n    |\n LL | /         if let Some(y) = n {\n LL | |             println!(\"{}\", y);\n LL | |         }\n    | |_________^\n \n error: unnecessary `if let` since only the `Ok` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:14:5\n+  --> $DIR/manual_flatten.rs:15:5\n    |\n LL |       for n in y.clone() {\n    |       ^        --------- help: try: `y.clone().into_iter().flatten()`\n@@ -34,15 +34,15 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:15:9\n+  --> $DIR/manual_flatten.rs:16:9\n    |\n LL | /         if let Ok(n) = n {\n LL | |             println!(\"{}\", n);\n LL | |         };\n    | |_________^\n \n error: unnecessary `if let` since only the `Ok` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:21:5\n+  --> $DIR/manual_flatten.rs:22:5\n    |\n LL |       for n in &y {\n    |       ^        -- help: try: `y.iter().flatten()`\n@@ -55,15 +55,15 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:22:9\n+  --> $DIR/manual_flatten.rs:23:9\n    |\n LL | /         if let Ok(n) = n {\n LL | |             println!(\"{}\", n);\n LL | |         }\n    | |_________^\n \n error: unnecessary `if let` since only the `Ok` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:31:5\n+  --> $DIR/manual_flatten.rs:32:5\n    |\n LL |       for n in z {\n    |       ^        - help: try: `z.into_iter().flatten()`\n@@ -76,15 +76,15 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:32:9\n+  --> $DIR/manual_flatten.rs:33:9\n    |\n LL | /         if let Ok(n) = n {\n LL | |             println!(\"{}\", n);\n LL | |         }\n    | |_________^\n \n error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:40:5\n+  --> $DIR/manual_flatten.rs:41:5\n    |\n LL |       for n in z {\n    |       ^        - help: try: `z.flatten()`\n@@ -97,12 +97,75 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:41:9\n+  --> $DIR/manual_flatten.rs:42:9\n    |\n LL | /         if let Some(m) = n {\n LL | |             println!(\"{}\", m);\n LL | |         }\n    | |_________^\n \n-error: aborting due to 5 previous errors\n+error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n+  --> $DIR/manual_flatten.rs:74:5\n+   |\n+LL |       for n in &vec_of_ref {\n+   |       ^        ----------- help: try: `vec_of_ref.iter().copied().flatten()`\n+   |  _____|\n+   | |\n+LL | |         if let Some(n) = n {\n+LL | |             println!(\"{:?}\", n);\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n+help: ...and remove the `if let` statement in the for loop\n+  --> $DIR/manual_flatten.rs:75:9\n+   |\n+LL | /         if let Some(n) = n {\n+LL | |             println!(\"{:?}\", n);\n+LL | |         }\n+   | |_________^\n+\n+error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n+  --> $DIR/manual_flatten.rs:81:5\n+   |\n+LL |       for n in vec_of_ref {\n+   |       ^        ---------- help: try: `vec_of_ref.into_iter().copied().flatten()`\n+   |  _____|\n+   | |\n+LL | |         if let Some(n) = n {\n+LL | |             println!(\"{:?}\", n);\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n+help: ...and remove the `if let` statement in the for loop\n+  --> $DIR/manual_flatten.rs:82:9\n+   |\n+LL | /         if let Some(n) = n {\n+LL | |             println!(\"{:?}\", n);\n+LL | |         }\n+   | |_________^\n+\n+error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n+  --> $DIR/manual_flatten.rs:88:5\n+   |\n+LL |       for n in slice_of_ref {\n+   |       ^        ------------ help: try: `slice_of_ref.into_iter().copied().flatten()`\n+   |  _____|\n+   | |\n+LL | |         if let Some(n) = n {\n+LL | |             println!(\"{:?}\", n);\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n+help: ...and remove the `if let` statement in the for loop\n+  --> $DIR/manual_flatten.rs:89:9\n+   |\n+LL | /         if let Some(n) = n {\n+LL | |             println!(\"{:?}\", n);\n+LL | |         }\n+   | |_________^\n+\n+error: aborting due to 8 previous errors\n "}]}