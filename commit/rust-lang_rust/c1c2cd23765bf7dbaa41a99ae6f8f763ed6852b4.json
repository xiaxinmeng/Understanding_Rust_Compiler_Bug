{"sha": "c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYzJjZDIzNzY1YmY3ZGJhYTQxYTk5YWU2ZjhmNzYzZWQ2ODUyYjQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-06-06T19:43:59Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-06-06T19:43:59Z"}, "message": "Statements do not have types.", "tree": {"sha": "7e47ab18f2099222a4ec7ccecdceb948063b9f0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e47ab18f2099222a4ec7ccecdceb948063b9f0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4", "html_url": "https://github.com/rust-lang/rust/commit/c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a032cb89c5d9b436c1c57f8a6d5961d898f5c2b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a032cb89c5d9b436c1c57f8a6d5961d898f5c2b6", "html_url": "https://github.com/rust-lang/rust/commit/a032cb89c5d9b436c1c57f8a6d5961d898f5c2b6"}], "stats": {"total": 44, "additions": 9, "deletions": 35}, "files": [{"sha": "04469dcaf2bd5fb80ed708c0ba92b91312be5f88", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 9, "deletions": 30, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4", "patch": "@@ -120,7 +120,7 @@ use syntax::feature_gate::{GateIssue, emit_feature_err};\n use syntax::ptr::P;\n use syntax::symbol::{Symbol, InternedString, keywords};\n use syntax::util::lev_distance::find_best_match_for_name;\n-use syntax_pos::{self, BytePos, Span, DUMMY_SP};\n+use syntax_pos::{self, BytePos, Span};\n \n use rustc::hir::intravisit::{self, Visitor, NestedVisitorMap};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n@@ -1901,14 +1901,6 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                                            value)\n     }\n \n-    pub fn write_nil(&self, node_id: ast::NodeId) {\n-        self.write_ty(node_id, self.tcx.mk_nil());\n-    }\n-\n-    pub fn write_error(&self, node_id: ast::NodeId) {\n-        self.write_ty(node_id, self.tcx.types.err);\n-    }\n-\n     pub fn require_type_meets(&self,\n                               ty: Ty<'tcx>,\n                               span: Span,\n@@ -4020,11 +4012,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n     pub fn check_stmt(&self, stmt: &'gcx hir::Stmt) {\n         // Don't do all the complex logic below for DeclItem.\n         match stmt.node {\n-            hir::StmtDecl(ref decl, id) => {\n+            hir::StmtDecl(ref decl, _) => {\n                 match decl.node {\n                     hir::DeclLocal(_) => {}\n                     hir::DeclItem(_) => {\n-                        self.write_nil(id);\n                         return;\n                     }\n                 }\n@@ -4040,34 +4031,22 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         self.diverges.set(Diverges::Maybe);\n         self.has_errors.set(false);\n \n-        let (node_id, _span) = match stmt.node {\n-            hir::StmtDecl(ref decl, id) => {\n-                let span = match decl.node {\n+        match stmt.node {\n+            hir::StmtDecl(ref decl, _) => {\n+                match decl.node {\n                     hir::DeclLocal(ref l) => {\n                         self.check_decl_local(&l);\n-                        l.span\n                     }\n-                    hir::DeclItem(_) => {/* ignore for now */\n-                        DUMMY_SP\n-                    }\n-                };\n-                (id, span)\n+                    hir::DeclItem(_) => {/* ignore for now */}\n+                }\n             }\n-            hir::StmtExpr(ref expr, id) => {\n+            hir::StmtExpr(ref expr, _) => {\n                 // Check with expected type of ()\n                 self.check_expr_has_type(&expr, self.tcx.mk_nil());\n-                (id, expr.span)\n             }\n-            hir::StmtSemi(ref expr, id) => {\n+            hir::StmtSemi(ref expr, _) => {\n                 self.check_expr(&expr);\n-                (id, expr.span)\n             }\n-        };\n-\n-        if self.has_errors.get() {\n-            self.write_error(node_id);\n-        } else {\n-            self.write_nil(node_id);\n         }\n \n         // Combine the diverging and has_error flags."}, {"sha": "4af262bcb78df67b9b5687379e155189ecb0ee4b", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=c1c2cd23765bf7dbaa41a99ae6f8f763ed6852b4", "patch": "@@ -155,11 +155,6 @@ impl<'cx, 'gcx, 'tcx> Visitor<'gcx> for WritebackCx<'cx, 'gcx, 'tcx> {\n         NestedVisitorMap::None\n     }\n \n-    fn visit_stmt(&mut self, s: &'gcx hir::Stmt) {\n-        self.visit_node_id(s.span, s.node.id());\n-        intravisit::walk_stmt(self, s);\n-    }\n-\n     fn visit_expr(&mut self, e: &'gcx hir::Expr) {\n         self.fix_scalar_builtin_expr(e);\n "}]}