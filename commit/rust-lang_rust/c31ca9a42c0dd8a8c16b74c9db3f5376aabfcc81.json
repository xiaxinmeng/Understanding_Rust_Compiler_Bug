{"sha": "c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMWNhOWE0MmMwZGQ4YThjMTZiNzRjOWRiM2Y1Mzc2YWFiZmNjODE=", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-05-27T20:42:07Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-05-27T22:17:47Z"}, "message": "const eval errors: display the current item instance if there are generics involved", "tree": {"sha": "60a4d6b457d894077c9fc0352ba7c862fac10dce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60a4d6b457d894077c9fc0352ba7c862fac10dce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "html_url": "https://github.com/rust-lang/rust/commit/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "949aca6eebf974939ebda84549ee79ecbeb84811", "url": "https://api.github.com/repos/rust-lang/rust/commits/949aca6eebf974939ebda84549ee79ecbeb84811", "html_url": "https://github.com/rust-lang/rust/commit/949aca6eebf974939ebda84549ee79ecbeb84811"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "460fea37461e8d998e7d447d79a0dc493cc6b715", "filename": "compiler/rustc_mir/src/const_eval/eval_queries.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -16,6 +16,7 @@ use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, subst::Subst, TyCtxt};\n use rustc_span::source_map::Span;\n use rustc_target::abi::{Abi, LayoutOf};\n+use std::borrow::Cow;\n use std::convert::TryInto;\n \n pub fn note_on_undefined_behavior_error() -> &'static str {\n@@ -328,11 +329,22 @@ pub fn eval_to_allocation_raw_provider<'tcx>(\n                 ))\n             } else {\n                 let msg = if is_static {\n-                    \"could not evaluate static initializer\"\n+                    Cow::from(\"could not evaluate static initializer\")\n                 } else {\n-                    \"evaluation of constant value failed\"\n+                    // If the current item has generics, we'd like to enrich the message with the\n+                    // instance and its substs: to show the actual compile-time values, in addition to\n+                    // the expression, leading to the const eval error.\n+                    let instance = &key.value.instance;\n+                    if !instance.substs.is_empty() {\n+                        let instance = with_no_trimmed_paths(|| instance.to_string());\n+                        let msg = format!(\"evaluation of `{}` failed\", instance);\n+                        Cow::from(msg)\n+                    } else {\n+                        Cow::from(\"evaluation of constant value failed\")\n+                    }\n                 };\n-                Err(err.report_as_error(ecx.tcx.at(ecx.cur_span()), msg))\n+\n+                Err(err.report_as_error(ecx.tcx.at(ecx.cur_span()), &msg))\n             }\n         }\n         Ok(mplace) => {"}, {"sha": "8167d785d7a8e5cb9b7272acd76f0357b3152336", "filename": "src/test/ui/const-generics/const_evaluatable_checked/from-sig-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffrom-sig-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffrom-sig-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffrom-sig-fail.rs?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -2,7 +2,7 @@\n #![allow(incomplete_features)]\n \n fn test<const N: usize>() -> [u8; N - 1] {\n-    //~^ ERROR evaluation of constant\n+    //~^ ERROR evaluation of `test::<0_usize>::{constant#0}` failed\n     todo!()\n }\n "}, {"sha": "31ccf9796947267784d546bf3e51492a372209a2", "filename": "src/test/ui/const-generics/const_evaluatable_checked/from-sig-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffrom-sig-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffrom-sig-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffrom-sig-fail.stderr?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -1,4 +1,4 @@\n-error[E0080]: evaluation of constant value failed\n+error[E0080]: evaluation of `test::<0_usize>::{constant#0}` failed\n   --> $DIR/from-sig-fail.rs:4:35\n    |\n LL | fn test<const N: usize>() -> [u8; N - 1] {"}, {"sha": "1f2313a6028d1bc4678687abf76dd65300679a4e", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple_fail.full.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.full.stderr?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -1,10 +1,10 @@\n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/simple_fail.rs:9:48\n+error[E0080]: evaluation of `test::<0_usize>::{constant#0}` failed\n+  --> $DIR/simple_fail.rs:10:48\n    |\n LL | fn test<const N: usize>() -> Arr<N> where [u8; N - 1]: Sized {\n    |                                                ^^^^^ attempt to compute `0_usize - 1_usize`, which would overflow\n \n-error[E0080]: evaluation of constant value failed\n+error[E0080]: evaluation of `Arr::<0_usize>::{constant#0}` failed\n   --> $DIR/simple_fail.rs:6:33\n    |\n LL | type Arr<const N: usize> = [u8; N - 1];"}, {"sha": "1aa66f9a8ba8988db7cec68c29879b01fe0c5bb6", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple_fail.min.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -8,7 +8,7 @@ LL | type Arr<const N: usize> = [u8; N - 1];\n    = help: use `#![feature(const_generics)]` and `#![feature(const_evaluatable_checked)]` to allow generic const expressions\n \n error: generic parameters may not be used in const operations\n-  --> $DIR/simple_fail.rs:9:48\n+  --> $DIR/simple_fail.rs:10:48\n    |\n LL | fn test<const N: usize>() -> Arr<N> where [u8; N - 1]: Sized {\n    |                                                ^ cannot perform const operation using `N`"}, {"sha": "f08d2495b4dd9299a7761d18b287c134ee7952d7", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple_fail.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.rs?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -3,12 +3,13 @@\n #![cfg_attr(full, feature(const_evaluatable_checked))]\n #![allow(incomplete_features)]\n \n-type Arr<const N: usize> = [u8; N - 1]; //[full]~ ERROR evaluation of constant\n+type Arr<const N: usize> = [u8; N - 1];\n //[min]~^ ERROR generic parameters may not be used in const operations\n+//[full]~^^ ERROR evaluation of `Arr::<0_usize>::{constant#0}` failed\n \n fn test<const N: usize>() -> Arr<N> where [u8; N - 1]: Sized {\n //[min]~^ ERROR generic parameters may not be used in const operations\n-//[full]~^^ ERROR evaluation of constant\n+//[full]~^^ ERROR evaluation of `test::<0_usize>::{constant#0}` failed\n     todo!()\n }\n "}, {"sha": "d34ac773da25e039c9c1b2a08704646d89ccd22a", "filename": "src/test/ui/consts/const-eval/issue-50814-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814-2.stderr?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -10,7 +10,7 @@ LL |     const BAR: usize = [5, 6, 7][T::BOO];\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n \n-error[E0080]: evaluation of constant value failed\n+error[E0080]: evaluation of `foo::<()>` failed\n   --> $DIR/issue-50814-2.rs:19:6\n    |\n LL |     &<A<T> as Foo<T>>::BAR"}, {"sha": "dd8d6bf839a04e26cc83e1372be38588f1e70269", "filename": "src/test/ui/consts/const-eval/issue-50814.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -10,7 +10,7 @@ LL |     const MAX: u8 = A::MAX + B::MAX;\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n \n-error[E0080]: evaluation of constant value failed\n+error[E0080]: evaluation of `foo::<i32>` failed\n   --> $DIR/issue-50814.rs:21:6\n    |\n LL |     &Sum::<U8,U8>::MAX"}, {"sha": "961234cf7e8540b9369cc5bf1fc6e0145f3d3ac2", "filename": "src/test/ui/mir/issue-80742.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr?ref=c31ca9a42c0dd8a8c16b74c9db3f5376aabfcc81", "patch": "@@ -1,4 +1,4 @@\n-error[E0080]: evaluation of constant value failed\n+error[E0080]: evaluation of `Inline::<dyn std::fmt::Debug>::{constant#0}` failed\n   --> $SRC_DIR/core/src/mem/mod.rs:LL:COL\n    |\n LL |     intrinsics::size_of::<T>()\n@@ -35,7 +35,7 @@ LL |   pub trait Debug {\n    = note: the following trait bounds were not satisfied:\n            `dyn Debug: Sized`\n \n-error[E0080]: evaluation of constant value failed\n+error[E0080]: evaluation of `Inline::<dyn std::fmt::Debug>::{constant#0}` failed\n   --> $SRC_DIR/core/src/mem/mod.rs:LL:COL\n    |\n LL |     intrinsics::size_of::<T>()"}]}