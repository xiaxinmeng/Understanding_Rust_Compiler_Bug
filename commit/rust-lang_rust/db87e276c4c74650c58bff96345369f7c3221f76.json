{"sha": "db87e276c4c74650c58bff96345369f7c3221f76", "node_id": "C_kwDOAAsO6NoAKGRiODdlMjc2YzRjNzQ2NTBjNThiZmY5NjM0NTM2OWY3YzMyMjFmNzY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-09T03:57:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-09T03:57:52Z"}, "message": "Rollup merge of #104163 - H4x5:once-repeat-with-debug, r=dtolnay\n\nDon't derive Debug for `OnceWith` & `RepeatWith`\n\nClosures don't impl Debug, so the derived impl is kinda useless. The behavior of not debug-printing closures is consistent with the rest of the iterator adapters/sources.", "tree": {"sha": "015fd26dc5e1874906151a14440e269eac2f7c35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/015fd26dc5e1874906151a14440e269eac2f7c35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db87e276c4c74650c58bff96345369f7c3221f76", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJju5DACRBK7hj4Ov3rIwAAooAIAAW3mI218sIgNRk1d1OgIt54\nF5dVxfq/pbVGx4BD60sYmVRRGEeD5dOe7WQGAa1Do4yh72uexKMdfsZ6Jd6D815V\nIkJTxrfIfQFTWlNz5QO/MURgpSsJ2nFEFvkF22evWcSZ4bzhH+j8geAoCS17sUQq\nEk0GYur7ADah+PsJDleF1RXk2PvZxgKt34j4t66xn0Ayt3P++O7/HcWyU5kWmtMw\nQMFEIJEJTSCpX8sgOaujLwyJGE8xdi59b2wsLbqiipPUr42yGTuNxNlgX9TSEkWe\nzY6Ll6hS8kGMYW2XSaiH/zn8Ubp1nhCwt0T/R8DoXJv0fX1KSRpuTarg16pmK1Y=\n=lGEv\n-----END PGP SIGNATURE-----\n", "payload": "tree 015fd26dc5e1874906151a14440e269eac2f7c35\nparent a377893da2cd7124e5a18c7116cbb70e16dd5541\nparent eddb479ad36841a858f186af81d4ac360d2a2058\nauthor Michael Goulet <michael@errs.io> 1673236672 -0800\ncommitter GitHub <noreply@github.com> 1673236672 -0800\n\nRollup merge of #104163 - H4x5:once-repeat-with-debug, r=dtolnay\n\nDon't derive Debug for `OnceWith` & `RepeatWith`\n\nClosures don't impl Debug, so the derived impl is kinda useless. The behavior of not debug-printing closures is consistent with the rest of the iterator adapters/sources.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db87e276c4c74650c58bff96345369f7c3221f76", "html_url": "https://github.com/rust-lang/rust/commit/db87e276c4c74650c58bff96345369f7c3221f76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db87e276c4c74650c58bff96345369f7c3221f76/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a377893da2cd7124e5a18c7116cbb70e16dd5541", "url": "https://api.github.com/repos/rust-lang/rust/commits/a377893da2cd7124e5a18c7116cbb70e16dd5541", "html_url": "https://github.com/rust-lang/rust/commit/a377893da2cd7124e5a18c7116cbb70e16dd5541"}, {"sha": "eddb479ad36841a858f186af81d4ac360d2a2058", "url": "https://api.github.com/repos/rust-lang/rust/commits/eddb479ad36841a858f186af81d4ac360d2a2058", "html_url": "https://github.com/rust-lang/rust/commit/eddb479ad36841a858f186af81d4ac360d2a2058"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "080ae27a30fcf976dd3e483e8fe6b14d8f3f65e4", "filename": "library/core/src/iter/sources/once_with.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/db87e276c4c74650c58bff96345369f7c3221f76/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db87e276c4c74650c58bff96345369f7c3221f76/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs?ref=db87e276c4c74650c58bff96345369f7c3221f76", "patch": "@@ -1,3 +1,4 @@\n+use crate::fmt;\n use crate::iter::{FusedIterator, TrustedLen};\n \n /// Creates an iterator that lazily generates a value exactly once by invoking\n@@ -66,12 +67,23 @@ pub fn once_with<A, F: FnOnce() -> A>(gen: F) -> OnceWith<F> {\n ///\n /// This `struct` is created by the [`once_with()`] function.\n /// See its documentation for more.\n-#[derive(Clone, Debug)]\n+#[derive(Clone)]\n #[stable(feature = \"iter_once_with\", since = \"1.43.0\")]\n pub struct OnceWith<F> {\n     gen: Option<F>,\n }\n \n+#[stable(feature = \"iter_once_with_debug\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl<F> fmt::Debug for OnceWith<F> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        if self.gen.is_some() {\n+            f.write_str(\"OnceWith(Some(_))\")\n+        } else {\n+            f.write_str(\"OnceWith(None)\")\n+        }\n+    }\n+}\n+\n #[stable(feature = \"iter_once_with\", since = \"1.43.0\")]\n impl<A, F: FnOnce() -> A> Iterator for OnceWith<F> {\n     type Item = A;"}, {"sha": "20420a3ad8e02a83df814e758b5cc9e8481f83a2", "filename": "library/core/src/iter/sources/repeat_with.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db87e276c4c74650c58bff96345369f7c3221f76/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db87e276c4c74650c58bff96345369f7c3221f76/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs?ref=db87e276c4c74650c58bff96345369f7c3221f76", "patch": "@@ -1,3 +1,4 @@\n+use crate::fmt;\n use crate::iter::{FusedIterator, TrustedLen};\n use crate::ops::Try;\n \n@@ -71,12 +72,19 @@ pub fn repeat_with<A, F: FnMut() -> A>(repeater: F) -> RepeatWith<F> {\n ///\n /// This `struct` is created by the [`repeat_with()`] function.\n /// See its documentation for more.\n-#[derive(Copy, Clone, Debug)]\n+#[derive(Copy, Clone)]\n #[stable(feature = \"iterator_repeat_with\", since = \"1.28.0\")]\n pub struct RepeatWith<F> {\n     repeater: F,\n }\n \n+#[stable(feature = \"iterator_repeat_with_debug\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl<F> fmt::Debug for RepeatWith<F> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_struct(\"RepeatWith\").finish_non_exhaustive()\n+    }\n+}\n+\n #[stable(feature = \"iterator_repeat_with\", since = \"1.28.0\")]\n impl<A, F: FnMut() -> A> Iterator for RepeatWith<F> {\n     type Item = A;"}]}