{"sha": "40720a61e83937304e2e6f4c81fc62e41edb72aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNzIwYTYxZTgzOTM3MzA0ZTJlNmY0YzgxZmM2MmU0MWVkYjcyYWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-08-17T15:58:15Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-08-17T15:58:15Z"}, "message": "rustup for the ! type", "tree": {"sha": "b4f4807cca2f731f3cb9afd4c31cebb89b8c4dc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4f4807cca2f731f3cb9afd4c31cebb89b8c4dc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40720a61e83937304e2e6f4c81fc62e41edb72aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXtImXAAoJEFbW7qD8Z6xGohQP/36MrYZg9QI6U7R5uJNumBy1\n1Vk1PlceYJgM2qGGxvNFiy/g+UqkSKskLyGonG+LauLZLzfH3woZWD7tdQ9CWk+V\nIOC5S2U7TiMGF00OUB/GAICHcUvGIS17HTFV0Lequrw7aKZsy/g1wXEe9FKFfoU4\nvBGxenc6X8cO8Wsq/oETICU8+oVkvAPqVEOEA5yvpqbd/4Lig8978beHS0oOXLnl\nXSRQ2HmJWQj7AX9GUEAfxWspBTbRONuPP8AQ4iE7GJIKeoRQMNmJqqWwkJHSM5ol\nEJfKh+PMggDSHGwMHnpruNV5x/zlRM/7GC6S2qnkv4WMITuXkb1/ykIo+tk8XDHc\nAKMsZUhy3yiH0ISP37HcpE1UAeTna0r6vK9HiCuNbDxoqC6/lOiSnL73QQXuT/zc\nVkkXBAlxV2iN6be4L++uJf29HGka0zfJcdqG41KlgGosFcRabZbuw0wdNvUlIv8g\n/u85sGPx9k2kAFSj025nreYapaJrF76gl+B8shjw+3zDuQu/xhZHN/9J67VVZj6P\n61hZF0+dKuQO4X3foj2kroUM+/x3mJ5VD9bTsPwZZj90xq2TXfzo4F3L8QqdV7Qz\nPzf0IFrZcqadB2eNtCViVsHU24i0wLncFMBYoyuDjlVXAcyEJorXofUQX+qv3Ubg\nX0wfIdrqDXg+qtdW748F\n=jVKf\n-----END PGP SIGNATURE-----", "payload": "tree b4f4807cca2f731f3cb9afd4c31cebb89b8c4dc3\nparent c4b37236baa4cee424e74c614fc814e7890aa8b6\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1471449495 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1471449495 +0200\n\nrustup for the ! type"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40720a61e83937304e2e6f4c81fc62e41edb72aa", "html_url": "https://github.com/rust-lang/rust/commit/40720a61e83937304e2e6f4c81fc62e41edb72aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40720a61e83937304e2e6f4c81fc62e41edb72aa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4b37236baa4cee424e74c614fc814e7890aa8b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b37236baa4cee424e74c614fc814e7890aa8b6", "html_url": "https://github.com/rust-lang/rust/commit/c4b37236baa4cee424e74c614fc814e7890aa8b6"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "faa56bccb2280cdec7ee74823a6fcd95f5ae4702", "filename": "clippy_lints/src/cyclomatic_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs?ref=40720a61e83937304e2e6f4c81fc62e41edb72aa", "patch": "@@ -142,7 +142,7 @@ impl<'a, 'b, 'tcx, 'gcx> Visitor<'a> for CCHelper<'b, 'gcx, 'tcx> {\n                 let ty = self.tcx.node_id_to_type(callee.id);\n                 match ty.sty {\n                     ty::TyFnDef(_, _, ty) |\n-                    ty::TyFnPtr(ty) if ty.sig.skip_binder().output.diverges() => {\n+                    ty::TyFnPtr(ty) if ty.sig.skip_binder().output.sty == ty::TyNever => {\n                         self.divergence += 1;\n                     }\n                     _ => (),"}, {"sha": "ad7da71eab05c29308ac9c9d1e31ae059d9fd174", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=40720a61e83937304e2e6f4c81fc62e41edb72aa", "patch": "@@ -71,7 +71,7 @@ fn check_closure(cx: &LateContext, expr: &Expr) {\n                     ty::TyFnDef(_, _, fn_ty) |\n                     ty::TyFnPtr(fn_ty) => {\n                         if fn_ty.unsafety == Unsafety::Unsafe ||\n-                           fn_ty.sig.skip_binder().output == ty::FnOutput::FnDiverging {\n+                           fn_ty.sig.skip_binder().output.sty == ty::TyNever {\n                             return;\n                         }\n                     }"}, {"sha": "c914d5210ecf3680a00df5b7469a919c9bad9e81", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=40720a61e83937304e2e6f4c81fc62e41edb72aa", "patch": "@@ -590,7 +590,7 @@ impl LateLintPass for Pass {\n \n             let ret_ty = return_ty(cx, implitem.id);\n             if &name.as_str() == &\"new\" &&\n-               !ret_ty.map_or(false, |ret_ty| ret_ty.walk().any(|t| same_tys(cx, t, ty, implitem.id))) {\n+               !ret_ty.walk().any(|t| same_tys(cx, t, ty, implitem.id)) {\n                 span_lint(cx,\n                           NEW_RET_NO_SELF,\n                           explicit_self.span,"}, {"sha": "b1bffb8c2362eb11fae84330b036a7b7cb809da3", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=40720a61e83937304e2e6f4c81fc62e41edb72aa", "patch": "@@ -106,8 +106,7 @@ impl LateLintPass for NewWithoutDefault {\n                     .ty;\n                 if_let_chain!{[\n                     self_ty.walk_shallow().next().is_none(), // implements_trait does not work with generics\n-                    let Some(ret_ty) = return_ty(cx, id),\n-                    same_tys(cx, self_ty, ret_ty, id),\n+                    same_tys(cx, self_ty, return_ty(cx, id), id),\n                     let Some(default_trait_id) = get_trait_def_id(cx, &paths::DEFAULT_TRAIT),\n                     !implements_trait(cx, self_ty, default_trait_id, Vec::new())\n                 ], {"}, {"sha": "c458bb1dff3909966d6b3999494bc0248bfbaa14", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40720a61e83937304e2e6f4c81fc62e41edb72aa/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=40720a61e83937304e2e6f4c81fc62e41edb72aa", "patch": "@@ -692,16 +692,12 @@ pub fn camel_case_from(s: &str) -> usize {\n     last_i\n }\n \n-/// Convenience function to get the return type of a function or `None` if the function diverges.\n-pub fn return_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, fn_item: NodeId) -> Option<ty::Ty<'tcx>> {\n+/// Convenience function to get the return type of a function\n+pub fn return_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, fn_item: NodeId) -> ty::Ty<'tcx> {\n     let parameter_env = ty::ParameterEnvironment::for_item(cx.tcx, fn_item);\n     let fn_sig = cx.tcx.node_id_to_type(fn_item).fn_sig().subst(cx.tcx, parameter_env.free_substs);\n     let fn_sig = cx.tcx.liberate_late_bound_regions(parameter_env.free_id_outlive, &fn_sig);\n-    if let ty::FnConverging(ret_ty) = fn_sig.output {\n-        Some(ret_ty)\n-    } else {\n-        None\n-    }\n+    fn_sig.output\n }\n \n /// Check if two types are the same."}]}