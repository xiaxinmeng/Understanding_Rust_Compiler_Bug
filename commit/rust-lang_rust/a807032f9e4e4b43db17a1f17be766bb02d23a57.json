{"sha": "a807032f9e4e4b43db17a1f17be766bb02d23a57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MDcwMzJmOWU0ZTRiNDNkYjE3YTFmMTdiZTc2NmJiMDJkMjNhNTc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-10-03T08:20:51Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-10-03T08:20:51Z"}, "message": "./x.py test --bless --compare-mode=nll", "tree": {"sha": "28941b2d6e764d203591ab0b9ceb380b4e66fefa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28941b2d6e764d203591ab0b9ceb380b4e66fefa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a807032f9e4e4b43db17a1f17be766bb02d23a57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a807032f9e4e4b43db17a1f17be766bb02d23a57", "html_url": "https://github.com/rust-lang/rust/commit/a807032f9e4e4b43db17a1f17be766bb02d23a57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a807032f9e4e4b43db17a1f17be766bb02d23a57/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c07cc2b2f2dc1f30acce0f75b270c3dead6d70", "url": "https://api.github.com/repos/rust-lang/rust/commits/19c07cc2b2f2dc1f30acce0f75b270c3dead6d70", "html_url": "https://github.com/rust-lang/rust/commit/19c07cc2b2f2dc1f30acce0f75b270c3dead6d70"}], "stats": {"total": 546, "additions": 258, "deletions": 288}, "files": [{"sha": "7eec31d36e39e30350e2e2aa9fdf8f9c1d4be631", "filename": "src/test/ui/self/arbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr?ref=a807032f9e4e4b43db17a1f17be766bb02d23a57", "patch": "@@ -7,19 +7,19 @@ LL |     async fn a(self: Pin<&Foo>, f: &Foo) -> &Foo { f }\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:8:50\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:8:52\n    |\n LL |     async fn a(self: Pin<&Foo>, f: &Foo) -> &Foo { f }\n-   |                          -                       ^^^^^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+   |                          -                         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n    |                          |\n    |                          lifetime `'_` defined here\n    |                          lifetime `'_` defined here\n \n error: lifetime may not live long enough\n-  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:11:73\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:11:75\n    |\n LL |     async fn c(self: Pin<&Self>, f: &Foo, g: &Foo) -> (Pin<&Foo>, &Foo) { (self, f) }\n-   |                          -                                              ^^^^^^^^^^^^^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+   |                          -                                                ^^^^^^^^^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n    |                          |\n    |                          lifetime `'_` defined here\n    |                          lifetime `'_` defined here\n@@ -33,12 +33,11 @@ LL |     async fn bar<'a>(self: Alias<&Self>, arg: &'a ()) -> &() { arg }\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:17:62\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:17:64\n    |\n LL |     async fn bar<'a>(self: Alias<&Self>, arg: &'a ()) -> &() { arg }\n-   |                  --              -                           ^^^^^^^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'a`\n-   |                  |               |\n-   |                  |               lifetime `'_` defined here\n+   |                  --              - lifetime `'_` defined here  ^^^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'a`\n+   |                  |\n    |                  lifetime `'a` defined here\n \n error: aborting due to 5 previous errors"}, {"sha": "b4f8ff6001d60b8d4d0f5376dbbbf1de0ce97098", "filename": "src/test/ui/self/elision/lt-ref-self-async.nll.stderr", "status": "modified", "additions": 54, "deletions": 60, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr?ref=a807032f9e4e4b43db17a1f17be766bb02d23a57", "patch": "@@ -7,16 +7,15 @@ LL |     async fn ref_self(&self, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#23r\n \n error: lifetime may not live long enough\n-  --> $DIR/lt-ref-self-async.rs:13:47\n-   |\n-LL |       async fn ref_self(&self, f: &u32) -> &u32 {\n-   |  _______________________-_______________________^\n-   | |                       |\n-   | |                       lifetime `'_` defined here\n-   | |                       lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/lt-ref-self-async.rs:14:9\n+   |\n+LL |     async fn ref_self(&self, f: &u32) -> &u32 {\n+   |                       -\n+   |                       |\n+   |                       lifetime `'_` defined here\n+   |                       lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/lt-ref-self-async.rs:19:48\n@@ -27,16 +26,15 @@ LL |     async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#23r\n \n error: lifetime may not live long enough\n-  --> $DIR/lt-ref-self-async.rs:19:53\n-   |\n-LL |       async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n-   |  _____________________________-_______________________^\n-   | |                             |\n-   | |                             lifetime `'_` defined here\n-   | |                             lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/lt-ref-self-async.rs:20:9\n+   |\n+LL |     async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n+   |                             -\n+   |                             |\n+   |                             lifetime `'_` defined here\n+   |                             lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/lt-ref-self-async.rs:23:57\n@@ -47,16 +45,15 @@ LL |     async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#23r\n \n error: lifetime may not live long enough\n-  --> $DIR/lt-ref-self-async.rs:23:62\n-   |\n-LL |       async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n-   |  _____________________________________-________________________^\n-   | |                                     |\n-   | |                                     lifetime `'_` defined here\n-   | |                                     lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/lt-ref-self-async.rs:24:9\n+   |\n+LL |     async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n+   |                                     -\n+   |                                     |\n+   |                                     lifetime `'_` defined here\n+   |                                     lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/lt-ref-self-async.rs:27:57\n@@ -67,16 +64,15 @@ LL |     async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#23r\n \n error: lifetime may not live long enough\n-  --> $DIR/lt-ref-self-async.rs:27:62\n-   |\n-LL |       async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n-   |  _____________________________________-________________________^\n-   | |                                     |\n-   | |                                     lifetime `'_` defined here\n-   | |                                     lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/lt-ref-self-async.rs:28:9\n+   |\n+LL |     async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n+   |                                     -\n+   |                                     |\n+   |                                     lifetime `'_` defined here\n+   |                                     lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/lt-ref-self-async.rs:31:66\n@@ -87,16 +83,15 @@ LL |     async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#23r\n \n error: lifetime may not live long enough\n-  --> $DIR/lt-ref-self-async.rs:31:71\n-   |\n-LL |       async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n-   |  _____________________________________________-_________________________^\n-   | |                                             |\n-   | |                                             lifetime `'_` defined here\n-   | |                                             lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/lt-ref-self-async.rs:32:9\n+   |\n+LL |     async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n+   |                                             -\n+   |                                             |\n+   |                                             lifetime `'_` defined here\n+   |                                             lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/lt-ref-self-async.rs:35:62\n@@ -107,16 +102,15 @@ LL |     async fn box_pin_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#23r\n \n error: lifetime may not live long enough\n-  --> $DIR/lt-ref-self-async.rs:35:67\n-   |\n-LL |       async fn box_pin_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n-   |  _________________________________________-_________________________^\n-   | |                                         |\n-   | |                                         lifetime `'_` defined here\n-   | |                                         lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/lt-ref-self-async.rs:36:9\n+   |\n+LL |     async fn box_pin_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n+   |                                         -\n+   |                                         |\n+   |                                         lifetime `'_` defined here\n+   |                                         lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error: aborting due to 12 previous errors\n "}, {"sha": "b6f2b63f093b193c3ccffbb77b7d0751fbc27fd9", "filename": "src/test/ui/self/elision/ref-mut-self-async.nll.stderr", "status": "modified", "additions": 54, "deletions": 60, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr?ref=a807032f9e4e4b43db17a1f17be766bb02d23a57", "patch": "@@ -7,16 +7,15 @@ LL |     async fn ref_self(&mut self, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-self-async.rs:13:51\n-   |\n-LL |       async fn ref_self(&mut self, f: &u32) -> &u32 {\n-   |  _______________________-___________________________^\n-   | |                       |\n-   | |                       lifetime `'_` defined here\n-   | |                       lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-mut-self-async.rs:14:9\n+   |\n+LL |     async fn ref_self(&mut self, f: &u32) -> &u32 {\n+   |                       -\n+   |                       |\n+   |                       lifetime `'_` defined here\n+   |                       lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-self-async.rs:19:52\n@@ -27,16 +26,15 @@ LL |     async fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-self-async.rs:19:57\n-   |\n-LL |       async fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n-   |  _____________________________-___________________________^\n-   | |                             |\n-   | |                             lifetime `'_` defined here\n-   | |                             lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-mut-self-async.rs:20:9\n+   |\n+LL |     async fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n+   |                             -\n+   |                             |\n+   |                             lifetime `'_` defined here\n+   |                             lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-self-async.rs:23:61\n@@ -47,16 +45,15 @@ LL |     async fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-self-async.rs:23:66\n-   |\n-LL |       async fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n-   |  _____________________________________-____________________________^\n-   | |                                     |\n-   | |                                     lifetime `'_` defined here\n-   | |                                     lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-mut-self-async.rs:24:9\n+   |\n+LL |     async fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n+   |                                     -\n+   |                                     |\n+   |                                     lifetime `'_` defined here\n+   |                                     lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-self-async.rs:27:61\n@@ -67,16 +64,15 @@ LL |     async fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-self-async.rs:27:66\n-   |\n-LL |       async fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n-   |  _____________________________________-____________________________^\n-   | |                                     |\n-   | |                                     lifetime `'_` defined here\n-   | |                                     lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-mut-self-async.rs:28:9\n+   |\n+LL |     async fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n+   |                                     -\n+   |                                     |\n+   |                                     lifetime `'_` defined here\n+   |                                     lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-self-async.rs:31:70\n@@ -87,16 +83,15 @@ LL |     async fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-self-async.rs:31:75\n-   |\n-LL |       async fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n-   |  _____________________________________________-_____________________________^\n-   | |                                             |\n-   | |                                             lifetime `'_` defined here\n-   | |                                             lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-mut-self-async.rs:32:9\n+   |\n+LL |     async fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n+   |                                             -\n+   |                                             |\n+   |                                             lifetime `'_` defined here\n+   |                                             lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-self-async.rs:35:70\n@@ -107,16 +102,15 @@ LL |     async fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-self-async.rs:35:75\n-   |\n-LL |       async fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n-   |  _____________________________________________-_____________________________^\n-   | |                                             |\n-   | |                                             lifetime `'_` defined here\n-   | |                                             lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-mut-self-async.rs:36:9\n+   |\n+LL |     async fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n+   |                                             -\n+   |                                             |\n+   |                                             lifetime `'_` defined here\n+   |                                             lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error: aborting due to 12 previous errors\n "}, {"sha": "fa78543bd87ab14d7c3159da606e3d0a2124eea2", "filename": "src/test/ui/self/elision/ref-mut-struct-async.nll.stderr", "status": "modified", "additions": 40, "deletions": 45, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr?ref=a807032f9e4e4b43db17a1f17be766bb02d23a57", "patch": "@@ -7,16 +7,15 @@ LL |     async fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-struct-async.rs:13:61\n+  --> $DIR/ref-mut-struct-async.rs:14:9\n    |\n-LL |       async fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n-   |  _______________________________-_____________________________^\n-   | |                               |\n-   | |                               lifetime `'_` defined here\n-   | |                               lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n+   |                               -\n+   |                               |\n+   |                               lifetime `'_` defined here\n+   |                               lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-struct-async.rs:17:65\n@@ -27,16 +26,15 @@ LL |     async fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-struct-async.rs:17:70\n+  --> $DIR/ref-mut-struct-async.rs:18:9\n    |\n-LL |       async fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n-   |  _______________________________________-______________________________^\n-   | |                                       |\n-   | |                                       lifetime `'_` defined here\n-   | |                                       lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n+   |                                       -\n+   |                                       |\n+   |                                       lifetime `'_` defined here\n+   |                                       lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-struct-async.rs:21:65\n@@ -47,16 +45,15 @@ LL |     async fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-struct-async.rs:21:70\n+  --> $DIR/ref-mut-struct-async.rs:22:9\n    |\n-LL |       async fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n-   |  _______________________________________-______________________________^\n-   | |                                       |\n-   | |                                       lifetime `'_` defined here\n-   | |                                       lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n+   |                                       -\n+   |                                       |\n+   |                                       lifetime `'_` defined here\n+   |                                       lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-struct-async.rs:25:74\n@@ -67,16 +64,15 @@ LL |     async fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-struct-async.rs:25:79\n+  --> $DIR/ref-mut-struct-async.rs:26:9\n    |\n-LL |       async fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u32 {\n-   |  _______________________________________________-_______________________________^\n-   | |                                               |\n-   | |                                               lifetime `'_` defined here\n-   | |                                               lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u32 {\n+   |                                               -\n+   |                                               |\n+   |                                               lifetime `'_` defined here\n+   |                                               lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-struct-async.rs:29:74\n@@ -87,16 +83,15 @@ LL |     async fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-mut-struct-async.rs:29:79\n+  --> $DIR/ref-mut-struct-async.rs:30:9\n    |\n-LL |       async fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u32 {\n-   |  _______________________________________________-_______________________________^\n-   | |                                               |\n-   | |                                               lifetime `'_` defined here\n-   | |                                               lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u32 {\n+   |                                               -\n+   |                                               |\n+   |                                               lifetime `'_` defined here\n+   |                                               lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error: aborting due to 10 previous errors\n "}, {"sha": "88fd2101bc619b3bedede0e66bc45adf069cd311", "filename": "src/test/ui/self/elision/ref-self-async.nll.stderr", "status": "modified", "additions": 63, "deletions": 70, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self-async.nll.stderr?ref=a807032f9e4e4b43db17a1f17be766bb02d23a57", "patch": "@@ -7,16 +7,15 @@ LL |     async fn ref_self(&self, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-self-async.rs:22:47\n-   |\n-LL |       async fn ref_self(&self, f: &u32) -> &u32 {\n-   |  _______________________-_______________________^\n-   | |                       |\n-   | |                       lifetime `'_` defined here\n-   | |                       lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-self-async.rs:23:9\n+   |\n+LL |     async fn ref_self(&self, f: &u32) -> &u32 {\n+   |                       -\n+   |                       |\n+   |                       lifetime `'_` defined here\n+   |                       lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-self-async.rs:28:48\n@@ -27,16 +26,15 @@ LL |     async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-self-async.rs:28:53\n-   |\n-LL |       async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n-   |  _____________________________-_______________________^\n-   | |                             |\n-   | |                             lifetime `'_` defined here\n-   | |                             lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-self-async.rs:29:9\n+   |\n+LL |     async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n+   |                             -\n+   |                             |\n+   |                             lifetime `'_` defined here\n+   |                             lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-self-async.rs:32:57\n@@ -47,16 +45,15 @@ LL |     async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-self-async.rs:32:62\n-   |\n-LL |       async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n-   |  _____________________________________-________________________^\n-   | |                                     |\n-   | |                                     lifetime `'_` defined here\n-   | |                                     lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-self-async.rs:33:9\n+   |\n+LL |     async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n+   |                                     -\n+   |                                     |\n+   |                                     lifetime `'_` defined here\n+   |                                     lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-self-async.rs:36:57\n@@ -67,16 +64,15 @@ LL |     async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-self-async.rs:36:62\n-   |\n-LL |       async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n-   |  _____________________________________-________________________^\n-   | |                                     |\n-   | |                                     lifetime `'_` defined here\n-   | |                                     lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-self-async.rs:37:9\n+   |\n+LL |     async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n+   |                                     -\n+   |                                     |\n+   |                                     lifetime `'_` defined here\n+   |                                     lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-self-async.rs:40:66\n@@ -87,16 +83,15 @@ LL |     async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-self-async.rs:40:71\n-   |\n-LL |       async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n-   |  _____________________________________________-_________________________^\n-   | |                                             |\n-   | |                                             lifetime `'_` defined here\n-   | |                                             lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-self-async.rs:41:9\n+   |\n+LL |     async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n+   |                                             -\n+   |                                             |\n+   |                                             lifetime `'_` defined here\n+   |                                             lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-self-async.rs:44:66\n@@ -107,16 +102,15 @@ LL |     async fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-self-async.rs:44:71\n-   |\n-LL |       async fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n-   |  _____________________________________________-_________________________^\n-   | |                                             |\n-   | |                                             lifetime `'_` defined here\n-   | |                                             lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-self-async.rs:45:9\n+   |\n+LL |     async fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n+   |                                             -\n+   |                                             |\n+   |                                             lifetime `'_` defined here\n+   |                                             lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-self-async.rs:48:69\n@@ -127,16 +121,15 @@ LL |     async fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-self-async.rs:48:73\n-   |\n-LL |       async fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n-   |  ____________________________________________-____________________________^\n-   | |                                            |\n-   | |                                            lifetime `'_` defined here\n-   | |                                            lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+  --> $DIR/ref-self-async.rs:49:9\n+   |\n+LL |     async fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n+   |                                            -\n+   |                                            |\n+   |                                            lifetime `'_` defined here\n+   |                                            lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error: aborting due to 14 previous errors\n "}, {"sha": "93fec69ec343a2188327165dd9aea09352ed3b0d", "filename": "src/test/ui/self/elision/ref-struct-async.nll.stderr", "status": "modified", "additions": 40, "deletions": 45, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a807032f9e4e4b43db17a1f17be766bb02d23a57/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr?ref=a807032f9e4e4b43db17a1f17be766bb02d23a57", "patch": "@@ -7,16 +7,15 @@ LL |     async fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-struct-async.rs:13:57\n+  --> $DIR/ref-struct-async.rs:14:9\n    |\n-LL |       async fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n-   |  _______________________________-_________________________^\n-   | |                               |\n-   | |                               lifetime `'_` defined here\n-   | |                               lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |                               -\n+   |                               |\n+   |                               lifetime `'_` defined here\n+   |                               lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-struct-async.rs:17:61\n@@ -27,16 +26,15 @@ LL |     async fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-struct-async.rs:17:66\n+  --> $DIR/ref-struct-async.rs:18:9\n    |\n-LL |       async fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n-   |  _______________________________________-__________________________^\n-   | |                                       |\n-   | |                                       lifetime `'_` defined here\n-   | |                                       lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n+   |                                       -\n+   |                                       |\n+   |                                       lifetime `'_` defined here\n+   |                                       lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-struct-async.rs:21:61\n@@ -47,16 +45,15 @@ LL |     async fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-struct-async.rs:21:66\n+  --> $DIR/ref-struct-async.rs:22:9\n    |\n-LL |       async fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n-   |  _______________________________________-__________________________^\n-   | |                                       |\n-   | |                                       lifetime `'_` defined here\n-   | |                                       lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n+   |                                       -\n+   |                                       |\n+   |                                       lifetime `'_` defined here\n+   |                                       lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-struct-async.rs:25:70\n@@ -67,16 +64,15 @@ LL |     async fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-struct-async.rs:25:75\n+  --> $DIR/ref-struct-async.rs:26:9\n    |\n-LL |       async fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n-   |  _______________________________________________-___________________________^\n-   | |                                               |\n-   | |                                               lifetime `'_` defined here\n-   | |                                               lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n+   |                                               -\n+   |                                               |\n+   |                                               lifetime `'_` defined here\n+   |                                               lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-struct-async.rs:29:66\n@@ -87,16 +83,15 @@ LL |     async fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n    = note: hidden type `impl std::future::Future` captures lifetime '_#15r\n \n error: lifetime may not live long enough\n-  --> $DIR/ref-struct-async.rs:29:71\n+  --> $DIR/ref-struct-async.rs:30:9\n    |\n-LL |       async fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n-   |  ___________________________________________-___________________________^\n-   | |                                           |\n-   | |                                           lifetime `'_` defined here\n-   | |                                           lifetime `'_` defined here\n-LL | |         f\n-LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+LL |     async fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n+   |                                           -\n+   |                                           |\n+   |                                           lifetime `'_` defined here\n+   |                                           lifetime `'_` defined here\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n error: aborting due to 10 previous errors\n "}]}