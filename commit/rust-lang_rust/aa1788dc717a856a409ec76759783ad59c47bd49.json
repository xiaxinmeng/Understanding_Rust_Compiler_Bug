{"sha": "aa1788dc717a856a409ec76759783ad59c47bd49", "node_id": "C_kwDOAAsO6NoAKGFhMTc4OGRjNzE3YTg1NmE0MDllYzc2NzU5NzgzYWQ1OWM0N2JkNDk", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T12:48:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T14:00:55Z"}, "message": "clarify semantics of doc links", "tree": {"sha": "08d4a493fd93fd53ece0ca790120d6a38a261a44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08d4a493fd93fd53ece0ca790120d6a38a261a44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa1788dc717a856a409ec76759783ad59c47bd49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1788dc717a856a409ec76759783ad59c47bd49", "html_url": "https://github.com/rust-lang/rust/commit/aa1788dc717a856a409ec76759783ad59c47bd49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa1788dc717a856a409ec76759783ad59c47bd49/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd", "html_url": "https://github.com/rust-lang/rust/commit/f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "46e9c54dad659df68463ff92dd7379342a646ce9", "filename": "crates/hir/src/attrs.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/aa1788dc717a856a409ec76759783ad59c47bd49/crates%2Fhir%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa1788dc717a856a409ec76759783ad59c47bd49/crates%2Fhir%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fattrs.rs?ref=aa1788dc717a856a409ec76759783ad59c47bd49", "patch": "@@ -11,7 +11,7 @@ use hir_def::{\n };\n use hir_expand::{hygiene::Hygiene, MacroDefId};\n use hir_ty::db::HirDatabase;\n-use syntax::ast;\n+use syntax::{ast, AstNode};\n \n use crate::{\n     Adt, AssocItem, Const, ConstParam, Enum, Field, Function, GenericParam, Impl, LifetimeParam,\n@@ -147,8 +147,18 @@ fn resolve_doc_path(\n         // FIXME\n         AttrDefId::MacroDefId(_) => return None,\n     };\n-    let path = ast::Path::parse(link).ok()?;\n-    let modpath = ModPath::from_src(db.upcast(), path, &Hygiene::new_unhygienic())?;\n+\n+    let modpath = {\n+        let ast_path = ast::SourceFile::parse(&format!(\"type T = {};\", link))\n+            .syntax_node()\n+            .descendants()\n+            .find_map(ast::Path::cast)?;\n+        if ast_path.to_string() != link {\n+            return None;\n+        }\n+        ModPath::from_src(db.upcast(), ast_path, &Hygiene::new_unhygienic())?\n+    };\n+\n     let resolved = resolver.resolve_module_path_in_items(db.upcast(), &modpath);\n     let resolved = if resolved == PerNs::none() {\n         resolver.resolve_module_path_in_trait_assoc_items(db.upcast(), &modpath)?"}]}