{"sha": "f9c8646d8915daced2fa9857770fa3a6dd55414f", "node_id": "C_kwDOAAsO6NoAKGY5Yzg2NDZkODkxNWRhY2VkMmZhOTg1Nzc3MGZhM2E2ZGQ1NTQxNGY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-09T00:44:20Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-09T00:44:20Z"}, "message": "fix symbol index collection not collecting legacy macros", "tree": {"sha": "b7a7925beb99da780592e1bfc4b1d6c6fe0a4605", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7a7925beb99da780592e1bfc4b1d6c6fe0a4605"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9c8646d8915daced2fa9857770fa3a6dd55414f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9c8646d8915daced2fa9857770fa3a6dd55414f", "html_url": "https://github.com/rust-lang/rust/commit/f9c8646d8915daced2fa9857770fa3a6dd55414f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9c8646d8915daced2fa9857770fa3a6dd55414f/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e94fb7028cc7d54eb2b1d3b49a2282faa0f80be", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e94fb7028cc7d54eb2b1d3b49a2282faa0f80be", "html_url": "https://github.com/rust-lang/rust/commit/4e94fb7028cc7d54eb2b1d3b49a2282faa0f80be"}], "stats": {"total": 245, "additions": 127, "deletions": 118}, "files": [{"sha": "858293a345cd111b04d0fa191996b88a382114de", "filename": "crates/hir/src/symbols.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f9c8646d8915daced2fa9857770fa3a6dd55414f/crates%2Fhir%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c8646d8915daced2fa9857770fa3a6dd55414f/crates%2Fhir%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsymbols.rs?ref=f9c8646d8915daced2fa9857770fa3a6dd55414f", "patch": "@@ -174,6 +174,13 @@ impl<'a> SymbolCollector<'a> {\n         for const_id in scope.unnamed_consts() {\n             self.collect_from_body(const_id);\n         }\n+\n+        for (_, id) in scope.legacy_macros() {\n+            let loc = id.lookup(self.db.upcast());\n+            if loc.container == module_id {\n+                self.push_decl(id, FileSymbolKind::Macro);\n+            }\n+        }\n     }\n \n     fn collect_from_body(&mut self, body_id: impl Into<DefWithBodyId>) {"}, {"sha": "e6fdd41bd8671907655c9575dd2942746e08b10c", "filename": "crates/hir_def/src/item_scope.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9c8646d8915daced2fa9857770fa3a6dd55414f/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c8646d8915daced2fa9857770fa3a6dd55414f/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs?ref=f9c8646d8915daced2fa9857770fa3a6dd55414f", "patch": "@@ -128,9 +128,7 @@ impl ItemScope {\n     }\n \n     /// Iterate over all legacy textual scoped macros visible at the end of the module\n-    pub(crate) fn legacy_macros<'a>(\n-        &'a self,\n-    ) -> impl Iterator<Item = (&'a Name, MacroRulesId)> + 'a {\n+    pub fn legacy_macros<'a>(&'a self) -> impl Iterator<Item = (&'a Name, MacroRulesId)> + 'a {\n         self.legacy_macros.iter().map(|(name, def)| (name, *def))\n     }\n "}, {"sha": "b5979e6b83ade7bc67e0935bac193a034d25f060", "filename": "crates/ide_db/src/symbol_index.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f9c8646d8915daced2fa9857770fa3a6dd55414f/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c8646d8915daced2fa9857770fa3a6dd55414f/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs?ref=f9c8646d8915daced2fa9857770fa3a6dd55414f", "patch": "@@ -425,7 +425,11 @@ struct StructInModB;\n         let symbols: Vec<_> = Crate::from(db.test_crate())\n             .modules(&db)\n             .into_iter()\n-            .map(|module_id| (module_id, SymbolCollector::collect(&db, module_id)))\n+            .map(|module_id| {\n+                let mut symbols = SymbolCollector::collect(&db, module_id);\n+                symbols.sort_by_key(|it| it.name.clone());\n+                (module_id, symbols)\n+            })\n             .collect();\n \n         expect_file![\"./test_data/test_symbol_index_collection.txt\"].assert_debug_eq(&symbols);"}, {"sha": "2f531ca0c709c7d62e23f46ca5f89d216d7b392c", "filename": "crates/ide_db/src/test_data/test_symbol_index_collection.txt", "status": "modified", "additions": 114, "deletions": 114, "changes": 228, "blob_url": "https://github.com/rust-lang/rust/blob/f9c8646d8915daced2fa9857770fa3a6dd55414f/crates%2Fide_db%2Fsrc%2Ftest_data%2Ftest_symbol_index_collection.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f9c8646d8915daced2fa9857770fa3a6dd55414f/crates%2Fide_db%2Fsrc%2Ftest_data%2Ftest_symbol_index_collection.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Ftest_data%2Ftest_symbol_index_collection.txt?ref=f9c8646d8915daced2fa9857770fa3a6dd55414f", "patch": "@@ -11,31 +11,29 @@\n         },\n         [\n             FileSymbol {\n-                name: \"StructFromMacro\",\n+                name: \"Alias\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n-                        MacroFile(\n-                            MacroFile {\n-                                macro_call_id: MacroCallId(\n-                                    0,\n-                                ),\n-                            },\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: STRUCT,\n-                        range: 0..22,\n+                        kind: TYPE_ALIAS,\n+                        range: 397..417,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 6..21,\n+                        range: 402..407,\n                     },\n                 },\n-                kind: Struct,\n+                kind: TypeAlias,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"Struct\",\n+                name: \"CONST\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -45,19 +43,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: STRUCT,\n-                        range: 170..184,\n+                        kind: CONST,\n+                        range: 340..361,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 177..183,\n+                        range: 346..351,\n                     },\n                 },\n-                kind: Struct,\n+                kind: Const,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"Enum\",\n+                name: \"CONST_WITH_INNER\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -67,19 +65,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: ENUM,\n-                        range: 185..207,\n+                        kind: CONST,\n+                        range: 520..592,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 190..194,\n+                        range: 526..542,\n                     },\n                 },\n-                kind: Enum,\n+                kind: Const,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"Union\",\n+                name: \"Enum\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -89,19 +87,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: UNION,\n-                        range: 208..222,\n+                        kind: ENUM,\n+                        range: 185..207,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 214..219,\n+                        range: 190..194,\n                     },\n                 },\n-                kind: Union,\n+                kind: Enum,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"Trait\",\n+                name: \"Macro\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -111,19 +109,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: TRAIT,\n-                        range: 261..300,\n+                        kind: MACRO_DEF,\n+                        range: 153..168,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 267..272,\n+                        range: 159..164,\n                     },\n                 },\n-                kind: Trait,\n+                kind: Macro,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"trait_fn\",\n+                name: \"STATIC\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -133,21 +131,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: FN,\n-                        range: 279..298,\n+                        kind: STATIC,\n+                        range: 362..396,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 282..290,\n+                        range: 369..375,\n                     },\n                 },\n-                kind: Function,\n-                container_name: Some(\n-                    \"Trait\",\n-                ),\n+                kind: Static,\n+                container_name: None,\n             },\n             FileSymbol {\n-                name: \"main\",\n+                name: \"Struct\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -157,41 +153,43 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: FN,\n-                        range: 302..338,\n+                        kind: STRUCT,\n+                        range: 170..184,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 305..309,\n+                        range: 177..183,\n                     },\n                 },\n-                kind: Function,\n+                kind: Struct,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"CONST\",\n+                name: \"StructFromMacro\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n-                        FileId(\n-                            FileId(\n-                                0,\n-                            ),\n+                        MacroFile(\n+                            MacroFile {\n+                                macro_call_id: MacroCallId(\n+                                    0,\n+                                ),\n+                            },\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: CONST,\n-                        range: 340..361,\n+                        kind: STRUCT,\n+                        range: 0..22,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 346..351,\n+                        range: 6..21,\n                     },\n                 },\n-                kind: Const,\n+                kind: Struct,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"STATIC\",\n+                name: \"StructInFn\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -201,19 +199,21 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: STATIC,\n-                        range: 362..396,\n+                        kind: STRUCT,\n+                        range: 318..336,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 369..375,\n+                        range: 325..335,\n                     },\n                 },\n-                kind: Static,\n-                container_name: None,\n+                kind: Struct,\n+                container_name: Some(\n+                    \"main\",\n+                ),\n             },\n             FileSymbol {\n-                name: \"Alias\",\n+                name: \"StructInNamedConst\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -223,19 +223,21 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: TYPE_ALIAS,\n-                        range: 397..417,\n+                        kind: STRUCT,\n+                        range: 555..581,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 402..407,\n+                        range: 562..580,\n                     },\n                 },\n-                kind: TypeAlias,\n-                container_name: None,\n+                kind: Struct,\n+                container_name: Some(\n+                    \"CONST_WITH_INNER\",\n+                ),\n             },\n             FileSymbol {\n-                name: \"a_mod\",\n+                name: \"StructInUnnamedConst\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -245,19 +247,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: MODULE,\n-                        range: 419..457,\n+                        kind: STRUCT,\n+                        range: 479..507,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 423..428,\n+                        range: 486..506,\n                     },\n                 },\n-                kind: Module,\n+                kind: Struct,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"CONST_WITH_INNER\",\n+                name: \"Trait\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -267,19 +269,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: CONST,\n-                        range: 520..592,\n+                        kind: TRAIT,\n+                        range: 261..300,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 526..542,\n+                        range: 267..272,\n                     },\n                 },\n-                kind: Const,\n+                kind: Trait,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"b_mod\",\n+                name: \"Union\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -289,19 +291,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: MODULE,\n-                        range: 594..604,\n+                        kind: UNION,\n+                        range: 208..222,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 598..603,\n+                        range: 214..219,\n                     },\n                 },\n-                kind: Module,\n+                kind: Union,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"impl_fn\",\n+                name: \"a_mod\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -311,19 +313,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: FN,\n-                        range: 242..257,\n+                        kind: MODULE,\n+                        range: 419..457,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 245..252,\n+                        range: 423..428,\n                     },\n                 },\n-                kind: Function,\n+                kind: Module,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"macro_rules_macro\",\n+                name: \"b_mod\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -333,15 +335,15 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: MACRO_RULES,\n-                        range: 1..48,\n+                        kind: MODULE,\n+                        range: 594..604,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 14..31,\n+                        range: 598..603,\n                     },\n                 },\n-                kind: Macro,\n+                kind: Module,\n                 container_name: None,\n             },\n             FileSymbol {\n@@ -367,7 +369,7 @@\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"Macro\",\n+                name: \"impl_fn\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -377,19 +379,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: MACRO_DEF,\n-                        range: 153..168,\n+                        kind: FN,\n+                        range: 242..257,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 159..164,\n+                        range: 245..252,\n                     },\n                 },\n-                kind: Macro,\n+                kind: Function,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"StructInUnnamedConst\",\n+                name: \"macro_rules_macro\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -399,19 +401,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: STRUCT,\n-                        range: 479..507,\n+                        kind: MACRO_RULES,\n+                        range: 1..48,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 486..506,\n+                        range: 14..31,\n                     },\n                 },\n-                kind: Struct,\n+                kind: Macro,\n                 container_name: None,\n             },\n             FileSymbol {\n-                name: \"StructInNamedConst\",\n+                name: \"main\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -421,21 +423,19 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: STRUCT,\n-                        range: 555..581,\n+                        kind: FN,\n+                        range: 302..338,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 562..580,\n+                        range: 305..309,\n                     },\n                 },\n-                kind: Struct,\n-                container_name: Some(\n-                    \"CONST_WITH_INNER\",\n-                ),\n+                kind: Function,\n+                container_name: None,\n             },\n             FileSymbol {\n-                name: \"StructInFn\",\n+                name: \"trait_fn\",\n                 loc: DeclarationLocation {\n                     hir_file_id: HirFileId(\n                         FileId(\n@@ -445,17 +445,17 @@\n                         ),\n                     ),\n                     ptr: SyntaxNodePtr {\n-                        kind: STRUCT,\n-                        range: 318..336,\n+                        kind: FN,\n+                        range: 279..298,\n                     },\n                     name_ptr: SyntaxNodePtr {\n                         kind: NAME,\n-                        range: 325..335,\n+                        range: 282..290,\n                     },\n                 },\n-                kind: Struct,\n+                kind: Function,\n                 container_name: Some(\n-                    \"main\",\n+                    \"Trait\",\n                 ),\n             },\n         ],"}]}