{"sha": "c768617f6fae82388df9ac1a5907c30fcba3ef44", "node_id": "C_kwDOAAsO6NoAKGM3Njg2MTdmNmZhZTgyMzg4ZGY5YWMxYTU5MDdjMzBmY2JhM2VmNDQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-23T03:28:20Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-29T05:42:16Z"}, "message": "Improve `parse_dot_or_call_expr_with`.\n\nAvoid all the extra work in the very common case where `attrs` is empty.", "tree": {"sha": "cf047aa50e860a84716cd949b49903c851f158d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf047aa50e860a84716cd949b49903c851f158d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c768617f6fae82388df9ac1a5907c30fcba3ef44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c768617f6fae82388df9ac1a5907c30fcba3ef44", "html_url": "https://github.com/rust-lang/rust/commit/c768617f6fae82388df9ac1a5907c30fcba3ef44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c768617f6fae82388df9ac1a5907c30fcba3ef44/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b38106b6d8478fbfbded5403ee31c056c71cef48", "url": "https://api.github.com/repos/rust-lang/rust/commits/b38106b6d8478fbfbded5403ee31c056c71cef48", "html_url": "https://github.com/rust-lang/rust/commit/b38106b6d8478fbfbded5403ee31c056c71cef48"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "f28897aaeb0a25ab1db53ebe802894fc5cbdb6ea", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c768617f6fae82388df9ac1a5907c30fcba3ef44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c768617f6fae82388df9ac1a5907c30fcba3ef44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=c768617f6fae82388df9ac1a5907c30fcba3ef44", "patch": "@@ -944,13 +944,18 @@ impl<'a> Parser<'a> {\n         // Stitch the list of outer attributes onto the return value.\n         // A little bit ugly, but the best way given the current code\n         // structure\n-        self.parse_dot_or_call_expr_with_(e0, lo).map(|expr| {\n-            expr.map(|mut expr| {\n-                attrs.extend(expr.attrs);\n-                expr.attrs = attrs;\n-                expr\n+        let res = self.parse_dot_or_call_expr_with_(e0, lo);\n+        if attrs.is_empty() {\n+            res\n+        } else {\n+            res.map(|expr| {\n+                expr.map(|mut expr| {\n+                    attrs.extend(expr.attrs);\n+                    expr.attrs = attrs;\n+                    expr\n+                })\n             })\n-        })\n+        }\n     }\n \n     fn parse_dot_or_call_expr_with_(&mut self, mut e: P<Expr>, lo: Span) -> PResult<'a, P<Expr>> {"}]}