{"sha": "fabd49bc2d13d169f55916cc722d45651a0be50b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYmQ0OWJjMmQxM2QxNjlmNTU5MTZjYzcyMmQ0NTY1MWEwYmU1MGI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-04-03T05:53:40Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-04-03T05:57:28Z"}, "message": "Use os::copy_file in cargo", "tree": {"sha": "bd34fc45a0f402fd8962a85119ecd6a533a2243d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd34fc45a0f402fd8962a85119ecd6a533a2243d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fabd49bc2d13d169f55916cc722d45651a0be50b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fabd49bc2d13d169f55916cc722d45651a0be50b", "html_url": "https://github.com/rust-lang/rust/commit/fabd49bc2d13d169f55916cc722d45651a0be50b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fabd49bc2d13d169f55916cc722d45651a0be50b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dd22135a3733a9b518138ba115323bc0b69e111", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dd22135a3733a9b518138ba115323bc0b69e111", "html_url": "https://github.com/rust-lang/rust/commit/8dd22135a3733a9b518138ba115323bc0b69e111"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "0f7e76ef7761f5623579eb5b37f53d2e9e024dd9", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fabd49bc2d13d169f55916cc722d45651a0be50b/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fabd49bc2d13d169f55916cc722d45651a0be50b/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=fabd49bc2d13d169f55916cc722d45651a0be50b", "patch": "@@ -478,14 +478,13 @@ fn install_one_crate(c: cargo, path: str, cf: str) {\n             (exec_suffix == \"\" && !str::starts_with(path::basename(ct),\n                                                     \"lib\")) {\n             #debug(\"  bin: %s\", ct);\n-            // FIXME: need libstd os::copy or something (Issue #1983)\n-            run::run_program(\"cp\", [ct, c.bindir]);\n+            copy_warn(ct, c.bindir);\n             if c.opts.mode == system_mode {\n                 install_one_crate_to_sysroot(ct, \"bin\");\n             }\n         } else {\n             #debug(\"  lib: %s\", ct);\n-            run::run_program(\"cp\", [ct, c.libdir]);\n+            copy_warn(ct, c.bindir);\n             if c.opts.mode == system_mode {\n                 install_one_crate_to_sysroot(ct, libdir());\n             }\n@@ -499,10 +498,7 @@ fn install_one_crate_to_sysroot(ct: str, target: str) {\n             let path = [_path, \"..\", target];\n             check vec::is_not_empty(path);\n             let target_dir = path::normalize(path::connect_many(path));\n-            let p = run::program_output(\"cp\", [ct, target_dir]);\n-            if p.status != 0 {\n-                warn(#fmt[\"Copying %s to %s is failed\", ct, target_dir]);\n-            }\n+            copy_warn(ct, target_dir);\n         }\n         none { }\n     }\n@@ -772,7 +768,7 @@ fn sync_one(c: cargo, name: str, src: source) {\n             info(#fmt[\"no signature for source %s\", name]);\n         }\n     }\n-    run::run_program(\"cp\", [pkgfile, destpkgfile]);\n+    copy_warn(pkgfile, destpkgfile);\n }\n \n fn cmd_sync(c: cargo) {\n@@ -812,7 +808,7 @@ fn cmd_init(c: cargo) {\n     } else {\n         info(#fmt[\"signature ok for sources.json\"]);\n     }\n-    run::run_program(\"cp\", [srcfile, destsrcfile]);\n+    copy_warn(srcfile, destsrcfile);\n \n     info(#fmt[\"Initialized .cargo in %s\", c.root]);\n }\n@@ -853,6 +849,12 @@ fn cmd_search(c: cargo) {\n     info(#fmt[\"Found %d packages.\", n]);\n }\n \n+fn copy_warn(src: str, dest: str) {\n+  if !os::copy_file(src, dest) {\n+      warn(#fmt[\"Copying %s to %s failed\", src, dest]);\n+  }\n+}\n+\n fn cmd_usage() {\n     print(\"Usage: cargo <verb> [options] [args...]\" +\n           \""}]}