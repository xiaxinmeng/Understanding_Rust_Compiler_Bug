{"sha": "0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZTFiMmYwNGQ1YjFhNDI3Zjk2NmVkNzBiMDllOTVhZTg4Mjk0N2U=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-31T06:57:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-03T04:28:17Z"}, "message": "Statically link libuv to librustuv\n\nSimilarly to the previous commit, libuv is only used by this library, so there's\nno need for it to be linked into librustrt and available to all crates by\ndefault.", "tree": {"sha": "10de6b57b8afd21e38c64f0918a3a78a4da62303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10de6b57b8afd21e38c64f0918a3a78a4da62303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "html_url": "https://github.com/rust-lang/rust/commit/0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f31b079e5cf36ea7852032a14fc4e4650420ec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f31b079e5cf36ea7852032a14fc4e4650420ec3", "html_url": "https://github.com/rust-lang/rust/commit/7f31b079e5cf36ea7852032a14fc4e4650420ec3"}], "stats": {"total": 179, "additions": 52, "deletions": 127}, "files": [{"sha": "28969e4a52623d0847b1413c9d90cc01295cafa7", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "patch": "@@ -625,10 +625,10 @@ config.stamp: $(S)configure $(S)Makefile.in $(S)src/snapshots.txt\n # new definitions), make sure definitions always precede their uses,\n # especially for the dependency lists of recipes.\n \n+include $(CFG_SRC_DIR)mk/rt.mk\n include $(CFG_SRC_DIR)mk/target.mk\n include $(CFG_SRC_DIR)mk/host.mk\n include $(CFG_SRC_DIR)mk/stage0.mk\n-include $(CFG_SRC_DIR)mk/rt.mk\n include $(CFG_SRC_DIR)mk/rustllvm.mk\n include $(CFG_SRC_DIR)mk/tools.mk\n include $(CFG_SRC_DIR)mk/docs.mk"}, {"sha": "d51b09b56dafa4516f2b872c0349e6265fd45ab1", "filename": "mk/rt.mk", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "patch": "@@ -87,7 +87,6 @@ RUNTIME_CXXS_$(1)_$(2) := \\\n               rt/sync/rust_thread.cpp \\\n               rt/rust_builtin.cpp \\\n               rt/rust_upcall.cpp \\\n-              rt/rust_uv.cpp \\\n               rt/miniz.cpp \\\n               rt/rust_android_dummy.cpp \\\n               rt/rust_test_helpers.cpp\n@@ -101,8 +100,7 @@ RT_BUILD_DIR_$(1)_$(2) := $$(RT_OUTPUT_DIR_$(1))/stage$(2)\n \n RUNTIME_DEF_$(1)_$(2) := $$(RT_OUTPUT_DIR_$(1))/rustrt$$(CFG_DEF_SUFFIX_$(1))\n RUNTIME_INCS_$(1)_$(2) := -I $$(S)src/rt -I $$(S)src/rt/isaac -I $$(S)src/rt/uthash \\\n-                     -I $$(S)src/rt/arch/$$(HOST_$(1)) \\\n-                     -I $$(S)src/libuv/include\n+                     -I $$(S)src/rt/arch/$$(HOST_$(1))\n RUNTIME_OBJS_$(1)_$(2) := $$(RUNTIME_CXXS_$(1)_$(2):rt/%.cpp=$$(RT_BUILD_DIR_$(1)_$(2))/%.o) \\\n                      $$(RUNTIME_CS_$(1)_$(2):rt/%.c=$$(RT_BUILD_DIR_$(1)_$(2))/%.o) \\\n                      $$(RUNTIME_S_$(1)_$(2):rt/%.S=$$(RT_BUILD_DIR_$(1)_$(2))/%.o)\n@@ -131,10 +129,9 @@ $$(RT_BUILD_DIR_$(1)_$(2))/arch/$$(HOST_$(1))/libmorestack.a: $$(MORESTACK_OBJS_\n \t$$(Q)$(AR_$(1)) rcs $$@ $$^\n \n $$(RT_BUILD_DIR_$(1)_$(2))/$(CFG_RUNTIME_$(1)): $$(RUNTIME_OBJS_$(1)_$(2)) $$(MKFILE_DEPS) \\\n-                        $$(RUNTIME_DEF_$(1)_$(2)) $$(LIBUV_LIB_$(1))\n+                        $$(RUNTIME_DEF_$(1)_$(2))\n \t@$$(call E, link: $$@)\n \t$$(Q)$$(call CFG_LINK_CXX_$(1),$$@, $$(RUNTIME_OBJS_$(1)_$(2)) \\\n-\t    $$(LIBUV_LIB_$(1)) \\\n \t    $$(CFG_LIBUV_LINK_FLAGS_$(1)),$$(RUNTIME_DEF_$(1)_$(2)),$$(CFG_RUNTIME_$(1)))\n \n # These could go in rt.mk or rustllvm.mk, they're needed for both.\n@@ -234,6 +231,27 @@ $$(LIBUV_LIB_$(1)): $$(LIBUV_DEPS) $$(LIBUV_MAKEFILE_$(1))\n \t\tV=$$(VERBOSE)\n endif\n \n+# libuv support functionality (extra C/C++ that we need to use libuv)\n+\n+UV_SUPPORT_NAME_$(1) := $$(call CFG_STATIC_LIB_NAME_$(1),uv_support)\n+UV_SUPPORT_DIR_$(1) := $$(RT_OUTPUT_DIR_$(1))/uv_support\n+UV_SUPPORT_LIB_$(1) := $$(UV_SUPPORT_DIR_$(1))/$$(UV_SUPPORT_NAME_$(1))\n+UV_SUPPORT_CS_$(1) := rt/rust_uv.cpp\n+UV_SUPPORT_OBJS_$(1) := $$(UV_SUPPORT_CS_$(1):rt/%.cpp=$$(UV_SUPPORT_DIR_$(1))/%.o)\n+\n+$$(UV_SUPPORT_DIR_$(1))/%.o: rt/%.cpp\n+\t@$$(call E, compile: $$@)\n+\t@mkdir -p $$(@D)\n+\t$$(Q)$$(call CFG_COMPILE_CXX_$(1), $$@, \\\n+\t\t-I $$(S)src/libuv/include \\\n+                 $$(RUNTIME_CFLAGS_$(1))) $$<\n+\n+$$(UV_SUPPORT_LIB_$(1)): $$(UV_SUPPORT_OBJS_$(1))\n+\t@$$(call E, link: $$@)\n+\t$$(Q)$$(AR_$(1)) rcs $$@ $$^\n+\n+# sundown markdown library (used by librustdoc)\n+\n SUNDOWN_NAME_$(1) := $$(call CFG_STATIC_LIB_NAME_$(1),sundown)\n SUNDOWN_DIR_$(1) := $$(RT_OUTPUT_DIR_$(1))/sundown\n SUNDOWN_LIB_$(1) := $$(SUNDOWN_DIR_$(1))/$$(SUNDOWN_NAME_$(1))"}, {"sha": "f7d8ec83a5a17cc70775b9bd923d17de066aa14a", "filename": "mk/target.mk", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "patch": "@@ -77,10 +77,15 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTUV_$(2)): \\\n \t\t$$(LIBRUSTUV_CRATE) $$(LIBRUSTUV_INPUTS) \\\n \t        $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_STDLIB_$(2)) \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n+\t\t$$(LIBUV_LIB_$(2)) \\\n+\t\t$$(UV_SUPPORT_LIB_$(2)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTUV_GLOB_$(2)),$$(notdir $$@))\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) --out-dir $$(@D) $$< && touch $$@\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) \\\n+\t\t-L $$(UV_SUPPORT_DIR_$(2)) \\\n+\t\t-L $$(dir $$(LIBUV_LIB_$(2))) \\\n+\t\t--out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTUV_GLOB_$(2)),$$(notdir $$@))\n \n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)): \\\n@@ -117,13 +122,16 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)):\t\t\\\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) --out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(2)),$$(notdir $$@))\n \n+# NOTE: after the next snapshot remove these '-L' flags\n $$(TBIN$(1)_T_$(2)_H_$(3))/rustc$$(X_$(3)):\t\t\t\\\n \t\t$$(DRIVER_CRATE)\t\t\t\t\\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)) \\\n \t\t| $$(TBIN$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) --cfg rustc -o $$@ $$<\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) --cfg rustc -o $$@ $$< \\\n+\t\t-L $$(UV_SUPPORT_DIR_$(2)) \\\n+\t\t-L $$(dir $$(LIBUV_LIB_$(2)))\n ifdef CFG_ENABLE_PAX_FLAGS\n \t@$$(call E, apply PaX flags: $$@)\n \t@\"$(CFG_PAXCTL)\" -cm \"$$@\""}, {"sha": "eabb5f535e61d900ec9fd2dcff0aa3730f09cf1a", "filename": "mk/tests.mk", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "patch": "@@ -358,7 +358,9 @@ $(3)/stage$(1)/test/rustuvtest-$(2)$$(X_$(2)):\t\t\t\\\n \t\t$$(LIBRUSTUV_CRATE) $$(LIBRUSTUV_INPUTS)\t\\\n \t\t$$(STDTESTDEP_$(1)_$(2)_$(3))\n \t@$$(call E, compile_and_link: $$@)\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test \\\n+\t\t-L $$(UV_SUPPORT_DIR_$(2)) \\\n+\t\t-L $$(dir $$(LIBUV_LIB_$(2)))\n \n $(3)/stage$(1)/test/syntaxtest-$(2)$$(X_$(2)):\t\t\t\\\n \t\t$$(LIBSYNTAX_CRATE) $$(LIBSYNTAX_INPUTS)\t\\\n@@ -392,7 +394,8 @@ $(3)/stage$(1)/test/rustdoctest-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBSYNTAX_$(2)) \\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBRUSTC_$(2))\n \t@$$(call E, compile_and_link: $$@)\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test \\\n+\t\t-L $$(SUNDOWN_DIR_$(2))\n \n endef\n "}, {"sha": "e152d009050c858dbe74144e746842c9171b576c", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "patch": "@@ -304,8 +304,7 @@ pub mod llvm {\n     use super::debuginfo::*;\n     use std::libc::{c_char, c_int, c_longlong, c_ushort, c_uint, c_ulonglong};\n \n-    #[link_args = \"-Lrustllvm -lrustllvm\"]\n-    #[link_name = \"rustllvm\"]\n+    #[link_args = \"-lrustllvm\"]\n     extern {\n         /* Create and destroy contexts. */\n         pub fn LLVMContextCreate() -> ContextRef;"}, {"sha": "9e86ab11286e4d049f9690b97609aadbcb3dfe6c", "filename": "src/librustuv/uvll.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/src%2Flibrustuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/src%2Flibrustuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvll.rs?ref=0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "patch": "@@ -1003,6 +1003,8 @@ pub struct uv_err_data {\n     err_msg: ~str,\n }\n \n+// uv_support is the result of compiling rust_uv.cpp\n+#[link_args = \"-luv_support -luv\"]\n extern {\n \n     fn rust_uv_handle_size(type_: uintptr_t) -> size_t;\n@@ -1172,3 +1174,13 @@ extern {\n                             signum: c_int) -> c_int;\n     fn rust_uv_signal_stop(handle: *uv_signal_t) -> c_int;\n }\n+\n+// libuv requires various system libraries to successfully link on some\n+// platforms\n+#[cfg(target_os = \"linux\")]\n+#[link_args = \"-lpthread\"]\n+extern {}\n+\n+#[cfg(target_os = \"win32\")]\n+#[link_args = \"-lWs2_32 -lpsapi -liphlpapi\"]\n+extern {}"}, {"sha": "275966583d92ce45385aa287532cdb8cccf5e9c7", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/0ce1b2f04d5b1a427f966ed70b09e95ae882947e/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=0ce1b2f04d5b1a427f966ed70b09e95ae882947e", "patch": "@@ -26,92 +26,6 @@ rust_win32_rand_gen\n rust_win32_rand_release\n upcall_rust_personality\n upcall_reset_stack_limit\n-rust_uv_loop_new\n-rust_uv_loop_delete\n-rust_uv_walk\n-rust_uv_loop_set_data\n-rust_uv_run\n-rust_uv_close\n-rust_uv_async_send\n-rust_uv_async_init\n-rust_uv_timer_init\n-rust_uv_timer_start\n-rust_uv_timer_stop\n-rust_uv_tcp_init\n-rust_uv_buf_init\n-rust_uv_strerror\n-rust_uv_err_name\n-rust_uv_ip4_addr\n-rust_uv_ip4_name\n-rust_uv_ip6_addr\n-rust_uv_ip6_name\n-rust_uv_tcp_connect\n-rust_uv_tcp_bind\n-rust_uv_tcp_connect6\n-rust_uv_tcp_bind6\n-rust_uv_tcp_getsockname\n-rust_uv_tcp_nodelay\n-rust_uv_tcp_keepalive\n-rust_uv_tcp_simultaneous_accepts\n-rust_uv_udp_init\n-rust_uv_udp_bind\n-rust_uv_udp_bind6\n-rust_uv_udp_send\n-rust_uv_udp_send6\n-rust_uv_udp_recv_start\n-rust_uv_udp_recv_stop\n-rust_uv_get_udp_handle_from_send_req\n-rust_uv_udp_getsockname\n-rust_uv_udp_set_membership\n-rust_uv_udp_set_multicast_loop\n-rust_uv_udp_set_multicast_ttl\n-rust_uv_udp_set_ttl\n-rust_uv_udp_set_broadcast\n-rust_uv_is_ipv4_sockaddr\n-rust_uv_is_ipv6_sockaddr\n-rust_uv_malloc_sockaddr_storage\n-rust_uv_free_sockaddr_storage\n-rust_uv_listen\n-rust_uv_accept\n-rust_uv_write\n-rust_uv_read_start\n-rust_uv_read_stop\n-rust_uv_is_ipv4_addrinfo\n-rust_uv_is_ipv6_addrinfo\n-rust_uv_get_next_addrinfo\n-rust_uv_addrinfo_as_sockaddr_in\n-rust_uv_addrinfo_as_sockaddr_in6\n-rust_uv_get_stream_handle_from_connect_req\n-rust_uv_get_stream_handle_from_write_req\n-rust_uv_get_loop_for_uv_handle\n-rust_uv_get_data_for_uv_loop\n-rust_uv_set_data_for_uv_loop\n-rust_uv_get_data_for_uv_handle\n-rust_uv_set_data_for_uv_handle\n-rust_uv_get_data_for_req\n-rust_uv_set_data_for_req\n-rust_uv_get_base_from_buf\n-rust_uv_get_len_from_buf\n-rust_uv_getaddrinfo\n-rust_uv_freeaddrinfo\n-rust_uv_idle_init\n-rust_uv_idle_start\n-rust_uv_idle_stop\n-rust_uv_fs_open\n-rust_uv_fs_unlink\n-rust_uv_fs_write\n-rust_uv_fs_read\n-rust_uv_fs_close\n-rust_uv_get_result_from_fs_req\n-rust_uv_get_ptr_from_fs_req\n-rust_uv_get_loop_from_fs_req\n-rust_uv_fs_stat\n-rust_uv_fs_fstat\n-rust_uv_fs_req_cleanup\n-rust_uv_populate_uv_stat\n-rust_uv_fs_mkdir\n-rust_uv_fs_rmdir\n-rust_uv_fs_readdir\n rust_dbg_lock_create\n rust_dbg_lock_destroy\n rust_dbg_lock_lock\n@@ -128,9 +42,6 @@ rust_signal_little_lock\n rust_wait_little_lock\n tdefl_compress_mem_to_heap\n tinfl_decompress_mem_to_heap\n-rust_uv_ip4_port\n-rust_uv_ip6_port\n-rust_uv_tcp_getpeername\n rust_raw_thread_start\n rust_raw_thread_join\n rust_raw_thread_delete\n@@ -150,14 +61,6 @@ rust_dbg_extern_return_TwoU32s\n rust_dbg_extern_return_TwoU64s\n rust_dbg_extern_identity_double\n rust_dbg_extern_identity_u8\n-rust_uv_handle_size\n-rust_uv_req_size\n-rust_uv_handle_type_max\n-rust_uv_req_type_max\n-rust_uv_ip4_addrp\n-rust_uv_ip6_addrp\n-rust_uv_free_ip4_addr\n-rust_uv_free_ip6_addr\n rust_initialize_rt_tls_key\n rust_dbg_next_port\n rust_try\n@@ -172,23 +75,5 @@ rust_get_global_args_ptr\n rust_take_global_args_lock\n rust_drop_global_args_lock\n rust_get_test_int\n-rust_uv_get_loop_from_getaddrinfo_req\n-rust_uv_spawn\n-rust_uv_process_kill\n-rust_set_stdio_container_flags\n-rust_set_stdio_container_fd\n-rust_set_stdio_container_stream\n-rust_uv_process_pid\n-rust_uv_pipe_init\n-rust_uv_signal_init\n-rust_uv_signal_start\n-rust_uv_signal_stop\n rust_take_dlerror_lock\n rust_drop_dlerror_lock\n-rust_uv_pipe_open\n-rust_uv_pipe_bind\n-rust_uv_pipe_connect\n-rust_uv_tty_init\n-rust_uv_tty_set_mode\n-rust_uv_tty_get_winsize\n-rust_uv_guess_handle"}]}