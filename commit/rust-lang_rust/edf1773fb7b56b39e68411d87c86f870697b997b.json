{"sha": "edf1773fb7b56b39e68411d87c86f870697b997b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZjE3NzNmYjdiNTZiMzllNjg0MTFkODdjODZmODcwNjk3Yjk5N2I=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-05-18T15:03:00Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-05-18T15:03:00Z"}, "message": "Be smart about span of parenthesized expression in macro", "tree": {"sha": "52cdb260e41885dbce7ca887d926f1d99b308136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52cdb260e41885dbce7ca887d926f1d99b308136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edf1773fb7b56b39e68411d87c86f870697b997b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edf1773fb7b56b39e68411d87c86f870697b997b", "html_url": "https://github.com/rust-lang/rust/commit/edf1773fb7b56b39e68411d87c86f870697b997b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edf1773fb7b56b39e68411d87c86f870697b997b/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdbf01570fb8947cecb6c3e7dc16ecaf104b51b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbf01570fb8947cecb6c3e7dc16ecaf104b51b6", "html_url": "https://github.com/rust-lang/rust/commit/cdbf01570fb8947cecb6c3e7dc16ecaf104b51b6"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "5b539439435e7e191abada50897d1daae509a62c", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/edf1773fb7b56b39e68411d87c86f870697b997b/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf1773fb7b56b39e68411d87c86f870697b997b/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=edf1773fb7b56b39e68411d87c86f870697b997b", "patch": "@@ -1261,7 +1261,10 @@ impl<'a> LoweringContext<'a> {\n                 }\n                 ExprKind::Paren(ref ex) => {\n                     return self.lower_expr(ex).map(|mut ex| {\n-                        ex.span = e.span;\n+                        // include parens in span, but only if it is a super-span.\n+                        if e.span.contains(ex.span) {\n+                            ex.span = e.span;\n+                        }\n                         // merge attributes into the inner expression.\n                         ex.attrs.update(|attrs| {\n                             attrs.prepend(e.attrs.clone())"}, {"sha": "8ed5050f3de3c28a0386cd1ff82c4b518c40b2a5", "filename": "src/test/compile-fail/paren-span.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/edf1773fb7b56b39e68411d87c86f870697b997b/src%2Ftest%2Fcompile-fail%2Fparen-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf1773fb7b56b39e68411d87c86f870697b997b/src%2Ftest%2Fcompile-fail%2Fparen-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fparen-span.rs?ref=edf1773fb7b56b39e68411d87c86f870697b997b", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Be smart about span of parenthesized expression in macro.\n+\n+macro_rules! paren {\n+    ($e:expr) => (($e))\n+    //            ^^^^ do not highlight here\n+}\n+\n+mod m {\n+    pub struct S {\n+        x: i32\n+    }\n+    pub fn make() -> S {\n+        S { x: 0 }\n+    }\n+}\n+\n+fn main() {\n+    let s = m::make();\n+    paren!(s.x); //~ ERROR field `x` of struct `m::S` is private\n+    //     ^^^ highlight here\n+}"}]}