{"sha": "d56838781790c9d3cc1051f54fcbdb809d5348eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NjgzODc4MTc5MGM5ZDNjYzEwNTFmNTRmY2JkYjgwOWQ1MzQ4ZWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-23T22:22:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-23T22:22:39Z"}, "message": "Auto merge of #7396 - ranweiler:zero-offset, r=Manishearth\n\nFix invocation of `zst_offset` lint\n\nThe `zst_offset` lint was broken by a refactoring regression in 21083875d211c29fcfa4a21fcd66d4601d2b618b. In the invocation of the `zst_offset` check [here](https://github.com/rust-lang/rust-clippy/commit/21083875d211c29fcfa4a21fcd66d4601d2b618b#diff-7f73f6fe28c04b654223c09c42fe02937d2351fc58a91d21ab812aaf6f9b185dR1927), we shadow the already-destructured receiver `recv`, and accidentally pass the first argument of the method as if it were the receiver.\n\nThis was not caught because the UI test expectation was never correct (a bad cast obscured the actual test result).\n\nThis PR:\n- Fixes the existing test expectation\n- Tests both `const` and `mut` raw pointers\n- Passes the actual receiver to the lint's implementation\n\nFixes #7395.\n\nchangelog: Fix [`zst_offset`] invocation and test", "tree": {"sha": "b6ceb2ebc04ae84b8de9e94ef60d834d53fb4168", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6ceb2ebc04ae84b8de9e94ef60d834d53fb4168"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d56838781790c9d3cc1051f54fcbdb809d5348eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d56838781790c9d3cc1051f54fcbdb809d5348eb", "html_url": "https://github.com/rust-lang/rust/commit/d56838781790c9d3cc1051f54fcbdb809d5348eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d56838781790c9d3cc1051f54fcbdb809d5348eb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "417401f849faacfcbc9151a7ec816eefd9441109", "url": "https://api.github.com/repos/rust-lang/rust/commits/417401f849faacfcbc9151a7ec816eefd9441109", "html_url": "https://github.com/rust-lang/rust/commit/417401f849faacfcbc9151a7ec816eefd9441109"}, {"sha": "642239c857124b109f43f7223baddbe8694c84ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/642239c857124b109f43f7223baddbe8694c84ee", "html_url": "https://github.com/rust-lang/rust/commit/642239c857124b109f43f7223baddbe8694c84ee"}], "stats": {"total": 77, "additions": 63, "deletions": 14}, "files": [{"sha": "21585543b0ac52f2353d2c35a648c2611ea62965", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d56838781790c9d3cc1051f54fcbdb809d5348eb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d56838781790c9d3cc1051f54fcbdb809d5348eb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d56838781790c9d3cc1051f54fcbdb809d5348eb", "patch": "@@ -2036,7 +2036,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n fn check_methods<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, msrv: Option<&RustcVersion>) {\n     if let Some((name, [recv, args @ ..], span)) = method_call!(expr) {\n         match (name, args) {\n-            (\"add\" | \"offset\" | \"sub\" | \"wrapping_offset\" | \"wrapping_add\" | \"wrapping_sub\", [recv, _]) => {\n+            (\"add\" | \"offset\" | \"sub\" | \"wrapping_offset\" | \"wrapping_add\" | \"wrapping_sub\", [_arg]) => {\n                 zst_offset::check(cx, expr, recv);\n             },\n             (\"and_then\", [arg]) => {"}, {"sha": "6c190a4c86c48a3175f5b94a0c22312757de088d", "filename": "tests/ui/zero_offset.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d56838781790c9d3cc1051f54fcbdb809d5348eb/tests%2Fui%2Fzero_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d56838781790c9d3cc1051f54fcbdb809d5348eb/tests%2Fui%2Fzero_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_offset.rs?ref=d56838781790c9d3cc1051f54fcbdb809d5348eb", "patch": "@@ -1,12 +1,18 @@\n fn main() {\n     unsafe {\n-        let x = &() as *const ();\n-        x.offset(0);\n-        x.wrapping_add(0);\n-        x.sub(0);\n-        x.wrapping_sub(0);\n+        let m = &mut () as *mut ();\n+        m.offset(0);\n+        m.wrapping_add(0);\n+        m.sub(0);\n+        m.wrapping_sub(0);\n \n-        let y = &1 as *const u8;\n-        y.offset(0);\n+        let c = &() as *const ();\n+        c.offset(0);\n+        c.wrapping_add(0);\n+        c.sub(0);\n+        c.wrapping_sub(0);\n+\n+        let sized = &1 as *const i32;\n+        sized.offset(0);\n     }\n }"}, {"sha": "b12c8e9a73c6dab3692dc2bc97cbce8ea81b3bc2", "filename": "tests/ui/zero_offset.stderr", "status": "modified", "additions": 49, "deletions": 6, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/d56838781790c9d3cc1051f54fcbdb809d5348eb/tests%2Fui%2Fzero_offset.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d56838781790c9d3cc1051f54fcbdb809d5348eb/tests%2Fui%2Fzero_offset.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_offset.stderr?ref=d56838781790c9d3cc1051f54fcbdb809d5348eb", "patch": "@@ -1,9 +1,52 @@\n-error[E0606]: casting `&i32` as `*const u8` is invalid\n-  --> $DIR/zero_offset.rs:9:17\n+error: offset calculation on zero-sized value\n+  --> $DIR/zero_offset.rs:4:9\n    |\n-LL |         let y = &1 as *const u8;\n-   |                 ^^^^^^^^^^^^^^^\n+LL |         m.offset(0);\n+   |         ^^^^^^^^^^^\n+   |\n+   = note: `#[deny(clippy::zst_offset)]` on by default\n+\n+error: offset calculation on zero-sized value\n+  --> $DIR/zero_offset.rs:5:9\n+   |\n+LL |         m.wrapping_add(0);\n+   |         ^^^^^^^^^^^^^^^^^\n+\n+error: offset calculation on zero-sized value\n+  --> $DIR/zero_offset.rs:6:9\n+   |\n+LL |         m.sub(0);\n+   |         ^^^^^^^^\n+\n+error: offset calculation on zero-sized value\n+  --> $DIR/zero_offset.rs:7:9\n+   |\n+LL |         m.wrapping_sub(0);\n+   |         ^^^^^^^^^^^^^^^^^\n+\n+error: offset calculation on zero-sized value\n+  --> $DIR/zero_offset.rs:10:9\n+   |\n+LL |         c.offset(0);\n+   |         ^^^^^^^^^^^\n+\n+error: offset calculation on zero-sized value\n+  --> $DIR/zero_offset.rs:11:9\n+   |\n+LL |         c.wrapping_add(0);\n+   |         ^^^^^^^^^^^^^^^^^\n+\n+error: offset calculation on zero-sized value\n+  --> $DIR/zero_offset.rs:12:9\n+   |\n+LL |         c.sub(0);\n+   |         ^^^^^^^^\n+\n+error: offset calculation on zero-sized value\n+  --> $DIR/zero_offset.rs:13:9\n+   |\n+LL |         c.wrapping_sub(0);\n+   |         ^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to 8 previous errors\n \n-For more information about this error, try `rustc --explain E0606`."}]}