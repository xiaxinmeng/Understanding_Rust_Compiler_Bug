{"sha": "73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczODY3MzY1YThkYmViNWEyYWQ4YzJkZTYxYjRmNzRmYWViMzRlY2U=", "commit": {"author": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-04T21:33:10Z"}, "committer": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-04T21:47:00Z"}, "message": "Suggest to add missing feature when using gated const features", "tree": {"sha": "ba953ad772423dc09d7554d6a1e53fd14150f865", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba953ad772423dc09d7554d6a1e53fd14150f865"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "html_url": "https://github.com/rust-lang/rust/commit/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/comments", "author": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d626e4dadc37d7027d65f087da0ad1ddb460959f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d626e4dadc37d7027d65f087da0ad1ddb460959f", "html_url": "https://github.com/rust-lang/rust/commit/d626e4dadc37d7027d65f087da0ad1ddb460959f"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "bb6e3681cc3c12d9ae81486c56d45ac3931a324b", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -39,6 +39,9 @@ pub trait NonConstOp: std::fmt::Debug {\n             \"{} contains unimplemented expression type\",\n             ccx.const_kind()\n         );\n+        if let Some(feat) = Self::feature_gate() {\n+            err.help(&format!(\"add `#![feature({})]` to the crate attributes to enable\", feat));\n+        }\n         if ccx.tcx.sess.teach(&err.get_code().unwrap()) {\n             err.note(\n                 \"A function call isn't allowed in the const's initialization expression \\"}, {"sha": "6b5a739899cacb12885d1cdafb9f73e0db23eed6", "filename": "src/test/ui/check-static-values-constraints.stderr", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -18,6 +18,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL | static STATIC11: Box<MyOwned> = box MyOwned;\n    |                                     ^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n   --> $DIR/check-static-values-constraints.rs:90:32\n@@ -36,6 +38,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL |     box MyOwned,\n    |         ^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0010]: allocations are not allowed in statics\n   --> $DIR/check-static-values-constraints.rs:97:5\n@@ -48,6 +52,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL |     box MyOwned,\n    |         ^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0010]: allocations are not allowed in statics\n   --> $DIR/check-static-values-constraints.rs:102:6\n@@ -60,6 +66,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL |     &box MyOwned,\n    |          ^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0010]: allocations are not allowed in statics\n   --> $DIR/check-static-values-constraints.rs:104:6\n@@ -72,6 +80,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL |     &box MyOwned,\n    |          ^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0010]: allocations are not allowed in statics\n   --> $DIR/check-static-values-constraints.rs:111:5\n@@ -84,6 +94,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL |     box 3;\n    |         ^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0507]: cannot move out of static item `x`\n   --> $DIR/check-static-values-constraints.rs:116:45\n@@ -105,6 +117,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL |     let y = { static x: Box<isize> = box 3; x };\n    |                                          ^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to 17 previous errors\n "}, {"sha": "89fafbbe6f0444324a7df4afa9c71e756b2c54b3", "filename": "src/test/ui/const-suggest-feature.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconst-suggest-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconst-suggest-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-suggest-feature.rs?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -0,0 +1,9 @@\n+const WRITE: () = unsafe {\n+    *std::ptr::null_mut() = 0;\n+    //~^ ERROR dereferencing raw pointers in constants is unstable\n+    //~| HELP add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n+    //~| ERROR constant contains unimplemented expression type\n+    //~| HELP add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+};\n+\n+fn main() {}"}, {"sha": "6b91df6b42d91b71985c4c03708634130c30908c", "filename": "src/test/ui/const-suggest-feature.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconst-suggest-feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconst-suggest-feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-suggest-feature.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -0,0 +1,21 @@\n+error[E0658]: dereferencing raw pointers in constants is unstable\n+  --> $DIR/const-suggest-feature.rs:2:5\n+   |\n+LL |     *std::ptr::null_mut() = 0;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #51911 <https://github.com/rust-lang/rust/issues/51911> for more information\n+   = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n+\n+error[E0019]: constant contains unimplemented expression type\n+  --> $DIR/const-suggest-feature.rs:2:5\n+   |\n+LL |     *std::ptr::null_mut() = 0;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0019, E0658.\n+For more information about an error, try `rustc --explain E0019`."}, {"sha": "14dcc074639e536d743efbda6f4bf63398f1c95e", "filename": "src/test/ui/consts/const-eval/assign-to-static-within-other-static-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static-2.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -3,6 +3,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL |     *FOO.0.get() = 5;\n    |     ^^^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "44ae1ecf04718383f918d0cd5cfb274104b7fbcd", "filename": "src/test/ui/consts/const-eval/mod-static-with-const-fn.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmod-static-with-const-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmod-static-with-const-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmod-static-with-const-fn.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -3,6 +3,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL |     *FOO.0.get() = 5;\n    |     ^^^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n   --> $DIR/mod-static-with-const-fn.rs:21:5"}, {"sha": "62fd04ea522c3326e626b90b399a248e9b1b4f3d", "filename": "src/test/ui/consts/const_let_assign3.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -3,6 +3,8 @@ error[E0019]: constant function contains unimplemented expression type\n    |\n LL |         self.state = x;\n    |         ^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: references in constants may only refer to immutable values\n   --> $DIR/const_let_assign3.rs:16:5\n@@ -27,6 +29,8 @@ error[E0019]: constant contains unimplemented expression type\n    |\n LL |     *y = 42;\n    |     ^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to 4 previous errors\n "}, {"sha": "cfa48d947c992894f07d487676b5eebea57a122f", "filename": "src/test/ui/consts/projection_qualif.stock.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -21,6 +21,8 @@ error[E0019]: constant contains unimplemented expression type\n    |\n LL |         unsafe { *b = 5; }\n    |                  ^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "cc169351bf268c14dd63c5cc689a65808f02c576", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.stock.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -12,6 +12,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c15ab5c655a461208dcfe819ac86f5abb1f0c429", "filename": "src/test/ui/error-codes/E0010-teach.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -12,6 +12,7 @@ error[E0019]: constant contains unimplemented expression type\n LL | const CON : Box<i32> = box 0;\n    |                            ^\n    |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n    = note: A function call isn't allowed in the const's initialization expression because the expression's value must be known at compile-time.\n    = note: Remember: you can't use a function call inside a const's initialization expression! However, you can use it anywhere else.\n "}, {"sha": "f49fb9c46326b308b7ed5495105fdf7b1d6bf8b7", "filename": "src/test/ui/error-codes/E0010.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Ferror-codes%2FE0010.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Ferror-codes%2FE0010.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0010.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -9,6 +9,8 @@ error[E0019]: constant contains unimplemented expression type\n    |\n LL | const CON : Box<i32> = box 0;\n    |                            ^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f959ad0d00887af3de083347a7084a513c472d7c", "filename": "src/test/ui/error-codes/E0017.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -12,6 +12,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |                                       ^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: references in statics may only refer to immutable values\n   --> $DIR/E0017.rs:6:39"}, {"sha": "8bdfbac36816b9869718c64df2ef1a080d436ac3", "filename": "src/test/ui/error-codes/E0388.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -12,6 +12,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |                                       ^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: references in statics may only refer to immutable values\n   --> $DIR/E0388.rs:5:39"}, {"sha": "efff2c24525e80eb16a2a931c621abfb8372ec81", "filename": "src/test/ui/issues/issue-7364.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fissues%2Fissue-7364.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fissues%2Fissue-7364.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7364.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -9,6 +9,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL | static boxed: Box<RefCell<isize>> = box RefCell::new(0);\n    |                                         ^^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0277]: `std::cell::RefCell<isize>` cannot be shared between threads safely\n   --> $DIR/issue-7364.rs:6:1"}, {"sha": "a618b49d1089efd70f462d6c8bc2d74b75547c61", "filename": "src/test/ui/static/static-mut-not-constant.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73867365a8dbeb5a2ad8c2de61b4f74faeb34ece/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.stderr?ref=73867365a8dbeb5a2ad8c2de61b4f74faeb34ece", "patch": "@@ -9,6 +9,8 @@ error[E0019]: static contains unimplemented expression type\n    |\n LL | static mut a: Box<isize> = box 3;\n    |                                ^\n+   |\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}]}