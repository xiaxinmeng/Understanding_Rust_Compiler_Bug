{"sha": "beb49bad266e3a19a08fb37364aa7b868a5a8c94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYjQ5YmFkMjY2ZTNhMTlhMDhmYjM3MzY0YWE3Yjg2OGE1YThjOTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-11T09:34:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-11T09:34:44Z"}, "message": "Auto merge of #6650 - daxpedda:cargo-common-metadata-publish, r=flip1995\n\nFix cargo_common_metadata warning on `publish = false`.\n\nI believe `cargo_common_metadata` shouldn't trigger when `publish = false`, not sure if everybody agrees.\nMade some tests to handle all edge-cases.\n\nFixes #6649.\n\nchangelog: [`cargo_common_metadata`](https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata): No longer lints if [`publish = false`](https://doc.rust-lang.org/cargo/reference/manifest.html#the-publish-field) is defined in the manifest", "tree": {"sha": "c1b45767ad0525b3bba119b2e5c4accdf140b3b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1b45767ad0525b3bba119b2e5c4accdf140b3b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beb49bad266e3a19a08fb37364aa7b868a5a8c94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beb49bad266e3a19a08fb37364aa7b868a5a8c94", "html_url": "https://github.com/rust-lang/rust/commit/beb49bad266e3a19a08fb37364aa7b868a5a8c94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beb49bad266e3a19a08fb37364aa7b868a5a8c94/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3784cdf98ed7b23e698e2aa63f08bb05937b68b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3784cdf98ed7b23e698e2aa63f08bb05937b68b1", "html_url": "https://github.com/rust-lang/rust/commit/3784cdf98ed7b23e698e2aa63f08bb05937b68b1"}, {"sha": "fd8b5fa1aa614dcfd21471ab5a9a56c7873ce14a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8b5fa1aa614dcfd21471ab5a9a56c7873ce14a", "html_url": "https://github.com/rust-lang/rust/commit/fd8b5fa1aa614dcfd21471ab5a9a56c7873ce14a"}], "stats": {"total": 163, "additions": 132, "deletions": 31}, "files": [{"sha": "cc2869ab495c8ab9245d66d9503ffdbc0f44a94e", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 46, "deletions": 29, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -5,7 +5,7 @@ use std::path::PathBuf;\n use crate::utils::{run_lints, span_lint};\n use rustc_hir::{hir_id::CRATE_HIR_ID, Crate};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::DUMMY_SP;\n \n declare_clippy_lint! {\n@@ -51,6 +51,21 @@ declare_clippy_lint! {\n     \"common metadata is defined in `Cargo.toml`\"\n }\n \n+#[derive(Copy, Clone, Debug)]\n+pub struct CargoCommonMetadata {\n+    ignore_publish: bool,\n+}\n+\n+impl CargoCommonMetadata {\n+    pub fn new(ignore_publish: bool) -> Self {\n+        Self { ignore_publish }\n+    }\n+}\n+\n+impl_lint_pass!(CargoCommonMetadata => [\n+    CARGO_COMMON_METADATA\n+]);\n+\n fn missing_warning(cx: &LateContext<'_>, package: &cargo_metadata::Package, field: &str) {\n     let message = format!(\"package `{}` is missing `{}` metadata\", package.name, field);\n     span_lint(cx, CARGO_COMMON_METADATA, DUMMY_SP, &message);\n@@ -69,8 +84,6 @@ fn is_empty_vec(value: &[String]) -> bool {\n     value.iter().all(String::is_empty)\n }\n \n-declare_lint_pass!(CargoCommonMetadata => [CARGO_COMMON_METADATA]);\n-\n impl LateLintPass<'_> for CargoCommonMetadata {\n     fn check_crate(&mut self, cx: &LateContext<'_>, _: &Crate<'_>) {\n         if !run_lints(cx, &[CARGO_COMMON_METADATA], CRATE_HIR_ID) {\n@@ -80,32 +93,36 @@ impl LateLintPass<'_> for CargoCommonMetadata {\n         let metadata = unwrap_cargo_metadata!(cx, CARGO_COMMON_METADATA, false);\n \n         for package in metadata.packages {\n-            if is_empty_vec(&package.authors) {\n-                missing_warning(cx, &package, \"package.authors\");\n-            }\n-\n-            if is_empty_str(&package.description) {\n-                missing_warning(cx, &package, \"package.description\");\n-            }\n-\n-            if is_empty_str(&package.license) && is_empty_path(&package.license_file) {\n-                missing_warning(cx, &package, \"either package.license or package.license_file\");\n-            }\n-\n-            if is_empty_str(&package.repository) {\n-                missing_warning(cx, &package, \"package.repository\");\n-            }\n-\n-            if is_empty_path(&package.readme) {\n-                missing_warning(cx, &package, \"package.readme\");\n-            }\n-\n-            if is_empty_vec(&package.keywords) {\n-                missing_warning(cx, &package, \"package.keywords\");\n-            }\n-\n-            if is_empty_vec(&package.categories) {\n-                missing_warning(cx, &package, \"package.categories\");\n+            // only run the lint if publish is `None` (`publish = true` or skipped entirely)\n+            // or if the vector isn't empty (`publish = [\"something\"]`)\n+            if package.publish.as_ref().filter(|publish| publish.is_empty()).is_none() || self.ignore_publish {\n+                if is_empty_vec(&package.authors) {\n+                    missing_warning(cx, &package, \"package.authors\");\n+                }\n+\n+                if is_empty_str(&package.description) {\n+                    missing_warning(cx, &package, \"package.description\");\n+                }\n+\n+                if is_empty_str(&package.license) && is_empty_path(&package.license_file) {\n+                    missing_warning(cx, &package, \"either package.license or package.license_file\");\n+                }\n+\n+                if is_empty_str(&package.repository) {\n+                    missing_warning(cx, &package, \"package.repository\");\n+                }\n+\n+                if is_empty_path(&package.readme) {\n+                    missing_warning(cx, &package, \"package.readme\");\n+                }\n+\n+                if is_empty_vec(&package.keywords) {\n+                    missing_warning(cx, &package, \"package.keywords\");\n+                }\n+\n+                if is_empty_vec(&package.categories) {\n+                    missing_warning(cx, &package, \"package.categories\");\n+                }\n             }\n         }\n     }"}, {"sha": "d96911fac1a075cc023cbd1408138efbeb85dda1", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -1184,7 +1184,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| box redundant_else::RedundantElse);\n     store.register_late_pass(|| box create_dir::CreateDir);\n     store.register_early_pass(|| box needless_arbitrary_self_type::NeedlessArbitrarySelfType);\n-    store.register_late_pass(|| box cargo_common_metadata::CargoCommonMetadata);\n+    let cargo_ignore_publish = conf.cargo_ignore_publish;\n+    store.register_late_pass(move || box cargo_common_metadata::CargoCommonMetadata::new(cargo_ignore_publish));\n     store.register_late_pass(|| box multiple_crate_versions::MultipleCrateVersions);\n     store.register_late_pass(|| box wildcard_dependencies::WildcardDependencies);\n     let literal_representation_lint_fraction_readability = conf.unreadable_literal_lint_fractions;"}, {"sha": "7d7b35c21680d907bf4b772570b2126e7778679d", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -173,6 +173,8 @@ define_Conf! {\n     (disallowed_methods, \"disallowed_methods\": Vec<String>, Vec::<String>::new()),\n     /// Lint: UNREADABLE_LITERAL. Should the fraction of a decimal be linted to include separators.\n     (unreadable_literal_lint_fractions, \"unreadable_literal_lint_fractions\": bool, true),\n+    /// Lint: _CARGO_COMMON_METADATA. For internal testing only, ignores the current `publish` settings in the Cargo manifest.\n+    (cargo_ignore_publish, \"cargo_ignore_publish\": bool, false),\n }\n \n impl Default for Conf {"}, {"sha": "c0b40add1096d0654033524626bca9d687e349e5", "filename": "tests/compile-test.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -214,6 +214,7 @@ fn run_ui_cargo(config: &mut compiletest::Config) {\n                         Some(\"main.rs\") => {},\n                         _ => continue,\n                     }\n+                    set_var(\"CLIPPY_CONF_DIR\", case.path());\n                     let paths = compiletest::common::TestPaths {\n                         file: file_path,\n                         base: config.src_base.clone(),\n@@ -241,9 +242,11 @@ fn run_ui_cargo(config: &mut compiletest::Config) {\n     let tests = compiletest::make_tests(&config);\n \n     let current_dir = env::current_dir().unwrap();\n+    let conf_dir = var(\"CLIPPY_CONF_DIR\").unwrap_or_default();\n     let filter = env::var(\"TESTNAME\").ok();\n     let res = run_tests(&config, &filter, tests);\n     env::set_current_dir(current_dir).unwrap();\n+    set_var(\"CLIPPY_CONF_DIR\", conf_dir);\n \n     match res {\n         Ok(true) => {},"}, {"sha": "de4f04b24fc89cad7244c5b2b857a2a3ee630edb", "filename": "tests/ui-cargo/cargo_common_metadata/fail/clippy.toml", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail%2Fclippy.toml?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1 @@\n+cargo-ignore-publish = true"}, {"sha": "7595696353cd44f2d710ce5dbb454f60460d7024", "filename": "tests/ui-cargo/cargo_common_metadata/fail_publish/Cargo.toml", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2FCargo.toml?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,6 @@\n+[package]\n+name = \"cargo_common_metadata\"\n+version = \"0.1.0\"\n+publish = [\"some-registry-name\"]\n+\n+[workspace]"}, {"sha": "27841e18aa9ef830cb1daf4080d0acd19a3b3c97", "filename": "tests/ui-cargo/cargo_common_metadata/fail_publish/src/main.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.rs?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: --crate-name=cargo_common_metadata\n+#![warn(clippy::cargo_common_metadata)]\n+\n+fn main() {}"}, {"sha": "c8ae6c820df9de4de3f3561451d27e97c9416563", "filename": "tests/ui-cargo/cargo_common_metadata/fail_publish/src/main.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish%2Fsrc%2Fmain.stderr?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,18 @@\n+error: package `cargo_common_metadata` is missing `package.authors` metadata\n+   |\n+   = note: `-D clippy::cargo-common-metadata` implied by `-D warnings`\n+\n+error: package `cargo_common_metadata` is missing `package.description` metadata\n+\n+error: package `cargo_common_metadata` is missing `either package.license or package.license_file` metadata\n+\n+error: package `cargo_common_metadata` is missing `package.repository` metadata\n+\n+error: package `cargo_common_metadata` is missing `package.readme` metadata\n+\n+error: package `cargo_common_metadata` is missing `package.keywords` metadata\n+\n+error: package `cargo_common_metadata` is missing `package.categories` metadata\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "7e5b88383ccc31acf2410e68407b087043c2ac17", "filename": "tests/ui-cargo/cargo_common_metadata/fail_publish_true/Cargo.toml", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2FCargo.toml?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,6 @@\n+[package]\n+name = \"cargo_common_metadata\"\n+version = \"0.1.0\"\n+publish = true\n+\n+[workspace]"}, {"sha": "27841e18aa9ef830cb1daf4080d0acd19a3b3c97", "filename": "tests/ui-cargo/cargo_common_metadata/fail_publish_true/src/main.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.rs?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: --crate-name=cargo_common_metadata\n+#![warn(clippy::cargo_common_metadata)]\n+\n+fn main() {}"}, {"sha": "c8ae6c820df9de4de3f3561451d27e97c9416563", "filename": "tests/ui-cargo/cargo_common_metadata/fail_publish_true/src/main.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Ffail_publish_true%2Fsrc%2Fmain.stderr?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,18 @@\n+error: package `cargo_common_metadata` is missing `package.authors` metadata\n+   |\n+   = note: `-D clippy::cargo-common-metadata` implied by `-D warnings`\n+\n+error: package `cargo_common_metadata` is missing `package.description` metadata\n+\n+error: package `cargo_common_metadata` is missing `either package.license or package.license_file` metadata\n+\n+error: package `cargo_common_metadata` is missing `package.repository` metadata\n+\n+error: package `cargo_common_metadata` is missing `package.readme` metadata\n+\n+error: package `cargo_common_metadata` is missing `package.keywords` metadata\n+\n+error: package `cargo_common_metadata` is missing `package.categories` metadata\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "de4f04b24fc89cad7244c5b2b857a2a3ee630edb", "filename": "tests/ui-cargo/cargo_common_metadata/pass/clippy.toml", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass%2Fclippy.toml?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1 @@\n+cargo-ignore-publish = true"}, {"sha": "0a879c99b5bd8a0cb50819c6412b3c0e37173448", "filename": "tests/ui-cargo/cargo_common_metadata/pass_publish_empty/Cargo.toml", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2FCargo.toml?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,6 @@\n+[package]\n+name = \"cargo_common_metadata\"\n+version = \"0.1.0\"\n+publish = []\n+\n+[workspace]"}, {"sha": "27841e18aa9ef830cb1daf4080d0acd19a3b3c97", "filename": "tests/ui-cargo/cargo_common_metadata/pass_publish_empty/src/main.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_empty%2Fsrc%2Fmain.rs?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: --crate-name=cargo_common_metadata\n+#![warn(clippy::cargo_common_metadata)]\n+\n+fn main() {}"}, {"sha": "ae0a603299629613cd51e8bf506f209cd5a10e1b", "filename": "tests/ui-cargo/cargo_common_metadata/pass_publish_false/Cargo.toml", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2FCargo.toml?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,6 @@\n+[package]\n+name = \"cargo_common_metadata\"\n+version = \"0.1.0\"\n+publish = false\n+\n+[workspace]"}, {"sha": "27841e18aa9ef830cb1daf4080d0acd19a3b3c97", "filename": "tests/ui-cargo/cargo_common_metadata/pass_publish_false/src/main.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fcargo_common_metadata%2Fpass_publish_false%2Fsrc%2Fmain.rs?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: --crate-name=cargo_common_metadata\n+#![warn(clippy::cargo_common_metadata)]\n+\n+fn main() {}"}, {"sha": "7ccd0b54845d197abe4385b28a74cc84a444ae34", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beb49bad266e3a19a08fb37364aa7b868a5a8c94/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=beb49bad266e3a19a08fb37364aa7b868a5a8c94", "patch": "@@ -1,4 +1,4 @@\n-error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown field `foobar`, expected one of `msrv`, `blacklisted-names`, `cognitive-complexity-threshold`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `literal-representation-threshold`, `trivial-copy-size-limit`, `pass-by-value-size-limit`, `too-many-lines-threshold`, `array-size-threshold`, `vec-box-size-threshold`, `max-trait-bounds`, `max-struct-bools`, `max-fn-params-bools`, `warn-on-all-wildcard-imports`, `disallowed-methods`, `unreadable-literal-lint-fractions`, `third-party` at line 5 column 1\n+error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown field `foobar`, expected one of `msrv`, `blacklisted-names`, `cognitive-complexity-threshold`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `literal-representation-threshold`, `trivial-copy-size-limit`, `pass-by-value-size-limit`, `too-many-lines-threshold`, `array-size-threshold`, `vec-box-size-threshold`, `max-trait-bounds`, `max-struct-bools`, `max-fn-params-bools`, `warn-on-all-wildcard-imports`, `disallowed-methods`, `unreadable-literal-lint-fractions`, `cargo-ignore-publish`, `third-party` at line 5 column 1\n \n error: aborting due to previous error\n "}]}