{"sha": "cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYzNmZWU5NTI1ODlkYzUxNDBhMjVkZmUyOGIwN2Y1ZDRmZDdhYTA=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-08-12T13:23:56Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-08-12T13:24:22Z"}, "message": "Revert \"Rollup merge of #87779 - Aaron1011:stmt-ast-id, r=petrochenkov\"\n\nFixes #87877\n\nThis change interacts badly with `noop_flat_map_stmt`,\nwhich synthesizes multiple statements with the same `NodeId`.\n\nI'm working on a better fix that will still allow us to\nremove this special case. For now, let's revert the change\nto fix the ICE.\n\nThis reverts commit a4262cc9841d91d48ef994b36eab323e615a7083, reversing\nchanges made to 8ee962f88e1be7e29482b13c7776c26b98a93bf7.", "tree": {"sha": "3bca1f7dc6e31e1cd8426c1dc57632e870dea331", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bca1f7dc6e31e1cd8426c1dc57632e870dea331"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmEVIWQACgkQtAh+UQ6Y\nsWRpQBAAtauL/Ad4NOOjqadL+q/GLZS8Weicr0FZhqbx0Fc1djDQ9B/9E3zsUyw7\nUaRHFGRtEs9pLsarxGrg7BC+8lTA6QyzqGFGMxQg0i/GJ4T9mpY/6hI8txbnxFEo\nW5a4Cwe/W9qQohj72RnXwx9GdYVYQo9+GmQOZilwye4aaKuCYGX8ed8OqwjjVw2M\nL0iSnz8SZyT/LtW887Ijk2k75+KEqSRB7bpTq71C26IgS2TXLZ0hAX2FBBKcBbgs\nLbkysFqNI9w4PSpQFWRyxGrKh3SKMH3DFsCfo0XHCQtGBslWErsxggOZWj7/y31z\nJ/fm7eGWj/tTzmHLrHm3mKEGF/XTfA1Me/Z5Qx4/iVxIe+hpDfZ/QVNi+6ABo8IK\nxl6AebSDvC01B/okzldHh+6Z3YZ6qr655Fdbnhgu7PAUPN6k+paeXb5l90weAxJ0\noaOZbJqPkBG32ywZgB28D1oQwTZwU051kztEX8iyqtwNiRMpSghf/WTzzH1TO+GG\nUStmYyeWwhOcuiTYWY1CAruIUXl5t3qf5doD7W8FG63xYq3b7ad2vsUQyv2YO/nm\nno/98n0kLJcVnIEnTb9gDTbQLvIk9J6Hx2q8u/R+F72y9VCGxop/Jr/Qxl0qwzUB\n6nBbeIjlTKIo26FdojQxQJxe2Ez1dyXKjgWPWOAuKax4crEHBTk=\n=YuAw\n-----END PGP SIGNATURE-----", "payload": "tree 3bca1f7dc6e31e1cd8426c1dc57632e870dea331\nparent 4e900176b6c402035a6e52da03d453c848f0b336\nauthor Aaron Hill <aa1ronham@gmail.com> 1628774636 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1628774662 -0500\n\nRevert \"Rollup merge of #87779 - Aaron1011:stmt-ast-id, r=petrochenkov\"\n\nFixes #87877\n\nThis change interacts badly with `noop_flat_map_stmt`,\nwhich synthesizes multiple statements with the same `NodeId`.\n\nI'm working on a better fix that will still allow us to\nremove this special case. For now, let's revert the change\nto fix the ICE.\n\nThis reverts commit a4262cc9841d91d48ef994b36eab323e615a7083, reversing\nchanges made to 8ee962f88e1be7e29482b13c7776c26b98a93bf7.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0", "html_url": "https://github.com/rust-lang/rust/commit/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e900176b6c402035a6e52da03d453c848f0b336", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e900176b6c402035a6e52da03d453c848f0b336", "html_url": "https://github.com/rust-lang/rust/commit/4e900176b6c402035a6e52da03d453c848f0b336"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "09beda33483745b0c85d7b120a1265dde17a76e3", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0", "patch": "@@ -559,7 +559,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         self.cx.force_mode = orig_force_mode;\n \n         // Finally incorporate all the expanded macros into the input AST fragment.\n-        let mut placeholder_expander = PlaceholderExpander::default();\n+        let mut placeholder_expander = PlaceholderExpander::new(self.cx, self.monotonic);\n         while let Some(expanded_fragments) = expanded_fragments.pop() {\n             for (expn_id, expanded_fragment) in expanded_fragments.into_iter().rev() {\n                 placeholder_expander\n@@ -1341,9 +1341,14 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n             }\n         }\n \n+        // The placeholder expander gives ids to statements, so we avoid folding the id here.\n         // We don't use `assign_id!` - it will be called when we visit statement's contents\n         // (e.g. an expression, item, or local)\n-        let res = noop_flat_map_stmt(stmt, self);\n+        let ast::Stmt { id, kind, span } = stmt;\n+        let res = noop_flat_map_stmt_kind(kind, self)\n+            .into_iter()\n+            .map(|kind| ast::Stmt { id, kind, span })\n+            .collect();\n \n         self.cx.current_expansion.is_trailing_mac = false;\n         res"}, {"sha": "efed41de23a89ebf23b7f0c86841db93167d20f5", "filename": "compiler/rustc_expand/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Flib.rs?ref=cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0", "patch": "@@ -7,7 +7,6 @@\n #![feature(proc_macro_internals)]\n #![feature(proc_macro_span)]\n #![feature(try_blocks)]\n-#![recursion_limit = \"256\"]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "6586ba138fb9956c61baf25f0eb13edd301cdbd5", "filename": "compiler/rustc_expand/src/placeholders.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs?ref=cfc3fee952589dc5140a25dfe28b07f5d4fd7aa0", "patch": "@@ -1,3 +1,4 @@\n+use crate::base::ExtCtxt;\n use crate::expand::{AstFragment, AstFragmentKind};\n \n use rustc_ast as ast;\n@@ -174,12 +175,17 @@ pub fn placeholder(\n     }\n }\n \n-#[derive(Default)]\n-pub struct PlaceholderExpander {\n+pub struct PlaceholderExpander<'a, 'b> {\n     expanded_fragments: FxHashMap<ast::NodeId, AstFragment>,\n+    cx: &'a mut ExtCtxt<'b>,\n+    monotonic: bool,\n }\n \n-impl PlaceholderExpander {\n+impl<'a, 'b> PlaceholderExpander<'a, 'b> {\n+    pub fn new(cx: &'a mut ExtCtxt<'b>, monotonic: bool) -> Self {\n+        PlaceholderExpander { cx, expanded_fragments: FxHashMap::default(), monotonic }\n+    }\n+\n     pub fn add(&mut self, id: ast::NodeId, mut fragment: AstFragment) {\n         fragment.mut_visit_with(self);\n         self.expanded_fragments.insert(id, fragment);\n@@ -190,7 +196,7 @@ impl PlaceholderExpander {\n     }\n }\n \n-impl MutVisitor for PlaceholderExpander {\n+impl<'a, 'b> MutVisitor for PlaceholderExpander<'a, 'b> {\n     fn flat_map_arm(&mut self, arm: ast::Arm) -> SmallVec<[ast::Arm; 1]> {\n         if arm.is_placeholder {\n             self.remove(arm.id).make_arms()\n@@ -354,4 +360,15 @@ impl MutVisitor for PlaceholderExpander {\n             _ => noop_visit_ty(ty, self),\n         }\n     }\n+\n+    fn visit_block(&mut self, block: &mut P<ast::Block>) {\n+        noop_visit_block(block, self);\n+\n+        for stmt in block.stmts.iter_mut() {\n+            if self.monotonic {\n+                assert_eq!(stmt.id, ast::DUMMY_NODE_ID);\n+                stmt.id = self.cx.resolver.next_node_id();\n+            }\n+        }\n+    }\n }"}]}