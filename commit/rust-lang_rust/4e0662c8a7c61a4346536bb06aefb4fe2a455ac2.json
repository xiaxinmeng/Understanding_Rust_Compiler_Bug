{"sha": "4e0662c8a7c61a4346536bb06aefb4fe2a455ac2", "node_id": "C_kwDOAAsO6NoAKDRlMDY2MmM4YTdjNjFhNDM0NjUzNmJiMDZhZWZiNGZlMmE0NTVhYzI", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-05T11:47:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-05T11:47:22Z"}, "message": "Rollup merge of #109847 - clubby789:graphviz-reachable, r=oli-obk\n\nOnly create graphviz nodes for reachable MIR bb's\n\nFixes #109832", "tree": {"sha": "f1994847eb2531e7e3da65520ba2384afb8bc2d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1994847eb2531e7e3da65520ba2384afb8bc2d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e0662c8a7c61a4346536bb06aefb4fe2a455ac2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkLV/KCRBK7hj4Ov3rIwAAPA4IAEx7CHcDYnD/vEBWUaf8YBva\nFeW6bQbDfbvLqQOv5PvSnSdxPO942yfIcRj6X5I3k+/JBEpcL39Op9cglKFgwFZ0\neBye84Ci9hETF37sLhq5GzWyieU0iR89iTlMCBF2FDGIwCJ/ERgC5Akk1q6b0ibR\nHYtBsRB+Uv7G6MXQI7drJlTNgalUCjBvllpp2oHD5784M6jn8Whb92OaOaa2PI+e\nG2eEASN3U0Cg94Z4rs09d3H15t3JlQbzNaPjQ61vm1tpYHmO1/QwXG4H2NFJpfer\n9L4JAor1OhoLXjmQ0nMY7LIjZMLOmeNF0gjm24ln1NpMGRoDon2Pq1+OcC723iE=\n=AnIn\n-----END PGP SIGNATURE-----\n", "payload": "tree f1994847eb2531e7e3da65520ba2384afb8bc2d1\nparent 630f2fc850006394061256bdc66b6ee646f73a54\nparent 47ae42ee101c36fe18a5fe15e6cb501c8992fe7a\nauthor Yuki Okushi <jtitor@2k36.org> 1680695242 +0900\ncommitter GitHub <noreply@github.com> 1680695242 +0900\n\nRollup merge of #109847 - clubby789:graphviz-reachable, r=oli-obk\n\nOnly create graphviz nodes for reachable MIR bb's\n\nFixes #109832\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0662c8a7c61a4346536bb06aefb4fe2a455ac2", "html_url": "https://github.com/rust-lang/rust/commit/4e0662c8a7c61a4346536bb06aefb4fe2a455ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e0662c8a7c61a4346536bb06aefb4fe2a455ac2/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "630f2fc850006394061256bdc66b6ee646f73a54", "url": "https://api.github.com/repos/rust-lang/rust/commits/630f2fc850006394061256bdc66b6ee646f73a54", "html_url": "https://github.com/rust-lang/rust/commit/630f2fc850006394061256bdc66b6ee646f73a54"}, {"sha": "47ae42ee101c36fe18a5fe15e6cb501c8992fe7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/47ae42ee101c36fe18a5fe15e6cb501c8992fe7a", "html_url": "https://github.com/rust-lang/rust/commit/47ae42ee101c36fe18a5fe15e6cb501c8992fe7a"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "c188105eae89f44e716e532773fc20a19b13b59d", "filename": "compiler/rustc_mir_dataflow/src/framework/graphviz.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4e0662c8a7c61a4346536bb06aefb4fe2a455ac2/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e0662c8a7c61a4346536bb06aefb4fe2a455ac2/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fgraphviz.rs?ref=4e0662c8a7c61a4346536bb06aefb4fe2a455ac2", "patch": "@@ -6,6 +6,7 @@ use std::{io, ops, str};\n \n use regex::Regex;\n use rustc_graphviz as dot;\n+use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::graphviz_safe_def_name;\n use rustc_middle::mir::{self, BasicBlock, Body, Location};\n \n@@ -34,14 +35,16 @@ where\n     body: &'a Body<'tcx>,\n     results: &'a Results<'tcx, A>,\n     style: OutputStyle,\n+    reachable: BitSet<BasicBlock>,\n }\n \n impl<'a, 'tcx, A> Formatter<'a, 'tcx, A>\n where\n     A: Analysis<'tcx>,\n {\n     pub fn new(body: &'a Body<'tcx>, results: &'a Results<'tcx, A>, style: OutputStyle) -> Self {\n-        Formatter { body, results, style }\n+        let reachable = mir::traversal::reachable_as_bitset(body);\n+        Formatter { body, results, style, reachable }\n     }\n }\n \n@@ -108,7 +111,12 @@ where\n     type Edge = CfgEdge;\n \n     fn nodes(&self) -> dot::Nodes<'_, Self::Node> {\n-        self.body.basic_blocks.indices().collect::<Vec<_>>().into()\n+        self.body\n+            .basic_blocks\n+            .indices()\n+            .filter(|&idx| self.reachable.contains(idx))\n+            .collect::<Vec<_>>()\n+            .into()\n     }\n \n     fn edges(&self) -> dot::Edges<'_, Self::Edge> {"}]}