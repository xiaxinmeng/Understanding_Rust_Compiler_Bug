{"sha": "1663bfba02b7c1545a3c241b6b08cc9d9b97c475", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NjNiZmJhMDJiN2MxNTQ1YTNjMjQxYjZiMDhjYzlkOWI5N2M0NzU=", "commit": {"author": {"name": "khyperia", "email": "github@khyperia.com", "date": "2020-08-30T11:38:47Z"}, "committer": {"name": "khyperia", "email": "github@khyperia.com", "date": "2020-08-30T11:38:47Z"}, "message": "Fix matching on field.abi instead of self.layout.abi", "tree": {"sha": "2dfb8838de848b80f5c0a4b81e59a8bc93006388", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dfb8838de848b80f5c0a4b81e59a8bc93006388"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1663bfba02b7c1545a3c241b6b08cc9d9b97c475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1663bfba02b7c1545a3c241b6b08cc9d9b97c475", "html_url": "https://github.com/rust-lang/rust/commit/1663bfba02b7c1545a3c241b6b08cc9d9b97c475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1663bfba02b7c1545a3c241b6b08cc9d9b97c475/comments", "author": {"login": "khyperia", "id": 953151, "node_id": "MDQ6VXNlcjk1MzE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/953151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khyperia", "html_url": "https://github.com/khyperia", "followers_url": "https://api.github.com/users/khyperia/followers", "following_url": "https://api.github.com/users/khyperia/following{/other_user}", "gists_url": "https://api.github.com/users/khyperia/gists{/gist_id}", "starred_url": "https://api.github.com/users/khyperia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khyperia/subscriptions", "organizations_url": "https://api.github.com/users/khyperia/orgs", "repos_url": "https://api.github.com/users/khyperia/repos", "events_url": "https://api.github.com/users/khyperia/events{/privacy}", "received_events_url": "https://api.github.com/users/khyperia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "khyperia", "id": 953151, "node_id": "MDQ6VXNlcjk1MzE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/953151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khyperia", "html_url": "https://github.com/khyperia", "followers_url": "https://api.github.com/users/khyperia/followers", "following_url": "https://api.github.com/users/khyperia/following{/other_user}", "gists_url": "https://api.github.com/users/khyperia/gists{/gist_id}", "starred_url": "https://api.github.com/users/khyperia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khyperia/subscriptions", "organizations_url": "https://api.github.com/users/khyperia/orgs", "repos_url": "https://api.github.com/users/khyperia/repos", "events_url": "https://api.github.com/users/khyperia/events{/privacy}", "received_events_url": "https://api.github.com/users/khyperia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81650f485c8cafbb6f06d43e90236f34c53175cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/81650f485c8cafbb6f06d43e90236f34c53175cf", "html_url": "https://github.com/rust-lang/rust/commit/81650f485c8cafbb6f06d43e90236f34c53175cf"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "bbd004be87521c6fce3b21bd71be7465fce8f0de", "filename": "src/librustc_codegen_ssa/mir/operand.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1663bfba02b7c1545a3c241b6b08cc9d9b97c475/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1663bfba02b7c1545a3c241b6b08cc9d9b97c475/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs?ref=1663bfba02b7c1545a3c241b6b08cc9d9b97c475", "patch": "@@ -220,17 +220,19 @@ impl<'a, 'tcx, V: CodegenObject> OperandRef<'tcx, V> {\n             _ => bug!(\"OperandRef::extract_field({:?}): not applicable\", self),\n         };\n \n-        match (&mut val, &self.layout.abi) {\n+        match (&mut val, &field.abi) {\n             (OperandValue::Immediate(llval), _) => {\n                 // Bools in union fields needs to be truncated.\n                 *llval = bx.to_immediate(*llval, field);\n                 // HACK(eddyb) have to bitcast pointers until LLVM removes pointee types.\n                 *llval = bx.bitcast(*llval, bx.cx().immediate_backend_type(field));\n             }\n             (OperandValue::Pair(a, b), Abi::ScalarPair(a_abi, b_abi)) => {\n+                // Bools in union fields needs to be truncated.\n                 *a = bx.to_immediate_scalar(*a, a_abi);\n-                *a = bx.bitcast(*a, bx.cx().scalar_pair_element_backend_type(field, 0, true));\n                 *b = bx.to_immediate_scalar(*b, b_abi);\n+                // HACK(eddyb) have to bitcast pointers until LLVM removes pointee types.\n+                *a = bx.bitcast(*a, bx.cx().scalar_pair_element_backend_type(field, 0, true));\n                 *b = bx.bitcast(*b, bx.cx().scalar_pair_element_backend_type(field, 1, true));\n             }\n             (OperandValue::Pair(..), _) => bug!(),"}]}