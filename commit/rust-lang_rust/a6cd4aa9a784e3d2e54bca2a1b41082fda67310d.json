{"sha": "a6cd4aa9a784e3d2e54bca2a1b41082fda67310d", "node_id": "C_kwDOAAsO6NoAKGE2Y2Q0YWE5YTc4NGUzZDJlNTRiY2EyYTFiNDEwODJmZGE2NzMxMGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-01T00:50:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-01T00:50:28Z"}, "message": "Auto merge of #93386 - WaffleLapkin:rustc_must_implement_one_of_check_target, r=nagisa\n\nCheck that `#[rustc_must_implement_one_of]` is applied to a trait\n\n`#[rustc_must_implement_one_of]` only makes sense when applied to a trait, so it's sensible to emit an error otherwise.", "tree": {"sha": "c423461f7720efc62cfe443a9adc0e7ac5d487cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c423461f7720efc62cfe443a9adc0e7ac5d487cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d", "html_url": "https://github.com/rust-lang/rust/commit/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "745e9264873ab001a189f739446c86c509e6dc3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/745e9264873ab001a189f739446c86c509e6dc3d", "html_url": "https://github.com/rust-lang/rust/commit/745e9264873ab001a189f739446c86c509e6dc3d"}, {"sha": "4ca56d28884678d89c753c03de9f0c7544d018e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca56d28884678d89c753c03de9f0c7544d018e6", "html_url": "https://github.com/rust-lang/rust/commit/4ca56d28884678d89c753c03de9f0c7544d018e6"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "ec4cefa3537f97404364715deadc889c74392ac7", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=a6cd4aa9a784e3d2e54bca2a1b41082fda67310d", "patch": "@@ -76,6 +76,9 @@ impl CheckAttrVisitor<'_> {\n                 sym::inline => self.check_inline(hir_id, attr, span, target),\n                 sym::non_exhaustive => self.check_non_exhaustive(hir_id, attr, span, target),\n                 sym::marker => self.check_marker(hir_id, attr, span, target),\n+                sym::rustc_must_implement_one_of => {\n+                    self.check_rustc_must_implement_one_of(attr, span, target)\n+                }\n                 sym::target_feature => self.check_target_feature(hir_id, attr, span, target),\n                 sym::track_caller => {\n                     self.check_track_caller(hir_id, &attr.span, attrs, span, target)\n@@ -477,6 +480,26 @@ impl CheckAttrVisitor<'_> {\n         }\n     }\n \n+    /// Checks if the `#[rustc_must_implement_one_of]` attribute on a `target` is valid. Returns `true` if valid.\n+    fn check_rustc_must_implement_one_of(\n+        &self,\n+        attr: &Attribute,\n+        span: &Span,\n+        target: Target,\n+    ) -> bool {\n+        match target {\n+            Target::Trait => true,\n+            _ => {\n+                self.tcx\n+                    .sess\n+                    .struct_span_err(attr.span, \"attribute can only be applied to a trait\")\n+                    .span_label(*span, \"not a trait\")\n+                    .emit();\n+                false\n+            }\n+        }\n+    }\n+\n     /// Checks if the `#[target_feature]` attribute on `item` is valid. Returns `true` if valid.\n     fn check_target_feature(\n         &self,"}, {"sha": "d9de6d5edb9b4605f1993950c6f711699fa0bcc1", "filename": "src/test/ui/traits/default-method/rustc_must_implement_one_of_misuse.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.rs?ref=a6cd4aa9a784e3d2e54bca2a1b41082fda67310d", "patch": "@@ -35,4 +35,12 @@ trait Tr5 {\n     fn b(); //~ This function doesn't have a default implementation\n }\n \n+#[rustc_must_implement_one_of(abc, xyz)]\n+//~^ attribute can only be applied to a trait\n+fn function() {}\n+\n+#[rustc_must_implement_one_of(abc, xyz)]\n+//~^ attribute can only be applied to a trait\n+struct Struct {}\n+\n fn main() {}"}, {"sha": "bc28dc2c4f40dddfa656923c1d89e17f9987dcab", "filename": "src/test/ui/traits/default-method/rustc_must_implement_one_of_misuse.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6cd4aa9a784e3d2e54bca2a1b41082fda67310d/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.stderr?ref=a6cd4aa9a784e3d2e54bca2a1b41082fda67310d", "patch": "@@ -4,6 +4,24 @@ error: malformed `rustc_must_implement_one_of` attribute input\n LL | #[rustc_must_implement_one_of]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: must be of the form: `#[rustc_must_implement_one_of(function1, function2, ...)]`\n \n+error: attribute can only be applied to a trait\n+  --> $DIR/rustc_must_implement_one_of_misuse.rs:38:1\n+   |\n+LL | #[rustc_must_implement_one_of(abc, xyz)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL | fn function() {}\n+   | ---------------- not a trait\n+\n+error: attribute can only be applied to a trait\n+  --> $DIR/rustc_must_implement_one_of_misuse.rs:42:1\n+   |\n+LL | #[rustc_must_implement_one_of(abc, xyz)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL | struct Struct {}\n+   | ---------------- not a trait\n+\n error: Function not found in this trait\n   --> $DIR/rustc_must_implement_one_of_misuse.rs:3:31\n    |\n@@ -78,5 +96,5 @@ note: required by this annotation\n LL | #[rustc_must_implement_one_of(a, b)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 11 previous errors\n "}]}