{"sha": "7467b83377e47a5f99b68737e5855ec4db1501e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NjdiODMzNzdlNDdhNWY5OWI2ODczN2U1ODU1ZWM0ZGIxNTAxZTI=", "commit": {"author": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2018-01-17T19:08:03Z"}, "committer": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2018-01-18T09:02:42Z"}, "message": "Suggest removing inline attributes\n\nThis adds a `suggest_remove_item` helper that will remove an item and\nall trailing whitespace. This should handle both attributes on the same\nline as the function and on a separate line; the function takes the\nposition of the original attribute.", "tree": {"sha": "882fd68477b4bcc6f3d1409186a10f04c7f3efd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/882fd68477b4bcc6f3d1409186a10f04c7f3efd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7467b83377e47a5f99b68737e5855ec4db1501e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7467b83377e47a5f99b68737e5855ec4db1501e2", "html_url": "https://github.com/rust-lang/rust/commit/7467b83377e47a5f99b68737e5855ec4db1501e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7467b83377e47a5f99b68737e5855ec4db1501e2/comments", "author": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f3c340bfbc61dd676bab8b383a6ad080ef554b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f3c340bfbc61dd676bab8b383a6ad080ef554b8", "html_url": "https://github.com/rust-lang/rust/commit/5f3c340bfbc61dd676bab8b383a6ad080ef554b8"}], "stats": {"total": 75, "additions": 64, "deletions": 11}, "files": [{"sha": "1bb9519d304c33fbe626a352933fb56f34c7f31b", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7467b83377e47a5f99b68737e5855ec4db1501e2/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7467b83377e47a5f99b68737e5855ec4db1501e2/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=7467b83377e47a5f99b68737e5855ec4db1501e2", "patch": "@@ -3,7 +3,8 @@\n use rustc::lint::*;\n use rustc::hir::*;\n use syntax::ast::{Attribute, Name};\n-use utils::span_lint;\n+use utils::span_lint_and_then;\n+use utils::sugg::DiagnosticBuilderExt;\n \n /// **What it does:** Checks for `#[inline]` on trait methods without bodies\n ///\n@@ -51,11 +52,14 @@ fn check_attrs(cx: &LateContext, name: &Name, attrs: &[Attribute]) {\n             continue;\n         }\n \n-        span_lint(\n+        span_lint_and_then(\n             cx,\n             INLINE_FN_WITHOUT_BODY,\n             attr.span,\n             &format!(\"use of `#[inline]` on trait method `{}` which has no body\", name),\n+            |db| {\n+                db.suggest_remove_item(cx, attr.span, \"remove\");\n+            },\n         );\n     }\n }"}, {"sha": "2f651917bc157c128ffe292f5646985d296b7ab1", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7467b83377e47a5f99b68737e5855ec4db1501e2/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7467b83377e47a5f99b68737e5855ec4db1501e2/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=7467b83377e47a5f99b68737e5855ec4db1501e2", "patch": "@@ -15,6 +15,7 @@ use syntax::print::pprust::token_to_string;\n use syntax::util::parser::AssocOp;\n use syntax::ast;\n use utils::{higher, snippet, snippet_opt};\n+use syntax_pos::{BytePos, Pos};\n \n /// A helper type to build suggestion correctly handling parenthesis.\n pub enum Sugg<'a> {\n@@ -454,6 +455,19 @@ pub trait DiagnosticBuilderExt<'a, T: LintContext<'a>> {\n     /// }\");\n     /// ```\n     fn suggest_prepend_item(&mut self, cx: &T, item: Span, msg: &str, new_item: &str);\n+\n+    /// Suggest to completely remove an item.\n+    ///\n+    /// This will remove an item and all following whitespace until the next non-whitespace\n+    /// character. This should work correctly if item is on the same indentation level as the\n+    /// following item.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```rust,ignore\n+    /// db.suggest_remove_item(cx, item, \"remove this\")\n+    /// ```\n+    fn suggest_remove_item(&mut self, cx: &T, item: Span, msg: &str);\n }\n \n impl<'a, 'b, 'c, T: LintContext<'c>> DiagnosticBuilderExt<'c, T> for rustc_errors::DiagnosticBuilder<'b> {\n@@ -485,4 +499,21 @@ impl<'a, 'b, 'c, T: LintContext<'c>> DiagnosticBuilderExt<'c, T> for rustc_error\n             self.span_suggestion(span, msg, format!(\"{}\\n{}\", new_item, indent));\n         }\n     }\n+\n+    fn suggest_remove_item(&mut self, cx: &T, item: Span, msg: &str) {\n+        let mut remove_span = item;\n+        let fmpos = cx.sess()\n+            .codemap()\n+            .lookup_byte_offset(remove_span.next_point().hi());\n+\n+        if let Some(ref src) = fmpos.fm.src {\n+            let non_whitespace_offset = src[fmpos.pos.to_usize()..].find(|c| c != ' ' && c != '\\t' && c != '\\n');\n+\n+            if let Some(non_whitespace_offset) = non_whitespace_offset {\n+                remove_span = remove_span.with_hi(remove_span.hi() + BytePos(non_whitespace_offset as u32))\n+            }\n+        }\n+\n+        self.span_suggestion(remove_span, msg, String::new());\n+    }\n }"}, {"sha": "82e073184d3541f222488cdfba405f9710e9abde", "filename": "tests/ui/inline_fn_without_body.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7467b83377e47a5f99b68737e5855ec4db1501e2/tests%2Fui%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7467b83377e47a5f99b68737e5855ec4db1501e2/tests%2Fui%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline_fn_without_body.rs?ref=7467b83377e47a5f99b68737e5855ec4db1501e2", "patch": "@@ -3,16 +3,21 @@\n \n #![warn(inline_fn_without_body)]\n #![allow(inline_always)]\n+\n trait Foo {\n     #[inline]\n     fn default_inline();\n \n-    #[inline(always)]\n-    fn always_inline();\n+    #[inline(always)]fn always_inline();\n+\n+    #[inline(never)]\n+\n+    fn never_inline();\n \n     #[inline]\n     fn has_body() {\n     }\n }\n \n-fn main() {}\n+fn main() {\n+}"}, {"sha": "fd26013d11ea9049820d893cd1b4f77810a80fa2", "filename": "tests/ui/inline_fn_without_body.stderr", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7467b83377e47a5f99b68737e5855ec4db1501e2/tests%2Fui%2Finline_fn_without_body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7467b83377e47a5f99b68737e5855ec4db1501e2/tests%2Fui%2Finline_fn_without_body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline_fn_without_body.stderr?ref=7467b83377e47a5f99b68737e5855ec4db1501e2", "patch": "@@ -1,14 +1,27 @@\n error: use of `#[inline]` on trait method `default_inline` which has no body\n- --> $DIR/inline_fn_without_body.rs:7:5\n+ --> $DIR/inline_fn_without_body.rs:8:5\n   |\n-7 |     #[inline]\n-  |     ^^^^^^^^^\n+8 |       #[inline]\n+  |  _____-^^^^^^^^\n+9 | |     fn default_inline();\n+  | |____- help: remove\n   |\n   = note: `-D inline-fn-without-body` implied by `-D warnings`\n \n error: use of `#[inline]` on trait method `always_inline` which has no body\n-  --> $DIR/inline_fn_without_body.rs:10:5\n+  --> $DIR/inline_fn_without_body.rs:11:5\n    |\n-10 |     #[inline(always)]\n-   |     ^^^^^^^^^^^^^^^^^\n+11 |     #[inline(always)]fn always_inline();\n+   |     ^^^^^^^^^^^^^^^^^ help: remove\n+\n+error: use of `#[inline]` on trait method `never_inline` which has no body\n+  --> $DIR/inline_fn_without_body.rs:13:5\n+   |\n+13 |       #[inline(never)]\n+   |  _____-^^^^^^^^^^^^^^^\n+14 | |\n+15 | |     fn never_inline();\n+   | |____- help: remove\n+\n+error: aborting due to 3 previous errors\n "}]}