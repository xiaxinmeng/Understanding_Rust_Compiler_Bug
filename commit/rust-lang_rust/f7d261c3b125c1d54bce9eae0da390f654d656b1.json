{"sha": "f7d261c3b125c1d54bce9eae0da390f654d656b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZDI2MWMzYjEyNWMxZDU0YmNlOWVhZTBkYTM5MGY2NTRkNjU2YjE=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-08T23:00:25Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-08T23:12:42Z"}, "message": "Get rid of `DepConstructor`\n\nThis removes fully 235 unused functions.", "tree": {"sha": "abb1e81f2f9de8f1a8a6a0afcd971843c6125cc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abb1e81f2f9de8f1a8a6a0afcd971843c6125cc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7d261c3b125c1d54bce9eae0da390f654d656b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7d261c3b125c1d54bce9eae0da390f654d656b1", "html_url": "https://github.com/rust-lang/rust/commit/f7d261c3b125c1d54bce9eae0da390f654d656b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7d261c3b125c1d54bce9eae0da390f654d656b1/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26438b473883ea607b30288e461187f0fb2fe589", "url": "https://api.github.com/repos/rust-lang/rust/commits/26438b473883ea607b30288e461187f0fb2fe589", "html_url": "https://github.com/rust-lang/rust/commit/26438b473883ea607b30288e461187f0fb2fe589"}], "stats": {"total": 52, "additions": 17, "deletions": 35}, "files": [{"sha": "65e5301c96e9e64dc2913505c3f247d75a64985a", "filename": "compiler/rustc_middle/src/dep_graph/dep_node.rs", "status": "modified", "additions": 13, "deletions": 32, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f7d261c3b125c1d54bce9eae0da390f654d656b1/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7d261c3b125c1d54bce9eae0da390f654d656b1/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs?ref=f7d261c3b125c1d54bce9eae0da390f654d656b1", "patch": "@@ -29,9 +29,10 @@\n //!   contained no `DefId` for thing that had been removed.\n //!\n //! `DepNode` definition happens in the `define_dep_nodes!()` macro. This macro\n-//! defines the `DepKind` enum and a corresponding `dep_constructor` module. The\n-//! `dep_constructor` module links a `DepKind` to the parameters that are needed at\n-//! runtime in order to construct a valid `DepNode` fingerprint.\n+//! defines the `DepKind` enum. Each `DepKind` has its own parameters that are\n+//! needed at runtime in order to construct a valid `DepNode` fingerprint.\n+//! However, only `CompileCodegenUnit` is constructed explicitly (with\n+//! `make_compile_codegen_unit`).\n //!\n //! Because the macro sees what parameters a given `DepKind` requires, it can\n //! \"infer\" some properties for each kind of `DepNode`:\n@@ -44,22 +45,14 @@\n //!   `DefId` it was computed from. In other cases, too much information gets\n //!   lost during fingerprint computation.\n //!\n-//! The `dep_constructor` module, together with `DepNode::new()`, ensures that only\n+//! `make_compile_codegen_unit`, together with `DepNode::new()`, ensures that only\n //! valid `DepNode` instances can be constructed. For example, the API does not\n //! allow for constructing parameterless `DepNode`s with anything other\n //! than a zeroed out fingerprint. More generally speaking, it relieves the\n //! user of the `DepNode` API of having to know how to compute the expected\n //! fingerprint for a given set of node parameters.\n \n-use crate::mir::interpret::{GlobalId, LitToConstInput};\n-use crate::traits;\n-use crate::traits::query::{\n-    CanonicalPredicateGoal, CanonicalProjectionGoal, CanonicalTyGoal,\n-    CanonicalTypeOpAscribeUserTypeGoal, CanonicalTypeOpEqGoal, CanonicalTypeOpNormalizeGoal,\n-    CanonicalTypeOpProvePredicateGoal, CanonicalTypeOpSubtypeGoal,\n-};\n-use crate::ty::subst::{GenericArg, SubstsRef};\n-use crate::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n+use crate::ty::TyCtxt;\n \n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, CRATE_DEF_INDEX};\n@@ -338,25 +331,6 @@ macro_rules! define_dep_nodes {\n             $($variant),*\n         }\n \n-        #[allow(non_camel_case_types)]\n-        pub mod dep_constructor {\n-            use super::*;\n-\n-            $(\n-                #[inline(always)]\n-                #[allow(unreachable_code, non_snake_case)]\n-                pub fn $variant(_tcx: TyCtxt<'_>, $(arg: $tuple_arg_ty)*) -> DepNode {\n-                    // tuple args\n-                    $({\n-                        erase!($tuple_arg_ty);\n-                        return DepNode::construct(_tcx, DepKind::$variant, &arg)\n-                    })*\n-\n-                    return DepNode::construct(_tcx, DepKind::$variant, &())\n-                }\n-            )*\n-        }\n-\n         fn dep_kind_from_label_string(label: &str) -> Result<DepKind, ()> {\n             match label {\n                 $(stringify!($variant) => Ok(DepKind::$variant),)*\n@@ -384,9 +358,16 @@ rustc_dep_node_append!([define_dep_nodes!][ <'tcx>\n \n     [anon] TraitSelect,\n \n+    // WARNING: if `Symbol` is changed, make sure you update `make_compile_codegen_unit` below.\n     [] CompileCodegenUnit(Symbol),\n ]);\n \n+// WARNING: `construct` is generic and does not know that `CompileCodegenUnit` takes `Symbol`s as keys.\n+// Be very careful changing this type signature!\n+crate fn make_compile_codegen_unit(tcx: TyCtxt<'_>, name: Symbol) -> DepNode {\n+    DepNode::construct(tcx, DepKind::CompileCodegenUnit, &name)\n+}\n+\n pub type DepNode = rustc_query_system::dep_graph::DepNode<DepKind>;\n \n // We keep a lot of `DepNode`s in memory during compilation. It's not"}, {"sha": "ea4d8c129970929fd780c3aeffacca255a997b87", "filename": "compiler/rustc_middle/src/dep_graph/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f7d261c3b125c1d54bce9eae0da390f654d656b1/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7d261c3b125c1d54bce9eae0da390f654d656b1/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs?ref=f7d261c3b125c1d54bce9eae0da390f654d656b1", "patch": "@@ -13,7 +13,8 @@ pub use rustc_query_system::dep_graph::{\n     WorkProduct, WorkProductId,\n };\n \n-pub use dep_node::{dep_constructor, label_strs, DepKind, DepNode, DepNodeExt};\n+crate use dep_node::make_compile_codegen_unit;\n+pub use dep_node::{label_strs, DepKind, DepNode, DepNodeExt};\n \n pub type DepGraph = rustc_query_system::dep_graph::DepGraph<DepKind>;\n pub type TaskDeps = rustc_query_system::dep_graph::TaskDeps<DepKind>;"}, {"sha": "b8b5390ec40fe75a1a38f654bfbd81e2664685a4", "filename": "compiler/rustc_middle/src/mir/mono.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7d261c3b125c1d54bce9eae0da390f654d656b1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7d261c3b125c1d54bce9eae0da390f654d656b1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs?ref=f7d261c3b125c1d54bce9eae0da390f654d656b1", "patch": "@@ -1,4 +1,4 @@\n-use crate::dep_graph::{dep_constructor, DepNode, WorkProduct, WorkProductId};\n+use crate::dep_graph::{DepNode, WorkProduct, WorkProductId};\n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::ty::{subst::InternalSubsts, Instance, InstanceDef, SymbolName, TyCtxt};\n use rustc_data_structures::base_n;\n@@ -358,7 +358,7 @@ impl<'tcx> CodegenUnit<'tcx> {\n     }\n \n     pub fn codegen_dep_node(&self, tcx: TyCtxt<'tcx>) -> DepNode {\n-        dep_constructor::CompileCodegenUnit(tcx, self.name())\n+        crate::dep_graph::make_compile_codegen_unit(tcx, self.name())\n     }\n }\n "}]}