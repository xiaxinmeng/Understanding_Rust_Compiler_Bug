{"sha": "fe1619b548f0fd689653e5f03281264239035393", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMTYxOWI1NDhmMGZkNjg5NjUzZTVmMDMyODEyNjQyMzkwMzUzOTM=", "commit": {"author": {"name": "Shohei Wada", "email": "pc@wada314.jp", "date": "2017-10-06T16:53:55Z"}, "committer": {"name": "Shohei Wada", "email": "pc@wada314.jp", "date": "2017-10-06T16:53:55Z"}, "message": "Fix the test framework is failing in CRLF env", "tree": {"sha": "2220ff4f383e41957b3dfaf1d58f89e371b43825", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2220ff4f383e41957b3dfaf1d58f89e371b43825"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe1619b548f0fd689653e5f03281264239035393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1619b548f0fd689653e5f03281264239035393", "html_url": "https://github.com/rust-lang/rust/commit/fe1619b548f0fd689653e5f03281264239035393", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe1619b548f0fd689653e5f03281264239035393/comments", "author": {"login": "wada314", "id": 1488411, "node_id": "MDQ6VXNlcjE0ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1488411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wada314", "html_url": "https://github.com/wada314", "followers_url": "https://api.github.com/users/wada314/followers", "following_url": "https://api.github.com/users/wada314/following{/other_user}", "gists_url": "https://api.github.com/users/wada314/gists{/gist_id}", "starred_url": "https://api.github.com/users/wada314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wada314/subscriptions", "organizations_url": "https://api.github.com/users/wada314/orgs", "repos_url": "https://api.github.com/users/wada314/repos", "events_url": "https://api.github.com/users/wada314/events{/privacy}", "received_events_url": "https://api.github.com/users/wada314/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wada314", "id": 1488411, "node_id": "MDQ6VXNlcjE0ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1488411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wada314", "html_url": "https://github.com/wada314", "followers_url": "https://api.github.com/users/wada314/followers", "following_url": "https://api.github.com/users/wada314/following{/other_user}", "gists_url": "https://api.github.com/users/wada314/gists{/gist_id}", "starred_url": "https://api.github.com/users/wada314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wada314/subscriptions", "organizations_url": "https://api.github.com/users/wada314/orgs", "repos_url": "https://api.github.com/users/wada314/repos", "events_url": "https://api.github.com/users/wada314/events{/privacy}", "received_events_url": "https://api.github.com/users/wada314/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "802df67c2fc9166bb3542bb4cc3aefab42236ffe", "url": "https://api.github.com/repos/rust-lang/rust/commits/802df67c2fc9166bb3542bb4cc3aefab42236ffe", "html_url": "https://github.com/rust-lang/rust/commit/802df67c2fc9166bb3542bb4cc3aefab42236ffe"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "a633c42d7220df2a452c8a8719d3b43753665f87", "filename": "tests/system.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/fe1619b548f0fd689653e5f03281264239035393/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1619b548f0fd689653e5f03281264239035393/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=fe1619b548f0fd689653e5f03281264239035393", "patch": "@@ -17,7 +17,9 @@ extern crate term;\n use std::collections::HashMap;\n use std::fs;\n use std::io::{self, BufRead, BufReader, Read};\n+use std::iter::Peekable;\n use std::path::{Path, PathBuf};\n+use std::str::Chars;\n \n use rustfmt::*;\n use rustfmt::filemap::{write_system_newlines, FileMap};\n@@ -369,7 +371,8 @@ fn handle_result(\n         let read_error = format!(\"Failed reading target {:?}\", &target);\n         f.read_to_string(&mut text).expect(&read_error);\n \n-        if fmt_text != text {\n+        // Ignore LF and CRLF difference for Windows.\n+        if !string_eq_ignore_newline_repr(&fmt_text, &text) {\n             let diff = make_diff(&text, &fmt_text, DIFF_CONTEXT_SIZE);\n             assert!(\n                 !diff.is_empty(),\n@@ -430,3 +433,38 @@ fn rustfmt_diff_no_diff_test() {\n     let diff = make_diff(\"a\\nb\\nc\\nd\", \"a\\nb\\nc\\nd\", 3);\n     assert_eq!(diff, vec![]);\n }\n+\n+// Compare strings without distinguishing between CRLF and LF\n+fn string_eq_ignore_newline_repr(left: &str, right: &str) -> bool {\n+    let left = CharsIgnoreNewlineRepr(left.chars().peekable());\n+    let right = CharsIgnoreNewlineRepr(right.chars().peekable());\n+    left.eq(right)\n+}\n+\n+struct CharsIgnoreNewlineRepr<'a>(Peekable<Chars<'a>>);\n+\n+impl<'a> Iterator for CharsIgnoreNewlineRepr<'a> {\n+    type Item = char;\n+    fn next(&mut self) -> Option<char> {\n+        self.0.next().map(|c| if c == '\\r' {\n+            if *self.0.peek().unwrap_or(&'\\0') == '\\n' {\n+                self.0.next();\n+                '\\n'\n+            } else {\n+                '\\r'\n+            }\n+        } else {\n+            c\n+        })\n+    }\n+}\n+\n+#[test]\n+fn string_eq_ignore_newline_repr_test() {\n+    assert!(string_eq_ignore_newline_repr(\"\", \"\"));\n+    assert!(!string_eq_ignore_newline_repr(\"\", \"abc\"));\n+    assert!(!string_eq_ignore_newline_repr(\"abc\", \"\"));\n+    assert!(string_eq_ignore_newline_repr(\"a\\nb\\nc\\rd\", \"a\\nb\\r\\nc\\rd\"));\n+    assert!(string_eq_ignore_newline_repr(\"a\\r\\n\\r\\n\\r\\nb\", \"a\\n\\n\\nb\"));\n+    assert!(!string_eq_ignore_newline_repr(\"a\\r\\nbcd\", \"a\\nbcdefghijk\"));\n+}"}]}