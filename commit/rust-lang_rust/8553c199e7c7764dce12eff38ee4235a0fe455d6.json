{"sha": "8553c199e7c7764dce12eff38ee4235a0fe455d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NTNjMTk5ZTdjNzc2NGRjZTEyZWZmMzhlZTQyMzVhMGZlNDU1ZDY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-08-30T14:04:28Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-08-30T14:21:23Z"}, "message": "Put back display of associated items (types and consts)", "tree": {"sha": "8851c252953996a86c4c3e7067acb5bed7b562a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8851c252953996a86c4c3e7067acb5bed7b562a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8553c199e7c7764dce12eff38ee4235a0fe455d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8553c199e7c7764dce12eff38ee4235a0fe455d6", "html_url": "https://github.com/rust-lang/rust/commit/8553c199e7c7764dce12eff38ee4235a0fe455d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8553c199e7c7764dce12eff38ee4235a0fe455d6/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a6547cca6d2b2f465f01331927855734687b527", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a6547cca6d2b2f465f01331927855734687b527", "html_url": "https://github.com/rust-lang/rust/commit/4a6547cca6d2b2f465f01331927855734687b527"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "0b060468d05c5ce1d9167abe19ead1366af464c7", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8553c199e7c7764dce12eff38ee4235a0fe455d6/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8553c199e7c7764dce12eff38ee4235a0fe455d6/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=8553c199e7c7764dce12eff38ee4235a0fe455d6", "patch": "@@ -714,7 +714,9 @@ fn render_impls(\n                 None,\n                 false,\n                 true,\n+                true,\n                 &[],\n+                true,\n             );\n             buffer.into_inner()\n         })\n@@ -1053,7 +1055,9 @@ fn render_assoc_items(\n                 None,\n                 false,\n                 true,\n+                true,\n                 &[],\n+                true,\n             );\n         }\n     }\n@@ -1254,9 +1258,12 @@ fn render_impl(\n     use_absolute: Option<bool>,\n     is_on_foreign_type: bool,\n     show_default_items: bool,\n+    // It'll exclude methods.\n+    show_non_assoc_items: bool,\n     // This argument is used to reference same type with different paths to avoid duplication\n     // in documentation pages for trait with automatic implementations like \"Send\" and \"Sync\".\n     aliases: &[String],\n+    toggle_open_by_default: bool,\n ) {\n     let cache = cx.cache();\n     let traits = &cache.traits;\n@@ -1280,16 +1287,18 @@ fn render_impl(\n         is_default_item: bool,\n         trait_: Option<&clean::Trait>,\n         show_def_docs: bool,\n+        show_non_assoc_items: bool,\n     ) {\n         let item_type = item.type_();\n         let name = item.name.as_ref().unwrap();\n \n-        let render_method_item = match render_mode {\n-            RenderMode::Normal => true,\n-            RenderMode::ForDeref { mut_: deref_mut_ } => {\n-                should_render_item(&item, deref_mut_, cx.cache())\n-            }\n-        };\n+        let render_method_item = show_non_assoc_items\n+            && match render_mode {\n+                RenderMode::Normal => true,\n+                RenderMode::ForDeref { mut_: deref_mut_ } => {\n+                    should_render_item(&item, deref_mut_, cx.cache())\n+                }\n+            };\n \n         let in_trait_class = if trait_.is_some() { \" trait-impl\" } else { \"\" };\n \n@@ -1456,6 +1465,7 @@ fn render_impl(\n             false,\n             trait_.map(|t| &t.trait_),\n             show_def_docs,\n+            show_non_assoc_items,\n         );\n     }\n \n@@ -1469,6 +1479,7 @@ fn render_impl(\n         containing_item: &clean::Item,\n         render_mode: RenderMode,\n         show_def_docs: bool,\n+        show_non_assoc_items: bool,\n     ) {\n         for trait_item in &t.items {\n             let n = trait_item.name;\n@@ -1491,6 +1502,7 @@ fn render_impl(\n                 true,\n                 Some(t),\n                 show_def_docs,\n+                show_non_assoc_items,\n             );\n         }\n     }\n@@ -1511,14 +1523,19 @@ fn render_impl(\n                 parent,\n                 render_mode,\n                 show_def_docs,\n+                show_non_assoc_items,\n             );\n         }\n     }\n     if render_mode == RenderMode::Normal {\n         let toggled = !(impl_items.is_empty() && default_impl_items.is_empty());\n         if toggled {\n             close_tags.insert_str(0, \"</details>\");\n-            write!(w, \"<details class=\\\"rustdoc-toggle implementors-toggle\\\" open>\");\n+            write!(\n+                w,\n+                \"<details class=\\\"rustdoc-toggle implementors-toggle\\\"{}>\",\n+                if toggle_open_by_default { \" open\" } else { \"\" }\n+            );\n             write!(w, \"<summary>\")\n         }\n         render_impl_summary("}, {"sha": "5bc500498ffbf743d72b005f0193f684ed54a410", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8553c199e7c7764dce12eff38ee4235a0fe455d6/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8553c199e7c7764dce12eff38ee4235a0fe455d6/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=8553c199e7c7764dce12eff38ee4235a0fe455d6", "patch": "@@ -16,8 +16,7 @@ use rustc_span::symbol::{kw, sym, Symbol};\n use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, item_ty_to_strs, notable_traits_decl,\n     render_assoc_item, render_assoc_items, render_attributes_in_code, render_attributes_in_pre,\n-    render_impl, render_impl_summary, render_stability_since_raw, write_srclink, AssocItemLink,\n-    Context,\n+    render_impl, render_stability_since_raw, write_srclink, AssocItemLink, Context,\n };\n use crate::clean::{self, GetDefId};\n use crate::formats::item_type::ItemType;\n@@ -740,7 +739,9 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n                     None,\n                     true,\n                     false,\n+                    true,\n                     &[],\n+                    false,\n                 );\n             }\n         }\n@@ -1388,16 +1389,20 @@ fn render_implementor(\n         } => implementor_dups[&path.last()].1,\n         _ => false,\n     };\n-    render_impl_summary(\n+    render_impl(\n         w,\n         cx,\n         implementor,\n         trait_,\n-        trait_,\n+        AssocItemLink::Anchor(None),\n+        RenderMode::Normal,\n         false,\n         Some(use_absolute),\n         false,\n+        false,\n+        false,\n         aliases,\n+        false,\n     );\n }\n "}]}