{"sha": "1a860dba38225a4d3e122eaf49c926479826becf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhODYwZGJhMzgyMjVhNGQzZTEyMmVhZjQ5YzkyNjQ3OTgyNmJlY2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-28T17:45:58Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-28T17:45:58Z"}, "message": "simplify", "tree": {"sha": "c5d7a4e87cfdc20f552d8fd1b05259da8c1d9617", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5d7a4e87cfdc20f552d8fd1b05259da8c1d9617"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a860dba38225a4d3e122eaf49c926479826becf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a860dba38225a4d3e122eaf49c926479826becf", "html_url": "https://github.com/rust-lang/rust/commit/1a860dba38225a4d3e122eaf49c926479826becf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a860dba38225a4d3e122eaf49c926479826becf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5299a35e3dc484ea2e7d42cfeed89aee806425d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5299a35e3dc484ea2e7d42cfeed89aee806425d3", "html_url": "https://github.com/rust-lang/rust/commit/5299a35e3dc484ea2e7d42cfeed89aee806425d3"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "24c3469847117e0603ce1f3830f00d2cabffc05f", "filename": "crates/ra_hir/src/module.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1a860dba38225a4d3e122eaf49c926479826becf/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a860dba38225a4d3e122eaf49c926479826becf/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule.rs?ref=1a860dba38225a4d3e122eaf49c926479826becf", "patch": "@@ -13,8 +13,8 @@ use ra_db::{SourceRootId, FileId, Cancelable};\n use relative_path::RelativePathBuf;\n \n use crate::{\n-    DefKind, DefLoc, DefId, Path, PathKind, HirDatabase, SourceItemId, SourceFileItemId, Crate,\n-    Name,\n+    Def, DefKind, DefLoc, DefId,\n+    Name, Path, PathKind, HirDatabase, SourceItemId, SourceFileItemId, Crate,\n     arena::{Arena, Id},\n };\n \n@@ -139,13 +139,8 @@ impl Module {\n             } else {\n                 return Ok(PerNs::none());\n             };\n-            let module = match curr.loc(db) {\n-                DefLoc {\n-                    kind: DefKind::Module,\n-                    source_root_id,\n-                    module_id,\n-                    ..\n-                } => Module::new(db, source_root_id, module_id)?,\n+            let module = match curr.resolve(db)? {\n+                Def::Module(it) => it,\n                 // TODO here would be the place to handle enum variants...\n                 _ => return Ok(PerNs::none()),\n             };"}]}