{"sha": "87e9dee884988aa4385723ec08d69c548f7f50a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZTlkZWU4ODQ5ODhhYTQzODU3MjNlYzA4ZDY5YzU0OGY3ZjUwYTI=", "commit": {"author": {"name": "krk", "email": "keremkat@gmail.com", "date": "2019-06-10T17:25:00Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-06-14T07:41:47Z"}, "message": "Use RedundantStaticLifetime in StaticStatic.", "tree": {"sha": "11ef2443f2b06db023d83eec7163f9ba738abdfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11ef2443f2b06db023d83eec7163f9ba738abdfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87e9dee884988aa4385723ec08d69c548f7f50a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl0DT7sACgkQaTCGhp1Q\nZjfBahAAr/WSRyK+kgHKSTHQnECw75L2aI1SV8bVvXfCyjM+EAyJYb7r686PSvwi\n+TyS0JnEi2ffTAbN5eiEnl5uZIyONsnMp+bNaaJ8rK4gABLG2yTWHmZPmbO+JDHD\ntYxnmK52iety6CgtKcDwfJssrIqX9jxi21Ffpxu88LmDYpIi7P8G5CTxn/sZFXYX\nAvNTsmusUGljNPXV/DTazi/xCoBGhZl2W1NR9HkitNdAU7IbclCD2bmfkXOX5ibu\nse2QiArjlJb6TLCSSVuqz37zmGnMC5lQll1flO2wEvLJL5uz9xE91G0aZm9Pt7Ez\n9k0APZ31Rz9UYzC2bPGm+/uHvhrVi1mg+4TLDA0WO+0wiTwqygmEAY+BB5Oot9Fp\nfzxAE+EBjyxHlsra35jpZ9skLWJTFzlaNGVlX/Qqufh3GaY3fJLAk/gM3iIFYfME\n6UttbBiBa8GhYTnDFgK60erMYV3T86aa/0NVrWm2GT0J7RleLFErd2kIFTdGr3gH\n/5SPRDJhHLoQp73m47sJD/ecLly4fefh7IS79geIBjL9PzDdaLT5PqcPW6620chH\nXovsZNOR8QDIIDJjJY8ebRPlY2U/jwjSik3VJ4EiEtFhoCvOcsqCK9xlFaOwPBiE\ncUsYj4ZXbOQm+mPyJYgoUufMhrbQ+bIlSkqjhY98GnK5lItUP2E=\n=0sUo\n-----END PGP SIGNATURE-----", "payload": "tree 11ef2443f2b06db023d83eec7163f9ba738abdfb\nparent ff1b533c1383a6dbde3f1d3d5fe467b627281d09\nauthor krk <keremkat@gmail.com> 1560187500 +0200\ncommitter flip1995 <hello@philkrones.com> 1560498107 +0200\n\nUse RedundantStaticLifetime in StaticStatic.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87e9dee884988aa4385723ec08d69c548f7f50a2", "html_url": "https://github.com/rust-lang/rust/commit/87e9dee884988aa4385723ec08d69c548f7f50a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87e9dee884988aa4385723ec08d69c548f7f50a2/comments", "author": {"login": "krk", "id": 1447853, "node_id": "MDQ6VXNlcjE0NDc4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1447853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krk", "html_url": "https://github.com/krk", "followers_url": "https://api.github.com/users/krk/followers", "following_url": "https://api.github.com/users/krk/following{/other_user}", "gists_url": "https://api.github.com/users/krk/gists{/gist_id}", "starred_url": "https://api.github.com/users/krk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krk/subscriptions", "organizations_url": "https://api.github.com/users/krk/orgs", "repos_url": "https://api.github.com/users/krk/repos", "events_url": "https://api.github.com/users/krk/events{/privacy}", "received_events_url": "https://api.github.com/users/krk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff1b533c1383a6dbde3f1d3d5fe467b627281d09", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff1b533c1383a6dbde3f1d3d5fe467b627281d09", "html_url": "https://github.com/rust-lang/rust/commit/ff1b533c1383a6dbde3f1d3d5fe467b627281d09"}], "stats": {"total": 54, "additions": 5, "deletions": 49}, "files": [{"sha": "518cb5e7a7ac2455724e2a069262201c6ad445a2", "filename": "clippy_lints/src/static_static_lifetime.rs", "status": "modified", "additions": 5, "deletions": 49, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/87e9dee884988aa4385723ec08d69c548f7f50a2/clippy_lints%2Fsrc%2Fstatic_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87e9dee884988aa4385723ec08d69c548f7f50a2/clippy_lints%2Fsrc%2Fstatic_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstatic_static_lifetime.rs?ref=87e9dee884988aa4385723ec08d69c548f7f50a2", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{in_macro_or_desugar, snippet, span_lint_and_then};\n+use crate::redundant_static_lifetime::RedundantStaticLifetime;\n+use crate::utils::in_macro_or_desugar;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n-use rustc_errors::Applicability;\n use syntax::ast::*;\n \n declare_clippy_lint! {\n@@ -31,51 +31,9 @@ declare_lint_pass!(StaticStatic => [STATIC_STATIC_LIFETIME]);\n impl StaticStatic {\n     // Recursively visit types\n     fn visit_type(&mut self, ty: &Ty, cx: &EarlyContext<'_>) {\n-        match ty.node {\n-            // Be careful of nested structures (arrays and tuples)\n-            TyKind::Array(ref ty, _) => {\n-                self.visit_type(&*ty, cx);\n-            },\n-            TyKind::Tup(ref tup) => {\n-                for tup_ty in tup {\n-                    self.visit_type(&*tup_ty, cx);\n-                }\n-            },\n-            // This is what we are looking for !\n-            TyKind::Rptr(ref optional_lifetime, ref borrow_type) => {\n-                // Match the 'static lifetime\n-                if let Some(lifetime) = *optional_lifetime {\n-                    match borrow_type.ty.node {\n-                        TyKind::Path(..) | TyKind::Slice(..) | TyKind::Array(..) | TyKind::Tup(..) => {\n-                            if lifetime.ident.name == syntax::symbol::kw::StaticLifetime {\n-                                let snip = snippet(cx, borrow_type.ty.span, \"<type>\");\n-                                let sugg = format!(\"&{}\", snip);\n-                                span_lint_and_then(\n-                                    cx,\n-                                    STATIC_STATIC_LIFETIME,\n-                                    lifetime.ident.span,\n-                                    \"Statics have by default a `'static` lifetime\",\n-                                    |db| {\n-                                        db.span_suggestion(\n-                                            ty.span,\n-                                            \"consider removing `'static`\",\n-                                            sugg,\n-                                            Applicability::MachineApplicable, //snippet\n-                                        );\n-                                    },\n-                                );\n-                            }\n-                        },\n-                        _ => {},\n-                    }\n-                }\n-                self.visit_type(&*borrow_type.ty, cx);\n-            },\n-            TyKind::Slice(ref ty) => {\n-                self.visit_type(ty, cx);\n-            },\n-            _ => {},\n-        }\n+        let mut rsl =\n+            RedundantStaticLifetime::new(STATIC_STATIC_LIFETIME, \"Statics have by default a `'static` lifetime\");\n+        rsl.visit_type(ty, cx)\n     }\n }\n \n@@ -88,6 +46,4 @@ impl EarlyLintPass for StaticStatic {\n             }\n         }\n     }\n-\n-    // Don't check associated consts because `'static` cannot be elided on those (issue #2438)\n }"}]}