{"sha": "07b64bfd3a292cda71f7e0e2211691feef649a75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YjY0YmZkM2EyOTJjZGE3MWY3ZTBlMjIxMTY5MWZlZWY2NDlhNzU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-09-11T15:58:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-09-11T16:21:10Z"}, "message": "interpreter PointerArithmetic: use new Size helper methods", "tree": {"sha": "027ed5e33c71415ecd49b6acd5d1b6c809890f20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/027ed5e33c71415ecd49b6acd5d1b6c809890f20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07b64bfd3a292cda71f7e0e2211691feef649a75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07b64bfd3a292cda71f7e0e2211691feef649a75", "html_url": "https://github.com/rust-lang/rust/commit/07b64bfd3a292cda71f7e0e2211691feef649a75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07b64bfd3a292cda71f7e0e2211691feef649a75/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "641e02f388acc6b1d316a59c605a32d1711a8758", "url": "https://api.github.com/repos/rust-lang/rust/commits/641e02f388acc6b1d316a59c605a32d1711a8758", "html_url": "https://github.com/rust-lang/rust/commit/641e02f388acc6b1d316a59c605a32d1711a8758"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "c9dc5a0f3b5ec22c3111cbc5198f4f67f85ad823", "filename": "compiler/rustc_middle/src/mir/interpret/pointer.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/07b64bfd3a292cda71f7e0e2211691feef649a75/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fpointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b64bfd3a292cda71f7e0e2211691feef649a75/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fpointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fpointer.rs?ref=07b64bfd3a292cda71f7e0e2211691feef649a75", "patch": "@@ -3,7 +3,7 @@ use super::{AllocId, InterpResult};\n use rustc_macros::HashStable;\n use rustc_target::abi::{HasDataLayout, Size};\n \n-use std::convert::TryFrom;\n+use std::convert::{TryFrom, TryInto};\n use std::fmt;\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -20,29 +20,27 @@ pub trait PointerArithmetic: HasDataLayout {\n \n     #[inline]\n     fn machine_usize_max(&self) -> u64 {\n-        let max_usize_plus_1 = 1u128 << self.pointer_size().bits();\n-        u64::try_from(max_usize_plus_1 - 1).unwrap()\n+        self.pointer_size().unsigned_int_max().try_into().unwrap()\n     }\n \n     #[inline]\n     fn machine_isize_min(&self) -> i64 {\n-        let max_isize_plus_1 = 1i128 << (self.pointer_size().bits() - 1);\n-        i64::try_from(-max_isize_plus_1).unwrap()\n+        self.pointer_size().signed_int_min().try_into().unwrap()\n     }\n \n     #[inline]\n     fn machine_isize_max(&self) -> i64 {\n-        let max_isize_plus_1 = 1u128 << (self.pointer_size().bits() - 1);\n-        i64::try_from(max_isize_plus_1 - 1).unwrap()\n+        self.pointer_size().signed_int_max().try_into().unwrap()\n     }\n \n     #[inline]\n     fn machine_usize_to_isize(&self, val: u64) -> i64 {\n         let val = val as i64;\n-        // Now clamp into the machine_isize range.\n+        // Now wrap-around into the machine_isize range.\n         if val > self.machine_isize_max() {\n             // This can only happen the the ptr size is < 64, so we know max_usize_plus_1 fits into\n             // i64.\n+            debug_assert!(self.pointer_size().bits() < 64);\n             let max_usize_plus_1 = 1u128 << self.pointer_size().bits();\n             val - i64::try_from(max_usize_plus_1).unwrap()\n         } else {"}]}