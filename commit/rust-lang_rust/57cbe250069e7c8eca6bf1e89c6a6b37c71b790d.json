{"sha": "57cbe250069e7c8eca6bf1e89c6a6b37c71b790d", "node_id": "C_kwDOAAsO6NoAKDU3Y2JlMjUwMDY5ZTdjOGVjYTZiZjFlODljNmE2YjM3YzcxYjc5MGQ", "commit": {"author": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-06-02T17:07:28Z"}, "committer": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-06-06T00:40:36Z"}, "message": "cleanup some skip_binder -> subst_identity", "tree": {"sha": "d77299555135f0713308c144a11e96df002ed6d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d77299555135f0713308c144a11e96df002ed6d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d", "html_url": "https://github.com/rust-lang/rust/commit/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d/comments", "author": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6d4725c76f3b526c74454bc51afdf6daf133506", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d4725c76f3b526c74454bc51afdf6daf133506", "html_url": "https://github.com/rust-lang/rust/commit/e6d4725c76f3b526c74454bc51afdf6daf133506"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "c0d591430f7fc4efff2c6b22aa301e9157ac792b", "filename": "compiler/rustc_middle/src/ty/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs?ref=57cbe250069e7c8eca6bf1e89c6a6b37c71b790d", "patch": "@@ -586,7 +586,7 @@ impl<'tcx> Instance<'tcx> {\n         if let Some(substs) = self.substs_for_mir_body() {\n             v.subst(tcx, substs)\n         } else {\n-            v.skip_binder()\n+            v.subst_identity()\n         }\n     }\n "}, {"sha": "5f12f1937c06c120895e5b59efd21575d4514187", "filename": "compiler/rustc_mir_transform/src/shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs?ref=57cbe250069e7c8eca6bf1e89c6a6b37c71b790d", "patch": "@@ -647,7 +647,7 @@ fn build_call_shim<'tcx>(\n     let mut sig = if let Some(sig_substs) = sig_substs {\n         sig.subst(tcx, &sig_substs)\n     } else {\n-        sig.skip_binder()\n+        sig.subst_identity()\n     };\n \n     if let CallKind::Indirect(fnty) = call_kind {"}, {"sha": "9183fdaa08704f1987ef25de6446e05df10cf92e", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cbe250069e7c8eca6bf1e89c6a6b37c71b790d/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=57cbe250069e7c8eca6bf1e89c6a6b37c71b790d", "patch": "@@ -104,10 +104,10 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                         // the post-inference `trait_ref`, as it's more accurate.\n                         trait_: Some(clean_trait_ref_with_bindings(\n                             cx,\n-                            ty::Binder::dummy(trait_ref.skip_binder()),\n+                            ty::Binder::dummy(trait_ref.subst_identity()),\n                             ThinVec::new(),\n                         )),\n-                        for_: clean_middle_ty(ty::Binder::dummy(ty.skip_binder()), cx, None),\n+                        for_: clean_middle_ty(ty::Binder::dummy(ty.subst_identity()), cx, None),\n                         items: cx\n                             .tcx\n                             .associated_items(impl_def_id)\n@@ -116,7 +116,7 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                             .collect::<Vec<_>>(),\n                         polarity: ty::ImplPolarity::Positive,\n                         kind: ImplKind::Blanket(Box::new(clean_middle_ty(\n-                            ty::Binder::dummy(trait_ref.skip_binder().self_ty()),\n+                            ty::Binder::dummy(trait_ref.subst_identity().self_ty()),\n                             cx,\n                             None,\n                         ))),"}]}