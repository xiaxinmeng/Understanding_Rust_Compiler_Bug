{"sha": "017608f5d247d8d8e5d7468d02a5b6c4f686524e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNzYwOGY1ZDI0N2Q4ZDhlNWQ3NDY4ZDAyYTViNmM0ZjY4NjUyNGU=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-03-31T17:39:18Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-03-31T20:37:55Z"}, "message": "Use Place directly in codegen_place_to_pointer, it's Copy", "tree": {"sha": "ef97f397109a9c836f58a03e7d0dd9a620c236c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef97f397109a9c836f58a03e7d0dd9a620c236c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/017608f5d247d8d8e5d7468d02a5b6c4f686524e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl6DqiMACgkQgTGiTgx5\n768LZxAAmPmXCanviJAG/IETzZzw+YOpTRvXqbFB3IFIsq169mYpqBRyQOQGYYWs\n/X8iJnCWgWiULQsDIDTSoMBJ99XaV2dT7Q2PzsIWbjWQz9W40kujlUmaiRBGXyo/\nCIkT0GlDrMk2lLu+cpk/bO+iCtcw0hnlm5Lo8BPcEtXjoXQzl0GB55Ka669cpOaK\nPGafOfkc9RaW8M+XpVCLRiTZghGfeqknHUsLWD8nJcQokQ7KCdHf+j+6DGqUMCO8\n4GkJdnj/MEsynlTGM6yVPTJNpbf/NBmqL3PH3I96l1YG2qwKoMoqvQkpWEHEB04R\nO765qaQq1Sj81C6tl7ikuk5qpZpfRHpRb11ezQ/Uvb/PGVHMAyeo6M/7vXaRJ2dD\nV20mDnRuxUGHHulDPUmX16RdgozatESFykd6HcVX/qVGR7FB9mQCxgkPQpNBRKFo\nLTQhoNnvtfD9pUHWiBujHdc5i+nRmh0gl0doRHGHVBpYnz3jRU0VK7xO2ET39Dr1\nag4MRAZe4PmdbMD8T0ZXybGmxbkOl8unmlS0X6UD+d0osk1AednI1wPfwyMX5Xyw\nLD71F6GKHpAuxm07mq5TrNfEgfZ+egN9vwYBhdiEST0pZp6QwB052y0VMgGVghcu\n/JiqzHzhwkBBD4jGgwKDpzXQva6bZVo2XKqEOCuWkTay5/d0yM0=\n=4Wwg\n-----END PGP SIGNATURE-----", "payload": "tree ef97f397109a9c836f58a03e7d0dd9a620c236c4\nparent a865e779b0732806111d71d2dc0aa461dc9d53f9\nauthor Santiago Pastorino <spastorino@gmail.com> 1585676358 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1585687075 -0300\n\nUse Place directly in codegen_place_to_pointer, it's Copy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/017608f5d247d8d8e5d7468d02a5b6c4f686524e", "html_url": "https://github.com/rust-lang/rust/commit/017608f5d247d8d8e5d7468d02a5b6c4f686524e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/017608f5d247d8d8e5d7468d02a5b6c4f686524e/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a865e779b0732806111d71d2dc0aa461dc9d53f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a865e779b0732806111d71d2dc0aa461dc9d53f9", "html_url": "https://github.com/rust-lang/rust/commit/a865e779b0732806111d71d2dc0aa461dc9d53f9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ce681c729b2b5ec553ffc23762d362d9fd99b01b", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/017608f5d247d8d8e5d7468d02a5b6c4f686524e/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/017608f5d247d8d8e5d7468d02a5b6c4f686524e/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=017608f5d247d8d8e5d7468d02a5b6c4f686524e", "patch": "@@ -383,7 +383,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 (bx, OperandRef { val, layout: cast })\n             }\n \n-            mir::Rvalue::Ref(_, bk, ref place) => {\n+            mir::Rvalue::Ref(_, bk, place) => {\n                 let mk_ref = move |tcx: TyCtxt<'tcx>, ty: Ty<'tcx>| {\n                     tcx.mk_ref(\n                         tcx.lifetimes.re_erased,\n@@ -393,7 +393,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 self.codegen_place_to_pointer(bx, place, mk_ref)\n             }\n \n-            mir::Rvalue::AddressOf(mutability, ref place) => {\n+            mir::Rvalue::AddressOf(mutability, place) => {\n                 let mk_ptr = move |tcx: TyCtxt<'tcx>, ty: Ty<'tcx>| {\n                     tcx.mk_ptr(ty::TypeAndMut { ty, mutbl: mutability })\n                 };\n@@ -557,7 +557,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n     fn codegen_place_to_pointer(\n         &mut self,\n         mut bx: Bx,\n-        place: &mir::Place<'tcx>,\n+        place: mir::Place<'tcx>,\n         mk_ptr_ty: impl FnOnce(TyCtxt<'tcx>, Ty<'tcx>) -> Ty<'tcx>,\n     ) -> (Bx, OperandRef<'tcx, Bx::Value>) {\n         let cg_place = self.codegen_place(&mut bx, place.as_ref());"}]}