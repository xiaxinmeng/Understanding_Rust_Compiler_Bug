{"sha": "bea6fe0ec12439187617bfc27f23962d018f8463", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYTZmZTBlYzEyNDM5MTg3NjE3YmZjMjdmMjM5NjJkMDE4Zjg0NjM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-10T22:47:21Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-10T22:48:05Z"}, "message": "rustc: Trim down and rename trans_compare. Now only eq shape glue remains.", "tree": {"sha": "1d9b15d4523e7787f211dc830e578ca7a4317d9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d9b15d4523e7787f211dc830e578ca7a4317d9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bea6fe0ec12439187617bfc27f23962d018f8463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bea6fe0ec12439187617bfc27f23962d018f8463", "html_url": "https://github.com/rust-lang/rust/commit/bea6fe0ec12439187617bfc27f23962d018f8463", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bea6fe0ec12439187617bfc27f23962d018f8463/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10aa849d28d74c2c332f24a0da55833c95d91ab1", "url": "https://api.github.com/repos/rust-lang/rust/commits/10aa849d28d74c2c332f24a0da55833c95d91ab1", "html_url": "https://github.com/rust-lang/rust/commit/10aa849d28d74c2c332f24a0da55833c95d91ab1"}], "stats": {"total": 35, "additions": 9, "deletions": 26}, "files": [{"sha": "1a663ec260a648862b4b3a611d8ca38c0c03780b", "filename": "src/rustc/middle/trans/alt.rs", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/bea6fe0ec12439187617bfc27f23962d018f8463/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea6fe0ec12439187617bfc27f23962d018f8463/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs?ref=bea6fe0ec12439187617bfc27f23962d018f8463", "patch": "@@ -428,32 +428,18 @@ impl branch_kind : cmp::Eq {\n }\n \n // Compiles a comparison between two things.\n-fn trans_compare(cx: block, op: ast::binop, lhs: ValueRef,\n-                 _lhs_t: ty::t, rhs: ValueRef, rhs_t: ty::t) -> Result {\n-    let _icx = cx.insn_ctxt(\"trans_compare\");\n+fn compare_values(cx: block, lhs: ValueRef, rhs: ValueRef, rhs_t: ty::t) ->\n+                  Result {\n+    let _icx = cx.insn_ctxt(\"compare_values\");\n     if ty::type_is_scalar(rhs_t) {\n-      let rs = compare_scalar_types(cx, lhs, rhs, rhs_t, op);\n+      let rs = compare_scalar_types(cx, lhs, rhs, rhs_t, ast::eq);\n       return rslt(rs.bcx, rs.val);\n     }\n \n     // Determine the operation we need.\n-    let llop = {\n-        match op {\n-          ast::eq | ast::ne => C_u8(abi::cmp_glue_op_eq),\n-          ast::lt | ast::ge => C_u8(abi::cmp_glue_op_lt),\n-          ast::le | ast::gt => C_u8(abi::cmp_glue_op_le),\n-          _ => cx.tcx().sess.bug(~\"trans_compare got non-comparison-op\")\n-        }\n-    };\n-\n+    let llop = C_u8(abi::cmp_glue_op_eq);\n     let cmpval = glue::call_cmp_glue(cx, lhs, rhs, rhs_t, llop);\n-\n-    // Invert the result if necessary.\n-    match op {\n-      ast::eq | ast::lt | ast::le => rslt(cx, cmpval),\n-      ast::ne | ast::ge | ast::gt => rslt(cx, Not(cx, cmpval)),\n-      _ => cx.tcx().sess.bug(~\"trans_compare got non-comparison-op\")\n-    }\n+    rslt(cx, cmpval)\n }\n \n fn compile_submatch(bcx: block, m: match_, vals: ~[ValueRef],\n@@ -663,15 +649,12 @@ fn compile_submatch(bcx: block, m: match_, vals: ~[ValueRef],\n                     do with_scope_result(bcx, None, ~\"compare_scope\") |bcx| {\n                         match trans_opt(bcx, opt) {\n                             single_result(\n-                                Result {bcx, val}) =>\n-                            {\n-                                trans_compare(bcx, ast::eq, test_val,\n-                                              t, val, t)\n+                                Result {bcx, val}) => {\n+                                compare_values(bcx, test_val, val, t)\n                             }\n                             range_result(\n                                 Result {val: vbegin, _},\n-                                Result {bcx, val: vend}) =>\n-                            {\n+                                Result {bcx, val: vend}) => {\n                                 let Result {bcx, val: llge} =\n                                     compare_scalar_types(bcx, test_val,\n                                                          vbegin, t, ast::ge);"}]}