{"sha": "54a16aea6a3b6a765ebf1821d339456c87f6e82c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YTE2YWVhNmEzYjZhNzY1ZWJmMTgyMWQzMzk0NTZjODdmNmU4MmM=", "commit": {"author": {"name": "Jordan Rhee", "email": "jordanrh@microsoft.com", "date": "2018-09-07T15:41:16Z"}, "committer": {"name": "Jordan Rhee", "email": "jordanrh@microsoft.com", "date": "2018-09-07T15:41:16Z"}, "message": "Fix tidy errors", "tree": {"sha": "45e403e10bd6f24eb05dcb8365adb331e4814af5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45e403e10bd6f24eb05dcb8365adb331e4814af5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54a16aea6a3b6a765ebf1821d339456c87f6e82c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54a16aea6a3b6a765ebf1821d339456c87f6e82c", "html_url": "https://github.com/rust-lang/rust/commit/54a16aea6a3b6a765ebf1821d339456c87f6e82c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54a16aea6a3b6a765ebf1821d339456c87f6e82c/comments", "author": {"login": "jordanrh1", "id": 11446053, "node_id": "MDQ6VXNlcjExNDQ2MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/11446053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jordanrh1", "html_url": "https://github.com/jordanrh1", "followers_url": "https://api.github.com/users/jordanrh1/followers", "following_url": "https://api.github.com/users/jordanrh1/following{/other_user}", "gists_url": "https://api.github.com/users/jordanrh1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jordanrh1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jordanrh1/subscriptions", "organizations_url": "https://api.github.com/users/jordanrh1/orgs", "repos_url": "https://api.github.com/users/jordanrh1/repos", "events_url": "https://api.github.com/users/jordanrh1/events{/privacy}", "received_events_url": "https://api.github.com/users/jordanrh1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jordanrh1", "id": 11446053, "node_id": "MDQ6VXNlcjExNDQ2MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/11446053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jordanrh1", "html_url": "https://github.com/jordanrh1", "followers_url": "https://api.github.com/users/jordanrh1/followers", "following_url": "https://api.github.com/users/jordanrh1/following{/other_user}", "gists_url": "https://api.github.com/users/jordanrh1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jordanrh1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jordanrh1/subscriptions", "organizations_url": "https://api.github.com/users/jordanrh1/orgs", "repos_url": "https://api.github.com/users/jordanrh1/repos", "events_url": "https://api.github.com/users/jordanrh1/events{/privacy}", "received_events_url": "https://api.github.com/users/jordanrh1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b081a49a0701e6d95bc868a526138bc7a3cf6d46", "url": "https://api.github.com/repos/rust-lang/rust/commits/b081a49a0701e6d95bc868a526138bc7a3cf6d46", "html_url": "https://github.com/rust-lang/rust/commit/b081a49a0701e6d95bc868a526138bc7a3cf6d46"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "832a0aff71be1b6e4dc434de60245ed7673b653a", "filename": "src/libpanic_unwind/seh.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a16aea6a3b6a765ebf1821d339456c87f6e82c/src%2Flibpanic_unwind%2Fseh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a16aea6a3b6a765ebf1821d339456c87f6e82c/src%2Flibpanic_unwind%2Fseh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fseh.rs?ref=54a16aea6a3b6a765ebf1821d339456c87f6e82c", "patch": "@@ -119,8 +119,6 @@ mod imp {\n     }\n }\n \n-// TODO: this needs to be validated when WinEH for ARM is implemented in LLVM\n-// It looks like ARM and ARM64 use the same _TypeInfo semantics as x64\n #[cfg(any(target_arch = \"x86_64\", target_arch = \"arm\"))]\n #[macro_use]\n mod imp {"}, {"sha": "f4bd9c22bb93fc1d1637c2d8e8a0d4088cd69c4d", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54a16aea6a3b6a765ebf1821d339456c87f6e82c/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a16aea6a3b6a765ebf1821d339456c87f6e82c/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=54a16aea6a3b6a765ebf1821d339456c87f6e82c", "patch": "@@ -833,7 +833,8 @@ pub struct CONTEXT {\n // will not appear in the final documentation. This should be also defined for\n // other architectures supported by Windows such as ARM, and for historical\n // interest, maybe MIPS and PowerPC as well.\n-#[cfg(all(rustdoc, not(any(target_arch = \"x86_64\", target_arch = \"x86\", target_arch = \"aarch64\", target_arch = \"arm\"))))]\n+#[cfg(all(rustdoc, not(any(target_arch = \"x86_64\", target_arch = \"x86\",\n+      target_arch = \"aarch64\", target_arch = \"arm\"))))]\n pub enum CONTEXT {}\n \n #[cfg(target_arch = \"aarch64\")]"}]}