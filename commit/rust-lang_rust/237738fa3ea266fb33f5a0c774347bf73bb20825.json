{"sha": "237738fa3ea266fb33f5a0c774347bf73bb20825", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNzczOGZhM2VhMjY2ZmIzM2Y1YTBjNzc0MzQ3YmY3M2JiMjA4MjU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-24T04:46:49Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-24T14:26:26Z"}, "message": "rustdoc: Add a --crate-name option\n\nLike rustc, this is required by cargo to build documentation.", "tree": {"sha": "aa9548dd759a6d03cb506ff6d3e5e8bb33b06ed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa9548dd759a6d03cb506ff6d3e5e8bb33b06ed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/237738fa3ea266fb33f5a0c774347bf73bb20825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/237738fa3ea266fb33f5a0c774347bf73bb20825", "html_url": "https://github.com/rust-lang/rust/commit/237738fa3ea266fb33f5a0c774347bf73bb20825", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/237738fa3ea266fb33f5a0c774347bf73bb20825/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "103d888f659f642d251e47eed4ded2e1e4ce03d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/103d888f659f642d251e47eed4ded2e1e4ce03d1", "html_url": "https://github.com/rust-lang/rust/commit/103d888f659f642d251e47eed4ded2e1e4ce03d1"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "39b2511fde4f3e49ea6756224d8a8fbcb1f5564a", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/237738fa3ea266fb33f5a0c774347bf73bb20825/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/237738fa3ea266fb33f5a0c774347bf73bb20825/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=237738fa3ea266fb33f5a0c774347bf73bb20825", "patch": "@@ -102,6 +102,7 @@ pub fn opts() -> Vec<getopts::OptGroup> {\n         optopt(\"w\", \"output-format\", \"the output type to write\",\n                \"[html|json]\"),\n         optopt(\"o\", \"output\", \"where to place the output\", \"PATH\"),\n+        optopt(\"\", \"crate-name\", \"specify the name of this crate\", \"NAME\"),\n         optmulti(\"L\", \"library-path\", \"directory to add to crate search path\",\n                  \"DIR\"),\n         optmulti(\"\", \"cfg\", \"pass a --cfg to rustc\", \"\"),\n@@ -323,7 +324,7 @@ fn rust_input(cratefile: &str, externs: core::Externs, matches: &getopts::Matche\n \n     let cr = Path::new(cratefile);\n     info!(\"starting to run rustc\");\n-    let (krate, analysis) = std::task::try(proc() {\n+    let (mut krate, analysis) = std::task::try(proc() {\n         let cr = cr;\n         core::run_core(libs.move_iter().collect(),\n                        cfgs,\n@@ -333,6 +334,11 @@ fn rust_input(cratefile: &str, externs: core::Externs, matches: &getopts::Matche\n     info!(\"finished with rustc\");\n     analysiskey.replace(Some(analysis));\n \n+    match matches.opt_str(\"crate-name\") {\n+        Some(name) => krate.name = name,\n+        None => {}\n+    }\n+\n     // Process all of the crate attributes, extracting plugin metadata along\n     // with the passes which we are supposed to run.\n     match krate.module.get_ref().doc_list() {"}]}