{"sha": "f4eb44e4df5abaf2124d48f45cc4c8b1429d6bfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZWI0NGU0ZGY1YWJhZjIxMjRkNDhmNDVjYzRjOGIxNDI5ZDZiZmE=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2015-12-29T12:59:19Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2015-12-30T15:23:49Z"}, "message": "whitespace after colon, not before", "tree": {"sha": "10884d66520ac31e73bc1897a11c85b801ee3a27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10884d66520ac31e73bc1897a11c85b801ee3a27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4eb44e4df5abaf2124d48f45cc4c8b1429d6bfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4eb44e4df5abaf2124d48f45cc4c8b1429d6bfa", "html_url": "https://github.com/rust-lang/rust/commit/f4eb44e4df5abaf2124d48f45cc4c8b1429d6bfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4eb44e4df5abaf2124d48f45cc4c8b1429d6bfa/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66a12f504f149bfa487f2353df003482802a18b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/66a12f504f149bfa487f2353df003482802a18b4", "html_url": "https://github.com/rust-lang/rust/commit/66a12f504f149bfa487f2353df003482802a18b4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "32a54d6e357b3d34b0f83851ad205ba24673d2c6", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4eb44e4df5abaf2124d48f45cc4c8b1429d6bfa/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4eb44e4df5abaf2124d48f45cc4c8b1429d6bfa/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f4eb44e4df5abaf2124d48f45cc4c8b1429d6bfa", "patch": "@@ -4612,7 +4612,7 @@ impl<'a> Parser<'a> {\n     fn complain_if_pub_macro(&mut self, visa: Visibility, span: Span) {\n         match visa {\n             Public => {\n-                let is_macro_rules :bool = match self.token {\n+                let is_macro_rules: bool = match self.token {\n                     token::Ident(sid, _) => sid.name == intern(\"macro_rules\"),\n                     _ => false,\n                 };"}]}