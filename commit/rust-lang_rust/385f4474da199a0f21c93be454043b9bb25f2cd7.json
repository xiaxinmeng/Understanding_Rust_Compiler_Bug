{"sha": "385f4474da199a0f21c93be454043b9bb25f2cd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NWY0NDc0ZGExOTlhMGYyMWM5M2JlNDU0MDQzYjliYjI1ZjJjZDc=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-08-05T07:30:24Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-08-05T07:31:08Z"}, "message": "Add tests for auto fixable let_unit suggestion", "tree": {"sha": "7ae9a090d128a284daaf4f3651508ba180275ec6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ae9a090d128a284daaf4f3651508ba180275ec6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/385f4474da199a0f21c93be454043b9bb25f2cd7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl1H2zwACgkQaTCGhp1Q\nZjdbKA/+PHPLPK71eP6S/JN5B3gPPK2/HTYfNATJLZv9nr5H+nbGr55oFMi3gnDV\nC5E17wSrLs6otmD8UBfXfbwq5T7J0wpF7cQB9FYKRCQ4H6I1XxNJEYKzJ04ky7fk\nKxo5k0JWVhx9JBAQzSZIBgGg5QHAPm3tiEYbNX07zj6+CXhrZPem9gHaDkoXrzHZ\nI5jG/zec8ZVhax4gUNTRx0pq3xjSLzBHJ8Frhgc+KxVhA8SW5RdCzHw5gvu9dg/r\nSFMAehV7Fmo5VreiU4VYKuhexHL6i6iVcSMC1B1CzObRTO1fC5ofVf3zR3Xz9KYb\ngWPUfZX+RmwMvFPRtteB9E62lEG1k1W9z1rzc/XRWZ10N/SxcQd/zepGYGDrFbsp\nCQ9sNhQixXhixh5FLTicCcbMBSIrhA1xUdOcs5D/a3X23tV1c0NJjvAS7QrOn4QV\ny5IppM3N9RGAXle0SU4NC1qOqJGcuegkUqXEJyujDHtsxNwngb8TX55xMFO2leq8\nYQi5RSrcH7vrnGjAHgJAHbO8uYydM+1s9F0CLm2frsCtDjGZKU9V6JmzerdY6P7l\nVBzS6KBjzgD1hM/IMHgjTl5nnY+ZJCM6yhKvM41pDwqd2gTt2q+vU5v1hK2rzYIo\nf4IT+2ZM6kYi7bgQUeQNMQrIk60wBN0vmQNPdyBLJcWkEEeZq0M=\n=gQdY\n-----END PGP SIGNATURE-----", "payload": "tree 7ae9a090d128a284daaf4f3651508ba180275ec6\nparent c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f\nauthor flip1995 <hello@philkrones.com> 1564990224 +0200\ncommitter flip1995 <hello@philkrones.com> 1564990268 +0200\n\nAdd tests for auto fixable let_unit suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/385f4474da199a0f21c93be454043b9bb25f2cd7", "html_url": "https://github.com/rust-lang/rust/commit/385f4474da199a0f21c93be454043b9bb25f2cd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/385f4474da199a0f21c93be454043b9bb25f2cd7/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f", "html_url": "https://github.com/rust-lang/rust/commit/c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f"}], "stats": {"total": 115, "additions": 108, "deletions": 7}, "files": [{"sha": "f398edc23cb5e0bdd019bfea348570872fb5d39d", "filename": "tests/ui/let_unit.fixed", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/385f4474da199a0f21c93be454043b9bb25f2cd7/tests%2Fui%2Flet_unit.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/385f4474da199a0f21c93be454043b9bb25f2cd7/tests%2Fui%2Flet_unit.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.fixed?ref=385f4474da199a0f21c93be454043b9bb25f2cd7", "patch": "@@ -0,0 +1,63 @@\n+// run-rustfix\n+\n+#![warn(clippy::let_unit_value)]\n+#![allow(clippy::no_effect)]\n+#![allow(unused_variables)]\n+\n+macro_rules! let_and_return {\n+    ($n:expr) => {{\n+        let ret = $n;\n+    }};\n+}\n+\n+fn main() {\n+    println!(\"x\");\n+    let _y = 1; // this is fine\n+    let _z = ((), 1); // this as well\n+    if true {\n+        ();\n+    }\n+\n+    consume_units_with_for_loop(); // should be fine as well\n+\n+    multiline_sugg();\n+\n+    let_and_return!(()) // should be fine\n+}\n+\n+// Related to issue #1964\n+fn consume_units_with_for_loop() {\n+    // `for_let_unit` lint should not be triggered by consuming them using for loop.\n+    let v = vec![(), (), ()];\n+    let mut count = 0;\n+    for _ in v {\n+        count += 1;\n+    }\n+    assert_eq!(count, 3);\n+\n+    // Same for consuming from some other Iterator<Item = ()>.\n+    let (tx, rx) = ::std::sync::mpsc::channel();\n+    tx.send(()).unwrap();\n+    drop(tx);\n+\n+    count = 0;\n+    for _ in rx.iter() {\n+        count += 1;\n+    }\n+    assert_eq!(count, 1);\n+}\n+\n+fn multiline_sugg() {\n+    let v: Vec<u8> = vec![2];\n+\n+    v\n+        .into_iter()\n+        .map(|i| i * 2)\n+        .filter(|i| i % 2 == 0)\n+        .map(|_| ())\n+        .next()\n+        .unwrap();\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct ContainsUnit(()); // should be fine"}, {"sha": "af5b1fb2ac7e4d526eb6eaa47025d75db8a7992d", "filename": "tests/ui/let_unit.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/385f4474da199a0f21c93be454043b9bb25f2cd7/tests%2Fui%2Flet_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/385f4474da199a0f21c93be454043b9bb25f2cd7/tests%2Fui%2Flet_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.rs?ref=385f4474da199a0f21c93be454043b9bb25f2cd7", "patch": "@@ -1,4 +1,7 @@\n+// run-rustfix\n+\n #![warn(clippy::let_unit_value)]\n+#![allow(clippy::no_effect)]\n #![allow(unused_variables)]\n \n macro_rules! let_and_return {\n@@ -17,6 +20,8 @@ fn main() {\n \n     consume_units_with_for_loop(); // should be fine as well\n \n+    multiline_sugg();\n+\n     let_and_return!(()) // should be fine\n }\n \n@@ -42,5 +47,17 @@ fn consume_units_with_for_loop() {\n     assert_eq!(count, 1);\n }\n \n+fn multiline_sugg() {\n+    let v: Vec<u8> = vec![2];\n+\n+    let _ = v\n+        .into_iter()\n+        .map(|i| i * 2)\n+        .filter(|i| i % 2 == 0)\n+        .map(|_| ())\n+        .next()\n+        .unwrap();\n+}\n+\n #[derive(Copy, Clone)]\n pub struct ContainsUnit(()); // should be fine"}, {"sha": "7130fcd870e369cefdcc89766f3a57219eebc509", "filename": "tests/ui/let_unit.stderr", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/385f4474da199a0f21c93be454043b9bb25f2cd7/tests%2Fui%2Flet_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/385f4474da199a0f21c93be454043b9bb25f2cd7/tests%2Fui%2Flet_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.stderr?ref=385f4474da199a0f21c93be454043b9bb25f2cd7", "patch": "@@ -1,16 +1,37 @@\n-error: this let-binding has unit value. Consider omitting `let _x =`\n-  --> $DIR/let_unit.rs:11:5\n+error: this let-binding has unit value\n+  --> $DIR/let_unit.rs:14:5\n    |\n LL |     let _x = println!(\"x\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `println!(\"x\");`\n    |\n    = note: `-D clippy::let-unit-value` implied by `-D warnings`\n \n-error: this let-binding has unit value. Consider omitting `let _a =`\n-  --> $DIR/let_unit.rs:15:9\n+error: this let-binding has unit value\n+  --> $DIR/let_unit.rs:18:9\n    |\n LL |         let _a = ();\n-   |         ^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^ help: omit the `let` binding: `();`\n \n-error: aborting due to 2 previous errors\n+error: this let-binding has unit value\n+  --> $DIR/let_unit.rs:53:5\n+   |\n+LL | /     let _ = v\n+LL | |         .into_iter()\n+LL | |         .map(|i| i * 2)\n+LL | |         .filter(|i| i % 2 == 0)\n+LL | |         .map(|_| ())\n+LL | |         .next()\n+LL | |         .unwrap();\n+   | |__________________^\n+help: omit the `let` binding\n+   |\n+LL |     v\n+LL |         .into_iter()\n+LL |         .map(|i| i * 2)\n+LL |         .filter(|i| i % 2 == 0)\n+LL |         .map(|_| ())\n+LL |         .next()\n+ ...\n+\n+error: aborting due to 3 previous errors\n "}]}