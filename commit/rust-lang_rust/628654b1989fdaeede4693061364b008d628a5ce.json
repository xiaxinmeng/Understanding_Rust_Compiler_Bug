{"sha": "628654b1989fdaeede4693061364b008d628a5ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyODY1NGIxOTg5ZmRhZWVkZTQ2OTMwNjEzNjRiMDA4ZDYyOGE1Y2U=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-24T18:56:04Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-24T18:56:04Z"}, "message": "Rollup merge of #27244 - Detegr:master, r=eddyb\n\nHi all.\r\nThis is my first contribution to Rust and fixes an issue causing an invalid error message to be presented to the user when using unit struct as length of a repeat expression, issue #27008. The solution is based on suggestions by @oli-obk, but as I'm a complete newbie to this, I have no clue if I got them right :)\r\nThe biggest concern I have is that if the `NodeId` I'm returning is the correct one or not (it's not meaningful in this case but I think it would be nice to get it right).", "tree": {"sha": "9fe93358d6f2b253228df6b944fb950be39e6012", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fe93358d6f2b253228df6b944fb950be39e6012"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/628654b1989fdaeede4693061364b008d628a5ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/628654b1989fdaeede4693061364b008d628a5ce", "html_url": "https://github.com/rust-lang/rust/commit/628654b1989fdaeede4693061364b008d628a5ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/628654b1989fdaeede4693061364b008d628a5ce/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47c9c49602c70a9649353301ca90422e7762922b", "url": "https://api.github.com/repos/rust-lang/rust/commits/47c9c49602c70a9649353301ca90422e7762922b", "html_url": "https://github.com/rust-lang/rust/commit/47c9c49602c70a9649353301ca90422e7762922b"}, {"sha": "e981311ec2e019c13088d7e510e0c050da3bcb5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e981311ec2e019c13088d7e510e0c050da3bcb5e", "html_url": "https://github.com/rust-lang/rust/commit/e981311ec2e019c13088d7e510e0c050da3bcb5e"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "a349dab0f72ea990daffca4c82c5608b03ae4f2b", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/628654b1989fdaeede4693061364b008d628a5ce/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/628654b1989fdaeede4693061364b008d628a5ce/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=628654b1989fdaeede4693061364b008d628a5ce", "patch": "@@ -967,6 +967,9 @@ pub fn eval_const_expr_partial<'tcx>(tcx: &ty::ctxt<'tcx>,\n               Some(def::DefVariant(enum_def, variant_def, _)) => {\n                   (lookup_variant_by_id(tcx, enum_def, variant_def), None)\n               }\n+              Some(def::DefStruct(_)) => {\n+                  return Ok(ConstVal::Struct(e.id))\n+              }\n               _ => (None, None)\n           };\n           let const_expr = match const_expr {"}, {"sha": "2a4b98563ab9f207c524827eedbccc7a6ef72982", "filename": "src/test/compile-fail/issue-27008.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/628654b1989fdaeede4693061364b008d628a5ce/src%2Ftest%2Fcompile-fail%2Fissue-27008.rs", "raw_url": "https://github.com/rust-lang/rust/raw/628654b1989fdaeede4693061364b008d628a5ce/src%2Ftest%2Fcompile-fail%2Fissue-27008.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-27008.rs?ref=628654b1989fdaeede4693061364b008d628a5ce", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S;\n+\n+fn main() {\n+    let b = [0; S];\n+    //~^ ERROR mismatched types\n+    //~| expected `usize`\n+    //~| found `S`\n+    //~| expected usize\n+    //~| found struct `S`\n+    //~| ERROR expected positive integer for repeat count, found struct\n+}"}]}