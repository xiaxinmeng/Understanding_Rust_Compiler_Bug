{"sha": "a3ad012e2d33680d40b325258c0da532d0a884f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYWQwMTJlMmQzMzY4MGQ0MGIzMjUyNThjMGRhNTMyZDBhODg0ZjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-18T14:35:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-18T14:35:42Z"}, "message": "Auto merge of #53286 - nagisa:cast-assumes, r=eddyb\n\nDo not generate assumes for plain integer casts\n\nI gave up on making anything more elegant for now.\n\nr? @eddyb", "tree": {"sha": "406f62e7d2674d407998b5b99a1ea13402270a27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/406f62e7d2674d407998b5b99a1ea13402270a27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3ad012e2d33680d40b325258c0da532d0a884f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3ad012e2d33680d40b325258c0da532d0a884f3", "html_url": "https://github.com/rust-lang/rust/commit/a3ad012e2d33680d40b325258c0da532d0a884f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3ad012e2d33680d40b325258c0da532d0a884f3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7de3dea2b76786077ad51b31d167867e5ecdfdbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7de3dea2b76786077ad51b31d167867e5ecdfdbc", "html_url": "https://github.com/rust-lang/rust/commit/7de3dea2b76786077ad51b31d167867e5ecdfdbc"}, {"sha": "dc02a6070f899b87249efa8c09bb2b90dbe94b0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc02a6070f899b87249efa8c09bb2b90dbe94b0d", "html_url": "https://github.com/rust-lang/rust/commit/dc02a6070f899b87249efa8c09bb2b90dbe94b0d"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "7eac8e735edd444530bb68daa4ab8594819493a7", "filename": "src/librustc_codegen_llvm/mir/rvalue.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a3ad012e2d33680d40b325258c0da532d0a884f3/src%2Flibrustc_codegen_llvm%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ad012e2d33680d40b325258c0da532d0a884f3/src%2Flibrustc_codegen_llvm%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Frvalue.rs?ref=a3ad012e2d33680d40b325258c0da532d0a884f3", "patch": "@@ -304,7 +304,9 @@ impl FunctionCx<'a, 'll, 'tcx> {\n                                 // then `i1 1` (i.e. E::B) is effectively `i8 -1`.\n                                 signed = !scalar.is_bool() && s;\n \n-                                if scalar.valid_range.end() > scalar.valid_range.start() {\n+                                let er = scalar.valid_range_exclusive(bx.cx);\n+                                if er.end != er.start &&\n+                                   scalar.valid_range.end() > scalar.valid_range.start() {\n                                     // We want `table[e as usize]` to not\n                                     // have bound checks, and this is the most\n                                     // convenient place to put the `assume`."}, {"sha": "16b5241b29aa5a4d3b49cfb0852f938de41bde5d", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3ad012e2d33680d40b325258c0da532d0a884f3/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ad012e2d33680d40b325258c0da532d0a884f3/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=a3ad012e2d33680d40b325258c0da532d0a884f3", "patch": "@@ -596,7 +596,16 @@ pub struct Scalar {\n     pub value: Primitive,\n \n     /// Inclusive wrap-around range of valid values, that is, if\n-    /// min > max, it represents min..=u128::MAX followed by 0..=max.\n+    /// start > end, it represents `start..=max_value()`,\n+    /// followed by `0..=end`.\n+    ///\n+    /// That is, for an i8 primitive, a range of `254..=2` means following\n+    /// sequence:\n+    ///\n+    ///    254 (-2), 255 (-1), 0, 1, 2\n+    ///\n+    /// This is intended specifically to mirror LLVM\u2019s `!range` metadata,\n+    /// semantics.\n     // FIXME(eddyb) always use the shortest range, e.g. by finding\n     // the largest space between two consecutive valid values and\n     // taking everything else as the (shortest) valid range."}, {"sha": "a5a7d94a5536bc346a24ddb6c37e44e6ab74a623", "filename": "src/test/codegen/no-assumes-on-casts.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a3ad012e2d33680d40b325258c0da532d0a884f3/src%2Ftest%2Fcodegen%2Fno-assumes-on-casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ad012e2d33680d40b325258c0da532d0a884f3/src%2Ftest%2Fcodegen%2Fno-assumes-on-casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fno-assumes-on-casts.rs?ref=a3ad012e2d33680d40b325258c0da532d0a884f3", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+// compile-flags: -Cno-prepopulate-passes\n+\n+// CHECK-LABEL: fna\n+#[no_mangle]\n+pub fn fna(a: i16) -> i32 {\n+    a as i32\n+// CHECK-NOT: assume\n+// CHECK: sext\n+}\n+\n+// CHECK-LABEL: fnb\n+#[no_mangle]\n+pub fn fnb(a: u16) -> u32 {\n+    a as u32\n+// CHECK-NOT: assume\n+// CHECK: zext\n+}"}]}