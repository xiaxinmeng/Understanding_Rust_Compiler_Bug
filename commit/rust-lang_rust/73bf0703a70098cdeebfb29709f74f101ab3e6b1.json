{"sha": "73bf0703a70098cdeebfb29709f74f101ab3e6b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYmYwNzAzYTcwMDk4Y2RlZWJmYjI5NzA5Zjc0ZjEwMWFiM2U2YjE=", "commit": {"author": {"name": "Niklas Fiekas", "email": "niklas.fiekas@backscattering.de", "date": "2019-01-31T13:18:31Z"}, "committer": {"name": "Niklas Fiekas", "email": "niklas.fiekas@backscattering.de", "date": "2019-01-31T13:18:51Z"}, "message": "Add more tests for #[repr(align(x))] on enums", "tree": {"sha": "40e3f0dee5536e8b82357f44b9e624ccbe608db3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40e3f0dee5536e8b82357f44b9e624ccbe608db3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73bf0703a70098cdeebfb29709f74f101ab3e6b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73bf0703a70098cdeebfb29709f74f101ab3e6b1", "html_url": "https://github.com/rust-lang/rust/commit/73bf0703a70098cdeebfb29709f74f101ab3e6b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73bf0703a70098cdeebfb29709f74f101ab3e6b1/comments", "author": {"login": "niklasf", "id": 402777, "node_id": "MDQ6VXNlcjQwMjc3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/402777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niklasf", "html_url": "https://github.com/niklasf", "followers_url": "https://api.github.com/users/niklasf/followers", "following_url": "https://api.github.com/users/niklasf/following{/other_user}", "gists_url": "https://api.github.com/users/niklasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/niklasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niklasf/subscriptions", "organizations_url": "https://api.github.com/users/niklasf/orgs", "repos_url": "https://api.github.com/users/niklasf/repos", "events_url": "https://api.github.com/users/niklasf/events{/privacy}", "received_events_url": "https://api.github.com/users/niklasf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "niklasf", "id": 402777, "node_id": "MDQ6VXNlcjQwMjc3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/402777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niklasf", "html_url": "https://github.com/niklasf", "followers_url": "https://api.github.com/users/niklasf/followers", "following_url": "https://api.github.com/users/niklasf/following{/other_user}", "gists_url": "https://api.github.com/users/niklasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/niklasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niklasf/subscriptions", "organizations_url": "https://api.github.com/users/niklasf/orgs", "repos_url": "https://api.github.com/users/niklasf/repos", "events_url": "https://api.github.com/users/niklasf/events{/privacy}", "received_events_url": "https://api.github.com/users/niklasf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6f6101180f8f18008b819b4e438824048b90925", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6f6101180f8f18008b819b4e438824048b90925", "html_url": "https://github.com/rust-lang/rust/commit/c6f6101180f8f18008b819b4e438824048b90925"}], "stats": {"total": 64, "additions": 56, "deletions": 8}, "files": [{"sha": "8d72b1f6f0d24b99b1307706e6307a623b6e7499", "filename": "src/test/run-pass/structs-enums/align-enum.rs", "status": "modified", "additions": 42, "deletions": 4, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/73bf0703a70098cdeebfb29709f74f101ab3e6b1/src%2Ftest%2Frun-pass%2Fstructs-enums%2Falign-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73bf0703a70098cdeebfb29709f74f101ab3e6b1/src%2Ftest%2Frun-pass%2Fstructs-enums%2Falign-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstructs-enums%2Falign-enum.rs?ref=73bf0703a70098cdeebfb29709f74f101ab3e6b1", "patch": "@@ -5,13 +5,51 @@\n use std::mem;\n \n // Raising alignment\n-#[repr(align(8))]\n-enum Align8 {\n+#[repr(align(16))]\n+enum Align16 {\n     Foo { foo: u32 },\n     Bar { bar: u32 },\n }\n \n+// Raise alignment by maximum\n+#[repr(align(1), align(16))]\n+#[repr(align(32))]\n+#[repr(align(4))]\n+enum Align32 {\n+    Foo,\n+    Bar,\n+}\n+\n+// Not reducing alignment\n+#[repr(align(4))]\n+enum AlsoAlign16 {\n+    Foo { limb_with_align16: Align16 },\n+    Bar,\n+}\n+\n+// No niche for discriminant when used as limb\n+#[repr(align(16))]\n+struct NoNiche16(u64, u64);\n+\n+// Discriminant will require extra space, but enum needs to stay compatible\n+// with alignment 16\n+#[repr(align(1))]\n+enum AnotherAlign16 {\n+    Foo { limb_with_noniche16: NoNiche16 },\n+    Bar,\n+    Baz,\n+}\n+\n fn main() {\n-    assert_eq!(mem::align_of::<Align8>(), 8);\n-    assert_eq!(mem::size_of::<Align8>(), 8);\n+    assert_eq!(mem::align_of::<Align16>(), 16);\n+    assert_eq!(mem::size_of::<Align16>(), 16);\n+\n+    assert_eq!(mem::align_of::<Align32>(), 32);\n+    assert_eq!(mem::size_of::<Align32>(), 32);\n+\n+    assert_eq!(mem::align_of::<AlsoAlign16>(), 16);\n+    assert_eq!(mem::size_of::<AlsoAlign16>(), 16);\n+\n+    assert_eq!(mem::align_of::<AnotherAlign16>(), 16);\n+    assert_eq!(mem::size_of::<AnotherAlign16>(), 32);\n }"}, {"sha": "9ce89e82ca2256c4ac5fc54a92551f05ce57d2aa", "filename": "src/test/ui/repr/repr-align.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73bf0703a70098cdeebfb29709f74f101ab3e6b1/src%2Ftest%2Fui%2Frepr%2Frepr-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73bf0703a70098cdeebfb29709f74f101ab3e6b1/src%2Ftest%2Fui%2Frepr%2Frepr-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frepr%2Frepr-align.rs?ref=73bf0703a70098cdeebfb29709f74f101ab3e6b1", "patch": "@@ -1,3 +1,4 @@\n+#![feature(repr_align_enum)]\n #![allow(dead_code)]\n \n #[repr(align(16.0))] //~ ERROR: invalid `repr(align)` attribute: not an unsuffixed integer\n@@ -12,4 +13,7 @@ struct C(i32);\n #[repr(align(536870912))] // ok: this is the largest accepted alignment\n struct D(i32);\n \n+#[repr(align(15))] //~ ERROR: invalid `repr(align)` attribute: not a power of two\n+enum E { Left, Right }\n+\n fn main() {}"}, {"sha": "f1a5d88ace1fd15a55dac7bdbdf01a7d67dd9c83", "filename": "src/test/ui/repr/repr-align.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/73bf0703a70098cdeebfb29709f74f101ab3e6b1/src%2Ftest%2Fui%2Frepr%2Frepr-align.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73bf0703a70098cdeebfb29709f74f101ab3e6b1/src%2Ftest%2Fui%2Frepr%2Frepr-align.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frepr%2Frepr-align.stderr?ref=73bf0703a70098cdeebfb29709f74f101ab3e6b1", "patch": "@@ -1,21 +1,27 @@\n error[E0589]: invalid `repr(align)` attribute: not an unsuffixed integer\n-  --> $DIR/repr-align.rs:3:8\n+  --> $DIR/repr-align.rs:4:8\n    |\n LL | #[repr(align(16.0))] //~ ERROR: invalid `repr(align)` attribute: not an unsuffixed integer\n    |        ^^^^^^^^^^^\n \n error[E0589]: invalid `repr(align)` attribute: not a power of two\n-  --> $DIR/repr-align.rs:6:8\n+  --> $DIR/repr-align.rs:7:8\n    |\n LL | #[repr(align(15))] //~ ERROR: invalid `repr(align)` attribute: not a power of two\n    |        ^^^^^^^^^\n \n error[E0589]: invalid `repr(align)` attribute: larger than 2^29\n-  --> $DIR/repr-align.rs:9:8\n+  --> $DIR/repr-align.rs:10:8\n    |\n LL | #[repr(align(4294967296))] //~ ERROR: invalid `repr(align)` attribute: larger than 2^29\n    |        ^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error[E0589]: invalid `repr(align)` attribute: not a power of two\n+  --> $DIR/repr-align.rs:16:8\n+   |\n+LL | #[repr(align(15))] //~ ERROR: invalid `repr(align)` attribute: not a power of two\n+   |        ^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0589`."}]}