{"sha": "e20752de68fe336e9fa184bef0616e31c738452c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMDc1MmRlNjhmZTMzNmU5ZmExODRiZWYwNjE2ZTMxYzczODQ1MmM=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-08-18T06:26:43Z"}, "committer": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-08-18T06:49:57Z"}, "message": "Added labels to blocking conditions.", "tree": {"sha": "cc2280b968295fbe7c75244a5569c69ca00ef775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc2280b968295fbe7c75244a5569c69ca00ef775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e20752de68fe336e9fa184bef0616e31c738452c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e20752de68fe336e9fa184bef0616e31c738452c", "html_url": "https://github.com/rust-lang/rust/commit/e20752de68fe336e9fa184bef0616e31c738452c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e20752de68fe336e9fa184bef0616e31c738452c/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ff39ea448c60e5ab993bb4a32649e60de13184d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff39ea448c60e5ab993bb4a32649e60de13184d", "html_url": "https://github.com/rust-lang/rust/commit/7ff39ea448c60e5ab993bb4a32649e60de13184d"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "c41e26881fc659a9d0be01d71ee0745e034a8e41", "filename": "src/rt/rust_dom.cpp", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e20752de68fe336e9fa184bef0616e31c738452c/src%2Frt%2Frust_dom.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e20752de68fe336e9fa184bef0616e31c738452c/src%2Frt%2Frust_dom.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.cpp?ref=e20752de68fe336e9fa184bef0616e31c738452c", "patch": "@@ -363,17 +363,18 @@ rust_dom::log_state() {\n         log(rust_log::TASK, \"blocked tasks:\");\n         for (size_t i = 0; i < blocked_tasks.length(); i++) {\n             log(rust_log::TASK,\n-                \"\\t task: %s @0x%\" PRIxPTR \", blocked on: 0x%\" PRIxPTR,\n+                \"\\t task: %s @0x%\" PRIxPTR \", blocked on: 0x%\" PRIxPTR\n+                \" '%s'\",\n                 blocked_tasks[i]->name, blocked_tasks[i],\n-                blocked_tasks[i]->cond);\n+                blocked_tasks[i]->cond, blocked_tasks[i]->cond_name);\n         }\n     }\n \n     if (!dead_tasks.is_empty()) {\n         log(rust_log::TASK, \"dead tasks:\");\n         for (size_t i = 0; i < dead_tasks.length(); i++) {\n             log(rust_log::TASK, \"\\t task: %s 0x%\" PRIxPTR \", ref_count: %d\",\n-                dead_tasks[i], dead_tasks[i]->name,\n+                dead_tasks[i]->name, dead_tasks[i],\n                 dead_tasks[i]->ref_count);\n         }\n     }"}, {"sha": "12623255ff1ac6567ca9c52ec38ad68c46ee0371", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e20752de68fe336e9fa184bef0616e31c738452c/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e20752de68fe336e9fa184bef0616e31c738452c/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=e20752de68fe336e9fa184bef0616e31c738452c", "patch": "@@ -63,6 +63,7 @@ rust_task::rust_task(rust_dom *dom, rust_task *spawner, const char *name) :\n     name(name),\n     state(&dom->running_tasks),\n     cond(NULL),\n+    cond_name(\"none\"),\n     supervisor(spawner),\n     idx(0),\n     rendezvous_ptr(0),\n@@ -552,7 +553,7 @@ rust_task::transition(ptr_vec<rust_task> *src, ptr_vec<rust_task> *dst)\n }\n \n void\n-rust_task::block(rust_cond *on)\n+rust_task::block(rust_cond *on, const char* name)\n {\n     log(rust_log::TASK, \"Blocking on 0x%\" PRIxPTR \", cond: 0x%\" PRIxPTR,\n                          (uintptr_t) on, (uintptr_t) cond);\n@@ -561,6 +562,7 @@ rust_task::block(rust_cond *on)\n \n     transition(&dom->running_tasks, &dom->blocked_tasks);\n     cond = on;\n+    cond_name = name;\n }\n \n void\n@@ -574,6 +576,7 @@ rust_task::wakeup(rust_cond *from)\n     transition(&dom->blocked_tasks, &dom->running_tasks);\n     I(dom, cond == from);\n     cond = NULL;\n+    cond_name = \"none\";\n }\n \n void"}, {"sha": "9a4e0c7bd7a035014600e14e7123f7c81981f031", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e20752de68fe336e9fa184bef0616e31c738452c/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/e20752de68fe336e9fa184bef0616e31c738452c/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=e20752de68fe336e9fa184bef0616e31c738452c", "patch": "@@ -24,6 +24,7 @@ rust_task : public maybe_proxy<rust_task>,\n     const char *const name;\n     ptr_vec<rust_task> *state;\n     rust_cond *cond;\n+    const char *cond_name;\n     rust_task *supervisor;     // Parent-link for failure propagation.\n     size_t idx;\n     size_t gc_alloc_thresh;\n@@ -70,7 +71,7 @@ rust_task : public maybe_proxy<rust_task>,\n     const char *state_str();\n     void transition(ptr_vec<rust_task> *svec, ptr_vec<rust_task> *dvec);\n \n-    void block(rust_cond *on);\n+    void block(rust_cond *on, const char* name);\n     void wakeup(rust_cond *from);\n     void die();\n     void unblock();"}, {"sha": "a3373870b5fd932dc5944f3ec1a9729a31f43889", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e20752de68fe336e9fa184bef0616e31c738452c/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e20752de68fe336e9fa184bef0616e31c738452c/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=e20752de68fe336e9fa184bef0616e31c738452c", "patch": "@@ -191,13 +191,13 @@ upcall_join(rust_task *task, maybe_proxy<rust_task> *target) {\n     if (target->is_proxy()) {\n         notify_message::\n         send(notify_message::JOIN, \"join\", task, target->as_proxy());\n-        task->block(target_task);\n+        task->block(target_task, \"joining remote task\");\n         task->yield(2);\n     } else {\n         // If the other task is already dying, we don't have to wait for it.\n         if (target_task->dead() == false) {\n             target_task->tasks_waiting_to_join.push(task);\n-            task->block(target_task);\n+            task->block(target_task, \"joining local task\");\n             task->yield(2);\n         }\n     }\n@@ -238,7 +238,7 @@ upcall_recv(rust_task *task, uintptr_t *dptr, rust_port *port) {\n \n     task->log(rust_log::COMM, \"<=== waiting for rendezvous data ===\");\n     task->rendezvous_ptr = dptr;\n-    task->block(port);\n+    task->block(port, \"waiting for rendezvous data\");\n     task->yield(3);\n }\n "}]}