{"sha": "d5fd1af7b43b4932eebfc26cfd1a35ce7951be60", "node_id": "C_kwDOAAsO6NoAKGQ1ZmQxYWY3YjQzYjQ5MzJlZWJmYzI2Y2ZkMWEzNWNlNzk1MWJlNjA", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-10-18T16:26:26Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-10-18T16:31:49Z"}, "message": "Retrieve LLVM version from llvm-filecheck binary if it is not set yet", "tree": {"sha": "5ec63eb193e433957f541173e7ae713b385c2cc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ec63eb193e433957f541173e7ae713b385c2cc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5fd1af7b43b4932eebfc26cfd1a35ce7951be60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5fd1af7b43b4932eebfc26cfd1a35ce7951be60", "html_url": "https://github.com/rust-lang/rust/commit/d5fd1af7b43b4932eebfc26cfd1a35ce7951be60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5fd1af7b43b4932eebfc26cfd1a35ce7951be60/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0f8e60dddfecfc9093ee9d9f42557d8260c0355", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0f8e60dddfecfc9093ee9d9f42557d8260c0355", "html_url": "https://github.com/rust-lang/rust/commit/e0f8e60dddfecfc9093ee9d9f42557d8260c0355"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "0d9a629e179b8eb9df836be32426f467cfb3ce9d", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d5fd1af7b43b4932eebfc26cfd1a35ce7951be60/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5fd1af7b43b4932eebfc26cfd1a35ce7951be60/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=d5fd1af7b43b4932eebfc26cfd1a35ce7951be60", "patch": "@@ -4,6 +4,7 @@ use std::fs::File;\n use std::io::prelude::*;\n use std::io::BufReader;\n use std::path::{Path, PathBuf};\n+use std::process::Command;\n \n use tracing::*;\n \n@@ -843,6 +844,20 @@ pub fn extract_llvm_version(version: &str) -> Option<u32> {\n     Some(version)\n }\n \n+pub fn extract_llvm_version_from_binary(binary_path: &str) -> Option<u32> {\n+    let output = Command::new(binary_path).arg(\"--version\").output().ok()?;\n+    if !output.status.success() {\n+        return None;\n+    }\n+    let version = String::from_utf8(output.stdout).ok()?;\n+    for line in version.lines() {\n+        if let Some(version) = line.split(\"LLVM version \").skip(1).next() {\n+            return extract_llvm_version(version);\n+        }\n+    }\n+    None\n+}\n+\n /// Takes a directive of the form \"<version1> [- <version2>]\",\n /// returns the numeric representation of <version1> and <version2> as\n /// tuple: (<version1> as u32, <version2> as u32)"}, {"sha": "417b429161f52ad34401e71dc7a018bec00cdc27", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5fd1af7b43b4932eebfc26cfd1a35ce7951be60/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5fd1af7b43b4932eebfc26cfd1a35ce7951be60/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=d5fd1af7b43b4932eebfc26cfd1a35ce7951be60", "patch": "@@ -200,7 +200,9 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         Some(x) => panic!(\"argument for --color must be auto, always, or never, but found `{}`\", x),\n     };\n     let llvm_version =\n-        matches.opt_str(\"llvm-version\").as_deref().and_then(header::extract_llvm_version);\n+        matches.opt_str(\"llvm-version\").as_deref().and_then(header::extract_llvm_version).or_else(\n+            || header::extract_llvm_version_from_binary(&matches.opt_str(\"llvm-filecheck\")?),\n+        );\n \n     let src_base = opt_path(matches, \"src-base\");\n     let run_ignored = matches.opt_present(\"ignored\");"}]}