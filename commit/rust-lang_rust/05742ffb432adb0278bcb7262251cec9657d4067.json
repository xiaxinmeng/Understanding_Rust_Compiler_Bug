{"sha": "05742ffb432adb0278bcb7262251cec9657d4067", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NzQyZmZiNDMyYWRiMDI3OGJjYjcyNjIyNTFjZWM5NjU3ZDQwNjc=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-07-13T00:34:21Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-07-13T00:34:21Z"}, "message": "Inline and remove `DataflowAnalysis::num_bits_overall()`.\n\nIt has a single callsite, and duplicates some code from that callsite.\nThe code is more concise and clearer this way.", "tree": {"sha": "b7f9832a41846f41d4e20ee95c947398ed7a9d0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7f9832a41846f41d4e20ee95c947398ed7a9d0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05742ffb432adb0278bcb7262251cec9657d4067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05742ffb432adb0278bcb7262251cec9657d4067", "html_url": "https://github.com/rust-lang/rust/commit/05742ffb432adb0278bcb7262251cec9657d4067", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05742ffb432adb0278bcb7262251cec9657d4067/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "960f6046c6d367a48f405dd5c76cc303497edfc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/960f6046c6d367a48f405dd5c76cc303497edfc5", "html_url": "https://github.com/rust-lang/rust/commit/960f6046c6d367a48f405dd5c76cc303497edfc5"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "e59236c516880aef70db0210c65a88aae8286269", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/05742ffb432adb0278bcb7262251cec9657d4067/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05742ffb432adb0278bcb7262251cec9657d4067/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=05742ffb432adb0278bcb7262251cec9657d4067", "patch": "@@ -736,7 +736,9 @@ impl<'a, 'tcx, D> DataflowAnalysis<'a, 'tcx, D> where D: BitDenotation\n         let bits_per_block = denotation.bits_per_block();\n         let usize_bits = mem::size_of::<usize>() * 8;\n         let words_per_block = (bits_per_block + usize_bits - 1) / usize_bits;\n-        let num_overall = Self::num_bits_overall(mir, bits_per_block);\n+        let bits_per_block_rounded_up = words_per_block * usize_bits; // a multiple of word size\n+        let num_blocks = mir.basic_blocks().len();\n+        let num_overall = num_blocks * bits_per_block_rounded_up;\n \n         let zeroes = Bits::new(IdxSetBuf::new_empty(num_overall));\n         let on_entry = Bits::new(if D::bottom_value() {\n@@ -774,18 +776,6 @@ impl<'a, 'tcx, D> DataflowAnalysis<'a, 'tcx, D> where D: BitDenotation\n             }\n         }\n     }\n-\n-    fn num_bits_overall(mir: &Mir, bits_per_block: usize) -> usize {\n-        let usize_bits = mem::size_of::<usize>() * 8;\n-        let words_per_block = (bits_per_block + usize_bits - 1) / usize_bits;\n-\n-        // (now rounded up to multiple of word size)\n-        let bits_per_block = words_per_block * usize_bits;\n-\n-        let num_blocks = mir.basic_blocks().len();\n-        let num_overall = num_blocks * bits_per_block;\n-        num_overall\n-    }\n }\n \n impl<'a, 'tcx: 'a, D> DataflowAnalysis<'a, 'tcx, D> where D: BitDenotation"}]}