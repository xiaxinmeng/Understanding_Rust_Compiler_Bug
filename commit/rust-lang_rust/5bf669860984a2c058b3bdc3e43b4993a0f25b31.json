{"sha": "5bf669860984a2c058b3bdc3e43b4993a0f25b31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZjY2OTg2MDk4NGEyYzA1OGIzYmRjM2U0M2I0OTkzYTBmMjViMzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-12T15:08:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-12T15:08:34Z"}, "message": "Merge #3121\n\n3121: Do not add imports before inner attributes r=matklad a=SomeoneToIgnore\n\nCurrent `insert_use_statement` function adds imports before inner attributes which results in compiler errors:\r\n<img width=\"1440\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/74344019-a3749500-4db4-11ea-9d88-f71e903e795a.png\">\r\n\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "b7811c88a671bc43bb35149f15e3ad7724e87214", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7811c88a671bc43bb35149f15e3ad7724e87214"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bf669860984a2c058b3bdc3e43b4993a0f25b31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeRBTyCRBK7hj4Ov3rIwAAdHIIAGVkK6HHQUlzMtasddikKeh5\nHY3tW3xIHWhWPS3Pbdt1HMmvPQHj4Ssd18tpdVXG+jogElkNwCFUz7UmnuNSmYYp\n0dvm9ssw5U0FMEn+vc/NqrpX4LjsBlXPLrm+MxDIcKXEqCmfV+hhLFgCsCYe8iri\n9wsOBZSvny+YzkZwWbs0KPbYw7LpUr3Xer5hB5nTY0Ed8BkE9XxBHcy9hF/UMtUE\nGGCa4K66GEzY3lcl+5JrAPKIz9wzwo4axFyApCgslvO6NiLDlOVpsTAWuH3rvhOt\nZfifsoK682AbCBSklyyIQU6g5MDrqEusWgwz5omkaT8ZGNwLTP9tQQJWvX54XAE=\n=ZJF8\n-----END PGP SIGNATURE-----\n", "payload": "tree b7811c88a671bc43bb35149f15e3ad7724e87214\nparent 421609225a5e38eb48dd42a4394898c7ae74b7f3\nparent 2a7d97d82911ad03c549fa3c8c014e4b74c9696d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581520114 +0000\ncommitter GitHub <noreply@github.com> 1581520114 +0000\n\nMerge #3121\n\n3121: Do not add imports before inner attributes r=matklad a=SomeoneToIgnore\n\nCurrent `insert_use_statement` function adds imports before inner attributes which results in compiler errors:\r\n<img width=\"1440\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/74344019-a3749500-4db4-11ea-9d88-f71e903e795a.png\">\r\n\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bf669860984a2c058b3bdc3e43b4993a0f25b31", "html_url": "https://github.com/rust-lang/rust/commit/5bf669860984a2c058b3bdc3e43b4993a0f25b31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bf669860984a2c058b3bdc3e43b4993a0f25b31/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "421609225a5e38eb48dd42a4394898c7ae74b7f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/421609225a5e38eb48dd42a4394898c7ae74b7f3", "html_url": "https://github.com/rust-lang/rust/commit/421609225a5e38eb48dd42a4394898c7ae74b7f3"}, {"sha": "2a7d97d82911ad03c549fa3c8c014e4b74c9696d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a7d97d82911ad03c549fa3c8c014e4b74c9696d", "html_url": "https://github.com/rust-lang/rust/commit/2a7d97d82911ad03c549fa3c8c014e4b74c9696d"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "eac452413429eb058c9636e6733203f5d0520524", "filename": "crates/ra_assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5bf669860984a2c058b3bdc3e43b4993a0f25b31/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bf669860984a2c058b3bdc3e43b4993a0f25b31/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=5bf669860984a2c058b3bdc3e43b4993a0f25b31", "patch": "@@ -431,7 +431,12 @@ fn best_action_for_target(\n                 .find(|n| n.text_range().start() < anchor.text_range().start())\n                 .or_else(|| Some(anchor));\n \n-            ImportAction::add_new_use(anchor, false)\n+            let add_after_anchor = anchor\n+                .clone()\n+                .and_then(ast::Attr::cast)\n+                .map(|attr| attr.kind() == ast::AttrKind::Inner)\n+                .unwrap_or(false);\n+            ImportAction::add_new_use(anchor, add_after_anchor)\n         }\n     }\n }\n@@ -958,6 +963,28 @@ mod foo {\n \n         Debug<|>\n     }\n+}\n+    \",\n+        );\n+    }\n+\n+    #[test]\n+    fn inserts_imports_after_inner_attributes() {\n+        check_assist(\n+            replace_qualified_name_with_use,\n+            \"\n+#![allow(dead_code)]\n+\n+fn main() {\n+    std::fmt::Debug<|>\n+}\n+    \",\n+            \"\n+#![allow(dead_code)]\n+use std::fmt::Debug;\n+\n+fn main() {\n+    Debug<|>\n }\n     \",\n         );"}, {"sha": "9cc7930f744a0762fb601239d2ec0461ca3cc502", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5bf669860984a2c058b3bdc3e43b4993a0f25b31/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bf669860984a2c058b3bdc3e43b4993a0f25b31/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=5bf669860984a2c058b3bdc3e43b4993a0f25b31", "patch": "@@ -18,8 +18,8 @@ use crate::{\n pub use self::{\n     expr_extensions::{ArrayExprKind, BinOp, ElseBranch, LiteralKind, PrefixOp, RangeOp},\n     extensions::{\n-        FieldKind, PathSegmentKind, SelfParamKind, SlicePatComponents, StructKind, TypeBoundKind,\n-        VisibilityKind,\n+        AttrKind, FieldKind, PathSegmentKind, SelfParamKind, SlicePatComponents, StructKind,\n+        TypeBoundKind, VisibilityKind,\n     },\n     generated::*,\n     tokens::*,\n@@ -217,10 +217,7 @@ fn test_doc_comment_multi_line_block_strips_suffix() {\n #[test]\n fn test_comments_preserve_trailing_whitespace() {\n     let file = SourceFile::parse(\n-        r#\"\n-/// Representation of a Realm.   \n-/// In the specification these are called Realm Records.\n-struct Realm {}\"#,\n+        \"\\n/// Representation of a Realm.   \\n/// In the specification these are called Realm Records.\\nstruct Realm {}\",\n     )\n     .ok()\n     .unwrap();"}, {"sha": "44de4af892b1b7ab00327ad449d1a2b655dbd493", "filename": "crates/ra_syntax/src/ast/extensions.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5bf669860984a2c058b3bdc3e43b4993a0f25b31/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bf669860984a2c058b3bdc3e43b4993a0f25b31/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs?ref=5bf669860984a2c058b3bdc3e43b4993a0f25b31", "patch": "@@ -37,6 +37,12 @@ fn text_of_first_token(node: &SyntaxNode) -> &SmolStr {\n     node.green().children().next().and_then(|it| it.into_token()).unwrap().text()\n }\n \n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub enum AttrKind {\n+    Inner,\n+    Outer,\n+}\n+\n impl ast::Attr {\n     pub fn as_simple_atom(&self) -> Option<SmolStr> {\n         match self.input() {\n@@ -71,6 +77,18 @@ impl ast::Attr {\n             _ => None,\n         }\n     }\n+\n+    pub fn kind(&self) -> AttrKind {\n+        let first_token = self.syntax().first_token();\n+        let first_token_kind = first_token.as_ref().map(SyntaxToken::kind);\n+        let second_token_kind =\n+            first_token.and_then(|token| token.next_token()).as_ref().map(SyntaxToken::kind);\n+\n+        match (first_token_kind, second_token_kind) {\n+            (Some(SyntaxKind::POUND), Some(SyntaxKind::EXCL)) => AttrKind::Inner,\n+            _ => AttrKind::Outer,\n+        }\n+    }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]"}]}