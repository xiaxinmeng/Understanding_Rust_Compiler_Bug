{"sha": "99d00c86f85e8c1a7a1ba4cbe23d2e6b0ce85271", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZDAwYzg2Zjg1ZThjMWE3YTFiYTRjYmUyM2QyZTZiMGNlODUyNzE=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "matti@marinelayer.io", "date": "2019-01-28T17:40:47Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-01-28T20:57:40Z"}, "message": "bootstrap: set toolchain variables on per target basis\n\nUsing CC, CFLAGS, CXX, CXXFLAGS, AR and RANLIB breaks cross compilation\nbecause host is built first and has correct values. The same\nvalues are incorrect for the target however.", "tree": {"sha": "af782963f94d7954473f7fb107d3c855f791319f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af782963f94d7954473f7fb107d3c855f791319f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99d00c86f85e8c1a7a1ba4cbe23d2e6b0ce85271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99d00c86f85e8c1a7a1ba4cbe23d2e6b0ce85271", "html_url": "https://github.com/rust-lang/rust/commit/99d00c86f85e8c1a7a1ba4cbe23d2e6b0ce85271", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99d00c86f85e8c1a7a1ba4cbe23d2e6b0ce85271/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8a0dd7ae88023bd09fa4b86c9ca1f6ed8095b43", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a0dd7ae88023bd09fa4b86c9ca1f6ed8095b43", "html_url": "https://github.com/rust-lang/rust/commit/d8a0dd7ae88023bd09fa4b86c9ca1f6ed8095b43"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "716774632a01cacf665e8cc97a876da06dcc1e92", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/99d00c86f85e8c1a7a1ba4cbe23d2e6b0ce85271/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99d00c86f85e8c1a7a1ba4cbe23d2e6b0ce85271/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=99d00c86f85e8c1a7a1ba4cbe23d2e6b0ce85271", "patch": "@@ -1051,29 +1051,24 @@ impl<'a> Builder<'a> {\n                 }\n             };\n             let cc = ccacheify(&self.cc(target));\n-            cargo.env(format!(\"CC_{}\", target), &cc).env(\"CC\", &cc);\n+            cargo.env(format!(\"CC_{}\", target), &cc);\n \n             let cflags = self.cflags(target, GitRepo::Rustc).join(\" \");\n             cargo\n-                .env(format!(\"CFLAGS_{}\", target), cflags.clone())\n-                .env(\"CFLAGS\", cflags.clone());\n+                .env(format!(\"CFLAGS_{}\", target), cflags.clone());\n \n             if let Some(ar) = self.ar(target) {\n                 let ranlib = format!(\"{} s\", ar.display());\n                 cargo\n                     .env(format!(\"AR_{}\", target), ar)\n-                    .env(\"AR\", ar)\n-                    .env(format!(\"RANLIB_{}\", target), ranlib.clone())\n-                    .env(\"RANLIB\", ranlib);\n+                    .env(format!(\"RANLIB_{}\", target), ranlib);\n             }\n \n             if let Ok(cxx) = self.cxx(target) {\n                 let cxx = ccacheify(&cxx);\n                 cargo\n                     .env(format!(\"CXX_{}\", target), &cxx)\n-                    .env(\"CXX\", &cxx)\n-                    .env(format!(\"CXXFLAGS_{}\", target), cflags.clone())\n-                    .env(\"CXXFLAGS\", cflags);\n+                    .env(format!(\"CXXFLAGS_{}\", target), cflags);\n             }\n         }\n "}]}