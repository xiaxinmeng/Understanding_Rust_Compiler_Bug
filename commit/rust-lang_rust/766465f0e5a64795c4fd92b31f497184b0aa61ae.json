{"sha": "766465f0e5a64795c4fd92b31f497184b0aa61ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NjQ2NWYwZTVhNjQ3OTVjNGZkOTJiMzFmNDk3MTg0YjBhYTYxYWU=", "commit": {"author": {"name": "BurntPizza", "email": "xburntpizza@gmail.com", "date": "2017-12-27T17:32:44Z"}, "committer": {"name": "BurntPizza", "email": "xburntpizza@gmail.com", "date": "2017-12-27T17:32:44Z"}, "message": "Make normalize_and_test_predicates into a query", "tree": {"sha": "c60018e8f856658a9e2bc879420227d937a3c521", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c60018e8f856658a9e2bc879420227d937a3c521"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/766465f0e5a64795c4fd92b31f497184b0aa61ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/766465f0e5a64795c4fd92b31f497184b0aa61ae", "html_url": "https://github.com/rust-lang/rust/commit/766465f0e5a64795c4fd92b31f497184b0aa61ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/766465f0e5a64795c4fd92b31f497184b0aa61ae/comments", "author": {"login": "BurntPizza", "id": 4973668, "node_id": "MDQ6VXNlcjQ5NzM2Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/4973668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BurntPizza", "html_url": "https://github.com/BurntPizza", "followers_url": "https://api.github.com/users/BurntPizza/followers", "following_url": "https://api.github.com/users/BurntPizza/following{/other_user}", "gists_url": "https://api.github.com/users/BurntPizza/gists{/gist_id}", "starred_url": "https://api.github.com/users/BurntPizza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BurntPizza/subscriptions", "organizations_url": "https://api.github.com/users/BurntPizza/orgs", "repos_url": "https://api.github.com/users/BurntPizza/repos", "events_url": "https://api.github.com/users/BurntPizza/events{/privacy}", "received_events_url": "https://api.github.com/users/BurntPizza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BurntPizza", "id": 4973668, "node_id": "MDQ6VXNlcjQ5NzM2Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/4973668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BurntPizza", "html_url": "https://github.com/BurntPizza", "followers_url": "https://api.github.com/users/BurntPizza/followers", "following_url": "https://api.github.com/users/BurntPizza/following{/other_user}", "gists_url": "https://api.github.com/users/BurntPizza/gists{/gist_id}", "starred_url": "https://api.github.com/users/BurntPizza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BurntPizza/subscriptions", "organizations_url": "https://api.github.com/users/BurntPizza/orgs", "repos_url": "https://api.github.com/users/BurntPizza/repos", "events_url": "https://api.github.com/users/BurntPizza/events{/privacy}", "received_events_url": "https://api.github.com/users/BurntPizza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63efff5a71269ae22b8769e2e6f9aaa2f940f823", "url": "https://api.github.com/repos/rust-lang/rust/commits/63efff5a71269ae22b8769e2e6f9aaa2f940f823", "html_url": "https://github.com/rust-lang/rust/commit/63efff5a71269ae22b8769e2e6f9aaa2f940f823"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "ec52c6cf57bf76ca4ff2230de54da685f8ca5342", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=766465f0e5a64795c4fd92b31f497184b0aa61ae", "patch": "@@ -633,6 +633,8 @@ define_dep_nodes!( <'tcx>\n     [anon] NormalizeTy,\n     // We use this for most things when incr. comp. is turned off.\n     [] Null,\n+\n+    [] SubstituteNormalizeAndTestPredicates { key: (DefId, &'tcx Substs<'tcx>) },\n );\n \n trait DepNodeParams<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> : fmt::Debug {"}, {"sha": "fd47e09aad7f9119270981d8af3d3eb6f2d97b1d", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=766465f0e5a64795c4fd92b31f497184b0aa61ae", "patch": "@@ -658,9 +658,9 @@ pub fn fully_normalize_with_fulfillcx<'a, 'gcx, 'tcx, T>(\n /// environment. If this returns false, then either normalize\n /// encountered an error or one of the predicates did not hold. Used\n /// when creating vtables to check for unsatisfiable methods.\n-pub fn normalize_and_test_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                               predicates: Vec<ty::Predicate<'tcx>>)\n-                                               -> bool\n+fn normalize_and_test_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                                           predicates: Vec<ty::Predicate<'tcx>>)\n+                                           -> bool\n {\n     debug!(\"normalize_and_test_predicates(predicates={:?})\",\n            predicates);\n@@ -687,6 +687,22 @@ pub fn normalize_and_test_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     result\n }\n \n+fn substitute_normalize_and_test_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                                                      key: (DefId, &'tcx Substs<'tcx>))\n+                                                      -> bool\n+{\n+    use ty::subst::Subst;\n+    debug!(\"substitute_normalize_and_test_predicates(key={:?})\",\n+           key);\n+\n+    let predicates = tcx.predicates_of(key.0).predicates.subst(tcx, key.1);\n+    let result = normalize_and_test_predicates(tcx, predicates);\n+\n+    debug!(\"substitute_normalize_and_test_predicates(key={:?}) = {:?}\",\n+           key, result);\n+    result\n+}\n+\n /// Given a trait `trait_ref`, iterates the vtable entries\n /// that come from `trait_ref`, including its supertraits.\n #[inline] // FIXME(#35870) Avoid closures being unexported due to impl Trait.\n@@ -879,6 +895,7 @@ pub fn provide(providers: &mut ty::maps::Providers) {\n         specializes: specialize::specializes,\n         trans_fulfill_obligation: trans::trans_fulfill_obligation,\n         vtable_methods,\n+        substitute_normalize_and_test_predicates,\n         ..*providers\n     };\n }"}, {"sha": "881c59e05aac6268f014ee764e04c53b084e991c", "filename": "src/librustc/ty/maps/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs?ref=766465f0e5a64795c4fd92b31f497184b0aa61ae", "patch": "@@ -625,6 +625,12 @@ impl<'tcx> QueryDescription<'tcx> for queries::optimized_mir<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription<'tcx> for queries::substitute_normalize_and_test_predicates<'tcx> {\n+    fn describe(tcx: TyCtxt, key: (DefId, &'tcx Substs<'tcx>)) -> String {\n+        format!(\"testing substituted normalized predicates:`{}`\", tcx.item_path_str(key.0))\n+    }\n+}\n+\n macro_rules! impl_disk_cacheable_query(\n     ($query_name:ident, |$key:tt| $cond:expr) => {\n         impl<'tcx> QueryDescription<'tcx> for queries::$query_name<'tcx> {"}, {"sha": "bd8c22aab931624714806dca0fde8bf994154995", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=766465f0e5a64795c4fd92b31f497184b0aa61ae", "patch": "@@ -360,6 +360,9 @@ define_maps! { <'tcx>\n     // however, which uses this query as a kind of cache.\n     [] fn erase_regions_ty: erase_regions_ty(Ty<'tcx>) -> Ty<'tcx>,\n     [] fn fully_normalize_monormophic_ty: normalize_ty_node(Ty<'tcx>) -> Ty<'tcx>,\n+\n+    [] fn substitute_normalize_and_test_predicates:\n+        substitute_normalize_and_test_predicates_node((DefId, &'tcx Substs<'tcx>)) -> bool,\n }\n \n //////////////////////////////////////////////////////////////////////\n@@ -500,3 +503,8 @@ fn vtable_methods_node<'tcx>(trait_ref: ty::PolyTraitRef<'tcx>) -> DepConstructo\n fn normalize_ty_node<'tcx>(_: Ty<'tcx>) -> DepConstructor<'tcx> {\n     DepConstructor::NormalizeTy\n }\n+\n+fn substitute_normalize_and_test_predicates_node<'tcx>(key: (DefId, &'tcx Substs<'tcx>))\n+                                            -> DepConstructor<'tcx> {\n+    DepConstructor::SubstituteNormalizeAndTestPredicates { key }\n+}"}, {"sha": "dd8b8a2e5da8268f5e74c73a13a757e853ce41dd", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=766465f0e5a64795c4fd92b31f497184b0aa61ae", "patch": "@@ -760,6 +760,7 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n         DepKind::VtableMethods |\n         DepKind::EraseRegionsTy |\n         DepKind::NormalizeTy |\n+        DepKind::SubstituteNormalizeAndTestPredicates |\n \n         // This one should never occur in this context\n         DepKind::Null => {"}, {"sha": "07d6652355b755a5a2f403c9fb52e730956487e2", "filename": "src/librustc_mir/monomorphize/item.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766465f0e5a64795c4fd92b31f497184b0aa61ae/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs?ref=766465f0e5a64795c4fd92b31f497184b0aa61ae", "patch": "@@ -18,9 +18,8 @@ use monomorphize::Instance;\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n use rustc::session::config::OptLevel;\n-use rustc::traits;\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::subst::{Subst, Substs};\n+use rustc::ty::subst::Substs;\n use syntax::ast;\n use syntax::attr::{self, InlineAttr};\n use std::fmt::{self, Write};\n@@ -214,8 +213,7 @@ pub trait MonoItemExt<'a, 'tcx>: fmt::Debug {\n             MonoItem::GlobalAsm(..) => return true\n         };\n \n-        let predicates = tcx.predicates_of(def_id).predicates.subst(tcx, substs);\n-        traits::normalize_and_test_predicates(tcx, predicates)\n+        tcx.substitute_normalize_and_test_predicates((def_id, &substs))\n     }\n \n     fn to_string(&self, tcx: TyCtxt<'a, 'tcx, 'tcx>) -> String {"}]}