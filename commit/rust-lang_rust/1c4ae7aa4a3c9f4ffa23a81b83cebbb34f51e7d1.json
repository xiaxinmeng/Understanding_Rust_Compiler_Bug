{"sha": "1c4ae7aa4a3c9f4ffa23a81b83cebbb34f51e7d1", "node_id": "C_kwDOAAsO6NoAKDFjNGFlN2FhNGEzYzlmNGZmYTIzYTgxYjgzY2ViYmIzNGY1MWU3ZDE", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-01T18:50:16Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-07T13:47:19Z"}, "message": "turn `exec` comment into doc comment", "tree": {"sha": "9fd9085ef671e379bd36f65cc4581bd035384adb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fd9085ef671e379bd36f65cc4581bd035384adb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c4ae7aa4a3c9f4ffa23a81b83cebbb34f51e7d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c4ae7aa4a3c9f4ffa23a81b83cebbb34f51e7d1", "html_url": "https://github.com/rust-lang/rust/commit/1c4ae7aa4a3c9f4ffa23a81b83cebbb34f51e7d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c4ae7aa4a3c9f4ffa23a81b83cebbb34f51e7d1/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed6c958ee4bf081deec951996ace9c508360c1d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed6c958ee4bf081deec951996ace9c508360c1d9", "html_url": "https://github.com/rust-lang/rust/commit/ed6c958ee4bf081deec951996ace9c508360c1d9"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "fa6c4a02cab722dff56a0d79b4aa1cf81c76f2be", "filename": "compiler/rustc_data_structures/src/profiling.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1c4ae7aa4a3c9f4ffa23a81b83cebbb34f51e7d1/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4ae7aa4a3c9f4ffa23a81b83cebbb34f51e7d1/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs?ref=1c4ae7aa4a3c9f4ffa23a81b83cebbb34f51e7d1", "patch": "@@ -183,11 +183,11 @@ impl SelfProfilerRef {\n         }\n     }\n \n-    // This shim makes sure that calls only get executed if the filter mask\n-    // lets them pass. It also contains some trickery to make sure that\n-    // code is optimized for non-profiling compilation sessions, i.e. anything\n-    // past the filter check is never inlined so it doesn't clutter the fast\n-    // path.\n+    /// This shim makes sure that calls only get executed if the filter mask\n+    /// lets them pass. It also contains some trickery to make sure that\n+    /// code is optimized for non-profiling compilation sessions, i.e. anything\n+    /// past the filter check is never inlined so it doesn't clutter the fast\n+    /// path.\n     #[inline(always)]\n     fn exec<F>(&self, event_filter: EventFilter, f: F) -> TimingGuard<'_>\n     where"}]}