{"sha": "f2cca31e3db5386436400554191d920dc35c5de8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyY2NhMzFlM2RiNTM4NjQzNjQwMDU1NDE5MWQ5MjBkYzM1YzVkZTg=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-06-04T08:12:19Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-06-04T08:12:19Z"}, "message": "Inline enum_variant_ids into its only caller.", "tree": {"sha": "aceaabfbe8db24db6b4302e2e5031af0383e152d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aceaabfbe8db24db6b4302e2e5031af0383e152d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2cca31e3db5386436400554191d920dc35c5de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2cca31e3db5386436400554191d920dc35c5de8", "html_url": "https://github.com/rust-lang/rust/commit/f2cca31e3db5386436400554191d920dc35c5de8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2cca31e3db5386436400554191d920dc35c5de8/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53897baec87fae5cb918f8bb09c09d981bdd0684", "url": "https://api.github.com/repos/rust-lang/rust/commits/53897baec87fae5cb918f8bb09c09d981bdd0684", "html_url": "https://github.com/rust-lang/rust/commit/53897baec87fae5cb918f8bb09c09d981bdd0684"}], "stats": {"total": 27, "additions": 2, "deletions": 25}, "files": [{"sha": "2a7ec48378ac12b789eb19f6ef3e50acfc40efc8", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f2cca31e3db5386436400554191d920dc35c5de8/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2cca31e3db5386436400554191d920dc35c5de8/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=f2cca31e3db5386436400554191d920dc35c5de8", "patch": "@@ -268,30 +268,6 @@ fn item_trait_ref<'tcx>(doc: rbml::Doc, tcx: &ty::ctxt<'tcx>, cdata: Cmd)\n     doc_trait_ref(tp, tcx, cdata)\n }\n \n-struct EnumVariantIds<'a> {\n-    iter: reader::TaggedDocsIterator<'a>,\n-    cdata: Cmd<'a>,\n-}\n-\n-impl<'a> Iterator for EnumVariantIds<'a> {\n-    type Item = ast::DefId;\n-\n-    fn next(&mut self) -> Option<ast::DefId> {\n-        self.iter.next().map(|p| translated_def_id(self.cdata, p))\n-    }\n-\n-    fn size_hint(&self) -> (usize, Option<usize>) {\n-        self.iter.size_hint()\n-    }\n-}\n-\n-fn enum_variant_ids<'a>(item: rbml::Doc<'a>, cdata: Cmd<'a>) -> EnumVariantIds<'a> {\n-    EnumVariantIds {\n-        iter: reader::tagged_docs(item, tag_items_data_item_variant),\n-        cdata: cdata,\n-    }\n-}\n-\n fn item_path(item_doc: rbml::Doc) -> Vec<ast_map::PathElem> {\n     let path_doc = reader::get_doc(item_doc, tag_path);\n     reader::docs(path_doc).filter_map(|(tag, elt_doc)| {\n@@ -736,7 +712,8 @@ pub fn get_enum_variants<'tcx>(intr: Rc<IdentInterner>, cdata: Cmd, id: ast::Nod\n     let items = reader::get_doc(rbml::Doc::new(data), tag_items);\n     let item = find_item(id, items);\n     let mut disr_val = 0;\n-    enum_variant_ids(item, cdata).map(|did| {\n+    reader::tagged_docs(item, tag_items_data_item_variant).map(|p| {\n+        let did = translated_def_id(cdata, p);\n         let item = find_item(did.node, items);\n         let ctor_ty = item_type(ast::DefId { krate: cdata.cnum, node: id},\n                                 item, tcx, cdata);"}]}