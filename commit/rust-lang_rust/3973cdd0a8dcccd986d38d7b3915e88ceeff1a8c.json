{"sha": "3973cdd0a8dcccd986d38d7b3915e88ceeff1a8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NzNjZGQwYThkY2NjZDk4NmQzOGQ3YjM5MTVlODhjZWVmZjFhOGM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-03T14:53:07Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-03T14:53:07Z"}, "message": "Use correct span for tuple struct's body", "tree": {"sha": "df5fc416ec058bd3cf7352da6e5e84d19470a834", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df5fc416ec058bd3cf7352da6e5e84d19470a834"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3973cdd0a8dcccd986d38d7b3915e88ceeff1a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3973cdd0a8dcccd986d38d7b3915e88ceeff1a8c", "html_url": "https://github.com/rust-lang/rust/commit/3973cdd0a8dcccd986d38d7b3915e88ceeff1a8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3973cdd0a8dcccd986d38d7b3915e88ceeff1a8c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84526ab87eb367a968130b54acfd65479be4cd23", "url": "https://api.github.com/repos/rust-lang/rust/commits/84526ab87eb367a968130b54acfd65479be4cd23", "html_url": "https://github.com/rust-lang/rust/commit/84526ab87eb367a968130b54acfd65479be4cd23"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "5151ec92ced85a99d1776d6716d5a825ad932592", "filename": "src/items.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3973cdd0a8dcccd986d38d7b3915e88ceeff1a8c/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3973cdd0a8dcccd986d38d7b3915e88ceeff1a8c/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=3973cdd0a8dcccd986d38d7b3915e88ceeff1a8c", "patch": "@@ -1189,12 +1189,13 @@ fn format_tuple_struct(\n     result.push_str(&header_str);\n \n     let body_lo = if fields.is_empty() {\n-        context.codemap.span_after(span, \"(\")\n+        let lo = get_bytepos_after_visibility(context, vis, span, \")\");\n+        context.codemap.span_after(mk_sp(lo, span.hi()), \"(\")\n     } else {\n         fields[0].span.lo()\n     };\n     let body_hi = if fields.is_empty() {\n-        context.codemap.span_after(span, \")\")\n+        context.codemap.span_after(mk_sp(body_lo, span.hi()), \")\")\n     } else {\n         // This is a dirty hack to work around a missing `)` from the span of the last field.\n         let last_arg_span = fields[fields.len() - 1].span;\n@@ -1242,7 +1243,10 @@ fn format_tuple_struct(\n                 .to_string(context.config))\n         }\n         result.push('(');\n-        let snippet = context.snippet(mk_sp(body_lo, context.codemap.span_before(span, \")\")));\n+        let snippet = context.snippet(mk_sp(\n+            body_lo,\n+            context.codemap.span_before(mk_sp(body_lo, span.hi()), \")\"),\n+        ));\n         if snippet.is_empty() {\n             // `struct S ()`\n         } else if snippet.trim_right_matches(&[' ', '\\t'][..]).ends_with('\\n') {"}]}