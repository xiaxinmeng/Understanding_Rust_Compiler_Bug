{"sha": "10a9b1202bdeb96b1af051df02e2d39bc3c9e19b", "node_id": "C_kwDOAAsO6NoAKDEwYTliMTIwMmJkZWI5NmIxYWYwNTFkZjAyZTJkMzliYzNjOWUxOWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-09T04:08:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-09T04:08:32Z"}, "message": "Rollup merge of #90796 - Amanieu:remove_reg_thumb, r=joshtriplett\n\nRemove the reg_thumb register class for asm! on ARM\n\nAlso restricts r8-r14 from being used on Thumb1 targets as per #90736.\n\ncc ``@Lokathor``\n\nr? ``@joshtriplett``", "tree": {"sha": "bbe644fc2a122ff940aa47782f2ad664b4401603", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbe644fc2a122ff940aa47782f2ad664b4401603"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10a9b1202bdeb96b1af051df02e2d39bc3c9e19b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10a9b1202bdeb96b1af051df02e2d39bc3c9e19b", "html_url": "https://github.com/rust-lang/rust/commit/10a9b1202bdeb96b1af051df02e2d39bc3c9e19b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10a9b1202bdeb96b1af051df02e2d39bc3c9e19b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e7bc96321b26faf8f4dcf6a54fa590f7b9402d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7bc96321b26faf8f4dcf6a54fa590f7b9402d1", "html_url": "https://github.com/rust-lang/rust/commit/2e7bc96321b26faf8f4dcf6a54fa590f7b9402d1"}, {"sha": "0d936e19c91ae296f453224723c2f0ddd775bcb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d936e19c91ae296f453224723c2f0ddd775bcb4", "html_url": "https://github.com/rust-lang/rust/commit/0d936e19c91ae296f453224723c2f0ddd775bcb4"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "10edcf36955da78eceb762ad518b01924b1ef20e", "filename": "src/asm.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/10a9b1202bdeb96b1af051df02e2d39bc3c9e19b/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10a9b1202bdeb96b1af051df02e2d39bc3c9e19b/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=10a9b1202bdeb96b1af051df02e2d39bc3c9e19b", "patch": "@@ -568,7 +568,6 @@ fn reg_to_gcc(reg: InlineAsmRegOrRegClass) -> ConstraintOrRegister {\n             InlineAsmRegClass::AArch64(AArch64InlineAsmRegClass::vreg) => unimplemented!(),\n             InlineAsmRegClass::AArch64(AArch64InlineAsmRegClass::vreg_low16) => unimplemented!(),\n             InlineAsmRegClass::Arm(ArmInlineAsmRegClass::reg) => unimplemented!(),\n-            InlineAsmRegClass::Arm(ArmInlineAsmRegClass::reg_thumb) => unimplemented!(),\n             InlineAsmRegClass::Arm(ArmInlineAsmRegClass::sreg)\n             | InlineAsmRegClass::Arm(ArmInlineAsmRegClass::dreg_low16)\n             | InlineAsmRegClass::Arm(ArmInlineAsmRegClass::qreg_low8) => unimplemented!(),\n@@ -628,8 +627,7 @@ fn dummy_output_type<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, reg: InlineAsmRegCl\n         | InlineAsmRegClass::AArch64(AArch64InlineAsmRegClass::vreg_low16) => {\n             unimplemented!()\n         }\n-        InlineAsmRegClass::Arm(ArmInlineAsmRegClass::reg)\n-        | InlineAsmRegClass::Arm(ArmInlineAsmRegClass::reg_thumb) => cx.type_i32(),\n+        InlineAsmRegClass::Arm(ArmInlineAsmRegClass::reg)=> cx.type_i32(),\n         InlineAsmRegClass::Arm(ArmInlineAsmRegClass::sreg)\n         | InlineAsmRegClass::Arm(ArmInlineAsmRegClass::sreg_low16) => cx.type_f32(),\n         InlineAsmRegClass::Arm(ArmInlineAsmRegClass::dreg)\n@@ -737,8 +735,7 @@ fn modifier_to_gcc(arch: InlineAsmArch, reg: InlineAsmRegClass, modifier: Option\n         | InlineAsmRegClass::AArch64(AArch64InlineAsmRegClass::vreg_low16) => {\n             unimplemented!()\n         }\n-        InlineAsmRegClass::Arm(ArmInlineAsmRegClass::reg)\n-        | InlineAsmRegClass::Arm(ArmInlineAsmRegClass::reg_thumb) => unimplemented!(),\n+        InlineAsmRegClass::Arm(ArmInlineAsmRegClass::reg)  => unimplemented!(),\n         InlineAsmRegClass::Arm(ArmInlineAsmRegClass::sreg)\n         | InlineAsmRegClass::Arm(ArmInlineAsmRegClass::sreg_low16) => unimplemented!(),\n         InlineAsmRegClass::Arm(ArmInlineAsmRegClass::dreg)"}]}