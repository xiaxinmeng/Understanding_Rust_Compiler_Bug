{"sha": "e1367ef1b15a5736210c86bef91deee7ae674cec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMzY3ZWYxYjE1YTU3MzYyMTBjODZiZWY5MWRlZWU3YWU2NzRjZWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-06-14T11:35:45Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-08-30T07:40:43Z"}, "message": "Update unstable-crate test", "tree": {"sha": "9b709390be8cf94d1821db263de7ac409854c467", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b709390be8cf94d1821db263de7ac409854c467"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1367ef1b15a5736210c86bef91deee7ae674cec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1367ef1b15a5736210c86bef91deee7ae674cec", "html_url": "https://github.com/rust-lang/rust/commit/e1367ef1b15a5736210c86bef91deee7ae674cec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1367ef1b15a5736210c86bef91deee7ae674cec/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "274543b9cae2918a7d01733569d31a3a7e258bcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/274543b9cae2918a7d01733569d31a3a7e258bcb", "html_url": "https://github.com/rust-lang/rust/commit/274543b9cae2918a7d01733569d31a3a7e258bcb"}], "stats": {"total": 1655, "additions": 1118, "deletions": 537}, "files": [{"sha": "1640ab10578603097525be51cce1054241387a7f", "filename": "src/Cargo.lock", "status": "modified", "additions": 1032, "deletions": 492, "changes": 1524, "blob_url": "https://github.com/rust-lang/rust/blob/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=e1367ef1b15a5736210c86bef91deee7ae674cec"}, {"sha": "96fdf6dfa557cdce1cf607f5fabfd67cd4111d08", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=e1367ef1b15a5736210c86bef91deee7ae674cec", "patch": "@@ -13,8 +13,8 @@ env_logger = { version = \"0.4\", default-features = false }\n log = \"0.3\"\n pulldown-cmark = { version = \"0.0.14\", default-features = false }\n \n-[target.'cfg(not(stage0))'.dependencies]\n-html-diff = \"0.0.2\"\n+[target.'cfg(not(any(stage0, stage1)))'.dependencies]\n+html-diff = \"0.0.3\"\n \n [build-dependencies]\n build_helper = { path = \"../build_helper\" }"}, {"sha": "ae4f75efd5a4e8a5544d64a7247398b363cf5101", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=e1367ef1b15a5736210c86bef91deee7ae674cec", "patch": "@@ -75,7 +75,7 @@ use html::item_type::ItemType;\n use html::markdown::{self, Markdown, MarkdownHtml, MarkdownSummaryLine, RenderType};\n use html::{highlight, layout};\n \n-#[cfg(not(stage0))]\n+#[cfg(not(any(stage0, stage1)))]\n use html_diff;\n \n /// A pair of name and its optional document.\n@@ -1648,7 +1648,7 @@ fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Re\n     Ok(())\n }\n \n-#[cfg(not(stage0))]\n+#[cfg(not(any(stage0, stage1)))]\n fn get_html_diff(w: &mut fmt::Formatter, md_text: &str, render_type: RenderType,\n                  prefix: &str) -> fmt::Result {\n     if render_type == RenderType::Pulldown {\n@@ -1671,9 +1671,10 @@ fn get_html_diff(w: &mut fmt::Formatter, md_text: &str, render_type: RenderType,\n     }\n }\n \n-#[cfg(stage0)]\n-fn get_html_diff(w: &mut fmt::Formatter, md_text: &str, render_type: RenderType) -> fmt::Result {\n-    write!(w, \"<div class='docblock'>{}</div>\", Markdown(md_text, render_type))\n+#[cfg(any(stage0, stage1))]\n+fn get_html_diff(w: &mut fmt::Formatter, md_text: &str, render_type: RenderType,\n+                 prefix: &str) -> fmt::Result {\n+    write!(w, \"<div class='docblock'>{}{}</div>\", prefix, Markdown(md_text, render_type))\n }\n \n fn document_short(w: &mut fmt::Formatter, item: &clean::Item, link: AssocItemLink,\n@@ -1685,7 +1686,7 @@ fn document_short(w: &mut fmt::Formatter, item: &clean::Item, link: AssocItemLin\n         } else {\n             format!(\"{}\", &plain_summary_line(Some(s)))\n         };\n-        get_html_diff(&markdown, render_type, prefix)?;\n+        get_html_diff(w, &markdown, render_type, prefix)?;\n     } else if !prefix.is_empty() {\n         write!(w, \"<div class='docblock'>{}</div>\", prefix)?;\n     }\n@@ -1709,7 +1710,7 @@ fn render_assoc_const_value(item: &clean::Item) -> String {\n fn document_full(w: &mut fmt::Formatter, item: &clean::Item,\n                  render_type: RenderType, prefix: &str) -> fmt::Result {\n     if let Some(s) = item.doc_value() {\n-        get_html_diff(format!(\"{}{}\", md_render_assoc_item(item), s), render_type, prefix)?;\n+        get_html_diff(w, s, render_type, prefix)?;\n     } else if !prefix.is_empty() {\n         write!(w, \"<div class='docblock'>{}</div>\", prefix)?;\n     }"}, {"sha": "cc7893c227c4039fa3e7b983bb655e7eb00da928", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e1367ef1b15a5736210c86bef91deee7ae674cec", "patch": "@@ -28,7 +28,7 @@\n extern crate arena;\n extern crate getopts;\n extern crate env_logger;\n-#[cfg(not(stage0))]\n+#[cfg(not(any(stage0, stage1)))]\n extern crate html_diff;\n extern crate libc;\n extern crate rustc;"}, {"sha": "63fa7e3a0f1aacd7b11b09cbc304673a90042e8a", "filename": "src/test/run-make/sysroot-crates-are-unstable/Makefile", "status": "modified", "additions": 3, "deletions": 34, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Ftest%2Frun-make%2Fsysroot-crates-are-unstable%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Ftest%2Frun-make%2Fsysroot-crates-are-unstable%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsysroot-crates-are-unstable%2FMakefile?ref=e1367ef1b15a5736210c86bef91deee7ae674cec", "patch": "@@ -1,35 +1,4 @@\n--include ../tools.mk\n+PYTHON=python\n \n-# This is a whitelist of files which are stable crates or simply are not crates,\n-# we don't check for the instability of these crates as they're all stable!\n-STABLE_CRATES := \\\n-\tstd \\\n-\tcore \\\n-\tproc_macro \\\n-\trsbegin.o \\\n-\trsend.o \\\n-\tdllcrt2.o \\\n-\tcrt2.o \\\n-\tclang_rt.%_dynamic.dylib\n-\n-# Generate a list of all crates in the sysroot. To do this we list all files in\n-# rustc's sysroot, look at the filename, strip everything after the `-`, and\n-# strip the leading `lib` (if present)\n-SYSROOT := $(shell $(RUSTC) --print sysroot)\n-LIBS := $(wildcard $(SYSROOT)/lib/rustlib/$(TARGET)/lib/*)\n-LIBS := $(foreach lib,$(LIBS),$(notdir $(lib)))\n-LIBS := $(foreach lib,$(LIBS),$(word 1,$(subst -, ,$(lib))))\n-LIBS := $(foreach lib,$(LIBS),$(patsubst lib%,%,$(lib)))\n-LIBS := $(filter-out $(STABLE_CRATES),$(LIBS))\n-\n-all: $(foreach lib,$(LIBS),check-crate-$(lib)-is-unstable)\n-\n-check-crate-%-is-unstable:\n-\t@echo verifying $* is an unstable crate\n-\t@echo 'extern crate $*;' | \\\n-\t\t$(RUSTC) - --crate-type rlib 2>&1 | cat > $(TMPDIR)/$*; \\\n-\t\ttrue\n-\t@grep -q 'use of unstable library feature' $(TMPDIR)/$* || \\\n-\t\t(echo crate $* is not unstable && \\\n-\t\tcat $(TMPDIR)/$* && \\\n-\t\tfalse)\n+all:\n+\tpython test.py"}, {"sha": "210059e1010df795411396c9eec8351827017840", "filename": "src/test/run-make/sysroot-crates-are-unstable/test.py", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Ftest%2Frun-make%2Fsysroot-crates-are-unstable%2Ftest.py", "raw_url": "https://github.com/rust-lang/rust/raw/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Ftest%2Frun-make%2Fsysroot-crates-are-unstable%2Ftest.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsysroot-crates-are-unstable%2Ftest.py?ref=e1367ef1b15a5736210c86bef91deee7ae674cec", "patch": "@@ -0,0 +1,71 @@\n+# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+import sys\n+import os\n+from os import listdir\n+from os.path import isfile, join\n+from subprocess import PIPE, Popen\n+\n+\n+# This is a whitelist of files which are stable crates or simply are not crates,\n+# we don't check for the instability of these crates as they're all stable!\n+STABLE_CRATES = ['std', 'core', 'proc_macro', 'rsbegin.o', 'rsend.o', 'dllcrt2.o', 'crt2.o',\n+                 'clang_rt']\n+\n+\n+def convert_to_string(s):\n+    if s.__class__.__name__ == 'bytes':\n+        return s.decode('utf-8')\n+    return s\n+\n+\n+def exec_command(command, to_input=None):\n+    child = None\n+    if to_input is None:\n+        child = Popen(command, stdout=PIPE, stderr=PIPE)\n+    else:\n+        child = Popen(command, stdout=PIPE, stderr=PIPE, stdin=PIPE)\n+    stdout, stderr = child.communicate(input=to_input)\n+    return (convert_to_string(stdout), convert_to_string(stderr))\n+\n+\n+def check_lib(lib):\n+    if lib['name'] in STABLE_CRATES:\n+        return True\n+    print('verifying if {} is an unstable crate'.format(lib['name']))\n+    stdout, stderr = exec_command([os.environ['RUSTC'], '-', '--crate-type', 'rlib',\n+                                   '--extern', '{}={}'.format(lib['name'], lib['path'])],\n+                                  to_input='extern crate {};'.format(lib['name']))\n+    if not 'use of unstable library feature' in '{}{}'.format(stdout, stderr):\n+        print('crate {} \"{}\" is not unstable'.format(lib['name'], lib['path']))\n+        print('{}{}'.format(stdout, stderr))\n+        print('')\n+        return False\n+    return True\n+\n+# Generate a list of all crates in the sysroot. To do this we list all files in\n+# rustc's sysroot, look at the filename, strip everything after the `-`, and\n+# strip the leading `lib` (if present)\n+def get_all_libs(dir_path):\n+    return [{ 'path': join(dir_path, f), 'name': f[3:].split('-')[0] }\n+            for f in listdir(dir_path)\n+            if isfile(join(dir_path, f)) and f.endswith('.rlib') and f not in STABLE_CRATES]\n+\n+\n+sysroot = exec_command([os.environ['RUSTC'], '--print', 'sysroot'])[0].replace('\\n', '')\n+libs = get_all_libs(join(sysroot, 'lib/rustlib/{}/lib'.format(os.environ['TARGET'])))\n+\n+ret = 0\n+for lib in libs:\n+    if not check_lib(lib):\n+        # We continue so users can see all the not unstable crates.\n+        ret = 1\n+sys.exit(ret)"}, {"sha": "30dce27e7389474b386fcdfcb2a5c7da3981cf1a", "filename": "src/test/rustdoc/issue-12834.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Ftest%2Frustdoc%2Fissue-12834.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1367ef1b15a5736210c86bef91deee7ae674cec/src%2Ftest%2Frustdoc%2Fissue-12834.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-12834.rs?ref=e1367ef1b15a5736210c86bef91deee7ae674cec", "patch": "@@ -15,7 +15,7 @@\n // @has issue_12834/fn.foo.html\n // @has - //pre 'a + b '\n \n-/// ```text\n+/// ```\n /// a + b \u2208 Self \u2200 a, b \u2208 Self\n /// ```\n pub fn foo() {}"}]}