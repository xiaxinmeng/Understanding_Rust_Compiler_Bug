{"sha": "aee7b9e7d64f446847e5c18649c88e3267130a6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZTdiOWU3ZDY0ZjQ0Njg0N2U1YzE4NjQ5Yzg4ZTMyNjcxMzBhNmQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-27T19:37:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-27T19:37:11Z"}, "message": "Rollup merge of #83522 - pickfire:patch-6, r=JohnTitor\n\nImprove fs error open_from unix\n\nConsistency for #79399\nSuggested by JohnTitor\n\nr? `@JohnTitor`\n\nNot user if the error is too long now, do we handle long errors well?", "tree": {"sha": "07845efcc219ea9531cc70268e36c31f1adf3474", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07845efcc219ea9531cc70268e36c31f1adf3474"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aee7b9e7d64f446847e5c18649c88e3267130a6d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgX4lnCRBK7hj4Ov3rIwAAdHIIAGLnmwGHIcS01MByGw9jAClt\nGVhWoA0ixm5e1w2Jx6hWelDolhmwret/mcpnu49XSjZpvxOHlXKm7AIA+208sWmw\nF2xAlYsZAOq05q63IqPRhmgQH8d9kws7MeWHCCZqGzY1hIBsaXz2uE4efLlE9V9+\nhhb7ByTf9B27Iyfm00EuIPChZFEHdJ+eG8YpxgF97X13440vn8TgTvBOx5/V8M08\nS+9PAIASjb4ZnoTj7RgeS7nKZI+zvXnckRZxiLwrIiW/ZaIGwct5M+Op/vvRNAdC\nQ/6qICe8/pRcijJpHdWM7qK7ww0tNAUI5zbIrkelLm3cDeqzS0GHxNK7MvZ4Pzg=\n=unGW\n-----END PGP SIGNATURE-----\n", "payload": "tree 07845efcc219ea9531cc70268e36c31f1adf3474\nparent f665e5a491341b79654509aadbc9c43cf0183ac2\nparent 6c6ef7317bf87321c5eaefb1322380c8f297ff1b\nauthor Dylan DPC <dylan.dpc@gmail.com> 1616873831 +0100\ncommitter GitHub <noreply@github.com> 1616873831 +0100\n\nRollup merge of #83522 - pickfire:patch-6, r=JohnTitor\n\nImprove fs error open_from unix\n\nConsistency for #79399\nSuggested by JohnTitor\n\nr? `@JohnTitor`\n\nNot user if the error is too long now, do we handle long errors well?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aee7b9e7d64f446847e5c18649c88e3267130a6d", "html_url": "https://github.com/rust-lang/rust/commit/aee7b9e7d64f446847e5c18649c88e3267130a6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aee7b9e7d64f446847e5c18649c88e3267130a6d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f665e5a491341b79654509aadbc9c43cf0183ac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f665e5a491341b79654509aadbc9c43cf0183ac2", "html_url": "https://github.com/rust-lang/rust/commit/f665e5a491341b79654509aadbc9c43cf0183ac2"}, {"sha": "6c6ef7317bf87321c5eaefb1322380c8f297ff1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6ef7317bf87321c5eaefb1322380c8f297ff1b", "html_url": "https://github.com/rust-lang/rust/commit/6c6ef7317bf87321c5eaefb1322380c8f297ff1b"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "759565bab73f38a1b6964760735f45d2cc05e8da", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aee7b9e7d64f446847e5c18649c88e3267130a6d/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee7b9e7d64f446847e5c18649c88e3267130a6d/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=aee7b9e7d64f446847e5c18649c88e3267130a6d", "patch": "@@ -2,7 +2,7 @@ use crate::os::unix::prelude::*;\n \n use crate::ffi::{CStr, CString, OsStr, OsString};\n use crate::fmt;\n-use crate::io::{self, Error, ErrorKind, IoSlice, IoSliceMut, SeekFrom};\n+use crate::io::{self, Error, IoSlice, IoSliceMut, SeekFrom};\n use crate::mem;\n use crate::path::{Path, PathBuf};\n use crate::ptr;\n@@ -1152,14 +1152,12 @@ pub fn canonicalize(p: &Path) -> io::Result<PathBuf> {\n \n fn open_from(from: &Path) -> io::Result<(crate::fs::File, crate::fs::Metadata)> {\n     use crate::fs::File;\n+    use crate::sys_common::fs::NOT_FILE_ERROR;\n \n     let reader = File::open(from)?;\n     let metadata = reader.metadata()?;\n     if !metadata.is_file() {\n-        return Err(Error::new_const(\n-            ErrorKind::InvalidInput,\n-            &\"the source path is not an existing regular file\",\n-        ));\n+        return Err(NOT_FILE_ERROR);\n     }\n     Ok((reader, metadata))\n }"}, {"sha": "30908824dd663002b0718a5c75d790bfb255426d", "filename": "library/std/src/sys_common/fs.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aee7b9e7d64f446847e5c18649c88e3267130a6d/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee7b9e7d64f446847e5c18649c88e3267130a6d/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs?ref=aee7b9e7d64f446847e5c18649c88e3267130a6d", "patch": "@@ -4,15 +4,17 @@ use crate::fs;\n use crate::io::{self, Error, ErrorKind};\n use crate::path::Path;\n \n+pub(crate) const NOT_FILE_ERROR: Error = Error::new_const(\n+    ErrorKind::InvalidInput,\n+    &\"the source path is neither a regular file nor a symlink to a regular file\",\n+);\n+\n pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n     let mut reader = fs::File::open(from)?;\n     let metadata = reader.metadata()?;\n \n     if !metadata.is_file() {\n-        return Err(Error::new_const(\n-            ErrorKind::InvalidInput,\n-            &\"the source path is not an existing regular file\",\n-        ));\n+        return Err(NOT_FILE_ERROR);\n     }\n \n     let mut writer = fs::File::create(to)?;"}]}