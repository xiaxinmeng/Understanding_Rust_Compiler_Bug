{"sha": "9215d7e5b764c173ef8b2fecda913d39291e378b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMTVkN2U1Yjc2NGMxNzNlZjhiMmZlY2RhOTEzZDM5MjkxZTM3OGI=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-06-24T01:45:51Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-06-25T21:16:12Z"}, "message": "comments only", "tree": {"sha": "992e1de9e2234fa34a38d975e5512854bf1e1fe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/992e1de9e2234fa34a38d975e5512854bf1e1fe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9215d7e5b764c173ef8b2fecda913d39291e378b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9215d7e5b764c173ef8b2fecda913d39291e378b", "html_url": "https://github.com/rust-lang/rust/commit/9215d7e5b764c173ef8b2fecda913d39291e378b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9215d7e5b764c173ef8b2fecda913d39291e378b/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcdcaea5728db8003b1ad781490d782465658589", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcdcaea5728db8003b1ad781490d782465658589", "html_url": "https://github.com/rust-lang/rust/commit/bcdcaea5728db8003b1ad781490d782465658589"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "a33e6e5e923fe593f3a1fd8bcaec55760803fc88", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9215d7e5b764c173ef8b2fecda913d39291e378b/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9215d7e5b764c173ef8b2fecda913d39291e378b/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=9215d7e5b764c173ef8b2fecda913d39291e378b", "patch": "@@ -1070,7 +1070,7 @@ mod test {\n     // these following tests are quite fragile, in that they don't test what\n     // *kind* of failure occurs.\n \n-    // make sure that macros can leave scope\n+    // make sure that macros can't escape fns\n     #[should_fail]\n     #[test] fn macros_cant_escape_fns_test () {\n         let src = \"fn bogus() {macro_rules! z (() => (3+4))}\\\n@@ -1088,7 +1088,7 @@ mod test {\n         expand_crate(&sess,cfg,vec!(),vec!(),crate_ast);\n     }\n \n-    // make sure that macros can leave scope for modules\n+    // make sure that macros can't escape modules\n     #[should_fail]\n     #[test] fn macros_cant_escape_mods_test () {\n         let src = \"mod foo {macro_rules! z (() => (3+4))}\\\n@@ -1105,7 +1105,7 @@ mod test {\n         expand_crate(&sess,cfg,vec!(),vec!(),crate_ast);\n     }\n \n-    // macro_escape modules shouldn't cause macros to leave scope\n+    // macro_escape modules should allow macros to escape\n     #[test] fn macros_can_escape_flattened_mods_test () {\n         let src = \"#[macro_escape] mod foo {macro_rules! z (() => (3+4))}\\\n                    fn inty() -> int { z!() }\".to_string();\n@@ -1114,7 +1114,6 @@ mod test {\n             \"<test>\".to_string(),\n             src,\n             Vec::new(), &sess);\n-        // should fail:\n         let cfg = ::syntax::ext::expand::ExpansionConfig {\n             deriving_hash_type_parameter: false,\n             crate_id: from_str(\"test\").unwrap(),\n@@ -1185,6 +1184,12 @@ mod test {\n     // binding should match the second two varrefs, and the second binding\n     // should match the first varref.\n     //\n+    // Put differently; this is a sparse representation of a boolean matrix\n+    // indicating which bindings capture which identifiers.\n+    //\n+    // Note also that this matrix is dependent on the implicit ordering of\n+    // the bindings and the varrefs discovered by the name-finder and the path-finder.\n+    //\n     // The comparisons are done post-mtwt-resolve, so we're comparing renamed\n     // names; differences in marks don't matter any more.\n     //"}]}