{"sha": "58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZTRiNTRiZDQ5YTJhNTU0ZWU4YTU3MzgyN2I5Y2NiZjdhOWI2NWU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-14T12:24:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-19T15:15:13Z"}, "message": "move tests to borrowck directory, remove feature(nll)\n\nnow compare-mode can show us the differences", "tree": {"sha": "6dc9383f0c27191e7692637f66ca852df11c77be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dc9383f0c27191e7692637f66ca852df11c77be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "html_url": "https://github.com/rust-lang/rust/commit/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f", "html_url": "https://github.com/rust-lang/rust/commit/4e50c5b6e45fc1b21b0e0bd6f7c9c5389e0b637f"}], "stats": {"total": 225, "additions": 173, "deletions": 52}, "files": [{"sha": "5147075347283faa1b415158e0622cc2fc24b792", "filename": "src/test/ui/borrowck/assign_mutable_fields.nll.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.nll.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -1,5 +1,5 @@\n error[E0381]: use of possibly uninitialized variable: `x`\n-  --> $DIR/assign_mutable_fields.rs:31:10\n+  --> $DIR/assign_mutable_fields.rs:29:10\n    |\n LL |     drop(x); //~ ERROR\n    |          ^ use of possibly uninitialized `x`", "previous_filename": "src/test/ui/nll/assign_mutable_fields.stderr"}, {"sha": "4e41f44ef5bb37297a1b82b1ada0a400fc7fcf39", "filename": "src/test/ui/borrowck/assign_mutable_fields.rs", "status": "renamed", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.rs?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -14,14 +14,12 @@\n //\n // FIXME(#21232)\n \n-#![feature(nll)]\n-\n fn assign_both_fields_and_use() {\n     let mut x: (u32, u32);\n     x.0 = 1;\n     x.1 = 22;\n-    drop(x.0);\n-    drop(x.1);\n+    drop(x.0); //~ ERROR\n+    drop(x.1); //~ ERROR\n }\n \n fn assign_both_fields_the_use_var() {", "previous_filename": "src/test/ui/nll/assign_mutable_fields.rs"}, {"sha": "677887babd0389213ddfe59633988eb0e6b7910f", "filename": "src/test/ui/borrowck/assign_mutable_fields.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fassign_mutable_fields.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -0,0 +1,21 @@\n+error[E0381]: use of possibly uninitialized variable: `x.0`\n+  --> $DIR/assign_mutable_fields.rs:21:10\n+   |\n+LL |     drop(x.0); //~ ERROR\n+   |          ^^^ use of possibly uninitialized `x.0`\n+\n+error[E0381]: use of possibly uninitialized variable: `x.1`\n+  --> $DIR/assign_mutable_fields.rs:22:10\n+   |\n+LL |     drop(x.1); //~ ERROR\n+   |          ^^^ use of possibly uninitialized `x.1`\n+\n+error[E0381]: use of possibly uninitialized variable: `x`\n+  --> $DIR/assign_mutable_fields.rs:29:10\n+   |\n+LL |     drop(x); //~ ERROR\n+   |          ^ use of possibly uninitialized `x`\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0381`."}, {"sha": "97f3bf5b81f66d79dc5b76e01bd4124e9ba5839b", "filename": "src/test/ui/borrowck/reassignment_immutable_fields.nll.stderr", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.nll.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -1,13 +1,13 @@\n error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields.rs:19:5\n+  --> $DIR/reassignment_immutable_fields.rs:17:5\n    |\n LL |     let x: (u32, u32);\n    |         - help: consider changing this to be mutable: `mut x`\n LL |     x.0 = 1; //~ ERROR\n    |     ^^^^^^^ cannot assign\n \n error[E0594]: cannot assign to `x.1`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields.rs:20:5\n+  --> $DIR/reassignment_immutable_fields.rs:18:5\n    |\n LL |     let x: (u32, u32);\n    |         - help: consider changing this to be mutable: `mut x`\n@@ -16,15 +16,15 @@ LL |     x.1 = 22; //~ ERROR\n    |     ^^^^^^^^ cannot assign\n \n error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields.rs:27:5\n+  --> $DIR/reassignment_immutable_fields.rs:25:5\n    |\n LL |     let x: (u32, u32);\n    |         - help: consider changing this to be mutable: `mut x`\n LL |     x.0 = 1; //~ ERROR\n    |     ^^^^^^^ cannot assign\n \n error[E0594]: cannot assign to `x.1`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields.rs:28:5\n+  --> $DIR/reassignment_immutable_fields.rs:26:5\n    |\n LL |     let x: (u32, u32);\n    |         - help: consider changing this to be mutable: `mut x`\n@@ -33,7 +33,7 @@ LL |     x.1 = 22; //~ ERROR\n    |     ^^^^^^^^ cannot assign\n \n error[E0381]: use of possibly uninitialized variable: `x`\n-  --> $DIR/reassignment_immutable_fields.rs:29:10\n+  --> $DIR/reassignment_immutable_fields.rs:27:10\n    |\n LL |     drop(x); //~ ERROR\n    |          ^ use of possibly uninitialized `x`", "previous_filename": "src/test/ui/nll/reassignment_immutable_fields.stderr"}, {"sha": "c49ae2f9567fc8214bc357672ca2653ca85e996c", "filename": "src/test/ui/borrowck/reassignment_immutable_fields.rs", "status": "renamed", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.rs?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -12,14 +12,12 @@\n //\n // FIXME(#21232)\n \n-#![feature(nll)]\n-\n fn assign_both_fields_and_use() {\n     let x: (u32, u32);\n     x.0 = 1; //~ ERROR\n     x.1 = 22; //~ ERROR\n-    drop(x.0);\n-    drop(x.1);\n+    drop(x.0); //~ ERROR\n+    drop(x.1); //~ ERROR\n }\n \n fn assign_both_fields_the_use_var() {", "previous_filename": "src/test/ui/nll/reassignment_immutable_fields.rs"}, {"sha": "54d12f8fae85d8ef419eb44010a0953a9ad8a18f", "filename": "src/test/ui/borrowck/reassignment_immutable_fields.stderr", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -0,0 +1,56 @@\n+error[E0594]: cannot assign to field `x.0` of immutable binding\n+  --> $DIR/reassignment_immutable_fields.rs:17:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - consider changing this to `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+   |     ^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error[E0594]: cannot assign to field `x.1` of immutable binding\n+  --> $DIR/reassignment_immutable_fields.rs:18:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - consider changing this to `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+LL |     x.1 = 22; //~ ERROR\n+   |     ^^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error[E0381]: use of possibly uninitialized variable: `x.0`\n+  --> $DIR/reassignment_immutable_fields.rs:19:10\n+   |\n+LL |     drop(x.0); //~ ERROR\n+   |          ^^^ use of possibly uninitialized `x.0`\n+\n+error[E0381]: use of possibly uninitialized variable: `x.1`\n+  --> $DIR/reassignment_immutable_fields.rs:20:10\n+   |\n+LL |     drop(x.1); //~ ERROR\n+   |          ^^^ use of possibly uninitialized `x.1`\n+\n+error[E0594]: cannot assign to field `x.0` of immutable binding\n+  --> $DIR/reassignment_immutable_fields.rs:25:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - consider changing this to `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+   |     ^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error[E0594]: cannot assign to field `x.1` of immutable binding\n+  --> $DIR/reassignment_immutable_fields.rs:26:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - consider changing this to `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+LL |     x.1 = 22; //~ ERROR\n+   |     ^^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error[E0381]: use of possibly uninitialized variable: `x`\n+  --> $DIR/reassignment_immutable_fields.rs:27:10\n+   |\n+LL |     drop(x); //~ ERROR\n+   |          ^ use of possibly uninitialized `x`\n+\n+error: aborting due to 7 previous errors\n+\n+Some errors occurred: E0381, E0594.\n+For more information about an error, try `rustc --explain E0381`."}, {"sha": "c433d6e25c9de134e1919de840ac5f19400dee7f", "filename": "src/test/ui/borrowck/reassignment_immutable_fields_overlapping.nll.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.nll.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -1,13 +1,13 @@\n error[E0594]: cannot assign to `x.a`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields_overlapping.rs:24:5\n+  --> $DIR/reassignment_immutable_fields_overlapping.rs:22:5\n    |\n LL |     let x: Foo;\n    |         - help: consider changing this to be mutable: `mut x`\n LL |     x.a = 1;  //~ ERROR\n    |     ^^^^^^^ cannot assign\n \n error[E0594]: cannot assign to `x.b`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields_overlapping.rs:25:5\n+  --> $DIR/reassignment_immutable_fields_overlapping.rs:23:5\n    |\n LL |     let x: Foo;\n    |         - help: consider changing this to be mutable: `mut x`", "previous_filename": "src/test/ui/nll/reassignment_immutable_fields_overlapping.stderr"}, {"sha": "add23ec8f245bb5eac78a1138aeb89f51465c1d9", "filename": "src/test/ui/borrowck/reassignment_immutable_fields_overlapping.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.rs?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -12,8 +12,6 @@\n // overlapping, so since `x` is not `mut` we should not permit\n // reassignment.\n \n-#![feature(nll)]\n-\n union Foo {\n     a: u32,\n     b: u32,", "previous_filename": "src/test/ui/nll/reassignment_immutable_fields_overlapping.rs"}, {"sha": "70849905f92ab84e1624c19063185e376e0b704f", "filename": "src/test/ui/borrowck/reassignment_immutable_fields_overlapping.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_overlapping.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -0,0 +1,20 @@\n+error[E0594]: cannot assign to field `x.a` of immutable binding\n+  --> $DIR/reassignment_immutable_fields_overlapping.rs:22:5\n+   |\n+LL |     let x: Foo;\n+   |         - consider changing this to `mut x`\n+LL |     x.a = 1;  //~ ERROR\n+   |     ^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error[E0594]: cannot assign to field `x.b` of immutable binding\n+  --> $DIR/reassignment_immutable_fields_overlapping.rs:23:5\n+   |\n+LL |     let x: Foo;\n+   |         - consider changing this to `mut x`\n+LL |     x.a = 1;  //~ ERROR\n+LL |     x.b = 22; //~ ERROR\n+   |     ^^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0594`."}, {"sha": "2160ae20c425a512e42779043fb21d6c51ee1dba", "filename": "src/test/ui/borrowck/reassignment_immutable_fields_twice.nll.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.nll.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -1,5 +1,5 @@\n error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields_twice.rs:19:5\n+  --> $DIR/reassignment_immutable_fields_twice.rs:17:5\n    |\n LL |     let x: (u32, u32);\n    |         - help: consider changing this to be mutable: `mut x`\n@@ -8,15 +8,15 @@ LL |     x.0 = 1; //~ ERROR\n    |     ^^^^^^^ cannot assign\n \n error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields_twice.rs:24:5\n+  --> $DIR/reassignment_immutable_fields_twice.rs:22:5\n    |\n LL |     let x: (u32, u32);\n    |         - help: consider changing this to be mutable: `mut x`\n LL |     x.0 = 1; //~ ERROR\n    |     ^^^^^^^ cannot assign\n \n error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields_twice.rs:25:5\n+  --> $DIR/reassignment_immutable_fields_twice.rs:23:5\n    |\n LL |     let x: (u32, u32);\n    |         - help: consider changing this to be mutable: `mut x`\n@@ -25,7 +25,7 @@ LL |     x.0 = 22; //~ ERROR\n    |     ^^^^^^^^ cannot assign\n \n error[E0594]: cannot assign to `x.1`, as `x` is not declared as mutable\n-  --> $DIR/reassignment_immutable_fields_twice.rs:26:5\n+  --> $DIR/reassignment_immutable_fields_twice.rs:24:5\n    |\n LL |     let x: (u32, u32);\n    |         - help: consider changing this to be mutable: `mut x`", "previous_filename": "src/test/ui/nll/reassignment_immutable_fields_twice.stderr"}, {"sha": "c7e7e5c453357718fa84cff9833be582864ef4d0", "filename": "src/test/ui/borrowck/reassignment_immutable_fields_twice.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.rs?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -11,8 +11,6 @@\n // This should never be allowed -- since `x` is not `mut`, so `x.0`\n // cannot be assigned twice.\n \n-#![feature(nll)]\n-\n fn var_then_field() {\n     let x: (u32, u32);\n     x = (22, 44);", "previous_filename": "src/test/ui/nll/reassignment_immutable_fields_twice.rs"}, {"sha": "b3c013d8b1f493ce3801aae56d9c4bc6874ceb9d", "filename": "src/test/ui/borrowck/reassignment_immutable_fields_twice.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Freassignment_immutable_fields_twice.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -0,0 +1,38 @@\n+error[E0594]: cannot assign to field `x.0` of immutable binding\n+  --> $DIR/reassignment_immutable_fields_twice.rs:17:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - consider changing this to `mut x`\n+LL |     x = (22, 44);\n+LL |     x.0 = 1; //~ ERROR\n+   |     ^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error[E0594]: cannot assign to field `x.0` of immutable binding\n+  --> $DIR/reassignment_immutable_fields_twice.rs:22:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - consider changing this to `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+   |     ^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error[E0594]: cannot assign to field `x.0` of immutable binding\n+  --> $DIR/reassignment_immutable_fields_twice.rs:23:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - consider changing this to `mut x`\n+LL |     x.0 = 1; //~ ERROR\n+LL |     x.0 = 22; //~ ERROR\n+   |     ^^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error[E0594]: cannot assign to field `x.1` of immutable binding\n+  --> $DIR/reassignment_immutable_fields_twice.rs:24:5\n+   |\n+LL |     let x: (u32, u32);\n+   |         - consider changing this to `mut x`\n+...\n+LL |     x.1 = 44; //~ ERROR\n+   |     ^^^^^^^^ cannot mutably borrow field of immutable binding\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0594`."}, {"sha": "d33814a0fc5f5c49cd825ebae6fceb6c5c2787b5", "filename": "src/test/ui/immut-function-arguments.ast.nll.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fimmut-function-arguments.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fimmut-function-arguments.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimmut-function-arguments.ast.nll.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -1,19 +1,19 @@\n-error[E0384]: cannot assign to immutable argument `y`\n+error[E0594]: cannot assign to `*y`, as `y` is not declared as mutable\n   --> $DIR/immut-function-arguments.rs:15:5\n    |\n LL | fn f(y: Box<isize>) {\n-   |      - consider changing this to `mut y`\n+   |      - help: consider changing this to be mutable: `mut y`\n LL |     *y = 5; //[ast]~ ERROR cannot assign\n-   |     ^^^^^^ cannot assign to immutable argument\n+   |     ^^^^^^ cannot assign\n \n-error[E0384]: cannot assign to immutable argument `q`\n+error[E0594]: cannot assign to `*q`, as `q` is not declared as mutable\n   --> $DIR/immut-function-arguments.rs:20:35\n    |\n LL |     let _frob = |q: Box<isize>| { *q = 2; }; //[ast]~ ERROR cannot assign\n-   |                  -                ^^^^^^ cannot assign to immutable argument\n+   |                  -                ^^^^^^ cannot assign\n    |                  |\n-   |                  consider changing this to `mut q`\n+   |                  help: consider changing this to be mutable: `mut q`\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0384`.\n+For more information about this error, try `rustc --explain E0594`."}, {"sha": "d33814a0fc5f5c49cd825ebae6fceb6c5c2787b5", "filename": "src/test/ui/immut-function-arguments.mir.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fimmut-function-arguments.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fimmut-function-arguments.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimmut-function-arguments.mir.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -1,19 +1,19 @@\n-error[E0384]: cannot assign to immutable argument `y`\n+error[E0594]: cannot assign to `*y`, as `y` is not declared as mutable\n   --> $DIR/immut-function-arguments.rs:15:5\n    |\n LL | fn f(y: Box<isize>) {\n-   |      - consider changing this to `mut y`\n+   |      - help: consider changing this to be mutable: `mut y`\n LL |     *y = 5; //[ast]~ ERROR cannot assign\n-   |     ^^^^^^ cannot assign to immutable argument\n+   |     ^^^^^^ cannot assign\n \n-error[E0384]: cannot assign to immutable argument `q`\n+error[E0594]: cannot assign to `*q`, as `q` is not declared as mutable\n   --> $DIR/immut-function-arguments.rs:20:35\n    |\n LL |     let _frob = |q: Box<isize>| { *q = 2; }; //[ast]~ ERROR cannot assign\n-   |                  -                ^^^^^^ cannot assign to immutable argument\n+   |                  -                ^^^^^^ cannot assign\n    |                  |\n-   |                  consider changing this to `mut q`\n+   |                  help: consider changing this to be mutable: `mut q`\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0384`.\n+For more information about this error, try `rustc --explain E0594`."}, {"sha": "033a3bd6cb4c3e80753c87a0d909bfc39892c2c8", "filename": "src/test/ui/mut/mutable-class-fields.ast.nll.stderr", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields.ast.nll.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -1,14 +1,11 @@\n-error[E0384]: cannot assign twice to immutable variable `nyan`\n+error[E0594]: cannot assign to `nyan.how_hungry`, as `nyan` is not declared as mutable\n   --> $DIR/mutable-class-fields.rs:28:3\n    |\n LL |   let nyan : cat = cat(52, 99);\n-   |       ----\n-   |       |\n-   |       first assignment to `nyan`\n-   |       consider changing this to `mut nyan`\n+   |       ---- help: consider changing this to be mutable: `mut nyan`\n LL |   nyan.how_hungry = 0; //[ast]~ ERROR cannot assign\n-   |   ^^^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable\n+   |   ^^^^^^^^^^^^^^^^^^^ cannot assign\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0384`.\n+For more information about this error, try `rustc --explain E0594`."}, {"sha": "033a3bd6cb4c3e80753c87a0d909bfc39892c2c8", "filename": "src/test/ui/mut/mutable-class-fields.mir.stderr", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields.mir.stderr?ref=58e4b54bd49a2a554ee8a573827b9ccbf7a9b65e", "patch": "@@ -1,14 +1,11 @@\n-error[E0384]: cannot assign twice to immutable variable `nyan`\n+error[E0594]: cannot assign to `nyan.how_hungry`, as `nyan` is not declared as mutable\n   --> $DIR/mutable-class-fields.rs:28:3\n    |\n LL |   let nyan : cat = cat(52, 99);\n-   |       ----\n-   |       |\n-   |       first assignment to `nyan`\n-   |       consider changing this to `mut nyan`\n+   |       ---- help: consider changing this to be mutable: `mut nyan`\n LL |   nyan.how_hungry = 0; //[ast]~ ERROR cannot assign\n-   |   ^^^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable\n+   |   ^^^^^^^^^^^^^^^^^^^ cannot assign\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0384`.\n+For more information about this error, try `rustc --explain E0594`."}]}