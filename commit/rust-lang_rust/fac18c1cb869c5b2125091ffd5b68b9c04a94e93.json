{"sha": "fac18c1cb869c5b2125091ffd5b68b9c04a94e93", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYzE4YzFjYjg2OWM1YjIxMjUwOTFmZmQ1YjY4YjljMDRhOTRlOTM=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-31T06:21:26Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-31T06:21:26Z"}, "message": "Unify the take glue functions for unique pointer types\n\nThese glue function just return void, no point in having a copy for each\ntype.", "tree": {"sha": "9bea54fe2e6438c7909fd8ae390ed5d672b422e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bea54fe2e6438c7909fd8ae390ed5d672b422e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fac18c1cb869c5b2125091ffd5b68b9c04a94e93", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fac18c1cb869c5b2125091ffd5b68b9c04a94e93", "html_url": "https://github.com/rust-lang/rust/commit/fac18c1cb869c5b2125091ffd5b68b9c04a94e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fac18c1cb869c5b2125091ffd5b68b9c04a94e93/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38d62feec1e65ba5ed57235355053782ca15b5ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/38d62feec1e65ba5ed57235355053782ca15b5ff", "html_url": "https://github.com/rust-lang/rust/commit/38d62feec1e65ba5ed57235355053782ca15b5ff"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "b052993012d8c8cfd48187702d7e8b06284f9ec4", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fac18c1cb869c5b2125091ffd5b68b9c04a94e93/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fac18c1cb869c5b2125091ffd5b68b9c04a94e93/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=fac18c1cb869c5b2125091ffd5b68b9c04a94e93", "patch": "@@ -136,7 +136,10 @@ pub fn simplified_glue_type(tcx: ty::ctxt, field: uint, t: ty::t) -> ty::t {\n \n     if field == abi::tydesc_field_take_glue {\n         match ty::get(t).sty {\n-          ty::ty_unboxed_vec(*) => { return ty::mk_u32(); }\n+          ty::ty_unboxed_vec(*) |\n+              ty::ty_uniq(*) |\n+              ty::ty_estr(ty::vstore_uniq) |\n+              ty::ty_evec(_, ty::vstore_uniq) => { return ty::mk_u32(); }\n           _ => ()\n         }\n     }"}]}