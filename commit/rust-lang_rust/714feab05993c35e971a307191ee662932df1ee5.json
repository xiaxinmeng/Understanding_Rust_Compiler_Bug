{"sha": "714feab05993c35e971a307191ee662932df1ee5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNGZlYWIwNTk5M2MzNWU5NzFhMzA3MTkxZWU2NjI5MzJkZjFlZTU=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-12-26T17:06:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-26T17:06:04Z"}, "message": "Update library/core/src/alloc/mod.rs\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "31565ea9e1373a60b5fa12e5e463e89b02185976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31565ea9e1373a60b5fa12e5e463e89b02185976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/714feab05993c35e971a307191ee662932df1ee5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf5218CRBK7hj4Ov3rIwAAdHIIAF66YW2c/1XitPGzusOlkt+K\nmEvkryHyo+I/alW6MqWullzPsttLl0NOFk3HUvEEw7zGultggjD/UPkVDJPTeIZ3\ntqi6Zecdtm9hgby/y8mTQdSu0ktTIR4z4lBLK3wceSOmkxgoeLwvKqEbMOnRdIk6\nw1oNvwUuYLCEOX/6iKT5f28jNKkZCVob+kFNik2wcgK5wCPVAq6wF2nrJF0xI+OY\nltWDRo+sKjD7rrktzowFdq+Qtsr/wwPSPalmClESnVFEH6XKqVoA4hUq51LGP8Cc\n4i2f2o/mTl8w158t026G/r1luZBzcPQEbWCWM+DqT1wF0OH1fUM0nGI8Q//jjug=\n=sYmM\n-----END PGP SIGNATURE-----\n", "payload": "tree 31565ea9e1373a60b5fa12e5e463e89b02185976\nparent 48c8ff59ecc01060532b43c2fb27f9bc7a3d8fcd\nauthor Oli Scherer <github35764891676564198441@oli-obk.de> 1609002364 +0100\ncommitter GitHub <noreply@github.com> 1609002364 +0100\n\nUpdate library/core/src/alloc/mod.rs\n\nCo-authored-by: Ralf Jung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/714feab05993c35e971a307191ee662932df1ee5", "html_url": "https://github.com/rust-lang/rust/commit/714feab05993c35e971a307191ee662932df1ee5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/714feab05993c35e971a307191ee662932df1ee5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48c8ff59ecc01060532b43c2fb27f9bc7a3d8fcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/48c8ff59ecc01060532b43c2fb27f9bc7a3d8fcd", "html_url": "https://github.com/rust-lang/rust/commit/48c8ff59ecc01060532b43c2fb27f9bc7a3d8fcd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4aa166e6aa15b7bd34d06d46dbc8775d25481700", "filename": "library/core/src/alloc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/714feab05993c35e971a307191ee662932df1ee5/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714feab05993c35e971a307191ee662932df1ee5/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs?ref=714feab05993c35e971a307191ee662932df1ee5", "patch": "@@ -96,7 +96,7 @@ pub unsafe trait AllocRef {\n     ///\n     /// Note that you may not rely on this method actually getting called, even if there are calls\n     /// to it in the source. The optimizer may detect unused allocations that it can either\n-    /// eliminate entirely or move to the stack and thus never invoke the allocator here. The\n+    /// eliminate entirely or move to the stack and thus never invoke the allocator. The\n     /// optimizer may further assume that allocation is infallible, so code that used to fail due\n     /// to allocator failures may now suddenly work because the optimizer worked around the\n     /// need for an allocation."}]}