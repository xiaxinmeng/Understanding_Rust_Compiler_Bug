{"sha": "e7d870b1883f6861e825abf3896110e2a795ccf9", "node_id": "C_kwDOAAsO6NoAKGU3ZDg3MGIxODgzZjY4NjFlODI1YWJmMzg5NjExMGUyYTc5NWNjZjk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-26T22:56:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-26T22:56:29Z"}, "message": "Rollup merge of #100890 - adriantombu:migrate_diagnostic_rustc_driver, r=davidtwco\n\nMigrate rustc_driver to SessionDiagnostic\n\nFirst timer noob here \ud83d\udc4b\ud83c\udffd I'm having a problem understanding how I can retrieve the span, and how to properly construct the error structs to avoid the current compilation errors.\n\nAny help pointing me in the right direction would be much appreciated \ud83d\ude4c\ud83c\udffd", "tree": {"sha": "2edc4841ff40098165837a046c88fd4dbfb554dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2edc4841ff40098165837a046c88fd4dbfb554dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7d870b1883f6861e825abf3896110e2a795ccf9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjCU+dCRBK7hj4Ov3rIwAAP4wIAByHtqLFfKD/jiIKGgH+JAhM\nh77dTt2hk9EcKY9Z3yfAjmMzw9ZGyBBUwUQ7vZsZPoIBgwJcCvCnNbW/BpCQaaW9\nf5zu0oJTs3APPTUCd6fSpRkIlSMpJWFcHOTX+VowBDxTMK9N0e4QraSgGWOdVOp+\n7gj8/K9OLgz0hcsiWvjug1C/gBhKF4CWX154SbQ0ZjNrCrkytvhW9faO9nzYf2Nr\nFbtTvCn4vDzw2dyDaeCaRA0BdW+iEWT7JahjF7zZrS9/r6I1I288W93CQvwql8aW\nD8bgB8A8SfaLGyIPHgY4x3hag/GVy6Gr5Sm6pTZdMzKR3F2Y7dHFO/lj2Z43Rnw=\n=YajY\n-----END PGP SIGNATURE-----\n", "payload": "tree 2edc4841ff40098165837a046c88fd4dbfb554dd\nparent d97e616e2134a0301b39f3af16bc43193f34c602\nparent d0401f7f475a2cad5c81114ff916b766b3cbd9c6\nauthor Michael Goulet <michael@errs.io> 1661554589 -0700\ncommitter GitHub <noreply@github.com> 1661554589 -0700\n\nRollup merge of #100890 - adriantombu:migrate_diagnostic_rustc_driver, r=davidtwco\n\nMigrate rustc_driver to SessionDiagnostic\n\nFirst timer noob here \ud83d\udc4b\ud83c\udffd I'm having a problem understanding how I can retrieve the span, and how to properly construct the error structs to avoid the current compilation errors.\n\nAny help pointing me in the right direction would be much appreciated \ud83d\ude4c\ud83c\udffd\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7d870b1883f6861e825abf3896110e2a795ccf9", "html_url": "https://github.com/rust-lang/rust/commit/e7d870b1883f6861e825abf3896110e2a795ccf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7d870b1883f6861e825abf3896110e2a795ccf9/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d97e616e2134a0301b39f3af16bc43193f34c602", "url": "https://api.github.com/repos/rust-lang/rust/commits/d97e616e2134a0301b39f3af16bc43193f34c602", "html_url": "https://github.com/rust-lang/rust/commit/d97e616e2134a0301b39f3af16bc43193f34c602"}, {"sha": "d0401f7f475a2cad5c81114ff916b766b3cbd9c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0401f7f475a2cad5c81114ff916b766b3cbd9c6", "html_url": "https://github.com/rust-lang/rust/commit/d0401f7f475a2cad5c81114ff916b766b3cbd9c6"}], "stats": {"total": 107, "additions": 95, "deletions": 12}, "files": [{"sha": "2ea32a8012030b6a8a7b0eada81193850001723c", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e7d870b1883f6861e825abf3896110e2a795ccf9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e7d870b1883f6861e825abf3896110e2a795ccf9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e7d870b1883f6861e825abf3896110e2a795ccf9", "patch": "@@ -3820,6 +3820,7 @@ dependencies = [\n  \"rustc_interface\",\n  \"rustc_lint\",\n  \"rustc_log\",\n+ \"rustc_macros\",\n  \"rustc_metadata\",\n  \"rustc_middle\",\n  \"rustc_parse\","}, {"sha": "0faf51b062b4ce81f684c936da6a9ab68d3a94ef", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=e7d870b1883f6861e825abf3896110e2a795ccf9", "patch": "@@ -168,6 +168,13 @@ pub struct CodegenResults {\n     pub crate_info: CrateInfo,\n }\n \n+pub enum CodegenErrors<'a> {\n+    WrongFileType,\n+    EmptyVersionNumber,\n+    EncodingVersionMismatch { version_array: String, rlink_version: u32 },\n+    RustcVersionMismatch { rustc_version: String, current_version: &'a str },\n+}\n+\n pub fn provide(providers: &mut Providers) {\n     crate::back::symbol_export::provide(providers);\n     crate::base::provide(providers);\n@@ -212,30 +219,34 @@ impl CodegenResults {\n         encoder.finish()\n     }\n \n-    pub fn deserialize_rlink(data: Vec<u8>) -> Result<Self, String> {\n+    pub fn deserialize_rlink<'a>(data: Vec<u8>) -> Result<Self, CodegenErrors<'a>> {\n         // The Decodable machinery is not used here because it panics if the input data is invalid\n         // and because its internal representation may change.\n         if !data.starts_with(RLINK_MAGIC) {\n-            return Err(\"The input does not look like a .rlink file\".to_string());\n+            return Err(CodegenErrors::WrongFileType);\n         }\n         let data = &data[RLINK_MAGIC.len()..];\n         if data.len() < 4 {\n-            return Err(\"The input does not contain version number\".to_string());\n+            return Err(CodegenErrors::EmptyVersionNumber);\n         }\n \n         let mut version_array: [u8; 4] = Default::default();\n         version_array.copy_from_slice(&data[..4]);\n         if u32::from_be_bytes(version_array) != RLINK_VERSION {\n-            return Err(\".rlink file was produced with encoding version {version_array}, but the current version is {RLINK_VERSION}\".to_string());\n+            return Err(CodegenErrors::EncodingVersionMismatch {\n+                version_array: String::from_utf8_lossy(&version_array).to_string(),\n+                rlink_version: RLINK_VERSION,\n+            });\n         }\n \n         let mut decoder = MemDecoder::new(&data[4..], 0);\n         let rustc_version = decoder.read_str();\n         let current_version = RUSTC_VERSION.unwrap();\n         if rustc_version != current_version {\n-            return Err(format!(\n-                \".rlink file was produced by rustc version {rustc_version}, but the current version is {current_version}.\"\n-            ));\n+            return Err(CodegenErrors::RustcVersionMismatch {\n+                rustc_version: rustc_version.to_string(),\n+                current_version,\n+            });\n         }\n \n         let codegen_results = CodegenResults::decode(&mut decoder);"}, {"sha": "4570c1448337eec7b661868deb0d81d64f219916", "filename": "compiler/rustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2FCargo.toml?ref=e7d870b1883f6861e825abf3896110e2a795ccf9", "patch": "@@ -19,6 +19,7 @@ rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_hir_pretty = { path = \"../rustc_hir_pretty\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n rustc_metadata = { path = \"../rustc_metadata\" }\n rustc_parse = { path = \"../rustc_parse\" }\n rustc_plugin_impl = { path = \"../rustc_plugin_impl\" }"}, {"sha": "a193d5db6916a08af8eaf61d186d86210a13c998", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=e7d870b1883f6861e825abf3896110e2a795ccf9", "patch": "@@ -9,14 +9,16 @@\n #![feature(once_cell)]\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate tracing;\n \n pub extern crate rustc_plugin_impl as plugin;\n \n use rustc_ast as ast;\n-use rustc_codegen_ssa::{traits::CodegenBackend, CodegenResults};\n+use rustc_codegen_ssa::{traits::CodegenBackend, CodegenErrors, CodegenResults};\n use rustc_data_structures::profiling::{get_resident_set_size, print_time_passes_entry};\n use rustc_data_structures::sync::SeqCst;\n use rustc_errors::registry::{InvalidErrorCode, Registry};\n@@ -56,6 +58,12 @@ use std::time::Instant;\n \n pub mod args;\n pub mod pretty;\n+mod session_diagnostics;\n+\n+use crate::session_diagnostics::{\n+    RLinkEmptyVersionNumber, RLinkEncodingVersionMismatch, RLinkRustcVersionMismatch,\n+    RLinkWrongFileType, RlinkNotAFile, RlinkUnableToRead,\n+};\n \n /// Exit status code used for successful compilation and help output.\n pub const EXIT_SUCCESS: i32 = 0;\n@@ -581,18 +589,35 @@ pub fn try_process_rlink(sess: &Session, compiler: &interface::Compiler) -> Comp\n             sess.init_crate_types(collect_crate_types(sess, &[]));\n             let outputs = compiler.build_output_filenames(sess, &[]);\n             let rlink_data = fs::read(file).unwrap_or_else(|err| {\n-                sess.fatal(&format!(\"failed to read rlink file: {}\", err));\n+                sess.emit_fatal(RlinkUnableToRead { err });\n             });\n             let codegen_results = match CodegenResults::deserialize_rlink(rlink_data) {\n                 Ok(codegen) => codegen,\n-                Err(error) => {\n-                    sess.fatal(&format!(\"Could not deserialize .rlink file: {error}\"));\n+                Err(err) => {\n+                    match err {\n+                        CodegenErrors::WrongFileType => sess.emit_fatal(RLinkWrongFileType),\n+                        CodegenErrors::EmptyVersionNumber => {\n+                            sess.emit_fatal(RLinkEmptyVersionNumber)\n+                        }\n+                        CodegenErrors::EncodingVersionMismatch { version_array, rlink_version } => {\n+                            sess.emit_fatal(RLinkEncodingVersionMismatch {\n+                                version_array,\n+                                rlink_version,\n+                            })\n+                        }\n+                        CodegenErrors::RustcVersionMismatch { rustc_version, current_version } => {\n+                            sess.emit_fatal(RLinkRustcVersionMismatch {\n+                                rustc_version,\n+                                current_version,\n+                            })\n+                        }\n+                    };\n                 }\n             };\n             let result = compiler.codegen_backend().link(sess, codegen_results, &outputs);\n             abort_on_err(result, sess);\n         } else {\n-            sess.fatal(\"rlink must be a file\")\n+            sess.emit_fatal(RlinkNotAFile {})\n         }\n         Compilation::Stop\n     } else {"}, {"sha": "fe64d0fca9b20c58771ce834bdb5c28a594e3912", "filename": "compiler/rustc_driver/src/session_diagnostics.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs?ref=e7d870b1883f6861e825abf3896110e2a795ccf9", "patch": "@@ -0,0 +1,33 @@\n+use rustc_macros::SessionDiagnostic;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_unable_to_read)]\n+pub(crate) struct RlinkUnableToRead {\n+    pub err: std::io::Error,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_wrong_file_type)]\n+pub(crate) struct RLinkWrongFileType;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_empty_version_number)]\n+pub(crate) struct RLinkEmptyVersionNumber;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_encoding_version_mismatch)]\n+pub(crate) struct RLinkEncodingVersionMismatch {\n+    pub version_array: String,\n+    pub rlink_version: u32,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_rustc_version_mismatch)]\n+pub(crate) struct RLinkRustcVersionMismatch<'a> {\n+    pub rustc_version: String,\n+    pub current_version: &'a str,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_no_a_file)]\n+pub(crate) struct RlinkNotAFile;"}, {"sha": "73f084cf3290bf7d1d8e7a0af03b4a35410aafa4", "filename": "compiler/rustc_error_messages/locales/en-US/driver.ftl", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl?ref=e7d870b1883f6861e825abf3896110e2a795ccf9", "patch": "@@ -0,0 +1,11 @@\n+driver_rlink_unable_to_read = failed to read rlink file: `{$err}`\n+\n+driver_rlink_wrong_file_type = The input does not look like a .rlink file\n+\n+driver_rlink_empty_version_number = The input does not contain version number\n+\n+driver_rlink_encoding_version_mismatch = .rlink file was produced with encoding version `{$version_array}`, but the current version is `{$rlink_version}`\n+\n+driver_rlink_rustc_version_mismatch = .rlink file was produced by rustc version `{$rustc_version}`, but the current version is `{$current_version}`\n+\n+driver_rlink_no_a_file = rlink must be a file"}, {"sha": "b18d1f553e49969dc769fe1aa9db0eda4ab81b12", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d870b1883f6861e825abf3896110e2a795ccf9/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=e7d870b1883f6861e825abf3896110e2a795ccf9", "patch": "@@ -38,6 +38,7 @@ fluent_messages! {\n     borrowck => \"../locales/en-US/borrowck.ftl\",\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n     const_eval => \"../locales/en-US/const_eval.ftl\",\n+    driver => \"../locales/en-US/driver.ftl\",\n     expand => \"../locales/en-US/expand.ftl\",\n     interface => \"../locales/en-US/interface.ftl\",\n     lint => \"../locales/en-US/lint.ftl\","}]}