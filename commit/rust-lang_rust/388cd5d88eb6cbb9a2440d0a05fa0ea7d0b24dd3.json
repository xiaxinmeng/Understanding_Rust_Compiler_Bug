{"sha": "388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4OGNkNWQ4OGViNmNiYjlhMjQ0MGQwYTA1ZmEwZWE3ZDBiMjRkZDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-16T09:29:10Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-16T20:25:34Z"}, "message": "avoid duplicate issues for Miri build failures", "tree": {"sha": "fc2faebf1b3a3366f1b4e8b644eedf453cf4dbb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc2faebf1b3a3366f1b4e8b644eedf453cf4dbb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3", "html_url": "https://github.com/rust-lang/rust/commit/388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a44881d892fb4f4a8ed93f8f392bab942fac7a41", "url": "https://api.github.com/repos/rust-lang/rust/commits/a44881d892fb4f4a8ed93f8f392bab942fac7a41", "html_url": "https://github.com/rust-lang/rust/commit/a44881d892fb4f4a8ed93f8f392bab942fac7a41"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "7cf3cc7663b470f35dedeaaf07a118c94f9d1bcf", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3", "patch": "@@ -201,7 +201,9 @@ def update_latest(\n                 new = s.get(tool, old)\n                 status[os] = new\n                 maintainers = ' '.join('@'+name for name in MAINTAINERS[tool])\n-                if new > old: # comparing the strings, but they are ordered appropriately!\n+                # comparing the strings, but they are ordered appropriately:\n+                # \"test-pass\" > \"test-fail\" > \"build-fail\"\n+                if new > old:\n                     # things got fixed or at least the status quo improved\n                     changed = True\n                     message += '\ud83c\udf89 {} on {}: {} \u2192 {} (cc {}, @rust-lang/infra).\\n' \\\n@@ -213,10 +215,17 @@ def update_latest(\n                         .format(tool, os, old, new)\n                     message += '{} (cc {}, @rust-lang/infra).\\n' \\\n                         .format(title, maintainers)\n-                    # Most tools only create issues for build failures.\n-                    # Other failures can be spurious.\n-                    if new == 'build-fail' or (tool == 'miri' and new == 'test-fail'):\n-                        create_issue_for_status = new\n+                    # See if we need to create an issue.\n+                    if tool == 'miri':\n+                        # Create issue if tests used to pass before. Don't open a *second*\n+                        # issue when we regress from \"test-fail\" to \"build-fail\".\n+                        if old == 'test-pass':\n+                            create_issue_for_status = new\n+                    else:\n+                        # Create issue if things no longer build.\n+                        # (No issue for mere test failures to avoid spurious issues.)\n+                        if new == 'build-fail':\n+                            create_issue_for_status = new\n \n             if create_issue_for_status is not None:\n                 try:"}]}