{"sha": "2f340a4d3dd2472800401ca23285c26d2ebcfcf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMzQwYTRkM2RkMjQ3MjgwMDQwMWNhMjMyODVjMjZkMmViY2ZjZjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-05T06:12:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-05T23:21:55Z"}, "message": "rpath the path to the runtime\n\nWe don't currently rpath native libs, but we do know where rustrt is\nlocated and everything needs to link to it.", "tree": {"sha": "94af823f39dc23487521b5114af418ea0c63c0c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94af823f39dc23487521b5114af418ea0c63c0c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f340a4d3dd2472800401ca23285c26d2ebcfcf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f340a4d3dd2472800401ca23285c26d2ebcfcf5", "html_url": "https://github.com/rust-lang/rust/commit/2f340a4d3dd2472800401ca23285c26d2ebcfcf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f340a4d3dd2472800401ca23285c26d2ebcfcf5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d5471f6ab90c1e0904c6f7eb34b01d2603534bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5471f6ab90c1e0904c6f7eb34b01d2603534bc", "html_url": "https://github.com/rust-lang/rust/commit/3d5471f6ab90c1e0904c6f7eb34b01d2603534bc"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "a2513649e942d6bc6563cbb6e269a146f440e70c", "filename": "src/comp/back/rpath.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2f340a4d3dd2472800401ca23285c26d2ebcfcf5/src%2Fcomp%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f340a4d3dd2472800401ca23285c26d2ebcfcf5/src%2Fcomp%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Frpath.rs?ref=2f340a4d3dd2472800401ca23285c26d2ebcfcf5", "patch": "@@ -20,17 +20,30 @@ fn get_rpath_flags(sess: session::session, out_filename: str) -> [str] {\n     let sysroot = sess.filesearch().sysroot();\n     let output = out_filename;\n     let libs = cstore::get_used_crate_files(sess.get_cstore());\n+    // We don't currently rpath native libraries, but we know\n+    // where rustrt is and we know every rust program needs it\n+    let libs = libs + [get_sysroot_absolute_rt_lib(sess)];\n+\n     let target_triple = sess.get_opts().target_triple;\n     let rpaths = get_rpaths(cwd, sysroot, output, libs, target_triple);\n     rpaths_to_flags(rpaths);\n-    [] // FIXME: activate RPATH!\n+    [] // FIXME: Activate RPATH!\n }\n \n #[cfg(target_os=\"win32\")]\n fn get_rpath_flags(_sess: session::session, _out_filename: str) -> [str] {\n     []\n }\n \n+fn get_sysroot_absolute_rt_lib(sess: session::session) -> fs::path {\n+    let path = [sess.filesearch().sysroot()]\n+        + filesearch::relative_target_lib_path(\n+            sess.get_opts().target_triple)\n+        + [os::dylib_filename(\"rustrt\")];\n+    check vec::is_not_empty(path);\n+    fs::connect_many(path)\n+}\n+\n fn rpaths_to_flags(rpaths: [str]) -> [str] {\n     vec::map({ |rpath| #fmt(\"-Wl,-rpath,%s\",rpath)}, rpaths)\n }"}]}