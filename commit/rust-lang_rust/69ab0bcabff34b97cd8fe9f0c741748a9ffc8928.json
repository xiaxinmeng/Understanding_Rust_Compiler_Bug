{"sha": "69ab0bcabff34b97cd8fe9f0c741748a9ffc8928", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YWIwYmNhYmZmMzRiOTdjZDhmZTlmMGM3NDE3NDhhOWZmYzg5Mjg=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-07T20:26:09Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-07T20:26:09Z"}, "message": "Use 'error-pattern' in ui test", "tree": {"sha": "040196dada7bb76d8b0cf1c0acfe12107eea7cb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/040196dada7bb76d8b0cf1c0acfe12107eea7cb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69ab0bcabff34b97cd8fe9f0c741748a9ffc8928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69ab0bcabff34b97cd8fe9f0c741748a9ffc8928", "html_url": "https://github.com/rust-lang/rust/commit/69ab0bcabff34b97cd8fe9f0c741748a9ffc8928", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69ab0bcabff34b97cd8fe9f0c741748a9ffc8928/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdda98aaba493be28569083c5ac57629caf3504d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdda98aaba493be28569083c5ac57629caf3504d", "html_url": "https://github.com/rust-lang/rust/commit/bdda98aaba493be28569083c5ac57629caf3504d"}], "stats": {"total": 23, "additions": 6, "deletions": 17}, "files": [{"sha": "77370e1ccc59e2e74d8d27ed7b6a59765264b4d1", "filename": "src/test/ui/assume-type-intrinsics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69ab0bcabff34b97cd8fe9f0c741748a9ffc8928/src%2Ftest%2Fui%2Fassume-type-intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ab0bcabff34b97cd8fe9f0c741748a9ffc8928/src%2Ftest%2Fui%2Fassume-type-intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassume-type-intrinsics.rs?ref=69ab0bcabff34b97cd8fe9f0c741748a9ffc8928", "patch": "@@ -1,11 +1,13 @@\n+// error-pattern: any use of this value will cause an error\n+\n #![feature(never_type)]\n #![feature(const_maybe_uninit_assume_init)]\n \n+#[allow(invalid_value)]\n fn main() {\n     use std::mem::MaybeUninit;\n \n     const _BAD: () = unsafe {\n         MaybeUninit::<!>::uninit().assume_init();\n-        //~^ WARN: the type `!` does not permit being left uninitialized\n     };\n }"}, {"sha": "6f400086a548c0edf8d7978f7f122ee930fcb40c", "filename": "src/test/ui/assume-type-intrinsics.stderr", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/69ab0bcabff34b97cd8fe9f0c741748a9ffc8928/src%2Ftest%2Fui%2Fassume-type-intrinsics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/69ab0bcabff34b97cd8fe9f0c741748a9ffc8928/src%2Ftest%2Fui%2Fassume-type-intrinsics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassume-type-intrinsics.stderr?ref=69ab0bcabff34b97cd8fe9f0c741748a9ffc8928", "patch": "@@ -6,29 +6,16 @@ LL |               intrinsics::assert_inhabited::<T>();\n    |               |\n    |               attempted to instantiate uninhabited type `!`\n    |               inside `MaybeUninit::<!>::assume_init` at $SRC_DIR/core/src/mem/maybe_uninit.rs:LL:COL\n-   |               inside `_BAD` at $DIR/assume-type-intrinsics.rs:8:9\n+   |               inside `_BAD` at $DIR/assume-type-intrinsics.rs:11:9\n    | \n-  ::: $DIR/assume-type-intrinsics.rs:7:5\n+  ::: $DIR/assume-type-intrinsics.rs:10:5\n    |\n LL | /     const _BAD: () = unsafe {\n LL | |         MaybeUninit::<!>::uninit().assume_init();\n-LL | |\n LL | |     };\n    | |______-\n    |\n    = note: `#[deny(const_err)]` on by default\n \n-warning: the type `!` does not permit being left uninitialized\n-  --> $DIR/assume-type-intrinsics.rs:8:9\n-   |\n-LL |         MaybeUninit::<!>::uninit().assume_init();\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |         |\n-   |         this code causes undefined behavior when executed\n-   |         help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n-   |\n-   = note: `#[warn(invalid_value)]` on by default\n-   = note: the `!` type has no valid value\n-\n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}]}