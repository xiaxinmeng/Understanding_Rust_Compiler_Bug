{"sha": "edc6b93b855ef342e0f3f5935eef60b3218a9b97", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYzZiOTNiODU1ZWYzNDJlMGYzZjU5MzVlZWY2MGIzMjE4YTliOTc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-10-21T10:03:34Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-10-21T10:03:34Z"}, "message": "adjust some comments referencing locals", "tree": {"sha": "0972763170949427bd0cfc5b45585ae2d15ed416", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0972763170949427bd0cfc5b45585ae2d15ed416"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edc6b93b855ef342e0f3f5935eef60b3218a9b97", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYCef2AAoJEFbW7qD8Z6xGp44P/3snrSK/1JHg4STzyPQUAU0K\n+DH3+ufSMrYvsthk0vdG6lSjVIIWmgL74+lzgksK+q2INVXQcb1Qoa9WeTB1WhUJ\nqvEDeeVQgr/hSB2VutTQxX1gOtW1tkbdT+wVN4pVeKPJ5aw0sdaqkTB2nsJj/HsO\n5OdEC3zWGPHi5JA1wTfTXZjOyMXTClnJT8XkhSsscnq3/X4hVLC9ekia6XuZQ14i\nZyOz23D2w1XTdkLGvaOa+ouuYKDbhvBCKaPLZu1FnN2w7+uj8dc3ULiwWiJqlDpA\nJdvv587qM5q0fUc19PVf5Q+ITbApHLl5KcKEQddTmf9SLqL52imFeCvYCsrYfBNq\nuFxSdUniPuu8kkEFcXfNnS/y0DNbLw10JXsl+yvY/+3uTwmNBcmoC54CrhihM7in\nmk7vujznBfkN5B8ccQPWbRfcTVup0zIRMbnTT0i+70q4qsL6n8EC8Sm//OqTCou9\n58DZgmkoovnbEM4fku7qHiLgDtOl7B78QAeWtH9CA4z7IKeUrY10wfQfJ76izKGi\nppgiGviq46cqwYjtMSzOA83TBKzOSBJjupbMwf4lklUrSKnVlNL1gDQxmnHEGQjo\nd1GiPhTKavxNzS0nccmcSmZh4gW828aTfQQcNLXc35uji4F/cqtGfnh1kuBhhTSK\nJVvMWmFDb2JIW2PPqrWW\n=Gcbe\n-----END PGP SIGNATURE-----", "payload": "tree 0972763170949427bd0cfc5b45585ae2d15ed416\nparent 9d0b903d9db7baa07c3b1bac274e1b071005f44d\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1477044214 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1477044214 +0200\n\nadjust some comments referencing locals"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edc6b93b855ef342e0f3f5935eef60b3218a9b97", "html_url": "https://github.com/rust-lang/rust/commit/edc6b93b855ef342e0f3f5935eef60b3218a9b97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edc6b93b855ef342e0f3f5935eef60b3218a9b97/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d0b903d9db7baa07c3b1bac274e1b071005f44d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0b903d9db7baa07c3b1bac274e1b071005f44d", "html_url": "https://github.com/rust-lang/rust/commit/9d0b903d9db7baa07c3b1bac274e1b071005f44d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ed5dc96458c1b65ddde0c3b25e7b3b4f4b724506", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/edc6b93b855ef342e0f3f5935eef60b3218a9b97/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edc6b93b855ef342e0f3f5935eef60b3218a9b97/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=edc6b93b855ef342e0f3f5935eef60b3218a9b97", "patch": "@@ -1274,17 +1274,17 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         dest_ty: Ty<'tcx>,\n     ) -> EvalResult<'tcx, ()> {\n         if let Some(Value::ByRef(dest_ptr)) = old_dest_val {\n-            // If the local value is already `ByRef` (that is, backed by an `Allocation`),\n+            // If the value is already `ByRef` (that is, backed by an `Allocation`),\n             // then we must write the new value into this allocation, because there may be\n             // other pointers into the allocation. These other pointers are logically\n             // pointers into the local variable, and must be able to observe the change.\n             //\n             // Thus, it would be an error to replace the `ByRef` with a `ByVal`, unless we\n-            // knew for certain that there were no outstanding pointers to this local.\n+            // knew for certain that there were no outstanding pointers to this allocation.\n             self.write_value_to_ptr(src_val, dest_ptr, dest_ty)?;\n \n         } else if let Value::ByRef(src_ptr) = src_val {\n-            // If the local value is not `ByRef`, then we know there are no pointers to it\n+            // If the value is not `ByRef`, then we know there are no pointers to it\n             // and we can simply overwrite the `Value` in the locals array directly.\n             //\n             // In this specific case, where the source value is `ByRef`, we must duplicate\n@@ -1301,7 +1301,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n         } else {\n             // Finally, we have the simple case where neither source nor destination are\n-            // `ByRef`. We may simply copy the source value over the the destintion local.\n+            // `ByRef`. We may simply copy the source value over the the destintion.\n             write_dest(self, src_val);\n         }\n         Ok(())"}]}