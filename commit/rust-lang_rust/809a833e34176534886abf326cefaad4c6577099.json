{"sha": "809a833e34176534886abf326cefaad4c6577099", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwOWE4MzNlMzQxNzY1MzQ4ODZhYmYzMjZjZWZhYWQ0YzY1NzcwOTk=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-08-26T00:43:26Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-08-26T01:33:57Z"}, "message": "Test case for unchecked blocks", "tree": {"sha": "19f287816d9c3b1b8fd8b5b69540dc456e886229", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19f287816d9c3b1b8fd8b5b69540dc456e886229"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/809a833e34176534886abf326cefaad4c6577099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/809a833e34176534886abf326cefaad4c6577099", "html_url": "https://github.com/rust-lang/rust/commit/809a833e34176534886abf326cefaad4c6577099", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/809a833e34176534886abf326cefaad4c6577099/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f841e894437843c142ebd7e0b0a18ed00ed52457", "url": "https://api.github.com/repos/rust-lang/rust/commits/f841e894437843c142ebd7e0b0a18ed00ed52457", "html_url": "https://github.com/rust-lang/rust/commit/f841e894437843c142ebd7e0b0a18ed00ed52457"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "1029a4490dfa3a35a3e372c9a5a9bde18a56ed4c", "filename": "src/test/run-pass/unchecked-predicates.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/809a833e34176534886abf326cefaad4c6577099/src%2Ftest%2Frun-pass%2Funchecked-predicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809a833e34176534886abf326cefaad4c6577099/src%2Ftest%2Frun-pass%2Funchecked-predicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funchecked-predicates.rs?ref=809a833e34176534886abf326cefaad4c6577099", "patch": "@@ -0,0 +1,41 @@\n+// xfail-stage0\n+// Uses foldl to exhibit the unchecked block syntax.\n+use std;\n+\n+import std::list::*;\n+\n+// Can't easily be written as a \"pure fn\" because there's\n+// no syntax for specifying that f is pure.\n+fn pure_foldl<@T, @U>(ls: &list<T>, u: &U, f: &block(&T, &U) -> U) -> U {\n+    alt ls {\n+      nil. { u }\n+      cons(hd, tl) { f(hd, pure_foldl(*tl, f(hd, u), f)) }\n+    }\n+}\n+\n+// Shows how to use an \"unchecked\" block to call a general\n+// fn from a pure fn\n+pure fn pure_length<@T>(ls: &list<T>) -> uint {\n+    fn count<T>(_t: &T, u: &uint) -> uint { u + 1u }\n+    unchecked {\n+        pure_foldl(ls, 0u, count)\n+    }\n+}\n+\n+pure fn nonempty_list<@T>(ls: &list<T>) -> bool {\n+    pure_length(ls) > 0u\n+}\n+\n+ // Of course, the compiler can't take advantage of the\n+    // knowledge that ls is a cons node. Future work.\n+    // Also, this is pretty contrived since nonempty_list\n+    // could be a \"tag refinement\", if we implement those.\n+fn safe_head<@T>(ls: &list<T>) : nonempty_list(ls) -> T { car(ls) }\n+\n+fn main() {\n+    let mylist = cons(@1u, @nil);\n+    // Again, a way to eliminate such \"obvious\" checks seems\n+    // desirable. (Tags could have postconditions.)\n+    check(nonempty_list(mylist));\n+    assert (*(safe_head(mylist)) == 1u);\n+}\n\\ No newline at end of file"}]}