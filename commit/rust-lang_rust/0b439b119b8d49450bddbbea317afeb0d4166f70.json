{"sha": "0b439b119b8d49450bddbbea317afeb0d4166f70", "node_id": "C_kwDOAAsO6NoAKDBiNDM5YjExOWI4ZDQ5NDUwYmRkYmJlYTMxN2FmZWIwZDQxNjZmNzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-13T13:37:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-13T13:37:22Z"}, "message": "Auto merge of #107989 - matthiaskrgr:rollup-jklrd5g, r=matthiaskrgr\n\nRollup of 6 pull requests\n\nSuccessful merges:\n\n - #107340 (rustdoc: merge doctest tooltip with notable traits tooltip)\n - #107838 (Introduce `-Zterminal-urls` to use OSC8 for error codes)\n - #107922 (Print disk usage in PGO CI script)\n - #107931 (Intern span when length is MAX_LEN with parent.)\n - #107935 (rustc_ast: Merge impls and reorder methods for attributes and meta items)\n - #107986 (layout: deal with placeholders, ICE on bound types)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "c3d4ed39a42f455403c13fc1814595d389a2e9df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3d4ed39a42f455403c13fc1814595d389a2e9df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b439b119b8d49450bddbbea317afeb0d4166f70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b439b119b8d49450bddbbea317afeb0d4166f70", "html_url": "https://github.com/rust-lang/rust/commit/0b439b119b8d49450bddbbea317afeb0d4166f70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b439b119b8d49450bddbbea317afeb0d4166f70/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d91939bb7130a8e6c092a290b7d37f654e3c23c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d91939bb7130a8e6c092a290b7d37f654e3c23c", "html_url": "https://github.com/rust-lang/rust/commit/2d91939bb7130a8e6c092a290b7d37f654e3c23c"}, {"sha": "8701e8072276dff00b799f1efe2020947d2b0d98", "url": "https://api.github.com/repos/rust-lang/rust/commits/8701e8072276dff00b799f1efe2020947d2b0d98", "html_url": "https://github.com/rust-lang/rust/commit/8701e8072276dff00b799f1efe2020947d2b0d98"}], "stats": {"total": 1198, "additions": 630, "deletions": 568}, "files": [{"sha": "e75d2f77dbbad8eb9491e338e76d5258a3461d9f", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 311, "deletions": 315, "changes": 626, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -40,84 +40,65 @@ impl MarkedAttrs {\n     }\n }\n \n-impl NestedMetaItem {\n-    /// Returns the `MetaItem` if `self` is a `NestedMetaItem::MetaItem`.\n-    pub fn meta_item(&self) -> Option<&MetaItem> {\n-        match self {\n-            NestedMetaItem::MetaItem(item) => Some(item),\n-            _ => None,\n-        }\n-    }\n+pub struct AttrIdGenerator(WorkerLocal<Cell<u32>>);\n \n-    /// Returns the `MetaItemLit` if `self` is a `NestedMetaItem::Literal`s.\n-    pub fn lit(&self) -> Option<&MetaItemLit> {\n-        match self {\n-            NestedMetaItem::Lit(lit) => Some(lit),\n-            _ => None,\n-        }\n-    }\n+#[cfg(debug_assertions)]\n+static MAX_ATTR_ID: AtomicU32 = AtomicU32::new(u32::MAX);\n \n-    /// Returns `true` if this list item is a MetaItem with a name of `name`.\n-    pub fn has_name(&self, name: Symbol) -> bool {\n-        self.meta_item().map_or(false, |meta_item| meta_item.has_name(name))\n-    }\n+impl AttrIdGenerator {\n+    pub fn new() -> Self {\n+        // We use `(index as u32).reverse_bits()` to initialize the\n+        // starting value of AttrId in each worker thread.\n+        // The `index` is the index of the worker thread.\n+        // This ensures that the AttrId generated in each thread is unique.\n+        AttrIdGenerator(WorkerLocal::new(|index| {\n+            let index: u32 = index.try_into().unwrap();\n \n-    /// For a single-segment meta item, returns its name; otherwise, returns `None`.\n-    pub fn ident(&self) -> Option<Ident> {\n-        self.meta_item().and_then(|meta_item| meta_item.ident())\n-    }\n-    pub fn name_or_empty(&self) -> Symbol {\n-        self.ident().unwrap_or_else(Ident::empty).name\n-    }\n+            #[cfg(debug_assertions)]\n+            {\n+                let max_id = ((index + 1).next_power_of_two() - 1).bitxor(u32::MAX).reverse_bits();\n+                MAX_ATTR_ID.fetch_min(max_id, Ordering::Release);\n+            }\n \n-    /// Gets the string value if `self` is a `MetaItem` and the `MetaItem` is a\n-    /// `MetaItemKind::NameValue` variant containing a string, otherwise `None`.\n-    pub fn value_str(&self) -> Option<Symbol> {\n-        self.meta_item().and_then(|meta_item| meta_item.value_str())\n+            Cell::new(index.reverse_bits())\n+        }))\n     }\n \n-    /// Returns a name and single literal value tuple of the `MetaItem`.\n-    pub fn name_value_literal(&self) -> Option<(Symbol, &MetaItemLit)> {\n-        self.meta_item().and_then(|meta_item| {\n-            meta_item.meta_item_list().and_then(|meta_item_list| {\n-                if meta_item_list.len() == 1\n-                    && let Some(ident) = meta_item.ident()\n-                    && let Some(lit) = meta_item_list[0].lit()\n-                {\n-                    return Some((ident.name, lit));\n-                }\n-                None\n-            })\n-        })\n-    }\n+    pub fn mk_attr_id(&self) -> AttrId {\n+        let id = self.0.get();\n \n-    /// Gets a list of inner meta items from a list `MetaItem` type.\n-    pub fn meta_item_list(&self) -> Option<&[NestedMetaItem]> {\n-        self.meta_item().and_then(|meta_item| meta_item.meta_item_list())\n-    }\n+        // Ensure the assigned attr_id does not overlap the bits\n+        // representing the number of threads.\n+        #[cfg(debug_assertions)]\n+        assert!(id <= MAX_ATTR_ID.load(Ordering::Acquire));\n \n-    /// Returns `true` if the variant is `MetaItem`.\n-    pub fn is_meta_item(&self) -> bool {\n-        self.meta_item().is_some()\n+        self.0.set(id + 1);\n+        AttrId::from_u32(id)\n     }\n+}\n \n-    /// Returns `true` if `self` is a `MetaItem` and the meta item is a word.\n-    pub fn is_word(&self) -> bool {\n-        self.meta_item().map_or(false, |meta_item| meta_item.is_word())\n+impl Attribute {\n+    pub fn get_normal_item(&self) -> &AttrItem {\n+        match &self.kind {\n+            AttrKind::Normal(normal) => &normal.item,\n+            AttrKind::DocComment(..) => panic!(\"unexpected doc comment\"),\n+        }\n     }\n \n-    /// See [`MetaItem::name_value_literal_span`].\n-    pub fn name_value_literal_span(&self) -> Option<Span> {\n-        self.meta_item()?.name_value_literal_span()\n+    pub fn unwrap_normal_item(self) -> AttrItem {\n+        match self.kind {\n+            AttrKind::Normal(normal) => normal.into_inner().item,\n+            AttrKind::DocComment(..) => panic!(\"unexpected doc comment\"),\n+        }\n     }\n-}\n \n-impl Attribute {\n-    #[inline]\n-    pub fn has_name(&self, name: Symbol) -> bool {\n-        match &self.kind {\n-            AttrKind::Normal(normal) => normal.item.path == name,\n-            AttrKind::DocComment(..) => false,\n+    /// Returns `true` if it is a sugared doc comment (`///` or `//!` for example).\n+    /// So `#[doc = \"doc\"]` (which is a doc comment) and `#[doc(...)]` (which is not\n+    /// a doc comment) will return `false`.\n+    pub fn is_doc_comment(&self) -> bool {\n+        match self.kind {\n+            AttrKind::Normal(..) => false,\n+            AttrKind::DocComment(..) => true,\n         }\n     }\n \n@@ -138,17 +119,11 @@ impl Attribute {\n         self.ident().unwrap_or_else(Ident::empty).name\n     }\n \n-    pub fn value_str(&self) -> Option<Symbol> {\n-        match &self.kind {\n-            AttrKind::Normal(normal) => normal.item.value_str(),\n-            AttrKind::DocComment(..) => None,\n-        }\n-    }\n-\n-    pub fn meta_item_list(&self) -> Option<Vec<NestedMetaItem>> {\n+    #[inline]\n+    pub fn has_name(&self, name: Symbol) -> bool {\n         match &self.kind {\n-            AttrKind::Normal(normal) => normal.item.meta_item_list(),\n-            AttrKind::DocComment(..) => None,\n+            AttrKind::Normal(normal) => normal.item.path == name,\n+            AttrKind::DocComment(..) => false,\n         }\n     }\n \n@@ -159,112 +134,18 @@ impl Attribute {\n             false\n         }\n     }\n-}\n \n-impl MetaItem {\n-    /// For a single-segment meta item, returns its name; otherwise, returns `None`.\n-    pub fn ident(&self) -> Option<Ident> {\n-        if self.path.segments.len() == 1 { Some(self.path.segments[0].ident) } else { None }\n-    }\n-    pub fn name_or_empty(&self) -> Symbol {\n-        self.ident().unwrap_or_else(Ident::empty).name\n-    }\n-\n-    /// ```text\n-    /// Example:\n-    ///     #[attribute(name = \"value\")]\n-    ///                 ^^^^^^^^^^^^^^\n-    /// ```\n-    pub fn name_value_literal(&self) -> Option<&MetaItemLit> {\n+    pub fn meta_item_list(&self) -> Option<Vec<NestedMetaItem>> {\n         match &self.kind {\n-            MetaItemKind::NameValue(v) => Some(v),\n-            _ => None,\n+            AttrKind::Normal(normal) => normal.item.meta_item_list(),\n+            AttrKind::DocComment(..) => None,\n         }\n     }\n \n     pub fn value_str(&self) -> Option<Symbol> {\n-        self.kind.value_str()\n-    }\n-\n-    pub fn meta_item_list(&self) -> Option<&[NestedMetaItem]> {\n         match &self.kind {\n-            MetaItemKind::List(l) => Some(&**l),\n-            _ => None,\n-        }\n-    }\n-\n-    pub fn is_word(&self) -> bool {\n-        matches!(self.kind, MetaItemKind::Word)\n-    }\n-\n-    pub fn has_name(&self, name: Symbol) -> bool {\n-        self.path == name\n-    }\n-\n-    /// This is used in case you want the value span instead of the whole attribute. Example:\n-    ///\n-    /// ```text\n-    /// #[doc(alias = \"foo\")]\n-    /// ```\n-    ///\n-    /// In here, it'll return a span for `\"foo\"`.\n-    pub fn name_value_literal_span(&self) -> Option<Span> {\n-        Some(self.name_value_literal()?.span)\n-    }\n-}\n-\n-impl AttrArgsEq {\n-    fn value_str(&self) -> Option<Symbol> {\n-        match self {\n-            AttrArgsEq::Ast(expr) => match expr.kind {\n-                ExprKind::Lit(token_lit) => {\n-                    LitKind::from_token_lit(token_lit).ok().and_then(|lit| lit.str())\n-                }\n-                _ => None,\n-            },\n-            AttrArgsEq::Hir(lit) => lit.kind.str(),\n-        }\n-    }\n-}\n-\n-impl AttrItem {\n-    pub fn span(&self) -> Span {\n-        self.args.span().map_or(self.path.span, |args_span| self.path.span.to(args_span))\n-    }\n-\n-    pub fn meta(&self, span: Span) -> Option<MetaItem> {\n-        Some(MetaItem { path: self.path.clone(), kind: self.meta_kind()?, span })\n-    }\n-\n-    pub fn meta_kind(&self) -> Option<MetaItemKind> {\n-        MetaItemKind::from_attr_args(&self.args)\n-    }\n-\n-    fn meta_item_list(&self) -> Option<Vec<NestedMetaItem>> {\n-        match &self.args {\n-            AttrArgs::Delimited(args) if args.delim == MacDelimiter::Parenthesis => {\n-                MetaItemKind::list_from_tokens(args.tokens.clone())\n-            }\n-            AttrArgs::Delimited(_) | AttrArgs::Eq(..) | AttrArgs::Empty => None,\n-        }\n-    }\n-\n-    fn value_str(&self) -> Option<Symbol> {\n-        match &self.args {\n-            AttrArgs::Eq(_, args) => args.value_str(),\n-            AttrArgs::Delimited(_) | AttrArgs::Empty => None,\n-        }\n-    }\n-}\n-\n-impl Attribute {\n-    /// Returns `true` if it is a sugared doc comment (`///` or `//!` for example).\n-    /// So `#[doc = \"doc\"]` (which is a doc comment) and `#[doc(...)]` (which is not\n-    /// a doc comment) will return `false`.\n-    pub fn is_doc_comment(&self) -> bool {\n-        match self.kind {\n-            AttrKind::Normal(..) => false,\n-            AttrKind::DocComment(..) => true,\n+            AttrKind::Normal(normal) => normal.item.value_str(),\n+            AttrKind::DocComment(..) => None,\n         }\n     }\n \n@@ -299,20 +180,6 @@ impl Attribute {\n         self.doc_str().map_or(false, |s| comments::may_have_doc_links(s.as_str()))\n     }\n \n-    pub fn get_normal_item(&self) -> &AttrItem {\n-        match &self.kind {\n-            AttrKind::Normal(normal) => &normal.item,\n-            AttrKind::DocComment(..) => panic!(\"unexpected doc comment\"),\n-        }\n-    }\n-\n-    pub fn unwrap_normal_item(self) -> AttrItem {\n-        match self.kind {\n-            AttrKind::Normal(normal) => normal.into_inner().item,\n-            AttrKind::DocComment(..) => panic!(\"unexpected doc comment\"),\n-        }\n-    }\n-\n     /// Extracts the MetaItem from inside this Attribute.\n     pub fn meta(&self) -> Option<MetaItem> {\n         match &self.kind {\n@@ -344,130 +211,102 @@ impl Attribute {\n     }\n }\n \n-pub struct AttrIdGenerator(WorkerLocal<Cell<u32>>);\n-\n-#[cfg(debug_assertions)]\n-static MAX_ATTR_ID: AtomicU32 = AtomicU32::new(u32::MAX);\n-\n-impl AttrIdGenerator {\n-    pub fn new() -> Self {\n-        // We use `(index as u32).reverse_bits()` to initialize the\n-        // starting value of AttrId in each worker thread.\n-        // The `index` is the index of the worker thread.\n-        // This ensures that the AttrId generated in each thread is unique.\n-        AttrIdGenerator(WorkerLocal::new(|index| {\n-            let index: u32 = index.try_into().unwrap();\n+impl AttrItem {\n+    pub fn span(&self) -> Span {\n+        self.args.span().map_or(self.path.span, |args_span| self.path.span.to(args_span))\n+    }\n \n-            #[cfg(debug_assertions)]\n-            {\n-                let max_id = ((index + 1).next_power_of_two() - 1).bitxor(u32::MAX).reverse_bits();\n-                MAX_ATTR_ID.fetch_min(max_id, Ordering::Release);\n+    fn meta_item_list(&self) -> Option<Vec<NestedMetaItem>> {\n+        match &self.args {\n+            AttrArgs::Delimited(args) if args.delim == MacDelimiter::Parenthesis => {\n+                MetaItemKind::list_from_tokens(args.tokens.clone())\n             }\n-\n-            Cell::new(index.reverse_bits())\n-        }))\n+            AttrArgs::Delimited(_) | AttrArgs::Eq(..) | AttrArgs::Empty => None,\n+        }\n     }\n \n-    pub fn mk_attr_id(&self) -> AttrId {\n-        let id = self.0.get();\n-\n-        // Ensure the assigned attr_id does not overlap the bits\n-        // representing the number of threads.\n-        #[cfg(debug_assertions)]\n-        assert!(id <= MAX_ATTR_ID.load(Ordering::Acquire));\n-\n-        self.0.set(id + 1);\n-        AttrId::from_u32(id)\n+    fn value_str(&self) -> Option<Symbol> {\n+        match &self.args {\n+            AttrArgs::Eq(_, args) => args.value_str(),\n+            AttrArgs::Delimited(_) | AttrArgs::Empty => None,\n+        }\n     }\n-}\n \n-pub fn mk_attr(\n-    g: &AttrIdGenerator,\n-    style: AttrStyle,\n-    path: Path,\n-    args: AttrArgs,\n-    span: Span,\n-) -> Attribute {\n-    mk_attr_from_item(g, AttrItem { path, args, tokens: None }, None, style, span)\n-}\n-\n-pub fn mk_attr_from_item(\n-    g: &AttrIdGenerator,\n-    item: AttrItem,\n-    tokens: Option<LazyAttrTokenStream>,\n-    style: AttrStyle,\n-    span: Span,\n-) -> Attribute {\n-    Attribute {\n-        kind: AttrKind::Normal(P(NormalAttr { item, tokens })),\n-        id: g.mk_attr_id(),\n-        style,\n-        span,\n+    pub fn meta(&self, span: Span) -> Option<MetaItem> {\n+        Some(MetaItem { path: self.path.clone(), kind: self.meta_kind()?, span })\n     }\n-}\n \n-pub fn mk_attr_word(g: &AttrIdGenerator, style: AttrStyle, name: Symbol, span: Span) -> Attribute {\n-    let path = Path::from_ident(Ident::new(name, span));\n-    let args = AttrArgs::Empty;\n-    mk_attr(g, style, path, args, span)\n-}\n-\n-pub fn mk_attr_name_value_str(\n-    g: &AttrIdGenerator,\n-    style: AttrStyle,\n-    name: Symbol,\n-    val: Symbol,\n-    span: Span,\n-) -> Attribute {\n-    let lit = token::Lit::new(token::Str, escape_string_symbol(val), None);\n-    let expr = P(Expr {\n-        id: DUMMY_NODE_ID,\n-        kind: ExprKind::Lit(lit),\n-        span,\n-        attrs: AttrVec::new(),\n-        tokens: None,\n-    });\n-    let path = Path::from_ident(Ident::new(name, span));\n-    let args = AttrArgs::Eq(span, AttrArgsEq::Ast(expr));\n-    mk_attr(g, style, path, args, span)\n+    pub fn meta_kind(&self) -> Option<MetaItemKind> {\n+        MetaItemKind::from_attr_args(&self.args)\n+    }\n }\n \n-pub fn mk_attr_nested_word(\n-    g: &AttrIdGenerator,\n-    style: AttrStyle,\n-    outer: Symbol,\n-    inner: Symbol,\n-    span: Span,\n-) -> Attribute {\n-    let inner_tokens = TokenStream::new(vec![TokenTree::Token(\n-        Token::from_ast_ident(Ident::new(inner, span)),\n-        Spacing::Alone,\n-    )]);\n-    let outer_ident = Ident::new(outer, span);\n-    let path = Path::from_ident(outer_ident);\n-    let attr_args = AttrArgs::Delimited(DelimArgs {\n-        dspan: DelimSpan::from_single(span),\n-        delim: MacDelimiter::Parenthesis,\n-        tokens: inner_tokens,\n-    });\n-    mk_attr(g, style, path, attr_args, span)\n+impl AttrArgsEq {\n+    fn value_str(&self) -> Option<Symbol> {\n+        match self {\n+            AttrArgsEq::Ast(expr) => match expr.kind {\n+                ExprKind::Lit(token_lit) => {\n+                    LitKind::from_token_lit(token_lit).ok().and_then(|lit| lit.str())\n+                }\n+                _ => None,\n+            },\n+            AttrArgsEq::Hir(lit) => lit.kind.str(),\n+        }\n+    }\n }\n \n-pub fn mk_doc_comment(\n-    g: &AttrIdGenerator,\n-    comment_kind: CommentKind,\n-    style: AttrStyle,\n-    data: Symbol,\n-    span: Span,\n-) -> Attribute {\n-    Attribute { kind: AttrKind::DocComment(comment_kind, data), id: g.mk_attr_id(), style, span }\n-}\n+impl MetaItem {\n+    /// For a single-segment meta item, returns its name; otherwise, returns `None`.\n+    pub fn ident(&self) -> Option<Ident> {\n+        if self.path.segments.len() == 1 { Some(self.path.segments[0].ident) } else { None }\n+    }\n \n-pub fn list_contains_name(items: &[NestedMetaItem], name: Symbol) -> bool {\n-    items.iter().any(|item| item.has_name(name))\n-}\n+    pub fn name_or_empty(&self) -> Symbol {\n+        self.ident().unwrap_or_else(Ident::empty).name\n+    }\n+\n+    pub fn has_name(&self, name: Symbol) -> bool {\n+        self.path == name\n+    }\n+\n+    pub fn is_word(&self) -> bool {\n+        matches!(self.kind, MetaItemKind::Word)\n+    }\n+\n+    pub fn meta_item_list(&self) -> Option<&[NestedMetaItem]> {\n+        match &self.kind {\n+            MetaItemKind::List(l) => Some(&**l),\n+            _ => None,\n+        }\n+    }\n+\n+    /// ```text\n+    /// Example:\n+    ///     #[attribute(name = \"value\")]\n+    ///                 ^^^^^^^^^^^^^^\n+    /// ```\n+    pub fn name_value_literal(&self) -> Option<&MetaItemLit> {\n+        match &self.kind {\n+            MetaItemKind::NameValue(v) => Some(v),\n+            _ => None,\n+        }\n+    }\n+\n+    /// This is used in case you want the value span instead of the whole attribute. Example:\n+    ///\n+    /// ```text\n+    /// #[doc(alias = \"foo\")]\n+    /// ```\n+    ///\n+    /// In here, it'll return a span for `\"foo\"`.\n+    pub fn name_value_literal_span(&self) -> Option<Span> {\n+        Some(self.name_value_literal()?.span)\n+    }\n+\n+    pub fn value_str(&self) -> Option<Symbol> {\n+        self.kind.value_str()\n+    }\n \n-impl MetaItem {\n     fn from_tokens<I>(tokens: &mut iter::Peekable<I>) -> Option<MetaItem>\n     where\n         I: Iterator<Item = TokenTree>,\n@@ -564,6 +403,24 @@ impl MetaItemKind {\n         }\n     }\n \n+    fn from_tokens(\n+        tokens: &mut iter::Peekable<impl Iterator<Item = TokenTree>>,\n+    ) -> Option<MetaItemKind> {\n+        match tokens.peek() {\n+            Some(TokenTree::Delimited(_, Delimiter::Parenthesis, inner_tokens)) => {\n+                let inner_tokens = inner_tokens.clone();\n+                tokens.next();\n+                MetaItemKind::list_from_tokens(inner_tokens).map(MetaItemKind::List)\n+            }\n+            Some(TokenTree::Delimited(..)) => None,\n+            Some(TokenTree::Token(Token { kind: token::Eq, .. }, _)) => {\n+                tokens.next();\n+                MetaItemKind::name_value_from_tokens(tokens)\n+            }\n+            _ => Some(MetaItemKind::Word),\n+        }\n+    }\n+\n     fn from_attr_args(args: &AttrArgs) -> Option<MetaItemKind> {\n         match args {\n             AttrArgs::Empty => Some(MetaItemKind::Word),\n@@ -585,24 +442,6 @@ impl MetaItemKind {\n             AttrArgs::Eq(_, AttrArgsEq::Hir(lit)) => Some(MetaItemKind::NameValue(lit.clone())),\n         }\n     }\n-\n-    fn from_tokens(\n-        tokens: &mut iter::Peekable<impl Iterator<Item = TokenTree>>,\n-    ) -> Option<MetaItemKind> {\n-        match tokens.peek() {\n-            Some(TokenTree::Delimited(_, Delimiter::Parenthesis, inner_tokens)) => {\n-                let inner_tokens = inner_tokens.clone();\n-                tokens.next();\n-                MetaItemKind::list_from_tokens(inner_tokens).map(MetaItemKind::List)\n-            }\n-            Some(TokenTree::Delimited(..)) => None,\n-            Some(TokenTree::Token(Token { kind: token::Eq, .. }, _)) => {\n-                tokens.next();\n-                MetaItemKind::name_value_from_tokens(tokens)\n-            }\n-            _ => Some(MetaItemKind::Word),\n-        }\n-    }\n }\n \n impl NestedMetaItem {\n@@ -613,6 +452,77 @@ impl NestedMetaItem {\n         }\n     }\n \n+    /// For a single-segment meta item, returns its name; otherwise, returns `None`.\n+    pub fn ident(&self) -> Option<Ident> {\n+        self.meta_item().and_then(|meta_item| meta_item.ident())\n+    }\n+\n+    pub fn name_or_empty(&self) -> Symbol {\n+        self.ident().unwrap_or_else(Ident::empty).name\n+    }\n+\n+    /// Returns `true` if this list item is a MetaItem with a name of `name`.\n+    pub fn has_name(&self, name: Symbol) -> bool {\n+        self.meta_item().map_or(false, |meta_item| meta_item.has_name(name))\n+    }\n+\n+    /// Returns `true` if `self` is a `MetaItem` and the meta item is a word.\n+    pub fn is_word(&self) -> bool {\n+        self.meta_item().map_or(false, |meta_item| meta_item.is_word())\n+    }\n+\n+    /// Gets a list of inner meta items from a list `MetaItem` type.\n+    pub fn meta_item_list(&self) -> Option<&[NestedMetaItem]> {\n+        self.meta_item().and_then(|meta_item| meta_item.meta_item_list())\n+    }\n+\n+    /// Returns a name and single literal value tuple of the `MetaItem`.\n+    pub fn name_value_literal(&self) -> Option<(Symbol, &MetaItemLit)> {\n+        self.meta_item().and_then(|meta_item| {\n+            meta_item.meta_item_list().and_then(|meta_item_list| {\n+                if meta_item_list.len() == 1\n+                    && let Some(ident) = meta_item.ident()\n+                    && let Some(lit) = meta_item_list[0].lit()\n+                {\n+                    return Some((ident.name, lit));\n+                }\n+                None\n+            })\n+        })\n+    }\n+\n+    /// See [`MetaItem::name_value_literal_span`].\n+    pub fn name_value_literal_span(&self) -> Option<Span> {\n+        self.meta_item()?.name_value_literal_span()\n+    }\n+\n+    /// Gets the string value if `self` is a `MetaItem` and the `MetaItem` is a\n+    /// `MetaItemKind::NameValue` variant containing a string, otherwise `None`.\n+    pub fn value_str(&self) -> Option<Symbol> {\n+        self.meta_item().and_then(|meta_item| meta_item.value_str())\n+    }\n+\n+    /// Returns the `MetaItemLit` if `self` is a `NestedMetaItem::Literal`s.\n+    pub fn lit(&self) -> Option<&MetaItemLit> {\n+        match self {\n+            NestedMetaItem::Lit(lit) => Some(lit),\n+            _ => None,\n+        }\n+    }\n+\n+    /// Returns the `MetaItem` if `self` is a `NestedMetaItem::MetaItem`.\n+    pub fn meta_item(&self) -> Option<&MetaItem> {\n+        match self {\n+            NestedMetaItem::MetaItem(item) => Some(item),\n+            _ => None,\n+        }\n+    }\n+\n+    /// Returns `true` if the variant is `MetaItem`.\n+    pub fn is_meta_item(&self) -> bool {\n+        self.meta_item().is_some()\n+    }\n+\n     fn from_tokens<I>(tokens: &mut iter::Peekable<I>) -> Option<NestedMetaItem>\n     where\n         I: Iterator<Item = TokenTree>,\n@@ -634,3 +544,89 @@ impl NestedMetaItem {\n         MetaItem::from_tokens(tokens).map(NestedMetaItem::MetaItem)\n     }\n }\n+\n+pub fn mk_doc_comment(\n+    g: &AttrIdGenerator,\n+    comment_kind: CommentKind,\n+    style: AttrStyle,\n+    data: Symbol,\n+    span: Span,\n+) -> Attribute {\n+    Attribute { kind: AttrKind::DocComment(comment_kind, data), id: g.mk_attr_id(), style, span }\n+}\n+\n+pub fn mk_attr(\n+    g: &AttrIdGenerator,\n+    style: AttrStyle,\n+    path: Path,\n+    args: AttrArgs,\n+    span: Span,\n+) -> Attribute {\n+    mk_attr_from_item(g, AttrItem { path, args, tokens: None }, None, style, span)\n+}\n+\n+pub fn mk_attr_from_item(\n+    g: &AttrIdGenerator,\n+    item: AttrItem,\n+    tokens: Option<LazyAttrTokenStream>,\n+    style: AttrStyle,\n+    span: Span,\n+) -> Attribute {\n+    Attribute {\n+        kind: AttrKind::Normal(P(NormalAttr { item, tokens })),\n+        id: g.mk_attr_id(),\n+        style,\n+        span,\n+    }\n+}\n+\n+pub fn mk_attr_word(g: &AttrIdGenerator, style: AttrStyle, name: Symbol, span: Span) -> Attribute {\n+    let path = Path::from_ident(Ident::new(name, span));\n+    let args = AttrArgs::Empty;\n+    mk_attr(g, style, path, args, span)\n+}\n+\n+pub fn mk_attr_nested_word(\n+    g: &AttrIdGenerator,\n+    style: AttrStyle,\n+    outer: Symbol,\n+    inner: Symbol,\n+    span: Span,\n+) -> Attribute {\n+    let inner_tokens = TokenStream::new(vec![TokenTree::Token(\n+        Token::from_ast_ident(Ident::new(inner, span)),\n+        Spacing::Alone,\n+    )]);\n+    let outer_ident = Ident::new(outer, span);\n+    let path = Path::from_ident(outer_ident);\n+    let attr_args = AttrArgs::Delimited(DelimArgs {\n+        dspan: DelimSpan::from_single(span),\n+        delim: MacDelimiter::Parenthesis,\n+        tokens: inner_tokens,\n+    });\n+    mk_attr(g, style, path, attr_args, span)\n+}\n+\n+pub fn mk_attr_name_value_str(\n+    g: &AttrIdGenerator,\n+    style: AttrStyle,\n+    name: Symbol,\n+    val: Symbol,\n+    span: Span,\n+) -> Attribute {\n+    let lit = token::Lit::new(token::Str, escape_string_symbol(val), None);\n+    let expr = P(Expr {\n+        id: DUMMY_NODE_ID,\n+        kind: ExprKind::Lit(lit),\n+        span,\n+        attrs: AttrVec::new(),\n+        tokens: None,\n+    });\n+    let path = Path::from_ident(Ident::new(name, span));\n+    let args = AttrArgs::Eq(span, AttrArgsEq::Ast(expr));\n+    mk_attr(g, style, path, args, span)\n+}\n+\n+pub fn list_contains_name(items: &[NestedMetaItem], name: Symbol) -> bool {\n+    items.iter().any(|item| item.has_name(name))\n+}"}, {"sha": "1067fcebcf39514dc8e20adcb75f1cef3da3d64d", "filename": "compiler/rustc_driver_impl/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -23,7 +23,7 @@ use rustc_codegen_ssa::{traits::CodegenBackend, CodegenErrors, CodegenResults};\n use rustc_data_structures::profiling::{get_resident_set_size, print_time_passes_entry};\n use rustc_data_structures::sync::SeqCst;\n use rustc_errors::registry::{InvalidErrorCode, Registry};\n-use rustc_errors::{ErrorGuaranteed, PResult};\n+use rustc_errors::{ErrorGuaranteed, PResult, TerminalUrl};\n use rustc_feature::find_gated_cfg;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_interface::util::{self, collect_crate_types, get_codegen_backend};\n@@ -1191,6 +1191,7 @@ pub fn report_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n         None,\n         false,\n         false,\n+        TerminalUrl::No,\n     ));\n     let handler = rustc_errors::Handler::with_emitter(true, None, emitter);\n "}, {"sha": "4f2cc8b0351cb2f1aee21ab56e824e8ec1632ae0", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -18,7 +18,7 @@ use crate::translation::{to_fluent_args, Translate};\n use crate::{\n     diagnostic::DiagnosticLocation, CodeSuggestion, Diagnostic, DiagnosticId, DiagnosticMessage,\n     FluentBundle, Handler, LazyFallbackBundle, Level, MultiSpan, SubDiagnostic,\n-    SubstitutionHighlight, SuggestionStyle,\n+    SubstitutionHighlight, SuggestionStyle, TerminalUrl,\n };\n use rustc_lint_defs::pluralize;\n \n@@ -66,6 +66,7 @@ impl HumanReadableErrorType {\n         diagnostic_width: Option<usize>,\n         macro_backtrace: bool,\n         track_diagnostics: bool,\n+        terminal_url: TerminalUrl,\n     ) -> EmitterWriter {\n         let (short, color_config) = self.unzip();\n         let color = color_config.suggests_using_colors();\n@@ -80,6 +81,7 @@ impl HumanReadableErrorType {\n             diagnostic_width,\n             macro_backtrace,\n             track_diagnostics,\n+            terminal_url,\n         )\n     }\n }\n@@ -652,6 +654,7 @@ pub struct EmitterWriter {\n \n     macro_backtrace: bool,\n     track_diagnostics: bool,\n+    terminal_url: TerminalUrl,\n }\n \n #[derive(Debug)]\n@@ -672,6 +675,7 @@ impl EmitterWriter {\n         diagnostic_width: Option<usize>,\n         macro_backtrace: bool,\n         track_diagnostics: bool,\n+        terminal_url: TerminalUrl,\n     ) -> EmitterWriter {\n         let dst = Destination::from_stderr(color_config);\n         EmitterWriter {\n@@ -685,6 +689,7 @@ impl EmitterWriter {\n             diagnostic_width,\n             macro_backtrace,\n             track_diagnostics,\n+            terminal_url,\n         }\n     }\n \n@@ -699,6 +704,7 @@ impl EmitterWriter {\n         diagnostic_width: Option<usize>,\n         macro_backtrace: bool,\n         track_diagnostics: bool,\n+        terminal_url: TerminalUrl,\n     ) -> EmitterWriter {\n         EmitterWriter {\n             dst: Raw(dst, colored),\n@@ -711,6 +717,7 @@ impl EmitterWriter {\n             diagnostic_width,\n             macro_backtrace,\n             track_diagnostics,\n+            terminal_url,\n         }\n     }\n \n@@ -1378,7 +1385,13 @@ impl EmitterWriter {\n             // only render error codes, not lint codes\n             if let Some(DiagnosticId::Error(ref code)) = *code {\n                 buffer.append(0, \"[\", Style::Level(*level));\n-                buffer.append(0, code, Style::Level(*level));\n+                let code = if let TerminalUrl::Yes = self.terminal_url {\n+                    let path = \"https://doc.rust-lang.org/error_codes\";\n+                    format!(\"\\x1b]8;;{path}/{code}.html\\x07{code}\\x1b]8;;\\x07\")\n+                } else {\n+                    code.clone()\n+                };\n+                buffer.append(0, &code, Style::Level(*level));\n                 buffer.append(0, \"]\", Style::Level(*level));\n                 label_width += 2 + code.len();\n             }"}, {"sha": "e475fc725c33b01014928a136dd2e91b9b588d5c", "filename": "compiler/rustc_errors/src/json.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_errors%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_errors%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fjson.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -17,6 +17,7 @@ use crate::translation::{to_fluent_args, Translate};\n use crate::DiagnosticId;\n use crate::{\n     CodeSuggestion, FluentBundle, LazyFallbackBundle, MultiSpan, SpanLabel, SubDiagnostic,\n+    TerminalUrl,\n };\n use rustc_lint_defs::Applicability;\n \n@@ -47,6 +48,7 @@ pub struct JsonEmitter {\n     diagnostic_width: Option<usize>,\n     macro_backtrace: bool,\n     track_diagnostics: bool,\n+    terminal_url: TerminalUrl,\n }\n \n impl JsonEmitter {\n@@ -60,6 +62,7 @@ impl JsonEmitter {\n         diagnostic_width: Option<usize>,\n         macro_backtrace: bool,\n         track_diagnostics: bool,\n+        terminal_url: TerminalUrl,\n     ) -> JsonEmitter {\n         JsonEmitter {\n             dst: Box::new(io::BufWriter::new(io::stderr())),\n@@ -73,6 +76,7 @@ impl JsonEmitter {\n             diagnostic_width,\n             macro_backtrace,\n             track_diagnostics,\n+            terminal_url,\n         }\n     }\n \n@@ -84,6 +88,7 @@ impl JsonEmitter {\n         diagnostic_width: Option<usize>,\n         macro_backtrace: bool,\n         track_diagnostics: bool,\n+        terminal_url: TerminalUrl,\n     ) -> JsonEmitter {\n         let file_path_mapping = FilePathMapping::empty();\n         JsonEmitter::stderr(\n@@ -96,6 +101,7 @@ impl JsonEmitter {\n             diagnostic_width,\n             macro_backtrace,\n             track_diagnostics,\n+            terminal_url,\n         )\n     }\n \n@@ -110,6 +116,7 @@ impl JsonEmitter {\n         diagnostic_width: Option<usize>,\n         macro_backtrace: bool,\n         track_diagnostics: bool,\n+        terminal_url: TerminalUrl,\n     ) -> JsonEmitter {\n         JsonEmitter {\n             dst,\n@@ -123,6 +130,7 @@ impl JsonEmitter {\n             diagnostic_width,\n             macro_backtrace,\n             track_diagnostics,\n+            terminal_url,\n         }\n     }\n \n@@ -360,6 +368,7 @@ impl Diagnostic {\n                 je.diagnostic_width,\n                 je.macro_backtrace,\n                 je.track_diagnostics,\n+                je.terminal_url,\n             )\n             .ui_testing(je.ui_testing)\n             .emit_diagnostic(diag);"}, {"sha": "f161532d3b7e2ac89d37993dc580ed4ed20806f4", "filename": "compiler/rustc_errors/src/json/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_errors%2Fsrc%2Fjson%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_errors%2Fsrc%2Fjson%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fjson%2Ftests.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -4,7 +4,7 @@ use crate::json::JsonEmitter;\n use rustc_span::source_map::{FilePathMapping, SourceMap};\n \n use crate::emitter::{ColorConfig, HumanReadableErrorType};\n-use crate::Handler;\n+use crate::{Handler, TerminalUrl};\n use rustc_span::{BytePos, Span};\n \n use std::str;\n@@ -60,6 +60,7 @@ fn test_positions(code: &str, span: (u32, u32), expected_output: SpanTestData) {\n             None,\n             false,\n             false,\n+            TerminalUrl::No,\n         );\n \n         let span = Span::with_root_ctxt(BytePos(span.0), BytePos(span.1));"}, {"sha": "83b733d4c067736691fe5d5901a3c659644eacbe", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -573,6 +573,7 @@ impl Handler {\n             None,\n             flags.macro_backtrace,\n             flags.track_diagnostics,\n+            TerminalUrl::No,\n         ));\n         Self::with_emitter_and_flags(emitter, flags)\n     }\n@@ -1838,6 +1839,13 @@ pub fn add_elided_lifetime_in_path_suggestion(\n     );\n }\n \n+#[derive(Clone, Copy, PartialEq, Hash, Debug)]\n+pub enum TerminalUrl {\n+    No,\n+    Yes,\n+    Auto,\n+}\n+\n /// Useful type to use with `Result<>` indicate that an error has already\n /// been reported to the user, so no need to continue checking.\n #[derive(Clone, Copy, Debug, Encodable, Decodable, Hash, PartialEq, Eq, PartialOrd, Ord)]"}, {"sha": "f80141403bf150cb2252762869c97fb9b064c77e", "filename": "compiler/rustc_expand/src/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_expand%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_expand%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Ftests.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -8,7 +8,7 @@ use rustc_span::{BytePos, Span};\n \n use rustc_data_structures::sync::Lrc;\n use rustc_errors::emitter::EmitterWriter;\n-use rustc_errors::{Handler, MultiSpan, PResult};\n+use rustc_errors::{Handler, MultiSpan, PResult, TerminalUrl};\n \n use std::io;\n use std::io::prelude::*;\n@@ -152,6 +152,7 @@ fn test_harness(file_text: &str, span_labels: Vec<SpanLabel>, expected_output: &\n             None,\n             false,\n             false,\n+            TerminalUrl::No,\n         );\n         let handler = Handler::with_emitter(true, None, Box::new(emitter));\n         #[allow(rustc::untranslatable_diagnostic)]"}, {"sha": "81f7f6d72ae4a91cd26220583f6f05bdbfe62c82", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -4,7 +4,7 @@ use crate::early_error;\n use crate::lint;\n use crate::search_paths::SearchPath;\n use crate::utils::NativeLib;\n-use rustc_errors::LanguageIdentifier;\n+use rustc_errors::{LanguageIdentifier, TerminalUrl};\n use rustc_target::spec::{CodeModel, LinkerFlavorCli, MergeFunctions, PanicStrategy, SanitizerSet};\n use rustc_target::spec::{\n     RelocModel, RelroLevel, SplitDebuginfo, StackProtector, TargetTriple, TlsModel,\n@@ -402,6 +402,8 @@ mod desc {\n     pub const parse_code_model: &str = \"one of supported code models (`rustc --print code-models`)\";\n     pub const parse_tls_model: &str = \"one of supported TLS models (`rustc --print tls-models`)\";\n     pub const parse_target_feature: &str = parse_string;\n+    pub const parse_terminal_url: &str =\n+        \"either a boolean (`yes`, `no`, `on`, `off`, etc), or `auto`\";\n     pub const parse_wasi_exec_model: &str = \"either `command` or `reactor`\";\n     pub const parse_split_debuginfo: &str =\n         \"one of supported split-debuginfo modes (`off`, `packed`, or `unpacked`)\";\n@@ -1044,6 +1046,16 @@ mod parse {\n         true\n     }\n \n+    pub(crate) fn parse_terminal_url(slot: &mut TerminalUrl, v: Option<&str>) -> bool {\n+        *slot = match v {\n+            Some(\"on\" | \"\" | \"yes\" | \"y\") | None => TerminalUrl::Yes,\n+            Some(\"off\" | \"no\" | \"n\") => TerminalUrl::No,\n+            Some(\"auto\") => TerminalUrl::Auto,\n+            _ => return false,\n+        };\n+        true\n+    }\n+\n     pub(crate) fn parse_symbol_mangling_version(\n         slot: &mut Option<SymbolManglingVersion>,\n         v: Option<&str>,\n@@ -1675,6 +1687,8 @@ options! {\n         \"show extended diagnostic help (default: no)\"),\n     temps_dir: Option<String> = (None, parse_opt_string, [UNTRACKED],\n         \"the directory the intermediate files are written to\"),\n+    terminal_urls: TerminalUrl = (TerminalUrl::No, parse_terminal_url, [UNTRACKED],\n+        \"use the OSC 8 hyperlink terminal specification to print hyperlinks in the compiler output\"),\n     #[rustc_lint_opt_deny_field_access(\"use `Session::lto` instead of this field\")]\n     thinlto: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"enable ThinLTO when possible\"),"}, {"sha": "e608b9fe0b3fee4dd8b7a2b329995fe9d6848a23", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -24,6 +24,7 @@ use rustc_errors::registry::Registry;\n use rustc_errors::{\n     error_code, fallback_fluent_bundle, DiagnosticBuilder, DiagnosticId, DiagnosticMessage,\n     ErrorGuaranteed, FluentBundle, IntoDiagnostic, LazyFallbackBundle, MultiSpan, Noted,\n+    TerminalUrl,\n };\n use rustc_macros::HashStable_Generic;\n pub use rustc_span::def_id::StableCrateId;\n@@ -1273,6 +1274,19 @@ fn default_emitter(\n ) -> Box<dyn Emitter + sync::Send> {\n     let macro_backtrace = sopts.unstable_opts.macro_backtrace;\n     let track_diagnostics = sopts.unstable_opts.track_diagnostics;\n+    let terminal_url = match sopts.unstable_opts.terminal_urls {\n+        TerminalUrl::Auto => {\n+            match (std::env::var(\"COLORTERM\").as_deref(), std::env::var(\"TERM\").as_deref()) {\n+                (Ok(\"truecolor\"), Ok(\"xterm-256color\"))\n+                    if sopts.unstable_features.is_nightly_build() =>\n+                {\n+                    TerminalUrl::Yes\n+                }\n+                _ => TerminalUrl::No,\n+            }\n+        }\n+        t => t,\n+    };\n     match sopts.error_format {\n         config::ErrorOutputType::HumanReadable(kind) => {\n             let (short, color_config) = kind.unzip();\n@@ -1297,6 +1311,7 @@ fn default_emitter(\n                     sopts.diagnostic_width,\n                     macro_backtrace,\n                     track_diagnostics,\n+                    terminal_url,\n                 );\n                 Box::new(emitter.ui_testing(sopts.unstable_opts.ui_testing))\n             }\n@@ -1312,6 +1327,7 @@ fn default_emitter(\n                 sopts.diagnostic_width,\n                 macro_backtrace,\n                 track_diagnostics,\n+                terminal_url,\n             )\n             .ui_testing(sopts.unstable_opts.ui_testing),\n         ),\n@@ -1628,6 +1644,7 @@ fn early_error_handler(output: config::ErrorOutputType) -> rustc_errors::Handler\n                 None,\n                 false,\n                 false,\n+                TerminalUrl::No,\n             ))\n         }\n         config::ErrorOutputType::Json { pretty, json_rendered } => Box::new(JsonEmitter::basic(\n@@ -1638,6 +1655,7 @@ fn early_error_handler(output: config::ErrorOutputType) -> rustc_errors::Handler\n             None,\n             false,\n             false,\n+            TerminalUrl::No,\n         )),\n     };\n     rustc_errors::Handler::with_emitter(true, None, emitter)"}, {"sha": "c600298c51a08d5773e852001c94bb1f6cf56d48", "filename": "compiler/rustc_span/src/span_encoding.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -110,11 +110,16 @@ impl Span {\n                 // Inline format with parent.\n                 let len_or_tag = len_or_tag | PARENT_MASK;\n                 let parent2 = parent.local_def_index.as_u32();\n-                if ctxt2 == SyntaxContext::root().as_u32() && parent2 <= MAX_CTXT {\n+                if ctxt2 == SyntaxContext::root().as_u32()\n+                    && parent2 <= MAX_CTXT\n+                    && len_or_tag < LEN_TAG\n+                {\n+                    debug_assert_ne!(len_or_tag, LEN_TAG);\n                     return Span { base_or_index: base, len_or_tag, ctxt_or_tag: parent2 as u16 };\n                 }\n             } else {\n                 // Inline format with ctxt.\n+                debug_assert_ne!(len_or_tag, LEN_TAG);\n                 return Span {\n                     base_or_index: base,\n                     len_or_tag: len as u16,"}, {"sha": "137289198786ecec502666436f221e8d7631e46a", "filename": "compiler/rustc_ty_utils/src/layout.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -470,14 +470,11 @@ fn layout_of_uncached<'tcx>(\n             return Err(LayoutError::Unknown(ty));\n         }\n \n-        ty::Placeholder(..)\n-        | ty::GeneratorWitness(..)\n-        | ty::GeneratorWitnessMIR(..)\n-        | ty::Infer(_) => {\n+        ty::Bound(..) | ty::GeneratorWitness(..) | ty::GeneratorWitnessMIR(..) | ty::Infer(_) => {\n             bug!(\"Layout::compute: unexpected type `{}`\", ty)\n         }\n \n-        ty::Bound(..) | ty::Param(_) | ty::Error(_) => {\n+        ty::Placeholder(..) | ty::Param(_) | ty::Error(_) => {\n             return Err(LayoutError::Unknown(ty));\n         }\n     })"}, {"sha": "4e6bcba5e20d22be42b542bf3e66e62dd74cd5e0", "filename": "src/ci/stage-build.py", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Fci%2Fstage-build.py", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Fci%2Fstage-build.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fstage-build.py?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -211,7 +211,8 @@ def get_timestamp() -> float:\n TimerSection = Union[Duration, \"Timer\"]\n \n \n-def iterate_sections(section: TimerSection, name: str, level: int = 0) -> Iterator[Tuple[int, str, Duration]]:\n+def iterate_sections(section: TimerSection, name: str, level: int = 0) -> Iterator[\n+    Tuple[int, str, Duration]]:\n     \"\"\"\n     Hierarchically iterate the sections of a timer, in a depth-first order.\n     \"\"\"\n@@ -239,7 +240,7 @@ def section(self, name: str) -> \"Timer\":\n         start = get_timestamp()\n         exc = None\n \n-        child_timer = Timer(parent_names=self.parent_names + (name, ))\n+        child_timer = Timer(parent_names=self.parent_names + (name,))\n         full_name = \" > \".join(child_timer.parent_names)\n         try:\n             LOGGER.info(f\"Section `{full_name}` starts\")\n@@ -648,6 +649,16 @@ def print_binary_sizes(pipeline: Pipeline):\n         LOGGER.info(f\"Rustc binary size\\n{output.getvalue()}\")\n \n \n+def print_free_disk_space(pipeline: Pipeline):\n+    usage = shutil.disk_usage(pipeline.opt_artifacts())\n+    total = usage.total\n+    used = usage.used\n+    free = usage.free\n+\n+    logging.info(\n+        f\"Free disk space: {format_bytes(free)} out of total {format_bytes(total)} ({(used / total) * 100:.2f}% used)\")\n+\n+\n def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: List[str]):\n     # Clear and prepare tmp directory\n     shutil.rmtree(pipeline.opt_artifacts(), ignore_errors=True)\n@@ -666,6 +677,7 @@ def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: L\n \n         with stage1.section(\"Gather profiles\"):\n             gather_llvm_profiles(pipeline)\n+        print_free_disk_space(pipeline)\n \n     clear_llvm_files(pipeline)\n     final_build_args += [\n@@ -683,6 +695,7 @@ def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: L\n \n         with stage2.section(\"Gather profiles\"):\n             gather_rustc_profiles(pipeline)\n+        print_free_disk_space(pipeline)\n \n     clear_llvm_files(pipeline)\n     final_build_args += [\n@@ -702,6 +715,7 @@ def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: L\n             with stage3.section(\"Gather profiles\"):\n                 gather_llvm_bolt_profiles(pipeline)\n \n+        print_free_disk_space(pipeline)\n         clear_llvm_files(pipeline)\n         final_build_args += [\n             \"--llvm-bolt-profile-use\",\n@@ -733,5 +747,6 @@ def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: L\n         raise e\n     finally:\n         timer.print_stats()\n+        print_free_disk_space(pipeline)\n \n     print_binary_sizes(pipeline)"}, {"sha": "7e16c4701be6f5483efd1b9d0698db919f5635dd", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -4,6 +4,7 @@ use rustc_data_structures::sync::{self, Lrc};\n use rustc_data_structures::unord::UnordSet;\n use rustc_errors::emitter::{Emitter, EmitterWriter};\n use rustc_errors::json::JsonEmitter;\n+use rustc_errors::TerminalUrl;\n use rustc_feature::UnstableFeatures;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::{DefId, DefIdMap, DefIdSet, LocalDefId};\n@@ -144,6 +145,7 @@ pub(crate) fn new_handler(\n                     diagnostic_width,\n                     false,\n                     unstable_opts.track_diagnostics,\n+                    TerminalUrl::No,\n                 )\n                 .ui_testing(unstable_opts.ui_testing),\n             )\n@@ -163,6 +165,7 @@ pub(crate) fn new_handler(\n                     diagnostic_width,\n                     false,\n                     unstable_opts.track_diagnostics,\n+                    TerminalUrl::No,\n                 )\n                 .ui_testing(unstable_opts.ui_testing),\n             )"}, {"sha": "57c41b57311dffcfad19c3bafc9c4ed2aaa8cc07", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -1,7 +1,7 @@\n use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n-use rustc_errors::{ColorConfig, ErrorGuaranteed, FatalError};\n+use rustc_errors::{ColorConfig, ErrorGuaranteed, FatalError, TerminalUrl};\n use rustc_hir::def_id::{LocalDefId, CRATE_DEF_ID, LOCAL_CRATE};\n use rustc_hir::{self as hir, intravisit, CRATE_HIR_ID};\n use rustc_interface::interface;\n@@ -557,6 +557,7 @@ pub(crate) fn make_test(\n                 Some(80),\n                 false,\n                 false,\n+                TerminalUrl::No,\n             )\n             .supports_color();\n \n@@ -571,6 +572,7 @@ pub(crate) fn make_test(\n                 None,\n                 false,\n                 false,\n+                TerminalUrl::No,\n             );\n \n             // FIXME(misdreavus): pass `-Z treat-err-as-bug` to the doctest parser\n@@ -756,6 +758,7 @@ fn check_if_attr_is_complete(source: &str, edition: Edition) -> bool {\n                 None,\n                 false,\n                 false,\n+                TerminalUrl::No,\n             );\n \n             let handler = Handler::with_emitter(false, None, Box::new(emitter));"}, {"sha": "3c10eb524d724510f21ef583a1f3670803c47816", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -96,13 +96,19 @@ fn write_header(out: &mut Buffer, class: &str, extra_content: Option<Buffer>, to\n     );\n \n     if tooltip != Tooltip::None {\n+        let edition_code;\n         write!(\n             out,\n-            \"<div class='tooltip'{}>\u24d8</div>\",\n-            if let Tooltip::Edition(edition_info) = tooltip {\n-                format!(\" data-edition=\\\"{}\\\"\", edition_info)\n-            } else {\n-                String::new()\n+            \"<a href=\\\"#\\\" class=\\\"tooltip\\\" title=\\\"{}\\\">\u24d8</a>\",\n+            match tooltip {\n+                Tooltip::Ignore => \"This example is not tested\",\n+                Tooltip::CompileFail => \"This example deliberately fails to compile\",\n+                Tooltip::ShouldPanic => \"This example panics\",\n+                Tooltip::Edition(edition) => {\n+                    edition_code = format!(\"This example runs with edition {edition}\");\n+                    &edition_code\n+                }\n+                Tooltip::None => unreachable!(),\n             },\n         );\n     }"}, {"sha": "2086faf78ac8ab6a17bfaab0fc0b6e8d09749b0c", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -1310,7 +1310,7 @@ pub(crate) fn notable_traits_button(ty: &clean::Type, cx: &mut Context<'_>) -> O\n     if has_notable_trait {\n         cx.types_with_notable_traits.insert(ty.clone());\n         Some(format!(\n-            \" <a href=\\\"#\\\" class=\\\"notable-traits\\\" data-ty=\\\"{ty}\\\">\u24d8</a>\",\n+            \" <a href=\\\"#\\\" class=\\\"tooltip\\\" data-notable-ty=\\\"{ty}\\\">\u24d8</a>\",\n             ty = Escape(&format!(\"{:#}\", ty.print(cx))),\n         ))\n     } else {"}, {"sha": "476dd6066809c524ebe9ffee0e1e769b4c32db3d", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 9, "deletions": 45, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -715,8 +715,8 @@ h2.small-section-header > .anchor {\n .main-heading a:hover,\n .example-wrap > pre.rust a:hover,\n .all-items a:hover,\n-.docblock a:not(.test-arrow):not(.scrape-help):hover,\n-.docblock-short a:not(.test-arrow):not(.scrape-help):hover,\n+.docblock a:not(.test-arrow):not(.scrape-help):not(.tooltip):hover,\n+.docblock-short a:not(.test-arrow):not(.scrape-help):not(.tooltip):hover,\n .item-info a {\n \ttext-decoration: underline;\n }\n@@ -1109,44 +1109,8 @@ pre.rust .doccomment {\n \tdisplay: block;\n \tleft: -25px;\n \ttop: 5px;\n-}\n-\n-.example-wrap .tooltip:hover::after {\n-\tpadding: 5px 3px 3px 3px;\n-\tborder-radius: 6px;\n-\tmargin-left: 5px;\n-\tfont-size: 1rem;\n-\tborder: 1px solid var(--border-color);\n-\tposition: absolute;\n-\twidth: max-content;\n-\ttop: -2px;\n-\tz-index: 1;\n-\tbackground-color: var(--tooltip-background-color);\n-\tcolor: var(--tooltip-color);\n-}\n-\n-.example-wrap .tooltip:hover::before {\n-\tcontent: \" \";\n-\tposition: absolute;\n-\ttop: 50%;\n-\tleft: 16px;\n-\tmargin-top: -5px;\n-\tz-index: 1;\n-\tborder: 5px solid transparent;\n-\tborder-right-color: var(--tooltip-background-color);\n-}\n-\n-.example-wrap.ignore .tooltip:hover::after {\n-\tcontent: \"This example is not tested\";\n-}\n-.example-wrap.compile_fail .tooltip:hover::after {\n-\tcontent: \"This example deliberately fails to compile\";\n-}\n-.example-wrap.should_panic .tooltip:hover::after {\n-\tcontent: \"This example panics\";\n-}\n-.example-wrap.edition .tooltip:hover::after {\n-\tcontent: \"This code runs with edition \" attr(data-edition);\n+\tmargin: 0;\n+\tline-height: 1;\n }\n \n .example-wrap.compile_fail .tooltip,\n@@ -1213,7 +1177,7 @@ a.test-arrow:hover {\n \tborder-right: 3px solid var(--target-border-color);\n }\n \n-.notable-traits {\n+.code-header a.tooltip {\n \tcolor: inherit;\n \tmargin-right: 15px;\n \tposition: relative;\n@@ -1222,7 +1186,7 @@ a.test-arrow:hover {\n /* placeholder thunk so that the mouse can easily travel from \"(i)\" to popover\n \tthe resulting \"hover tunnel\" is a stepped triangle, approximating\n \thttps://bjk5.com/post/44698559168/breaking-down-amazons-mega-dropdown */\n-.notable-traits:hover::after {\n+a.tooltip:hover::after {\n \tposition: absolute;\n \ttop: calc(100% - 10px);\n \tleft: -15px;\n@@ -1231,19 +1195,19 @@ a.test-arrow:hover {\n \tcontent: \"\\00a0\";\n }\n \n-.notable .content {\n+.popover.tooltip .content {\n \tmargin: 0.25em 0.5em;\n }\n \n-.notable .content pre, .notable .content code {\n+.popover.tooltip .content pre, .popover.tooltip .content code {\n \tbackground: transparent;\n \tmargin: 0;\n \tpadding: 0;\n \tfont-size: 1.25rem;\n \twhite-space: pre-wrap;\n }\n \n-.notable .content > h3:first-child {\n+.popover.tooltip .content > h3:first-child {\n \tmargin: 0 0 5px 0;\n }\n "}, {"sha": "472a725f0539d3b037887181aa151981bb862aab", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -74,8 +74,6 @@ Original by Dempfi (https://github.com/dempfi/ayu)\n \t--test-arrow-hover-background-color: rgba(57, 175, 215, 0.368);\n \t--target-background-color: rgba(255, 236, 164, 0.06);\n \t--target-border-color: rgba(255, 180, 76, 0.85);\n-\t--tooltip-background-color: #314559;\n-\t--tooltip-color: #c5c5c5;\n \t--kbd-color: #c5c5c5;\n \t--kbd-background: #314559;\n \t--kbd-box-shadow-color: #5c6773;"}, {"sha": "5612bde96a88a69c41bc0d441a8dacb2776c6063", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -69,8 +69,6 @@\n \t--test-arrow-hover-background-color: #4e8bca;\n \t--target-background-color: #494a3d;\n \t--target-border-color: #bb7410;\n-\t--tooltip-background-color: #000;\n-\t--tooltip-color: #fff;\n \t--kbd-color: #000;\n \t--kbd-background: #fafbfc;\n \t--kbd-box-shadow-color: #c6cbd1;"}, {"sha": "34b35c405a8ee2477b844a30cd513829ead19109", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -69,8 +69,6 @@\n \t--test-arrow-hover-background-color: #4e8bca;\n \t--target-background-color: #fdffd3;\n \t--target-border-color: #ad7c37;\n-\t--tooltip-background-color: #000;\n-\t--tooltip-color: #fff;\n \t--kbd-color: #000;\n \t--kbd-background: #fafbfc;\n \t--kbd-box-shadow-color: #c6cbd1;"}, {"sha": "5e8c0e8d10c22d45d79279b6248df285156890bb", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 60, "deletions": 52, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -378,7 +378,7 @@ function loadCss(cssUrl) {\n         }\n         ev.preventDefault();\n         searchState.defocus();\n-        window.hideAllModals(true); // true = reset focus for notable traits\n+        window.hideAllModals(true); // true = reset focus for tooltips\n     }\n \n     function handleShortcut(ev) {\n@@ -784,17 +784,17 @@ function loadCss(cssUrl) {\n             // we need to switch away from mobile mode and make the main content area scrollable.\n             hideSidebar();\n         }\n-        if (window.CURRENT_NOTABLE_ELEMENT) {\n-            // As a workaround to the behavior of `contains: layout` used in doc togglers, the\n-            // notable traits popup is positioned using javascript.\n+        if (window.CURRENT_TOOLTIP_ELEMENT) {\n+            // As a workaround to the behavior of `contains: layout` used in doc togglers,\n+            // tooltip popovers are positioned using javascript.\n             //\n             // This means when the window is resized, we need to redo the layout.\n-            const base = window.CURRENT_NOTABLE_ELEMENT.NOTABLE_BASE;\n-            const force_visible = base.NOTABLE_FORCE_VISIBLE;\n-            hideNotable(false);\n+            const base = window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE;\n+            const force_visible = base.TOOLTIP_FORCE_VISIBLE;\n+            hideTooltip(false);\n             if (force_visible) {\n-                showNotable(base);\n-                base.NOTABLE_FORCE_VISIBLE = true;\n+                showTooltip(base);\n+                base.TOOLTIP_FORCE_VISIBLE = true;\n             }\n         }\n     });\n@@ -822,27 +822,35 @@ function loadCss(cssUrl) {\n         });\n     });\n \n-    function showNotable(e) {\n-        if (!window.NOTABLE_TRAITS) {\n+    function showTooltip(e) {\n+        const notable_ty = e.getAttribute(\"data-notable-ty\");\n+        if (!window.NOTABLE_TRAITS && notable_ty) {\n             const data = document.getElementById(\"notable-traits-data\");\n             if (data) {\n                 window.NOTABLE_TRAITS = JSON.parse(data.innerText);\n             } else {\n-                throw new Error(\"showNotable() called on page without any notable traits!\");\n+                throw new Error(\"showTooltip() called with notable without any notable traits!\");\n             }\n         }\n-        if (window.CURRENT_NOTABLE_ELEMENT && window.CURRENT_NOTABLE_ELEMENT.NOTABLE_BASE === e) {\n+        if (window.CURRENT_TOOLTIP_ELEMENT && window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE === e) {\n             // Make this function idempotent.\n             return;\n         }\n         window.hideAllModals(false);\n-        const ty = e.getAttribute(\"data-ty\");\n         const wrapper = document.createElement(\"div\");\n-        wrapper.innerHTML = \"<div class=\\\"content\\\">\" + window.NOTABLE_TRAITS[ty] + \"</div>\";\n-        wrapper.className = \"notable popover\";\n+        if (notable_ty) {\n+            wrapper.innerHTML = \"<div class=\\\"content\\\">\" +\n+                window.NOTABLE_TRAITS[notable_ty] + \"</div>\";\n+        } else if (e.getAttribute(\"title\") !== undefined) {\n+            const titleContent = document.createElement(\"div\");\n+            titleContent.className = \"content\";\n+            titleContent.appendChild(document.createTextNode(e.getAttribute(\"title\")));\n+            wrapper.appendChild(titleContent);\n+        }\n+        wrapper.className = \"tooltip popover\";\n         const focusCatcher = document.createElement(\"div\");\n         focusCatcher.setAttribute(\"tabindex\", \"0\");\n-        focusCatcher.onfocus = hideNotable;\n+        focusCatcher.onfocus = hideTooltip;\n         wrapper.appendChild(focusCatcher);\n         const pos = e.getBoundingClientRect();\n         // 5px overlap so that the mouse can easily travel from place to place\n@@ -864,62 +872,62 @@ function loadCss(cssUrl) {\n             );\n         }\n         wrapper.style.visibility = \"\";\n-        window.CURRENT_NOTABLE_ELEMENT = wrapper;\n-        window.CURRENT_NOTABLE_ELEMENT.NOTABLE_BASE = e;\n+        window.CURRENT_TOOLTIP_ELEMENT = wrapper;\n+        window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE = e;\n         wrapper.onpointerleave = function(ev) {\n             // If this is a synthetic touch event, ignore it. A click event will be along shortly.\n             if (ev.pointerType !== \"mouse\") {\n                 return;\n             }\n-            if (!e.NOTABLE_FORCE_VISIBLE && !elemIsInParent(event.relatedTarget, e)) {\n-                hideNotable(true);\n+            if (!e.TOOLTIP_FORCE_VISIBLE && !elemIsInParent(event.relatedTarget, e)) {\n+                hideTooltip(true);\n             }\n         };\n     }\n \n-    function notableBlurHandler(event) {\n-        if (window.CURRENT_NOTABLE_ELEMENT &&\n-            !elemIsInParent(document.activeElement, window.CURRENT_NOTABLE_ELEMENT) &&\n-            !elemIsInParent(event.relatedTarget, window.CURRENT_NOTABLE_ELEMENT) &&\n-            !elemIsInParent(document.activeElement, window.CURRENT_NOTABLE_ELEMENT.NOTABLE_BASE) &&\n-            !elemIsInParent(event.relatedTarget, window.CURRENT_NOTABLE_ELEMENT.NOTABLE_BASE)\n+    function tooltipBlurHandler(event) {\n+        if (window.CURRENT_TOOLTIP_ELEMENT &&\n+            !elemIsInParent(document.activeElement, window.CURRENT_TOOLTIP_ELEMENT) &&\n+            !elemIsInParent(event.relatedTarget, window.CURRENT_TOOLTIP_ELEMENT) &&\n+            !elemIsInParent(document.activeElement, window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE) &&\n+            !elemIsInParent(event.relatedTarget, window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE)\n         ) {\n             // Work around a difference in the focus behaviour between Firefox, Chrome, and Safari.\n-            // When I click the button on an already-opened notable trait popover, Safari\n+            // When I click the button on an already-opened tooltip popover, Safari\n             // hides the popover and then immediately shows it again, while everyone else hides it\n             // and it stays hidden.\n             //\n             // To work around this, make sure the click finishes being dispatched before\n-            // hiding the popover. Since `hideNotable()` is idempotent, this makes Safari behave\n+            // hiding the popover. Since `hideTooltip()` is idempotent, this makes Safari behave\n             // consistently with the other two.\n-            setTimeout(() => hideNotable(false), 0);\n+            setTimeout(() => hideTooltip(false), 0);\n         }\n     }\n \n-    function hideNotable(focus) {\n-        if (window.CURRENT_NOTABLE_ELEMENT) {\n-            if (window.CURRENT_NOTABLE_ELEMENT.NOTABLE_BASE.NOTABLE_FORCE_VISIBLE) {\n+    function hideTooltip(focus) {\n+        if (window.CURRENT_TOOLTIP_ELEMENT) {\n+            if (window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE.TOOLTIP_FORCE_VISIBLE) {\n                 if (focus) {\n-                    window.CURRENT_NOTABLE_ELEMENT.NOTABLE_BASE.focus();\n+                    window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE.focus();\n                 }\n-                window.CURRENT_NOTABLE_ELEMENT.NOTABLE_BASE.NOTABLE_FORCE_VISIBLE = false;\n+                window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE.TOOLTIP_FORCE_VISIBLE = false;\n             }\n             const body = document.getElementsByTagName(\"body\")[0];\n-            body.removeChild(window.CURRENT_NOTABLE_ELEMENT);\n-            window.CURRENT_NOTABLE_ELEMENT = null;\n+            body.removeChild(window.CURRENT_TOOLTIP_ELEMENT);\n+            window.CURRENT_TOOLTIP_ELEMENT = null;\n         }\n     }\n \n-    onEachLazy(document.getElementsByClassName(\"notable-traits\"), e => {\n+    onEachLazy(document.getElementsByClassName(\"tooltip\"), e => {\n         e.onclick = function() {\n-            this.NOTABLE_FORCE_VISIBLE = this.NOTABLE_FORCE_VISIBLE ? false : true;\n-            if (window.CURRENT_NOTABLE_ELEMENT && !this.NOTABLE_FORCE_VISIBLE) {\n-                hideNotable(true);\n+            this.TOOLTIP_FORCE_VISIBLE = this.TOOLTIP_FORCE_VISIBLE ? false : true;\n+            if (window.CURRENT_TOOLTIP_ELEMENT && !this.TOOLTIP_FORCE_VISIBLE) {\n+                hideTooltip(true);\n             } else {\n-                showNotable(this);\n-                window.CURRENT_NOTABLE_ELEMENT.setAttribute(\"tabindex\", \"0\");\n-                window.CURRENT_NOTABLE_ELEMENT.focus();\n-                window.CURRENT_NOTABLE_ELEMENT.onblur = notableBlurHandler;\n+                showTooltip(this);\n+                window.CURRENT_TOOLTIP_ELEMENT.setAttribute(\"tabindex\", \"0\");\n+                window.CURRENT_TOOLTIP_ELEMENT.focus();\n+                window.CURRENT_TOOLTIP_ELEMENT.onblur = tooltipBlurHandler;\n             }\n             return false;\n         };\n@@ -928,16 +936,16 @@ function loadCss(cssUrl) {\n             if (ev.pointerType !== \"mouse\") {\n                 return;\n             }\n-            showNotable(this);\n+            showTooltip(this);\n         };\n         e.onpointerleave = function(ev) {\n             // If this is a synthetic touch event, ignore it. A click event will be along shortly.\n             if (ev.pointerType !== \"mouse\") {\n                 return;\n             }\n-            if (!this.NOTABLE_FORCE_VISIBLE &&\n-                !elemIsInParent(ev.relatedTarget, window.CURRENT_NOTABLE_ELEMENT)) {\n-                hideNotable(true);\n+            if (!this.TOOLTIP_FORCE_VISIBLE &&\n+                !elemIsInParent(ev.relatedTarget, window.CURRENT_TOOLTIP_ELEMENT)) {\n+                hideTooltip(true);\n             }\n         };\n     });\n@@ -1039,14 +1047,14 @@ function loadCss(cssUrl) {\n     }\n \n     /**\n-     * Hide popover menus, notable trait tooltips, and the sidebar (if applicable).\n+     * Hide popover menus, clickable tooltips, and the sidebar (if applicable).\n      *\n-     * Pass \"true\" to reset focus for notable traits.\n+     * Pass \"true\" to reset focus for tooltip popovers.\n      */\n     window.hideAllModals = function(switchFocus) {\n         hideSidebar();\n         window.hidePopoverMenus();\n-        hideNotable(switchFocus);\n+        hideTooltip(switchFocus);\n     };\n \n     /**"}, {"sha": "0b31e20fc87c003ed6631cfdea8ae25a87eeae71", "filename": "src/tools/clippy/clippy_lints/src/doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -11,7 +11,7 @@ use rustc_ast::token::CommentKind;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::emitter::EmitterWriter;\n-use rustc_errors::{Applicability, Handler, SuggestionStyle};\n+use rustc_errors::{Applicability, Handler, SuggestionStyle, TerminalUrl};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::{AnonConst, Expr};\n@@ -717,6 +717,7 @@ fn check_code(cx: &LateContext<'_>, text: &str, edition: Edition, span: Span) {\n                     None,\n                     false,\n                     false,\n+                    TerminalUrl::No,\n                 );\n                 let handler = Handler::with_emitter(false, None, Box::new(emitter));\n                 let sess = ParseSess::with_span_handler(handler, sm);"}, {"sha": "e45835efe7464fd51490a6b1d645e32532ff87a7", "filename": "src/tools/clippy/src/driver.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -220,6 +220,7 @@ fn report_clippy_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n         None,\n         false,\n         false,\n+        rustc_errors::TerminalUrl::No,\n     ));\n     let handler = rustc_errors::Handler::with_emitter(true, None, emitter);\n "}, {"sha": "9014026b0aa4ad93c868fdb05cce7f2592ba39cf", "filename": "src/tools/rustfmt/src/parse/session.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Ftools%2Frustfmt%2Fsrc%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/src%2Ftools%2Frustfmt%2Fsrc%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fparse%2Fsession.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -4,7 +4,7 @@ use std::sync::atomic::{AtomicBool, Ordering};\n use rustc_data_structures::sync::{Lrc, Send};\n use rustc_errors::emitter::{Emitter, EmitterWriter};\n use rustc_errors::translation::Translate;\n-use rustc_errors::{ColorConfig, Diagnostic, Handler, Level as DiagnosticLevel};\n+use rustc_errors::{ColorConfig, Diagnostic, Handler, Level as DiagnosticLevel, TerminalUrl};\n use rustc_session::parse::ParseSess as RawParseSess;\n use rustc_span::{\n     source_map::{FilePathMapping, SourceMap},\n@@ -135,6 +135,7 @@ fn default_handler(\n             None,\n             false,\n             false,\n+            TerminalUrl::No,\n         ))\n     };\n     Handler::with_emitter("}, {"sha": "36b67073a03538ce0ae85c30b0361c1cc3157a1d", "filename": "tests/rustdoc-gui/codeblock-tooltip.goml", "status": "modified", "additions": 36, "deletions": 58, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc-gui%2Fcodeblock-tooltip.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc-gui%2Fcodeblock-tooltip.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcodeblock-tooltip.goml?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -30,24 +30,16 @@ define-function: (\n             \".docblock .example-wrap.compile_fail\",\n             {\"border-left\": \"2px solid rgb(255, 0, 0)\"},\n         )\n-        assert-css: (\n-            \".docblock .example-wrap.compile_fail .tooltip::after\",\n-            {\n-                \"content\": '\"This example deliberately fails to compile\"',\n-                \"padding\": \"5px 3px 3px\",\n-                \"background-color\": |background|,\n-                \"color\": |color|,\n-                \"border\": \"1px solid \" + |border|,\n-            },\n-        )\n-        assert-css: (\n-            \".docblock .example-wrap.compile_fail .tooltip::before\",\n-            {\n-                \"border-width\": \"5px\",\n-                \"border-style\": \"solid\",\n-                \"border-color\": \"rgba(0, 0, 0, 0) \" + |background| + \" rgba(0, 0, 0, 0) rgba(0, 0, 0, 0)\",\n-            },\n-        )\n+        click: \".docblock .example-wrap.compile_fail .tooltip\"\n+        assert-text: (\n+            \".popover.tooltip\",\n+            \"This example deliberately fails to compile\"\n+        )\n+        assert-css: (\".popover.tooltip\", {\n+            \"color\": |color|,\n+            \"background-color\": |background|,\n+            \"border-color\": |border|,\n+        })\n \n         // should_panic block\n         assert-css: (\n@@ -69,24 +61,16 @@ define-function: (\n             \".docblock .example-wrap.should_panic\",\n             {\"border-left\": \"2px solid rgb(255, 0, 0)\"},\n         )\n-        assert-css: (\n-            \".docblock .example-wrap.should_panic .tooltip::after\",\n-            {\n-                \"content\": '\"This example panics\"',\n-                \"padding\": \"5px 3px 3px\",\n-                \"background-color\": |background|,\n-                \"color\": |color|,\n-                \"border\": \"1px solid \" + |border|,\n-            },\n-        )\n-        assert-css: (\n-            \".docblock .example-wrap.should_panic .tooltip::before\",\n-            {\n-                \"border-width\": \"5px\",\n-                \"border-style\": \"solid\",\n-                \"border-color\": \"rgba(0, 0, 0, 0) \" + |background| + \" rgba(0, 0, 0, 0) rgba(0, 0, 0, 0)\",\n-            },\n+        click: \".docblock .example-wrap.should_panic .tooltip\"\n+        assert-text: (\n+            \".popover.tooltip\",\n+            \"This example panics\"\n         )\n+        assert-css: (\".popover.tooltip\", {\n+            \"color\": |color|,\n+            \"background-color\": |background|,\n+            \"border-color\": |border|,\n+        })\n \n         // ignore block\n         assert-css: (\n@@ -108,42 +92,36 @@ define-function: (\n             \".docblock .example-wrap.ignore\",\n             {\"border-left\": \"2px solid rgb(255, 142, 0)\"},\n         )\n-        assert-css: (\n-            \".docblock .example-wrap.ignore .tooltip::after\",\n-            {\n-                \"content\": '\"This example is not tested\"',\n-                \"padding\": \"5px 3px 3px\",\n-                \"background-color\": |background|,\n-                \"color\": |color|,\n-                \"border\": \"1px solid \" + |border|,\n-            },\n-        )\n-        assert-css: (\n-            \".docblock .example-wrap.ignore .tooltip::before\",\n-            {\n-                \"border-width\": \"5px\",\n-                \"border-style\": \"solid\",\n-                \"border-color\": \"rgba(0, 0, 0, 0) \" + |background| + \" rgba(0, 0, 0, 0) rgba(0, 0, 0, 0)\",\n-            },\n-        )\n+        click: \".docblock .example-wrap.ignore .tooltip\"\n+        assert-text: (\n+            \".popover.tooltip\",\n+            \"This example is not tested\"\n+        )\n+        assert-css: (\".popover.tooltip\", {\n+            \"color\": |color|,\n+            \"background-color\": |background|,\n+            \"border-color\": |border|,\n+        })\n+        click: \".docblock .example-wrap.ignore .tooltip\"\n+        assert-false: \".popover.tooltip\"\n     },\n )\n \n call-function: (\"check-colors\", {\n     \"theme\": \"ayu\",\n-    \"background\": \"rgb(49, 69, 89)\",\n+    \"background\": \"rgb(15, 20, 25)\",\n     \"color\": \"rgb(197, 197, 197)\",\n     \"border\": \"rgb(92, 103, 115)\",\n })\n call-function: (\"check-colors\", {\n     \"theme\": \"dark\",\n-    \"background\": \"rgb(0, 0, 0)\",\n-    \"color\": \"rgb(255, 255, 255)\",\n+    \"background\": \"rgb(53, 53, 53)\",\n+    \"color\": \"rgb(221, 221, 221)\",\n     \"border\": \"rgb(224, 224, 224)\",\n })\n call-function: (\"check-colors\", {\n     \"theme\": \"light\",\n-    \"background\": \"rgb(0, 0, 0)\",\n-    \"color\": \"rgb(255, 255, 255)\",\n+    \"background\": \"rgb(255, 255, 255)\",\n+    \"color\": \"rgb(0, 0, 0)\",\n     \"border\": \"rgb(224, 224, 224)\",\n })"}, {"sha": "207289151992ee245f45945bc123b5fc2a8e11ec", "filename": "tests/rustdoc-gui/notable-trait.goml", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc-gui%2Fnotable-trait.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc-gui%2Fnotable-trait.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fnotable-trait.goml?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -6,13 +6,13 @@ size: (1100, 600)\n // Checking they have the same y position.\n compare-elements-position: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     (\"y\"),\n )\n // Checking they don't have the same x position.\n compare-elements-position-false: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     (\"x\"),\n )\n // The `i` should be *after* the type.\n@@ -21,33 +21,33 @@ assert-position: (\n     {\"x\": 677},\n )\n assert-position: (\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     {\"x\": 955},\n )\n // The tooltip should be below the `i`\n // Also, clicking the tooltip should bring its text into the DOM\n-assert-count: (\"//*[@class='notable popover']\", 0)\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-assert-count: (\"//*[@class='notable popover']\", 1)\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+assert-count: (\"//*[@class='tooltip popover']\", 1)\n compare-elements-position-near: (\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n-    \"//*[@class='notable popover']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n+    \"//*[@class='tooltip popover']\",\n     {\"y\": 30}\n )\n compare-elements-position-false: (\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n-    \"//*[@class='notable popover']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n+    \"//*[@class='tooltip popover']\",\n     (\"x\")\n )\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n move-cursor-to: \"//h1\"\n-assert-count: (\"//*[@class='notable popover']\", 0)\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n \n // Now only the `i` should be on the next line.\n size: (1055, 600)\n compare-elements-position-false: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     (\"y\", \"x\"),\n )\n \n@@ -56,13 +56,13 @@ size: (980, 600)\n // Checking they have the same y position.\n compare-elements-position: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     (\"y\"),\n )\n // Checking they don't have the same x position.\n compare-elements-position-false: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     (\"x\"),\n )\n // The `i` should be *after* the type.\n@@ -71,7 +71,7 @@ assert-position: (\n     {\"x\": 245},\n )\n assert-position: (\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     {\"x\": 523},\n )\n \n@@ -80,13 +80,13 @@ size: (650, 600)\n // Checking they have the same y position.\n compare-elements-position: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     (\"y\"),\n )\n // Checking they don't have the same x position.\n compare-elements-position-false: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     (\"x\"),\n )\n // The `i` should be *after* the type.\n@@ -95,29 +95,29 @@ assert-position: (\n     {\"x\": 15},\n )\n assert-position: (\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     {\"x\": 293},\n )\n // The tooltip should STILL be below `i`\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-assert-count: (\"//*[@class='notable popover']\", 1)\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+assert-count: (\"//*[@class='tooltip popover']\", 1)\n compare-elements-position-near: (\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n-    \"//*[@class='notable popover']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n+    \"//*[@class='tooltip popover']\",\n     {\"y\": 30}\n )\n compare-elements-position-false: (\n-    \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\",\n-    \"//*[@class='notable popover']\",\n+    \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n+    \"//*[@class='tooltip popover']\",\n     (\"x\")\n )\n assert-position: (\n-    \"//*[@class='notable popover']\",\n+    \"//*[@class='tooltip popover']\",\n     {\"x\": 0}\n )\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n move-cursor-to: \"//h1\"\n-assert-count: (\"//*[@class='notable popover']\", 0)\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n \n // Now check the colors.\n define-function: (\n@@ -133,26 +133,26 @@ define-function: (\n         // We reload the page so the local storage settings are being used.\n         reload:\n \n-        move-cursor-to: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-        assert-count: (\".notable.popover\", 1)\n+        move-cursor-to: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+        assert-count: (\".tooltip.popover\", 1)\n \n         assert-css: (\n-             \".notable.popover h3\",\n+             \".tooltip.popover h3\",\n              {\"color\": |header_color|},\n              ALL,\n         )\n         assert-css: (\n-             \".notable.popover pre\",\n+             \".tooltip.popover pre\",\n              {\"color\": |content_color|},\n              ALL,\n         )\n         assert-css: (\n-             \".notable.popover pre a.struct\",\n+             \".tooltip.popover pre a.struct\",\n              {\"color\": |type_color|},\n              ALL,\n         )\n         assert-css: (\n-             \".notable.popover pre a.trait\",\n+             \".tooltip.popover pre a.trait\",\n              {\"color\": |trait_color|},\n              ALL,\n         )\n@@ -195,33 +195,33 @@ call-function: (\n reload:\n \n // Check that pressing escape works\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-move-cursor-to: \"//*[@class='notable popover']\"\n-assert-count: (\"//*[@class='notable popover']\", 1)\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+move-cursor-to: \"//*[@class='tooltip popover']\"\n+assert-count: (\"//*[@class='tooltip popover']\", 1)\n press-key: \"Escape\"\n-assert-count: (\"//*[@class='notable popover']\", 0)\n-assert: \"#method\\.create_an_iterator_from_read .notable-traits:focus\"\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n+assert: \"#method\\.create_an_iterator_from_read .tooltip:focus\"\n \n // Check that clicking outside works.\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-assert-count: (\"//*[@class='notable popover']\", 1)\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+assert-count: (\"//*[@class='tooltip popover']\", 1)\n click: \".search-input\"\n-assert-count: (\"//*[@class='notable popover']\", 0)\n-assert-false: \"#method\\.create_an_iterator_from_read .notable-traits:focus\"\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n+assert-false: \"#method\\.create_an_iterator_from_read .tooltip:focus\"\n \n // Check that pressing tab over and over works.\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-move-cursor-to: \"//*[@class='notable popover']\"\n-assert-count: (\"//*[@class='notable popover']\", 1)\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+move-cursor-to: \"//*[@class='tooltip popover']\"\n+assert-count: (\"//*[@class='tooltip popover']\", 1)\n press-key: \"Tab\"\n press-key: \"Tab\"\n press-key: \"Tab\"\n press-key: \"Tab\"\n press-key: \"Tab\"\n press-key: \"Tab\"\n press-key: \"Tab\"\n-assert-count: (\"//*[@class='notable popover']\", 0)\n-assert: \"#method\\.create_an_iterator_from_read .notable-traits:focus\"\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n+assert: \"#method\\.create_an_iterator_from_read .tooltip:focus\"\n \n // Now we check that the focus isn't given back to the wrong item when opening\n // another popover.\n@@ -231,8 +231,8 @@ click: \"#method\\.create_an_iterator_from_read .fn\"\n assert-window-property-false: {\"scrollY\": |scroll|}\n // Store the new position.\n store-window-property: (scroll, \"scrollY\")\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-wait-for: \"//*[@class='notable popover']\"\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+wait-for: \"//*[@class='tooltip popover']\"\n click: \"#settings-menu a\"\n click: \".search-input\"\n // We ensure we didn't come back to the previous focused item.\n@@ -245,32 +245,32 @@ click: \"#method\\.create_an_iterator_from_read .fn\"\n assert-window-property-false: {\"scrollY\": |scroll|}\n // Store the new position.\n store-window-property: (scroll, \"scrollY\")\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-wait-for: \"//*[@class='notable popover']\"\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+wait-for: \"//*[@class='tooltip popover']\"\n click: \"#settings-menu a\"\n press-key: \"Escape\"\n // We ensure we didn't come back to the previous focused item.\n assert-window-property-false: {\"scrollY\": |scroll|}\n \n // Opening the mobile sidebar should close the popover.\n size: (650, 600)\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-assert-count: (\"//*[@class='notable popover']\", 1)\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+assert-count: (\"//*[@class='tooltip popover']\", 1)\n click: \".sidebar-menu-toggle\"\n assert: \"//*[@class='sidebar shown']\"\n-assert-count: (\"//*[@class='notable popover']\", 0)\n-assert-false: \"#method\\.create_an_iterator_from_read .notable-traits:focus\"\n-// Clicking a notable popover should close the sidebar.\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-assert-count: (\"//*[@class='notable popover']\", 1)\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n+assert-false: \"#method\\.create_an_iterator_from_read .tooltip:focus\"\n+// Clicking a notable trait tooltip popover should close the sidebar.\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+assert-count: (\"//*[@class='tooltip popover']\", 1)\n assert-false: \"//*[@class='sidebar shown']\"\n \n // Also check the focus handling for the help button.\n size: (1100, 600)\n reload:\n-assert-count: (\"//*[@class='notable popover']\", 0)\n-click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='notable-traits']\"\n-assert-count: (\"//*[@class='notable popover']\", 1)\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n+click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n+assert-count: (\"//*[@class='tooltip popover']\", 1)\n click: \"#help-button a\"\n-assert-count: (\"//*[@class='notable popover']\", 0)\n-assert-false: \"#method\\.create_an_iterator_from_read .notable-traits:focus\"\n+assert-count: (\"//*[@class='tooltip popover']\", 0)\n+assert-false: \"#method\\.create_an_iterator_from_read .tooltip:focus\""}, {"sha": "96329f31723bda07a6662273fc981db585758e06", "filename": "tests/rustdoc-ui/z-help.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc-ui%2Fz-help.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc-ui%2Fz-help.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fz-help.stdout?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -176,6 +176,7 @@\n     -Z                 symbol-mangling-version=val -- which mangling version to use for symbol names ('legacy' (default) or 'v0')\n     -Z                                   teach=val -- show extended diagnostic help (default: no)\n     -Z                               temps-dir=val -- the directory the intermediate files are written to\n+    -Z                           terminal-urls=val -- use the OSC 8 hyperlink terminal specification to print hyperlinks in the compiler output\n     -Z                                 thinlto=val -- enable ThinLTO when possible\n     -Z                           thir-unsafeck=val -- use the THIR unsafety checker (default: no)\n     -Z                                 threads=val -- use a thread pool with N threads"}, {"sha": "761afb8bd08d053f0d745a8d4ca848bee6f12836", "filename": "tests/rustdoc/codeblock-title.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc%2Fcodeblock-title.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc%2Fcodeblock-title.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fcodeblock-title.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -3,7 +3,7 @@\n // @has foo/fn.bar.html '//*[@class=\"example-wrap compile_fail\"]/*[@class=\"tooltip\"]' \"\u24d8\"\n // @has foo/fn.bar.html '//*[@class=\"example-wrap ignore\"]/*[@class=\"tooltip\"]' \"\u24d8\"\n // @has foo/fn.bar.html '//*[@class=\"example-wrap should_panic\"]/*[@class=\"tooltip\"]' \"\u24d8\"\n-// @has foo/fn.bar.html '//*[@data-edition=\"2018\"]' \"\u24d8\"\n+// @has foo/fn.bar.html '//*[@title=\"This example runs with edition 2018\"]' \"\u24d8\"\n \n /// foo\n ///"}, {"sha": "d8941769fa67ab2aad23682979a892fd6b803d63", "filename": "tests/rustdoc/doc-notable_trait.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc%2Fdoc-notable_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc%2Fdoc-notable_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fdoc-notable_trait.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -9,7 +9,7 @@ impl<T: SomeTrait> SomeTrait for Wrapper<T> {}\n #[doc(notable_trait)]\n pub trait SomeTrait {\n     // @has doc_notable_trait/trait.SomeTrait.html\n-    // @has - '//a[@class=\"notable-traits\"]/@data-ty' 'Wrapper<Self>'\n+    // @has - '//a[@class=\"tooltip\"]/@data-notable-ty' 'Wrapper<Self>'\n     // @snapshot wrap-me - '//script[@id=\"notable-traits-data\"]'\n     fn wrap_me(self) -> Wrapper<Self> where Self: Sized {\n         Wrapper {\n@@ -23,15 +23,15 @@ impl SomeTrait for SomeStruct {}\n \n impl SomeStruct {\n     // @has doc_notable_trait/struct.SomeStruct.html\n-    // @has - '//a[@class=\"notable-traits\"]/@data-ty' 'SomeStruct'\n+    // @has - '//a[@class=\"tooltip\"]/@data-notable-ty' 'SomeStruct'\n     // @snapshot some-struct-new - '//script[@id=\"notable-traits-data\"]'\n     pub fn new() -> SomeStruct {\n         SomeStruct\n     }\n }\n \n // @has doc_notable_trait/fn.bare_fn.html\n-// @has - '//a[@class=\"notable-traits\"]/@data-ty' 'SomeStruct'\n+// @has - '//a[@class=\"tooltip\"]/@data-notable-ty' 'SomeStruct'\n // @snapshot bare-fn - '//script[@id=\"notable-traits-data\"]'\n pub fn bare_fn() -> SomeStruct {\n     SomeStruct"}, {"sha": "426759c7bf8a218aca6c3a699782b037e8deccdb", "filename": "tests/rustdoc/spotlight-from-dependency.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc%2Fspotlight-from-dependency.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Frustdoc%2Fspotlight-from-dependency.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fspotlight-from-dependency.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -3,7 +3,7 @@\n use std::iter::Iterator;\n \n // @has foo/struct.Odd.html\n-// @has - '//*[@id=\"method.new\"]//a[@class=\"notable-traits\"]/@data-ty' 'Odd'\n+// @has - '//*[@id=\"method.new\"]//a[@class=\"tooltip\"]/@data-notable-ty' 'Odd'\n // @snapshot odd - '//script[@id=\"notable-traits-data\"]'\n pub struct Odd {\n     current: usize,"}, {"sha": "1f04e2aade17f48873846276d6320a501fdce2d0", "filename": "tests/ui/diagnostic-flags/terminal_urls.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Fui%2Fdiagnostic-flags%2Fterminal_urls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Fui%2Fdiagnostic-flags%2Fterminal_urls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiagnostic-flags%2Fterminal_urls.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: -Zterminal-urls=yes\n+fn main() {\n+    let () = 4; //~ ERROR\n+}"}, {"sha": "7f7e69c5d5da7d77bb17d6962bf3e2db58bfe483", "filename": "tests/ui/diagnostic-flags/terminal_urls.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Fui%2Fdiagnostic-flags%2Fterminal_urls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Fui%2Fdiagnostic-flags%2Fterminal_urls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiagnostic-flags%2Fterminal_urls.stderr?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -0,0 +1,11 @@\n+error[\u001b]8;;https://doc.rust-lang.org/error_codes/E0308.html\u0007E0308\u001b]8;;\u0007]: mismatched types\n+  --> $DIR/terminal_urls.rs:3:9\n+   |\n+LL |     let () = 4;\n+   |         ^^   - this expression has type `{integer}`\n+   |         |\n+   |         expected integer, found `()`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "943f7f0eb192957451d4ee61e2b5816c79ce6d3a", "filename": "tests/ui/span/issue-107353.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Fui%2Fspan%2Fissue-107353.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b439b119b8d49450bddbbea317afeb0d4166f70/tests%2Fui%2Fspan%2Fissue-107353.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspan%2Fissue-107353.rs?ref=0b439b119b8d49450bddbbea317afeb0d4166f70", "patch": "@@ -0,0 +1,9 @@\n+// ignore-tidy-linelength\n+// Verify that span interning correctly handles having a span of exactly MAX_LEN length.\n+// compile-flags: --crate-type=lib\n+// check-pass\n+\n+#![allow(dead_code)]\n+fn a<'a, T>() -> &'a T {\n+todon+}"}]}