{"sha": "e3fca9b3f13e14aa25634d7ffb818818e5720401", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZmNhOWIzZjEzZTE0YWEyNTYzNGQ3ZmZiODE4ODE4ZTU3MjA0MDE=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-07-02T08:22:59Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-07-02T08:39:43Z"}, "message": "Import `std::process::self`", "tree": {"sha": "1bedd069f7be6c70c08b6275a31dbdf2e6989d5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bedd069f7be6c70c08b6275a31dbdf2e6989d5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3fca9b3f13e14aa25634d7ffb818818e5720401", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYN7QzxUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLiGoAEAn/JcTsJQOZRMiEZQJgQpsKxXP7g1\nzumSMyBGkvvVx+IA/04935c2GNxC3m6M+Bfe15I6z1Rm9JnNP5JqYjUdkGMB\n=Os/U\n-----END PGP SIGNATURE-----", "payload": "tree 1bedd069f7be6c70c08b6275a31dbdf2e6989d5b\nparent c504e3dee0f85e344dbe8e4cc268e317ef9ff3a2\nauthor hyd-dev <yd-huang@outlook.com> 1625214179 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1625215183 +0800\n\nImport `std::process::self`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3fca9b3f13e14aa25634d7ffb818818e5720401", "html_url": "https://github.com/rust-lang/rust/commit/e3fca9b3f13e14aa25634d7ffb818818e5720401", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3fca9b3f13e14aa25634d7ffb818818e5720401/comments", "author": null, "committer": null, "parents": [{"sha": "c504e3dee0f85e344dbe8e4cc268e317ef9ff3a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c504e3dee0f85e344dbe8e4cc268e317ef9ff3a2", "html_url": "https://github.com/rust-lang/rust/commit/c504e3dee0f85e344dbe8e4cc268e317ef9ff3a2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1a7552c5d9e050c5d50e9ecfb0768f1d19cdd973", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e3fca9b3f13e14aa25634d7ffb818818e5720401/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3fca9b3f13e14aa25634d7ffb818818e5720401/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=e3fca9b3f13e14aa25634d7ffb818818e5720401", "patch": "@@ -6,7 +6,7 @@ use std::io::{self, BufRead, BufReader, BufWriter, Read, Write};\n use std::iter::TakeWhile;\n use std::ops::Not;\n use std::path::{Path, PathBuf};\n-use std::process::{Command, Stdio};\n+use std::process::{self, Command};\n \n use serde::{Deserialize, Serialize};\n \n@@ -233,7 +233,7 @@ fn exec(mut cmd: Command) {\n /// If it fails, fail this process with the same exit code.\n /// Otherwise, continue.\n fn exec_with_pipe(mut cmd: Command, input: &[u8]) {\n-    cmd.stdin(std::process::Stdio::piped());\n+    cmd.stdin(process::Stdio::piped());\n     let mut child = cmd.spawn().expect(\"failed to spawn process\");\n     {\n         let stdin = child.stdin.as_mut().expect(\"failed to open stdin\");\n@@ -493,8 +493,8 @@ fn detect_target_dir() -> PathBuf {\n         }\n     }\n     let mut child = cmd\n-        .stdin(Stdio::null())\n-        .stdout(Stdio::piped())\n+        .stdin(process::Stdio::null())\n+        .stdout(process::Stdio::piped())\n         .spawn()\n         .expect(\"failed ro run `cargo metadata`\");\n     // Check this `Result` after `status.success()` is checked, so we don't print the error"}]}