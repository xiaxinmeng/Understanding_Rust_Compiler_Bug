{"sha": "4cb5854d883d275872b16a200a2bfc30c53ccea3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYjU4NTRkODgzZDI3NTg3MmIxNmEyMDBhMmJmYzMwYzUzY2NlYTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-27T02:24:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-27T02:24:53Z"}, "message": "auto merge of #5560 : brson/rust/relnotes, r=brson\n\nr?", "tree": {"sha": "020fe27955ec0c111f0f090b7d61eb017037a625", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/020fe27955ec0c111f0f090b7d61eb017037a625"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cb5854d883d275872b16a200a2bfc30c53ccea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cb5854d883d275872b16a200a2bfc30c53ccea3", "html_url": "https://github.com/rust-lang/rust/commit/4cb5854d883d275872b16a200a2bfc30c53ccea3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cb5854d883d275872b16a200a2bfc30c53ccea3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5011d05db25fd3dfc0a9dc41fd914633ffb85469", "url": "https://api.github.com/repos/rust-lang/rust/commits/5011d05db25fd3dfc0a9dc41fd914633ffb85469", "html_url": "https://github.com/rust-lang/rust/commit/5011d05db25fd3dfc0a9dc41fd914633ffb85469"}, {"sha": "110a273e0d3a34540da2bc1c57027120d81c5e87", "url": "https://api.github.com/repos/rust-lang/rust/commits/110a273e0d3a34540da2bc1c57027120d81c5e87", "html_url": "https://github.com/rust-lang/rust/commit/110a273e0d3a34540da2bc1c57027120d81c5e87"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "ae583d6409e235c85fbf00de22d0da9c7b65b057", "filename": "AUTHORS.txt", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4cb5854d883d275872b16a200a2bfc30c53ccea3/AUTHORS.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4cb5854d883d275872b16a200a2bfc30c53ccea3/AUTHORS.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/AUTHORS.txt?ref=4cb5854d883d275872b16a200a2bfc30c53ccea3", "patch": "@@ -21,6 +21,7 @@ Aydin Kim <ladinjin@hanmail.net>\n auREAX <mark@xn--hwg34fba.ws>\n Ben Alpert <ben@benalpert.com>\n Ben Blum <bblum@andrew.cmu.edu>\n+Ben Kelly <ben@wanderview.com>\n Ben Striegel <ben.striegel@gmail.com>\n Benjamin Herr <ben@0x539.de>\n Benjamin Jackman <ben@jackman.biz>\n@@ -44,9 +45,12 @@ Daniel Brooks <db48x@db48x.net>\n Daniel Luz <dev@mernen.com>\n Daniel Micay <danielmicay@gmail.com>\n Daniel Patterson <dbp@riseup.net>\n+Daniel Ursache Dogariu <contact@danniel.net>\n Dave Herman <dherman@mozilla.com>\n David Forsythe <dforsythe@gmail.com>\n+David Klein <david.klein@baesystemsdetica.com>\n David Rajchenbach-Teller <dteller@mozilla.com>\n+Dimitri Krassovski <labria@startika.com>\n Donovan Preston <donovanpreston@gmail.com>\n Drew Willcoxon <adw@mozilla.com>\n Elliott Slaughter <elliottslaughter@gmail.com>\n@@ -66,6 +70,7 @@ Gon\u00e7alo Cabrita <_@gmcabrita.com>\n Graham Fawcett <fawcett@uwindsor.ca>\n Grahame Bowland <grahame@angrygoats.net>\n Haitao Li <lihaitao@gmail.com>\n+hansjorg <hansjorg@gmail.com>\n Huon Wilson <dbau.pp+github@gmail.com>\n Ian D. Bollinger <ian.bollinger@gmail.com>\n Ilyong Cho <ilyoan@gmail.com>\n@@ -80,11 +85,14 @@ Jeff Balogh <jbalogh@mozilla.com>\n Jeff Muizelaar <jmuizelaar@mozilla.com>\n Jeff Olson <olson.jeffery@gmail.com>\n Jeffrey Yasskin <jyasskin@gmail.com>\n+Jeong YunWon <jeong@youknowone.org>\n Jens Nockert <jens@nockert.se>\n Jesse Jones <jesse9jones@gmail.com>\n Jesse Ruderman <jruderman@gmail.com>\n+Jihyun Yu <jihyun@nclab.kaist.ac.kr>\n Jim Blandy <jimb@red-bean.com>\n Jimmy Lu <jimmy.lu.2011@gmail.com>\n+J. J. Weber <jjweber@gmail.com>\n Joe Pletcher <joepletcher@gmail.com>\n John Clements <clements@racket-lang.org>\n Jon Morton <jonanin@gmail.com>\n@@ -99,6 +107,7 @@ Kevin Atkinson <kevina@cs.utah.edu>\n Kevin Cantu <me@kevincantu.org>\n Kyeongwoon Lee <kyeongwoon.lee@samsung.com>\n Laurent Bonnans <bonnans.l@gmail.com>\n+Lawrence Vela\u0301zquez <larryv@alum.mit.edu>\n Lennart Kudling <github@kudling.de>\n Lindsey Kuper <lindsey@composition.al>\n Luca Bruno <lucab@debian.org>\n@@ -112,7 +121,9 @@ Mark Vian <mrv.caseus@gmail.com>\n Martin DeMello <martindemello@gmail.com>\n Marvin L\u00f6bel <loebel.marvin@gmail.com>\n Matt Brubeck <mbrubeck@limpet.net>\n+Matthew McPherrin <matthew@mcpherrin.ca>\n Matthew O'Connor <thegreendragon@gmail.com>\n+Matthijs Hofstra <thiezz@gmail.com>\n Max Penet <max.penet@gmail.com>\n Michael Arntzenius <daekharel@gmail.com>\n Michael Bebenita <mbebenita@mozilla.com>\n@@ -121,6 +132,7 @@ Michael Sullivan <sully@msully.net>\n Mikko Perttunen <cyndis@kapsi.fi>\n Nick Desaulniers <ndesaulniers@mozilla.com>\n Niko Matsakis <niko@alum.mit.edu>\n+Olivier Saut <osaut@airpost.net>\n Or Brostovski <tohava@gmail.com>\n Orph\u00e9e Lafond-Lummis <o@orftz.com>\n Patrick Walton <pwalton@mozilla.com>\n@@ -140,14 +152,17 @@ Roy Frostig <rfrostig@mozilla.com>\n Ryan Scheel <ryan.havvy@gmail.com>\n Sean Stangl <sstangl@mozilla.com>\n Sebastian N. Fernandez <cachobot@gmail.com>\n+Seth Pink <sethpink@gmail.com>\n Seo Sanghyeon <sanxiyn@gmail.com>\n+sevrak <sevrak@rediffmail.com>\n Simon Barber-Dueck <sbarberdueck@gmail.com>\n Simon Sapin <simon@exyr.org>\n startling <tdixon51793@gmail.com>\n Stefan Plantikow <stefan.plantikow@googlemail.com>\n Steve Klabnik <steve@steveklabnik.com>\n Taras Shpot <mrshpot@gmail.com>\n Ted Horst <ted.horst@earthlink.net>\n+Thad Guidry <thadguidry@gmail.com>\n Tim Chevalier <chevalier@alum.wellesley.edu>\n Tim Taubert <tim@timtaubert.de>\n Tom Lee <github@tomlee.co>\n@@ -161,5 +176,6 @@ Vincent Belliard <vincent@famillebelliard.fr>\n Wade Mealing <wmealing@gmail.com>\n William Ting <william.h.ting@gmail.com>\n Yasuhiro Fujii <y-fujii@mimosa-pudica.net>\n+Young-il Choi <duddlf.choi@samsung.com>\n Youngsoo Son <ysson83@gmail.com>\n Zack Corr <zack@z0w0.me>"}, {"sha": "01a2e5fad0faa75176387df46189011aac11a5d2", "filename": "RELEASES.txt", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/4cb5854d883d275872b16a200a2bfc30c53ccea3/RELEASES.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4cb5854d883d275872b16a200a2bfc30c53ccea3/RELEASES.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.txt?ref=4cb5854d883d275872b16a200a2bfc30c53ccea3", "patch": "@@ -1,28 +1,22 @@\n Version 0.6 (March 2013)\n ---------------------------\n \n-   * ~2000 changes, numerous bugfixes\n-\n-   * TODO:\n-      * Ord/Cmp\n-      * Lifetime changes\n-      * Remove `static` keyword\n-      * Static method syntax\n-      * `as Trait`\n-      * `copy` removed, replaced with `Clone`?\n-      * More details for \"Name resolution continues to be tweaked\"?\n+   * ~2100 changes, numerous bugfixes\n \n    * Syntax changes\n       * The self type parameter in traits is now spelled `Self`\n       * The `self` parameter in trait and impl methods must now be explicitly\n         named (for example: `fn f(&self) { }`). Implicit self is deprecated.\n+      * Static methods no longer require the `static` keyword and instead\n+        are distinguished by the lack of a `self` parameter\n       * Replaced the `Durable` trait with the `'static` lifetime\n       * The old closure type syntax with the trailing sigil has been\n         removed in favor of the more consistent leading sigil\n       * `super` is a keyword, and may be prefixed to paths\n       * Trait bounds are separated with `+` instead of whitespace\n       * Traits are implemented with `impl Trait for Type`\n         instead of `impl Type: Trait`\n+      * Lifetime syntax is now `&'l foo` instead of `&l/foo`\n       * The `export` keyword has finally been removed\n       * The `move` keyword has been removed (see \"Semantic changes\")\n       * The interior mutability qualifier on vectors, `[mut T]`, has been\n@@ -41,9 +35,11 @@ Version 0.6 (March 2013)\n       * Pattern matching over vectors improved and expanded\n       * `const` renamed to `static` to correspond to lifetime name,\n         and make room for future `static mut` unsafe mutable globals.\n-      * Replaced `#[deriving_eq]` with `#[deriving(Eq)]`\n+      * Replaced `#[deriving_eq]` with `#[deriving(Eq)]`, etc.\n       * `Clone` implementations can be automatically generated with\n         `#[deriving(Clone)]`\n+      * Casts to traits must use a pointer sigil, e.g. `@foo as @Bar`\n+        instead of `foo as Bar`.\n \n    * Semantic changes\n       * Types with owned pointers or custom destructors move by default,\n@@ -54,7 +50,11 @@ Version 0.6 (March 2013)\n       * () has size 0\n       * The name of the main function can be customized using #[main]\n       * The default type of an inferred closure is &fn instead of @fn\n-      * Name resolution continues to be tweaked\n+      * `use` statements may no longer be \"chained\" - they cannot import\n+        identifiers imported by previous `use` statements\n+      * `use` statements are crate relative, importing from the \"top\"\n+        of the crate by default. Paths may be prefixed with `super::`\n+        or `self::` to change the search behavior.\n       * Method visibility is inherited from the implementation declaration\n       * Structural records have been removed\n       * Many more types can be used in static items, including enums\n@@ -78,14 +78,15 @@ Version 0.6 (March 2013)\n       * `std::deque` and `std::smallintmap` reimplemented as owned containers\n       * `core::trie` added as a fast ordered map for integer keys\n       * Set types added to `core::hashmap`, `core::trie` and `std::treemap`\n+      * `Ord` split into `Ord` and `TotalOrd`. `Ord` is still used to\n+        overload the comparison operators, whereas `TotalOrd` is used\n+        by certain container types\n \n-   * Tools\n+   * Other\n       * Replaced the 'cargo' package manager with 'rustpkg'\n       * Added all-purpose 'rust' tool\n       * `rustc --test` now supports benchmarks with the `#[bench]` attribute\n-      * rustc now attempts to offer spelling suggestions\n-\n-   * Misc\n+      * rustc now *attempts* to offer spelling suggestions\n       * Improved support for ARM and Android\n       * Preliminary MIPS backend\n       * Improved foreign function ABI implementation for x86, x86_64"}, {"sha": "f2fe73e501e2db4466bd5ef7db615704ac0c68a1", "filename": "src/libcore/gc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4cb5854d883d275872b16a200a2bfc30c53ccea3/src%2Flibcore%2Fgc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb5854d883d275872b16a200a2bfc30c53ccea3/src%2Flibcore%2Fgc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fgc.rs?ref=4cb5854d883d275872b16a200a2bfc30c53ccea3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[doc(hidden)];\n+\n /*! Precise garbage collector\n \n The precise GC exposes two functions, gc and"}]}