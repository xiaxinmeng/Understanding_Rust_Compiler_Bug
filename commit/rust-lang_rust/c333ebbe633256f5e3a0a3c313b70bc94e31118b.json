{"sha": "c333ebbe633256f5e3a0a3c313b70bc94e31118b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMzNlYmJlNjMzMjU2ZjVlM2EwYTNjMzEzYjcwYmM5NGUzMTExOGI=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-07-01T20:51:48Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-07-01T20:52:22Z"}, "message": "fix RUST_LOG, hopefully for real this time", "tree": {"sha": "312a05a6b80d081f709c0e587deb4d2d7d3d42d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/312a05a6b80d081f709c0e587deb4d2d7d3d42d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c333ebbe633256f5e3a0a3c313b70bc94e31118b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c333ebbe633256f5e3a0a3c313b70bc94e31118b", "html_url": "https://github.com/rust-lang/rust/commit/c333ebbe633256f5e3a0a3c313b70bc94e31118b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c333ebbe633256f5e3a0a3c313b70bc94e31118b/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bff28ec46866bb2980d67a644e4e567b67ccb706", "url": "https://api.github.com/repos/rust-lang/rust/commits/bff28ec46866bb2980d67a644e4e567b67ccb706", "html_url": "https://github.com/rust-lang/rust/commit/bff28ec46866bb2980d67a644e4e567b67ccb706"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "4e16fae187070ee13880b1a8c189cf91c724d409", "filename": "src/librustc/dep_graph/thread.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c333ebbe633256f5e3a0a3c313b70bc94e31118b/src%2Flibrustc%2Fdep_graph%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c333ebbe633256f5e3a0a3c313b70bc94e31118b/src%2Flibrustc%2Fdep_graph%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fthread.rs?ref=c333ebbe633256f5e3a0a3c313b70bc94e31118b", "patch": "@@ -118,8 +118,6 @@ impl DepGraphThreadData {\n     /// the buffer is full, this may swap.)\n     #[inline]\n     pub fn enqueue(&self, message: DepMessage) {\n-        debug!(\"enqueue: {:?} tasks_pushed={}\", message, self.tasks_pushed.get());\n-\n         // Regardless of whether dep graph construction is enabled, we\n         // still want to check that we always have a valid task on the\n         // stack when a read/write/etc event occurs."}, {"sha": "c79bf82b97402c1ce742323a592db215ccef1680", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c333ebbe633256f5e3a0a3c313b70bc94e31118b/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c333ebbe633256f5e3a0a3c313b70bc94e31118b/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=c333ebbe633256f5e3a0a3c313b70bc94e31118b", "patch": "@@ -1351,6 +1351,7 @@ fn my_visit_expr(expr: &hir::Expr,\n \n             rbml_w.start_tag(tag_items_data_item);\n             encode_def_id_and_key(ecx, rbml_w, def_id);\n+            encode_name(rbml_w, syntax::parse::token::intern(\"<closure>\"));\n \n             rbml_w.start_tag(tag_items_closure_ty);\n             write_closure_type(ecx, rbml_w, &ecx.tcx.tables.borrow().closure_tys[&def_id]);"}, {"sha": "ab859b88a85972d55200ba32260199974fa94422", "filename": "src/librustc_trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c333ebbe633256f5e3a0a3c313b70bc94e31118b/src%2Flibrustc_trans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c333ebbe633256f5e3a0a3c313b70bc94e31118b/src%2Flibrustc_trans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmonomorphize.rs?ref=c333ebbe633256f5e3a0a3c313b70bc94e31118b", "patch": "@@ -169,8 +169,7 @@ pub struct Instance<'tcx> {\n \n impl<'tcx> fmt::Display for Instance<'tcx> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        ppaux::parameterized(f, &self.substs, self.def, ppaux::Ns::Value, &[],\n-                             |tcx| Some(tcx.lookup_item_type(self.def).generics))\n+        ppaux::parameterized(f, &self.substs, self.def, ppaux::Ns::Value, &[], |_| None)\n     }\n }\n "}]}