{"sha": "922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMmU2NjY4MjBmZWYyZjVkOWJkN2ZhNDUwYjRhNDVkODVmZGQ4NGE=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2016-04-06T04:24:19Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2016-04-06T04:24:19Z"}, "message": "avoid \"==\" in assert! when one of the values is a bool", "tree": {"sha": "776d4a9606663580bbc2c944b3270b98d2d98d41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/776d4a9606663580bbc2c944b3270b98d2d98d41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "html_url": "https://github.com/rust-lang/rust/commit/922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ded11a58cf2f8037a511a8d340161c59fba9913", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ded11a58cf2f8037a511a8d340161c59fba9913", "html_url": "https://github.com/rust-lang/rust/commit/7ded11a58cf2f8037a511a8d340161c59fba9913"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "42aef3ab3dd7503e22689c45ac4fb7638d873e14", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "patch": "@@ -220,7 +220,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     /// let s: &str = \"Follow the rabbit\";\n     /// let ptr: *const u8 = s.as_ptr();\n-    /// assert!(ptr.is_null() == false);\n+    /// assert!(!ptr.is_null());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n@@ -306,7 +306,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     /// let mut s = [1, 2, 3];\n     /// let ptr: *mut u32 = s.as_mut_ptr();\n-    /// assert!(ptr.is_null() == false);\n+    /// assert!(!ptr.is_null());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]"}, {"sha": "c4d6cb33365d0f90038ce642f916f25b997d024e", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "patch": "@@ -1708,7 +1708,7 @@ mod tests {\n         let tmpdir = tmpdir();\n         let dir = &tmpdir.join(\"fileinfo_false_on_dir\");\n         check!(fs::create_dir(dir));\n-        assert!(dir.is_file() == false);\n+        assert!(!dir.is_file());\n         check!(fs::remove_dir(dir));\n     }\n "}, {"sha": "e78fd0dea292ad4f478218d91a75cca8ea730d63", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "patch": "@@ -1509,7 +1509,7 @@ mod tests {\n \n         assert_eq!(filtered.len(), 1);\n         assert_eq!(filtered[0].desc.name.to_string(), \"1\");\n-        assert!(filtered[0].desc.ignore == false);\n+        assert!(!filtered[0].desc.ignore);\n     }\n \n     #[test]"}, {"sha": "62c7e3e2e4431065f1d282c8340d7c4037489e40", "filename": "src/test/run-pass/specialization/specialization-cross-crate-defaults.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-cross-crate-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-cross-crate-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-cross-crate-defaults.rs?ref=922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "patch": "@@ -26,12 +26,12 @@ impl Foo for LocalOverride {\n }\n \n fn test_foo() {\n-    assert!(0i8.foo() == false);\n-    assert!(0i32.foo() == false);\n-    assert!(0i64.foo() == true);\n+    assert!(!0i8.foo());\n+    assert!(!0i32.foo());\n+    assert!(0i64.foo());\n \n-    assert!(LocalDefault.foo() == false);\n-    assert!(LocalOverride.foo() == true);\n+    assert!(!LocalDefault.foo());\n+    assert!(LocalOverride.foo());\n }\n \n fn test_bar() {"}, {"sha": "9cfc6aabbb4f22b0c6c0f8601fff7c55d0d62951", "filename": "src/test/run-pass/specialization/specialization-default-methods.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922e666820fef2f5d9bd7fa450b4a45d85fdd84a/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-default-methods.rs?ref=922e666820fef2f5d9bd7fa450b4a45d85fdd84a", "patch": "@@ -35,9 +35,9 @@ impl Foo for i64 {\n }\n \n fn test_foo() {\n-    assert!(0i8.foo() == false);\n-    assert!(0i32.foo() == false);\n-    assert!(0i64.foo() == true);\n+    assert!(!0i8.foo());\n+    assert!(!0i32.foo());\n+    assert!(0i64.foo());\n }\n \n // Next, test mixture of explicit `default` and provided methods:"}]}