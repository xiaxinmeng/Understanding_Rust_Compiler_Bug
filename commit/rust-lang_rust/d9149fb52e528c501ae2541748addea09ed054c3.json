{"sha": "d9149fb52e528c501ae2541748addea09ed054c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MTQ5ZmI1MmU1MjhjNTAxYWUyNTQxNzQ4YWRkZWEwOWVkMDU0YzM=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-06-05T06:04:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-05T06:04:22Z"}, "message": "Merge pull request #2741 from csmoe/where_brace\n\nRemove newline in empty impl", "tree": {"sha": "fcb95efb6b24a4047cb0eeadb90e9d51b56ea39a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcb95efb6b24a4047cb0eeadb90e9d51b56ea39a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9149fb52e528c501ae2541748addea09ed054c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbFifmCRBK7hj4Ov3rIwAAdHIIACPVjsO0SI3Eli0kaw0Tufe+\nSvK7PYapC8EEUoU55Qdze/RGz7P7D8UZPVr2+AOZ+U27cZM8g6q978hdOsNz+x+d\nJUQPhkvvrQdZSU1DvR6e7SOiQsAl2U8Zc9ULPvcuIwM47Sl+JO2a3M3F4ueSplyZ\noay5lFxYNqsZY3t3vkcCaTzckMXZ/arC8VSY4jOcS9fJ1YcLZA+/Dw1M7rjGA3cZ\n0IrNhkS/pYOlQBiv9OKO+QawJsqZq/RW0PCiuxCVN0m0RBA0giJx1F224iSZ9Njb\n5ONWtOwitiSmG1oAMiWDb+4SXuvgzKEOr1a7fkJfcguv6Oo0NKsZkiFJ//zeUlo=\n=r1zs\n-----END PGP SIGNATURE-----\n", "payload": "tree fcb95efb6b24a4047cb0eeadb90e9d51b56ea39a\nparent 9f535de503c453abcc24efbae083f15555caf16a\nparent faa41168a96c40e1e3c9134c2bf915e8cebf8833\nauthor Nick Cameron <nrc@ncameron.org> 1528178662 +1200\ncommitter GitHub <noreply@github.com> 1528178662 +1200\n\nMerge pull request #2741 from csmoe/where_brace\n\nRemove newline in empty impl"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9149fb52e528c501ae2541748addea09ed054c3", "html_url": "https://github.com/rust-lang/rust/commit/d9149fb52e528c501ae2541748addea09ed054c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9149fb52e528c501ae2541748addea09ed054c3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f535de503c453abcc24efbae083f15555caf16a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f535de503c453abcc24efbae083f15555caf16a", "html_url": "https://github.com/rust-lang/rust/commit/9f535de503c453abcc24efbae083f15555caf16a"}, {"sha": "faa41168a96c40e1e3c9134c2bf915e8cebf8833", "url": "https://api.github.com/repos/rust-lang/rust/commits/faa41168a96c40e1e3c9134c2bf915e8cebf8833", "html_url": "https://github.com/rust-lang/rust/commit/faa41168a96c40e1e3c9134c2bf915e8cebf8833"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "81e86b72196969958017bc2ab5a5bec8532dd6b8", "filename": "src/items.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d9149fb52e528c501ae2541748addea09ed054c3/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9149fb52e528c501ae2541748addea09ed054c3/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=d9149fb52e528c501ae2541748addea09ed054c3", "patch": "@@ -649,8 +649,20 @@ pub fn format_impl(\n         } else {\n             context.budget(last_line_width(&result))\n         };\n-        let option = WhereClauseOption::snuggled(&ref_and_type);\n-        let where_clause_str = rewrite_where_clause(\n+\n+        let mut option = WhereClauseOption::snuggled(&ref_and_type);\n+        let snippet = context.snippet(item.span);\n+        let open_pos = snippet.find_uncommented(\"{\")? + 1;\n+        if !contains_comment(&snippet[open_pos..])\n+            && items.is_empty()\n+            && generics.where_clause.predicates.len() == 1\n+        {\n+            option.suppress_comma();\n+            option.snuggle();\n+            option.compress_where();\n+        }\n+\n+        let mut where_clause_str = rewrite_where_clause(\n             context,\n             &generics.where_clause,\n             context.config.brace_style(),\n@@ -684,6 +696,12 @@ pub fn format_impl(\n         if is_impl_single_line(context, items, &result, &where_clause_str, item)? {\n             result.push_str(&where_clause_str);\n             if where_clause_str.contains('\\n') || last_line_contains_single_line_comment(&result) {\n+                // if the where_clause contains extra comments AND\n+                // there is only one where clause predicate\n+                // recover the suppressed comma in single line where_clause formatting\n+                if generics.where_clause.predicates.len() == 1 {\n+                    result.push_str(\",\");\n+                }\n                 result.push_str(&format!(\"{}{{{}}}\", &sep, &sep));\n             } else {\n                 result.push_str(\" {}\");\n@@ -2133,6 +2151,18 @@ impl WhereClauseOption {\n             compress_where: false,\n         }\n     }\n+\n+    pub fn suppress_comma(&mut self) {\n+        self.suppress_comma = true\n+    }\n+\n+    pub fn compress_where(&mut self) {\n+        self.compress_where = true\n+    }\n+\n+    pub fn snuggle(&mut self) {\n+        self.snuggle = true\n+    }\n }\n \n fn rewrite_args("}, {"sha": "9de98283b5e5dcd6afb0805f6de98c02ddf80917", "filename": "tests/source/configs/where_single_line/true.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d9149fb52e528c501ae2541748addea09ed054c3/tests%2Fsource%2Fconfigs%2Fwhere_single_line%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9149fb52e528c501ae2541748addea09ed054c3/tests%2Fsource%2Fconfigs%2Fwhere_single_line%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fwhere_single_line%2Ftrue.rs?ref=d9149fb52e528c501ae2541748addea09ed054c3", "patch": "@@ -22,3 +22,5 @@ where\n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T where Ipsum: Eq {\n     // body\n }\n+\n+unsafe impl Sync for Foo where (): Send {}"}, {"sha": "7f816459e3c6e1e7d0779649709a232808de72f2", "filename": "tests/target/configs/where_single_line/true.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d9149fb52e528c501ae2541748addea09ed054c3/tests%2Ftarget%2Fconfigs%2Fwhere_single_line%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9149fb52e528c501ae2541748addea09ed054c3/tests%2Ftarget%2Fconfigs%2Fwhere_single_line%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fwhere_single_line%2Ftrue.rs?ref=d9149fb52e528c501ae2541748addea09ed054c3", "patch": "@@ -26,3 +26,5 @@ fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n where Ipsum: Eq {\n     // body\n }\n+\n+unsafe impl Sync for Foo where (): Send {}"}, {"sha": "3b0cb0a30d61008e0f73fdcb4b602b9a61f3a9e0", "filename": "tests/target/impls.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d9149fb52e528c501ae2541748addea09ed054c3/tests%2Ftarget%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9149fb52e528c501ae2541748addea09ed054c3/tests%2Ftarget%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpls.rs?ref=d9149fb52e528c501ae2541748addea09ed054c3", "patch": "@@ -48,11 +48,7 @@ where\n     }\n }\n \n-impl<T> Foo for Bar<T>\n-where\n-    T: Baz,\n-{\n-}\n+impl<T> Foo for Bar<T> where T: Baz {}\n \n impl<T> Foo for Bar<T>\n where\n@@ -133,11 +129,7 @@ mod m {\n         }\n     }\n \n-    impl<T> PartialEq for S<T>\n-    where\n-        T: PartialEq,\n-    {\n-    }\n+    impl<T> PartialEq for S<T> where T: PartialEq {}\n }\n \n impl<BorrowType, K, V, NodeType, HandleType>"}]}