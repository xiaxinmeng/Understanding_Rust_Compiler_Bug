{"sha": "52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "node_id": "C_kwDOAAsO6NoAKDUyZTIwNjVlZDRkYmExYTY4YTVmODVlOGRlMjEyZTc2ZGRlNzJlN2E", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-16T23:54:54Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-21T02:34:52Z"}, "message": "Revert closure mismatch spans", "tree": {"sha": "4218922debf3671f0d65ab67bb77b9b842fdd3b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4218922debf3671f0d65ab67bb77b9b842fdd3b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "html_url": "https://github.com/rust-lang/rust/commit/52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a1aa3c76eb06bf6eba9c10eaccced92420c2fac", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a1aa3c76eb06bf6eba9c10eaccced92420c2fac", "html_url": "https://github.com/rust-lang/rust/commit/3a1aa3c76eb06bf6eba9c10eaccced92420c2fac"}], "stats": {"total": 227, "additions": 94, "deletions": 133}, "files": [{"sha": "204bb6a532dc395ffcd46d7412ac8911a457e233", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -1630,6 +1630,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         {\n             return;\n         }\n+        // Skip over closure arg mismatch, which has a better heuristic\n+        // to determine what span to point at.\n+        if let traits::FulfillmentErrorCode::CodeSelectionError(\n+            traits::SelectionError::OutputTypeParameterMismatch(_, expected, _),\n+        ) = error.code\n+            && let ty::Closure(..) | ty::Generator(..) = expected.skip_binder().self_ty().kind()\n+        {\n+            return;\n+        }\n \n         let Some(unsubstituted_pred) =\n             self.tcx.predicates_of(def_id).instantiate_identity(self.tcx).predicates.into_iter().nth(idx) else { return; };"}, {"sha": "1a0a5fdf4eb233c5bebdf316be4e738ad7295a6d", "filename": "src/test/ui/anonymous-higher-ranked-lifetime.stderr", "status": "modified", "additions": 44, "deletions": 66, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -1,12 +1,10 @@\n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:2:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:2:5\n    |\n LL |     f1(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'r, 's> fn(&'r (), &'s ()) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -17,14 +15,12 @@ LL | fn f1<F>(_: F) where F: Fn(&(), &()) {}\n    |                         ^^^^^^^^^^^^ required by this bound in `f1`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:3:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:3:5\n    |\n LL |     f2(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'a, 'r> fn(&'a (), &'r ()) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -35,14 +31,12 @@ LL | fn f2<F>(_: F) where F: for<'a> Fn(&'a (), &()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f2`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:4:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:4:5\n    |\n LL |     f3(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'r> fn(&(), &'r ()) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -53,14 +47,12 @@ LL | fn f3<'a, F>(_: F) where F: Fn(&'a (), &()) {}\n    |                             ^^^^^^^^^^^^^^^ required by this bound in `f3`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:5:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:5:5\n    |\n LL |     f4(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'r, 's> fn(&'s (), &'r ()) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -71,14 +63,12 @@ LL | fn f4<F>(_: F) where F: for<'r> Fn(&(), &'r ()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f4`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:6:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:6:5\n    |\n LL |     f5(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'r> fn(&'r (), &'r ()) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -89,14 +79,12 @@ LL | fn f5<F>(_: F) where F: for<'r> Fn(&'r (), &'r ()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f5`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:7:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:7:5\n    |\n LL |     g1(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'r> fn(&'r (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -107,14 +95,12 @@ LL | fn g1<F>(_: F) where F: Fn(&(), Box<dyn Fn(&())>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g1`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:8:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:8:5\n    |\n LL |     g2(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'r> fn(&'r (), for<'r> fn(&'r ())) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -125,14 +111,12 @@ LL | fn g2<F>(_: F) where F: Fn(&(), fn(&())) {}\n    |                         ^^^^^^^^^^^^^^^^ required by this bound in `g2`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:9:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:9:5\n    |\n LL |     g3(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'s> fn(&'s (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -143,14 +127,12 @@ LL | fn g3<F>(_: F) where F: for<'s> Fn(&'s (), Box<dyn Fn(&())>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g3`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:10:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:10:5\n    |\n LL |     g4(|_: (), _: ()| {});\n-   |     -- --------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ -------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'s> fn(&'s (), for<'r> fn(&'r ())) -> _`\n               found closure signature `fn((), ()) -> _`\n@@ -161,14 +143,12 @@ LL | fn g4<F>(_: F) where F: Fn(&(), for<'r> fn(&'r ())) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g4`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:11:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:11:5\n    |\n LL |     h1(|_: (), _: (), _: (), _: ()| {});\n-   |     -- ----------------------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ ---------------------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'r, 's> fn(&'r (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>, &'s (), for<'r, 's> fn(&'r (), &'s ())) -> _`\n               found closure signature `fn((), (), (), ()) -> _`\n@@ -179,14 +159,12 @@ LL | fn h1<F>(_: F) where F: Fn(&(), Box<dyn Fn(&())>, &(), fn(&(), &())) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `h1`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/anonymous-higher-ranked-lifetime.rs:12:8\n+  --> $DIR/anonymous-higher-ranked-lifetime.rs:12:5\n    |\n LL |     h2(|_: (), _: (), _: (), _: ()| {});\n-   |     -- ----------------------------^^^\n-   |     |  |\n-   |     |  expected due to this\n-   |     |  found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^ ---------------------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `for<'t0, 'r> fn(&'r (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>, &'t0 (), for<'r, 's> fn(&'r (), &'s ())) -> _`\n               found closure signature `fn((), (), (), ()) -> _`"}, {"sha": "8dccf929b2bd1fd73727cecaf062d7b485c2c60b", "filename": "src/test/ui/closure-expected-type/expect-infer-var-appearing-twice.stderr", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -1,15 +1,10 @@\n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/expect-infer-var-appearing-twice.rs:14:18\n+  --> $DIR/expect-infer-var-appearing-twice.rs:14:5\n    |\n-LL |       with_closure(|x: u32, y: i32| {\n-   |       ------------ ^---------------\n-   |       |            |\n-   |  _____|____________found signature defined here\n-   | |     |\n-   | |     required by a bound introduced by this call\n-LL | |\n-LL | |     });\n-   | |_____^ expected due to this\n+LL |     with_closure(|x: u32, y: i32| {\n+   |     ^^^^^^^^^^^^ ---------------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `fn(_, _) -> _`\n               found closure signature `fn(u32, i32) -> _`"}, {"sha": "410ea4b0b3439ebd9f1254d6be34a9b6136c427c", "filename": "src/test/ui/mismatched_types/E0631.stderr", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2FE0631.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2FE0631.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0631.stderr?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -1,12 +1,10 @@\n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/E0631.rs:7:9\n+  --> $DIR/E0631.rs:7:5\n    |\n LL |     foo(|_: isize| {});\n-   |     --- ----------^^^\n-   |     |   |\n-   |     |   expected due to this\n-   |     |   found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^^ ---------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `fn(usize) -> _`\n               found closure signature `fn(isize) -> _`\n@@ -17,14 +15,12 @@ LL | fn foo<F: Fn(usize)>(_: F) {}\n    |           ^^^^^^^^^ required by this bound in `foo`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/E0631.rs:8:9\n+  --> $DIR/E0631.rs:8:5\n    |\n LL |     bar(|_: isize| {});\n-   |     --- ----------^^^\n-   |     |   |\n-   |     |   expected due to this\n-   |     |   found signature defined here\n-   |     required by a bound introduced by this call\n+   |     ^^^ ---------- found signature defined here\n+   |     |\n+   |     expected due to this\n    |\n    = note: expected closure signature `fn(usize) -> _`\n               found closure signature `fn(isize) -> _`"}, {"sha": "a6ed22781e95f952fe309bb2941bba8db6e833e4", "filename": "src/test/ui/mismatched_types/closure-arg-count.stderr", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -46,14 +46,12 @@ LL |     [1, 2, 3].sort_by(|tuple, tuple2| panic!());\n    |                       ~~~~~~~~~~~~~~~\n \n error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments\n-  --> $DIR/closure-arg-count.rs:13:7\n+  --> $DIR/closure-arg-count.rs:13:5\n    |\n LL |     f(|| panic!());\n-   |     - --^^^^^^^^^\n-   |     | |\n-   |     | expected closure that takes 1 argument\n-   |     | takes 0 arguments\n-   |     required by a bound introduced by this call\n+   |     ^ -- takes 0 arguments\n+   |     |\n+   |     expected closure that takes 1 argument\n    |\n note: required by a bound in `f`\n   --> $DIR/closure-arg-count.rs:3:9\n@@ -66,14 +64,12 @@ LL |     f(|_| panic!());\n    |       ~~~\n \n error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments\n-  --> $DIR/closure-arg-count.rs:15:9\n+  --> $DIR/closure-arg-count.rs:15:5\n    |\n LL |     f(  move    || panic!());\n-   |     -   ----------^^^^^^^^^\n-   |     |   |\n-   |     |   expected closure that takes 1 argument\n-   |     |   takes 0 arguments\n-   |     required by a bound introduced by this call\n+   |     ^   ---------- takes 0 arguments\n+   |     |\n+   |     expected closure that takes 1 argument\n    |\n note: required by a bound in `f`\n   --> $DIR/closure-arg-count.rs:3:9\n@@ -137,14 +133,12 @@ LL |         F: FnMut(Self::Item) -> B,\n    |            ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `map`\n \n error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 3 distinct arguments\n-  --> $DIR/closure-arg-count.rs:27:57\n+  --> $DIR/closure-arg-count.rs:27:53\n    |\n LL |     let bar = |i, x, y| i;\n    |               --------- takes 3 distinct arguments\n LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(bar);\n-   |                                                     --- ^^^ expected closure that takes a single 2-tuple as argument\n-   |                                                     |\n-   |                                                     required by a bound introduced by this call\n+   |                                                     ^^^ expected closure that takes a single 2-tuple as argument\n    |\n note: required by a bound in `map`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL"}, {"sha": "71469bfec2d393a5419740b319aef973033d2c56", "filename": "src/test/ui/mismatched_types/closure-arg-type-mismatch.stderr", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -1,12 +1,10 @@\n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/closure-arg-type-mismatch.rs:3:18\n+  --> $DIR/closure-arg-type-mismatch.rs:3:14\n    |\n LL |     a.iter().map(|_: (u32, u32)| 45);\n-   |              --- ---------------^^^\n-   |              |   |\n-   |              |   expected due to this\n-   |              |   found signature defined here\n-   |              required by a bound introduced by this call\n+   |              ^^^ --------------- found signature defined here\n+   |              |\n+   |              expected due to this\n    |\n    = note: expected closure signature `fn(&(u32, u32)) -> _`\n               found closure signature `fn((u32, u32)) -> _`\n@@ -17,14 +15,12 @@ LL |         F: FnMut(Self::Item) -> B,\n    |            ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `map`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/closure-arg-type-mismatch.rs:4:18\n+  --> $DIR/closure-arg-type-mismatch.rs:4:14\n    |\n LL |     a.iter().map(|_: &(u16, u16)| 45);\n-   |              --- ----------------^^^\n-   |              |   |\n-   |              |   expected due to this\n-   |              |   found signature defined here\n-   |              required by a bound introduced by this call\n+   |              ^^^ ---------------- found signature defined here\n+   |              |\n+   |              expected due to this\n    |\n    = note: expected closure signature `fn(&(u32, u32)) -> _`\n               found closure signature `for<'r> fn(&'r (u16, u16)) -> _`\n@@ -35,14 +31,12 @@ LL |         F: FnMut(Self::Item) -> B,\n    |            ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `map`\n \n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/closure-arg-type-mismatch.rs:5:18\n+  --> $DIR/closure-arg-type-mismatch.rs:5:14\n    |\n LL |     a.iter().map(|_: (u16, u16)| 45);\n-   |              --- ---------------^^^\n-   |              |   |\n-   |              |   expected due to this\n-   |              |   found signature defined here\n-   |              required by a bound introduced by this call\n+   |              ^^^ --------------- found signature defined here\n+   |              |\n+   |              expected due to this\n    |\n    = note: expected closure signature `fn(&(u32, u32)) -> _`\n               found closure signature `fn((u16, u16)) -> _`"}, {"sha": "b11ea97d160be12b8866bf99577bc1f06ca2efec", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -1,12 +1,10 @@\n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/issue-36053-2.rs:7:39\n+  --> $DIR/issue-36053-2.rs:7:32\n    |\n LL |     once::<&str>(\"str\").fuse().filter(|a: &str| true).count();\n-   |                                ------ ---------^^^^^\n-   |                                |      |\n-   |                                |      expected due to this\n-   |                                |      found signature defined here\n-   |                                required by a bound introduced by this call\n+   |                                ^^^^^^ --------- found signature defined here\n+   |                                |\n+   |                                expected due to this\n    |\n    = note: expected closure signature `for<'r> fn(&'r &str) -> _`\n               found closure signature `for<'r> fn(&'r str) -> _`"}, {"sha": "0d64ded215ad4f99088de8b5fd30ef1b6262b429", "filename": "src/test/ui/mismatched_types/unboxed-closures-vtable-mismatch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.rs?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -17,6 +17,5 @@ pub fn main() {\n     //~^ ERROR type mismatch\n     //~| NOTE expected due to this\n     //~| NOTE expected closure signature `fn(isize, _) -> _`\n-    //~| NOTE required by a bound introduced by this call\n     println!(\"{}\", z);\n }"}, {"sha": "0b0d9f10786f3cb42edaad063d961c5dd757350f", "filename": "src/test/ui/mismatched_types/unboxed-closures-vtable-mismatch.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52e2065ed4dba1a68a5f85e8de212e76dde72e7a/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr?ref=52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "patch": "@@ -1,13 +1,11 @@\n error[E0631]: type mismatch in closure arguments\n-  --> $DIR/unboxed-closures-vtable-mismatch.rs:16:24\n+  --> $DIR/unboxed-closures-vtable-mismatch.rs:16:13\n    |\n LL |     let f = to_fn_mut(|x: usize, y: isize| -> isize { (x as isize) + y });\n    |                       ----------------------------- found signature defined here\n LL |\n LL |     let z = call_it(3, f);\n-   |             -------    ^ expected due to this\n-   |             |\n-   |             required by a bound introduced by this call\n+   |             ^^^^^^^ expected due to this\n    |\n    = note: expected closure signature `fn(isize, _) -> _`\n               found closure signature `fn(usize, _) -> _`"}]}