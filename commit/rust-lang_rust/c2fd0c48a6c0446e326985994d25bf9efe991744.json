{"sha": "c2fd0c48a6c0446e326985994d25bf9efe991744", "node_id": "C_kwDOAAsO6NoAKGMyZmQwYzQ4YTZjMDQ0NmUzMjY5ODU5OTRkMjViZjllZmU5OTE3NDQ", "commit": {"author": {"name": "Pawe\u0142 Palenica", "email": "pawelpalenica11@gmail.com", "date": "2021-10-21T06:39:25Z"}, "committer": {"name": "Pawe\u0142 Palenica", "email": "pawelpalenica11@gmail.com", "date": "2021-10-21T06:39:25Z"}, "message": "cleanup qualify_path", "tree": {"sha": "9d4db45675165a258417be5bf8d4ce7efe60453f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d4db45675165a258417be5bf8d4ce7efe60453f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2fd0c48a6c0446e326985994d25bf9efe991744", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2fd0c48a6c0446e326985994d25bf9efe991744", "html_url": "https://github.com/rust-lang/rust/commit/c2fd0c48a6c0446e326985994d25bf9efe991744", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2fd0c48a6c0446e326985994d25bf9efe991744/comments", "author": {"login": "qepasa", "id": 18561325, "node_id": "MDQ6VXNlcjE4NTYxMzI1", "avatar_url": "https://avatars.githubusercontent.com/u/18561325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qepasa", "html_url": "https://github.com/qepasa", "followers_url": "https://api.github.com/users/qepasa/followers", "following_url": "https://api.github.com/users/qepasa/following{/other_user}", "gists_url": "https://api.github.com/users/qepasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/qepasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qepasa/subscriptions", "organizations_url": "https://api.github.com/users/qepasa/orgs", "repos_url": "https://api.github.com/users/qepasa/repos", "events_url": "https://api.github.com/users/qepasa/events{/privacy}", "received_events_url": "https://api.github.com/users/qepasa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qepasa", "id": 18561325, "node_id": "MDQ6VXNlcjE4NTYxMzI1", "avatar_url": "https://avatars.githubusercontent.com/u/18561325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qepasa", "html_url": "https://github.com/qepasa", "followers_url": "https://api.github.com/users/qepasa/followers", "following_url": "https://api.github.com/users/qepasa/following{/other_user}", "gists_url": "https://api.github.com/users/qepasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/qepasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qepasa/subscriptions", "organizations_url": "https://api.github.com/users/qepasa/orgs", "repos_url": "https://api.github.com/users/qepasa/repos", "events_url": "https://api.github.com/users/qepasa/events{/privacy}", "received_events_url": "https://api.github.com/users/qepasa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3d92052ceba67cefd4e9136320f020f58ae11e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3d92052ceba67cefd4e9136320f020f58ae11e6", "html_url": "https://github.com/rust-lang/rust/commit/b3d92052ceba67cefd4e9136320f020f58ae11e6"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "1f2a115b2967d50f35d8ff8410eb397ad9a9be20", "filename": "crates/ide_assists/src/handlers/qualify_path.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2fd0c48a6c0446e326985994d25bf9efe991744/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fqualify_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2fd0c48a6c0446e326985994d25bf9efe991744/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fqualify_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fqualify_path.rs?ref=c2fd0c48a6c0446e326985994d25bf9efe991744", "patch": "@@ -37,7 +37,6 @@ use crate::{\n // ```\n pub(crate) fn qualify_path(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let (import_assets, syntax_under_caret) = find_importable_node(ctx)?;\n-\n     let mut proposed_imports = import_assets.search_for_relative_paths(&ctx.sema);\n     if proposed_imports.is_empty() {\n         return None;\n@@ -92,7 +91,6 @@ pub(crate) fn qualify_path(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n     }\n     Some(())\n }\n-#[derive(Debug)]\n pub(crate) enum QualifyCandidate<'db> {\n     QualifierStart(ast::PathSegment, Option<ast::GenericArgList>),\n     UnqualifiedName(Option<ast::GenericArgList>),"}]}