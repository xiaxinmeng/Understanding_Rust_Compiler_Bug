{"sha": "7312611207b8f917f1ea9ed759c684d5ca817bfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMTI2MTEyMDdiOGY5MTdmMWVhOWVkNzU5YzY4NGQ1Y2E4MTdiZmU=", "commit": {"author": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-15T22:35:43Z"}, "committer": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-15T22:37:02Z"}, "message": "Add check if ty has_escaping_bound_vars in zero_sized_map_values lint", "tree": {"sha": "8116609e20c0ff6544c22f94f858cbc670d2fd32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8116609e20c0ff6544c22f94f858cbc670d2fd32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7312611207b8f917f1ea9ed759c684d5ca817bfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7312611207b8f917f1ea9ed759c684d5ca817bfe", "html_url": "https://github.com/rust-lang/rust/commit/7312611207b8f917f1ea9ed759c684d5ca817bfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7312611207b8f917f1ea9ed759c684d5ca817bfe/comments", "author": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78ffcd9959cc81d1328fcafb996dcc7cd9b5f1ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/78ffcd9959cc81d1328fcafb996dcc7cd9b5f1ac", "html_url": "https://github.com/rust-lang/rust/commit/78ffcd9959cc81d1328fcafb996dcc7cd9b5f1ac"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "053bbc9aea67433ddf6c83d1cecf141a319b946c", "filename": "clippy_lints/src/zero_sized_map_values.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7312611207b8f917f1ea9ed759c684d5ca817bfe/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7312611207b8f917f1ea9ed759c684d5ca817bfe/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs?ref=7312611207b8f917f1ea9ed759c684d5ca817bfe", "patch": "@@ -4,7 +4,7 @@ use clippy_utils::ty::{is_normalizable, is_type_diagnostic_item, match_type};\n use if_chain::if_chain;\n use rustc_hir::{self as hir, HirId, ItemKind, Node};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::{Adt, Ty};\n+use rustc_middle::ty::{Adt, Ty, TypeFoldable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n use rustc_target::abi::LayoutOf as _;\n@@ -52,6 +52,9 @@ impl LateLintPass<'_> for ZeroSizedMapValues {\n             if is_type_diagnostic_item(cx, ty, sym::hashmap_type) || match_type(cx, ty, &paths::BTREEMAP);\n             if let Adt(_, substs) = ty.kind();\n             let ty = substs.type_at(1);\n+            // Fixes https://github.com/rust-lang/rust-clippy/issues/7447 because of\n+            // https://github.com/rust-lang/rust/blob/master/compiler/rustc_middle/src/ty/sty.rs#L968\n+            if !ty.has_escaping_bound_vars();\n             // Do this to prevent `layout_of` crashing, being unable to fully normalize `ty`.\n             if is_normalizable(cx, cx.param_env, ty);\n             if let Ok(layout) = cx.layout_of(ty);"}, {"sha": "fdb77f322579f27983782c571b5902f54a5aded7", "filename": "tests/ui/issue-7447.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7312611207b8f917f1ea9ed759c684d5ca817bfe/tests%2Fui%2Fissue-7447.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7312611207b8f917f1ea9ed759c684d5ca817bfe/tests%2Fui%2Fissue-7447.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue-7447.rs?ref=7312611207b8f917f1ea9ed759c684d5ca817bfe", "patch": "@@ -0,0 +1,25 @@\n+use std::{borrow::Cow, collections::BTreeMap, marker::PhantomData, sync::Arc};\n+\n+fn byte_view<'a>(s: &'a ByteView<'_>) -> BTreeMap<&'a str, ByteView<'a>> {\n+    panic!()\n+}\n+\n+fn group_entries(s: &()) -> BTreeMap<Cow<'_, str>, Vec<Cow<'_, str>>> {\n+    todo!()\n+}\n+\n+struct Mmap;\n+\n+enum ByteViewBacking<'a> {\n+    Buf(Cow<'a, [u8]>),\n+    Mmap(Mmap),\n+}\n+\n+pub struct ByteView<'a> {\n+    backing: Arc<ByteViewBacking<'a>>,\n+}\n+\n+fn main() {\n+    byte_view(panic!());\n+    group_entries(panic!());\n+}"}]}