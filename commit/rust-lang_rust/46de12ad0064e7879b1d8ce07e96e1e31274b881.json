{"sha": "46de12ad0064e7879b1d8ce07e96e1e31274b881", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZGUxMmFkMDA2NGU3ODc5YjFkOGNlMDdlOTZlMWUzMTI3NGI4ODE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-22T15:36:57Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-03T11:10:58Z"}, "message": "Switch to eval_const_expr_partial in `trans::consts`.\n\nHowever, I left the ICEs rather than switching to nicer error\nreporting there; these cases *should* be detected prior to hitting\ntrans, and thus ICE'ing here is appropriate.\n\n(So why switch to `eval_const_expr_partial`? Because I want to try to\neliminate all uses of `eval_const_expr` entirely.)", "tree": {"sha": "a4225b05ae145e113579565a06b551069edc48ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4225b05ae145e113579565a06b551069edc48ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46de12ad0064e7879b1d8ce07e96e1e31274b881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46de12ad0064e7879b1d8ce07e96e1e31274b881", "html_url": "https://github.com/rust-lang/rust/commit/46de12ad0064e7879b1d8ce07e96e1e31274b881", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46de12ad0064e7879b1d8ce07e96e1e31274b881/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d950bd37d9f4ef46798b79d38d9d91927bb0cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d950bd37d9f4ef46798b79d38d9d91927bb0cf4", "html_url": "https://github.com/rust-lang/rust/commit/5d950bd37d9f4ef46798b79d38d9d91927bb0cf4"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a39f5d42b555f470adbc4fcd0a872c0dac3f46ea", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/46de12ad0064e7879b1d8ce07e96e1e31274b881/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46de12ad0064e7879b1d8ce07e96e1e31274b881/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=46de12ad0064e7879b1d8ce07e96e1e31274b881", "patch": "@@ -462,9 +462,9 @@ fn const_expr_unadjusted<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n \n           ast::ExprIndex(ref base, ref index) => {\n               let (bv, bt) = const_expr(cx, &**base, param_substs);\n-              let iv = match const_eval::eval_const_expr(cx.tcx(), &**index) {\n-                  const_eval::const_int(i) => i as u64,\n-                  const_eval::const_uint(u) => u,\n+              let iv = match const_eval::eval_const_expr_partial(cx.tcx(), &**index, None) {\n+                  Ok(const_eval::const_int(i)) => i as u64,\n+                  Ok(const_eval::const_uint(u)) => u,\n                   _ => cx.sess().span_bug(index.span,\n                                           \"index is not an integer-constant expression\")\n               };\n@@ -650,9 +650,9 @@ fn const_expr_unadjusted<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n           ast::ExprRepeat(ref elem, ref count) => {\n             let unit_ty = ty::sequence_element_type(cx.tcx(), ety);\n             let llunitty = type_of::type_of(cx, unit_ty);\n-            let n = match const_eval::eval_const_expr(cx.tcx(), &**count) {\n-                const_eval::const_int(i)  => i as uint,\n-                const_eval::const_uint(i) => i as uint,\n+            let n = match const_eval::eval_const_expr_partial(cx.tcx(), &**count, None) {\n+                Ok(const_eval::const_int(i))  => i as uint,\n+                Ok(const_eval::const_uint(i)) => i as uint,\n                 _ => cx.sess().span_bug(count.span, \"count must be integral const expression.\")\n             };\n             let unit_val = const_expr(cx, &**elem, param_substs).0;"}]}