{"sha": "77f9aca2a3e30eb430ba5a506261ff126c2d3077", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZjlhY2EyYTNlMzBlYjQzMGJhNWE1MDYyNjFmZjEyNmMyZDMwNzc=", "commit": {"author": {"name": "John Renner", "email": "john@jrenner.net", "date": "2018-08-01T19:33:10Z"}, "committer": {"name": "John Renner", "email": "john@jrenner.net", "date": "2018-08-01T19:33:10Z"}, "message": "Use the correct allow", "tree": {"sha": "80c2b3db385e8f7e6e6499f49cd8932c2cd7eba7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80c2b3db385e8f7e6e6499f49cd8932c2cd7eba7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77f9aca2a3e30eb430ba5a506261ff126c2d3077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77f9aca2a3e30eb430ba5a506261ff126c2d3077", "html_url": "https://github.com/rust-lang/rust/commit/77f9aca2a3e30eb430ba5a506261ff126c2d3077", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77f9aca2a3e30eb430ba5a506261ff126c2d3077/comments", "author": {"login": "djrenren", "id": 634666, "node_id": "MDQ6VXNlcjYzNDY2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/634666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djrenren", "html_url": "https://github.com/djrenren", "followers_url": "https://api.github.com/users/djrenren/followers", "following_url": "https://api.github.com/users/djrenren/following{/other_user}", "gists_url": "https://api.github.com/users/djrenren/gists{/gist_id}", "starred_url": "https://api.github.com/users/djrenren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djrenren/subscriptions", "organizations_url": "https://api.github.com/users/djrenren/orgs", "repos_url": "https://api.github.com/users/djrenren/repos", "events_url": "https://api.github.com/users/djrenren/events{/privacy}", "received_events_url": "https://api.github.com/users/djrenren/received_events", "type": "User", "site_admin": false}, "committer": {"login": "djrenren", "id": 634666, "node_id": "MDQ6VXNlcjYzNDY2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/634666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djrenren", "html_url": "https://github.com/djrenren", "followers_url": "https://api.github.com/users/djrenren/followers", "following_url": "https://api.github.com/users/djrenren/following{/other_user}", "gists_url": "https://api.github.com/users/djrenren/gists{/gist_id}", "starred_url": "https://api.github.com/users/djrenren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djrenren/subscriptions", "organizations_url": "https://api.github.com/users/djrenren/orgs", "repos_url": "https://api.github.com/users/djrenren/repos", "events_url": "https://api.github.com/users/djrenren/events{/privacy}", "received_events_url": "https://api.github.com/users/djrenren/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af7ae2f278cb5f5b2d054d15dc36a39178a48b69", "url": "https://api.github.com/repos/rust-lang/rust/commits/af7ae2f278cb5f5b2d054d15dc36a39178a48b69", "html_url": "https://github.com/rust-lang/rust/commit/af7ae2f278cb5f5b2d054d15dc36a39178a48b69"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "7a9422ef53d58d06802b83e433c65edfacb7f107", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77f9aca2a3e30eb430ba5a506261ff126c2d3077/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f9aca2a3e30eb430ba5a506261ff126c2d3077/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=77f9aca2a3e30eb430ba5a506261ff126c2d3077", "patch": "@@ -1376,7 +1376,7 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n             // #[test] fn foo() {}\n             // becomes:\n             // #[test] pub fn foo_gensym(){}\n-            // #[allow(dead_code)]\n+            // #[allow(unused)]\n             // use foo_gensym as foo;\n             ast::ItemKind::Fn(..) if self.cx.ecfg.should_test => {\n                 if self.tests_nameable && item.attrs.iter().any(|attr| is_test_or_bench(attr)) {\n@@ -1398,12 +1398,12 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n                         self.cx.path(item.ident.span,\n                             vec![keywords::SelfValue.ident(), item.ident]));\n \n-                    // #[allow(dead_code)] because the test function probably isn't being referenced\n+                    // #[allow(unused)] because the test function probably isn't being referenced\n                     use_item = use_item.map(|mut ui| {\n                         ui.attrs.push(\n                             self.cx.attribute(DUMMY_SP, attr::mk_list_item(DUMMY_SP,\n                                 Ident::from_str(\"allow\"), vec![\n-                                    attr::mk_nested_word_item(Ident::from_str(\"dead_code\"))\n+                                    attr::mk_nested_word_item(Ident::from_str(\"unused\"))\n                                 ]\n                             ))\n                         );"}]}