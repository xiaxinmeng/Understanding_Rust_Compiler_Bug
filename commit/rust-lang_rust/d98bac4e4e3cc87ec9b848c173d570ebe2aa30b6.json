{"sha": "d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5OGJhYzRlNGUzY2M4N2VjOWI4NDhjMTczZDU3MGViZTJhYTMwYjY=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-08-04T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-09-04T21:16:53Z"}, "message": "Add tests for overflow in Vec::drain", "tree": {"sha": "fe5a0c91c107c0d3bd9b4e0e617a770b50466de5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe5a0c91c107c0d3bd9b4e0e617a770b50466de5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6", "html_url": "https://github.com/rust-lang/rust/commit/d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b54386ab7a9da8a4f22db3a35a9ec7b0f2b98b6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b54386ab7a9da8a4f22db3a35a9ec7b0f2b98b6c", "html_url": "https://github.com/rust-lang/rust/commit/b54386ab7a9da8a4f22db3a35a9ec7b0f2b98b6c"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "8abebd940d20fcf1527726031c73a01decea19c9", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6", "patch": "@@ -3,6 +3,7 @@ use std::collections::TryReserveError::*;\n use std::fmt::Debug;\n use std::iter::InPlaceIterable;\n use std::mem::size_of;\n+use std::ops::Bound::*;\n use std::panic::{catch_unwind, AssertUnwindSafe};\n use std::rc::Rc;\n use std::vec::{Drain, IntoIter};\n@@ -566,13 +567,37 @@ fn test_drain_max_vec_size() {\n     assert_eq!(v.len(), usize::MAX - 1);\n }\n \n+#[test]\n+#[should_panic]\n+fn test_drain_index_overflow() {\n+    let mut v = Vec::<()>::with_capacity(usize::MAX);\n+    unsafe {\n+        v.set_len(usize::MAX);\n+    }\n+    v.drain(0..=usize::MAX);\n+}\n+\n #[test]\n #[should_panic]\n fn test_drain_inclusive_out_of_bounds() {\n     let mut v = vec![1, 2, 3, 4, 5];\n     v.drain(5..=5);\n }\n \n+#[test]\n+#[should_panic]\n+fn test_drain_start_overflow() {\n+    let mut v = vec![1, 2, 3];\n+    v.drain((Excluded(usize::MAX), Included(0)));\n+}\n+\n+#[test]\n+#[should_panic]\n+fn test_drain_end_overflow() {\n+    let mut v = vec![1, 2, 3];\n+    v.drain((Included(0), Included(usize::MAX)));\n+}\n+\n #[test]\n fn test_drain_leak() {\n     static mut DROPS: i32 = 0;"}]}