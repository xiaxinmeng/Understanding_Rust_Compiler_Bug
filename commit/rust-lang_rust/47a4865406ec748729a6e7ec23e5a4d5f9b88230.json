{"sha": "47a4865406ec748729a6e7ec23e5a4d5f9b88230", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YTQ4NjU0MDZlYzc0ODcyOWE2ZTdlYzIzZTVhNGQ1ZjliODgyMzA=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2021-04-10T13:30:51Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2021-04-10T13:30:51Z"}, "message": "Fix dogfood", "tree": {"sha": "3f75e7ff686f81e823eccab7590dd4deaa0e2529", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f75e7ff686f81e823eccab7590dd4deaa0e2529"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47a4865406ec748729a6e7ec23e5a4d5f9b88230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47a4865406ec748729a6e7ec23e5a4d5f9b88230", "html_url": "https://github.com/rust-lang/rust/commit/47a4865406ec748729a6e7ec23e5a4d5f9b88230", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47a4865406ec748729a6e7ec23e5a4d5f9b88230/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b9331b49dd86cbc1ec655f6a6f5f9d74ca8d901", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b9331b49dd86cbc1ec655f6a6f5f9d74ca8d901", "html_url": "https://github.com/rust-lang/rust/commit/8b9331b49dd86cbc1ec655f6a6f5f9d74ca8d901"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "51581b75ce3f2367f46cf54716c767d85e93d14d", "filename": "clippy_lints/src/tabs_in_doc_comments.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/47a4865406ec748729a6e7ec23e5a4d5f9b88230/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47a4865406ec748729a6e7ec23e5a4d5f9b88230/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs?ref=47a4865406ec748729a6e7ec23e5a4d5f9b88230", "patch": "@@ -106,7 +106,7 @@ fn get_chunks_of_tabs(the_str: &str) -> Vec<(u32, u32)> {\n \n     let char_indices: Vec<_> = the_str.char_indices().collect();\n \n-    if let &[(_, '\\t')] = &char_indices.as_slice() {\n+    if let [(_, '\\t')] = char_indices.as_slice() {\n         return vec![(0, 1)];\n     }\n \n@@ -121,12 +121,12 @@ fn get_chunks_of_tabs(the_str: &str) -> Vec<(u32, u32)> {\n                 // as ['\\t', '\\t'] is excluded, this has to be a start of a tab group,\n                 // set indices accordingly\n                 is_active = true;\n-                current_start = *index_b as u32;\n+                current_start = u32::try_from(*index_b).unwrap();\n             },\n             [(_, '\\t'), (index_b, _)] => {\n                 // this now has to be an end of the group, hence we have to push a new tuple\n                 is_active = false;\n-                spans.push((current_start, *index_b as u32));\n+                spans.push((current_start, u32::try_from(*index_b).unwrap()));\n             },\n             _ => {},\n         }\n@@ -149,7 +149,7 @@ mod tests_for_get_chunks_of_tabs {\n \n     #[test]\n     fn test_unicode_han_string() {\n-        let res = get_chunks_of_tabs(\" \u4f4d\\t\");\n+        let res = get_chunks_of_tabs(\" \\u{4f4d}\\t\");\n \n         assert_eq!(res, vec![(4, 5)]);\n     }"}]}