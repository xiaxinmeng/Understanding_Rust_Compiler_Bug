{"sha": "e9224b37968f8bf56c0bbac206312ef84dad3b74", "node_id": "C_kwDOAAsO6NoAKGU5MjI0YjM3OTY4ZjhiZjU2YzBiYmFjMjA2MzEyZWY4NGRhZDNiNzQ", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-09-27T21:12:52Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-09-27T21:12:52Z"}, "message": "Add newline", "tree": {"sha": "3d70ec41852d4694330a03c0259d8684eff1cc1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d70ec41852d4694330a03c0259d8684eff1cc1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9224b37968f8bf56c0bbac206312ef84dad3b74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9224b37968f8bf56c0bbac206312ef84dad3b74", "html_url": "https://github.com/rust-lang/rust/commit/e9224b37968f8bf56c0bbac206312ef84dad3b74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9224b37968f8bf56c0bbac206312ef84dad3b74/comments", "author": {}, "committer": {}, "parents": [{"sha": "f3ac328d584b83bb7f0b4faa0f7a5699151b3ce9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ac328d584b83bb7f0b4faa0f7a5699151b3ce9", "html_url": "https://github.com/rust-lang/rust/commit/f3ac328d584b83bb7f0b4faa0f7a5699151b3ce9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "811b959b8c04d24299a6ee3298c577314086655c", "filename": "src/test/ui/suggestions/inner_type.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9224b37968f8bf56c0bbac206312ef84dad3b74/src%2Ftest%2Fui%2Fsuggestions%2Finner_type.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e9224b37968f8bf56c0bbac206312ef84dad3b74/src%2Ftest%2Fui%2Fsuggestions%2Finner_type.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Finner_type.fixed?ref=e9224b37968f8bf56c0bbac206312ef84dad3b74", "patch": "@@ -37,4 +37,4 @@ fn main() {\n     another_item.write().unwrap().some_mutable_method();\n     //~^ ERROR no method named `some_mutable_method` found for struct `RwLock` in the current scope [E0599]\n     //~| HELP use `.write()` to mutably borrow the `Struct<u32>`, blocking the current thread until it can be acquired\n-}\n\\ No newline at end of file\n+}"}, {"sha": "96c797a6d81d7432dbd56b159ee1574056221172", "filename": "src/test/ui/suggestions/inner_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9224b37968f8bf56c0bbac206312ef84dad3b74/src%2Ftest%2Fui%2Fsuggestions%2Finner_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9224b37968f8bf56c0bbac206312ef84dad3b74/src%2Ftest%2Fui%2Fsuggestions%2Finner_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Finner_type.rs?ref=e9224b37968f8bf56c0bbac206312ef84dad3b74", "patch": "@@ -37,4 +37,4 @@ fn main() {\n     another_item.some_mutable_method();\n     //~^ ERROR no method named `some_mutable_method` found for struct `RwLock` in the current scope [E0599]\n     //~| HELP use `.write()` to mutably borrow the `Struct<u32>`, blocking the current thread until it can be acquired\n-}\n\\ No newline at end of file\n+}"}, {"sha": "c56ea7c030d8e1b685dd34df73e7ddf95e9569cc", "filename": "src/test/ui/suggestions/inner_type2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9224b37968f8bf56c0bbac206312ef84dad3b74/src%2Ftest%2Fui%2Fsuggestions%2Finner_type2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9224b37968f8bf56c0bbac206312ef84dad3b74/src%2Ftest%2Fui%2Fsuggestions%2Finner_type2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Finner_type2.rs?ref=e9224b37968f8bf56c0bbac206312ef84dad3b74", "patch": "@@ -23,4 +23,4 @@ fn main() {\n     item.method();\n     //~^ ERROR no method named `method` found for union `MaybeUninit` in the current scope [E0599]\n     //~| HELP if this `MaybeUninit::<Struct<u32>>` has been initialized, use one of the `assume_init` methods to access the inner value\n-}\n\\ No newline at end of file\n+}"}]}