{"sha": "939c69c71f8583e37f536a0c6da75c31bc878383", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzOWM2OWM3MWY4NTgzZTM3ZjUzNmEwYzZkYTc1YzMxYmM4NzgzODM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-12-07T23:13:23Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-03-15T07:26:13Z"}, "message": "rustc: use define_print! to implement fmt::{Display,Debug} for Kind.", "tree": {"sha": "8ba7ab558cdda5e3370d94d6f76324377b62cecd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ba7ab558cdda5e3370d94d6f76324377b62cecd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/939c69c71f8583e37f536a0c6da75c31bc878383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/939c69c71f8583e37f536a0c6da75c31bc878383", "html_url": "https://github.com/rust-lang/rust/commit/939c69c71f8583e37f536a0c6da75c31bc878383", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/939c69c71f8583e37f536a0c6da75c31bc878383/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb525b0916e0b228000a6d3ddfb57979cd5342f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb525b0916e0b228000a6d3ddfb57979cd5342f6", "html_url": "https://github.com/rust-lang/rust/commit/eb525b0916e0b228000a6d3ddfb57979cd5342f6"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "973f7f15f84ca4e7ff0e9a2852816dc74f3238e1", "filename": "src/librustc/ty/subst.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/939c69c71f8583e37f536a0c6da75c31bc878383/src%2Flibrustc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939c69c71f8583e37f536a0c6da75c31bc878383/src%2Flibrustc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsubst.rs?ref=939c69c71f8583e37f536a0c6da75c31bc878383", "patch": "@@ -13,7 +13,6 @@ use rustc_macros::HashStable;\n \n use core::intrinsics;\n use std::cmp::Ordering;\n-use std::fmt;\n use std::marker::PhantomData;\n use std::mem;\n use std::num::NonZeroUsize;\n@@ -115,26 +114,8 @@ impl<'tcx> Kind<'tcx> {\n     }\n }\n \n-impl<'tcx> fmt::Debug for Kind<'tcx> {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        match self.unpack() {\n-            UnpackedKind::Lifetime(lt) => write!(f, \"{:?}\", lt),\n-            UnpackedKind::Type(ty) => write!(f, \"{:?}\", ty),\n             UnpackedKind::Const(ct) => write!(f, \"{:?}\", ct),\n-        }\n-    }\n-}\n-\n-impl<'tcx> fmt::Display for Kind<'tcx> {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        match self.unpack() {\n-            UnpackedKind::Lifetime(lt) => write!(f, \"{}\", lt),\n-            UnpackedKind::Type(ty) => write!(f, \"{}\", ty),\n             UnpackedKind::Const(ct) => write!(f, \"{}\", ct),\n-        }\n-    }\n-}\n-\n impl<'a, 'tcx> Lift<'tcx> for Kind<'a> {\n     type Lifted = Kind<'tcx>;\n "}, {"sha": "c2b2cf4e62f9a2d26d5e2357126a8f58b67d39fa", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/939c69c71f8583e37f536a0c6da75c31bc878383/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939c69c71f8583e37f536a0c6da75c31bc878383/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=939c69c71f8583e37f536a0c6da75c31bc878383", "patch": "@@ -1,7 +1,7 @@\n use crate::hir::def_id::DefId;\n use crate::hir::map::definitions::DefPathData;\n use crate::middle::region;\n-use crate::ty::subst::{self, Subst, SubstsRef};\n+use crate::ty::subst::{self, Kind, Subst, SubstsRef, UnpackedKind};\n use crate::ty::{BrAnon, BrEnv, BrFresh, BrNamed};\n use crate::ty::{Bool, Char, Adt};\n use crate::ty::{Error, Str, Array, Slice, Float, FnDef, FnPtr};\n@@ -1535,3 +1535,20 @@ define_print! {\n         }\n     }\n }\n+\n+define_print! {\n+    ('tcx) Kind<'tcx>, (self, f, cx) {\n+        display {\n+            match self.unpack() {\n+                UnpackedKind::Lifetime(lt) => print!(f, cx, print(lt)),\n+                UnpackedKind::Type(ty) => print!(f, cx, print(ty)),\n+            }\n+        }\n+        debug {\n+            match self.unpack() {\n+                UnpackedKind::Lifetime(lt) => print!(f, cx, print(lt)),\n+                UnpackedKind::Type(ty) => print!(f, cx, print(ty)),\n+            }\n+        }\n+    }\n+}"}]}