{"sha": "42cd820c62c531f20d763281c7cc2bdaa1e0a89a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyY2Q4MjBjNjJjNTMxZjIwZDc2MzI4MWM3Y2MyYmRhYTFlMGE4OWE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-07T19:51:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-11T21:55:23Z"}, "message": "ppaux -- add Repr implementations", "tree": {"sha": "9a4415d3393c5ab79e590215a7bca96c060f86a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a4415d3393c5ab79e590215a7bca96c060f86a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42cd820c62c531f20d763281c7cc2bdaa1e0a89a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42cd820c62c531f20d763281c7cc2bdaa1e0a89a", "html_url": "https://github.com/rust-lang/rust/commit/42cd820c62c531f20d763281c7cc2bdaa1e0a89a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42cd820c62c531f20d763281c7cc2bdaa1e0a89a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95c53c049c9ced13c325c9aade22affbf5d97fa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/95c53c049c9ced13c325c9aade22affbf5d97fa3", "html_url": "https://github.com/rust-lang/rust/commit/95c53c049c9ced13c325c9aade22affbf5d97fa3"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "afac501835dc72bd170515e244888a16100f4f52", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/42cd820c62c531f20d763281c7cc2bdaa1e0a89a/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42cd820c62c531f20d763281c7cc2bdaa1e0a89a/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=42cd820c62c531f20d763281c7cc2bdaa1e0a89a", "patch": "@@ -565,11 +565,26 @@ impl<T:Repr> Repr for Option<T> {\n     fn repr(&self, tcx: ctxt) -> ~str {\n         match self {\n             &None => ~\"None\",\n-            &Some(ref t) => format!(\"Some({})\", t.repr(tcx))\n+            &Some(ref t) => t.repr(tcx),\n         }\n     }\n }\n \n+impl<T:Repr,U:Repr> Repr for Result<T,U> {\n+    fn repr(&self, tcx: ctxt) -> ~str {\n+        match self {\n+            &Ok(ref t) => t.repr(tcx),\n+            &Err(ref u) => format!(\"Err({})\", u.repr(tcx))\n+        }\n+    }\n+}\n+\n+impl Repr for () {\n+    fn repr(&self, _tcx: ctxt) -> ~str {\n+        ~\"()\"\n+    }\n+}\n+\n impl<T:Repr> Repr for @T {\n     fn repr(&self, tcx: ctxt) -> ~str {\n         (&**self).repr(tcx)\n@@ -1021,3 +1036,32 @@ impl UserString for AbiSet {\n         self.to_str()\n     }\n }\n+\n+impl Repr for ty::UpvarId {\n+    fn repr(&self, tcx: ctxt) -> ~str {\n+        format!(\"UpvarId({};`{}`;{})\",\n+             self.var_id,\n+             ty::local_var_name_str(tcx, self.var_id),\n+             self.closure_expr_id)\n+    }\n+}\n+\n+impl Repr for ast::Mutability {\n+    fn repr(&self, _tcx: ctxt) -> ~str {\n+        format!(\"{:?}\", *self)\n+    }\n+}\n+\n+impl Repr for ty::BorrowKind {\n+    fn repr(&self, _tcx: ctxt) -> ~str {\n+        format!(\"{:?}\", *self)\n+    }\n+}\n+\n+impl Repr for ty::UpvarBorrow {\n+    fn repr(&self, tcx: ctxt) -> ~str {\n+        format!(\"UpvarBorrow({}, {})\",\n+             self.kind.repr(tcx),\n+             self.region.repr(tcx))\n+    }\n+}"}]}