{"sha": "a681628bd4faf9135f0764b3f1f1fdcafc491de6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ODE2MjhiZDRmYWY5MTM1ZjA3NjRiM2YxZjFmZGNhZmM0OTFkZTY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-10T08:50:16Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-10T08:50:16Z"}, "message": "Output meaningful lexer error when no digits given for number\n\nCloses #1802", "tree": {"sha": "a2c6e007dacbce48b8adf7aeeba4a02ea8d0a632", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2c6e007dacbce48b8adf7aeeba4a02ea8d0a632"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a681628bd4faf9135f0764b3f1f1fdcafc491de6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a681628bd4faf9135f0764b3f1f1fdcafc491de6", "html_url": "https://github.com/rust-lang/rust/commit/a681628bd4faf9135f0764b3f1f1fdcafc491de6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a681628bd4faf9135f0764b3f1f1fdcafc491de6/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d493438c9805ff82b45aa5c40941c05311794130", "url": "https://api.github.com/repos/rust-lang/rust/commits/d493438c9805ff82b45aa5c40941c05311794130", "html_url": "https://github.com/rust-lang/rust/commit/d493438c9805ff82b45aa5c40941c05311794130"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "42cc5400b0c3a6d05d2fad14138cdbb2ecb00438", "filename": "src/comp/syntax/parse/lexer.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a681628bd4faf9135f0764b3f1f1fdcafc491de6/src%2Fcomp%2Fsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a681628bd4faf9135f0764b3f1f1fdcafc491de6/src%2Fcomp%2Fsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Flexer.rs?ref=a681628bd4faf9135f0764b3f1f1fdcafc491de6", "patch": "@@ -220,6 +220,9 @@ fn scan_number(c: char, rdr: reader) -> token::token {\n             tp = if signed { either::left(ast::ty_i64) }\n                       else { either::right(ast::ty_u64) };\n         }\n+        if str::byte_len(num_str) == 0u {\n+            rdr.fatal(\"no valid digits found for number\");\n+        }\n         let parsed = u64::from_str(num_str, base as u64);\n         alt tp {\n           either::left(t) { ret token::LIT_INT(parsed as i64, t); }\n@@ -264,6 +267,9 @@ fn scan_number(c: char, rdr: reader) -> token::token {\n         ret token::LIT_FLOAT(interner::intern(*rdr.interner, num_str),\n                              ast::ty_f);\n     } else {\n+        if str::byte_len(num_str) == 0u {\n+            rdr.fatal(\"no valid digits found for number\");\n+        }\n         let parsed = u64::from_str(num_str, base as u64);\n         ret token::LIT_INT(parsed as i64, ast::ty_i);\n     }"}]}