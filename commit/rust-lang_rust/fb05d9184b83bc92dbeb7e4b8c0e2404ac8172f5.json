{"sha": "fb05d9184b83bc92dbeb7e4b8c0e2404ac8172f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMDVkOTE4NGI4M2JjOTJkYmViN2U0YjhjMGUyNDA0YWM4MTcyZjU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-06T19:22:08Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-06T19:22:08Z"}, "message": "rustc: Make copy_args_to_allocas not insist on a function type so it's easier to make it work with tag constructors", "tree": {"sha": "44b969f3b81e0c76c433e4e82952d87086579ec9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44b969f3b81e0c76c433e4e82952d87086579ec9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb05d9184b83bc92dbeb7e4b8c0e2404ac8172f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb05d9184b83bc92dbeb7e4b8c0e2404ac8172f5", "html_url": "https://github.com/rust-lang/rust/commit/fb05d9184b83bc92dbeb7e4b8c0e2404ac8172f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb05d9184b83bc92dbeb7e4b8c0e2404ac8172f5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f6a6305196cff86a93d56718cd22edd6b87aa9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6a6305196cff86a93d56718cd22edd6b87aa9e", "html_url": "https://github.com/rust-lang/rust/commit/9f6a6305196cff86a93d56718cd22edd6b87aa9e"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "9e703b15daf79dfe1c359b1729c6d47d89cef6b5", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fb05d9184b83bc92dbeb7e4b8c0e2404ac8172f5/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb05d9184b83bc92dbeb7e4b8c0e2404ac8172f5/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=fb05d9184b83bc92dbeb7e4b8c0e2404ac8172f5", "patch": "@@ -1817,19 +1817,13 @@ fn new_fn_ctxt(@crate_ctxt cx,\n // allocas immediately upon entry; this permits us to GEP into structures we\n // were passed and whatnot. Apparently mem2reg will mop up.\n \n-fn copy_args_to_allocas(@block_ctxt cx, vec[ast.arg] args, &ast.ann ann) {\n-\n-    let vec[typeck.arg] arg_ts = vec();\n-    let @typeck.ty fty = node_ann_type(cx.fcx.ccx, ann);\n-    alt (fty.struct) {\n-        case (typeck.ty_fn(?a, _)) { arg_ts += a; }\n-    }\n+fn copy_args_to_allocas(@block_ctxt cx, vec[ast.arg] args,\n+                        vec[typeck.arg] arg_tys) {\n \n     let uint arg_n = 0u;\n \n     for (ast.arg aarg in args) {\n-        auto arg = arg_ts.(arg_n);\n-        auto arg_t = type_of(cx.fcx.ccx, arg.ty);\n+        auto arg_t = type_of(cx.fcx.ccx, arg_tys.(arg_n).ty);\n         auto alloca = cx.build.Alloca(arg_t);\n         auto argval = cx.fcx.llargs.get(aarg.id);\n         cx.build.Store(argval, alloca);\n@@ -1844,13 +1838,22 @@ fn is_terminated(@block_ctxt cx) -> bool {\n     ret llvm.LLVMIsATerminatorInst(inst) as int != 0;\n }\n \n+fn arg_tys_of_fn(ast.ann ann) -> vec[typeck.arg] {\n+    alt (typeck.ann_to_type(ann).struct) {\n+        case (typeck.ty_fn(?arg_tys, _)) {\n+            ret arg_tys;\n+        }\n+    }\n+    fail;\n+}\n+\n impure fn trans_fn(@crate_ctxt cx, &ast._fn f, ast.def_id fid,\n                    &ast.ann ann) {\n \n     auto fcx = new_fn_ctxt(cx, cx.path, f.inputs, fid);\n     auto bcx = new_top_block_ctxt(fcx);\n \n-    copy_args_to_allocas(bcx, f.inputs, ann);\n+    copy_args_to_allocas(bcx, f.inputs, arg_tys_of_fn(ann));\n \n     auto res = trans_block(bcx, f.body);\n     if (!is_terminated(res.bcx)) {"}]}