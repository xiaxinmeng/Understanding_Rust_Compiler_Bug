{"sha": "9ef311b47706cc0babce08ee86bc9ca7727fc2f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllZjMxMWI0NzcwNmNjMGJhYmNlMDhlZTg2YmM5Y2E3NzI3ZmMyZjU=", "commit": {"author": {"name": "Bruno BELANYI", "email": "bruno@belanyi.fr", "date": "2020-10-07T09:59:20Z"}, "committer": {"name": "Bruno BELANYI", "email": "bruno@belanyi.fr", "date": "2020-10-07T09:59:20Z"}, "message": "Rename tables to typecheck_result()", "tree": {"sha": "2a75232b8642aee96caba93862bef86ab0b41d61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a75232b8642aee96caba93862bef86ab0b41d61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ef311b47706cc0babce08ee86bc9ca7727fc2f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef311b47706cc0babce08ee86bc9ca7727fc2f5", "html_url": "https://github.com/rust-lang/rust/commit/9ef311b47706cc0babce08ee86bc9ca7727fc2f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ef311b47706cc0babce08ee86bc9ca7727fc2f5/comments", "author": {"login": "ambroisie", "id": 12465195, "node_id": "MDQ6VXNlcjEyNDY1MTk1", "avatar_url": "https://avatars.githubusercontent.com/u/12465195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ambroisie", "html_url": "https://github.com/ambroisie", "followers_url": "https://api.github.com/users/ambroisie/followers", "following_url": "https://api.github.com/users/ambroisie/following{/other_user}", "gists_url": "https://api.github.com/users/ambroisie/gists{/gist_id}", "starred_url": "https://api.github.com/users/ambroisie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ambroisie/subscriptions", "organizations_url": "https://api.github.com/users/ambroisie/orgs", "repos_url": "https://api.github.com/users/ambroisie/repos", "events_url": "https://api.github.com/users/ambroisie/events{/privacy}", "received_events_url": "https://api.github.com/users/ambroisie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ambroisie", "id": 12465195, "node_id": "MDQ6VXNlcjEyNDY1MTk1", "avatar_url": "https://avatars.githubusercontent.com/u/12465195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ambroisie", "html_url": "https://github.com/ambroisie", "followers_url": "https://api.github.com/users/ambroisie/followers", "following_url": "https://api.github.com/users/ambroisie/following{/other_user}", "gists_url": "https://api.github.com/users/ambroisie/gists{/gist_id}", "starred_url": "https://api.github.com/users/ambroisie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ambroisie/subscriptions", "organizations_url": "https://api.github.com/users/ambroisie/orgs", "repos_url": "https://api.github.com/users/ambroisie/repos", "events_url": "https://api.github.com/users/ambroisie/events{/privacy}", "received_events_url": "https://api.github.com/users/ambroisie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "277191890b60b28790d2d100191d6bc3d8975920", "url": "https://api.github.com/repos/rust-lang/rust/commits/277191890b60b28790d2d100191d6bc3d8975920", "html_url": "https://github.com/rust-lang/rust/commit/277191890b60b28790d2d100191d6bc3d8975920"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "27d4f1b03d77c4d2acdaf643754f939ef6343d0f", "filename": "doc/common_tools_writing_lints.md", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ef311b47706cc0babce08ee86bc9ca7727fc2f5/doc%2Fcommon_tools_writing_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/9ef311b47706cc0babce08ee86bc9ca7727fc2f5/doc%2Fcommon_tools_writing_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fcommon_tools_writing_lints.md?ref=9ef311b47706cc0babce08ee86bc9ca7727fc2f5", "patch": "@@ -45,11 +45,13 @@ Similarly in [`TypeckResults`][TypeckResults] methods, you have the [`pat_ty()`]\n to retrieve a type from a pattern.\n \n Two noticeable items here:\n-- `cx` is the lint context [`LateContext`][LateContext].\n-  The two most useful data structures in this context are `tcx` and `tables`,\n-  allowing us to jump to type definitions and other compilation stages such as HIR.\n-- `tables` is [`TypeckResults`][TypeckResults] and is created by type checking step,\n-  it includes useful information such as types of expressions, ways to resolve methods and so on.\n+- `cx` is the lint context [`LateContext`][LateContext]. The two most useful\n+  data structures in this context are `tcx` and the `TypeckResults` returned by\n+  'LateContext::typeck_results', allowing us to jump to type definitions and\n+  other compilation stages such as HIR.\n+- `typeck_results`'s return value is [`TypeckResults`][TypeckResults] and is\n+  created by type checking step, it includes useful information such as types\n+  of expressions, ways to resolve methods and so on.\n \n # Checking if an expr is calling a specific method\n "}]}