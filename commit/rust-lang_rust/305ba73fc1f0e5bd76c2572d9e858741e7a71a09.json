{"sha": "305ba73fc1f0e5bd76c2572d9e858741e7a71a09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNWJhNzNmYzFmMGU1YmQ3NmMyNTcyZDllODU4NzQxZTdhNzFhMDk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-11-07T08:34:45Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-07T12:14:40Z"}, "message": "Rustup to rustc 1.40.0-nightly (7a76fe76f 2019-11-07)", "tree": {"sha": "068d375fe89827a83c69c18772e50b39331a7ad2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/068d375fe89827a83c69c18772e50b39331a7ad2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/305ba73fc1f0e5bd76c2572d9e858741e7a71a09", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl3ECrAACgkQaTCGhp1Q\nZjciEQ//UN2s4BaxNGCFiDt7aXrFtGH8zt0x1RE4cbJmGCJQFlY3jgIkmxlBaogy\nPx1WA1KBDreD1suD1pkHenFgB4WjGuwhrGnXSshrarPMO3wcQKllP7dxLIdDIr9G\nlzVnAKd0r9fa7GXD1Z6U0O+WQPIYr7CUyZ4U0MOsU23omtdqe28mXcDm2xEfvAut\nRMwhDMSFZRYKejxvffg2a1K+OlZdsyeFmHHOa+zhuzRawSb20NaRLE5+SugPx1Gc\nRlfIQip6plFMP9PYNE9xtyS6O7oL0h1HkbC55SvE7+nBQhgmmEbhDtfm6FS9aJAT\nOObUAF1TDTjKVA6E4ENksg0zPfzc5bDWZ/JdCDa56O8EJDbOBXFCWnKz4tXQthjs\ndR084s0TqWZ55PxHJoaB8S2vqmFr22b09tSBiqkyHAEIsHDQw89PdJrMTsczmPqg\nyF+yAL42fKJZQLlATgWnaUxTlunQs0PlbsQB8OMdwxB2q34KBLAM8geVPgzFfUcE\nwaA+2crjlEQxJVdqlFEhNJ5sjNHxzdBgEmUcKqWlXAUgPlxAr0CPriKqkSmZQ25d\nd5Hf2uNkve6KuxHxDMKLCcM/rvg1fJooWt4JlJrYvp5e9oJvTVDSBcHwq9Y1db0K\ninQF76OcJbXwD/+9AfWODSO8uTEnhUMKIhWmEd4smo7baqWWDJk=\n=8CBy\n-----END PGP SIGNATURE-----", "payload": "tree 068d375fe89827a83c69c18772e50b39331a7ad2\nparent 43a3796379e59a09d7de7b8e441f4a166737e568\nauthor Manish Goregaokar <manishsmail@gmail.com> 1573115685 -0800\ncommitter flip1995 <hello@philkrones.com> 1573128880 +0100\n\nRustup to rustc 1.40.0-nightly (7a76fe76f 2019-11-07)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/305ba73fc1f0e5bd76c2572d9e858741e7a71a09", "html_url": "https://github.com/rust-lang/rust/commit/305ba73fc1f0e5bd76c2572d9e858741e7a71a09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43a3796379e59a09d7de7b8e441f4a166737e568", "url": "https://api.github.com/repos/rust-lang/rust/commits/43a3796379e59a09d7de7b8e441f4a166737e568", "html_url": "https://github.com/rust-lang/rust/commit/43a3796379e59a09d7de7b8e441f4a166737e568"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "06df8504def993703ac3bd76a20d37c9f943400a", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=305ba73fc1f0e5bd76c2572d9e858741e7a71a09", "patch": "@@ -15,7 +15,7 @@ use rustc::ty;\n use rustc::{declare_lint_pass, declare_tool_lint};\n use rustc_errors::Applicability;\n use semver::Version;\n-use syntax::ast::{AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n+use syntax::ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n use syntax::source_map::Span;\n use syntax_pos::symbol::Symbol;\n \n@@ -417,11 +417,14 @@ fn check_attrs(cx: &LateContext<'_, '_>, span: Span, name: Name, attrs: &[Attrib\n     }\n \n     for attr in attrs {\n-        if attr.is_sugared_doc {\n-            return;\n-        }\n+        let attr_item = if let AttrKind::Normal(ref attr) = attr.kind {\n+            attr\n+        } else {\n+            continue;\n+        };\n+\n         if attr.style == AttrStyle::Outer {\n-            if attr.tokens.is_empty() || !is_present_in_source(cx, attr.span) {\n+            if attr_item.tokens.is_empty() || !is_present_in_source(cx, attr.span) {\n                 return;\n             }\n "}, {"sha": "aca4d176724ff793156e6e73d4392d05a800498c", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=305ba73fc1f0e5bd76c2572d9e858741e7a71a09", "patch": "@@ -6,7 +6,7 @@ use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, impl_lint_pass};\n use rustc_data_structures::fx::FxHashSet;\n use std::ops::Range;\n-use syntax::ast::Attribute;\n+use syntax::ast::{AttrKind, Attribute};\n use syntax::source_map::{BytePos, Span};\n use syntax_pos::Pos;\n use url::Url;\n@@ -247,13 +247,11 @@ pub fn check_attrs<'a>(cx: &LateContext<'_, '_>, valid_idents: &FxHashSet<String\n     let mut spans = vec![];\n \n     for attr in attrs {\n-        if attr.is_sugared_doc {\n-            if let Some(ref current) = attr.value_str() {\n-                let current = current.to_string();\n-                let (current, current_spans) = strip_doc_comment_decoration(&current, attr.span);\n-                spans.extend_from_slice(&current_spans);\n-                doc.push_str(&current);\n-            }\n+        if let AttrKind::DocComment(ref comment) = attr.kind {\n+            let comment = comment.to_string();\n+            let (comment, current_spans) = strip_doc_comment_decoration(&comment, attr.span);\n+            spans.extend_from_slice(&current_spans);\n+            doc.push_str(&comment);\n         } else if attr.check_name(sym!(doc)) {\n             // ignore mix of sugared and non-sugared doc\n             return true; // don't trigger the safety check"}, {"sha": "5e51b6b75d839019bd383af3b4f573ff938aef11", "filename": "clippy_lints/src/main_recursion.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/clippy_lints%2Fsrc%2Fmain_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/clippy_lints%2Fsrc%2Fmain_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmain_recursion.rs?ref=305ba73fc1f0e5bd76c2572d9e858741e7a71a09", "patch": "@@ -1,6 +1,7 @@\n use rustc::hir::{Crate, Expr, ExprKind, QPath};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, impl_lint_pass};\n+use syntax::ast::AttrKind;\n use syntax::symbol::sym;\n \n use crate::utils::{is_entrypoint_fn, snippet, span_help_and_lint};\n@@ -34,7 +35,13 @@ impl_lint_pass!(MainRecursion => [MAIN_RECURSION]);\n \n impl LateLintPass<'_, '_> for MainRecursion {\n     fn check_crate(&mut self, _: &LateContext<'_, '_>, krate: &Crate) {\n-        self.has_no_std_attr = krate.attrs.iter().any(|attr| attr.path == sym::no_std);\n+        self.has_no_std_attr = krate.attrs.iter().any(|attr| {\n+            if let AttrKind::Normal(ref attr) = attr.kind {\n+                attr.path == sym::no_std\n+            } else {\n+                false\n+            }\n+        });\n     }\n \n     fn check_expr_post(&mut self, cx: &LateContext<'_, '_>, expr: &Expr) {"}, {"sha": "19dbae2eabd97da29e4e6ddfe1ef90383f41325c", "filename": "clippy_lints/src/utils/attrs.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/305ba73fc1f0e5bd76c2572d9e858741e7a71a09/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fattrs.rs?ref=305ba73fc1f0e5bd76c2572d9e858741e7a71a09", "patch": "@@ -57,6 +57,11 @@ pub fn get_attr<'a>(\n     name: &'static str,\n ) -> impl Iterator<Item = &'a ast::Attribute> {\n     attrs.iter().filter(move |attr| {\n+        let attr = if let ast::AttrKind::Normal(ref attr) = attr.kind {\n+            attr\n+        } else {\n+            return false;\n+        };\n         let attr_segments = &attr.path.segments;\n         if attr_segments.len() == 2 && attr_segments[0].ident.to_string() == \"clippy\" {\n             if let Some(deprecation_status) ="}]}