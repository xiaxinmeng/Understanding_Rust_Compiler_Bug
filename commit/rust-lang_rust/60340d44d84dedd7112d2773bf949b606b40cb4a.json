{"sha": "60340d44d84dedd7112d2773bf949b606b40cb4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMzQwZDQ0ZDg0ZGVkZDcxMTJkMjc3M2JmOTQ5YjYwNmI0MGNiNGE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-17T14:07:27Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-17T14:07:27Z"}, "message": "Don't panic when the target is not supported by Cranelift", "tree": {"sha": "33436ed66d97ca6bf708ad44f7d0c1460b6528dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33436ed66d97ca6bf708ad44f7d0c1460b6528dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60340d44d84dedd7112d2773bf949b606b40cb4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60340d44d84dedd7112d2773bf949b606b40cb4a", "html_url": "https://github.com/rust-lang/rust/commit/60340d44d84dedd7112d2773bf949b606b40cb4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60340d44d84dedd7112d2773bf949b606b40cb4a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ede41d1b984d51c6023eb7381930600fa3c143aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede41d1b984d51c6023eb7381930600fa3c143aa", "html_url": "https://github.com/rust-lang/rust/commit/ede41d1b984d51c6023eb7381930600fa3c143aa"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "c7b3ad9604811e9748057fb1692a6ea9a39ac68a", "filename": "src/lib.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/60340d44d84dedd7112d2773bf949b606b40cb4a/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60340d44d84dedd7112d2773bf949b606b40cb4a/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=60340d44d84dedd7112d2773bf949b606b40cb4a", "patch": "@@ -217,18 +217,17 @@ impl CodegenBackend for CraneliftCodegenBackend {\n     ) -> Result<(), ErrorReported> {\n         use rustc_codegen_ssa::back::link::link_binary;\n \n-        link_binary::<crate::archive::ArArchiveBuilder<'_>>(\n-            sess,\n-            &codegen_results,\n-            outputs,\n-        );\n+        link_binary::<crate::archive::ArArchiveBuilder<'_>>(sess, &codegen_results, outputs);\n \n         Ok(())\n     }\n }\n \n fn target_triple(sess: &Session) -> target_lexicon::Triple {\n-    sess.target.llvm_target.parse().unwrap()\n+    match sess.target.llvm_target.parse() {\n+        Ok(triple) => triple,\n+        Err(err) => sess.fatal(&format!(\"target not recognized: {}\", err)),\n+    }\n }\n \n fn build_isa(sess: &Session, backend_config: &BackendConfig) -> Box<dyn isa::TargetIsa + 'static> {\n@@ -278,15 +277,21 @@ fn build_isa(sess: &Session, backend_config: &BackendConfig) -> Box<dyn isa::Tar\n         }\n         Some(value) => {\n             let mut builder =\n-                cranelift_codegen::isa::lookup_variant(target_triple, variant).unwrap();\n+                cranelift_codegen::isa::lookup_variant(target_triple.clone(), variant)\n+                    .unwrap_or_else(|err| {\n+                        sess.fatal(&format!(\"can't compile for {}: {}\", target_triple, err));\n+                    });\n             if let Err(_) = builder.enable(value) {\n-                sess.fatal(\"The specified target cpu isn't currently supported by Cranelift.\");\n+                sess.fatal(\"the specified target cpu isn't currently supported by Cranelift.\");\n             }\n             builder\n         }\n         None => {\n             let mut builder =\n-                cranelift_codegen::isa::lookup_variant(target_triple.clone(), variant).unwrap();\n+                cranelift_codegen::isa::lookup_variant(target_triple.clone(), variant)\n+                    .unwrap_or_else(|err| {\n+                        sess.fatal(&format!(\"can't compile for {}: {}\", target_triple, err));\n+                    });\n             if target_triple.architecture == target_lexicon::Architecture::X86_64 {\n                 // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n                 // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`."}]}