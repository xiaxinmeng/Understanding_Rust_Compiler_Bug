{"sha": "33df8a96553fc99f9792c70a8a28491f0519718c", "node_id": "C_kwDOAAsO6NoAKDMzZGY4YTk2NTUzZmM5OWY5NzkyYzcwYThhMjg0OTFmMDUxOTcxOGM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-12T16:18:04Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-14T09:30:52Z"}, "message": "Don't generate ident elements as DOM nodes", "tree": {"sha": "8c7cd766d09507d82b23f1459a6a8d7a1aca03f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c7cd766d09507d82b23f1459a6a8d7a1aca03f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33df8a96553fc99f9792c70a8a28491f0519718c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33df8a96553fc99f9792c70a8a28491f0519718c", "html_url": "https://github.com/rust-lang/rust/commit/33df8a96553fc99f9792c70a8a28491f0519718c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33df8a96553fc99f9792c70a8a28491f0519718c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68f327bcc112ffb4261980c04e58d333b5d97b6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/68f327bcc112ffb4261980c04e58d333b5d97b6e", "html_url": "https://github.com/rust-lang/rust/commit/68f327bcc112ffb4261980c04e58d333b5d97b6e"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "9d8ee52a3faf861d3609f615427a6475eb7b996f", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/33df8a96553fc99f9792c70a8a28491f0519718c/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33df8a96553fc99f9792c70a8a28491f0519718c/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=33df8a96553fc99f9792c70a8a28491f0519718c", "patch": "@@ -164,7 +164,8 @@ fn write_pending_elems(\n /// * If two `Class` have the same variant, then they can be merged.\n /// * If the other `Class` is unclassified and only contains white characters (backline,\n ///   whitespace, etc), it can be merged.\n-/// * If `Class` is `Ident`, then it can be merged with all unclassified elements.\n+/// * `Class::Ident` is considered the same as unclassified (because it doesn't have an associated\n+///    CSS class).\n fn can_merge(class1: Option<Class>, class2: Option<Class>, text: &str) -> bool {\n     match (class1, class2) {\n         (Some(c1), Some(c2)) => c1.is_equal_to(c2),\n@@ -264,14 +265,15 @@ enum Class {\n     DocComment,\n     Attribute,\n     KeyWord,\n-    // Keywords that do pointer/reference stuff.\n+    /// Keywords that do pointer/reference stuff.\n     RefKeyWord,\n     Self_(Span),\n     Macro(Span),\n     MacroNonTerminal,\n     String,\n     Number,\n     Bool,\n+    /// `Ident` isn't rendered in the HTML but we still need it for the `Span` it contains.\n     Ident(Span),\n     Lifetime,\n     PreludeTy,\n@@ -320,7 +322,7 @@ impl Class {\n             Class::String => \"string\",\n             Class::Number => \"number\",\n             Class::Bool => \"bool-val\",\n-            Class::Ident(_) => \"ident\",\n+            Class::Ident(_) => \"\",\n             Class::Lifetime => \"lifetime\",\n             Class::PreludeTy => \"prelude-ty\",\n             Class::PreludeVal => \"prelude-val\",\n@@ -920,7 +922,7 @@ fn string_without_closing_tag<T: Display>(\n             path\n         });\n     }\n-    // We don't want to generate links on empty text.\n+\n     if let Some(href_context) = href_context {\n         if let Some(href) =\n             href_context.context.shared.span_correspondance_map.get(&def_span).and_then(|href| {\n@@ -954,7 +956,12 @@ fn string_without_closing_tag<T: Display>(\n                 // again.\n                 write!(out, \"<a href=\\\"{}\\\">{}\", href, text_s);\n             } else {\n-                write!(out, \"<a class=\\\"{}\\\" href=\\\"{}\\\">{}\", klass.as_html(), href, text_s);\n+                let klass_s = klass.as_html();\n+                if klass_s.is_empty() {\n+                    write!(out, \"<a href=\\\"{}\\\">{}\", href, text_s);\n+                } else {\n+                    write!(out, \"<a class=\\\"{}\\\" href=\\\"{}\\\">{}\", klass_s, href, text_s);\n+                }\n             }\n             return Some(\"</a>\");\n         }\n@@ -963,8 +970,14 @@ fn string_without_closing_tag<T: Display>(\n         write!(out, \"{}\", text_s);\n         return None;\n     }\n-    write!(out, \"<span class=\\\"{}\\\">{}\", klass.as_html(), text_s);\n-    Some(\"</span>\")\n+    let klass_s = klass.as_html();\n+    if klass_s.is_empty() {\n+        write!(out, \"{}\", text_s);\n+        Some(\"\")\n+    } else {\n+        write!(out, \"<span class=\\\"{}\\\">{}\", klass_s, text_s);\n+        Some(\"</span>\")\n+    }\n }\n \n #[cfg(test)]"}, {"sha": "4dfb64abbebe8d8edf090e23cb0003e86a4ceb95", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33df8a96553fc99f9792c70a8a28491f0519718c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/33df8a96553fc99f9792c70a8a28491f0519718c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=33df8a96553fc99f9792c70a8a28491f0519718c", "patch": "@@ -250,9 +250,6 @@ pre.rust .self {\n pre.rust .attribute {\n \tcolor: #e6e1cf;\n }\n-pre.rust .attribute .ident {\n-\tcolor: #e6e1cf;\n-}\n \n .example-wrap > pre.line-number {\n \tcolor: #5c67736e;\n@@ -398,8 +395,7 @@ pre.rust .comment {}\n .block a.current.method,.content span.tymethod,.content a.tymethod,.block a.current.tymethod,\n .content .fnname {}\n pre.rust .kw {}\n-pre.rust .self,pre.rust .bool-val,pre.rust .prelude-val,pre.rust .attribute,\n-pre.rust .attribute .ident {}\n+pre.rust .self,pre.rust .bool-val,pre.rust .prelude-val,pre.rust .attribute {}\n .content span.foreigntype,.content a.foreigntype,.block a.current.foreigntype {}\n pre.rust .doccomment {}\n .stab.deprecated {}"}, {"sha": "39f83c998082700c1a66db52569266fec9c30298", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33df8a96553fc99f9792c70a8a28491f0519718c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/33df8a96553fc99f9792c70a8a28491f0519718c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=33df8a96553fc99f9792c70a8a28491f0519718c", "patch": "@@ -202,7 +202,7 @@ pre.rust .kw { color: #ab8ac1; }\n pre.rust .kw-2, pre.rust .prelude-ty { color: #769acb; }\n pre.rust .number, pre.rust .string { color: #83a300; }\n pre.rust .self, pre.rust .bool-val, pre.rust .prelude-val,\n-pre.rust .attribute, pre.rust .attribute .ident { color: #ee6868; }\n+pre.rust .attribute { color: #ee6868; }\n pre.rust .macro, pre.rust .macro-nonterminal { color: #3E999F; }\n pre.rust .lifetime { color: #d97f26; }\n pre.rust .question-mark {"}, {"sha": "5698088c790bba5e87a773428668f5fab2d4a79b", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33df8a96553fc99f9792c70a8a28491f0519718c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/33df8a96553fc99f9792c70a8a28491f0519718c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=33df8a96553fc99f9792c70a8a28491f0519718c", "patch": "@@ -184,7 +184,7 @@ pre.rust .kw { color: #8959A8; }\n pre.rust .kw-2, pre.rust .prelude-ty { color: #4271AE; }\n pre.rust .number, pre.rust .string { color: #718C00; }\n pre.rust .self, pre.rust .bool-val, pre.rust .prelude-val,\n-pre.rust .attribute, pre.rust .attribute .ident { color: #C82829; }\n+pre.rust .attribute { color: #C82829; }\n pre.rust .comment { color: #8E908C; }\n pre.rust .doccomment { color: #4D4D4C; }\n pre.rust .macro, pre.rust .macro-nonterminal { color: #3E999F; }"}]}