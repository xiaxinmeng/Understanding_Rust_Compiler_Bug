{"sha": "c0ea270f701bd857cc0bd20db1707810fb4b7493", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZWEyNzBmNzAxYmQ4NTdjYzBiZDIwZGIxNzA3ODEwZmI0Yjc0OTM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-09-22T01:59:04Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-09-27T22:40:57Z"}, "message": "Rename rls component to rls-preview on nightly", "tree": {"sha": "7b3ccd5cb892431f7f23209f41ce960e22409c77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b3ccd5cb892431f7f23209f41ce960e22409c77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0ea270f701bd857cc0bd20db1707810fb4b7493", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ea270f701bd857cc0bd20db1707810fb4b7493", "html_url": "https://github.com/rust-lang/rust/commit/c0ea270f701bd857cc0bd20db1707810fb4b7493", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0ea270f701bd857cc0bd20db1707810fb4b7493/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5cad5a78dd32846b3353a25f707dd2fcfd7bc63", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5cad5a78dd32846b3353a25f707dd2fcfd7bc63", "html_url": "https://github.com/rust-lang/rust/commit/c5cad5a78dd32846b3353a25f707dd2fcfd7bc63"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "3d4aa0413db6188278cbede24b6c8eb444229550", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c0ea270f701bd857cc0bd20db1707810fb4b7493/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0ea270f701bd857cc0bd20db1707810fb4b7493/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=c0ea270f701bd857cc0bd20db1707810fb4b7493", "patch": "@@ -1098,13 +1098,8 @@ impl Step for Rls {\n            .arg(\"--output-dir\").arg(&distdir(build))\n            .arg(\"--non-installed-overlay\").arg(&overlay)\n            .arg(format!(\"--package-name={}-{}\", name, target))\n-           .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n-\n-        if build.config.channel == \"nightly\" {\n-            cmd.arg(\"--component-name=rls\");\n-        } else {\n-            cmd.arg(\"--component-name=rls-preview\");\n-        }\n+           .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n+           .arg(\"--component-name=rls-preview\");\n \n         build.run(&mut cmd);\n         distdir(build).join(format!(\"{}-{}.tar.gz\", name, target))\n@@ -1333,12 +1328,8 @@ impl Step for Extended {\n             cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-std\"), target))\n                         .join(format!(\"rust-std-{}\", target)),\n                     &exe.join(\"rust-std\"));\n-            let rls_path = if build.config.channel == \"nightly\" {\n-                work.join(&format!(\"{}-{}\", pkgname(build, \"rls\"), target)).join(\"rls\")\n-            } else {\n-                work.join(&format!(\"{}-{}\", pkgname(build, \"rls\"), target)).join(\"rls-preview\")\n-            };\n-            cp_r(&rls_path, &exe.join(\"rls\"));\n+            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rls\"), target)).join(\"rls-preview\"),\n+                 &exe.join(\"rls\"));\n             cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-analysis\"), target))\n                         .join(format!(\"rust-analysis-{}\", target)),\n                     &exe.join(\"rust-analysis\"));"}, {"sha": "190fe78c658fe5b9b6e3dc7ca2699453897f1c40", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c0ea270f701bd857cc0bd20db1707810fb4b7493/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0ea270f701bd857cc0bd20db1707810fb4b7493/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=c0ea270f701bd857cc0bd20db1707810fb4b7493", "patch": "@@ -108,6 +108,7 @@ struct Manifest {\n     manifest_version: String,\n     date: String,\n     pkg: BTreeMap<String, Package>,\n+    renames: BTreeMap<String, Rename>\n }\n \n #[derive(Serialize)]\n@@ -117,6 +118,11 @@ struct Package {\n     target: BTreeMap<String, Target>,\n }\n \n+#[derive(Serialize)]\n+struct Rename {\n+    to: String,\n+}\n+\n #[derive(Serialize)]\n struct Target {\n     available: bool,\n@@ -236,6 +242,7 @@ impl Builder {\n             manifest_version: \"2\".to_string(),\n             date: self.date.to_string(),\n             pkg: BTreeMap::new(),\n+            renames: BTreeMap::new(),\n         };\n \n         self.package(\"rustc\", &mut manifest.pkg, HOSTS);\n@@ -244,14 +251,11 @@ impl Builder {\n         self.package(\"rust-std\", &mut manifest.pkg, TARGETS);\n         self.package(\"rust-docs\", &mut manifest.pkg, TARGETS);\n         self.package(\"rust-src\", &mut manifest.pkg, &[\"*\"]);\n-        let rls_package_name = if self.rust_release == \"nightly\" {\n-            \"rls\"\n-        } else {\n-            \"rls-preview\"\n-        };\n-        self.package(rls_package_name, &mut manifest.pkg, HOSTS);\n+        self.package(\"rls-preview\", &mut manifest.pkg, HOSTS);\n         self.package(\"rust-analysis\", &mut manifest.pkg, TARGETS);\n \n+        manifest.renames.insert(\"rls\".to_owned(), Rename { to: \"rls-preview\".to_owned() });\n+\n         let mut pkg = Package {\n             version: self.cached_version(\"rust\").to_string(),\n             git_commit_hash: self.cached_git_commit_hash(\"rust\").clone(),\n@@ -287,7 +291,7 @@ impl Builder {\n             }\n \n             extensions.push(Component {\n-                pkg: rls_package_name.to_string(),\n+                pkg: \"rls-preview\".to_string(),\n                 target: host.to_string(),\n             });\n             extensions.push(Component {\n@@ -319,7 +323,7 @@ impl Builder {\n         }\n         manifest.pkg.insert(\"rust\".to_string(), pkg);\n \n-        return manifest\n+        return manifest;\n     }\n \n     fn package(&mut self,"}]}