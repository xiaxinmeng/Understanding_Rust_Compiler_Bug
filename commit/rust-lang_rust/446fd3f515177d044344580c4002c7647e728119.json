{"sha": "446fd3f515177d044344580c4002c7647e728119", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NmZkM2Y1MTUxNzdkMDQ0MzQ0NTgwYzQwMDJjNzY0N2U3MjgxMTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-27T16:36:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-27T16:36:38Z"}, "message": "Merge #5100\n\n5100: Add support for include_str r=edwin0cheng a=lnicola\n\nr? @edwin0cheng \n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "36a92eb2186c1b79a3af08ad6521fb4fc1e888d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36a92eb2186c1b79a3af08ad6521fb4fc1e888d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/446fd3f515177d044344580c4002c7647e728119", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe93WWCRBK7hj4Ov3rIwAAdHIIAH7lBM/cipZDREEuBoJWYTTL\nj+h74KPIEQKEt5Uw/lkGaei9P3zGiE8XZdza1I+PAdaRmHLuHfUF1jzpVe/T2U/j\n+OYpJkFVhpx6kuNGYvqlphqEJmexRfy1bV0MOtI9G1ATNVNZJHrXPUhJukendzw8\nxUQKgEpwie/YBoyTbYT4isZlzC1One9Y1oq0xWeW4chpYNXbndA5IE48JDEFlp+K\nDc/lvlFNyv4ANSyryLreA5SDYNlDNyxK7FBZSclQ7MNh2WAVatmFxOwYUqABIUX1\n3Ndfq6UDuTWdJ9ah7o44T4sItZuLawoTRxDaEbwhQRyMf1qGpSTD8lnx2z2fAKw=\n=w8F/\n-----END PGP SIGNATURE-----\n", "payload": "tree 36a92eb2186c1b79a3af08ad6521fb4fc1e888d1\nparent 45fc8d5c84d40da7a5dbf9b1a23ec389f54d1a81\nparent b4420626fbcc5f7b58e19f735fdbec1b0c48f045\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593275798 +0000\ncommitter GitHub <noreply@github.com> 1593275798 +0000\n\nMerge #5100\n\n5100: Add support for include_str r=edwin0cheng a=lnicola\n\nr? @edwin0cheng \n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/446fd3f515177d044344580c4002c7647e728119", "html_url": "https://github.com/rust-lang/rust/commit/446fd3f515177d044344580c4002c7647e728119", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/446fd3f515177d044344580c4002c7647e728119/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45fc8d5c84d40da7a5dbf9b1a23ec389f54d1a81", "url": "https://api.github.com/repos/rust-lang/rust/commits/45fc8d5c84d40da7a5dbf9b1a23ec389f54d1a81", "html_url": "https://github.com/rust-lang/rust/commit/45fc8d5c84d40da7a5dbf9b1a23ec389f54d1a81"}, {"sha": "b4420626fbcc5f7b58e19f735fdbec1b0c48f045", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4420626fbcc5f7b58e19f735fdbec1b0c48f045", "html_url": "https://github.com/rust-lang/rust/commit/b4420626fbcc5f7b58e19f735fdbec1b0c48f045"}], "stats": {"total": 79, "additions": 60, "deletions": 19}, "files": [{"sha": "631358f41a097b939a3f7254620149cc3ea64f33", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/446fd3f515177d044344580c4002c7647e728119/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446fd3f515177d044344580c4002c7647e728119/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=446fd3f515177d044344580c4002c7647e728119", "patch": "@@ -99,6 +99,7 @@ register_builtin! {\n     EAGER:\n     (concat, Concat) => concat_expand,\n     (include, Include) => include_expand,\n+    (include_str, IncludeStr) => include_str_expand,\n     (env, Env) => env_expand,\n     (option_env, OptionEnv) => option_env_expand\n }\n@@ -292,11 +293,16 @@ fn concat_expand(\n     Ok((quote!(#text), FragmentKind::Expr))\n }\n \n-fn relative_file(db: &dyn AstDatabase, call_id: MacroCallId, path: &str) -> Option<FileId> {\n+fn relative_file(\n+    db: &dyn AstDatabase,\n+    call_id: MacroCallId,\n+    path: &str,\n+    allow_recursion: bool,\n+) -> Option<FileId> {\n     let call_site = call_id.as_file().original_file(db);\n     let res = db.resolve_path(call_site, path)?;\n     // Prevent include itself\n-    if res == call_site {\n+    if res == call_site && !allow_recursion {\n         None\n     } else {\n         Some(res)\n@@ -319,8 +325,8 @@ fn include_expand(\n     tt: &tt::Subtree,\n ) -> Result<(tt::Subtree, FragmentKind), mbe::ExpandError> {\n     let path = parse_string(tt)?;\n-    let file_id =\n-        relative_file(db, arg_id.into(), &path).ok_or_else(|| mbe::ExpandError::ConversionError)?;\n+    let file_id = relative_file(db, arg_id.into(), &path, false)\n+        .ok_or_else(|| mbe::ExpandError::ConversionError)?;\n \n     // FIXME:\n     // Handle include as expression\n@@ -331,6 +337,30 @@ fn include_expand(\n     Ok((res, FragmentKind::Items))\n }\n \n+fn include_str_expand(\n+    db: &dyn AstDatabase,\n+    arg_id: EagerMacroId,\n+    tt: &tt::Subtree,\n+) -> Result<(tt::Subtree, FragmentKind), mbe::ExpandError> {\n+    let path = parse_string(tt)?;\n+\n+    // FIXME: we're not able to read excluded files (which is most of them because\n+    // it's unusual to `include_str!` a Rust file), but we can return an empty string.\n+    // Ideally, we'd be able to offer a precise expansion if the user asks for macro\n+    // expansion.\n+    let file_id = match relative_file(db, arg_id.into(), &path, true) {\n+        Some(file_id) => file_id,\n+        None => {\n+            return Ok((quote!(\"\"), FragmentKind::Expr));\n+        }\n+    };\n+\n+    let text = db.file_text(file_id);\n+    let text = &*text;\n+\n+    Ok((quote!(#text), FragmentKind::Expr))\n+}\n+\n fn get_env_inner(db: &dyn AstDatabase, arg_id: EagerMacroId, key: &str) -> Option<String> {\n     let krate = db.lookup_intern_eager_expansion(arg_id).krate;\n     db.crate_graph()[krate].env.get(key)"}, {"sha": "b475c8cc7278633520758530247b480a73bc680b", "filename": "crates/ra_hir_expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/446fd3f515177d044344580c4002c7647e728119/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446fd3f515177d044344580c4002c7647e728119/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fname.rs?ref=446fd3f515177d044344580c4002c7647e728119", "patch": "@@ -191,6 +191,7 @@ pub mod known {\n         stringify,\n         concat,\n         include,\n+        include_str,\n         format_args,\n         format_args_nl,\n         env,"}, {"sha": "cc079790ee3e8d793eba8a8225f155ca549c3466", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/446fd3f515177d044344580c4002c7647e728119/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446fd3f515177d044344580c4002c7647e728119/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=446fd3f515177d044344580c4002c7647e728119", "patch": "@@ -494,6 +494,7 @@ fn main() {\n }\n //- /src/main.rs\n #[rustc_builtin_macro] macro_rules! include {}\n+#[rustc_builtin_macro] macro_rules! include_str {}\n #[rustc_builtin_macro] macro_rules! concat {}\n #[rustc_builtin_macro] macro_rules! env {}\n \n@@ -512,6 +513,7 @@ fn main() {\n     let va = A;\n     let vb = B;\n     let should_be_str = message();\n+    let another_str = include_str!(\"main.rs\");\n }\n \"###,\n     )\n@@ -523,7 +525,15 @@ fn main() {\n     let res = server.send_request::<HoverRequest>(HoverParams {\n         text_document_position_params: TextDocumentPositionParams::new(\n             server.doc_id(\"src/main.rs\"),\n-            Position::new(18, 10),\n+            Position::new(19, 10),\n+        ),\n+        work_done_progress_params: Default::default(),\n+    });\n+    assert!(res.to_string().contains(\"&str\"));\n+    let res = server.send_request::<HoverRequest>(HoverParams {\n+        text_document_position_params: TextDocumentPositionParams::new(\n+            server.doc_id(\"src/main.rs\"),\n+            Position::new(20, 10),\n         ),\n         work_done_progress_params: Default::default(),\n     });\n@@ -532,23 +542,23 @@ fn main() {\n         GotoDefinitionParams {\n             text_document_position_params: TextDocumentPositionParams::new(\n                 server.doc_id(\"src/main.rs\"),\n-                Position::new(16, 9),\n+                Position::new(17, 9),\n             ),\n             work_done_progress_params: Default::default(),\n             partial_result_params: Default::default(),\n         },\n         json!([{\n             \"originSelectionRange\": {\n-                \"end\": { \"character\": 10, \"line\": 16 },\n-                \"start\": { \"character\": 8, \"line\": 16 }\n+                \"end\": { \"character\": 10, \"line\": 17 },\n+                \"start\": { \"character\": 8, \"line\": 17 }\n             },\n             \"targetRange\": {\n-                \"end\": { \"character\": 9, \"line\": 7 },\n-                \"start\": { \"character\": 0, \"line\": 6 }\n+                \"end\": { \"character\": 9, \"line\": 8 },\n+                \"start\": { \"character\": 0, \"line\": 7 }\n             },\n             \"targetSelectionRange\": {\n-                \"end\": { \"character\": 8, \"line\": 7 },\n-                \"start\": { \"character\": 7, \"line\": 7 }\n+                \"end\": { \"character\": 8, \"line\": 8 },\n+                \"start\": { \"character\": 7, \"line\": 8 }\n             },\n             \"targetUri\": \"file:///[..]src/main.rs\"\n         }]),\n@@ -557,23 +567,23 @@ fn main() {\n         GotoDefinitionParams {\n             text_document_position_params: TextDocumentPositionParams::new(\n                 server.doc_id(\"src/main.rs\"),\n-                Position::new(17, 9),\n+                Position::new(18, 9),\n             ),\n             work_done_progress_params: Default::default(),\n             partial_result_params: Default::default(),\n         },\n         json!([{\n             \"originSelectionRange\": {\n-                \"end\": { \"character\": 10, \"line\": 17 },\n-                \"start\": { \"character\": 8, \"line\": 17 }\n+                \"end\": { \"character\": 10, \"line\": 18 },\n+                \"start\": { \"character\": 8, \"line\": 18 }\n             },\n             \"targetRange\": {\n-                \"end\": { \"character\": 9, \"line\": 11 },\n-                \"start\": { \"character\": 0, \"line\":10 }\n+                \"end\": { \"character\": 9, \"line\": 12 },\n+                \"start\": { \"character\": 0, \"line\":11 }\n             },\n             \"targetSelectionRange\": {\n-                \"end\": { \"character\": 8, \"line\": 11 },\n-                \"start\": { \"character\": 7, \"line\": 11 }\n+                \"end\": { \"character\": 8, \"line\": 12 },\n+                \"start\": { \"character\": 7, \"line\": 12 }\n             },\n             \"targetUri\": \"file:///[..]src/main.rs\"\n         }]),"}]}