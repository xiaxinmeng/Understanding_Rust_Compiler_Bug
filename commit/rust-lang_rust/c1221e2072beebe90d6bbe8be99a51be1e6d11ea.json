{"sha": "c1221e2072beebe90d6bbe8be99a51be1e6d11ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMjIxZTIwNzJiZWViZTkwZDZiYmU4YmU5OWE1MWJlMWU2ZDExZWE=", "commit": {"author": {"name": "Beno\u00eet C", "email": "benoit.cortier@fried-world.eu", "date": "2018-11-16T20:34:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-16T20:34:12Z"}, "message": "Replace data.clone() by Arc::clone(&data) in mutex doc.\n\nArc::clone(&from) is considered as more idiomatic because it conveys more explicitly the meaning of the code.", "tree": {"sha": "7145f4319917f5614578a713798270715a2a7f5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7145f4319917f5614578a713798270715a2a7f5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1221e2072beebe90d6bbe8be99a51be1e6d11ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb7ynECRBK7hj4Ov3rIwAAdHIIABtAGgoEjWFih5yF/ytyfvBy\nqQdZDHDaCaaLDFy0RWDQN9wqYx3Av6xDvLMeDwqpvfoHl6AkJlH9YK8i6/4bMUXC\ntW/1OkG+f7fhEPIPOChxPBgaapOq/Zz1D1eo3gRNqOWK3tqKaQ4f5m98Xh5MH0Au\nTbHcA/Fq10YU8IwPZ2XhL74w8y7alR+LcwQEYdYJ2bRjiU59j4HbR3Khrq/m+lPF\nY+hz30qwQmUizVvGf/xdJmYA71ughZptMZ/QuKYa2g/Tb6ZqFpYhVDFCEu0d3W5v\nCunmKK5fa4EdmhRseTJoG/NCOglpnyH+1mwhYRCkuymjHDTH4FSKvU8awOwFNKA=\n=39uz\n-----END PGP SIGNATURE-----\n", "payload": "tree 7145f4319917f5614578a713798270715a2a7f5c\nparent 6b9b97bd9b704f85f0184f7a213cc4d62bd9654c\nauthor Beno\u00eet C <benoit.cortier@fried-world.eu> 1542400452 -0500\ncommitter GitHub <noreply@github.com> 1542400452 -0500\n\nReplace data.clone() by Arc::clone(&data) in mutex doc.\n\nArc::clone(&from) is considered as more idiomatic because it conveys more explicitly the meaning of the code."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1221e2072beebe90d6bbe8be99a51be1e6d11ea", "html_url": "https://github.com/rust-lang/rust/commit/c1221e2072beebe90d6bbe8be99a51be1e6d11ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1221e2072beebe90d6bbe8be99a51be1e6d11ea/comments", "author": {"login": "CBenoit", "id": 3809077, "node_id": "MDQ6VXNlcjM4MDkwNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3809077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CBenoit", "html_url": "https://github.com/CBenoit", "followers_url": "https://api.github.com/users/CBenoit/followers", "following_url": "https://api.github.com/users/CBenoit/following{/other_user}", "gists_url": "https://api.github.com/users/CBenoit/gists{/gist_id}", "starred_url": "https://api.github.com/users/CBenoit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CBenoit/subscriptions", "organizations_url": "https://api.github.com/users/CBenoit/orgs", "repos_url": "https://api.github.com/users/CBenoit/repos", "events_url": "https://api.github.com/users/CBenoit/events{/privacy}", "received_events_url": "https://api.github.com/users/CBenoit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b9b97bd9b704f85f0184f7a213cc4d62bd9654c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b9b97bd9b704f85f0184f7a213cc4d62bd9654c", "html_url": "https://github.com/rust-lang/rust/commit/6b9b97bd9b704f85f0184f7a213cc4d62bd9654c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ec9207ea45b4fc74592a519a6e6f171105b2fc7e", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1221e2072beebe90d6bbe8be99a51be1e6d11ea/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1221e2072beebe90d6bbe8be99a51be1e6d11ea/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=c1221e2072beebe90d6bbe8be99a51be1e6d11ea", "patch": "@@ -69,7 +69,7 @@ use sys_common::poison::{self, TryLockError, TryLockResult, LockResult};\n ///\n /// let (tx, rx) = channel();\n /// for _ in 0..N {\n-///     let (data, tx) = (data.clone(), tx.clone());\n+///     let (data, tx) = (Arc::clone(&data), tx.clone());\n ///     thread::spawn(move || {\n ///         // The shared state can only be accessed once the lock is held.\n ///         // Our non-atomic increment is safe because we're the only thread"}]}