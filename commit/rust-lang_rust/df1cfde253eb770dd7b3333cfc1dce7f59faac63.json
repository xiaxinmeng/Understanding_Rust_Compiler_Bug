{"sha": "df1cfde253eb770dd7b3333cfc1dce7f59faac63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMWNmZGUyNTNlYjc3MGRkN2IzMzMzY2ZjMWRjZTdmNTlmYWFjNjM=", "commit": {"author": {"name": "Tom Jakubowski", "email": "tom@crystae.net", "date": "2015-02-06T10:02:59Z"}, "committer": {"name": "Tom Jakubowski", "email": "tom@crystae.net", "date": "2015-02-06T11:22:29Z"}, "message": "Print full Type::ResolvedPaths starting with Self\n\n(e.g., `Self::Output`)\n\nThis doesn't actually \"resugar\" qualified paths like `<Self as\nFoo>::Output`, it just doesn't elide the prefix segments when rendering\ncleaned paths like `Self::Output`.\n\ncc #21145", "tree": {"sha": "66cf24415cd31ee821f4cb34f83debcafb2cca92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66cf24415cd31ee821f4cb34f83debcafb2cca92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df1cfde253eb770dd7b3333cfc1dce7f59faac63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df1cfde253eb770dd7b3333cfc1dce7f59faac63", "html_url": "https://github.com/rust-lang/rust/commit/df1cfde253eb770dd7b3333cfc1dce7f59faac63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df1cfde253eb770dd7b3333cfc1dce7f59faac63/comments", "author": {"login": "tomjakubowski", "id": 667901, "node_id": "MDQ6VXNlcjY2NzkwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjakubowski", "html_url": "https://github.com/tomjakubowski", "followers_url": "https://api.github.com/users/tomjakubowski/followers", "following_url": "https://api.github.com/users/tomjakubowski/following{/other_user}", "gists_url": "https://api.github.com/users/tomjakubowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjakubowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjakubowski/subscriptions", "organizations_url": "https://api.github.com/users/tomjakubowski/orgs", "repos_url": "https://api.github.com/users/tomjakubowski/repos", "events_url": "https://api.github.com/users/tomjakubowski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjakubowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tomjakubowski", "id": 667901, "node_id": "MDQ6VXNlcjY2NzkwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjakubowski", "html_url": "https://github.com/tomjakubowski", "followers_url": "https://api.github.com/users/tomjakubowski/followers", "following_url": "https://api.github.com/users/tomjakubowski/following{/other_user}", "gists_url": "https://api.github.com/users/tomjakubowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjakubowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjakubowski/subscriptions", "organizations_url": "https://api.github.com/users/tomjakubowski/orgs", "repos_url": "https://api.github.com/users/tomjakubowski/repos", "events_url": "https://api.github.com/users/tomjakubowski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjakubowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abae840f450c6f2b38f6ebf83cfcf1a7928138b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/abae840f450c6f2b38f6ebf83cfcf1a7928138b7", "html_url": "https://github.com/rust-lang/rust/commit/abae840f450c6f2b38f6ebf83cfcf1a7928138b7"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "cc2cf21095e413fc820db076e4a16b0e6a2f9bd2", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/df1cfde253eb770dd7b3333cfc1dce7f59faac63/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df1cfde253eb770dd7b3333cfc1dce7f59faac63/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=df1cfde253eb770dd7b3333cfc1dce7f59faac63", "patch": "@@ -460,7 +460,8 @@ impl fmt::Display for clean::Type {\n                 f.write_str(name)\n             }\n             clean::ResolvedPath{ did, ref typarams, ref path } => {\n-                try!(resolved_path(f, did, path, false));\n+                // Paths like Self::Output should be rendered with all segments\n+                try!(resolved_path(f, did, path, path.segments[0].name == \"Self\"));\n                 tybounds(f, typarams)\n             }\n             clean::Infer => write!(f, \"_\"),"}, {"sha": "74fca83f5f9157adb269616c7a19c4cfed6107e7", "filename": "src/test/run-make/rustdoc-assoc-types/Makefile", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/df1cfde253eb770dd7b3333cfc1dce7f59faac63/src%2Ftest%2Frun-make%2Frustdoc-assoc-types%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/df1cfde253eb770dd7b3333cfc1dce7f59faac63/src%2Ftest%2Frun-make%2Frustdoc-assoc-types%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-assoc-types%2FMakefile?ref=df1cfde253eb770dd7b3333cfc1dce7f59faac63", "patch": "@@ -0,0 +1,5 @@\n+-include ../tools.mk\n+\n+all: lib.rs\n+\t$(HOST_RPATH_ENV) $(RUSTDOC) -w html -o $(TMPDIR)/doc lib.rs\n+\t$(HTMLDOCCK) $(TMPDIR)/doc lib.rs"}, {"sha": "3e6e0ad56007289d55a8f6ca47a4389cd41bc678", "filename": "src/test/run-make/rustdoc-assoc-types/lib.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/df1cfde253eb770dd7b3333cfc1dce7f59faac63/src%2Ftest%2Frun-make%2Frustdoc-assoc-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df1cfde253eb770dd7b3333cfc1dce7f59faac63/src%2Ftest%2Frun-make%2Frustdoc-assoc-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-assoc-types%2Flib.rs?ref=df1cfde253eb770dd7b3333cfc1dce7f59faac63", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+// @has lib/trait.Index.html\n+pub trait Index<I: ?Sized> {\n+    // @has - '//*[@id=\"associatedtype.Output\"]//code' 'type Output: ?Sized'\n+    type Output: ?Sized;\n+    // @has - '//*[@id=\"tymethod.index\"]//code' \\\n+    //      \"fn index<'a>(&'a self, index: I) -> &'a Self::Output\"\n+    fn index<'a>(&'a self, index: I) -> &'a Self::Output;\n+}"}]}