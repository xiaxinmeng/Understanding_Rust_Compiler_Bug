{"sha": "83c73e327a95513256fb70d069b1cccd94fa6080", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYzczZTMyN2E5NTUxMzI1NmZiNzBkMDY5YjFjY2NkOTRmYTYwODA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-06-07T23:40:56Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-06-07T23:41:48Z"}, "message": "review changes - only show closure ids in verbose mode", "tree": {"sha": "4deaaf2ce13351d928eaf0a4cc9aa6e47268f720", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4deaaf2ce13351d928eaf0a4cc9aa6e47268f720"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83c73e327a95513256fb70d069b1cccd94fa6080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83c73e327a95513256fb70d069b1cccd94fa6080", "html_url": "https://github.com/rust-lang/rust/commit/83c73e327a95513256fb70d069b1cccd94fa6080", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83c73e327a95513256fb70d069b1cccd94fa6080/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79b0c89d509d673ee34097b5dcb0d609fea6619d", "url": "https://api.github.com/repos/rust-lang/rust/commits/79b0c89d509d673ee34097b5dcb0d609fea6619d", "html_url": "https://github.com/rust-lang/rust/commit/79b0c89d509d673ee34097b5dcb0d609fea6619d"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "acbd09f671ba16dc4d53e6efca9a014cc62afb88", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/83c73e327a95513256fb70d069b1cccd94fa6080/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c73e327a95513256fb70d069b1cccd94fa6080/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=83c73e327a95513256fb70d069b1cccd94fa6080", "patch": "@@ -311,7 +311,11 @@ pub fn ty_to_string<'tcx>(cx: &ctxt<'tcx>, typ: &ty::TyS<'tcx>) -> String {\n         let mut s = String::new();\n         s.push_str(\"[closure\");\n         push_sig_to_string(cx, &mut s, '(', ')', &cty.sig);\n-        s.push_str(&format!(\" id={:?}]\", did));\n+        if cx.sess.verbose() {\n+            s.push_str(&format!(\" id={:?}]\", did));\n+        } else {\n+            s.push(']');\n+        }\n         s\n     }\n \n@@ -412,11 +416,18 @@ pub fn ty_to_string<'tcx>(cx: &ctxt<'tcx>, typ: &ty::TyS<'tcx>) -> String {\n             closure_tys.get(did).map(|closure_type| {\n                 closure_to_string(cx, &closure_type.subst(cx, substs), did)\n             }).unwrap_or_else(|| {\n+                let id_str = if cx.sess.verbose() {\n+                    format!(\" id={:?}\", did)\n+                } else {\n+                    \"\".to_owned()\n+                };\n+\n+\n                 if did.krate == ast::LOCAL_CRATE {\n                     let span = cx.map.span(did.node);\n-                    format!(\"[closure {} id={:?}]\", span.repr(cx), did)\n+                    format!(\"[closure {}{}]\", span.repr(cx), id_str)\n                 } else {\n-                    format!(\"[closure id={:?}]\", did)\n+                    format!(\"[closure{}]\", id_str)\n                 }\n             })\n         }"}]}