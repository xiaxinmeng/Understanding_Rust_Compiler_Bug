{"sha": "8dba89823ac4994837b632fe63ce582a60addcd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYmE4OTgyM2FjNDk5NDgzN2I2MzJmZTYzY2U1ODJhNjBhZGRjZDY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-22T11:39:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-22T11:39:22Z"}, "message": "Rollup merge of #87288 - ijackson:rustdoc-theme, r=GuillaumeGomez\n\nrustdoc: Restore --default-theme, etc, by restoring varname escaping\n\nIn #86157\n\n    cd0f93193c84ddc6698f9b65909da71c084dcb74\n    Use Tera templates for rustdoc.\n\ndropped the following transformation from the keys of the default settings element's `data-` attribute names:\n\n    .map(|(k, v)| format!(r#\" data-{}=\"{}\"\"#, k.replace('-', \"_\"), Escape(v)))\n\nThe `Escape` part is indeed no longer needed, because Tera does that for us.  But the massaging of `-` to `_` is needed, for the (bizarre) reasons explained in the new comments.\n\nI have tested that the default theme function works again for me.  I have also verified that passing (in shell syntax)\n\n    '--default-theme=\"zork&\"'\n\nescapes the value in the HTML.\n\nCloses #87263", "tree": {"sha": "f09c7e40085a85ff102f05d50cbf7303275fd689", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f09c7e40085a85ff102f05d50cbf7303275fd689"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dba89823ac4994837b632fe63ce582a60addcd6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+VjqCRBK7hj4Ov3rIwAAG9cIAIAIYZrOBr5+/WF8BcWjE7/p\nSzUOyplm5f1PhWhpS5gOA4Z4547FxMjPSDxGLskskNQdp1N/cMyoXCbaJAXgRnOk\nDidGphB7uh5cEviMPQSZupKxY6u86r0pA9Dqrc0cVLWz32xauoRytgP9uicPJ3tO\nt6qC7h2sToJORllM7MuUNf6BXWoxUrfDO0aSmimsO8pB8a4RpgBjIcquPPfcF5ln\nJYAMTNYd1HaQHt1f1eddbIvnTZy1bt1FjMwqtDDazcTm9FI/9qszuLEQGKEoX8xn\nPzdLlCrLIw7PXj2xSnwYG1AT3tN1uAKATngsxKredfUtthLOTtqf6Tsw3DroLfI=\n=Askd\n-----END PGP SIGNATURE-----\n", "payload": "tree f09c7e40085a85ff102f05d50cbf7303275fd689\nparent e16d023a5e9fc26112699ef3ad5bbc9c5b55ab38\nparent df6bdd764a6b3bbef2f59f1dda37cfa81972d4fd\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1626953962 +0200\ncommitter GitHub <noreply@github.com> 1626953962 +0200\n\nRollup merge of #87288 - ijackson:rustdoc-theme, r=GuillaumeGomez\n\nrustdoc: Restore --default-theme, etc, by restoring varname escaping\n\nIn #86157\n\n    cd0f93193c84ddc6698f9b65909da71c084dcb74\n    Use Tera templates for rustdoc.\n\ndropped the following transformation from the keys of the default settings element's `data-` attribute names:\n\n    .map(|(k, v)| format!(r#\" data-{}=\"{}\"\"#, k.replace('-', \"_\"), Escape(v)))\n\nThe `Escape` part is indeed no longer needed, because Tera does that for us.  But the massaging of `-` to `_` is needed, for the (bizarre) reasons explained in the new comments.\n\nI have tested that the default theme function works again for me.  I have also verified that passing (in shell syntax)\n\n    '--default-theme=\"zork&\"'\n\nescapes the value in the HTML.\n\nCloses #87263\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dba89823ac4994837b632fe63ce582a60addcd6", "html_url": "https://github.com/rust-lang/rust/commit/8dba89823ac4994837b632fe63ce582a60addcd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dba89823ac4994837b632fe63ce582a60addcd6/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e16d023a5e9fc26112699ef3ad5bbc9c5b55ab38", "url": "https://api.github.com/repos/rust-lang/rust/commits/e16d023a5e9fc26112699ef3ad5bbc9c5b55ab38", "html_url": "https://github.com/rust-lang/rust/commit/e16d023a5e9fc26112699ef3ad5bbc9c5b55ab38"}, {"sha": "df6bdd764a6b3bbef2f59f1dda37cfa81972d4fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/df6bdd764a6b3bbef2f59f1dda37cfa81972d4fd", "html_url": "https://github.com/rust-lang/rust/commit/df6bdd764a6b3bbef2f59f1dda37cfa81972d4fd"}], "stats": {"total": 118, "additions": 95, "deletions": 23}, "files": [{"sha": "dedfe45aca49bd807af07a9b573d245375e98bbd", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -40,6 +40,7 @@ members = [\n exclude = [\n   \"build\",\n   \"compiler/rustc_codegen_cranelift\",\n+  \"src/test/rustdoc-gui\",\n   # HACK(eddyb) This hardcodes the fact that our CI uses `/checkout/obj`.\n   \"obj\",\n   # The `x` binary is a thin wrapper that calls `x.py`, which initializes"}, {"sha": "31f18d81c7c0fb403892b9eebdde35e19699e406", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -907,18 +907,27 @@ impl Step for RustdocGUI {\n         // We remove existing folder to be sure there won't be artifacts remaining.\n         let _ = fs::remove_dir_all(&out_dir);\n \n-        let src_path = \"src/test/rustdoc-gui/src\";\n+        let src_path = builder.build.src.join(\"src/test/rustdoc-gui/src\");\n         // We generate docs for the libraries present in the rustdoc-gui's src folder.\n-        let mut cargo = Command::new(&builder.initial_cargo);\n-        cargo\n-            .arg(\"doc\")\n-            .arg(\"--workspace\")\n-            .arg(\"--target-dir\")\n-            .arg(&out_dir)\n-            .env(\"RUSTDOC\", builder.rustdoc(self.compiler))\n-            .env(\"RUSTC\", builder.rustc(self.compiler))\n-            .current_dir(&builder.build.src.join(src_path));\n-        builder.run(&mut cargo);\n+        for entry in src_path.read_dir().expect(\"read_dir call failed\") {\n+            if let Ok(entry) = entry {\n+                let path = entry.path();\n+\n+                if !path.is_dir() {\n+                    continue;\n+                }\n+\n+                let mut cargo = Command::new(&builder.initial_cargo);\n+                cargo\n+                    .arg(\"doc\")\n+                    .arg(\"--target-dir\")\n+                    .arg(&out_dir)\n+                    .env(\"RUSTDOC\", builder.rustdoc(self.compiler))\n+                    .env(\"RUSTC\", builder.rustc(self.compiler))\n+                    .current_dir(path);\n+                builder.run(&mut cargo);\n+            }\n+        }\n \n         // We now run GUI tests.\n         let mut command = Command::new(&nodejs);"}, {"sha": "abd1fd2bf39a29c13702beaf484680ae232f53f8", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -459,7 +459,31 @@ impl Options {\n                 })\n                 .collect(),\n         ];\n-        let default_settings = default_settings.into_iter().flatten().collect();\n+        let default_settings = default_settings\n+            .into_iter()\n+            .flatten()\n+            .map(\n+                // The keys here become part of `data-` attribute names in the generated HTML.  The\n+                // browser does a strange mapping when converting them into attributes on the\n+                // `dataset` property on the DOM HTML Node:\n+                //   https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset\n+                //\n+                // The original key values we have are the same as the DOM storage API keys and the\n+                // command line options, so contain `-`.  Our Javascript needs to be able to look\n+                // these values up both in `dataset` and in the storage API, so it needs to be able\n+                // to convert the names back and forth.  Despite doing this kebab-case to\n+                // StudlyCaps transformation automatically, the JS DOM API does not provide a\n+                // mechanism for doing the just transformation on a string.  So we want to avoid\n+                // the StudlyCaps representation in the `dataset` property.\n+                //\n+                // We solve this by replacing all the `-`s with `_`s.  We do that here, when we\n+                // generate the `data-` attributes, and in the JS, when we look them up.  (See\n+                // `getSettingValue` in `storage.js.`) Converting `-` to `_` is simple in JS.\n+                //\n+                // The values will be HTML-escaped by the default Tera escaping.\n+                |(k, v)| (k.replace('-', \"_\"), v),\n+            )\n+            .collect();\n \n         let test_args = matches.opt_strs(\"test-args\");\n         let test_args: Vec<String> ="}, {"sha": "78ed17e6899e9aa17c0d526b7f93ba64cf3d51a2", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -22,6 +22,8 @@ function getSettingValue(settingName) {\n         return current;\n     }\n     if (settingsDataset !== null) {\n+        // See the comment for `default_settings.into_iter()` etc. in\n+        // `Options::from_matches` in `librustdoc/config.rs`.\n         var def = settingsDataset[settingName.replace(/-/g,'_')];\n         if (def !== undefined) {\n             return def;"}, {"sha": "68b674a11f2f57ded62e11017b400a7b85b42cb8", "filename": "src/test/rustdoc-gui/default-settings.goml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fdefault-settings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fdefault-settings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fdefault-settings.goml?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -0,0 +1,8 @@\n+// This test ensures that the default settings are correctly applied.\n+//\n+// The \"settings\" crate uses \"ayu\" as default setting, which is what we will\n+// check.\n+goto: file://|DOC_PATH|/settings/index.html\n+// Wait a bit to be sure the default theme is applied.\n+wait-for: 1000\n+assert-css: (\"body\", {\"background-color\": \"rgb(15, 20, 25)\"})"}, {"sha": "9c8c0c636f07fac38c91cf153cae9939dd75cfed", "filename": "src/test/rustdoc-gui/src/Cargo.toml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e16d023a5e9fc26112699ef3ad5bbc9c5b55ab38/src%2Ftest%2Frustdoc-gui%2Fsrc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e16d023a5e9fc26112699ef3ad5bbc9c5b55ab38/src%2Ftest%2Frustdoc-gui%2Fsrc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2FCargo.toml?ref=e16d023a5e9fc26112699ef3ad5bbc9c5b55ab38", "patch": "@@ -1,6 +0,0 @@\n-[workspace]\n-members = [\n-    \"test_docs\",\n-    \"lib2\",\n-    \"implementors\",\n-]"}, {"sha": "a5873ceb3256aa1bba532855545b43f5494fe8b8", "filename": "src/test/rustdoc-gui/src/lib2/Cargo.lock", "status": "renamed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2FCargo.lock?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -12,7 +12,3 @@ version = \"0.1.0\"\n dependencies = [\n  \"implementors\",\n ]\n-\n-[[package]]\n-name = \"test_docs\"\n-version = \"0.1.0\"", "previous_filename": "src/test/rustdoc-gui/src/Cargo.lock"}, {"sha": "2e37f3f667a02f9ae583ede9650964a0e720d1fd", "filename": "src/test/rustdoc-gui/src/lib2/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2FCargo.toml?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -7,4 +7,4 @@ edition = \"2018\"\n path = \"lib.rs\"\n \n [dependencies]\n-implementors = { path = \"../implementors\" }\n+implementors = { path = \"./implementors\" }"}, {"sha": "cad99a991a2c82add0969447aeca4b636b5d8619", "filename": "src/test/rustdoc-gui/src/lib2/implementors/Cargo.lock", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2FCargo.lock?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -0,0 +1,7 @@\n+# This file is automatically @generated by Cargo.\n+# It is not intended for manual editing.\n+version = 3\n+\n+[[package]]\n+name = \"implementors\"\n+version = \"0.1.0\""}, {"sha": "7ef1052c49fd2e0a360336cdb241a26a4bc8e7dc", "filename": "src/test/rustdoc-gui/src/lib2/implementors/Cargo.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2FCargo.toml?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "previous_filename": "src/test/rustdoc-gui/src/implementors/Cargo.toml"}, {"sha": "4b2f6962e30c50498ea7bdd381c8bbc77bc6c389", "filename": "src/test/rustdoc-gui/src/lib2/implementors/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Fimplementors%2Flib.rs?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "previous_filename": "src/test/rustdoc-gui/src/implementors/lib.rs"}, {"sha": "bbb8d11a2ede87a67b8da8c628d71a6da9273826", "filename": "src/test/rustdoc-gui/src/settings/.cargo/config.toml", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2F.cargo%2Fconfig.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2F.cargo%2Fconfig.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2F.cargo%2Fconfig.toml?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -0,0 +1,2 @@\n+[build]\n+rustdocflags = [\"--default-theme\", \"ayu\"]"}, {"sha": "6f0de1ac1e85b41b9b21764fc8df8b50e9a55187", "filename": "src/test/rustdoc-gui/src/settings/Cargo.lock", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2FCargo.lock?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -0,0 +1,7 @@\n+# This file is automatically @generated by Cargo.\n+# It is not intended for manual editing.\n+version = 3\n+\n+[[package]]\n+name = \"settings\"\n+version = \"0.1.0\""}, {"sha": "c8a211a47cafc9a393cd1a9d1873be0d17a2152a", "filename": "src/test/rustdoc-gui/src/settings/Cargo.toml", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2FCargo.toml?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -0,0 +1,7 @@\n+[package]\n+name = \"settings\"\n+version = \"0.1.0\"\n+edition = \"2018\"\n+\n+[lib]\n+path = \"lib.rs\""}, {"sha": "b76b4321d62aa8e066b24d213c79ccc8230b8d7b", "filename": "src/test/rustdoc-gui/src/settings/lib.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fsettings%2Flib.rs?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -0,0 +1 @@\n+pub fn foo() {}"}, {"sha": "6b80f6e88ef13e118a10eacef6c30b95c5102183", "filename": "src/test/rustdoc-gui/src/test_docs/Cargo.lock", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2FCargo.lock?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -0,0 +1,7 @@\n+# This file is automatically @generated by Cargo.\n+# It is not intended for manual editing.\n+version = 3\n+\n+[[package]]\n+name = \"test_docs\"\n+version = \"0.1.0\""}, {"sha": "ecb8f0b3b4876e48ac8722c51806c7ad10bc3826", "filename": "src/test/rustdoc/default-theme.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc%2Fdefault-theme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dba89823ac4994837b632fe63ce582a60addcd6/src%2Ftest%2Frustdoc%2Fdefault-theme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdefault-theme.rs?ref=8dba89823ac4994837b632fe63ce582a60addcd6", "patch": "@@ -0,0 +1,7 @@\n+// compile-flags: --default-theme ayu\n+\n+// @has default_theme/index.html\n+// @has - '//script[@id=\"default-settings\"]/@data-theme' 'ayu'\n+// @has - '//script[@id=\"default-settings\"]/@data-use_system_theme' 'false'\n+\n+pub fn whatever() {}"}]}