{"sha": "2d2163bd3a4815c1a68de7b4246503977d99b21b", "node_id": "C_kwDOAAsO6NoAKDJkMjE2M2JkM2E0ODE1YzFhNjhkZTdiNDI0NjUwMzk3N2Q5OWIyMWI", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-27T18:21:17Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-28T15:45:20Z"}, "message": "Same code for ty and hir impl items", "tree": {"sha": "43fc2fb027285b6c9ed995f336fd3b8571145861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43fc2fb027285b6c9ed995f336fd3b8571145861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d2163bd3a4815c1a68de7b4246503977d99b21b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d2163bd3a4815c1a68de7b4246503977d99b21b", "html_url": "https://github.com/rust-lang/rust/commit/2d2163bd3a4815c1a68de7b4246503977d99b21b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d2163bd3a4815c1a68de7b4246503977d99b21b/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d90138bec8f406b5c01c6bed4c0e597df2f3b00f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d90138bec8f406b5c01c6bed4c0e597df2f3b00f", "html_url": "https://github.com/rust-lang/rust/commit/d90138bec8f406b5c01c6bed4c0e597df2f3b00f"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "a7eced296106fc3e485abdd9b6c693f05658bc10", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/2d2163bd3a4815c1a68de7b4246503977d99b21b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d2163bd3a4815c1a68de7b4246503977d99b21b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=2d2163bd3a4815c1a68de7b4246503977d99b21b", "patch": "@@ -1036,20 +1036,18 @@ impl Clean<Item> for hir::ImplItem<'_> {\n                 }\n             };\n \n-            let what_rustc_thinks =\n+            let mut what_rustc_thinks =\n                 Item::from_def_id_and_parts(local_did, Some(self.ident.name), inner, cx);\n-            let parent_item = cx.tcx.hir().expect_item(cx.tcx.hir().get_parent_item(self.hir_id()));\n-            if let hir::ItemKind::Impl(impl_) = &parent_item.kind {\n-                if impl_.of_trait.is_some() {\n-                    // Trait impl items always inherit the impl's visibility --\n-                    // we don't want to show `pub`.\n-                    Item { visibility: Inherited, ..what_rustc_thinks }\n-                } else {\n-                    what_rustc_thinks\n-                }\n-            } else {\n-                panic!(\"found impl item with non-impl parent {:?}\", parent_item);\n+\n+            let impl_ref = cx.tcx.parent(local_did).and_then(|did| cx.tcx.impl_trait_ref(did));\n+\n+            // Trait impl items always inherit the impl's visibility --\n+            // we don't want to show `pub`.\n+            if impl_ref.is_some() {\n+                what_rustc_thinks.visibility = Inherited;\n             }\n+\n+            what_rustc_thinks\n         })\n     }\n }\n@@ -1204,16 +1202,18 @@ impl Clean<Item> for ty::AssocItem {\n             }\n         };\n \n-        let mut output = Item::from_def_id_and_parts(self.def_id, Some(self.name), kind, cx);\n+        let mut what_rustc_thinks =\n+            Item::from_def_id_and_parts(self.def_id, Some(self.name), kind, cx);\n \n-        // HACK: Override visibility for items in a trait implementation to match HIR\n         let impl_ref = tcx.parent(self.def_id).and_then(|did| tcx.impl_trait_ref(did));\n \n+        // Trait impl items always inherit the impl's visibility --\n+        // we don't want to show `pub`.\n         if impl_ref.is_some() {\n-            output.visibility = Visibility::Inherited;\n+            what_rustc_thinks.visibility = Visibility::Inherited;\n         }\n \n-        output\n+        what_rustc_thinks\n     }\n }\n "}]}