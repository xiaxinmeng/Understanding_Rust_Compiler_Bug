{"sha": "b883a52712fe9eccf8e5120b7a965ac3c9699d6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ODNhNTI3MTJmZTllY2NmOGU1MTIwYjdhOTY1YWMzYzk2OTlkNmY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-27T21:32:40Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-27T21:32:40Z"}, "message": "Enable fill_match_arms in macros", "tree": {"sha": "de2d601517dbf98b5d007ea8ac7c6634a4ec89a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de2d601517dbf98b5d007ea8ac7c6634a4ec89a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b883a52712fe9eccf8e5120b7a965ac3c9699d6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b883a52712fe9eccf8e5120b7a965ac3c9699d6f", "html_url": "https://github.com/rust-lang/rust/commit/b883a52712fe9eccf8e5120b7a965ac3c9699d6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b883a52712fe9eccf8e5120b7a965ac3c9699d6f/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "671757a5de0bbbdd8f42cd3c2d859a75288e3880", "url": "https://api.github.com/repos/rust-lang/rust/commits/671757a5de0bbbdd8f42cd3c2d859a75288e3880", "html_url": "https://github.com/rust-lang/rust/commit/671757a5de0bbbdd8f42cd3c2d859a75288e3880"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "7086e47d28536dbf9ca13c35543bf2259a8f05b3", "filename": "crates/assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b883a52712fe9eccf8e5120b7a965ac3c9699d6f/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b883a52712fe9eccf8e5120b7a965ac3c9699d6f/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=b883a52712fe9eccf8e5120b7a965ac3c9699d6f", "patch": "@@ -37,7 +37,7 @@ use crate::{\n // }\n // ```\n pub(crate) fn fill_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n-    let match_expr = ctx.find_node_at_offset::<ast::MatchExpr>()?;\n+    let match_expr = ctx.find_node_at_offset_with_descend::<ast::MatchExpr>()?;\n     let match_arm_list = match_expr.match_arm_list()?;\n \n     let expr = match_expr.expr()?;\n@@ -103,7 +103,7 @@ pub(crate) fn fill_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<\n         return None;\n     }\n \n-    let target = match_expr.syntax().text_range();\n+    let target = ctx.sema.original_range(match_expr.syntax()).range;\n     acc.add(\n         AssistId(\"fill_match_arms\", AssistKind::QuickFix),\n         \"Fill match arms\",\n@@ -113,7 +113,7 @@ pub(crate) fn fill_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<\n             let n_old_arms = new_arm_list.arms().count();\n             let new_arm_list = new_arm_list.append_arms(missing_arms);\n             let first_new_arm = new_arm_list.arms().nth(n_old_arms);\n-            let old_range = match_arm_list.syntax().text_range();\n+            let old_range = ctx.sema.original_range(match_arm_list.syntax()).range;\n             match (first_new_arm, ctx.config.snippet_cap) {\n                 (Some(first_new_arm), Some(cap)) => {\n                     let extend_lifetime;\n@@ -752,4 +752,36 @@ fn foo(opt: Option<i32>) {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn works_inside_macro_call() {\n+        check_assist(\n+            fill_match_arms,\n+            r#\"\n+macro_rules! m { ($expr:expr) => {$expr}}\n+enum Test {\n+    A,\n+    B,\n+    C,\n+}\n+\n+fn foo(t: Test) {\n+    m!(match t$0 {});\n+}\"#,\n+            r#\"macro_rules! m { ($expr:expr) => {$expr}}\n+enum Test {\n+    A,\n+    B,\n+    C,\n+}\n+\n+fn foo(t: Test) {\n+    m!(match t {\n+    $0Test::A => {}\n+    Test::B => {}\n+    Test::C => {}\n+});\n+}\"#,\n+        );\n+    }\n }"}]}