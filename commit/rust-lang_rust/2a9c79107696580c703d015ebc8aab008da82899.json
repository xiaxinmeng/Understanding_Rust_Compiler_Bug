{"sha": "2a9c79107696580c703d015ebc8aab008da82899", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhOWM3OTEwNzY5NjU4MGM3MDNkMDE1ZWJjOGFhYjAwOGRhODI4OTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-13T17:17:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-13T17:17:06Z"}, "message": "Rollup merge of #65246 - Wind-River:real_master_2, r=kennytm\n\nvxWorks: implement get_path() and get_mode() for File fmt::Debug", "tree": {"sha": "a03ec081b857c73435df01b28dfb6847165ae358", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a03ec081b857c73435df01b28dfb6847165ae358"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a9c79107696580c703d015ebc8aab008da82899", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdo1wSCRBK7hj4Ov3rIwAAdHIIADaciwpdrpcbQa/ZyBVKtYLQ\n5JAj8ZJpkM8D09Yhbe9GL+MV8F/sxTC5Xl161MAl2hYN9ge+ClSMl2XSm9IAISOl\n9a6J+xcc2oaBf5w0rIjo5BqoE6/sdHs85kR8VsKqj0PIS5m6H7r63XK+9xa4v/Wx\nGDf5WNZE2+VkBpRg7UC9uZmQ0rRDH2xZNXARdxE+ObbuiMo3kjEIEPuAm3idgKIc\nxZ+C5H529sLzPDxudCntlBpa8zaH6yrCK0GWRM28eyVq/558mRYyKMLbO8fXUqH4\nvgkw47JF8sK4rN/ZBXH3gAtM6XxAcrirVUROXZ/Lt/iK2lo1QXaARvvKI0m8nrI=\n=/5GZ\n-----END PGP SIGNATURE-----\n", "payload": "tree a03ec081b857c73435df01b28dfb6847165ae358\nparent 7c20a8ddb8efd3998dc4de049ff69e3161a01788\nparent 6afc5091b91c357285f224564d9f8416f52041b1\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570987026 +0200\ncommitter GitHub <noreply@github.com> 1570987026 +0200\n\nRollup merge of #65246 - Wind-River:real_master_2, r=kennytm\n\nvxWorks: implement get_path() and get_mode() for File fmt::Debug\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a9c79107696580c703d015ebc8aab008da82899", "html_url": "https://github.com/rust-lang/rust/commit/2a9c79107696580c703d015ebc8aab008da82899", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a9c79107696580c703d015ebc8aab008da82899/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c20a8ddb8efd3998dc4de049ff69e3161a01788", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c20a8ddb8efd3998dc4de049ff69e3161a01788", "html_url": "https://github.com/rust-lang/rust/commit/7c20a8ddb8efd3998dc4de049ff69e3161a01788"}, {"sha": "6afc5091b91c357285f224564d9f8416f52041b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6afc5091b91c357285f224564d9f8416f52041b1", "html_url": "https://github.com/rust-lang/rust/commit/6afc5091b91c357285f224564d9f8416f52041b1"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "adb08d8005ad486ed3c7701de7812a90c498b9fb", "filename": "src/libstd/sys/vxworks/fs.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2a9c79107696580c703d015ebc8aab008da82899/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a9c79107696580c703d015ebc8aab008da82899/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs?ref=2a9c79107696580c703d015ebc8aab008da82899", "patch": "@@ -400,13 +400,27 @@ impl FromInner<c_int> for File {\n \n impl fmt::Debug for File {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        fn get_path(_fd: c_int) -> Option<PathBuf> {\n-            // FIXME(#:(): implement this for VxWorks\n-            None\n+        fn get_path(fd: c_int) -> Option<PathBuf> {\n+            let mut buf = vec![0;libc::PATH_MAX as usize];\n+            let n = unsafe { libc::ioctl(fd, libc::FIOGETNAME, buf.as_ptr()) };\n+            if n == -1 {\n+                return None;\n+            }\n+            let l = buf.iter().position(|&c| c == 0).unwrap();\n+            buf.truncate(l as usize);\n+            Some(PathBuf::from(OsString::from_vec(buf)))\n         }\n-        fn get_mode(_fd: c_int) -> Option<(bool, bool)> {\n-            // FIXME(#:(): implement this for VxWorks\n-            None\n+        fn get_mode(fd: c_int) -> Option<(bool, bool)> {\n+            let mode = unsafe { libc::fcntl(fd, libc::F_GETFL) };\n+            if mode == -1 {\n+                return None;\n+            }\n+            match mode & libc::O_ACCMODE {\n+                libc::O_RDONLY => Some((true, false)),\n+                libc::O_RDWR => Some((true, true)),\n+                libc::O_WRONLY => Some((false, true)),\n+                _ => None\n+            }\n         }\n \n         let fd = self.0.raw();"}]}