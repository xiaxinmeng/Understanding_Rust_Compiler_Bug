{"sha": "be138ed2bd6a4c4bf1c80287569709a9905e4891", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMTM4ZWQyYmQ2YTRjNGJmMWM4MDI4NzU2OTcwOWE5OTA1ZTQ4OTE=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2015-01-20T22:04:17Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2015-01-22T09:22:04Z"}, "message": "Add `#[rustc_on_unimplemented]` annotations to more traits", "tree": {"sha": "39fcb029ac97f152872750b83ffd1b729b07a66f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39fcb029ac97f152872750b83ffd1b729b07a66f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be138ed2bd6a4c4bf1c80287569709a9905e4891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be138ed2bd6a4c4bf1c80287569709a9905e4891", "html_url": "https://github.com/rust-lang/rust/commit/be138ed2bd6a4c4bf1c80287569709a9905e4891", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be138ed2bd6a4c4bf1c80287569709a9905e4891/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d2056a7e3e52b2aec41662cfd960e0eafe8494c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2056a7e3e52b2aec41662cfd960e0eafe8494c", "html_url": "https://github.com/rust-lang/rust/commit/5d2056a7e3e52b2aec41662cfd960e0eafe8494c"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "60403d1c0117988e0c278429af58f5839c154c00", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be138ed2bd6a4c4bf1c80287569709a9905e4891/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be138ed2bd6a4c4bf1c80287569709a9905e4891/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=be138ed2bd6a4c4bf1c80287569709a9905e4891", "patch": "@@ -243,6 +243,8 @@ pub trait Show {\n /// Format trait for the `:?` format. Useful for debugging, most all types\n /// should implement this.\n #[unstable = \"I/O and core have yet to be reconciled\"]\n+#[rustc_on_unimplemented = \"`{Self}` cannot be formatted using `:?`; if it is defined in your \\\n+                            crate, add `#[derive(Debug)]` or manually implement it\"]\n pub trait Debug {\n     /// Formats the value using the given formatter.\n     fn fmt(&self, &mut Formatter) -> Result;\n@@ -266,6 +268,8 @@ pub trait String {\n /// When a value can be semantically expressed as a String, this trait may be\n /// used. It corresponds to the default format, `{}`.\n #[unstable = \"I/O and core have yet to be reconciled\"]\n+#[rustc_on_unimplemented = \"`{Self}` cannot be formatted with the default formatter; try using \\\n+                            `:?` instead if you are using a format string\"]\n pub trait Display {\n     /// Formats the value using the given formatter.\n     fn fmt(&self, &mut Formatter) -> Result;"}, {"sha": "c31ad56fe5bab4e3f33001f6c27f4f30eec9ae9c", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be138ed2bd6a4c4bf1c80287569709a9905e4891/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be138ed2bd6a4c4bf1c80287569709a9905e4891/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=be138ed2bd6a4c4bf1c80287569709a9905e4891", "patch": "@@ -82,6 +82,8 @@ use uint;\n /// else.\n #[lang=\"iterator\"]\n #[stable]\n+#[rustc_on_unimplemented = \"`{Self}` is not an iterator; maybe try calling `.iter()` or a similar \\\n+                            method\"]\n pub trait Iterator {\n     #[stable]\n     type Item;"}, {"sha": "f32552f300cc22eef7fbcd6017bbb679892eb034", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/be138ed2bd6a4c4bf1c80287569709a9905e4891/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be138ed2bd6a4c4bf1c80287569709a9905e4891/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=be138ed2bd6a4c4bf1c80287569709a9905e4891", "patch": "@@ -30,13 +30,15 @@ use clone::Clone;\n /// Types able to be transferred across task boundaries.\n #[unstable = \"will be overhauled with new lifetime rules; see RFC 458\"]\n #[lang=\"send\"]\n+#[rustc_on_unimplemented = \"`{Self}` cannot be sent between threads safely\"]\n pub unsafe trait Send: 'static {\n     // empty.\n }\n \n /// Types with a constant size known at compile-time.\n #[stable]\n #[lang=\"sized\"]\n+#[rustc_on_unimplemented = \"`{Self}` does not have a constant size known at compile-time\"]\n pub trait Sized {\n     // Empty.\n }\n@@ -193,6 +195,7 @@ pub trait Copy {\n /// `transmute`-ing from `&T` to `&mut T` is illegal).\n #[unstable = \"will be overhauled with new lifetime rules; see RFC 458\"]\n #[lang=\"sync\"]\n+#[rustc_on_unimplemented = \"`{Self}` cannot be shared between threads safely\"]\n pub unsafe trait Sync {\n     // Empty\n }"}]}