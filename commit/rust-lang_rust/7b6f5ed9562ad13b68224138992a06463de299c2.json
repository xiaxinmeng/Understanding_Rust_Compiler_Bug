{"sha": "7b6f5ed9562ad13b68224138992a06463de299c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNmY1ZWQ5NTYyYWQxM2I2ODIyNDEzODk5MmEwNjQ2M2RlMjk5YzI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-01T18:46:07Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-01T18:46:07Z"}, "message": "`delay_span_bug` when codegen cannot select obligation\n\nFix #69602, introduced in #60126 by letting the compiler continue past\ntype checking after encountering errors.", "tree": {"sha": "b4ee2b60742442ca5712bb8bfbca82a1c54bfc0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4ee2b60742442ca5712bb8bfbca82a1c54bfc0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b6f5ed9562ad13b68224138992a06463de299c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b6f5ed9562ad13b68224138992a06463de299c2", "html_url": "https://github.com/rust-lang/rust/commit/7b6f5ed9562ad13b68224138992a06463de299c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b6f5ed9562ad13b68224138992a06463de299c2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "360e42de82152c4e1a6e70d2f228dd3748c50c8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/360e42de82152c4e1a6e70d2f228dd3748c50c8d", "html_url": "https://github.com/rust-lang/rust/commit/360e42de82152c4e1a6e70d2f228dd3748c50c8d"}], "stats": {"total": 65, "additions": 55, "deletions": 10}, "files": [{"sha": "27d9435ac57dd6d749e0bbc6e308e69cbe2cab0f", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=7b6f5ed9562ad13b68224138992a06463de299c2", "patch": "@@ -650,7 +650,7 @@ rustc_queries! {\n     Codegen {\n         query codegen_fulfill_obligation(\n             key: (ty::ParamEnv<'tcx>, ty::PolyTraitRef<'tcx>)\n-        ) -> Vtable<'tcx, ()> {\n+        ) -> Option<Vtable<'tcx, ()>> {\n             no_force\n             cache_on_disk_if { true }\n             desc { |tcx|"}, {"sha": "f499565e9192a8590f526b80f7bb3e76f1711f99", "filename": "src/librustc_infer/traits/codegen/mod.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Flibrustc_infer%2Ftraits%2Fcodegen%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Flibrustc_infer%2Ftraits%2Fcodegen%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fcodegen%2Fmod.rs?ref=7b6f5ed9562ad13b68224138992a06463de299c2", "patch": "@@ -19,7 +19,7 @@ use rustc::ty::{self, TyCtxt};\n pub fn codegen_fulfill_obligation<'tcx>(\n     ty: TyCtxt<'tcx>,\n     (param_env, trait_ref): (ty::ParamEnv<'tcx>, ty::PolyTraitRef<'tcx>),\n-) -> Vtable<'tcx, ()> {\n+) -> Option<Vtable<'tcx, ()>> {\n     // Remove any references to regions; this helps improve caching.\n     let trait_ref = ty.erase_regions(&trait_ref);\n \n@@ -47,11 +47,15 @@ pub fn codegen_fulfill_obligation<'tcx>(\n                 // leading to an ambiguous result. So report this as an\n                 // overflow bug, since I believe this is the only case\n                 // where ambiguity can result.\n-                bug!(\n-                    \"Encountered ambiguity selecting `{:?}` during codegen, \\\n-                      presuming due to overflow\",\n-                    trait_ref\n-                )\n+                infcx.tcx.sess.delay_span_bug(\n+                    rustc_span::DUMMY_SP,\n+                    &format!(\n+                        \"encountered ambiguity selecting `{:?}` during codegen, presuming due to \\\n+                         overflow or prior type error\",\n+                        trait_ref\n+                    ),\n+                );\n+                return None;\n             }\n             Err(e) => {\n                 bug!(\"Encountered error `{:?}` selecting `{:?}` during codegen\", e, trait_ref)\n@@ -71,7 +75,7 @@ pub fn codegen_fulfill_obligation<'tcx>(\n         let vtable = infcx.drain_fulfillment_cx_or_panic(&mut fulfill_cx, &vtable);\n \n         info!(\"Cache miss: {:?} => {:?}\", trait_ref, vtable);\n-        vtable\n+        Some(vtable)\n     })\n }\n "}, {"sha": "3dff06967e50e9b65db521a750a3c127ae0274d5", "filename": "src/librustc_mir/monomorphize/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs?ref=7b6f5ed9562ad13b68224138992a06463de299c2", "patch": "@@ -18,7 +18,7 @@ pub fn custom_coerce_unsize_info<'tcx>(\n     });\n \n     match tcx.codegen_fulfill_obligation((ty::ParamEnv::reveal_all(), trait_ref)) {\n-        traits::VtableImpl(traits::VtableImplData { impl_def_id, .. }) => {\n+        Some(traits::VtableImpl(traits::VtableImplData { impl_def_id, .. })) => {\n             tcx.coerce_unsized_info(impl_def_id).custom_kind.unwrap()\n         }\n         vtable => {"}, {"sha": "c2b2196e74c61155a17b604a65ae3c6d19dbc2bb", "filename": "src/librustc_ty/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Flibrustc_ty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Flibrustc_ty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Finstance.rs?ref=7b6f5ed9562ad13b68224138992a06463de299c2", "patch": "@@ -70,7 +70,7 @@ fn resolve_associated_item<'tcx>(\n     );\n \n     let trait_ref = ty::TraitRef::from_method(tcx, trait_id, rcvr_substs);\n-    let vtbl = tcx.codegen_fulfill_obligation((param_env, ty::Binder::bind(trait_ref)));\n+    let vtbl = tcx.codegen_fulfill_obligation((param_env, ty::Binder::bind(trait_ref)))?;\n \n     // Now that we know which impl is being used, we can dispatch to\n     // the actual function:"}, {"sha": "2c5257ce063cb525897cd2c19a1b4380f1d0c37d", "filename": "src/test/ui/issues/issue-69602-type-err-during-codegen-ice.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.rs?ref=7b6f5ed9562ad13b68224138992a06463de299c2", "patch": "@@ -0,0 +1,22 @@\n+trait TraitA {\n+    const VALUE: usize;\n+}\n+\n+struct A;\n+impl TraitA for A {\n+  const VALUE: usize = 0;\n+}\n+\n+trait TraitB {\n+    type MyA: TraitA;\n+    const VALUE: usize = Self::MyA::VALUE;\n+}\n+\n+struct B;\n+impl TraitB for B { //~ ERROR not all trait items implemented, missing: `MyA`\n+    type M   = A; //~ ERROR type `M` is not a member of trait `TraitB`\n+}\n+\n+fn main() {\n+    let _ = [0; B::VALUE];\n+}"}, {"sha": "8ae0f8b804c93e822b6b5f97fa81105cb3215dcc", "filename": "src/test/ui/issues/issue-69602-type-err-during-codegen-ice.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b6f5ed9562ad13b68224138992a06463de299c2/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.stderr?ref=7b6f5ed9562ad13b68224138992a06463de299c2", "patch": "@@ -0,0 +1,19 @@\n+error[E0437]: type `M` is not a member of trait `TraitB`\n+  --> $DIR/issue-69602-type-err-during-codegen-ice.rs:17:5\n+   |\n+LL |     type M   = A;\n+   |     ^^^^^^^^^^^^^ not a member of trait `TraitB`\n+\n+error[E0046]: not all trait items implemented, missing: `MyA`\n+  --> $DIR/issue-69602-type-err-during-codegen-ice.rs:16:1\n+   |\n+LL |     type MyA: TraitA;\n+   |     ----------------- `MyA` from trait\n+...\n+LL | impl TraitB for B {\n+   | ^^^^^^^^^^^^^^^^^ missing `MyA` in implementation\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0046, E0437.\n+For more information about an error, try `rustc --explain E0046`."}]}