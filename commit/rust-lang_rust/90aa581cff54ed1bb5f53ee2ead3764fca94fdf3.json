{"sha": "90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYWE1ODFjZmY1NGVkMWJiNWY1M2VlMmVhZDM3NjRmY2E5NGZkZjM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-01-13T00:31:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-01-21T18:34:16Z"}, "message": "Remove unused stability levels from compiler", "tree": {"sha": "2e2487396253ce6371325d9b35494108719cea99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e2487396253ce6371325d9b35494108719cea99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "html_url": "https://github.com/rust-lang/rust/commit/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6869645e86c91544b8737b89809bdf10bef536d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6869645e86c91544b8737b89809bdf10bef536d9", "html_url": "https://github.com/rust-lang/rust/commit/6869645e86c91544b8737b89809bdf10bef536d9"}], "stats": {"total": 40, "additions": 8, "deletions": 32}, "files": [{"sha": "8fcd753b4a837b1903e5711b059b357bb00066e1", "filename": "src/librbml/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibrbml%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibrbml%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrbml%2Flib.rs?ref=90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "patch": "@@ -845,7 +845,10 @@ pub mod writer {\n \n     // Set to true to generate more debugging in EBML code.\n     // Totally lame approach.\n+    #[cfg(not(ndebug))]\n     static DEBUG: bool = true;\n+    #[cfg(ndebug)]\n+    static DEBUG: bool = false;\n \n     impl<'a, W: Writer + Seek> Encoder<'a, W> {\n         // used internally to emit things like the vector length and so on"}, {"sha": "314cde10014132dfd2a7334a8456f3741605ce55", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "patch": "@@ -660,9 +660,6 @@ impl LintPass for UnusedAttributes {\n             // FIXME: #14407 these are only looked at on-demand so we can't\n             // guarantee they'll have already been checked\n             \"deprecated\",\n-            \"experimental\",\n-            \"frozen\",\n-            \"locked\",\n             \"must_use\",\n             \"stable\",\n             \"unstable\","}, {"sha": "ad13ab59c03bae31b3ef14c09a4f7cf74527a309", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "patch": "@@ -765,9 +765,6 @@ impl fmt::String for ModuleSummary {\n             try!(write!(f, \"<span class='summary Unstable' \\\n                             style='width: {:.4}%; display: inline-block'>&nbsp</span>\",\n                         (100 * cnt.unstable) as f64/tot as f64));\n-            try!(write!(f, \"<span class='summary Experimental' \\\n-                            style='width: {:.4}%; display: inline-block'>&nbsp</span>\",\n-                        (100 * cnt.experimental) as f64/tot as f64));\n             try!(write!(f, \"<span class='summary Deprecated' \\\n                             style='width: {:.4}%; display: inline-block'>&nbsp</span>\",\n                         (100 * cnt.deprecated) as f64/tot as f64));\n@@ -786,12 +783,11 @@ impl fmt::String for ModuleSummary {\n         let mut context = Vec::new();\n \n         let tot = self.counts.total();\n-        let (stable, unstable, experimental, deprecated, unmarked) = if tot == 0 {\n-            (0, 0, 0, 0, 0)\n+        let (stable, unstable, deprecated, unmarked) = if tot == 0 {\n+            (0, 0, 0, 0)\n         } else {\n             ((100 * self.counts.stable)/tot,\n              (100 * self.counts.unstable)/tot,\n-             (100 * self.counts.experimental)/tot,\n              (100 * self.counts.deprecated)/tot,\n              (100 * self.counts.unmarked)/tot)\n         };\n@@ -804,13 +800,12 @@ its children (percentages total for {name}):\n <blockquote>\n <a class='stability Stable'></a> stable ({}%),<br/>\n <a class='stability Unstable'></a> unstable ({}%),<br/>\n-<a class='stability Experimental'></a> experimental ({}%),<br/>\n <a class='stability Deprecated'></a> deprecated ({}%),<br/>\n <a class='stability Unmarked'></a> unmarked ({}%)\n </blockquote>\n The counts do not include methods or trait\n implementations that are visible only through a re-exported type.\",\n-stable, unstable, experimental, deprecated, unmarked,\n+stable, unstable, deprecated, unmarked,\n name=self.name));\n         try!(write!(f, \"<table>\"));\n         try!(fmt_inner(f, &mut context, self));"}, {"sha": "b03b3239dabcb69dc33e7b8caf1d8169e129601f", "filename": "src/librustdoc/stability_summary.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibrustdoc%2Fstability_summary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibrustdoc%2Fstability_summary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fstability_summary.rs?ref=90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "patch": "@@ -16,7 +16,7 @@\n use std::cmp::Ordering;\n use std::ops::Add;\n \n-use syntax::attr::{Deprecated, Experimental, Unstable, Stable, Frozen, Locked};\n+use syntax::attr::{Deprecated, Unstable, Stable};\n use syntax::ast::Public;\n \n use clean::{Crate, Item, ModuleItem, Module, EnumItem, Enum};\n@@ -30,11 +30,8 @@ use html::render::cache;\n #[derive(Copy)]\n pub struct Counts {\n     pub deprecated: uint,\n-    pub experimental: uint,\n     pub unstable: uint,\n     pub stable: uint,\n-    pub frozen: uint,\n-    pub locked: uint,\n \n     /// No stability level, inherited or otherwise.\n     pub unmarked: uint,\n@@ -46,11 +43,8 @@ impl Add for Counts {\n     fn add(self, other: Counts) -> Counts {\n         Counts {\n             deprecated:   self.deprecated   + other.deprecated,\n-            experimental: self.experimental + other.experimental,\n             unstable:     self.unstable     + other.unstable,\n             stable:       self.stable       + other.stable,\n-            frozen:       self.frozen       + other.frozen,\n-            locked:       self.locked       + other.locked,\n             unmarked:     self.unmarked     + other.unmarked,\n         }\n     }\n@@ -60,18 +54,14 @@ impl Counts {\n     fn zero() -> Counts {\n         Counts {\n             deprecated:   0,\n-            experimental: 0,\n             unstable:     0,\n             stable:       0,\n-            frozen:       0,\n-            locked:       0,\n             unmarked:     0,\n         }\n     }\n \n     pub fn total(&self) -> uint {\n-        self.deprecated + self.experimental + self.unstable + self.stable +\n-            self.frozen + self.locked + self.unmarked\n+        self.deprecated + self.unstable + self.stable + self.unmarked\n     }\n }\n \n@@ -109,11 +99,8 @@ fn count_stability(stab: Option<&Stability>) -> Counts {\n         None             => Counts { unmarked: 1,     .. Counts::zero() },\n         Some(ref stab) => match stab.level {\n             Deprecated   => Counts { deprecated: 1,   .. Counts::zero() },\n-            Experimental => Counts { experimental: 1, .. Counts::zero() },\n             Unstable     => Counts { unstable: 1,     .. Counts::zero() },\n             Stable       => Counts { stable: 1,       .. Counts::zero() },\n-            Frozen       => Counts { frozen: 1,       .. Counts::zero() },\n-            Locked       => Counts { locked: 1,       .. Counts::zero() },\n         }\n     }\n }"}, {"sha": "74d7ddc21c3b206f6dbcc59c18743761a51f1224", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90aa581cff54ed1bb5f53ee2ead3764fca94fdf3/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=90aa581cff54ed1bb5f53ee2ead3764fca94fdf3", "patch": "@@ -351,11 +351,8 @@ pub struct Stability {\n #[derive(RustcEncodable,RustcDecodable,PartialEq,PartialOrd,Clone,Show,Copy)]\n pub enum StabilityLevel {\n     Deprecated,\n-    Experimental,\n     Unstable,\n     Stable,\n-    Frozen,\n-    Locked\n }\n \n impl fmt::String for StabilityLevel {\n@@ -372,11 +369,8 @@ pub fn find_stability_generic<'a,\n     for attr in attrs {\n         let level = match attr.name().get() {\n             \"deprecated\" => Deprecated,\n-            \"experimental\" => Experimental,\n             \"unstable\" => Unstable,\n             \"stable\" => Stable,\n-            \"frozen\" => Frozen,\n-            \"locked\" => Locked,\n             _ => continue // not a stability level\n         };\n "}]}