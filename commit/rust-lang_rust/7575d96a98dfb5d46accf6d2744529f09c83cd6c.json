{"sha": "7575d96a98dfb5d46accf6d2744529f09c83cd6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NzVkOTZhOThkZmI1ZDQ2YWNjZjZkMjc0NDUyOWYwOWM4M2NkNmM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-10T10:12:21Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-10T10:12:21Z"}, "message": "Reformat trans skip condition", "tree": {"sha": "a44760b9450cb535b480c957470e223fb9d4c46e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a44760b9450cb535b480c957470e223fb9d4c46e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7575d96a98dfb5d46accf6d2744529f09c83cd6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7575d96a98dfb5d46accf6d2744529f09c83cd6c", "html_url": "https://github.com/rust-lang/rust/commit/7575d96a98dfb5d46accf6d2744529f09c83cd6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7575d96a98dfb5d46accf6d2744529f09c83cd6c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8056506b1b8aef3dc1af1d6256e0665fbfc79ae9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8056506b1b8aef3dc1af1d6256e0665fbfc79ae9", "html_url": "https://github.com/rust-lang/rust/commit/8056506b1b8aef3dc1af1d6256e0665fbfc79ae9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "514d76a4129ecfefb49f2108c24c0f02c764e830", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7575d96a98dfb5d46accf6d2744529f09c83cd6c/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7575d96a98dfb5d46accf6d2744529f09c83cd6c/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=7575d96a98dfb5d46accf6d2744529f09c83cd6c", "patch": "@@ -147,9 +147,9 @@ pub(crate) fn link_binary(sess: &Session,\n     for &crate_type in sess.crate_types.borrow().iter() {\n         // Ignore executable crates if we have -Z no-trans, as they will error.\n         let output_metadata = sess.opts.output_types.contains_key(&OutputType::Metadata);\n-        let ignore_executable = sess.opts.debugging_opts.no_trans ||\n-            !(sess.opts.output_types.should_trans() || output_metadata);\n-        if crate_type == config::CrateTypeExecutable && ignore_executable {\n+        if (sess.opts.debugging_opts.no_trans || !sess.opts.output_types.should_trans()) &&\n+           !output_metadata &&\n+           crate_type == config::CrateTypeExecutable {\n             continue;\n         }\n "}]}