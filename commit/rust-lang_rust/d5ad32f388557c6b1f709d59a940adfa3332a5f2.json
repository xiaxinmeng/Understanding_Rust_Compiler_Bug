{"sha": "d5ad32f388557c6b1f709d59a940adfa3332a5f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YWQzMmYzODg1NTdjNmIxZjcwOWQ1OWE5NDBhZGZhMzMzMmE1ZjI=", "commit": {"author": {"name": "Kiet Tran", "email": "ktt3ja@gmail.com", "date": "2013-12-12T01:49:46Z"}, "committer": {"name": "Kiet Tran", "email": "ktt3ja@gmail.com", "date": "2013-12-14T05:26:15Z"}, "message": "Check more live Path nodes in dead-code pass", "tree": {"sha": "fa1d1bcc4206106e7affe2d9e0c0e63a6627a5b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa1d1bcc4206106e7affe2d9e0c0e63a6627a5b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5ad32f388557c6b1f709d59a940adfa3332a5f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ad32f388557c6b1f709d59a940adfa3332a5f2", "html_url": "https://github.com/rust-lang/rust/commit/d5ad32f388557c6b1f709d59a940adfa3332a5f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5ad32f388557c6b1f709d59a940adfa3332a5f2/comments", "author": {"login": "ktt3ja", "id": 1735399, "node_id": "MDQ6VXNlcjE3MzUzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1735399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktt3ja", "html_url": "https://github.com/ktt3ja", "followers_url": "https://api.github.com/users/ktt3ja/followers", "following_url": "https://api.github.com/users/ktt3ja/following{/other_user}", "gists_url": "https://api.github.com/users/ktt3ja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktt3ja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktt3ja/subscriptions", "organizations_url": "https://api.github.com/users/ktt3ja/orgs", "repos_url": "https://api.github.com/users/ktt3ja/repos", "events_url": "https://api.github.com/users/ktt3ja/events{/privacy}", "received_events_url": "https://api.github.com/users/ktt3ja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktt3ja", "id": 1735399, "node_id": "MDQ6VXNlcjE3MzUzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1735399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktt3ja", "html_url": "https://github.com/ktt3ja", "followers_url": "https://api.github.com/users/ktt3ja/followers", "following_url": "https://api.github.com/users/ktt3ja/following{/other_user}", "gists_url": "https://api.github.com/users/ktt3ja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktt3ja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktt3ja/subscriptions", "organizations_url": "https://api.github.com/users/ktt3ja/orgs", "repos_url": "https://api.github.com/users/ktt3ja/repos", "events_url": "https://api.github.com/users/ktt3ja/events{/privacy}", "received_events_url": "https://api.github.com/users/ktt3ja/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64ecb78716891b0d2a1663b585480e00652cf4b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/64ecb78716891b0d2a1663b585480e00652cf4b4", "html_url": "https://github.com/rust-lang/rust/commit/64ecb78716891b0d2a1663b585480e00652cf4b4"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "a4e2c9742c8b0e833ca9296bd04aedb21e38fe30", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d5ad32f388557c6b1f709d59a940adfa3332a5f2/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ad32f388557c6b1f709d59a940adfa3332a5f2/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=d5ad32f388557c6b1f709d59a940adfa3332a5f2", "patch": "@@ -61,11 +61,10 @@ impl MarkSymbolVisitor {\n         }\n     }\n \n-    fn lookup_and_handle_definition(&mut self, id: &ast::NodeId,\n-                                    span: codemap::Span) {\n+    fn lookup_and_handle_definition(&mut self, id: &ast::NodeId) {\n         let def = match self.tcx.def_map.find(id) {\n             Some(&def) => def,\n-            None => self.tcx.sess.span_bug(span, \"def ID not in def map?!\"),\n+            None => return\n         };\n         let def_id = match def {\n             ast::DefVariant(enum_id, _, _) => Some(enum_id),\n@@ -129,9 +128,6 @@ impl Visitor<()> for MarkSymbolVisitor {\n \n     fn visit_expr(&mut self, expr: @ast::Expr, _: ()) {\n         match expr.node {\n-            ast::ExprPath(_) | ast::ExprStruct(..) => {\n-                self.lookup_and_handle_definition(&expr.id, expr.span);\n-            }\n             ast::ExprMethodCall(..) => {\n                 match self.method_map.find(&expr.id) {\n                     Some(&typeck::method_map_entry {\n@@ -160,12 +156,16 @@ impl Visitor<()> for MarkSymbolVisitor {\n     fn visit_ty(&mut self, typ: &ast::Ty, _: ()) {\n         match typ.node {\n             ast::ty_path(_, _, ref id) => {\n-                self.lookup_and_handle_definition(id, typ.span);\n+                self.lookup_and_handle_definition(id);\n             }\n             _ => visit::walk_ty(self, typ, ()),\n         }\n     }\n \n+    fn visit_path(&mut self, _: &ast::Path, id: ast::NodeId, _: ()) {\n+        self.lookup_and_handle_definition(&id);\n+    }\n+\n     fn visit_item(&mut self, _item: @ast::item, _: ()) {\n         // Do not recurse into items. These items will be added to the\n         // worklist and recursed into manually if necessary."}, {"sha": "6086484772ad613db2e61168229c05c6974b4632", "filename": "src/test/compile-fail/lint-dead-code-1.rs", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d5ad32f388557c6b1f709d59a940adfa3332a5f2/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ad32f388557c6b1f709d59a940adfa3332a5f2/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs?ref=d5ad32f388557c6b1f709d59a940adfa3332a5f2", "patch": "@@ -26,20 +26,7 @@ pub static pub_static: int = 0;\n static priv_static: int = 0; //~ ERROR: code is never used\n static used_static: int = 0;\n pub static used_static2: int = used_static;\n-\n-pub fn pub_fn() {\n-    used_fn();\n-    let used_struct1 = UsedStruct1 { x: 1 };\n-    let used_struct2 = UsedStruct2(1);\n-    let used_struct3 = UsedStruct3;\n-    let e = foo3;\n-    SemiUsedStruct::la_la_la();\n-\n-}\n-fn priv_fn() { //~ ERROR: code is never used\n-    let unused_struct = PrivStruct;\n-}\n-fn used_fn() {}\n+static USED_STATIC: int = 0;\n \n pub type typ = ~UsedStruct4;\n pub struct PubStruct();\n@@ -59,6 +46,25 @@ pub enum pub_enum { foo1, bar1 }\n enum priv_enum { foo2, bar2 } //~ ERROR: code is never used\n enum used_enum { foo3, bar3 }\n \n+pub fn pub_fn() {\n+    used_fn();\n+    let used_struct1 = UsedStruct1 { x: 1 };\n+    let used_struct2 = UsedStruct2(1);\n+    let used_struct3 = UsedStruct3;\n+    let e = foo3;\n+    SemiUsedStruct::la_la_la();\n+\n+    let i = 1;\n+    match i {\n+        USED_STATIC => (),\n+        _ => ()\n+    }\n+}\n+fn priv_fn() { //~ ERROR: code is never used\n+    let unused_struct = PrivStruct;\n+}\n+fn used_fn() {}\n+\n fn foo() { //~ ERROR: code is never used\n     bar();\n     let unused_enum = foo2;"}]}