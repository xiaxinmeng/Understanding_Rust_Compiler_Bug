{"sha": "9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmODhkNzU3MTBiN2ZiYzZkMDUyYjJhOGRjYTQwYzdiZDM0NzE2NmU=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2020-05-04T22:12:06Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2020-05-07T04:33:25Z"}, "message": "reword \"possible candidate\" import suggestion", "tree": {"sha": "a26f6e1147e4b5f4a370c8347a671e3942e60077", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a26f6e1147e4b5f4a370c8347a671e3942e60077"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAl6zj5cWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdKGGCACQ6j3+gzJN0STKK3u/deq/BI12\nqkeZ6uh3B6oEvzKybtPB3E5CUyiyFpF9/gYas9aHkp4Aia/czylnpaiTuMGxakpZ\nuOQT1tlhqR/Jzck2E4ZWbwnaq5tnxvtV/tndQRXSV+ys03VL+WlJzSui90eNhjG8\nS29OjiDw57dD8iE3yH5kczE42lobw/6IW5PInIB+fm72doxnsDKfRIJ6xbEFHsyS\nrNiHh+eFZJa8AuqgTcAatJ3TR+YeV9dK8Ma0/O/04Tl6o1GjX2rQrUvj9FBqJKbf\nGZHWBDMhWPM/o3BTc+3JZZf8S6RctK5rbhitLN3/92PL2oh+I5BeqSdJc4Ua\n=9n3G\n-----END PGP SIGNATURE-----", "payload": "tree a26f6e1147e4b5f4a370c8347a671e3942e60077\nparent 97f3eeec8216d7155c24674b9be55e7c672bcae3\nauthor Andy Russell <arussell123@gmail.com> 1588630326 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1588826005 -0400\n\nreword \"possible candidate\" import suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "html_url": "https://github.com/rust-lang/rust/commit/9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97f3eeec8216d7155c24674b9be55e7c672bcae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/97f3eeec8216d7155c24674b9be55e7c672bcae3", "html_url": "https://github.com/rust-lang/rust/commit/97f3eeec8216d7155c24674b9be55e7c672bcae3"}], "stats": {"total": 218, "additions": 112, "deletions": 106}, "files": [{"sha": "8e82480c6305d64ed11bfdf7b2a9256448cbd9ba", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -47,6 +47,7 @@ impl TypoSuggestion {\n /// A free importable items suggested in case of resolution failure.\n crate struct ImportSuggestion {\n     pub did: Option<DefId>,\n+    pub descr: &'static str,\n     pub path: Path,\n }\n \n@@ -652,7 +653,7 @@ impl<'a> Resolver<'a> {\n                                 Res::Def(DefKind::Ctor(..), did) => this.parent(did),\n                                 _ => res.opt_def_id(),\n                             };\n-                            candidates.push(ImportSuggestion { did, path });\n+                            candidates.push(ImportSuggestion { did, descr: res.descr(), path });\n                         }\n                     }\n                 }\n@@ -1445,29 +1446,31 @@ fn find_span_immediately_after_crate_name(\n crate fn show_candidates(\n     err: &mut DiagnosticBuilder<'_>,\n     // This is `None` if all placement locations are inside expansions\n-    span: Option<Span>,\n+    use_placement_span: Option<Span>,\n     candidates: &[ImportSuggestion],\n     better: bool,\n     found_use: bool,\n ) {\n     if candidates.is_empty() {\n         return;\n     }\n+\n     // we want consistent results across executions, but candidates are produced\n     // by iterating through a hash map, so make sure they are ordered:\n     let mut path_strings: Vec<_> =\n         candidates.iter().map(|c| path_names_to_string(&c.path)).collect();\n     path_strings.sort();\n     path_strings.dedup();\n \n-    let better = if better { \"better \" } else { \"\" };\n-    let msg_diff = match path_strings.len() {\n-        1 => \" is found in another module, you can import it\",\n-        _ => \"s are found in other modules, you can import them\",\n+    let (determiner, kind) = if candidates.len() == 1 {\n+        (\"this\", candidates[0].descr)\n+    } else {\n+        (\"one of these\", \"items\")\n     };\n-    let msg = format!(\"possible {}candidate{} into scope\", better, msg_diff);\n+    let instead = if better { \" instead\" } else { \"\" };\n+    let msg = format!(\"consider importing {} {}{}\", determiner, kind, instead);\n \n-    if let Some(span) = span {\n+    if let Some(span) = use_placement_span {\n         for candidate in &mut path_strings {\n             // produce an additional newline to separate the new use statement\n             // from the directly following item."}, {"sha": "bd77f9e1c9c97f7811692a542726a54db6a070b2", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -873,7 +873,10 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n                     let module_def_id = module.def_id().unwrap();\n                     if module_def_id == def_id {\n                         let path = Path { span: name_binding.span, segments: path_segments };\n-                        result = Some((module, ImportSuggestion { did: Some(def_id), path }));\n+                        result = Some((\n+                            module,\n+                            ImportSuggestion { did: Some(def_id), descr: \"module\", path },\n+                        ));\n                     } else {\n                         // add the module to the lookup\n                         if seen_modules.insert(module_def_id) {"}, {"sha": "d501200d73cec9c2b536e277a58fdb1fc6a1c73e", "filename": "src/test/ui/class-missing-self.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fclass-missing-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fclass-missing-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclass-missing-self.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -10,7 +10,7 @@ error[E0425]: cannot find function `sleep` in this scope\n LL |       sleep();\n    |       ^^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this function\n    |\n LL | use std::thread::sleep;\n    |"}, {"sha": "c3aa135f77d5b27d70b4678bf92337299f588d90", "filename": "src/test/ui/crate-in-paths.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fcrate-in-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fcrate-in-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-in-paths.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0425]: cannot find value `Foo` in this scope\n LL |     Foo;\n    |     ^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this unit struct\n    |\n LL | use crate::bar::Foo;\n    |"}, {"sha": "9429a0b576532e017c2d4307beabb4f8a9dfd536", "filename": "src/test/ui/did_you_mean/issue-56028-there-is-an-enum-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-56028-there-is-an-enum-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-56028-there-is-an-enum-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-56028-there-is-an-enum-variant.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -22,7 +22,7 @@ error[E0425]: cannot find value `Set` in this scope\n LL | fn setup() -> Set { Set }\n    |                     ^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use AffixHeart::Set;\n    |"}, {"sha": "995da6cc1f97591ed07fcd348edd2865d8082f9b", "filename": "src/test/ui/glob-resolve1.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fglob-resolve1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fglob-resolve1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fglob-resolve1.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0425]: cannot find function `fpriv` in this scope\n LL |     fpriv();\n    |     ^^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this function\n    |\n LL | use bar::fpriv;\n    |\n@@ -15,7 +15,7 @@ error[E0425]: cannot find function `epriv` in this scope\n LL |     epriv();\n    |     ^^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this function\n    |\n LL | use bar::epriv;\n    |\n@@ -32,7 +32,7 @@ error[E0425]: cannot find value `C` in this scope\n LL |     C;\n    |     ^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this unit struct\n    |\n LL | use bar::C;\n    |\n@@ -56,7 +56,7 @@ help: an enum with a similar name exists\n    |\n LL |     foo::<B>();\n    |           ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this enum\n    |\n LL | use bar::A;\n    |\n@@ -74,7 +74,7 @@ help: an enum with a similar name exists\n    |\n LL |     foo::<B>();\n    |           ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this struct\n    |\n LL | use bar::C;\n    |\n@@ -92,7 +92,7 @@ help: an enum with a similar name exists\n    |\n LL |     foo::<B>();\n    |           ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this type alias\n    |\n LL | use bar::D;\n    |"}, {"sha": "8f6b7aca8fda8048e3b5892253e78a03d0c2fa7a", "filename": "src/test/ui/hygiene/globs.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0425]: cannot find function `f` in this scope\n LL |         f();\n    |         ^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing one of these items\n    |\n LL | use foo::f;\n    |\n@@ -23,7 +23,7 @@ LL | |     }\n    | |_____- in this macro invocation\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use bar::g;\n    |\n@@ -41,7 +41,7 @@ LL | n!(f);\n LL |         n!(f);\n    |            ^ not found in this scope\n    |\n-   = note: possible candidate is found in another module, you can import it into scope:\n+   = note: consider importing one of these items:\n            foo::f\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -54,7 +54,7 @@ LL | n!(f);\n LL |                 f\n    |                 ^ not found in this scope\n    |\n-   = note: possible candidate is found in another module, you can import it into scope:\n+   = note: consider importing one of these items:\n            foo::f\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "3b1a5e5f4ad0008e6c94a3fed663c0e9a989c7ad", "filename": "src/test/ui/impl-trait/universal_wrong_bounds.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0404]: expected trait, found derive macro `Debug`\n LL | fn wants_debug(g: impl Debug) { }\n    |                        ^^^^^ not a trait\n    |\n-help: possible better candidate is found in another module, you can import it into scope\n+help: consider importing this trait instead\n    |\n LL | use std::fmt::Debug;\n    |\n@@ -15,7 +15,7 @@ error[E0404]: expected trait, found derive macro `Debug`\n LL | fn wants_display(g: impl Debug) { }\n    |                          ^^^^^ not a trait\n    |\n-help: possible better candidate is found in another module, you can import it into scope\n+help: consider importing this trait instead\n    |\n LL | use std::fmt::Debug;\n    |"}, {"sha": "8bf40790f0b2492995d67acd2e9800899dba25ed", "filename": "src/test/ui/issues/issue-17546.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -24,7 +24,7 @@ error[E0573]: expected type, found variant `Result`\n LL |     fn new() -> Result<foo::MyEnum, String> {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL |     use std::fmt::Result;\n    |\n@@ -42,7 +42,7 @@ error[E0573]: expected type, found variant `Result`\n LL | fn new() -> Result<foo::MyEnum, String> {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use std::fmt::Result;\n    |"}, {"sha": "8637e574c5ecb1b4dafdb523c348f05236daf9dd", "filename": "src/test/ui/issues/issue-35675.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-35675.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-35675.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35675.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -15,7 +15,7 @@ error[E0425]: cannot find function, tuple struct or tuple variant `Apple` in thi\n LL |     Apple(5)\n    |     ^^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this tuple variant\n    |\n LL | use Fruit::Apple;\n    |\n@@ -35,7 +35,7 @@ error[E0425]: cannot find function, tuple struct or tuple variant `Apple` in thi\n LL |     Apple(5)\n    |     ^^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this tuple variant\n    |\n LL | use Fruit::Apple;\n    |"}, {"sha": "5d008cf24dc903c8e43dacb53d91bf40898fa98b", "filename": "src/test/ui/issues/issue-37534.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0404]: expected trait, found derive macro `Hash`\n LL | struct Foo<T: ?Hash> { }\n    |                ^^^^ not a trait\n    |\n-help: possible better candidate is found in another module, you can import it into scope\n+help: consider importing this trait instead\n    |\n LL | use std::hash::Hash;\n    |"}, {"sha": "d2450ab125062b20131f638e608c53c1ad0fb7e8", "filename": "src/test/ui/issues/issue-38293.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-38293.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-38293.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38293.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -10,7 +10,7 @@ error[E0423]: expected function, found module `baz`\n LL |     baz();\n    |     ^^^ not a function\n    |\n-help: possible better candidate is found in another module, you can import it into scope\n+help: consider importing this function instead\n    |\n LL | use bar::baz;\n    |"}, {"sha": "e7e251e39c04fbcd02dea89abb726d4e2fc64ef0", "filename": "src/test/ui/issues/issue-42944.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-42944.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-42944.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-42944.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -10,7 +10,7 @@ error[E0425]: cannot find function, tuple struct or tuple variant `B` in this sc\n LL |         B(());\n    |         ^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this tuple struct\n    |\n LL |     use foo::B;\n    |"}, {"sha": "ecee595d4ab6adb1b39526629fe4d31a8aa6d73e", "filename": "src/test/ui/issues/issue-4366-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-4366-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-4366-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-4366-2.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0412]: cannot find type `Bar` in this scope\n LL |         fn sub() -> Bar { 1 }\n    |                     ^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this type alias\n    |\n LL |         use a::b::Bar;\n    |\n@@ -15,7 +15,7 @@ error[E0423]: expected function, found module `foo`\n LL |     foo();\n    |     ^^^ not a function\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use foo::foo;\n    |"}, {"sha": "a094180572daa702ec1d72c11b278bc4c0b9a69d", "filename": "src/test/ui/issues/issue-4366.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-4366.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-4366.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-4366.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0425]: cannot find function `foo` in this scope\n LL |         fn sub() -> isize { foo(); 1 }\n    |                             ^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |         use foo::foo;\n    |"}, {"sha": "7ec567a06f09dcf3694ddffca05188b708db21fe", "filename": "src/test/ui/issues/issue-50599.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-50599.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fissues%2Fissue-50599.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50599.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0425]: cannot find value `LOG10_2` in module `std::f64`\n LL |     const M: usize = (f64::from(N) * std::f64::LOG10_2) as usize;\n    |                                                ^^^^^^^ not found in `std::f64`\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use std::f32::consts::LOG10_2;\n    |"}, {"sha": "dce70545170305bbd1fb219ffdacdc246382aa19", "filename": "src/test/ui/lexical-scopes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Flexical-scopes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Flexical-scopes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flexical-scopes.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0574]: expected struct, variant or union type, found type parameter `T`\n LL |     let t = T { i: 0 };\n    |             ^ not a struct, variant or union type\n    |\n-help: possible better candidate is found in another module, you can import it into scope\n+help: consider importing this struct instead\n    |\n LL | use T;\n    |"}, {"sha": "d0d91bb61f45706a5c6d45edd8137eef37f32848", "filename": "src/test/ui/lint/use_suggestion_json.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -94,7 +94,7 @@ mod foo {\n   ],\n   \"children\": [\n     {\n-      \"message\": \"possible candidates are found in other modules, you can import them into scope\",\n+      \"message\": \"consider importing one of these items\",\n       \"code\": null,\n       \"level\": \"help\",\n       \"spans\": [\n@@ -385,7 +385,7 @@ mod foo {\n \\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    let x: Iter;\\u001b[0m\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mnot found in this scope\\u001b[0m\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: possible candidates are found in other modules, you can import them into scope\\u001b[0m\n+\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: consider importing one of these items\\u001b[0m\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n \\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0muse std::collections::binary_heap::Iter;\\u001b[0m\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m"}, {"sha": "8e064d980afabc9be0ee2284753099299eedfe39", "filename": "src/test/ui/macros/macro-outer-attributes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fmacros%2Fmacro-outer-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fmacros%2Fmacro-outer-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-outer-attributes.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0425]: cannot find function `bar` in module `a`\n LL |     a::bar();\n    |        ^^^ not found in `a`\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this function\n    |\n LL | use b::bar;\n    |"}, {"sha": "c80055f00d7d9ecafee88a26261870d34491caaa", "filename": "src/test/ui/namespace/namespace-mix.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -12,7 +12,7 @@ help: a tuple struct with a similar name exists\n    |\n LL |     check(m1::TS);\n    |               ^^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use m2::S;\n    |\n@@ -35,7 +35,7 @@ help: a tuple struct with a similar name exists\n    |\n LL |     check(xm1::TS);\n    |                ^^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use m2::S;\n    |\n@@ -57,7 +57,7 @@ help: a tuple variant with a similar name exists\n    |\n LL |     check(m7::TV);\n    |               ^^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use m8::V;\n    |\n@@ -79,7 +79,7 @@ help: a tuple variant with a similar name exists\n    |\n LL |     check(xm7::TV);\n    |                ^^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use m8::V;\n    |"}, {"sha": "8a26366d751d334e9886d796825b7ae860031f40", "filename": "src/test/ui/no-implicit-prelude-nested.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fno-implicit-prelude-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fno-implicit-prelude-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-implicit-prelude-nested.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0405]: cannot find trait `Add` in this scope\n LL |         impl Add for Test {}\n    |              ^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this trait\n    |\n LL |         use std::ops::Add;\n    |\n@@ -15,7 +15,7 @@ error[E0404]: expected trait, found derive macro `Clone`\n LL |         impl Clone for Test {}\n    |              ^^^^^ not a trait\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL |         use std::clone::Clone;\n    |\n@@ -28,7 +28,7 @@ error[E0405]: cannot find trait `Iterator` in this scope\n LL |         impl Iterator for Test {}\n    |              ^^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |         use std::iter::Iterator;\n    |\n@@ -41,7 +41,7 @@ error[E0405]: cannot find trait `ToString` in this scope\n LL |         impl ToString for Test {}\n    |              ^^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |         use std::prelude::v1::ToString;\n    |\n@@ -60,7 +60,7 @@ error[E0425]: cannot find function `drop` in this scope\n LL |             drop(2)\n    |             ^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |         use std::mem::drop;\n    |\n@@ -73,7 +73,7 @@ error[E0405]: cannot find trait `Add` in this scope\n LL |     impl Add for Test {}\n    |          ^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this trait\n    |\n LL |     use std::ops::Add;\n    |\n@@ -84,7 +84,7 @@ error[E0404]: expected trait, found derive macro `Clone`\n LL |     impl Clone for Test {}\n    |          ^^^^^ not a trait\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL |     use std::clone::Clone;\n    |\n@@ -97,7 +97,7 @@ error[E0405]: cannot find trait `Iterator` in this scope\n LL |     impl Iterator for Test {}\n    |          ^^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |     use std::iter::Iterator;\n    |\n@@ -110,7 +110,7 @@ error[E0405]: cannot find trait `ToString` in this scope\n LL |     impl ToString for Test {}\n    |          ^^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |     use std::prelude::v1::ToString;\n    |\n@@ -129,7 +129,7 @@ error[E0425]: cannot find function `drop` in this scope\n LL |         drop(2)\n    |         ^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |     use std::mem::drop;\n    |\n@@ -142,7 +142,7 @@ error[E0405]: cannot find trait `Add` in this scope\n LL |         impl Add for Test {}\n    |              ^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this trait\n    |\n LL |         use std::ops::Add;\n    |\n@@ -153,7 +153,7 @@ error[E0404]: expected trait, found derive macro `Clone`\n LL |         impl Clone for Test {}\n    |              ^^^^^ not a trait\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL |         use std::clone::Clone;\n    |\n@@ -166,7 +166,7 @@ error[E0405]: cannot find trait `Iterator` in this scope\n LL |         impl Iterator for Test {}\n    |              ^^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |         use std::iter::Iterator;\n    |\n@@ -179,7 +179,7 @@ error[E0405]: cannot find trait `ToString` in this scope\n LL |         impl ToString for Test {}\n    |              ^^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |         use std::prelude::v1::ToString;\n    |\n@@ -198,7 +198,7 @@ error[E0425]: cannot find function `drop` in this scope\n LL |             drop(2)\n    |             ^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL |         use std::mem::drop;\n    |"}, {"sha": "9cda4f64c79d0adfa8dd1eb2162ab556e6483adf", "filename": "src/test/ui/no-implicit-prelude.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fno-implicit-prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fno-implicit-prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-implicit-prelude.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0405]: cannot find trait `Add` in this scope\n LL | impl Add for Test {}\n    |      ^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this trait\n    |\n LL | use std::ops::Add;\n    |\n@@ -15,7 +15,7 @@ error[E0404]: expected trait, found derive macro `Clone`\n LL | impl Clone for Test {}\n    |      ^^^^^ not a trait\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use std::clone::Clone;\n    |\n@@ -28,7 +28,7 @@ error[E0405]: cannot find trait `Iterator` in this scope\n LL | impl Iterator for Test {}\n    |      ^^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use std::iter::Iterator;\n    |\n@@ -41,7 +41,7 @@ error[E0405]: cannot find trait `ToString` in this scope\n LL | impl ToString for Test {}\n    |      ^^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use std::prelude::v1::ToString;\n    |\n@@ -60,7 +60,7 @@ error[E0425]: cannot find function `drop` in this scope\n LL |     drop(2)\n    |     ^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use std::mem::drop;\n    |"}, {"sha": "5d4db8c31a2c310e8bc8da5f20ec70a53802b3ec", "filename": "src/test/ui/parser/circular_modules_main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -10,7 +10,7 @@ error[E0425]: cannot find function `say_hello` in module `circular_modules_hello\n LL |     circular_modules_hello::say_hello();\n    |                             ^^^^^^^^^ not found in `circular_modules_hello`\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this function\n    |\n LL | use circular_modules_hello::say_hello;\n    |"}, {"sha": "4d2af735fa6b940d3ec2db9477b87c9e0e227e9f", "filename": "src/test/ui/privacy/privacy-ns1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -11,7 +11,7 @@ help: a unit struct with a similar name exists\n    |\n LL |     Baz();\n    |     ^^^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use foo1::Bar;\n    |\n@@ -33,7 +33,7 @@ help: a unit struct with a similar name exists\n    |\n LL |     Baz();\n    |     ^^^\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use foo1::Bar;\n    |\n@@ -55,7 +55,7 @@ help: a struct with a similar name exists\n    |\n LL |     let _x: Box<Baz>;\n    |                 ^^^\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use foo1::Bar;\n    |"}, {"sha": "f1aa523742ae43857a4d59ba37c512fcba6d378b", "filename": "src/test/ui/privacy/privacy-ns2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0423]: expected function, tuple struct or tuple variant, found trait `Bar\n LL |     Bar();\n    |     ^^^ not a function, tuple struct or tuple variant\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use foo1::Bar;\n    |\n@@ -26,7 +26,7 @@ help: a unit struct with a similar name exists\n    |\n LL |     Baz();\n    |     ^^^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use foo1::Bar;\n    |\n@@ -45,7 +45,7 @@ help: use `=` if you meant to assign\n    |\n LL |     let _x = Bar();\n    |            ^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use foo1::Bar;\n    |"}, {"sha": "b37f1bd393c6fd290f49531b5bcd6aa2e66f219f", "filename": "src/test/ui/proc-macro/attributes-on-modules-fail.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-on-modules-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-on-modules-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-on-modules-fail.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -50,7 +50,7 @@ help: a type alias with a similar name exists\n    |\n LL |     type A = A;\n    |              ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this struct\n    |\n LL |     use Y;\n    |\n@@ -65,7 +65,7 @@ help: a type alias with a similar name exists\n    |\n LL | type A = A;\n    |          ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this struct\n    |\n LL | use m::X;\n    |"}, {"sha": "9b946b5e2449e5fa82d52f1cab7d5c3d05c7e228", "filename": "src/test/ui/proc-macro/generate-mod.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0412]: cannot find type `FromOutside` in this scope\n LL | generate_mod::check!();\n    | ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: possible candidate is found in another module, you can import it into scope:\n+   = note: consider importing this struct:\n            FromOutside\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -14,7 +14,7 @@ error[E0412]: cannot find type `Outer` in this scope\n LL | generate_mod::check!();\n    | ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: possible candidate is found in another module, you can import it into scope:\n+   = note: consider importing this struct:\n            Outer\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -24,7 +24,7 @@ error[E0412]: cannot find type `FromOutside` in this scope\n LL | #[generate_mod::check_attr]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: possible candidate is found in another module, you can import it into scope:\n+   = note: consider importing this struct:\n            FromOutside\n    = note: this error originates in an attribute macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -34,7 +34,7 @@ error[E0412]: cannot find type `OuterAttr` in this scope\n LL | #[generate_mod::check_attr]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: possible candidate is found in another module, you can import it into scope:\n+   = note: consider importing this struct:\n            OuterAttr\n    = note: this error originates in an attribute macro (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "81d2113c3b2dfaaa9f7a1f015cc42c6165ba8d5c", "filename": "src/test/ui/proc-macro/mixed-site-span.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -27,7 +27,7 @@ LL | pass_dollar_crate!();\n    | ^^^^^^^^^^^^^^^^^^^^^ not found in `$crate`\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this struct\n    |\n LL | use ItemUse;\n    |"}, {"sha": "621686dd292d64b53023ae6850e1ad3af21c8c1e", "filename": "src/test/ui/resolve/enums-are-namespaced-xc.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0425]: cannot find value `A` in crate `namespaced_enums`\n LL |     let _ = namespaced_enums::A;\n    |                               ^ not found in `namespaced_enums`\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this unit variant\n    |\n LL | use namespaced_enums::Foo::A;\n    |\n@@ -15,7 +15,7 @@ error[E0425]: cannot find function, tuple struct or tuple variant `B` in crate `\n LL |     let _ = namespaced_enums::B(10);\n    |                               ^ not found in `namespaced_enums`\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this tuple variant\n    |\n LL | use namespaced_enums::Foo::B;\n    |\n@@ -26,7 +26,7 @@ error[E0422]: cannot find struct, variant or union type `C` in crate `namespaced\n LL |     let _ = namespaced_enums::C { a: 10 };\n    |                               ^ not found in `namespaced_enums`\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this variant\n    |\n LL | use namespaced_enums::Foo::C;\n    |"}, {"sha": "c47d22cef5f6ccdfd9342394e94bff2bf05e3fa1", "filename": "src/test/ui/resolve/issue-16058.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0574]: expected struct, variant or union type, found enum `Result`\n LL |         Result {\n    |         ^^^^^^ not a struct, variant or union type\n    |\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use std::fmt::Result;\n    |"}, {"sha": "034d0d01bfb803a9fc04b6adfd0e0ab5f1914a92", "filename": "src/test/ui/resolve/issue-17518.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0422]: cannot find struct, variant or union type `E` in this scope\n LL |     E { name: \"foobar\" };\n    |     ^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this variant\n    |\n LL | use SomeEnum::E;\n    |"}, {"sha": "d3e1953435359487261a14f34b7edf8736cf458e", "filename": "src/test/ui/resolve/issue-21221-1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0405]: cannot find trait `Mul` in this scope\n LL | impl Mul for Foo {\n    |      ^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use mul1::Mul;\n    |\n@@ -19,7 +19,7 @@ error[E0412]: cannot find type `Mul` in this scope\n LL | fn getMul() -> Mul {\n    |                ^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use mul1::Mul;\n    |\n@@ -43,7 +43,7 @@ error[E0405]: cannot find trait `Div` in this scope\n LL | impl Div for Foo {\n    |      ^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this trait\n    |\n LL | use std::ops::Div;\n    |"}, {"sha": "f9263d2af5026993d80a4b10ea48caca218b4def", "filename": "src/test/ui/resolve/issue-21221-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0405]: cannot find trait `T` in this scope\n LL | impl T for Foo { }\n    |      ^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this trait\n    |\n LL | use foo::bar::T;\n    |"}, {"sha": "f12e5b09bacd014d0a51d137721b177b66a149c3", "filename": "src/test/ui/resolve/issue-21221-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0405]: cannot find trait `OuterTrait` in this scope\n LL | impl OuterTrait for Foo {}\n    |      ^^^^^^^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this trait\n    |\n LL | use issue_21221_3::outer::OuterTrait;\n    |"}, {"sha": "fc15444d0c0fb5a6c1f298230da49d8d88678fe4", "filename": "src/test/ui/resolve/issue-21221-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0405]: cannot find trait `T` in this scope\n LL | impl T for Foo {}\n    |      ^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this trait\n    |\n LL | use issue_21221_4::T;\n    |"}, {"sha": "4d0b0af58a320a17701742135315e0ef0aff037b", "filename": "src/test/ui/resolve/issue-3907.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -9,7 +9,7 @@ help: you might have meant to use `#![feature(trait_alias)]` instead of a `type`\n    |\n LL | type Foo = dyn issue_3907::Foo;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-help: possible better candidate is found in another module, you can import it into scope\n+help: consider importing this trait instead\n    |\n LL | use issue_3907::Foo;\n    |"}, {"sha": "d9b1b9c59558a7a1f48e55376bcb4cd0b27031ee", "filename": "src/test/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -67,7 +67,7 @@ LL |     let _: E = E::Struct;\n    |                ^^^^^^^^^\n LL |     let _: E = E::Unit;\n    |                ^^^^^^^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use std::f32::consts::E;\n    |\n@@ -99,7 +99,7 @@ LL |     let _: E = E::Struct;\n    |                ^^^^^^^^^\n LL |     let _: E = E::Unit;\n    |                ^^^^^^^\n-help: possible better candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items instead\n    |\n LL | use std::f32::consts::E;\n    |\n@@ -130,7 +130,7 @@ help: an enum with a similar name exists\n    |\n LL |     let _: E = m::n::Z;\n    |            ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this enum\n    |\n LL | use m::n::Z;\n    |\n@@ -163,7 +163,7 @@ help: an enum with a similar name exists\n    |\n LL |     let _: E = m::n::Z::Fn;\n    |            ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this enum\n    |\n LL | use m::n::Z;\n    |\n@@ -181,7 +181,7 @@ help: an enum with a similar name exists\n    |\n LL |     let _: E = m::n::Z::Struct;\n    |            ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this enum\n    |\n LL | use m::n::Z;\n    |\n@@ -210,7 +210,7 @@ help: an enum with a similar name exists\n    |\n LL |     let _: E = m::n::Z::Unit {};\n    |            ^\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this enum\n    |\n LL | use m::n::Z;\n    |"}, {"sha": "e0305b129a8816ccff926d2240b5f371bacbe5bf", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -33,7 +33,7 @@ error[E0423]: expected value, found struct `xcrate::S`\n LL |     xcrate::S;\n    |     ^^^^^^^^^ constructor is not visible here due to private fields\n    |\n-help: possible better candidate is found in another module, you can import it into scope\n+help: consider importing this tuple struct instead\n    |\n LL | use m::S;\n    |"}, {"sha": "8611306e82d0376c3fc5d50afc3c8c2b405ba66c", "filename": "src/test/ui/resolve/resolve-primitive-fallback.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -10,7 +10,7 @@ error[E0412]: cannot find type `u8` in the crate root\n LL |     let _: ::u8;\n    |              ^^ not found in the crate root\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this builtin type\n    |\n LL | use std::primitive::u8;\n    |"}, {"sha": "9c337f515adbcd7eade90ff0d9d663ca1a7a9f37", "filename": "src/test/ui/resolve/use_suggestion_placement.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fuse_suggestion_placement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fresolve%2Fuse_suggestion_placement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fuse_suggestion_placement.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0412]: cannot find type `Path` in this scope\n LL |     type Bar = Path;\n    |                ^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this struct\n    |\n LL |     use std::path::Path;\n    |\n@@ -15,7 +15,7 @@ error[E0425]: cannot find value `A` in this scope\n LL |     let _ = A;\n    |             ^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this constant\n    |\n LL | use m::A;\n    |\n@@ -26,7 +26,7 @@ error[E0412]: cannot find type `HashMap` in this scope\n LL |     type Dict<K, V> = HashMap<K, V>;\n    |                       ^^^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use std::collections::HashMap;\n    |"}, {"sha": "38cd9713d1a13b82955291cef19d2bd5aac19c9b", "filename": "src/test/ui/rust-2018/issue-52202-use-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0422]: cannot find struct, variant or union type `Drain` in this scope\n LL |     let _d = Drain {};\n    |              ^^^^^ not found in this scope\n    |\n-help: possible candidates are found in other modules, you can import them into scope\n+help: consider importing one of these items\n    |\n LL | use crate::plumbing::Drain;\n    |"}, {"sha": "7997cdc2957b4cd759e32e613e839a31296859ac", "filename": "src/test/ui/self/self_type_keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -66,7 +66,7 @@ error[E0531]: cannot find unit struct, unit variant or constant `Self` in this s\n LL |         mut Self => (),\n    |             ^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this unit struct\n    |\n LL | use foo::Self;\n    |"}, {"sha": "2bc3ff4c3b619ad3ad70fc35a3c4c735c6d23657", "filename": "src/test/ui/span/issue-35987.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0404]: expected trait, found type parameter `Add`\n LL | impl<T: Clone, Add> Add for Foo<T> {\n    |                     ^^^ not a trait\n    |\n-help: possible better candidate is found in another module, you can import it into scope\n+help: consider importing this trait instead\n    |\n LL | use std::ops::Add;\n    |"}, {"sha": "876eef2b6249a271a0e223aef15515a690cbbb6f", "filename": "src/test/ui/suggestions/no-extern-crate-in-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fsuggestions%2Fno-extern-crate-in-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fsuggestions%2Fno-extern-crate-in-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fno-extern-crate-in-type.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -4,7 +4,7 @@ error[E0412]: cannot find type `Foo` in this scope\n LL | type Output = Option<Foo>;\n    |                      ^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this struct\n    |\n LL | use foo::Foo;\n    |"}, {"sha": "7447cf87ce1680efd763600e7865e8a575630e6e", "filename": "src/test/ui/suggestions/raw-name-use-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -26,7 +26,7 @@ error[E0425]: cannot find function `r#break` in this scope\n LL |     r#break();\n    |     ^^^^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this function\n    |\n LL | use foo::r#break;\n    |"}, {"sha": "edde26c1fc15d77e3ec7a9ad212c3cb5205894e1", "filename": "src/test/ui/use/use-super-global-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fuse%2Fuse-super-global-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f88d75710b7fbc6d052b2a8dca40c7bd347166e/src%2Ftest%2Fui%2Fuse%2Fuse-super-global-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-super-global-path.stderr?ref=9f88d75710b7fbc6d052b2a8dca40c7bd347166e", "patch": "@@ -22,7 +22,7 @@ error[E0425]: cannot find function `main` in this scope\n LL |         main();\n    |         ^^^^ not found in this scope\n    |\n-help: possible candidate is found in another module, you can import it into scope\n+help: consider importing this function\n    |\n LL |     use main;\n    |"}]}