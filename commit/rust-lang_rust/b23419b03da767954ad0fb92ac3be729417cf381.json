{"sha": "b23419b03da767954ad0fb92ac3be729417cf381", "node_id": "C_kwDOAAsO6NoAKGIyMzQxOWIwM2RhNzY3OTU0YWQwZmI5MmFjM2JlNzI5NDE3Y2YzODE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-07T14:39:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-07T14:39:08Z"}, "message": "Rollup merge of #105400 - BoxyUwU:braced_param_evaluatability, r=oli-obk\n\nnormalize before handling simple checks for evaluatability of `ty::Const`\n\n`{{{{{{{ N }}}}}}}` is desugared into a `ConstKind::Unevaluated` for an anonymous `const` item so when calling `is_const_evaluatable` on it we skip the `ConstKind::Param(_) => Ok(())` arm which is incorrect.", "tree": {"sha": "e38f7917b8012e35f7be1aca9e2d46e1f02769b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e38f7917b8012e35f7be1aca9e2d46e1f02769b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b23419b03da767954ad0fb92ac3be729417cf381", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjkKWMCRBK7hj4Ov3rIwAAwHwIAF58cHLme6DuNLISiG0I6Kx/\nn9IzYq4QP0DsMM8MMDi5bstnpkXrhhRhrV/OvSg+2uTEIcMxRrAJvazlv3MiHJh0\nCU9lUKy1uFz5L45k17mU3gwtoecLQTstsi5ihMwLB+OR/FqC1x2mOXA10wxLiYze\nINNQWYwVcVu6Zldw/GTNbNun/g+b2zgW96s1f2zD36R+Gb+t2kt33osX5r3J7bKv\nyKBVMgH5n/BN5wjrtOapYfcXfvboM/7TNQGcB1QjdY8O2HEhXI4C9kcng2qeM3Jw\nXBi9zft1TGnfbosU3EUeL1Gyy4oKLbWdaSoia84LicHmQdbfPp7bzoIVF/6ZSOc=\n=OLSy\n-----END PGP SIGNATURE-----\n", "payload": "tree e38f7917b8012e35f7be1aca9e2d46e1f02769b2\nparent 52cec8c99fd65ff5cf6f2d8b3b19b1300500acbd\nparent 9f438bef0b0a1f9249525fc8a1230eaf78753362\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670423948 +0100\ncommitter GitHub <noreply@github.com> 1670423948 +0100\n\nRollup merge of #105400 - BoxyUwU:braced_param_evaluatability, r=oli-obk\n\nnormalize before handling simple checks for evaluatability of `ty::Const`\n\n`{{{{{{{ N }}}}}}}` is desugared into a `ConstKind::Unevaluated` for an anonymous `const` item so when calling `is_const_evaluatable` on it we skip the `ConstKind::Param(_) => Ok(())` arm which is incorrect.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b23419b03da767954ad0fb92ac3be729417cf381", "html_url": "https://github.com/rust-lang/rust/commit/b23419b03da767954ad0fb92ac3be729417cf381", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b23419b03da767954ad0fb92ac3be729417cf381/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52cec8c99fd65ff5cf6f2d8b3b19b1300500acbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/52cec8c99fd65ff5cf6f2d8b3b19b1300500acbd", "html_url": "https://github.com/rust-lang/rust/commit/52cec8c99fd65ff5cf6f2d8b3b19b1300500acbd"}, {"sha": "9f438bef0b0a1f9249525fc8a1230eaf78753362", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f438bef0b0a1f9249525fc8a1230eaf78753362", "html_url": "https://github.com/rust-lang/rust/commit/9f438bef0b0a1f9249525fc8a1230eaf78753362"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "7c9fde27420bc2b12ba79a6d08083b507dc2b8ec", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b23419b03da767954ad0fb92ac3be729417cf381/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b23419b03da767954ad0fb92ac3be729417cf381/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=b23419b03da767954ad0fb92ac3be729417cf381", "patch": "@@ -30,7 +30,7 @@ pub fn is_const_evaluatable<'tcx>(\n     span: Span,\n ) -> Result<(), NotConstEvaluatable> {\n     let tcx = infcx.tcx;\n-    match unexpanded_ct.kind() {\n+    match tcx.expand_abstract_consts(unexpanded_ct).kind() {\n         ty::ConstKind::Unevaluated(_) | ty::ConstKind::Expr(_) => (),\n         ty::ConstKind::Param(_)\n         | ty::ConstKind::Bound(_, _)"}, {"sha": "b37b354ae2146eeea732e6c57c6efd292bd8a0fa", "filename": "src/test/ui/const-generics/generic_const_exprs/normed_to_param_is_evaluatable.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b23419b03da767954ad0fb92ac3be729417cf381/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fnormed_to_param_is_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b23419b03da767954ad0fb92ac3be729417cf381/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fnormed_to_param_is_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fnormed_to_param_is_evaluatable.rs?ref=b23419b03da767954ad0fb92ac3be729417cf381", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features, unused_braces)]\n+\n+#[rustfmt::skip]\n+fn foo<const N: usize>() {\n+    bar::<{{{{{{ N }}}}}}>();\n+}\n+\n+fn bar<const N: usize>() {}\n+\n+fn main() {}"}]}