{"sha": "dfd9e10a2a0213e99435438e7cffdc930c8464ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZDllMTBhMmEwMjEzZTk5NDM1NDM4ZTdjZmZkYzkzMGM4NDY0YWQ=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-07-01T09:58:29Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-07-01T09:58:29Z"}, "message": "Use slightly neater check for static lifetimes", "tree": {"sha": "d7f4c98b68996bf4eb3001aee8f4564fde208379", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7f4c98b68996bf4eb3001aee8f4564fde208379"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfd9e10a2a0213e99435438e7cffdc930c8464ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd9e10a2a0213e99435438e7cffdc930c8464ad", "html_url": "https://github.com/rust-lang/rust/commit/dfd9e10a2a0213e99435438e7cffdc930c8464ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfd9e10a2a0213e99435438e7cffdc930c8464ad/comments", "author": null, "committer": null, "parents": [{"sha": "b4b6e6558e3ccd5ef11758297dc064acceb15ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4b6e6558e3ccd5ef11758297dc064acceb15ef2", "html_url": "https://github.com/rust-lang/rust/commit/b4b6e6558e3ccd5ef11758297dc064acceb15ef2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3fbbb4daee822e0c2fba66ed30aeb5857a462c8c", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dfd9e10a2a0213e99435438e7cffdc930c8464ad/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd9e10a2a0213e99435438e7cffdc930c8464ad/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=dfd9e10a2a0213e99435438e7cffdc930c8464ad", "patch": "@@ -126,7 +126,7 @@ fn check_fn_inner<'a, 'tcx>(\n                         GenericArg::Type(_) => None,\n                     });\n                     for bound in lifetimes {\n-                        if bound.name.ident().name != \"'static\" && !bound.is_elided() {\n+                        if bound.name != LifetimeName::Static && !bound.is_elided() {\n                             return;\n                         }\n                         bounds_lts.push(bound);\n@@ -251,7 +251,7 @@ fn allowed_lts_from(named_generics: &[GenericParam]) -> HashSet<RefLt> {\n \n fn lts_from_bounds<'a, T: Iterator<Item = &'a Lifetime>>(mut vec: Vec<RefLt>, bounds_lts: T) -> Vec<RefLt> {\n     for lt in bounds_lts {\n-        if lt.name.ident().name != \"'static\" {\n+        if lt.name != LifetimeName::Static {\n             vec.push(RefLt::Named(lt.name.ident().name));\n         }\n     }\n@@ -282,7 +282,7 @@ impl<'v, 't> RefVisitor<'v, 't> {\n \n     fn record(&mut self, lifetime: &Option<Lifetime>) {\n         if let Some(ref lt) = *lifetime {\n-            if lt.name.ident().name == \"'static\" {\n+            if lt.name == LifetimeName::Static {\n                 self.lts.push(RefLt::Static);\n             } else if lt.is_elided() {\n                 self.lts.push(RefLt::Unnamed);"}]}