{"sha": "94dfb3ba78e211ea2a650b7aaeff2b79e0235003", "node_id": "C_kwDOAAsO6NoAKDk0ZGZiM2JhNzhlMjExZWEyYTY1MGI3YWFlZmYyYjc5ZTAyMzUwMDM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-25T19:06:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-25T19:06:33Z"}, "message": "Rollup merge of #110649 - arlosi:fix_no_global_oom_handling, r=Mark-Simulacrum\n\nFix no_global_oom_handling build\n\n`provide_sorted_batch` in core is incorrectly marked with `#[cfg(not(no_global_oom_handling))]` which prevents core from building with the cfg enabled.\n\nNothing in `core` allocates memory (including this function). The `cfg` gate is incorrect.\n\ncc ``@dpaoliello``\nr? ``@wesleywiser``\n\nThe cfg was added by #107191", "tree": {"sha": "d85c6bc6349d55030fff556fdb7b3f4afd4fffe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d85c6bc6349d55030fff556fdb7b3f4afd4fffe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94dfb3ba78e211ea2a650b7aaeff2b79e0235003", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkSCS5CRBK7hj4Ov3rIwAAJWQIAHY2qZLbhn+alZdp03AB17aN\nCqCTzEKDtY79nomlXXE1UolmpfIgu1egifqIhVE9opHQz0Qeh0td3ta0jPbCSiU2\nMmayWH6tcKST6P3bN2sCY0tiUT7wTMfRLRCF0jt6FYJ4PSSvp+UQLJ1gpPEsfUSx\nE4621wRMyIIQvsgi43WjErthMlrs7jc6kVJ7vSGwF4k8Sk2T+mL7jZOMB9/7UWT5\n5j2FkYQ/Xo0ijME6NKyDfiiuWjpj66H2SUy/b6Y1xO6ncwZf14tSkVdJXeX8oKtw\ntakBpujCRveSXSeuMclPtXuUqQxQE6jboS7Uw6LZcLtZieNPTsXeIglsq/PmvK0=\n=5Iag\n-----END PGP SIGNATURE-----\n", "payload": "tree d85c6bc6349d55030fff556fdb7b3f4afd4fffe8\nparent 8d00a8d11ee0f0c08d1eff0a3fd33ca89ed6a535\nparent 57316559e4d6161ee1ac66d1c8db68562bdd0eaa\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682449593 +0200\ncommitter GitHub <noreply@github.com> 1682449593 +0200\n\nRollup merge of #110649 - arlosi:fix_no_global_oom_handling, r=Mark-Simulacrum\n\nFix no_global_oom_handling build\n\n`provide_sorted_batch` in core is incorrectly marked with `#[cfg(not(no_global_oom_handling))]` which prevents core from building with the cfg enabled.\n\nNothing in `core` allocates memory (including this function). The `cfg` gate is incorrect.\n\ncc ``@dpaoliello``\nr? ``@wesleywiser``\n\nThe cfg was added by #107191\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94dfb3ba78e211ea2a650b7aaeff2b79e0235003", "html_url": "https://github.com/rust-lang/rust/commit/94dfb3ba78e211ea2a650b7aaeff2b79e0235003", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94dfb3ba78e211ea2a650b7aaeff2b79e0235003/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d00a8d11ee0f0c08d1eff0a3fd33ca89ed6a535", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d00a8d11ee0f0c08d1eff0a3fd33ca89ed6a535", "html_url": "https://github.com/rust-lang/rust/commit/8d00a8d11ee0f0c08d1eff0a3fd33ca89ed6a535"}, {"sha": "57316559e4d6161ee1ac66d1c8db68562bdd0eaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/57316559e4d6161ee1ac66d1c8db68562bdd0eaa", "html_url": "https://github.com/rust-lang/rust/commit/57316559e4d6161ee1ac66d1c8db68562bdd0eaa"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "e6e3b55efa9ae7c8238fe53ab7e21b9ff483cab7", "filename": "library/core/src/slice/sort.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/94dfb3ba78e211ea2a650b7aaeff2b79e0235003/library%2Fcore%2Fsrc%2Fslice%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94dfb3ba78e211ea2a650b7aaeff2b79e0235003/library%2Fcore%2Fsrc%2Fslice%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fsort.rs?ref=94dfb3ba78e211ea2a650b7aaeff2b79e0235003", "patch": "@@ -1456,7 +1456,6 @@ pub struct TimSortRun {\n \n /// Takes a range as denoted by start and end, that is already sorted and extends it to the right if\n /// necessary with sorts optimized for smaller ranges such as insertion sort.\n-#[cfg(not(no_global_oom_handling))]\n fn provide_sorted_batch<T, F>(v: &mut [T], start: usize, mut end: usize, is_less: &mut F) -> usize\n where\n     F: FnMut(&T, &T) -> bool,"}]}