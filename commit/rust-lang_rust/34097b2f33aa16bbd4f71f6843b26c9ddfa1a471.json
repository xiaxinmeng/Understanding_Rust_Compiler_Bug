{"sha": "34097b2f33aa16bbd4f71f6843b26c9ddfa1a471", "node_id": "C_kwDOAAsO6NoAKDM0MDk3YjJmMzNhYTE2YmJkNGY3MWY2ODQzYjI2YzlkZGZhMWE0NzE", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-04-16T07:27:28Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-04-16T07:27:28Z"}, "message": "fix tidy", "tree": {"sha": "074329d7233dffaa98e79bd1c90126754e995ebf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/074329d7233dffaa98e79bd1c90126754e995ebf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34097b2f33aa16bbd4f71f6843b26c9ddfa1a471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34097b2f33aa16bbd4f71f6843b26c9ddfa1a471", "html_url": "https://github.com/rust-lang/rust/commit/34097b2f33aa16bbd4f71f6843b26c9ddfa1a471", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34097b2f33aa16bbd4f71f6843b26c9ddfa1a471/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ede7bc032a7a447ffce7a4c3fc1b1fc72842386b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede7bc032a7a447ffce7a4c3fc1b1fc72842386b", "html_url": "https://github.com/rust-lang/rust/commit/ede7bc032a7a447ffce7a4c3fc1b1fc72842386b"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "bd2b2c36c4315af1f3b6222dc33f4dad270b1479", "filename": "library/core/src/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/34097b2f33aa16bbd4f71f6843b26c9ddfa1a471/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34097b2f33aa16bbd4f71f6843b26c9ddfa1a471/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs?ref=34097b2f33aa16bbd4f71f6843b26c9ddfa1a471", "patch": "@@ -331,6 +331,7 @@ impl CStr {\n         match nul_pos {\n             Some(nul_pos) => {\n                 // FIXME(const-hack) replace with range index\n+                // SAFETY: nul_pos + 1 <= bytes.len()\n                 let subslice = unsafe { crate::slice::from_raw_parts(bytes.as_ptr(), nul_pos + 1) };\n                 // SAFETY: We know there is a nul byte at nul_pos, so this slice\n                 // (ending at the nul byte) is a well-formed C string."}, {"sha": "3a8b59d727b4a5479bb8d00188a1eef3b3543599", "filename": "library/core/src/slice/memchr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34097b2f33aa16bbd4f71f6843b26c9ddfa1a471/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34097b2f33aa16bbd4f71f6843b26c9ddfa1a471/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs?ref=34097b2f33aa16bbd4f71f6843b26c9ddfa1a471", "patch": "@@ -85,6 +85,7 @@ const fn memchr_aligned(x: u8, text: &[u8]) -> Option<usize> {\n         // FIXME(const-hack, fee1-dead): replace with min\n         offset = if offset < len { offset } else { len };\n         // FIXME(const-hack, fee1-dead): replace with range slicing\n+        // SAFETY: offset is within bounds\n         let slice = unsafe { super::from_raw_parts(text.as_ptr(), offset) };\n         if let Some(index) = memchr_naive(x, slice) {\n             return Some(index);\n@@ -113,6 +114,7 @@ const fn memchr_aligned(x: u8, text: &[u8]) -> Option<usize> {\n     // Find the byte after the point the body loop stopped.\n     // FIXME(const-hack): Use `?` instead.\n     // FIXME(const-hack, fee1-dead): use range slicing\n+    // SAFETY: offset is within bounds\n     let slice = unsafe { super::from_raw_parts(text.as_ptr().add(offset), text.len() - offset) };\n     if let Some(i) = memchr_naive(x, slice) { Some(offset + i) } else { None }\n }"}]}