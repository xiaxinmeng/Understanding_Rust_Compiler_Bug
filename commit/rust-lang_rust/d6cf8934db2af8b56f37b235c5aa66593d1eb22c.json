{"sha": "d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "node_id": "C_kwDOAAsO6NoAKGQ2Y2Y4OTM0ZGIyYWY4YjU2ZjM3YjIzNWM1YWE2NjU5M2QxZWIyMmM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-10-21T13:49:11Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-10-21T14:22:13Z"}, "message": "Require Drop impls to have the same constness on its bounds as the bounds on the struct have", "tree": {"sha": "866302db5b1ad7e66dfb50369bc5f5d37435bf5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/866302db5b1ad7e66dfb50369bc5f5d37435bf5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "html_url": "https://github.com/rust-lang/rust/commit/d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "349ba6bb51f53d93286600a0a078fefafff9e0d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/349ba6bb51f53d93286600a0a078fefafff9e0d3", "html_url": "https://github.com/rust-lang/rust/commit/349ba6bb51f53d93286600a0a078fefafff9e0d3"}], "stats": {"total": 169, "additions": 116, "deletions": 53}, "files": [{"sha": "3d55ffc595f5369b8df7752b5152ff18d684555b", "filename": "compiler/rustc_hir_analysis/src/check/dropck.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs?ref=d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "patch": "@@ -184,13 +184,7 @@ fn ensure_drop_predicates_are_implied_by_item_defn<'tcx>(\n             let p = p.kind();\n             match (predicate.skip_binder(), p.skip_binder()) {\n                 (ty::PredicateKind::Trait(a), ty::PredicateKind::Trait(b)) => {\n-                    // Since struct predicates cannot have ~const, project the impl predicate\n-                    // onto one that ignores the constness. This is equivalent to saying that\n-                    // we match a `Trait` bound on the struct with a `Trait` or `~const Trait`\n-                    // in the impl.\n-                    let non_const_a =\n-                        ty::TraitPredicate { constness: ty::BoundConstness::NotConst, ..a };\n-                    relator.relate(predicate.rebind(non_const_a), p.rebind(b)).is_ok()\n+                    relator.relate(predicate.rebind(a), p.rebind(b)).is_ok()\n                 }\n                 (ty::PredicateKind::Projection(a), ty::PredicateKind::Projection(b)) => {\n                     relator.relate(predicate.rebind(a), p.rebind(b)).is_ok()"}, {"sha": "796c0d388eaf04226d67b1c94e4647bb9b751a05", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.precise.stderr", "status": "modified", "additions": 43, "deletions": 22, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr?ref=d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "patch": "@@ -45,34 +45,55 @@ note: required by a bound in `check`\n LL | const fn check<T: ~const Destruct>(_: T) {}\n    |                   ^^^^^^^^^^^^^^^ required by this bound in `check`\n \n-error[E0277]: the trait bound `ConstDropImplWithBounds<NonTrivialDrop>: ~const Destruct` is not satisfied\n+error[E0277]: the trait bound `NonTrivialDrop: ~const A` is not satisfied\n+  --> $DIR/const-drop-fail.rs:48:47\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |     ----------------------------------------- ^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: the trait `A` is implemented for `NonTrivialDrop`, but that implementation is not `const`\n+  --> $DIR/const-drop-fail.rs:48:47\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |                                               ^^^^^^^^^^^\n+note: required by a bound in `ConstDropImplWithBounds`\n+  --> $DIR/const-drop-fail.rs:27:35\n+   |\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n+\n+error[E0277]: the trait bound `NonTrivialDrop: ~const A` is not satisfied\n+  --> $DIR/const-drop-fail.rs:48:5\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n+   |\n+note: the trait `A` is implemented for `NonTrivialDrop`, but that implementation is not `const`\n   --> $DIR/const-drop-fail.rs:48:5\n    |\n-LL |         const _: () = check($exp);\n-   |                       ----- required by a bound introduced by this call\n-...\n LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const Destruct` is not implemented for `ConstDropImplWithBounds<NonTrivialDrop>`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: required by a bound in `ConstDropImplWithBounds`\n+  --> $DIR/const-drop-fail.rs:27:35\n    |\n-note: required for `ConstDropImplWithBounds<NonTrivialDrop>` to implement `~const Destruct`\n-  --> $DIR/const-drop-fail.rs:29:25\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n+\n+error[E0367]: `Drop` impl requires `T: ~const A` but the struct it is implemented for does not\n+  --> $DIR/const-drop-fail.rs:55:9\n    |\n-LL | impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {\n-   |                         ^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: 1 redundant requirement hidden\n-   = note: required for `ConstDropImplWithBounds<NonTrivialDrop>` to implement `~const Destruct`\n-note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:35:19\n+LL | impl<T: ~const A> const Drop for ConstDropImplWithNonConstBounds<T> {\n+   |         ^^^^^^^^\n    |\n-LL | const fn check<T: ~const Destruct>(_: T) {}\n-   |                   ^^^^^^^^^^^^^^^ required by this bound in `check`\n-help: consider borrowing here\n+note: the implementor must specify the same requirement\n+  --> $DIR/const-drop-fail.rs:53:1\n    |\n-LL |     &ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n-   |     +\n-LL |     &mut ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n-   |     ++++\n+LL | struct ConstDropImplWithNonConstBounds<T: A>(PhantomData<T>);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 5 previous errors\n \n-For more information about this error, try `rustc --explain E0277`.\n+Some errors have detailed explanations: E0277, E0367.\n+For more information about an error, try `rustc --explain E0277`."}, {"sha": "d36c7f81ced8cf7b98c06760fffe88b71d564eb4", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs?ref=d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "patch": "@@ -24,7 +24,7 @@ trait A { fn a() { } }\n \n impl A for NonTrivialDrop {}\n \n-struct ConstDropImplWithBounds<T: A>(PhantomData<T>);\n+struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n \n impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {\n     fn drop(&mut self) {\n@@ -47,6 +47,16 @@ check_all! {\n     //~^ ERROR can't drop\n     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n     //~^ ERROR the trait bound\n+    //~| ERROR the trait bound\n+}\n+\n+struct ConstDropImplWithNonConstBounds<T: A>(PhantomData<T>);\n+\n+impl<T: ~const A> const Drop for ConstDropImplWithNonConstBounds<T> {\n+//~^ ERROR `Drop` impl requires `T: ~const A` but the struct it is implemented for does not\n+    fn drop(&mut self) {\n+        T::a();\n+    }\n }\n \n fn main() {}"}, {"sha": "796c0d388eaf04226d67b1c94e4647bb9b751a05", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.stock.stderr", "status": "modified", "additions": 43, "deletions": 22, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr?ref=d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "patch": "@@ -45,34 +45,55 @@ note: required by a bound in `check`\n LL | const fn check<T: ~const Destruct>(_: T) {}\n    |                   ^^^^^^^^^^^^^^^ required by this bound in `check`\n \n-error[E0277]: the trait bound `ConstDropImplWithBounds<NonTrivialDrop>: ~const Destruct` is not satisfied\n+error[E0277]: the trait bound `NonTrivialDrop: ~const A` is not satisfied\n+  --> $DIR/const-drop-fail.rs:48:47\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |     ----------------------------------------- ^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: the trait `A` is implemented for `NonTrivialDrop`, but that implementation is not `const`\n+  --> $DIR/const-drop-fail.rs:48:47\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |                                               ^^^^^^^^^^^\n+note: required by a bound in `ConstDropImplWithBounds`\n+  --> $DIR/const-drop-fail.rs:27:35\n+   |\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n+\n+error[E0277]: the trait bound `NonTrivialDrop: ~const A` is not satisfied\n+  --> $DIR/const-drop-fail.rs:48:5\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n+   |\n+note: the trait `A` is implemented for `NonTrivialDrop`, but that implementation is not `const`\n   --> $DIR/const-drop-fail.rs:48:5\n    |\n-LL |         const _: () = check($exp);\n-   |                       ----- required by a bound introduced by this call\n-...\n LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const Destruct` is not implemented for `ConstDropImplWithBounds<NonTrivialDrop>`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: required by a bound in `ConstDropImplWithBounds`\n+  --> $DIR/const-drop-fail.rs:27:35\n    |\n-note: required for `ConstDropImplWithBounds<NonTrivialDrop>` to implement `~const Destruct`\n-  --> $DIR/const-drop-fail.rs:29:25\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n+\n+error[E0367]: `Drop` impl requires `T: ~const A` but the struct it is implemented for does not\n+  --> $DIR/const-drop-fail.rs:55:9\n    |\n-LL | impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {\n-   |                         ^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: 1 redundant requirement hidden\n-   = note: required for `ConstDropImplWithBounds<NonTrivialDrop>` to implement `~const Destruct`\n-note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:35:19\n+LL | impl<T: ~const A> const Drop for ConstDropImplWithNonConstBounds<T> {\n+   |         ^^^^^^^^\n    |\n-LL | const fn check<T: ~const Destruct>(_: T) {}\n-   |                   ^^^^^^^^^^^^^^^ required by this bound in `check`\n-help: consider borrowing here\n+note: the implementor must specify the same requirement\n+  --> $DIR/const-drop-fail.rs:53:1\n    |\n-LL |     &ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n-   |     +\n-LL |     &mut ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n-   |     ++++\n+LL | struct ConstDropImplWithNonConstBounds<T: A>(PhantomData<T>);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 5 previous errors\n \n-For more information about this error, try `rustc --explain E0277`.\n+Some errors have detailed explanations: E0277, E0367.\n+For more information about an error, try `rustc --explain E0277`."}, {"sha": "b0fc3adf984a48c240678357962e2f9bdcda22ff", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs?ref=d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "patch": "@@ -60,7 +60,7 @@ mod t {\n         fn foo() {}\n     }\n \n-    pub struct ConstDropWithBound<T: SomeTrait>(pub core::marker::PhantomData<T>);\n+    pub struct ConstDropWithBound<T: ~const SomeTrait>(pub core::marker::PhantomData<T>);\n \n     impl<T: ~const SomeTrait> const Drop for ConstDropWithBound<T> {\n         fn drop(&mut self) {"}, {"sha": "285cef571f332329098c109b7f38f5d8acac8db2", "filename": "src/test/ui/rfc-2632-const-trait-impl/tilde_const_on_impl_bound.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde_const_on_impl_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6cf8934db2af8b56f37b235c5aa66593d1eb22c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde_const_on_impl_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde_const_on_impl_bound.rs?ref=d6cf8934db2af8b56f37b235c5aa66593d1eb22c", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+#![feature(const_trait_impl)]\n+\n+#[const_trait]\n+trait Foo {\n+    fn foo(&self) {}\n+}\n+\n+struct Bar<T>(T);\n+\n+impl<T: ~const Foo> Bar<T> {\n+    const fn foo(&self) {\n+        self.0.foo()\n+    }\n+}\n+\n+fn main() {}"}]}