{"sha": "50a5e2053dc380ed481dde8a52a1dec675182e56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYTVlMjA1M2RjMzgwZWQ0ODFkZGU4YTUyYTFkZWM2NzUxODJlNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-06T09:11:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-06T09:11:56Z"}, "message": "Auto merge of #1137 - anp:track-caller-update, r=RalfJung\n\nUpdate panic machinery to match #[track_caller] changes.\n\nThis gets miri's tests passing again with https://github.com/rust-lang/rust/pull/67137, I don't think it will pass CI until that has merged.", "tree": {"sha": "d9bc3b9ef2bfaef545f58cf9ba1da780402c4acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9bc3b9ef2bfaef545f58cf9ba1da780402c4acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50a5e2053dc380ed481dde8a52a1dec675182e56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50a5e2053dc380ed481dde8a52a1dec675182e56", "html_url": "https://github.com/rust-lang/rust/commit/50a5e2053dc380ed481dde8a52a1dec675182e56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50a5e2053dc380ed481dde8a52a1dec675182e56/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3c267d07cfae435e03b0c5878becc74058fe46e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c267d07cfae435e03b0c5878becc74058fe46e", "html_url": "https://github.com/rust-lang/rust/commit/f3c267d07cfae435e03b0c5878becc74058fe46e"}, {"sha": "3607dafd9b81ff2ea18861ce8bea110513e87807", "url": "https://api.github.com/repos/rust-lang/rust/commits/3607dafd9b81ff2ea18861ce8bea110513e87807", "html_url": "https://github.com/rust-lang/rust/commit/3607dafd9b81ff2ea18861ce8bea110513e87807"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "44bed6b73d1a5a85e2fa653b96e66ad317a3ff41", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -1 +1 @@\n-0ec370670220b712b042ee09aab067ec7e5878d5\n+093241deae70ba38413aff823b31c23731debf14"}, {"sha": "f3b271c3595296daefae90dfe88da67b9bbb0c26", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -7,7 +7,7 @@ extern crate rustc_driver;\n extern crate rustc_errors;\n extern crate rustc_interface;\n extern crate rustc_metadata;\n-extern crate syntax;\n+extern crate rustc_span;\n \n use std::io;\n use std::io::Write;\n@@ -40,7 +40,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n                 impl<'tcx, 'hir> itemlikevisit::ItemLikeVisitor<'hir> for Visitor<'tcx> {\n                     fn visit_item(&mut self, i: &'hir hir::Item) {\n                         if let hir::ItemKind::Fn(.., body_id) = i.kind {\n-                            if i.attrs.iter().any(|attr| attr.check_name(syntax::symbol::sym::test))\n+                            if i.attrs.iter().any(|attr| attr.check_name(rustc_span::symbol::sym::test))\n                             {\n                                 let config = MiriConfig {\n                                     validate: true,"}, {"sha": "17c5fc20608e253f09e3b636f38b6c2f9ec467c9", "filename": "src/bin/miri.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -12,7 +12,7 @@ extern crate rustc_driver;\n extern crate rustc_errors;\n extern crate rustc_interface;\n extern crate rustc_metadata;\n-extern crate syntax;\n+extern crate rustc_span;\n \n use std::convert::TryFrom;\n use std::env;"}, {"sha": "1968111307e77aacff7abdf03ad3b71bfd243f5b", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -47,7 +47,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n     config: MiriConfig,\n ) -> InterpResult<'tcx, (InterpCx<'mir, 'tcx, Evaluator<'tcx>>, MPlaceTy<'tcx, Tag>)> {\n     let mut ecx = InterpCx::new(\n-        tcx.at(syntax::source_map::DUMMY_SP),\n+        tcx.at(rustc_span::source_map::DUMMY_SP),\n         ty::ParamEnv::reveal_all(),\n         Evaluator::new(config.communicate),\n         MemoryExtra::new("}, {"sha": "17d74d2ef757c6ea1156160f11eaca361585fa52", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -8,7 +8,7 @@ use rustc::ty::{\n     layout::{self, LayoutOf, Size, TyLayout},\n     List, TyCtxt,\n };\n-use syntax::source_map::DUMMY_SP;\n+use rustc_span::source_map::DUMMY_SP;\n \n use rand::RngCore;\n "}, {"sha": "2ddcdf8ff7776a679127f177836a5eb83cafa6b4", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -10,6 +10,7 @@ extern crate rustc_apfloat;\n extern crate syntax;\n #[macro_use]\n extern crate rustc;\n+extern crate rustc_span;\n extern crate rustc_data_structures;\n extern crate rustc_mir;\n extern crate rustc_target;"}, {"sha": "4c1446c82c748869c990e51a47c8f627a2ba1556", "filename": "src/machine.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -14,7 +14,8 @@ use rustc::ty::{\n     layout::{LayoutOf, Size},\n     Ty, TyCtxt,\n };\n-use syntax::{attr, source_map::Span, symbol::sym};\n+use rustc_span::{source_map::Span, symbol::sym};\n+use syntax::attr;\n \n use crate::*;\n \n@@ -182,6 +183,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n     #[inline(always)]\n     fn find_mir_or_eval_fn(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n+        _span: Span,\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx, Tag>],\n         ret: Option<(PlaceTy<'tcx, Tag>, mir::BasicBlock)>,"}, {"sha": "6ad16c6f676470ec514f9ad437089d7605d00900", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -5,8 +5,8 @@ use rustc::mir;\n use rustc::ty;\n use rustc::ty::layout::{Align, LayoutOf, Size};\n use rustc_apfloat::Float;\n+use rustc_span::symbol::sym;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n use crate::*;\n \n@@ -961,7 +961,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 // lpBuffer : ptr to buffer that receives contents of the env_var as a null-terminated string.\n                 // Return `# of chars` stored in the buffer pointed to by lpBuffer, excluding null-terminator.\n                 // Return 0 upon failure.\n-                \n+\n                 // This is not the env var you are looking for.\n                 this.set_last_error(Scalar::from_u32(203))?; // ERROR_ENVVAR_NOT_FOUND\n                 this.write_null(dest)?;"}, {"sha": "a7aec53c37deb54a6208e213e5e3686de23790c4", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -5,7 +5,7 @@ use rustc::mir::interpret::{InterpResult, PointerArithmetic};\n use rustc::ty;\n use rustc::ty::layout::{self, Align, LayoutOf, Size};\n use rustc_apfloat::Float;\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n use crate::*;\n "}, {"sha": "950a23aa59caca6e18af9dbcfba56b017d209715", "filename": "src/shims/panic.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a5e2053dc380ed481dde8a52a1dec675182e56/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=50a5e2053dc380ed481dde8a52a1dec675182e56", "patch": "@@ -14,7 +14,7 @@\n use rustc::mir;\n use rustc::ty::{self, layout::LayoutOf};\n use rustc_target::spec::PanicStrategy;\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n use crate::*;\n \n@@ -187,15 +187,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let msg = msg.description();\n                 let msg = this.allocate_str(msg, MiriMemoryKind::Env.into());\n \n-                // Second arg: Caller location.\n-                let location = this.alloc_caller_location_for_span(span);\n-\n                 // Call the lang item.\n                 let panic = this.tcx.lang_items().panic_fn().unwrap();\n                 let panic = ty::Instance::mono(this.tcx.tcx, panic);\n                 this.call_function(\n                     panic,\n-                    &[msg.to_ref(), location.ptr.into()],\n+                    &[msg.to_ref()],\n                     None,\n                     StackPopCleanup::Goto { ret: None, unwind },\n                 )?;"}]}