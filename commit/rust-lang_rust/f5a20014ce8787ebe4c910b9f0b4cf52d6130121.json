{"sha": "f5a20014ce8787ebe4c910b9f0b4cf52d6130121", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YTIwMDE0Y2U4Nzg3ZWJlNGM5MTBiOWYwYjRjZjUyZDYxMzAxMjE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-04T12:41:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-04T12:41:56Z"}, "message": "minor, if let else -> match", "tree": {"sha": "fec5c82d14126ebc075305fd3f0a48d60020e9e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fec5c82d14126ebc075305fd3f0a48d60020e9e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5a20014ce8787ebe4c910b9f0b4cf52d6130121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a20014ce8787ebe4c910b9f0b4cf52d6130121", "html_url": "https://github.com/rust-lang/rust/commit/f5a20014ce8787ebe4c910b9f0b4cf52d6130121", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5a20014ce8787ebe4c910b9f0b4cf52d6130121/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "html_url": "https://github.com/rust-lang/rust/commit/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "9e1a1c1ecf4556832be04941a3bd1146916bc4e3", "filename": "crates/ra_ide/src/imports_locator.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f5a20014ce8787ebe4c910b9f0b4cf52d6130121/crates%2Fra_ide%2Fsrc%2Fimports_locator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a20014ce8787ebe4c910b9f0b4cf52d6130121/crates%2Fra_ide%2Fsrc%2Fimports_locator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fimports_locator.rs?ref=f5a20014ce8787ebe4c910b9f0b4cf52d6130121", "patch": "@@ -64,12 +64,9 @@ impl ImportsLocator for ImportsLocatorIde<'_> {\n             .into_iter()\n             .chain(lib_results.into_iter())\n             .filter_map(|import_candidate| self.get_name_definition(db, &import_candidate))\n-            .filter_map(|name_definition_to_import| {\n-                if let NameKind::Def(module_def) = name_definition_to_import.kind {\n-                    Some(module_def)\n-                } else {\n-                    None\n-                }\n+            .filter_map(|name_definition_to_import| match name_definition_to_import.kind {\n+                NameKind::Def(module_def) => Some(module_def),\n+                _ => None,\n             })\n             .collect()\n     }"}]}