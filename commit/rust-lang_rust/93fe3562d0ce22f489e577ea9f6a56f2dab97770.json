{"sha": "93fe3562d0ce22f489e577ea9f6a56f2dab97770", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZmUzNTYyZDBjZTIyZjQ4OWU1NzdlYTlmNmE1NmYyZGFiOTc3NzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-05T21:18:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-05T21:18:05Z"}, "message": "Auto merge of #7174 - camsteffen:eval-order-async, r=flip1995\n\nFix eval_order_dependence async false positive\n\nchangelog: Fix [`eval_order_dependence`] false positive in async code\n\nFixes #6925", "tree": {"sha": "8cdb7700c8cdd685d3fd92efb94a0d48a714bba9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cdb7700c8cdd685d3fd92efb94a0d48a714bba9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93fe3562d0ce22f489e577ea9f6a56f2dab97770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93fe3562d0ce22f489e577ea9f6a56f2dab97770", "html_url": "https://github.com/rust-lang/rust/commit/93fe3562d0ce22f489e577ea9f6a56f2dab97770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93fe3562d0ce22f489e577ea9f6a56f2dab97770/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "182a1853c3adfed34b084614c333d4945d5a24f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/182a1853c3adfed34b084614c333d4945d5a24f2", "html_url": "https://github.com/rust-lang/rust/commit/182a1853c3adfed34b084614c333d4945d5a24f2"}, {"sha": "7a7b8bd3e885ec97725579d89ba3ac12a1e6f93f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7b8bd3e885ec97725579d89ba3ac12a1e6f93f", "html_url": "https://github.com/rust-lang/rust/commit/7a7b8bd3e885ec97725579d89ba3ac12a1e6f93f"}], "stats": {"total": 60, "additions": 33, "deletions": 27}, "files": [{"sha": "41acf55dd7d572ec8a75994ec4e924ad4e0c70be", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/93fe3562d0ce22f489e577ea9f6a56f2dab97770/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93fe3562d0ce22f489e577ea9f6a56f2dab97770/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=93fe3562d0ce22f489e577ea9f6a56f2dab97770", "patch": "@@ -1,5 +1,6 @@\n use clippy_utils::diagnostics::{span_lint, span_lint_and_note};\n use clippy_utils::{get_parent_expr, path_to_local, path_to_local_id};\n+use if_chain::if_chain;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{BinOpKind, Block, Expr, ExprKind, Guard, HirId, Local, Node, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -70,20 +71,19 @@ declare_lint_pass!(EvalOrderDependence => [EVAL_ORDER_DEPENDENCE, DIVERGING_SUB_\n impl<'tcx> LateLintPass<'tcx> for EvalOrderDependence {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n         // Find a write to a local variable.\n-        match expr.kind {\n-            ExprKind::Assign(lhs, ..) | ExprKind::AssignOp(_, lhs, _) => {\n-                if let Some(var) = path_to_local(lhs) {\n-                    let mut visitor = ReadVisitor {\n-                        cx,\n-                        var,\n-                        write_expr: expr,\n-                        last_expr: expr,\n-                    };\n-                    check_for_unsequenced_reads(&mut visitor);\n-                }\n-            },\n-            _ => {},\n-        }\n+        let var = if_chain! {\n+            if let ExprKind::Assign(lhs, ..) | ExprKind::AssignOp(_, lhs, _) = expr.kind;\n+            if let Some(var) = path_to_local(lhs);\n+            if expr.span.desugaring_kind().is_none();\n+            then { var } else { return; }\n+        };\n+        let mut visitor = ReadVisitor {\n+            cx,\n+            var,\n+            write_expr: expr,\n+            last_expr: expr,\n+        };\n+        check_for_unsequenced_reads(&mut visitor);\n     }\n     fn check_stmt(&mut self, cx: &LateContext<'tcx>, stmt: &'tcx Stmt<'_>) {\n         match stmt.kind {\n@@ -305,7 +305,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ReadVisitor<'a, 'tcx> {\n                     self.cx,\n                     EVAL_ORDER_DEPENDENCE,\n                     expr.span,\n-                    \"unsequenced read of a variable\",\n+                    &format!(\"unsequenced read of `{}`\", self.cx.tcx.hir().name(self.var)),\n                     Some(self.write_expr.span),\n                     \"whether read occurs before this write depends on evaluation order\",\n                 );"}, {"sha": "d742856bc4163af0999ad145af09e9a6d6dc942d", "filename": "tests/ui/eval_order_dependence.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/93fe3562d0ce22f489e577ea9f6a56f2dab97770/tests%2Fui%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93fe3562d0ce22f489e577ea9f6a56f2dab97770/tests%2Fui%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.rs?ref=93fe3562d0ce22f489e577ea9f6a56f2dab97770", "patch": "@@ -1,3 +1,5 @@\n+// edition:2018\n+\n #[warn(clippy::eval_order_dependence)]\n #[allow(\n     unused_assignments,\n@@ -107,3 +109,7 @@ fn main() {\n         },\n     );\n }\n+\n+async fn issue_6925() {\n+    let _ = vec![async { true }.await, async { false }.await];\n+}"}, {"sha": "35eb85e95a320bf72497178054bf1a1a312bc20c", "filename": "tests/ui/eval_order_dependence.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/93fe3562d0ce22f489e577ea9f6a56f2dab97770/tests%2Fui%2Feval_order_dependence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93fe3562d0ce22f489e577ea9f6a56f2dab97770/tests%2Fui%2Feval_order_dependence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.stderr?ref=93fe3562d0ce22f489e577ea9f6a56f2dab97770", "patch": "@@ -1,48 +1,48 @@\n-error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:15:9\n+error: unsequenced read of `x`\n+  --> $DIR/eval_order_dependence.rs:17:9\n    |\n LL |     } + x;\n    |         ^\n    |\n    = note: `-D clippy::eval-order-dependence` implied by `-D warnings`\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:13:9\n+  --> $DIR/eval_order_dependence.rs:15:9\n    |\n LL |         x = 1;\n    |         ^^^^^\n \n-error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:18:5\n+error: unsequenced read of `x`\n+  --> $DIR/eval_order_dependence.rs:20:5\n    |\n LL |     x += {\n    |     ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:19:9\n+  --> $DIR/eval_order_dependence.rs:21:9\n    |\n LL |         x = 20;\n    |         ^^^^^^\n \n-error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:31:12\n+error: unsequenced read of `x`\n+  --> $DIR/eval_order_dependence.rs:33:12\n    |\n LL |         a: x,\n    |            ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:33:13\n+  --> $DIR/eval_order_dependence.rs:35:13\n    |\n LL |             x = 6;\n    |             ^^^^^\n \n-error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:40:9\n+error: unsequenced read of `x`\n+  --> $DIR/eval_order_dependence.rs:42:9\n    |\n LL |         x += {\n    |         ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:41:13\n+  --> $DIR/eval_order_dependence.rs:43:13\n    |\n LL |             x = 20;\n    |             ^^^^^^"}]}