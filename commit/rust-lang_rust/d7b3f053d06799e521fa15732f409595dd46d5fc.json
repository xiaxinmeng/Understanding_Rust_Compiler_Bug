{"sha": "d7b3f053d06799e521fa15732f409595dd46d5fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3YjNmMDUzZDA2Nzk5ZTUyMWZhMTU3MzJmNDA5NTk1ZGQ0NmQ1ZmM=", "commit": {"author": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2017-03-31T15:12:47Z"}, "committer": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2017-03-31T15:12:47Z"}, "message": "Improve some docs for VecDeque", "tree": {"sha": "345d4aca69fc30ae5f510939e52042e0813851fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/345d4aca69fc30ae5f510939e52042e0813851fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7b3f053d06799e521fa15732f409595dd46d5fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b3f053d06799e521fa15732f409595dd46d5fc", "html_url": "https://github.com/rust-lang/rust/commit/d7b3f053d06799e521fa15732f409595dd46d5fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7b3f053d06799e521fa15732f409595dd46d5fc/comments", "author": null, "committer": null, "parents": [{"sha": "c6df67afca788453a3c494899fbf5295992bcfba", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6df67afca788453a3c494899fbf5295992bcfba", "html_url": "https://github.com/rust-lang/rust/commit/c6df67afca788453a3c494899fbf5295992bcfba"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "c37bf752e86bc492b7eb57566cbd53dfc3ca6000", "filename": "src/libcollections/vec_deque.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d7b3f053d06799e521fa15732f409595dd46d5fc/src%2Flibcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b3f053d06799e521fa15732f409595dd46d5fc/src%2Flibcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_deque.rs?ref=d7b3f053d06799e521fa15732f409595dd46d5fc", "patch": "@@ -635,7 +635,7 @@ impl<T> VecDeque<T> {\n         }\n     }\n \n-    /// Shortens a `VecDeque`, dropping excess elements from the back.\n+    /// Shortens the `VecDeque`, dropping excess elements from the back.\n     ///\n     /// If `len` is greater than the `VecDeque`'s current length, this has no\n     /// effect.\n@@ -941,7 +941,7 @@ impl<T> VecDeque<T> {\n         a.contains(x) || b.contains(x)\n     }\n \n-    /// Provides a reference to the front element, or `None` if the sequence is\n+    /// Provides a reference to the front element, or `None` if the `VecDeque` is\n     /// empty.\n     ///\n     /// # Examples\n@@ -966,7 +966,7 @@ impl<T> VecDeque<T> {\n     }\n \n     /// Provides a mutable reference to the front element, or `None` if the\n-    /// sequence is empty.\n+    /// `VecDeque` is empty.\n     ///\n     /// # Examples\n     ///\n@@ -993,7 +993,7 @@ impl<T> VecDeque<T> {\n         }\n     }\n \n-    /// Provides a reference to the back element, or `None` if the sequence is\n+    /// Provides a reference to the back element, or `None` if the `VecDeque` is\n     /// empty.\n     ///\n     /// # Examples\n@@ -1018,7 +1018,7 @@ impl<T> VecDeque<T> {\n     }\n \n     /// Provides a mutable reference to the back element, or `None` if the\n-    /// sequence is empty.\n+    /// `VecDeque` is empty.\n     ///\n     /// # Examples\n     ///\n@@ -1046,7 +1046,7 @@ impl<T> VecDeque<T> {\n         }\n     }\n \n-    /// Removes the first element and returns it, or `None` if the sequence is\n+    /// Removes the first element and returns it, or `None` if the `VecDeque` is\n     /// empty.\n     ///\n     /// # Examples\n@@ -1073,7 +1073,7 @@ impl<T> VecDeque<T> {\n         }\n     }\n \n-    /// Inserts an element first in the sequence.\n+    /// Prepends an element to the front of the `VecDeque`.\n     ///\n     /// # Examples\n     ///\n@@ -1096,7 +1096,7 @@ impl<T> VecDeque<T> {\n         }\n     }\n \n-    /// Appends an element to the back of a buffer\n+    /// Appends an element to the back of the `VecDeque`.\n     ///\n     /// # Examples\n     ///\n@@ -1117,7 +1117,7 @@ impl<T> VecDeque<T> {\n         unsafe { self.buffer_write(head, value) }\n     }\n \n-    /// Removes the last element from a buffer and returns it, or `None` if\n+    /// Removes the last element from the `VecDeque` and returns it, or `None` if\n     /// it is empty.\n     ///\n     /// # Examples"}]}