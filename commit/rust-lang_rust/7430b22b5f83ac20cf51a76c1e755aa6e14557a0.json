{"sha": "7430b22b5f83ac20cf51a76c1e755aa6e14557a0", "node_id": "C_kwDOAAsO6NoAKDc0MzBiMjJiNWY4M2FjMjBjZjUxYTc2YzFlNzU1YWE2ZTE0NTU3YTA", "commit": {"author": {"name": "woppopo", "email": "woppopo@protonmail.com", "date": "2021-10-25T15:41:39Z"}, "committer": {"name": "woppopo", "email": "woppopo@protonmail.com", "date": "2021-10-25T15:41:39Z"}, "message": "Make `Option::expect` const", "tree": {"sha": "5b300c4187b080e41d8c3e3ad41cfd3498f03f96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b300c4187b080e41d8c3e3ad41cfd3498f03f96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7430b22b5f83ac20cf51a76c1e755aa6e14557a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7430b22b5f83ac20cf51a76c1e755aa6e14557a0", "html_url": "https://github.com/rust-lang/rust/commit/7430b22b5f83ac20cf51a76c1e755aa6e14557a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7430b22b5f83ac20cf51a76c1e755aa6e14557a0/comments", "author": {"login": "lilasta", "id": 77098789, "node_id": "MDQ6VXNlcjc3MDk4Nzg5", "avatar_url": "https://avatars.githubusercontent.com/u/77098789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilasta", "html_url": "https://github.com/lilasta", "followers_url": "https://api.github.com/users/lilasta/followers", "following_url": "https://api.github.com/users/lilasta/following{/other_user}", "gists_url": "https://api.github.com/users/lilasta/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilasta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilasta/subscriptions", "organizations_url": "https://api.github.com/users/lilasta/orgs", "repos_url": "https://api.github.com/users/lilasta/repos", "events_url": "https://api.github.com/users/lilasta/events{/privacy}", "received_events_url": "https://api.github.com/users/lilasta/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilasta", "id": 77098789, "node_id": "MDQ6VXNlcjc3MDk4Nzg5", "avatar_url": "https://avatars.githubusercontent.com/u/77098789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilasta", "html_url": "https://github.com/lilasta", "followers_url": "https://api.github.com/users/lilasta/followers", "following_url": "https://api.github.com/users/lilasta/following{/other_user}", "gists_url": "https://api.github.com/users/lilasta/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilasta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilasta/subscriptions", "organizations_url": "https://api.github.com/users/lilasta/orgs", "repos_url": "https://api.github.com/users/lilasta/repos", "events_url": "https://api.github.com/users/lilasta/events{/privacy}", "received_events_url": "https://api.github.com/users/lilasta/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "235d9853d80f93d31b9c4ae044d6f5c4de3e7255", "url": "https://api.github.com/repos/rust-lang/rust/commits/235d9853d80f93d31b9c4ae044d6f5c4de3e7255", "html_url": "https://github.com/rust-lang/rust/commit/235d9853d80f93d31b9c4ae044d6f5c4de3e7255"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "7dfbbe9cd950ec559b4fc86248a4e5049d5894c1", "filename": "library/core/src/option.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7430b22b5f83ac20cf51a76c1e755aa6e14557a0/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7430b22b5f83ac20cf51a76c1e755aa6e14557a0/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=7430b22b5f83ac20cf51a76c1e755aa6e14557a0", "patch": "@@ -703,7 +703,8 @@ impl<T> Option<T> {\n     #[inline]\n     #[track_caller]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn expect(self, msg: &str) -> T {\n+    #[rustc_const_unstable(feature = \"const_option\", issue = \"67441\")]\n+    pub const fn expect(self, msg: &str) -> T {\n         match self {\n             Some(val) => val,\n             None => expect_failed(msg),\n@@ -1634,7 +1635,7 @@ impl<T, E> Option<Result<T, E>> {\n #[inline(never)]\n #[cold]\n #[track_caller]\n-fn expect_failed(msg: &str) -> ! {\n+const fn expect_failed(msg: &str) -> ! {\n     panic!(\"{}\", msg)\n }\n "}]}