{"sha": "4810c4712f9edc4c378142ace1b868fc2fd1eeea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MTBjNDcxMmY5ZWRjNGMzNzgxNDJhY2UxYjg2OGZjMmZkMWVlZWE=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-02-13T17:50:20Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-02-13T17:50:20Z"}, "message": "Add shared script for linkchecking books.", "tree": {"sha": "104a89fa38b910198e274da3311a160d8575ad39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/104a89fa38b910198e274da3311a160d8575ad39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4810c4712f9edc4c378142ace1b868fc2fd1eeea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4810c4712f9edc4c378142ace1b868fc2fd1eeea", "html_url": "https://github.com/rust-lang/rust/commit/4810c4712f9edc4c378142ace1b868fc2fd1eeea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4810c4712f9edc4c378142ace1b868fc2fd1eeea/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d538b80ad77949e46989cd355cdec193b574f052", "url": "https://api.github.com/repos/rust-lang/rust/commits/d538b80ad77949e46989cd355cdec193b574f052", "html_url": "https://github.com/rust-lang/rust/commit/d538b80ad77949e46989cd355cdec193b574f052"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "bbccc17e494c88325b181dc8ebe3d3ef9e831690", "filename": "src/tools/linkchecker/linkcheck.sh", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/4810c4712f9edc4c378142ace1b868fc2fd1eeea/src%2Ftools%2Flinkchecker%2Flinkcheck.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4810c4712f9edc4c378142ace1b868fc2fd1eeea/src%2Ftools%2Flinkchecker%2Flinkcheck.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Flinkcheck.sh?ref=4810c4712f9edc4c378142ace1b868fc2fd1eeea", "patch": "@@ -0,0 +1,113 @@\n+#!/bin/sh\n+#\n+# This is a script that can be used in each book's CI to validate links using\n+# the same tool as rust-lang/rust.\n+#\n+# This requires the rust-docs rustup component to be installed in the nightly\n+# toolchain.\n+#\n+# Usage:\n+#   ./linkcheck.sh <name-of-book>\n+#\n+# Options:\n+#\n+# -i        \"Iterative\" mode. The script will not clean up after it is done so\n+#           you can inspect the result, and re-run more quickly.\n+#\n+# --all     Check all books. This can help make sure you don't break links\n+#           from other books into your book.\n+\n+set -e\n+\n+if [ ! -f book.toml ] && [ ! -f src/SUMMARY.md ]\n+then\n+    echo \"Run command in root directory of the book.\"\n+    exit 1\n+fi\n+\n+html_dir=\"$(rustc +nightly --print sysroot)/share/doc/rust/html\"\n+\n+if [ ! -d \"$html_dir\" ]\n+then\n+    echo \"HTML docs are missing from sysroot: $html_dir\"\n+    echo \"Make sure the nightly rust-docs rustup component is installed.\"\n+    exit 1\n+fi\n+\n+book_name=\"\"\n+# Iterative will avoid cleaning up, so you can quickly run it repeatedly.\n+iterative=0\n+# If \"1\", test all books, else only this book.\n+all_books=0\n+\n+while [ \"$1\" != \"\" ]\n+do\n+    case \"$1\" in\n+        -i)\n+            iterative=1\n+            ;;\n+        --all)\n+            all_books=1\n+            ;;\n+        *)\n+            if [ -n \"$book_name\" ]\n+            then\n+                echo \"only one argument allowed\"\n+                exit 1\n+            fi\n+            book_name=\"$1\"\n+            ;;\n+    esac\n+    shift\n+done\n+\n+if [ -z \"$book_name\" ]\n+then\n+    echo \"usage: $0 <name-of-book>\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"$html_dir/$book_name\" ]\n+then\n+    echo \"book name \\\"$book_name\\\" not found in sysroot \\\"$html_dir\\\"\"\n+    exit 1\n+fi\n+\n+if [ \"$iterative\" = \"0\" ]\n+then\n+    echo \"Cleaning old directories...\"\n+    rm -rf linkcheck linkchecker\n+fi\n+\n+if [ ! -e \"linkchecker/main.rs\" ] || [ \"$iterative\" = \"0\" ]\n+then\n+    echo \"Downloading linkchecker source...\"\n+    mkdir linkchecker\n+    curl -o linkchecker/Cargo.toml \\\n+        https://raw.githubusercontent.com/rust-lang/rust/master/src/tools/linkchecker/Cargo.toml\n+    curl -o linkchecker/main.rs \\\n+        https://raw.githubusercontent.com/rust-lang/rust/master/src/tools/linkchecker/main.rs\n+fi\n+\n+echo \"Building book \\\"$book_name\\\"...\"\n+mdbook build\n+\n+cp -R \"$html_dir\" linkcheck\n+rm -rf \"linkcheck/$book_name\"\n+cp -R book \"linkcheck/$book_name\"\n+\n+if [ \"$all_books\" = \"1\" ]\n+then\n+    check_path=\"linkcheck\"\n+else\n+    check_path=\"linkcheck/$book_name\"\n+fi\n+echo \"Running linkchecker on \\\"$check_path\\\"...\"\n+cargo run --manifest-path=linkchecker/Cargo.toml -- \"$check_path\"\n+\n+if [ \"$iterative\" = \"0\" ]\n+then\n+    rm -rf linkcheck linkchecker\n+fi\n+\n+echo \"Link check completed successfully!\""}]}