{"sha": "e4f8cd967235cd4d12e484901cb1174c58161a33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZjhjZDk2NzIzNWNkNGQxMmU0ODQ5MDFjYjExNzRjNTgxNjFhMzM=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-06T12:20:41Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-06T12:20:41Z"}, "message": "Rustup https://github.com/rust-lang/rust/pull/59369", "tree": {"sha": "62be248791315b9f28de9a057088f6d8283659b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62be248791315b9f28de9a057088f6d8283659b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4f8cd967235cd4d12e484901cb1174c58161a33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f8cd967235cd4d12e484901cb1174c58161a33", "html_url": "https://github.com/rust-lang/rust/commit/e4f8cd967235cd4d12e484901cb1174c58161a33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4f8cd967235cd4d12e484901cb1174c58161a33/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea26a95fc9aa4fc00aa590d68b665339d79a6884", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea26a95fc9aa4fc00aa590d68b665339d79a6884", "html_url": "https://github.com/rust-lang/rust/commit/ea26a95fc9aa4fc00aa590d68b665339d79a6884"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "fe57c300a340d0186bda23fc9a5e829d68190617", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4f8cd967235cd4d12e484901cb1174c58161a33/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4f8cd967235cd4d12e484901cb1174c58161a33/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=e4f8cd967235cd4d12e484901cb1174c58161a33", "patch": "@@ -230,7 +230,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n             ExprKind::Tup(ref tup) => self.multi(tup).map(Constant::Tuple),\n             ExprKind::Repeat(ref value, _) => {\n                 let n = match self.tables.expr_ty(e).sty {\n-                    ty::Array(_, n) => n.assert_usize(self.lcx.tcx).expect(\"array length\"),\n+                    ty::Array(_, n) => n.eval_usize(self.lcx.tcx, self.lcx.param_env),\n                     _ => span_bug!(e.span, \"typeck error\"),\n                 };\n                 self.expr(value).map(|v| Constant::Repeat(Box::new(v), n))"}, {"sha": "02dafbe2e3981e62941397896c4b50b29ead63e9", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4f8cd967235cd4d12e484901cb1174c58161a33/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4f8cd967235cd4d12e484901cb1174c58161a33/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=e4f8cd967235cd4d12e484901cb1174c58161a33", "patch": "@@ -94,7 +94,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IndexingSlicing {\n             if let Some(range) = higher::range(cx, index) {\n                 // Ranged indexes, i.e., &x[n..m], &x[n..], &x[..n] and &x[..]\n                 if let ty::Array(_, s) = ty.sty {\n-                    let size: u128 = s.assert_usize(cx.tcx).unwrap().into();\n+                    let size: u128 = s.eval_usize(cx.tcx, cx.param_env).into();\n \n                     let const_range = to_const_range(cx, range, size);\n "}, {"sha": "1f9120a5383178315e09f0588a441e8901d2d76c", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e4f8cd967235cd4d12e484901cb1174c58161a33/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4f8cd967235cd4d12e484901cb1174c58161a33/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=e4f8cd967235cd4d12e484901cb1174c58161a33", "patch": "@@ -1253,7 +1253,7 @@ fn is_end_eq_array_len<'tcx>(\n         if let ExprKind::Lit(ref lit) = end.node;\n         if let ast::LitKind::Int(end_int, _) = lit.node;\n         if let ty::Array(_, arr_len_const) = indexed_ty.sty;\n-        if let Some(arr_len) = arr_len_const.assert_usize(cx.tcx);\n+        if let Some(arr_len) = arr_len_const.try_eval_usize(cx.tcx, cx.param_env);\n         then {\n             return match limits {\n                 ast::RangeLimits::Closed => end_int + 1 >= arr_len.into(),\n@@ -1375,7 +1375,7 @@ fn check_for_loop_arg(cx: &LateContext<'_, '_>, pat: &Pat, arg: &Expr, expr: &Ex\n                     match cx.tables.expr_ty(&args[0]).sty {\n                         // If the length is greater than 32 no traits are implemented for array and\n                         // therefore we cannot use `&`.\n-                        ty::Array(_, size) if size.assert_usize(cx.tcx).expect(\"array size\") > 32 => (),\n+                        ty::Array(_, size) if size.eval_usize(cx.tcx, cx.param_env) > 32 => {},\n                         _ => lint_iter_method(cx, args, arg, method_name),\n                     };\n                 } else {\n@@ -1988,7 +1988,7 @@ fn is_ref_iterable_type(cx: &LateContext<'_, '_>, e: &Expr) -> bool {\n fn is_iterable_array<'tcx>(ty: Ty<'tcx>, cx: &LateContext<'_, 'tcx>) -> bool {\n     // IntoIterator is currently only implemented for array sizes <= 32 in rustc\n     match ty.sty {\n-        ty::Array(_, n) => (0..=32).contains(&n.assert_usize(cx.tcx).expect(\"array length\")),\n+        ty::Array(_, n) => (0..=32).contains(&n.eval_usize(cx.tcx, cx.param_env)),\n         _ => false,\n     }\n }"}, {"sha": "f40171aeed35d41c55d1474f6db2c659c465b81a", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4f8cd967235cd4d12e484901cb1174c58161a33/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4f8cd967235cd4d12e484901cb1174c58161a33/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=e4f8cd967235cd4d12e484901cb1174c58161a33", "patch": "@@ -1825,7 +1825,7 @@ fn derefs_to_slice<'a, 'tcx>(\n             ty::Slice(_) => true,\n             ty::Adt(def, _) if def.is_box() => may_slice(cx, ty.boxed_ty()),\n             ty::Adt(..) => match_type(cx, ty, &paths::VEC),\n-            ty::Array(_, size) => size.assert_usize(cx.tcx).expect(\"array length\") < 32,\n+            ty::Array(_, size) => size.eval_usize(cx.tcx, cx.param_env) < 32,\n             ty::Ref(_, inner, _) => may_slice(cx, inner),\n             _ => false,\n         }"}]}