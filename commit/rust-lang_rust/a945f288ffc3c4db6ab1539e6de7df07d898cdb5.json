{"sha": "a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NDVmMjg4ZmZjM2M0ZGI2YWIxNTM5ZTZkZTdkZjA3ZDg5OGNkYjU=", "commit": {"author": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2015-01-07T10:24:18Z"}, "committer": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2015-01-09T16:38:30Z"}, "message": "iOS: makefiles and runtime for new archs", "tree": {"sha": "ab3fb6957226ac31ae67211738db75ea8c15ff82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab3fb6957226ac31ae67211738db75ea8c15ff82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "html_url": "https://github.com/rust-lang/rust/commit/a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/comments", "author": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea045d2055638a6cf66e4bd675c6f7deec7a8d8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea045d2055638a6cf66e4bd675c6f7deec7a8d8b", "html_url": "https://github.com/rust-lang/rust/commit/ea045d2055638a6cf66e4bd675c6f7deec7a8d8b"}], "stats": {"total": 387, "additions": 336, "deletions": 51}, "files": [{"sha": "d1f1ee6f3bdb42b88b0248baeb86319180f055f0", "filename": "mk/cfg/arm-apple-ios.mk", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/ea045d2055638a6cf66e4bd675c6f7deec7a8d8b/mk%2Fcfg%2Farm-apple-ios.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ea045d2055638a6cf66e4bd675c6f7deec7a8d8b/mk%2Fcfg%2Farm-apple-ios.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Farm-apple-ios.mk?ref=ea045d2055638a6cf66e4bd675c6f7deec7a8d8b", "patch": "@@ -1,35 +0,0 @@\n-# arm-apple-ios configuration\n-CFG_SDK_NAME_arm-apple-ios = iphoneos\n-CFG_SDK_ARCHS_arm-apple-ios = armv7\n-ifneq ($(findstring darwin,$(CFG_OSTYPE)),)\n-CFG_IOS_SDK = $(shell xcrun --show-sdk-path -sdk iphoneos 2>/dev/null)\n-CFG_IOS_FLAGS = -target armv7-apple-ios -isysroot $(CFG_IOS_SDK) -mios-version-min=7.0\n-CC_arm-apple-ios = $(shell xcrun -find -sdk iphoneos clang)\n-CXX_arm-apple-ios = $(shell xcrun -find -sdk iphoneos clang++)\n-CPP_arm-apple-ios = $(shell xcrun -find -sdk iphoneos clang++)\n-AR_arm-apple-ios = $(shell xcrun -find -sdk iphoneos ar)\n-endif\n-CFG_LIB_NAME_arm-apple-ios = lib$(1).a\n-CFG_LIB_GLOB_arm-apple-ios = lib$(1)-*.a\n-CFG_STATIC_LIB_NAME_arm-apple-ios=lib$(1).a\n-CFG_LIB_DSYM_GLOB_arm-apple-ios = lib$(1)-*.a.dSYM\n-CFG_JEMALLOC_CFLAGS_arm-apple-ios := -arch armv7 -mfpu=vfp3 $(CFG_IOS_FLAGS)\n-CFG_GCCISH_CFLAGS_arm-apple-ios := -Wall -Werror -g -fPIC $(CFG_IOS_FLAGS) -mfpu=vfp3 -arch armv7\n-CFG_GCCISH_CXXFLAGS_arm-apple-ios := -fno-rtti $(CFG_IOS_FLAGS) -I$(CFG_IOS_SDK)/usr/include/c++/4.2.1\n-CFG_GCCISH_LINK_FLAGS_arm-apple-ios := -lpthread -syslibroot $(CFG_IOS_SDK) -Wl,-no_compact_unwind\n-CFG_GCCISH_DEF_FLAG_arm-apple-ios := -Wl,-exported_symbols_list,\n-CFG_GCCISH_PRE_LIB_FLAGS_arm-apple-ios :=\n-CFG_GCCISH_POST_LIB_FLAGS_arm-apple-ios :=\n-CFG_DEF_SUFFIX_arm-apple-ios := .darwin.def\n-CFG_LLC_FLAGS_arm-apple-ios := -mattr=+vfp3,+v7,+thumb2,+neon -march=arm\n-CFG_INSTALL_NAME_arm-apple-ios = -Wl,-install_name,@rpath/$(1)\n-CFG_EXE_SUFFIX_arm-apple-ios :=\n-CFG_WINDOWSY_arm-apple-ios :=\n-CFG_UNIXY_arm-apple-ios := 1\n-CFG_PATH_MUNGE_arm-apple-ios := true\n-CFG_LDPATH_arm-apple-ios :=\n-CFG_RUN_arm-apple-ios = $(2)\n-CFG_RUN_TARG_arm-apple-ios = $(call CFG_RUN_arm-apple-ios,,$(2))\n-RUSTC_FLAGS_arm-apple-ios := -C relocation_model=pic\n-RUSTC_CROSS_FLAGS_arm-apple-ios :=-C relocation_model=pic\n-CFG_GNU_TRIPLE_arm-apple-ios := arm-apple-ios"}, {"sha": "23686c41f2b19ccfc7063d74d1ec5b942ae3f1b1", "filename": "mk/cfg/armv7-apple-ios.mk", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/mk%2Fcfg%2Farmv7-apple-ios.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/mk%2Fcfg%2Farmv7-apple-ios.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Farmv7-apple-ios.mk?ref=a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "patch": "@@ -0,0 +1,34 @@\n+# armv7-apple-ios configuration\n+CFG_SDK_NAME_armv7-apple-ios := iphoneos\n+CFG_SDK_ARCHS_armv7-apple-ios := armv7\n+ifneq ($(findstring darwin,$(CFG_OSTYPE)),)\n+CFG_IOS_SDK_armv7-apple-ios := $(shell xcrun --show-sdk-path -sdk iphoneos 2>/dev/null)\n+CFG_IOS_SDK_FLAGS_armv7-apple-ios := -target armv7-apple-ios -isysroot $(CFG_IOS_SDK_armv7-apple-ios) -mios-version-min=7.0\n+CC_armv7-apple-ios = $(shell xcrun -find -sdk iphoneos clang)\n+CXX_armv7-apple-ios = $(shell xcrun -find -sdk iphoneos clang++)\n+CPP_armv7-apple-ios = $(shell xcrun -find -sdk iphoneos clang++)\n+AR_armv7-apple-ios = $(shell xcrun -find -sdk iphoneos ar)\n+endif\n+CFG_LIB_NAME_armv7-apple-ios = lib$(1).a\n+CFG_LIB_GLOB_armv7-apple-ios = lib$(1)-*.a\n+CFG_LIB_SKIP_INSTALL_armv7-apple-ios = 1 #lib$(1)-*.a\n+CFG_STATIC_LIB_NAME_armv7-apple-ios=lib$(1).a\n+CFG_LIB_DSYM_GLOB_armv7-apple-ios = lib$(1)-*.a.dSYM\n+CFG_JEMALLOC_CFLAGS_armv7-apple-ios := -arch armv7 -mfpu=vfp3 $(CFG_IOS_SDK_FLAGS_armv7-apple-ios)\n+CFG_GCCISH_CFLAGS_armv7-apple-ios := -Wall -Werror -g -fPIC $(CFG_IOS_SDK_FLAGS_armv7-apple-ios) -mfpu=vfp3 -arch armv7\n+CFG_GCCISH_CXXFLAGS_armv7-apple-ios := -fno-rtti $(CFG_IOS_SDK_FLAGS_armv7-apple-ios) -I$(CFG_IOS_SDK_armv7-apple-ios)/usr/include/c++/4.2.1\n+CFG_GCCISH_LINK_FLAGS_armv7-apple-ios := -lpthread -syslibroot $(CFG_IOS_SDK_armv7-apple-ios) -Wl,-no_compact_unwind\n+CFG_GCCISH_DEF_FLAG_armv7-apple-ios := -Wl,-exported_symbols_list,\n+CFG_GCCISH_PRE_LIB_FLAGS_armv7-apple-ios :=\n+CFG_GCCISH_POST_LIB_FLAGS_armv7-apple-ios :=\n+CFG_DEF_SUFFIX_armv7-apple-ios := .darwin.def\n+CFG_LLC_FLAGS_armv7-apple-ios := -mattr=+vfp3,+v7,+neon -march=arm\n+CFG_INSTALL_NAME_armv7-apple-ios = -Wl,-install_name,@rpath/$(1)\n+CFG_EXE_SUFFIX_armv7-apple-ios :=\n+CFG_WINDOWSY_armv7-apple-ios :=\n+CFG_UNIXY_armv7-apple-ios := 1\n+CFG_PATH_MUNGE_armv7-apple-ios := true\n+CFG_LDPATH_armv7-apple-ios :=\n+CFG_RUN_armv7-apple-ios = $(2)\n+CFG_RUN_TARG_armv7-apple-ios = $(call CFG_RUN_armv7-apple-ios,,$(2))\n+CFG_GNU_TRIPLE_armv7-apple-ios := armv7-apple-ios"}, {"sha": "ccb7f014159ff9e8a55bc6acbb35c26652e0a58d", "filename": "mk/cfg/armv7s-apple-ios.mk", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/mk%2Fcfg%2Farmv7s-apple-ios.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/mk%2Fcfg%2Farmv7s-apple-ios.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Farmv7s-apple-ios.mk?ref=a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "patch": "@@ -0,0 +1,34 @@\n+# armv7s-apple-ios configuration\n+CFG_SDK_NAME_armv7s-apple-ios := iphoneos\n+CFG_SDK_ARCHS_armv7s-apple-ios := armv7s\n+ifneq ($(findstring darwin,$(CFG_OSTYPE)),)\n+CFG_IOS_SDK_armv7s-apple-ios := $(shell xcrun --show-sdk-path -sdk iphoneos 2>/dev/null)\n+CFG_IOS_SDK_FLAGS_armv7s-apple-ios := -target armv7s-apple-ios -isysroot $(CFG_IOS_SDK_armv7s-apple-ios) -mios-version-min=7.0\n+CC_armv7s-apple-ios = $(shell xcrun -find -sdk iphoneos clang)\n+CXX_armv7s-apple-ios = $(shell xcrun -find -sdk iphoneos clang++)\n+CPP_armv7s-apple-ios = $(shell xcrun -find -sdk iphoneos clang++)\n+AR_armv7s-apple-ios = $(shell xcrun -find -sdk iphoneos ar)\n+endif\n+CFG_LIB_NAME_armv7s-apple-ios = lib$(1).a\n+CFG_LIB_GLOB_armv7s-apple-ios = lib$(1)-*.a\n+CFG_LIB_SKIP_INSTALL_armv7s-apple-ios = 1 #lib$(1)-*.a\n+CFG_STATIC_LIB_NAME_armv7s-apple-ios=lib$(1).a\n+CFG_LIB_DSYM_GLOB_armv7s-apple-ios = lib$(1)-*.a.dSYM\n+CFG_JEMALLOC_CFLAGS_armv7s-apple-ios := -arch armv7s -mfpu=vfp4 $(CFG_IOS_SDK_FLAGS_armv7s-apple-ios)\n+CFG_GCCISH_CFLAGS_armv7s-apple-ios := -Wall -Werror -g -fPIC $(CFG_IOS_SDK_FLAGS_armv7s-apple-ios) -mfpu=vfp4 -arch armv7s\n+CFG_GCCISH_CXXFLAGS_armv7s-apple-ios := -fno-rtti $(CFG_IOS_SDK_FLAGS_armv7s-apple-ios) -I$(CFG_IOS_SDK_armv7s-apple-ios)/usr/include/c++/4.2.1\n+CFG_GCCISH_LINK_FLAGS_armv7s-apple-ios := -lpthread -syslibroot $(CFG_IOS_SDK_armv7s-apple-ios) -Wl,-no_compact_unwind\n+CFG_GCCISH_DEF_FLAG_armv7s-apple-ios := -Wl,-exported_symbols_list,\n+CFG_GCCISH_PRE_LIB_FLAGS_armv7s-apple-ios :=\n+CFG_GCCISH_POST_LIB_FLAGS_armv7s-apple-ios :=\n+CFG_DEF_SUFFIX_armv7s-apple-ios := .darwin.def\n+CFG_LLC_FLAGS_armv7s-apple-ios := -mattr=+vfp4,+v7,+neon\n+CFG_INSTALL_NAME_armv7s-apple-ios = -Wl,-install_name,@rpath/$(1)\n+CFG_EXE_SUFFIX_armv7s-apple-ios :=\n+CFG_WINDOWSY_armv7s-apple-ios :=\n+CFG_UNIXY_armv7s-apple-ios := 1\n+CFG_PATH_MUNGE_armv7s-apple-ios := true\n+CFG_LDPATH_armv7s-apple-ios :=\n+CFG_RUN_armv7s-apple-ios = $(2)\n+CFG_RUN_TARG_armv7s-apple-ios = $(call CFG_RUN_armv7s-apple-ios,,$(2))\n+CFG_GNU_TRIPLE_armv7s-apple-ios := armv7s-apple-ios"}, {"sha": "5007c0617c5a988cbfdf032ef33984edf01e045d", "filename": "mk/cfg/i386-apple-ios.mk", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/mk%2Fcfg%2Fi386-apple-ios.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/mk%2Fcfg%2Fi386-apple-ios.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fi386-apple-ios.mk?ref=a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "patch": "@@ -1,9 +1,9 @@\n # i386-apple-ios configuration\n-CFG_SDK_NAME_i386-apple-ios = iphonesimulator\n-CFG_SDK_ARCHS_i386-apple-ios = i386\n+CFG_SDK_NAME_i386-apple-ios := iphonesimulator\n+CFG_SDK_ARCHS_i386-apple-ios := i386\n ifneq ($(findstring darwin,$(CFG_OSTYPE)),)\n-CFG_IOSSIM_SDK = $(shell xcrun --show-sdk-path -sdk iphonesimulator 2>/dev/null)\n-CFG_IOSSIM_FLAGS = -target i386-apple-ios -isysroot $(CFG_IOSSIM_SDK) -mios-simulator-version-min=7.0\n+CFG_IOSSIM_SDK_i386-apple-ios := $(shell xcrun --show-sdk-path -sdk iphonesimulator 2>/dev/null)\n+CFG_IOSSIM_FLAGS_i386-apple-ios := -m32 -target i386-apple-ios -isysroot $(CFG_IOSSIM_SDK_i386-apple-ios) -mios-simulator-version-min=7.0\n CC_i386-apple-ios = $(shell xcrun -find -sdk iphonesimulator clang)\n CXX_i386-apple-ios = $(shell xcrun -find -sdk iphonesimulator clang++)\n CPP_i386-apple-ios = $(shell xcrun -find -sdk iphonesimulator clang++)\n@@ -13,21 +13,21 @@ CFG_LIB_NAME_i386-apple-ios = lib$(1).a\n CFG_LIB_GLOB_i386-apple-ios = lib$(1)-*.dylib\n CFG_STATIC_LIB_NAME_i386-apple-ios=lib$(1).a\n CFG_LIB_DSYM_GLOB_i386-apple-ios = lib$(1)-*.dylib.dSYM\n-CFG_GCCISH_CFLAGS_i386-apple-ios = -Wall -Werror -g -fPIC -m32 $(CFG_IOSSIM_FLAGS)\n-CFG_GCCISH_CXXFLAGS_i386-apple-ios = -fno-rtti $(CFG_IOSSIM_FLAGS) -I$(CFG_IOSSIM_SDK)/usr/include/c++/4.2.1\n-CFG_GCCISH_LINK_FLAGS_i386-apple-ios = -lpthread -Wl,-no_compact_unwind -m32 -Wl,-syslibroot $(CFG_IOSSIM_SDK)\n-CFG_GCCISH_DEF_FLAG_i386-apple-ios = -Wl,-exported_symbols_list,\n-CFG_GCCISH_PRE_LIB_FLAGS_i386-apple-ios =\n-CFG_GCCISH_POST_LIB_FLAGS_i386-apple-ios =\n-CFG_DEF_SUFFIX_i386-apple-ios = .darwin.def\n+CFG_GCCISH_CFLAGS_i386-apple-ios := -Wall -Werror -g -fPIC -m32 $(CFG_IOSSIM_FLAGS_i386-apple-ios)\n+CFG_GCCISH_CXXFLAGS_i386-apple-ios := -fno-rtti $(CFG_IOSSIM_FLAGS_i386-apple-ios) -I$(CFG_IOSSIM_SDK_i386-apple-ios)/usr/include/c++/4.2.1\n+CFG_GCCISH_LINK_FLAGS_i386-apple-ios := -lpthread -m32 -Wl,-no_compact_unwind -m32 -Wl,-syslibroot $(CFG_IOSSIM_SDK_i386-apple-ios)\n+CFG_GCCISH_DEF_FLAG_i386-apple-ios := -Wl,-exported_symbols_list,\n+CFG_GCCISH_PRE_LIB_FLAGS_i386-apple-ios :=\n+CFG_GCCISH_POST_LIB_FLAGS_i386-apple-ios :=\n+CFG_DEF_SUFFIX_i386-apple-ios := .darwin.def\n CFG_LLC_FLAGS_i386-apple-ios =\n CFG_INSTALL_NAME_i386-apple-ios = -Wl,-install_name,@rpath/$(1)\n-CFG_EXE_SUFFIX_i386-apple-ios =\n-CFG_WINDOWSY_i386-apple-ios =\n-CFG_UNIXY_i386-apple-ios = 1\n-CFG_PATH_MUNGE_i386-apple-ios = true\n+CFG_EXE_SUFFIX_i386-apple-ios :=\n+CFG_WINDOWSY_i386-apple-ios :=\n+CFG_UNIXY_i386-apple-ios := 1\n+CFG_PATH_MUNGE_i386-apple-ios = :true\n CFG_LDPATH_i386-apple-ios =\n CFG_RUN_i386-apple-ios = $(2)\n CFG_RUN_TARG_i386-apple-ios = $(call CFG_RUN_i386-apple-ios,,$(2))\n-CFG_JEMALLOC_CFLAGS_i386-apple-ios = $(CFG_IOSSIM_FLAGS) -target i386-apple-ios -Wl,-syslibroot $(CFG_IOSSIM_SDK) -Wl,-no_compact_unwind\n+CFG_JEMALLOC_CFLAGS_i386-apple-ios = $(CFG_IOSSIM_FLAGS_i386-apple-ios) -target i386-apple-ios #-Wl,-syslibroot $(CFG_IOSSIM_SDK_i386-apple-ios) -Wl,-no_compact_unwind\n CFG_GNU_TRIPLE_i386-apple-ios := i386-apple-ios"}, {"sha": "0b9012cc2a80a27a48cc7fd4b6d0531aae349196", "filename": "src/rt/arch/armv7/morestack.S", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/src%2Frt%2Farch%2Farmv7%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/src%2Frt%2Farch%2Farmv7%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farmv7%2Fmorestack.S?ref=a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "patch": "@@ -0,0 +1,70 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", %progbits\n+#endif\n+\n+/* See i386/morestack.S for the lengthy, general explanation. */\n+\n+.text\n+.code 32\n+.arm\n+#if defined(__APPLE__)\n+.align 2\n+#else\n+.align\n+#endif\n+\n+#if defined(__APPLE__)\n+#define MORESTACK ___morestack\n+#define STACK_EXHAUSTED _rust_stack_exhausted\n+#else\n+#define MORESTACK __morestack\n+#define STACK_EXHAUSTED rust_stack_exhausted\n+#endif\n+\n+.global STACK_EXHAUSTED\n+.global MORESTACK\n+\n+// Unfortunately LLVM yet doesn't support emitting correct debug\n+// DWARF information for non-ELF targets so to make it compile\n+// on iOS all that directives are simply commented out\n+#if defined(__APPLE__)\n+#define UNWIND @\n+#else\n+#define UNWIND\n+#endif\n+\n+#if defined(__APPLE__)\n+.private_extern MORESTACK\n+#else\n+.hidden MORESTACK\n+#endif\n+\n+#if !defined(__APPLE__)\n+   .type MORESTACK,%function\n+#endif\n+\n+// r4 and r5 are scratch registers for __morestack due to llvm\n+// ARMFrameLowering::adjustForSegmentedStacks() implementation.\n+MORESTACK:\n+    UNWIND .fnstart\n+\n+    // Save frame pointer and return address\n+    UNWIND .save {r4, r5}\n+    UNWIND .save {lr}\n+    UNWIND .save {r6, fp, lr}\n+    push {r6, fp, lr}\n+\n+    UNWIND .movsp r6\n+    mov r6, sp\n+    UNWIND .setfp fp, sp, #4\n+    add fp, sp, #4\n+\n+    // Save argument registers of the original function\n+    push {r0, r1, r2, r3, lr}\n+\n+    // Create new stack\n+    bl STACK_EXHAUSTED@plt\n+\n+    // the above function ensures that it never returns\n+    UNWIND  .fnend"}, {"sha": "d0e9b81b95a9bfbe03a1268100afcfafd7afc2fb", "filename": "src/rt/arch/armv7/record_sp.S", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/src%2Frt%2Farch%2Farmv7%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/src%2Frt%2Farch%2Farmv7%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farmv7%2Frecord_sp.S?ref=a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "patch": "@@ -0,0 +1,56 @@\n+// Do not compile anything here for iOS because split stacks\n+// are disabled at all and do not need any runtime support.\n+//\n+// See also comments in librustrt/stack.rs about why it was\n+// disabled and how it could be implemented in case of need.\n+#if !defined(__APPLE__)\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", %progbits\n+#endif\n+\n+.text\n+.code 32\n+.arm\n+.align\n+\n+#define RECORD_SP_LIMIT record_sp_limit\n+#define GET_SP_LIMIT    get_sp_limit\n+\n+.globl \tRECORD_SP_LIMIT\n+.globl\tGET_SP_LIMIT\n+\n+RECORD_SP_LIMIT:\n+\t// First, try to read TLS address from coprocessor\n+\tmrc p15, #0, r3, c13, c0, #3\n+\tcmp r3, #0\n+\t// Otherwise, try to read from magic address 0xFFFF0FF0\n+\tmvneq r3, #0xF000\n+\tldreq r3, [r3, #-15]\n+\n+#if __ANDROID__\n+\tadd r3, r3, #252\n+#elif __linux__\n+\tadd r3, r3, #4\n+#endif // ANDROID\n+\n+\tstr r0, [r3]\n+\tmov pc, lr\n+\n+GET_SP_LIMIT:\n+\t// First, try to read TLS address from coprocessor\n+\tmrc p15, #0, r3, c13, c0, #3\n+\tcmp r3, #0\n+\t// Otherwise, try to read from magic address 0xFFFF0FF0\n+\tmvneq r3, #0xF000\n+\tldreq r3, [r3, #-15]\n+\n+#if __ANDROID__\n+\tadd r3, r3, #252\n+#elif __linux__\n+\tadd r3, r3, #4\n+#endif  // __ANDROID__\n+\n+\tldr r0, [r3]\n+\tmov pc, lr\n+#endif"}, {"sha": "0b9012cc2a80a27a48cc7fd4b6d0531aae349196", "filename": "src/rt/arch/armv7s/morestack.S", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/src%2Frt%2Farch%2Farmv7s%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/src%2Frt%2Farch%2Farmv7s%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farmv7s%2Fmorestack.S?ref=a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "patch": "@@ -0,0 +1,70 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", %progbits\n+#endif\n+\n+/* See i386/morestack.S for the lengthy, general explanation. */\n+\n+.text\n+.code 32\n+.arm\n+#if defined(__APPLE__)\n+.align 2\n+#else\n+.align\n+#endif\n+\n+#if defined(__APPLE__)\n+#define MORESTACK ___morestack\n+#define STACK_EXHAUSTED _rust_stack_exhausted\n+#else\n+#define MORESTACK __morestack\n+#define STACK_EXHAUSTED rust_stack_exhausted\n+#endif\n+\n+.global STACK_EXHAUSTED\n+.global MORESTACK\n+\n+// Unfortunately LLVM yet doesn't support emitting correct debug\n+// DWARF information for non-ELF targets so to make it compile\n+// on iOS all that directives are simply commented out\n+#if defined(__APPLE__)\n+#define UNWIND @\n+#else\n+#define UNWIND\n+#endif\n+\n+#if defined(__APPLE__)\n+.private_extern MORESTACK\n+#else\n+.hidden MORESTACK\n+#endif\n+\n+#if !defined(__APPLE__)\n+   .type MORESTACK,%function\n+#endif\n+\n+// r4 and r5 are scratch registers for __morestack due to llvm\n+// ARMFrameLowering::adjustForSegmentedStacks() implementation.\n+MORESTACK:\n+    UNWIND .fnstart\n+\n+    // Save frame pointer and return address\n+    UNWIND .save {r4, r5}\n+    UNWIND .save {lr}\n+    UNWIND .save {r6, fp, lr}\n+    push {r6, fp, lr}\n+\n+    UNWIND .movsp r6\n+    mov r6, sp\n+    UNWIND .setfp fp, sp, #4\n+    add fp, sp, #4\n+\n+    // Save argument registers of the original function\n+    push {r0, r1, r2, r3, lr}\n+\n+    // Create new stack\n+    bl STACK_EXHAUSTED@plt\n+\n+    // the above function ensures that it never returns\n+    UNWIND  .fnend"}, {"sha": "d0e9b81b95a9bfbe03a1268100afcfafd7afc2fb", "filename": "src/rt/arch/armv7s/record_sp.S", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/src%2Frt%2Farch%2Farmv7s%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/a945f288ffc3c4db6ab1539e6de7df07d898cdb5/src%2Frt%2Farch%2Farmv7s%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farmv7s%2Frecord_sp.S?ref=a945f288ffc3c4db6ab1539e6de7df07d898cdb5", "patch": "@@ -0,0 +1,56 @@\n+// Do not compile anything here for iOS because split stacks\n+// are disabled at all and do not need any runtime support.\n+//\n+// See also comments in librustrt/stack.rs about why it was\n+// disabled and how it could be implemented in case of need.\n+#if !defined(__APPLE__)\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", %progbits\n+#endif\n+\n+.text\n+.code 32\n+.arm\n+.align\n+\n+#define RECORD_SP_LIMIT record_sp_limit\n+#define GET_SP_LIMIT    get_sp_limit\n+\n+.globl \tRECORD_SP_LIMIT\n+.globl\tGET_SP_LIMIT\n+\n+RECORD_SP_LIMIT:\n+\t// First, try to read TLS address from coprocessor\n+\tmrc p15, #0, r3, c13, c0, #3\n+\tcmp r3, #0\n+\t// Otherwise, try to read from magic address 0xFFFF0FF0\n+\tmvneq r3, #0xF000\n+\tldreq r3, [r3, #-15]\n+\n+#if __ANDROID__\n+\tadd r3, r3, #252\n+#elif __linux__\n+\tadd r3, r3, #4\n+#endif // ANDROID\n+\n+\tstr r0, [r3]\n+\tmov pc, lr\n+\n+GET_SP_LIMIT:\n+\t// First, try to read TLS address from coprocessor\n+\tmrc p15, #0, r3, c13, c0, #3\n+\tcmp r3, #0\n+\t// Otherwise, try to read from magic address 0xFFFF0FF0\n+\tmvneq r3, #0xF000\n+\tldreq r3, [r3, #-15]\n+\n+#if __ANDROID__\n+\tadd r3, r3, #252\n+#elif __linux__\n+\tadd r3, r3, #4\n+#endif  // __ANDROID__\n+\n+\tldr r0, [r3]\n+\tmov pc, lr\n+#endif"}]}