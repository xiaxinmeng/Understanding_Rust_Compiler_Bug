{"sha": "082075d0509e783493d67da6ff55917c83be008f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MjA3NWQwNTA5ZTc4MzQ5M2Q2N2RhNmZmNTU5MTdjODNiZTAwOGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-21T09:46:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-21T09:46:23Z"}, "message": "auto merge of #14316 : kballard/rust/range_inclusive_no_toprimitive, r=alexcrichton", "tree": {"sha": "9db62c3289be466c74bc9ef72fa4339ccbedcd9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9db62c3289be466c74bc9ef72fa4339ccbedcd9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/082075d0509e783493d67da6ff55917c83be008f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/082075d0509e783493d67da6ff55917c83be008f", "html_url": "https://github.com/rust-lang/rust/commit/082075d0509e783493d67da6ff55917c83be008f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/082075d0509e783493d67da6ff55917c83be008f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4605232f26888430365a34a33477fe662451243f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4605232f26888430365a34a33477fe662451243f", "html_url": "https://github.com/rust-lang/rust/commit/4605232f26888430365a34a33477fe662451243f"}, {"sha": "c7454853d21e8ae3b5b4e3c8ee7f02f7a7f6487f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7454853d21e8ae3b5b4e3c8ee7f02f7a7f6487f", "html_url": "https://github.com/rust-lang/rust/commit/c7454853d21e8ae3b5b4e3c8ee7f02f7a7f6487f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "da1462a7047589c408db1d59963fc6a7dead9f4d", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/082075d0509e783493d67da6ff55917c83be008f/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/082075d0509e783493d67da6ff55917c83be008f/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=082075d0509e783493d67da6ff55917c83be008f", "patch": "@@ -2016,7 +2016,7 @@ pub struct RangeInclusive<A> {\n \n /// Return an iterator over the range [start, stop]\n #[inline]\n-pub fn range_inclusive<A: Add<A, A> + Ord + Clone + One + ToPrimitive>(start: A, stop: A)\n+pub fn range_inclusive<A: Add<A, A> + Ord + Clone + One>(start: A, stop: A)\n     -> RangeInclusive<A> {\n     RangeInclusive{range: range(start, stop), done: false}\n }"}]}