{"sha": "2db97ede2702b64426d3209ce8ec787a16cbf4e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYjk3ZWRlMjcwMmI2NDQyNmQzMjA5Y2U4ZWM3ODdhMTZjYmY0ZTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-06T05:48:51Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T07:57:24Z"}, "message": "refactor 'Output = $ty' & reduce rustc dep", "tree": {"sha": "9087626ae3e4f4e443d7e3a6c145d55bf69d165c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9087626ae3e4f4e443d7e3a6c145d55bf69d165c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2db97ede2702b64426d3209ce8ec787a16cbf4e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2db97ede2702b64426d3209ce8ec787a16cbf4e7", "html_url": "https://github.com/rust-lang/rust/commit/2db97ede2702b64426d3209ce8ec787a16cbf4e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2db97ede2702b64426d3209ce8ec787a16cbf4e7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e6329ec3a7d971972e0a876ae3e6b86ad506d82", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6329ec3a7d971972e0a876ae3e6b86ad506d82", "html_url": "https://github.com/rust-lang/rust/commit/4e6329ec3a7d971972e0a876ae3e6b86ad506d82"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "738bbd936fea437c04ce67b2fac5cb29efde3a79", "filename": "src/librustc/traits/project.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fproject.rs?ref=2db97ede2702b64426d3209ce8ec787a16cbf4e7", "patch": "@@ -17,7 +17,6 @@ use crate::infer::{InferCtxt, InferOk, LateBoundRegionConversionTime};\n use crate::ty::fold::{TypeFoldable, TypeFolder};\n use crate::ty::subst::{InternalSubsts, Subst};\n use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt};\n-use crate::util::common::FN_OUTPUT_NAME;\n use rustc_data_structures::snapshot_map::{Snapshot, SnapshotMap};\n use rustc_hir::def_id::DefId;\n use rustc_macros::HashStable;\n@@ -1364,7 +1363,7 @@ fn confirm_callable_candidate<'cx, 'tcx>(\n         projection_ty: ty::ProjectionTy::from_ref_and_name(\n             tcx,\n             trait_ref,\n-            Ident::with_dummy_span(FN_OUTPUT_NAME),\n+            Ident::with_dummy_span(rustc_hir::FN_OUTPUT_NAME),\n         ),\n         ty: ret_type,\n     });"}, {"sha": "9324b26a09b6f35071b1ee582d0714933457986a", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=2db97ede2702b64426d3209ce8ec787a16cbf4e7", "patch": "@@ -5,14 +5,9 @@ use rustc_data_structures::sync::Lock;\n use std::fmt::Debug;\n use std::time::{Duration, Instant};\n \n-use rustc_span::symbol::{sym, Symbol};\n-\n #[cfg(test)]\n mod tests;\n \n-// The name of the associated type for `Fn` return types.\n-pub const FN_OUTPUT_NAME: Symbol = sym::Output;\n-\n pub use errors::ErrorReported;\n \n pub fn to_readable_str(mut val: usize) -> String {"}, {"sha": "062b093b8e68dc120ca69f1ba4ab860ccdac6767", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=2db97ede2702b64426d3209ce8ec787a16cbf4e7", "patch": "@@ -41,7 +41,6 @@ use rustc::lint;\n use rustc::lint::builtin;\n use rustc::middle::cstore::CrateStore;\n use rustc::util::captures::Captures;\n-use rustc::util::common::FN_OUTPUT_NAME;\n use rustc::{bug, span_bug};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n@@ -1978,12 +1977,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         // \"<Output = T>\"\n         let future_params = self.arena.alloc(hir::GenericArgs {\n             args: &[],\n-            bindings: arena_vec![self; hir::TypeBinding {\n-                ident: Ident::with_dummy_span(FN_OUTPUT_NAME),\n-                kind: hir::TypeBindingKind::Equality { ty: output_ty },\n-                hir_id: self.next_id(),\n-                span,\n-            }],\n+            bindings: arena_vec![self; self.output_ty_binding(span, output_ty)],\n             parenthesized: false,\n         });\n "}, {"sha": "4f71910b0bfe2e45f5de55c5d33dbaa25c13644a", "filename": "src/librustc_ast_lowering/path.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc_ast_lowering%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc_ast_lowering%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpath.rs?ref=2db97ede2702b64426d3209ce8ec787a16cbf4e7", "patch": "@@ -3,7 +3,6 @@ use super::{GenericArgsCtor, ParenthesizedGenericArgs};\n \n use rustc::lint::builtin::{self, ELIDED_LIFETIMES_IN_PATHS};\n use rustc::span_bug;\n-use rustc::util::common::FN_OUTPUT_NAME;\n use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n@@ -406,16 +405,22 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 FunctionRetTy::Default(_) => this.arena.alloc(this.ty_tup(span, &[])),\n             };\n             let args = smallvec![GenericArg::Type(this.ty_tup(span, inputs))];\n-            let binding = hir::TypeBinding {\n-                hir_id: this.next_id(),\n-                ident: Ident::with_dummy_span(FN_OUTPUT_NAME),\n-                span: output_ty.span,\n-                kind: hir::TypeBindingKind::Equality { ty: output_ty },\n-            };\n+            let binding = this.output_ty_binding(output_ty.span, output_ty);\n             (\n                 GenericArgsCtor { args, bindings: arena_vec![this; binding], parenthesized: true },\n                 false,\n             )\n         })\n     }\n+\n+    /// An associated type binding `Output = $ty`.\n+    crate fn output_ty_binding(\n+        &mut self,\n+        span: Span,\n+        ty: &'hir hir::Ty<'hir>,\n+    ) -> hir::TypeBinding<'hir> {\n+        let ident = Ident::with_dummy_span(hir::FN_OUTPUT_NAME);\n+        let kind = hir::TypeBindingKind::Equality { ty };\n+        hir::TypeBinding { hir_id: self.next_id(), span, ident, kind }\n+    }\n }"}, {"sha": "603c21188e3ac03173643cf5da5f18b91ce32330", "filename": "src/librustc_hir/hir.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc_hir%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db97ede2702b64426d3209ce8ec787a16cbf4e7/src%2Flibrustc_hir%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fhir.rs?ref=2db97ede2702b64426d3209ce8ec787a16cbf4e7", "patch": "@@ -1875,6 +1875,9 @@ pub enum ImplItemKind<'hir> {\n     OpaqueTy(GenericBounds<'hir>),\n }\n \n+// The name of the associated type for `Fn` return types.\n+pub const FN_OUTPUT_NAME: Symbol = sym::Output;\n+\n /// Bind a type to an associated type (i.e., `A = Foo`).\n ///\n /// Bindings like `A: Debug` are represented as a special type `A ="}]}