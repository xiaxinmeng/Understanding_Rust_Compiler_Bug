{"sha": "274169090214a37ea17ec21ae6241733de1ff2e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NDE2OTA5MDIxNGEzN2VhMTdlYzIxYWU2MjQxNzMzZGUxZmYyZTk=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-13T17:33:21Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-15T18:53:36Z"}, "message": "Tweaks to intern_ty", "tree": {"sha": "e4c974eb62be573f439c473461863d99b29428c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4c974eb62be573f439c473461863d99b29428c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274169090214a37ea17ec21ae6241733de1ff2e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274169090214a37ea17ec21ae6241733de1ff2e9", "html_url": "https://github.com/rust-lang/rust/commit/274169090214a37ea17ec21ae6241733de1ff2e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274169090214a37ea17ec21ae6241733de1ff2e9/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfd14bd90765349e6542cb77206dabe6f11e7c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfd14bd90765349e6542cb77206dabe6f11e7c83", "html_url": "https://github.com/rust-lang/rust/commit/bfd14bd90765349e6542cb77206dabe6f11e7c83"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "4c7d8d7f44e6af58ca29dfce8803330e59b88802", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/274169090214a37ea17ec21ae6241733de1ff2e9/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274169090214a37ea17ec21ae6241733de1ff2e9/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=274169090214a37ea17ec21ae6241733de1ff2e9", "patch": "@@ -173,10 +173,10 @@ impl<'gcx: 'tcx, 'tcx> CtxtInterners<'tcx> {\n                 return ty;\n             }\n             let global_interner = global_interners.map(|interners| {\n-                interners.type_.borrow_mut()\n+                (interners.type_.borrow_mut(), &interners.arena)\n             });\n-            if let Some(ref interner) = global_interner {\n-                if let Some(&Interned(ty)) = interner.get(&st) {\n+            if let Some((ref type_, _)) = global_interner {\n+                if let Some(&Interned(ty)) = type_.get(&st) {\n                     return ty;\n                 }\n             }\n@@ -192,18 +192,18 @@ impl<'gcx: 'tcx, 'tcx> CtxtInterners<'tcx> {\n             // determine that all contents are in the global tcx.\n             // See comments on Lift for why we can't use that.\n             if !flags.flags.intersects(ty::TypeFlags::KEEP_IN_LOCAL_TCX) {\n-                if let Some(interner) = global_interners {\n+                if let Some((mut type_, arena)) = global_interner {\n                     let ty_struct: TyS<'gcx> = unsafe {\n                         mem::transmute(ty_struct)\n                     };\n-                    let ty: Ty<'gcx> = interner.arena.alloc(ty_struct);\n-                    global_interner.unwrap().insert(Interned(ty));\n+                    let ty: Ty<'gcx> = arena.alloc(ty_struct);\n+                    type_.insert(Interned(ty));\n                     return ty;\n                 }\n             } else {\n                 // Make sure we don't end up with inference\n                 // types/regions in the global tcx.\n-                if global_interners.is_none() {\n+                if global_interner.is_none() {\n                     drop(interner);\n                     bug!(\"Attempted to intern `{:?}` which contains \\\n                           inference types/regions in the global type context\","}]}