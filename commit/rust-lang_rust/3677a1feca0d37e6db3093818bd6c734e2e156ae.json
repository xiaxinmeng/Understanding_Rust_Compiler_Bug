{"sha": "3677a1feca0d37e6db3093818bd6c734e2e156ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NzdhMWZlY2EwZDM3ZTZkYjMwOTM4MThiZDZjNzM0ZTJlMTU2YWU=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-08-22T23:15:43Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-08-22T23:15:43Z"}, "message": "Rollup merge of #27924 - pornel:bookthreadjoin, r=steveklabnik\n\nThe chapter on concurrency has two examples that both start with:\r\n\r\n     let something = thread::spawn(\u2026\r\n\r\nbut the returned values have different types, because the second example has `.join()` at the end of the expression.\r\n\r\nI haven't noticed that join at first, and was wondering how is that possible that the result can have `.is_err()` and `.join()` methods.\r\n\r\nI've changed the second example to have the same structure as the first, so they're easy to compare.", "tree": {"sha": "bd920197b74b3bc943b6b3710157359b3b9d1879", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd920197b74b3bc943b6b3710157359b3b9d1879"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3677a1feca0d37e6db3093818bd6c734e2e156ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3677a1feca0d37e6db3093818bd6c734e2e156ae", "html_url": "https://github.com/rust-lang/rust/commit/3677a1feca0d37e6db3093818bd6c734e2e156ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3677a1feca0d37e6db3093818bd6c734e2e156ae/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3e9615ed40954cce8004c311f4043e29458dcb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3e9615ed40954cce8004c311f4043e29458dcb7", "html_url": "https://github.com/rust-lang/rust/commit/b3e9615ed40954cce8004c311f4043e29458dcb7"}, {"sha": "d112274fcb7175248a42c3b83382835710558cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d112274fcb7175248a42c3b83382835710558cf4", "html_url": "https://github.com/rust-lang/rust/commit/d112274fcb7175248a42c3b83382835710558cf4"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "e00fe75013e29cf31fac8e2bb1f8d1abade5806d", "filename": "src/doc/trpl/concurrency.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3677a1feca0d37e6db3093818bd6c734e2e156ae/src%2Fdoc%2Ftrpl%2Fconcurrency.md", "raw_url": "https://github.com/rust-lang/rust/raw/3677a1feca0d37e6db3093818bd6c734e2e156ae/src%2Fdoc%2Ftrpl%2Fconcurrency.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fconcurrency.md?ref=3677a1feca0d37e6db3093818bd6c734e2e156ae", "patch": "@@ -343,12 +343,14 @@ threads as a simple isolation mechanism:\n ```rust\n use std::thread;\n \n-let result = thread::spawn(move || {\n+let handle = thread::spawn(move || {\n     panic!(\"oops!\");\n-}).join();\n+});\n+\n+let result = handle.join();\n \n assert!(result.is_err());\n ```\n \n-Our `Thread` gives us a `Result` back, which allows us to check if the thread\n+`Thread.join()` gives us a `Result` back, which allows us to check if the thread\n has panicked or not."}]}