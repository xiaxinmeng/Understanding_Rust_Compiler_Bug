{"sha": "a2af8667b1a5166137510aeb2aaad9945f81db6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYWY4NjY3YjFhNTE2NjEzNzUxMGFlYjJhYWFkOTk0NWY4MWRiNmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-24T08:24:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-24T08:24:11Z"}, "message": "Auto merge of #52646 - ljedrz:single_char_pattern, r=michaelwoerister\n\nChange single char str patterns to chars\n\nA `char` is faster.", "tree": {"sha": "39511bbcc6c9b6e41a50ac6396be835f5b740dd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39511bbcc6c9b6e41a50ac6396be835f5b740dd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2af8667b1a5166137510aeb2aaad9945f81db6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2af8667b1a5166137510aeb2aaad9945f81db6d", "html_url": "https://github.com/rust-lang/rust/commit/a2af8667b1a5166137510aeb2aaad9945f81db6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2af8667b1a5166137510aeb2aaad9945f81db6d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baba5007bf857b4577a8d26de454a03d7afef3ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/baba5007bf857b4577a8d26de454a03d7afef3ac", "html_url": "https://github.com/rust-lang/rust/commit/baba5007bf857b4577a8d26de454a03d7afef3ac"}, {"sha": "49c8ba91c73c97404d3308133594702a2bf48fd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/49c8ba91c73c97404d3308133594702a2bf48fd1", "html_url": "https://github.com/rust-lang/rust/commit/49c8ba91c73c97404d3308133594702a2bf48fd1"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "f0e43e78a50afdb2f2644b78e22071e2396e3482", "filename": "src/librustc/dep_graph/debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibrustc%2Fdep_graph%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibrustc%2Fdep_graph%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdebug.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -40,7 +40,7 @@ impl DepNodeFilter {\n     /// Tests whether `node` meets the filter, returning true if so.\n     pub fn test(&self, node: &DepNode) -> bool {\n         let debug_str = format!(\"{:?}\", node);\n-        self.text.split(\"&\")\n+        self.text.split('&')\n                  .map(|s| s.trim())\n                  .all(|f| debug_str.contains(f))\n     }"}, {"sha": "262a617cb6924c9b7651d9d0fc3227db0db4c927", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -165,7 +165,7 @@ impl<'a, 'tcx: 'a> Annotator<'a, 'tcx> {\n                         &attr::Stable {since: stab_since}) = (&stab.rustc_depr, &stab.level) {\n                     // Explicit version of iter::order::lt to handle parse errors properly\n                     for (dep_v, stab_v) in\n-                            dep_since.as_str().split(\".\").zip(stab_since.as_str().split(\".\")) {\n+                            dep_since.as_str().split('.').zip(stab_since.as_str().split('.')) {\n                         if let (Ok(dep_v), Ok(stab_v)) = (dep_v.parse::<u64>(), stab_v.parse()) {\n                             match dep_v.cmp(&stab_v) {\n                                 Ordering::Less => {"}, {"sha": "0c4edb4427286f0a1872ce6d9a4a377d31a09332", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -117,8 +117,8 @@ pub fn dump_enabled<'a, 'gcx, 'tcx>(\n         // see notes on #41697 below\n         tcx.item_path_str(source.def_id)\n     });\n-    filters.split(\"|\").any(|or_filter| {\n-        or_filter.split(\"&\").all(|and_filter| {\n+    filters.split('|').any(|or_filter| {\n+        or_filter.split('&').all(|and_filter| {\n             and_filter == \"all\" || pass_name.contains(and_filter) || node_path.contains(and_filter)\n         })\n     })\n@@ -388,7 +388,7 @@ struct ExtraComments<'cx, 'gcx: 'tcx, 'tcx: 'cx> {\n \n impl<'cx, 'gcx, 'tcx> ExtraComments<'cx, 'gcx, 'tcx> {\n     fn push(&mut self, lines: &str) {\n-        for line in lines.split(\"\\n\") {\n+        for line in lines.split('\\n') {\n             self.comments.push(line.to_string());\n         }\n     }"}, {"sha": "df09be00c342fb0ebdc71d4f042bd1270bf220c5", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -92,8 +92,8 @@ impl TargetDataLayout {\n \n         let mut dl = TargetDataLayout::default();\n         let mut i128_align_src = 64;\n-        for spec in target.data_layout.split(\"-\") {\n-            match &spec.split(\":\").collect::<Vec<_>>()[..] {\n+        for spec in target.data_layout.split('-') {\n+            match &spec.split(':').collect::<Vec<_>>()[..] {\n                 &[\"e\"] => dl.endian = Endian::Little,\n                 &[\"E\"] => dl.endian = Endian::Big,\n                 &[\"a\", ref a..] => dl.aggregate_align = align(a, \"a\")?,"}, {"sha": "67f22231d5f7573c224f4a3b69203ac465d2b5a7", "filename": "src/libstd/sys/redox/net/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fmod.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -41,12 +41,12 @@ impl Iterator for LookupHost {\n pub fn lookup_host(host: &str) -> Result<LookupHost> {\n     let mut ip_string = String::new();\n     File::open(\"/etc/net/ip\")?.read_to_string(&mut ip_string)?;\n-    let ip: Vec<u8> = ip_string.trim().split(\".\").map(|part| part.parse::<u8>()\n+    let ip: Vec<u8> = ip_string.trim().split('.').map(|part| part.parse::<u8>()\n                                .unwrap_or(0)).collect();\n \n     let mut dns_string = String::new();\n     File::open(\"/etc/net/dns\")?.read_to_string(&mut dns_string)?;\n-    let dns: Vec<u8> = dns_string.trim().split(\".\").map(|part| part.parse::<u8>()\n+    let dns: Vec<u8> = dns_string.trim().split('.').map(|part| part.parse::<u8>()\n                                  .unwrap_or(0)).collect();\n \n     if ip.len() == 4 && dns.len() == 4 {"}, {"sha": "addf555eb106564fa357e67b19d85ea46d29d157", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -564,7 +564,7 @@ fn glibc_version_cstr() -> Option<&'static CStr> {\n // ignoring any extra dot-separated parts. Otherwise return None.\n #[cfg(target_env = \"gnu\")]\n fn parse_glibc_version(version: &str) -> Option<(usize, usize)> {\n-    let mut parsed_ints = version.split(\".\").map(str::parse::<usize>).fuse();\n+    let mut parsed_ints = version.split('.').map(str::parse::<usize>).fuse();\n     match (parsed_ints.next(), parsed_ints.next()) {\n         (Some(Ok(major)), Some(Ok(minor))) => Some((major, minor)),\n         _ => None"}, {"sha": "5105fc4ca4c190b1a141e42824519c1938e9cfdf", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -165,7 +165,7 @@ impl<'a> Crate<'a> {\n impl<'a> CrateVersion<'a> {\n     /// Returns the struct and whether or not the dep is in-tree\n     pub fn from_str(s: &'a str) -> (Self, bool) {\n-        let mut parts = s.split(\" \");\n+        let mut parts = s.split(' ');\n         let name = parts.next().unwrap();\n         let version = parts.next().unwrap();\n         let path = parts.next().unwrap();"}, {"sha": "c9bc1b9d84970fac87bcc189024490ed4d63bd25", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -257,7 +257,7 @@ pub fn collect_lang_features(base_src_path: &Path, bad: &mut bool) -> Features {\n                 None\n             } else {\n                 next_feature_is_rustc_internal = false;\n-                let s = issue_str.split(\"(\").nth(1).unwrap().split(\")\").nth(0).unwrap();\n+                let s = issue_str.split('(').nth(1).unwrap().split(')').nth(0).unwrap();\n                 Some(s.parse().unwrap())\n             };\n             Some((name.to_owned(),"}, {"sha": "f2f35f0f586023ba431d18a90a0c95bb8d5c7869", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2af8667b1a5166137510aeb2aaad9945f81db6d/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=a2af8667b1a5166137510aeb2aaad9945f81db6d", "patch": "@@ -131,7 +131,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n         let skip_length = contents.contains(\"ignore-tidy-linelength\");\n         let skip_end_whitespace = contents.contains(\"ignore-tidy-end-whitespace\");\n         let mut trailing_new_lines = 0;\n-        for (i, line) in contents.split(\"\\n\").enumerate() {\n+        for (i, line) in contents.split('\\n').enumerate() {\n             let mut err = |msg: &str| {\n                 tidy_error!(bad, \"{}:{}: {}\", file.display(), i + 1, msg);\n             };"}]}