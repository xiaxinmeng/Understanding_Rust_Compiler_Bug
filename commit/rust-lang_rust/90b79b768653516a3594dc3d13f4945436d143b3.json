{"sha": "90b79b768653516a3594dc3d13f4945436d143b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYjc5Yjc2ODY1MzUxNmEzNTk0ZGMzZDEzZjQ5NDU0MzZkMTQzYjM=", "commit": {"author": {"name": "Ruud van Asseldonk", "email": "dev@veniogames.com", "date": "2014-07-07T05:51:34Z"}, "committer": {"name": "Ruud van Asseldonk", "email": "dev@veniogames.com", "date": "2014-07-07T05:51:34Z"}, "message": "manual: Fix typo.\n\nAlso removes redundant newline in code block.", "tree": {"sha": "dddcea3f8987079be181f2fc575e54c5feefe598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dddcea3f8987079be181f2fc575e54c5feefe598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90b79b768653516a3594dc3d13f4945436d143b3", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90b79b768653516a3594dc3d13f4945436d143b3", "html_url": "https://github.com/rust-lang/rust/commit/90b79b768653516a3594dc3d13f4945436d143b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90b79b768653516a3594dc3d13f4945436d143b3/comments", "author": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9db7f6137122c1cf174518cc402e04d54c3c8c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9db7f6137122c1cf174518cc402e04d54c3c8c3", "html_url": "https://github.com/rust-lang/rust/commit/d9db7f6137122c1cf174518cc402e04d54c3c8c3"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "f09214d1a6f9d149483857f5c6f8fb6e9e83db2f", "filename": "src/doc/rust.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/90b79b768653516a3594dc3d13f4945436d143b3/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/90b79b768653516a3594dc3d13f4945436d143b3/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=90b79b768653516a3594dc3d13f4945436d143b3", "patch": "@@ -3889,12 +3889,11 @@ by the prefix operator `box`. When the standard library is in use, the type of a\n An example of an owned box type and value:\n \n ~~~~\n-\n let x: Box<int> = box 10;\n ~~~~\n \n-Owned box values exist in 1:1 correspondence with their heap allocation\n-copying an owned box value makes a shallow copy of the pointer\n+Owned box values exist in 1:1 correspondence with their heap allocation,\n+copying an owned box value makes a shallow copy of the pointer.\n Rust will consider a shallow copy of an owned box to move ownership of the value. After a value has been moved, the source location cannot be used unless it is reinitialized.\n \n ~~~~"}]}