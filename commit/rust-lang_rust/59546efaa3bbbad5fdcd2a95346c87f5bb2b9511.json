{"sha": "59546efaa3bbbad5fdcd2a95346c87f5bb2b9511", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NTQ2ZWZhYTNiYmJhZDVmZGNkMmE5NTM0NmM4N2Y1YmIyYjk1MTE=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-14T20:59:41Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-17T20:03:03Z"}, "message": "rustdoc: Give a more accurate span for anchor failures", "tree": {"sha": "a660e0b6a94af49ab2677f9fbbd97ce1867ec8c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a660e0b6a94af49ab2677f9fbbd97ce1867ec8c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511", "html_url": "https://github.com/rust-lang/rust/commit/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c3b66cff74f3a21dc735294f3df319a38bc2114", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c3b66cff74f3a21dc735294f3df319a38bc2114", "html_url": "https://github.com/rust-lang/rust/commit/9c3b66cff74f3a21dc735294f3df319a38bc2114"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "837cd034b655c834e61ba0af592079c3453c39bc", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=59546efaa3bbbad5fdcd2a95346c87f5bb2b9511", "patch": "@@ -1957,20 +1957,28 @@ fn resolution_failure(\n \n /// Report an anchor failure.\n fn anchor_failure(cx: &DocContext<'_>, diag_info: DiagnosticInfo<'_>, failure: AnchorFailure) {\n-    let msg = match failure {\n+    let (msg, anchor_idx) = match failure {\n         AnchorFailure::MultipleAnchors => {\n-            format!(\"`{}` contains multiple anchors\", diag_info.ori_link)\n+            (format!(\"`{}` contains multiple anchors\", diag_info.ori_link), 1)\n         }\n-        AnchorFailure::RustdocAnchorConflict(res) => format!(\n-            \"`{}` contains an anchor, but links to {kind}s are already anchored\",\n-            diag_info.ori_link,\n-            kind = res.descr(),\n+        AnchorFailure::RustdocAnchorConflict(res) => (\n+            format!(\n+                \"`{}` contains an anchor, but links to {kind}s are already anchored\",\n+                diag_info.ori_link,\n+                kind = res.descr(),\n+            ),\n+            0,\n         ),\n     };\n \n     report_diagnostic(cx.tcx, BROKEN_INTRA_DOC_LINKS, &msg, &diag_info, |diag, sp| {\n-        if let Some(sp) = sp {\n-            diag.span_label(sp, \"contains invalid anchor\");\n+        if let Some(mut sp) = sp {\n+            if let Some((fragment_offset, _)) =\n+                diag_info.ori_link.char_indices().filter(|(_, x)| *x == '#').nth(anchor_idx)\n+            {\n+                sp = sp.with_lo(sp.lo() + rustc_span::BytePos(fragment_offset as _));\n+            }\n+            diag.span_label(sp, \"invalid anchor\");\n         }\n         if let AnchorFailure::RustdocAnchorConflict(Res::Primitive(_)) = failure {\n             diag.note(\"this restriction may be lifted in a future release\");"}, {"sha": "d63e1ee60b3c5754db791ac38ed27345a59ee1bc", "filename": "src/test/rustdoc-ui/intra-doc/anchors.stderr", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr?ref=59546efaa3bbbad5fdcd2a95346c87f5bb2b9511", "patch": "@@ -2,7 +2,9 @@ error: `prim@usize#x` contains an anchor, but links to builtin types are already\n   --> $DIR/anchors.rs:47:6\n    |\n LL | /// [prim@usize#x]\n-   |      ^^^^^^^^^^^^ contains invalid anchor\n+   |      ^^^^^^^^^^--\n+   |                |\n+   |                invalid anchor\n    |\n note: the lint level is defined here\n   --> $DIR/anchors.rs:1:9\n@@ -16,25 +18,33 @@ error: `Foo::f#hola` contains an anchor, but links to fields are already anchore\n   --> $DIR/anchors.rs:25:15\n    |\n LL | /// Or maybe [Foo::f#hola].\n-   |               ^^^^^^^^^^^ contains invalid anchor\n+   |               ^^^^^^-----\n+   |                     |\n+   |                     invalid anchor\n \n error: `hello#people#!` contains multiple anchors\n   --> $DIR/anchors.rs:31:28\n    |\n LL | /// Another anchor error: [hello#people#!].\n-   |                            ^^^^^^^^^^^^^^ contains invalid anchor\n+   |                            ^^^^^^^^^^^^--\n+   |                                        |\n+   |                                        invalid anchor\n \n error: `Enum::A#whatever` contains an anchor, but links to variants are already anchored\n   --> $DIR/anchors.rs:37:28\n    |\n LL | /// Damn enum's variants: [Enum::A#whatever].\n-   |                            ^^^^^^^^^^^^^^^^ contains invalid anchor\n+   |                            ^^^^^^^---------\n+   |                                   |\n+   |                                   invalid anchor\n \n error: `u32#hello` contains an anchor, but links to builtin types are already anchored\n   --> $DIR/anchors.rs:43:6\n    |\n LL | /// [u32#hello]\n-   |      ^^^^^^^^^ contains invalid anchor\n+   |      ^^^------\n+   |         |\n+   |         invalid anchor\n    |\n    = note: this restriction may be lifted in a future release\n    = note: see https://github.com/rust-lang/rust/issues/83083 for more information"}, {"sha": "6addb010e078f21a9d8825767c11a2d6a84828ff", "filename": "src/test/rustdoc-ui/intra-doc/double-anchor.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59546efaa3bbbad5fdcd2a95346c87f5bb2b9511/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr?ref=59546efaa3bbbad5fdcd2a95346c87f5bb2b9511", "patch": "@@ -2,7 +2,9 @@ warning: `with#anchor#error` contains multiple anchors\n   --> $DIR/double-anchor.rs:5:18\n    |\n LL | /// docs [label][with#anchor#error]\n-   |                  ^^^^^^^^^^^^^^^^^ contains invalid anchor\n+   |                  ^^^^^^^^^^^------\n+   |                             |\n+   |                             invalid anchor\n    |\n    = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\n "}]}