{"sha": "bd77e9433f5a76530c3d2acf0fa82caa5167e263", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNzdlOTQzM2Y1YTc2NTMwYzNkMmFjZjBmYTgyY2FhNTE2N2UyNjM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T14:01:45Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T14:01:45Z"}, "message": "syntax: pass some values around by reference", "tree": {"sha": "d8abffea8f956ae66ab2ced4ce27490fe1999177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8abffea8f956ae66ab2ced4ce27490fe1999177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd77e9433f5a76530c3d2acf0fa82caa5167e263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd77e9433f5a76530c3d2acf0fa82caa5167e263", "html_url": "https://github.com/rust-lang/rust/commit/bd77e9433f5a76530c3d2acf0fa82caa5167e263", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd77e9433f5a76530c3d2acf0fa82caa5167e263/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f1ab3a7fad9aeb871479470785250fe2e923e19", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f1ab3a7fad9aeb871479470785250fe2e923e19", "html_url": "https://github.com/rust-lang/rust/commit/2f1ab3a7fad9aeb871479470785250fe2e923e19"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a6f078d07b42092e7d8afd6cc4ae63017980a3b3", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd77e9433f5a76530c3d2acf0fa82caa5167e263/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd77e9433f5a76530c3d2acf0fa82caa5167e263/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=bd77e9433f5a76530c3d2acf0fa82caa5167e263", "patch": "@@ -88,7 +88,7 @@ pub mod rt {\n         }\n     }\n \n-    impl ToSource for ~[@ast::item] {\n+    impl<'self> ToSource for &'self [@ast::item] {\n         fn to_source(&self, cx: @ext_ctxt) -> ~str {\n             str::connect(self.map(|i| i.to_source(cx)), ~\"\\n\\n\")\n         }\n@@ -100,7 +100,7 @@ pub mod rt {\n         }\n     }\n \n-    impl ToSource for ~[@ast::Ty] {\n+    impl<'self> ToSource for &'self [@ast::Ty] {\n         fn to_source(&self, cx: @ext_ctxt) -> ~str {\n             str::connect(self.map(|i| i.to_source(cx)), ~\", \")\n         }\n@@ -216,7 +216,7 @@ pub mod rt {\n         }\n     }\n \n-    impl ToTokens for ~[@ast::item] {\n+    impl<'self> ToTokens for &'self [@ast::item] {\n         fn to_tokens(&self, cx: @ext_ctxt) -> ~[token_tree] {\n             cx.parse_tts(self.to_source(cx))\n         }\n@@ -228,7 +228,7 @@ pub mod rt {\n         }\n     }\n \n-    impl ToTokens for ~[@ast::Ty] {\n+    impl<'self> ToTokens for &'self [@ast::Ty] {\n         fn to_tokens(&self, cx: @ext_ctxt) -> ~[token_tree] {\n             cx.parse_tts(self.to_source(cx))\n         }"}, {"sha": "28b6d1328420e66e5f600fdd3c0913e99fb69b8f", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd77e9433f5a76530c3d2acf0fa82caa5167e263/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd77e9433f5a76530c3d2acf0fa82caa5167e263/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=bd77e9433f5a76530c3d2acf0fa82caa5167e263", "patch": "@@ -324,7 +324,7 @@ pub fn commasep<IN>(s: @ps, b: breaks, elts: &[IN], op: &fn(@ps, IN)) {\n pub fn commasep_cmnt<IN>(s: @ps, b: breaks, elts: &[IN], op: &fn(@ps, IN),\n                          get_span: &fn(IN) -> codemap::span) {\n     box(s, 0u, b);\n-    let len = vec::len::<IN>(elts);\n+    let len = elts.len();\n     let mut i = 0u;\n     for elts.each |elt| {\n         maybe_print_comment(s, get_span(*elt).hi);\n@@ -2133,7 +2133,7 @@ pub fn print_comment(s: @ps, cmnt: comments::cmnt) {\n     }\n }\n \n-pub fn print_string(s: @ps, st: ~str) {\n+pub fn print_string(s: @ps, st: &str) {\n     word(s.s, ~\"\\\"\");\n     word(s.s, str::escape_default(st));\n     word(s.s, ~\"\\\"\");"}]}