{"sha": "c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "node_id": "C_kwDOAAsO6NoAKGM3OWRiOWM1ZTVkN2UwYmRjMjMwYjUzYjAxYTRmNjVkODQ0MzQwODI", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-23T17:59:39Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-23T17:59:39Z"}, "message": "Suggest `Pin::as_mut` when encountering borrow error", "tree": {"sha": "71c739ec852a63b11a5546e9681ce10c1175db68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71c739ec852a63b11a5546e9681ce10c1175db68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "html_url": "https://github.com/rust-lang/rust/commit/c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984eab57f708e62c09b3d708033fe620130b5f39", "url": "https://api.github.com/repos/rust-lang/rust/commits/984eab57f708e62c09b3d708033fe620130b5f39", "html_url": "https://github.com/rust-lang/rust/commit/984eab57f708e62c09b3d708033fe620130b5f39"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "213b8b064f95b3df67d433c4fa864b2b0831f9d8", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "patch": "@@ -1133,6 +1133,17 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                 place_name, partially_str, loop_message\n                             ),\n                         );\n+                        if let ty::Adt(def, ..)\n+                            = moved_place.ty(self.body, self.infcx.tcx).ty.kind()\n+                            && Some(def.did()) == self.infcx.tcx.lang_items().pin_type()\n+                        {\n+                            err.span_suggestion_verbose(\n+                                fn_call_span.shrink_to_lo(),\n+                                \"consider reborrowing the `Pin` instead of moving it\",\n+                                \"as_mut().\".to_string(),\n+                                Applicability::MaybeIncorrect,\n+                            );\n+                        }\n                     }\n                     let tcx = self.infcx.tcx;\n                     // Avoid pointing to the same function in multiple different"}, {"sha": "0ed44b7674a5f9c1638792fe6c13c8af470a679c", "filename": "src/test/ui/moves/move-fn-self-receiver.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr?ref=c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "patch": "@@ -67,6 +67,10 @@ note: `Foo::use_pin_box_self` takes ownership of the receiver `self`, which move\n    |\n LL |     fn use_pin_box_self(self: Pin<Box<Self>>) {}\n    |                         ^^^^\n+help: consider reborrowing the `Pin` instead of moving it\n+   |\n+LL |     pin_box_foo.as_mut().use_pin_box_self();\n+   |                 +++++++++\n \n error[E0505]: cannot move out of `mut_foo` because it is borrowed\n   --> $DIR/move-fn-self-receiver.rs:50:5"}, {"sha": "e808186d7d445a057e649d0a55de0b318a5c2988", "filename": "src/test/ui/moves/pin-mut-reborrow.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.fixed?ref=c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+use std::pin::Pin;\n+\n+struct Foo;\n+\n+impl Foo {\n+    fn foo(self: Pin<&mut Self>) {}\n+}\n+\n+fn main() {\n+    let mut foo = Foo;\n+    let mut foo = Pin::new(&mut foo);\n+    foo.as_mut().foo();\n+    foo.foo(); //~ ERROR use of moved value\n+}"}, {"sha": "fee6236ebb4db1adafe17703d850304fac18a721", "filename": "src/test/ui/moves/pin-mut-reborrow.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.rs?ref=c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+use std::pin::Pin;\n+\n+struct Foo;\n+\n+impl Foo {\n+    fn foo(self: Pin<&mut Self>) {}\n+}\n+\n+fn main() {\n+    let mut foo = Foo;\n+    let mut foo = Pin::new(&mut foo);\n+    foo.foo();\n+    foo.foo(); //~ ERROR use of moved value\n+}"}, {"sha": "16fa4bacc2d85e2b5861163c5271247b34b07208", "filename": "src/test/ui/moves/pin-mut-reborrow.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c79db9c5e5d7e0bdc230b53b01a4f65d84434082/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fpin-mut-reborrow.stderr?ref=c79db9c5e5d7e0bdc230b53b01a4f65d84434082", "patch": "@@ -0,0 +1,23 @@\n+error[E0382]: use of moved value: `foo`\n+  --> $DIR/pin-mut-reborrow.rs:14:5\n+   |\n+LL |     let mut foo = Pin::new(&mut foo);\n+   |         ------- move occurs because `foo` has type `Pin<&mut Foo>`, which does not implement the `Copy` trait\n+LL |     foo.foo();\n+   |         ----- `foo` moved due to this method call\n+LL |     foo.foo();\n+   |     ^^^ value used here after move\n+   |\n+note: `Foo::foo` takes ownership of the receiver `self`, which moves `foo`\n+  --> $DIR/pin-mut-reborrow.rs:7:12\n+   |\n+LL |     fn foo(self: Pin<&mut Self>) {}\n+   |            ^^^^\n+help: consider reborrowing the `Pin` instead of moving it\n+   |\n+LL |     foo.as_mut().foo();\n+   |         +++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}]}