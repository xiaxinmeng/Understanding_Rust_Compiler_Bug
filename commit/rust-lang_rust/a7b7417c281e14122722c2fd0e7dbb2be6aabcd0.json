{"sha": "a7b7417c281e14122722c2fd0e7dbb2be6aabcd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3Yjc0MTdjMjgxZTE0MTIyNzIyYzJmZDBlN2RiYjJiZTZhYWJjZDA=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-06T12:01:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-06T12:01:21Z"}, "message": "Rollup merge of #35364 - kc1212:e0379, r=jonathandturner\n\nUpdate E0379 to new format #35338\n\nFixes #35338, as part of #35233.\n\nBut this does not include the bonus. From my understanding a Span is defined by a `hi` and a `lo` position within some context. A naive way would be to mutate the span so that `hi` is 5 positions from `lo` which corresponds to the `const` keyword. But this methods feels a bit rigid. Is there another way to do this?\n\nr? @jonathandturner", "tree": {"sha": "623a79a63c43318f93423d720365ac41b58f88f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/623a79a63c43318f93423d720365ac41b58f88f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7b7417c281e14122722c2fd0e7dbb2be6aabcd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7b7417c281e14122722c2fd0e7dbb2be6aabcd0", "html_url": "https://github.com/rust-lang/rust/commit/a7b7417c281e14122722c2fd0e7dbb2be6aabcd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7b7417c281e14122722c2fd0e7dbb2be6aabcd0/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c846c30584796f8a97b6a371f1872c63cc13770c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c846c30584796f8a97b6a371f1872c63cc13770c", "html_url": "https://github.com/rust-lang/rust/commit/c846c30584796f8a97b6a371f1872c63cc13770c"}, {"sha": "764d5cfafb30acbe3fdb45b6c98b4e694a303558", "url": "https://api.github.com/repos/rust-lang/rust/commits/764d5cfafb30acbe3fdb45b6c98b4e694a303558", "html_url": "https://github.com/rust-lang/rust/commit/764d5cfafb30acbe3fdb45b6c98b4e694a303558"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "30b2f43153e965b47817ed4fb9a7d3f12edc210e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7b7417c281e14122722c2fd0e7dbb2be6aabcd0/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7b7417c281e14122722c2fd0e7dbb2be6aabcd0/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=a7b7417c281e14122722c2fd0e7dbb2be6aabcd0", "patch": "@@ -847,7 +847,9 @@ fn check_trait_fn_not_const<'a,'tcx>(ccx: &CrateCtxt<'a, 'tcx>,\n             // good\n         }\n         hir::Constness::Const => {\n-            span_err!(ccx.tcx.sess, span, E0379, \"trait fns cannot be declared const\");\n+            struct_span_err!(ccx.tcx.sess, span, E0379, \"trait fns cannot be declared const\")\n+                .span_label(span, &format!(\"trait fns cannot be const\"))\n+                .emit()\n         }\n     }\n }"}, {"sha": "92568b27f7c1da143e24a4fd2a982f3df13026d7", "filename": "src/test/compile-fail/const-fn-mismatch.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7b7417c281e14122722c2fd0e7dbb2be6aabcd0/src%2Ftest%2Fcompile-fail%2Fconst-fn-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7b7417c281e14122722c2fd0e7dbb2be6aabcd0/src%2Ftest%2Fcompile-fail%2Fconst-fn-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-fn-mismatch.rs?ref=a7b7417c281e14122722c2fd0e7dbb2be6aabcd0", "patch": "@@ -20,7 +20,9 @@ trait Foo {\n }\n \n impl Foo for u32 {\n-    const fn f() -> u32 { 22 } //~ ERROR E0379\n+    const fn f() -> u32 { 22 }\n+    //~^ ERROR E0379\n+    //~| NOTE trait fns cannot be const\n }\n \n fn main() { }"}]}