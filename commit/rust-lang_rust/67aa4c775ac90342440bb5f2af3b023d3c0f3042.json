{"sha": "67aa4c775ac90342440bb5f2af3b023d3c0f3042", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YWE0Yzc3NWFjOTAzNDI0NDBiYjVmMmFmM2IwMjNkM2MwZjMwNDI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-09-04T00:06:34Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-09-04T16:14:13Z"}, "message": "Add some fancier AArch64 load/store instructions.", "tree": {"sha": "f9970a9a12a38f597584b785ce8d77006686f697", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9970a9a12a38f597584b785ce8d77006686f697"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67aa4c775ac90342440bb5f2af3b023d3c0f3042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67aa4c775ac90342440bb5f2af3b023d3c0f3042", "html_url": "https://github.com/rust-lang/rust/commit/67aa4c775ac90342440bb5f2af3b023d3c0f3042", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67aa4c775ac90342440bb5f2af3b023d3c0f3042/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7241ae9112703ec6ec252260af8a0789db179a1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7241ae9112703ec6ec252260af8a0789db179a1b", "html_url": "https://github.com/rust-lang/rust/commit/7241ae9112703ec6ec252260af8a0789db179a1b"}], "stats": {"total": 644, "additions": 643, "deletions": 1}, "files": [{"sha": "79fd7699428895bf2191ba22f4bc1a062919c38a", "filename": "src/etc/platform-intrinsics/aarch64.json", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/67aa4c775ac90342440bb5f2af3b023d3c0f3042/src%2Fetc%2Fplatform-intrinsics%2Faarch64.json", "raw_url": "https://github.com/rust-lang/rust/raw/67aa4c775ac90342440bb5f2af3b023d3c0f3042/src%2Fetc%2Fplatform-intrinsics%2Faarch64.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Faarch64.json?ref=67aa4c775ac90342440bb5f2af3b023d3c0f3042", "patch": "@@ -336,6 +336,48 @@\n             \"ret\": \"i8\",\n             \"args\": [\"0\"]\n         },\n+        {\n+            \"intrinsic\": \"ld2{0[0].width}_{0[0].data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"ld2.{0[0].llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"[i(8-64);2]\",\"[f(32-64);2]\"],\n+            \"args\": [\"0.0SPc/0.0\"]\n+        },\n+        {\n+            \"intrinsic\": \"ld3{0[0].width}_{0[0].data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"ld3.{0[0].llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"[i(8-64);3]\",\"[f(32-64);3]\"],\n+            \"args\": [\"0.0SPc/0.0\"]\n+        },\n+        {\n+            \"intrinsic\": \"ld4{0[0].width}_{0[0].data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"ld4.{0[0].llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"[i(8-64);4]\",\"[f(32-64);4]\"],\n+            \"args\": [\"0.0SPc/0.0\"]\n+        },\n+        {\n+            \"intrinsic\": \"ld2{0[0].width}_dup_{0[0].data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"ld2.{0[0].llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"[i(8-64);2]\",\"[f(32-64);2]\"],\n+            \"args\": [\"0.0SPc\"]\n+        },\n+        {\n+            \"intrinsic\": \"ld3{0[0].width}_dup_{0[0].data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"ld3.{0[0].llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"[i(8-64);3]\",\"[f(32-64);3]\"],\n+            \"args\": [\"0.0SPc\"]\n+        },\n+        {\n+            \"intrinsic\": \"ld4{0[0].width}_dup_{0[0].data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"ld4.{0[0].llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"[i(8-64);4]\",\"[f(32-64);4]\"],\n+            \"args\": [\"0.0SPc\"]\n+        },\n         {\n             \"intrinsic\": \"padd{0.width}_{0.data_type}\",\n             \"width\": [64, 128],"}, {"sha": "a3084d903e27fe26b615a0fe56906c1e5850733d", "filename": "src/librustc_platform_intrinsics/aarch64.rs", "status": "modified", "additions": 601, "deletions": 1, "changes": 602, "blob_url": "https://github.com/rust-lang/rust/blob/67aa4c775ac90342440bb5f2af3b023d3c0f3042/src%2Flibrustc_platform_intrinsics%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67aa4c775ac90342440bb5f2af3b023d3c0f3042/src%2Flibrustc_platform_intrinsics%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Faarch64.rs?ref=67aa4c775ac90342440bb5f2af3b023d3c0f3042", "patch": "@@ -13,7 +13,7 @@\n \n #![allow(unused_imports)]\n \n-use {Intrinsic, i, i_, u, u_, f, v, agg, p};\n+use {Intrinsic, i, i_, u, u_, f, v, v_, agg, p, void};\n use IntrinsicDef::Named;\n use rustc::middle::ty;\n \n@@ -1910,6 +1910,606 @@ pub fn find<'tcx>(_tcx: &ty::ctxt<'tcx>, name: &str) -> Option<Intrinsic> {\n             output: v(u(8), 16),\n             definition: Named(\"llvm.aarch64.neon.rbit.v16i8\")\n         },\n+        \"ld2_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), Some(v(i(8), 8)))],\n+            output: agg(false, vec![v(i(8), 8), v(i(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v8i8.p0v8i8\")\n+        },\n+        \"ld2_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), Some(v(u(8), 8)))],\n+            output: agg(false, vec![v(u(8), 8), v(u(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v8i8.p0v8i8\")\n+        },\n+        \"ld2_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), Some(v(i(16), 4)))],\n+            output: agg(false, vec![v(i(16), 4), v(i(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4i16.p0v4i16\")\n+        },\n+        \"ld2_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), Some(v(u(16), 4)))],\n+            output: agg(false, vec![v(u(16), 4), v(u(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4i16.p0v4i16\")\n+        },\n+        \"ld2_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), Some(v(i(32), 2)))],\n+            output: agg(false, vec![v(i(32), 2), v(i(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2i32.p0v2i32\")\n+        },\n+        \"ld2_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), Some(v(u(32), 2)))],\n+            output: agg(false, vec![v(u(32), 2), v(u(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2i32.p0v2i32\")\n+        },\n+        \"ld2_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), Some(v(i(64), 1)))],\n+            output: agg(false, vec![v(i(64), 1), v(i(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v1i64.p0v1i64\")\n+        },\n+        \"ld2_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), Some(v(u(64), 1)))],\n+            output: agg(false, vec![v(u(64), 1), v(u(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v1i64.p0v1i64\")\n+        },\n+        \"ld2_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), Some(v(f(32), 2)))],\n+            output: agg(false, vec![v(f(32), 2), v(f(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2f32.p0v2f32\")\n+        },\n+        \"ld2_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), Some(v(f(64), 1)))],\n+            output: agg(false, vec![v(f(64), 1), v(f(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v1f64.p0v1f64\")\n+        },\n+        \"ld2q_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), Some(v(i(8), 16)))],\n+            output: agg(false, vec![v(i(8), 16), v(i(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v16i8.p0v16i8\")\n+        },\n+        \"ld2q_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), Some(v(u(8), 16)))],\n+            output: agg(false, vec![v(u(8), 16), v(u(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v16i8.p0v16i8\")\n+        },\n+        \"ld2q_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), Some(v(i(16), 8)))],\n+            output: agg(false, vec![v(i(16), 8), v(i(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v8i16.p0v8i16\")\n+        },\n+        \"ld2q_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), Some(v(u(16), 8)))],\n+            output: agg(false, vec![v(u(16), 8), v(u(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v8i16.p0v8i16\")\n+        },\n+        \"ld2q_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), Some(v(i(32), 4)))],\n+            output: agg(false, vec![v(i(32), 4), v(i(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4i32.p0v4i32\")\n+        },\n+        \"ld2q_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), Some(v(u(32), 4)))],\n+            output: agg(false, vec![v(u(32), 4), v(u(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4i32.p0v4i32\")\n+        },\n+        \"ld2q_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), Some(v(i(64), 2)))],\n+            output: agg(false, vec![v(i(64), 2), v(i(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2i64.p0v2i64\")\n+        },\n+        \"ld2q_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), Some(v(u(64), 2)))],\n+            output: agg(false, vec![v(u(64), 2), v(u(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2i64.p0v2i64\")\n+        },\n+        \"ld2q_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), Some(v(f(32), 4)))],\n+            output: agg(false, vec![v(f(32), 4), v(f(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4f32.p0v4f32\")\n+        },\n+        \"ld2q_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), Some(v(f(64), 2)))],\n+            output: agg(false, vec![v(f(64), 2), v(f(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2f64.p0v2f64\")\n+        },\n+        \"ld3_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), Some(v(i(8), 8)))],\n+            output: agg(false, vec![v(i(8), 8), v(i(8), 8), v(i(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v8i8.p0v8i8\")\n+        },\n+        \"ld3_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), Some(v(u(8), 8)))],\n+            output: agg(false, vec![v(u(8), 8), v(u(8), 8), v(u(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v8i8.p0v8i8\")\n+        },\n+        \"ld3_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), Some(v(i(16), 4)))],\n+            output: agg(false, vec![v(i(16), 4), v(i(16), 4), v(i(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4i16.p0v4i16\")\n+        },\n+        \"ld3_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), Some(v(u(16), 4)))],\n+            output: agg(false, vec![v(u(16), 4), v(u(16), 4), v(u(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4i16.p0v4i16\")\n+        },\n+        \"ld3_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), Some(v(i(32), 2)))],\n+            output: agg(false, vec![v(i(32), 2), v(i(32), 2), v(i(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2i32.p0v2i32\")\n+        },\n+        \"ld3_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), Some(v(u(32), 2)))],\n+            output: agg(false, vec![v(u(32), 2), v(u(32), 2), v(u(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2i32.p0v2i32\")\n+        },\n+        \"ld3_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), Some(v(i(64), 1)))],\n+            output: agg(false, vec![v(i(64), 1), v(i(64), 1), v(i(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v1i64.p0v1i64\")\n+        },\n+        \"ld3_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), Some(v(u(64), 1)))],\n+            output: agg(false, vec![v(u(64), 1), v(u(64), 1), v(u(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v1i64.p0v1i64\")\n+        },\n+        \"ld3_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), Some(v(f(32), 2)))],\n+            output: agg(false, vec![v(f(32), 2), v(f(32), 2), v(f(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2f32.p0v2f32\")\n+        },\n+        \"ld3_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), Some(v(f(64), 1)))],\n+            output: agg(false, vec![v(f(64), 1), v(f(64), 1), v(f(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v1f64.p0v1f64\")\n+        },\n+        \"ld3q_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), Some(v(i(8), 16)))],\n+            output: agg(false, vec![v(i(8), 16), v(i(8), 16), v(i(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v16i8.p0v16i8\")\n+        },\n+        \"ld3q_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), Some(v(u(8), 16)))],\n+            output: agg(false, vec![v(u(8), 16), v(u(8), 16), v(u(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v16i8.p0v16i8\")\n+        },\n+        \"ld3q_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), Some(v(i(16), 8)))],\n+            output: agg(false, vec![v(i(16), 8), v(i(16), 8), v(i(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v8i16.p0v8i16\")\n+        },\n+        \"ld3q_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), Some(v(u(16), 8)))],\n+            output: agg(false, vec![v(u(16), 8), v(u(16), 8), v(u(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v8i16.p0v8i16\")\n+        },\n+        \"ld3q_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), Some(v(i(32), 4)))],\n+            output: agg(false, vec![v(i(32), 4), v(i(32), 4), v(i(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4i32.p0v4i32\")\n+        },\n+        \"ld3q_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), Some(v(u(32), 4)))],\n+            output: agg(false, vec![v(u(32), 4), v(u(32), 4), v(u(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4i32.p0v4i32\")\n+        },\n+        \"ld3q_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), Some(v(i(64), 2)))],\n+            output: agg(false, vec![v(i(64), 2), v(i(64), 2), v(i(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2i64.p0v2i64\")\n+        },\n+        \"ld3q_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), Some(v(u(64), 2)))],\n+            output: agg(false, vec![v(u(64), 2), v(u(64), 2), v(u(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2i64.p0v2i64\")\n+        },\n+        \"ld3q_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), Some(v(f(32), 4)))],\n+            output: agg(false, vec![v(f(32), 4), v(f(32), 4), v(f(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4f32.p0v4f32\")\n+        },\n+        \"ld3q_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), Some(v(f(64), 2)))],\n+            output: agg(false, vec![v(f(64), 2), v(f(64), 2), v(f(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2f64.p0v2f64\")\n+        },\n+        \"ld4_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), Some(v(i(8), 8)))],\n+            output: agg(false, vec![v(i(8), 8), v(i(8), 8), v(i(8), 8), v(i(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v8i8.p0v8i8\")\n+        },\n+        \"ld4_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), Some(v(u(8), 8)))],\n+            output: agg(false, vec![v(u(8), 8), v(u(8), 8), v(u(8), 8), v(u(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v8i8.p0v8i8\")\n+        },\n+        \"ld4_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), Some(v(i(16), 4)))],\n+            output: agg(false, vec![v(i(16), 4), v(i(16), 4), v(i(16), 4), v(i(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4i16.p0v4i16\")\n+        },\n+        \"ld4_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), Some(v(u(16), 4)))],\n+            output: agg(false, vec![v(u(16), 4), v(u(16), 4), v(u(16), 4), v(u(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4i16.p0v4i16\")\n+        },\n+        \"ld4_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), Some(v(i(32), 2)))],\n+            output: agg(false, vec![v(i(32), 2), v(i(32), 2), v(i(32), 2), v(i(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2i32.p0v2i32\")\n+        },\n+        \"ld4_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), Some(v(u(32), 2)))],\n+            output: agg(false, vec![v(u(32), 2), v(u(32), 2), v(u(32), 2), v(u(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2i32.p0v2i32\")\n+        },\n+        \"ld4_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), Some(v(i(64), 1)))],\n+            output: agg(false, vec![v(i(64), 1), v(i(64), 1), v(i(64), 1), v(i(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v1i64.p0v1i64\")\n+        },\n+        \"ld4_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), Some(v(u(64), 1)))],\n+            output: agg(false, vec![v(u(64), 1), v(u(64), 1), v(u(64), 1), v(u(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v1i64.p0v1i64\")\n+        },\n+        \"ld4_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), Some(v(f(32), 2)))],\n+            output: agg(false, vec![v(f(32), 2), v(f(32), 2), v(f(32), 2), v(f(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2f32.p0v2f32\")\n+        },\n+        \"ld4_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), Some(v(f(64), 1)))],\n+            output: agg(false, vec![v(f(64), 1), v(f(64), 1), v(f(64), 1), v(f(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v1f64.p0v1f64\")\n+        },\n+        \"ld4q_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), Some(v(i(8), 16)))],\n+            output: agg(false, vec![v(i(8), 16), v(i(8), 16), v(i(8), 16), v(i(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v16i8.p0v16i8\")\n+        },\n+        \"ld4q_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), Some(v(u(8), 16)))],\n+            output: agg(false, vec![v(u(8), 16), v(u(8), 16), v(u(8), 16), v(u(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v16i8.p0v16i8\")\n+        },\n+        \"ld4q_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), Some(v(i(16), 8)))],\n+            output: agg(false, vec![v(i(16), 8), v(i(16), 8), v(i(16), 8), v(i(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v8i16.p0v8i16\")\n+        },\n+        \"ld4q_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), Some(v(u(16), 8)))],\n+            output: agg(false, vec![v(u(16), 8), v(u(16), 8), v(u(16), 8), v(u(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v8i16.p0v8i16\")\n+        },\n+        \"ld4q_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), Some(v(i(32), 4)))],\n+            output: agg(false, vec![v(i(32), 4), v(i(32), 4), v(i(32), 4), v(i(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4i32.p0v4i32\")\n+        },\n+        \"ld4q_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), Some(v(u(32), 4)))],\n+            output: agg(false, vec![v(u(32), 4), v(u(32), 4), v(u(32), 4), v(u(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4i32.p0v4i32\")\n+        },\n+        \"ld4q_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), Some(v(i(64), 2)))],\n+            output: agg(false, vec![v(i(64), 2), v(i(64), 2), v(i(64), 2), v(i(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2i64.p0v2i64\")\n+        },\n+        \"ld4q_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), Some(v(u(64), 2)))],\n+            output: agg(false, vec![v(u(64), 2), v(u(64), 2), v(u(64), 2), v(u(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2i64.p0v2i64\")\n+        },\n+        \"ld4q_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), Some(v(f(32), 4)))],\n+            output: agg(false, vec![v(f(32), 4), v(f(32), 4), v(f(32), 4), v(f(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4f32.p0v4f32\")\n+        },\n+        \"ld4q_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), Some(v(f(64), 2)))],\n+            output: agg(false, vec![v(f(64), 2), v(f(64), 2), v(f(64), 2), v(f(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2f64.p0v2f64\")\n+        },\n+        \"ld2_dup_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), None)],\n+            output: agg(false, vec![v(i(8), 8), v(i(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v8i8.p0i8\")\n+        },\n+        \"ld2_dup_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), None)],\n+            output: agg(false, vec![v(u(8), 8), v(u(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v8i8.p0i8\")\n+        },\n+        \"ld2_dup_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), None)],\n+            output: agg(false, vec![v(i(16), 4), v(i(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4i16.p0i16\")\n+        },\n+        \"ld2_dup_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), None)],\n+            output: agg(false, vec![v(u(16), 4), v(u(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4i16.p0i16\")\n+        },\n+        \"ld2_dup_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), None)],\n+            output: agg(false, vec![v(i(32), 2), v(i(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2i32.p0i32\")\n+        },\n+        \"ld2_dup_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), None)],\n+            output: agg(false, vec![v(u(32), 2), v(u(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2i32.p0i32\")\n+        },\n+        \"ld2_dup_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), None)],\n+            output: agg(false, vec![v(i(64), 1), v(i(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v1i64.p0i64\")\n+        },\n+        \"ld2_dup_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), None)],\n+            output: agg(false, vec![v(u(64), 1), v(u(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v1i64.p0i64\")\n+        },\n+        \"ld2_dup_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), None)],\n+            output: agg(false, vec![v(f(32), 2), v(f(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2f32.p0f32\")\n+        },\n+        \"ld2_dup_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), None)],\n+            output: agg(false, vec![v(f(64), 1), v(f(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v1f64.p0f64\")\n+        },\n+        \"ld2q_dup_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), None)],\n+            output: agg(false, vec![v(i(8), 16), v(i(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v16i8.p0i8\")\n+        },\n+        \"ld2q_dup_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), None)],\n+            output: agg(false, vec![v(u(8), 16), v(u(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v16i8.p0i8\")\n+        },\n+        \"ld2q_dup_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), None)],\n+            output: agg(false, vec![v(i(16), 8), v(i(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v8i16.p0i16\")\n+        },\n+        \"ld2q_dup_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), None)],\n+            output: agg(false, vec![v(u(16), 8), v(u(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v8i16.p0i16\")\n+        },\n+        \"ld2q_dup_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), None)],\n+            output: agg(false, vec![v(i(32), 4), v(i(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4i32.p0i32\")\n+        },\n+        \"ld2q_dup_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), None)],\n+            output: agg(false, vec![v(u(32), 4), v(u(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4i32.p0i32\")\n+        },\n+        \"ld2q_dup_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), None)],\n+            output: agg(false, vec![v(i(64), 2), v(i(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2i64.p0i64\")\n+        },\n+        \"ld2q_dup_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), None)],\n+            output: agg(false, vec![v(u(64), 2), v(u(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2i64.p0i64\")\n+        },\n+        \"ld2q_dup_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), None)],\n+            output: agg(false, vec![v(f(32), 4), v(f(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v4f32.p0f32\")\n+        },\n+        \"ld2q_dup_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), None)],\n+            output: agg(false, vec![v(f(64), 2), v(f(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld2.v2f64.p0f64\")\n+        },\n+        \"ld3_dup_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), None)],\n+            output: agg(false, vec![v(i(8), 8), v(i(8), 8), v(i(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v8i8.p0i8\")\n+        },\n+        \"ld3_dup_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), None)],\n+            output: agg(false, vec![v(u(8), 8), v(u(8), 8), v(u(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v8i8.p0i8\")\n+        },\n+        \"ld3_dup_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), None)],\n+            output: agg(false, vec![v(i(16), 4), v(i(16), 4), v(i(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4i16.p0i16\")\n+        },\n+        \"ld3_dup_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), None)],\n+            output: agg(false, vec![v(u(16), 4), v(u(16), 4), v(u(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4i16.p0i16\")\n+        },\n+        \"ld3_dup_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), None)],\n+            output: agg(false, vec![v(i(32), 2), v(i(32), 2), v(i(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2i32.p0i32\")\n+        },\n+        \"ld3_dup_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), None)],\n+            output: agg(false, vec![v(u(32), 2), v(u(32), 2), v(u(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2i32.p0i32\")\n+        },\n+        \"ld3_dup_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), None)],\n+            output: agg(false, vec![v(i(64), 1), v(i(64), 1), v(i(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v1i64.p0i64\")\n+        },\n+        \"ld3_dup_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), None)],\n+            output: agg(false, vec![v(u(64), 1), v(u(64), 1), v(u(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v1i64.p0i64\")\n+        },\n+        \"ld3_dup_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), None)],\n+            output: agg(false, vec![v(f(32), 2), v(f(32), 2), v(f(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2f32.p0f32\")\n+        },\n+        \"ld3_dup_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), None)],\n+            output: agg(false, vec![v(f(64), 1), v(f(64), 1), v(f(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v1f64.p0f64\")\n+        },\n+        \"ld3q_dup_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), None)],\n+            output: agg(false, vec![v(i(8), 16), v(i(8), 16), v(i(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v16i8.p0i8\")\n+        },\n+        \"ld3q_dup_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), None)],\n+            output: agg(false, vec![v(u(8), 16), v(u(8), 16), v(u(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v16i8.p0i8\")\n+        },\n+        \"ld3q_dup_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), None)],\n+            output: agg(false, vec![v(i(16), 8), v(i(16), 8), v(i(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v8i16.p0i16\")\n+        },\n+        \"ld3q_dup_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), None)],\n+            output: agg(false, vec![v(u(16), 8), v(u(16), 8), v(u(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v8i16.p0i16\")\n+        },\n+        \"ld3q_dup_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), None)],\n+            output: agg(false, vec![v(i(32), 4), v(i(32), 4), v(i(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4i32.p0i32\")\n+        },\n+        \"ld3q_dup_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), None)],\n+            output: agg(false, vec![v(u(32), 4), v(u(32), 4), v(u(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4i32.p0i32\")\n+        },\n+        \"ld3q_dup_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), None)],\n+            output: agg(false, vec![v(i(64), 2), v(i(64), 2), v(i(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2i64.p0i64\")\n+        },\n+        \"ld3q_dup_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), None)],\n+            output: agg(false, vec![v(u(64), 2), v(u(64), 2), v(u(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2i64.p0i64\")\n+        },\n+        \"ld3q_dup_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), None)],\n+            output: agg(false, vec![v(f(32), 4), v(f(32), 4), v(f(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v4f32.p0f32\")\n+        },\n+        \"ld3q_dup_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), None)],\n+            output: agg(false, vec![v(f(64), 2), v(f(64), 2), v(f(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld3.v2f64.p0f64\")\n+        },\n+        \"ld4_dup_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), None)],\n+            output: agg(false, vec![v(i(8), 8), v(i(8), 8), v(i(8), 8), v(i(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v8i8.p0i8\")\n+        },\n+        \"ld4_dup_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), None)],\n+            output: agg(false, vec![v(u(8), 8), v(u(8), 8), v(u(8), 8), v(u(8), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v8i8.p0i8\")\n+        },\n+        \"ld4_dup_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), None)],\n+            output: agg(false, vec![v(i(16), 4), v(i(16), 4), v(i(16), 4), v(i(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4i16.p0i16\")\n+        },\n+        \"ld4_dup_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), None)],\n+            output: agg(false, vec![v(u(16), 4), v(u(16), 4), v(u(16), 4), v(u(16), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4i16.p0i16\")\n+        },\n+        \"ld4_dup_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), None)],\n+            output: agg(false, vec![v(i(32), 2), v(i(32), 2), v(i(32), 2), v(i(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2i32.p0i32\")\n+        },\n+        \"ld4_dup_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), None)],\n+            output: agg(false, vec![v(u(32), 2), v(u(32), 2), v(u(32), 2), v(u(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2i32.p0i32\")\n+        },\n+        \"ld4_dup_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), None)],\n+            output: agg(false, vec![v(i(64), 1), v(i(64), 1), v(i(64), 1), v(i(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v1i64.p0i64\")\n+        },\n+        \"ld4_dup_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), None)],\n+            output: agg(false, vec![v(u(64), 1), v(u(64), 1), v(u(64), 1), v(u(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v1i64.p0i64\")\n+        },\n+        \"ld4_dup_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), None)],\n+            output: agg(false, vec![v(f(32), 2), v(f(32), 2), v(f(32), 2), v(f(32), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2f32.p0f32\")\n+        },\n+        \"ld4_dup_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), None)],\n+            output: agg(false, vec![v(f(64), 1), v(f(64), 1), v(f(64), 1), v(f(64), 1)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v1f64.p0f64\")\n+        },\n+        \"ld4q_dup_s8\" => Intrinsic {\n+            inputs: vec![p(true, i(8), None)],\n+            output: agg(false, vec![v(i(8), 16), v(i(8), 16), v(i(8), 16), v(i(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v16i8.p0i8\")\n+        },\n+        \"ld4q_dup_u8\" => Intrinsic {\n+            inputs: vec![p(true, u(8), None)],\n+            output: agg(false, vec![v(u(8), 16), v(u(8), 16), v(u(8), 16), v(u(8), 16)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v16i8.p0i8\")\n+        },\n+        \"ld4q_dup_s16\" => Intrinsic {\n+            inputs: vec![p(true, i(16), None)],\n+            output: agg(false, vec![v(i(16), 8), v(i(16), 8), v(i(16), 8), v(i(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v8i16.p0i16\")\n+        },\n+        \"ld4q_dup_u16\" => Intrinsic {\n+            inputs: vec![p(true, u(16), None)],\n+            output: agg(false, vec![v(u(16), 8), v(u(16), 8), v(u(16), 8), v(u(16), 8)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v8i16.p0i16\")\n+        },\n+        \"ld4q_dup_s32\" => Intrinsic {\n+            inputs: vec![p(true, i(32), None)],\n+            output: agg(false, vec![v(i(32), 4), v(i(32), 4), v(i(32), 4), v(i(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4i32.p0i32\")\n+        },\n+        \"ld4q_dup_u32\" => Intrinsic {\n+            inputs: vec![p(true, u(32), None)],\n+            output: agg(false, vec![v(u(32), 4), v(u(32), 4), v(u(32), 4), v(u(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4i32.p0i32\")\n+        },\n+        \"ld4q_dup_s64\" => Intrinsic {\n+            inputs: vec![p(true, i(64), None)],\n+            output: agg(false, vec![v(i(64), 2), v(i(64), 2), v(i(64), 2), v(i(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2i64.p0i64\")\n+        },\n+        \"ld4q_dup_u64\" => Intrinsic {\n+            inputs: vec![p(true, u(64), None)],\n+            output: agg(false, vec![v(u(64), 2), v(u(64), 2), v(u(64), 2), v(u(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2i64.p0i64\")\n+        },\n+        \"ld4q_dup_f32\" => Intrinsic {\n+            inputs: vec![p(true, f(32), None)],\n+            output: agg(false, vec![v(f(32), 4), v(f(32), 4), v(f(32), 4), v(f(32), 4)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v4f32.p0f32\")\n+        },\n+        \"ld4q_dup_f64\" => Intrinsic {\n+            inputs: vec![p(true, f(64), None)],\n+            output: agg(false, vec![v(f(64), 2), v(f(64), 2), v(f(64), 2), v(f(64), 2)]),\n+            definition: Named(\"llvm.aarch64.neon.ld4.v2f64.p0f64\")\n+        },\n         \"padd_s8\" => Intrinsic {\n             inputs: vec![v(i(8), 8), v(i(8), 8)],\n             output: v(i(8), 8),"}]}