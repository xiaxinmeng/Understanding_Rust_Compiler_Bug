{"sha": "8e929946fdf1151736fbad530d96aeb624f8e884", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOTI5OTQ2ZmRmMTE1MTczNmZiYWQ1MzBkOTZhZWI2MjRmOGU4ODQ=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-12T08:55:41Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-16T09:48:33Z"}, "message": "DeclKind", "tree": {"sha": "ee061f51b1ff435c0ad789327b8e06452611c146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee061f51b1ff435c0ad789327b8e06452611c146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e929946fdf1151736fbad530d96aeb624f8e884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e929946fdf1151736fbad530d96aeb624f8e884", "html_url": "https://github.com/rust-lang/rust/commit/8e929946fdf1151736fbad530d96aeb624f8e884", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e929946fdf1151736fbad530d96aeb624f8e884/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cf463fe935c9bf63c1eb4faae8fe2a081206cee", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf463fe935c9bf63c1eb4faae8fe2a081206cee", "html_url": "https://github.com/rust-lang/rust/commit/8cf463fe935c9bf63c1eb4faae8fe2a081206cee"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "e61367fb0b634fbffc894465c438dce5c7d7ec8b", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e929946fdf1151736fbad530d96aeb624f8e884/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e929946fdf1151736fbad530d96aeb624f8e884/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=8e929946fdf1151736fbad530d96aeb624f8e884", "patch": "@@ -599,7 +599,7 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                 let current = format!(\"{}.node\", decl_pat);\n                 match decl.node {\n                     // A local (let) binding:\n-                    Decl_::DeclLocal(ref local) => {\n+                    DeclKind::Local(ref local) => {\n                         let local_pat = self.next(\"local\");\n                         println!(\"DeclLocal(ref {}) = {};\", local_pat, current);\n                         if let Some(ref init) = local.init {\n@@ -612,7 +612,7 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                         self.visit_pat(&local.pat);\n                     },\n                     // An item binding:\n-                    Decl_::DeclItem(_) => {\n+                    DeclKind::Item(_) => {\n                         println!(\"DeclItem(item_id) = {};\", current);\n                     },\n                 }"}, {"sha": "b06fb1d21e3512ed5749a290dfee9f0dde7df55b", "filename": "tests/ui/author.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e929946fdf1151736fbad530d96aeb624f8e884/tests%2Fui%2Fauthor.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/8e929946fdf1151736fbad530d96aeb624f8e884/tests%2Fui%2Fauthor.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor.stdout?ref=8e929946fdf1151736fbad530d96aeb624f8e884", "patch": "@@ -1,6 +1,6 @@\n if_chain! {\n     if let StmtKind::Decl(ref decl, _) = stmt.node\n-    if let Decl_::DeclLocal(ref local) = decl.node;\n+    if let DeclKind::Local(ref local) = decl.node;\n     if let Some(ref init) = local.init\n     if let ExprKind::Cast(ref expr, ref cast_ty) = init.node;\n     if let TyKind::Path(ref qp) = cast_ty.node;"}, {"sha": "1c25708fb4849f734f6fc20a2dfec6d75e58bb0c", "filename": "tests/ui/author/call.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e929946fdf1151736fbad530d96aeb624f8e884/tests%2Fui%2Fauthor%2Fcall.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/8e929946fdf1151736fbad530d96aeb624f8e884/tests%2Fui%2Fauthor%2Fcall.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fcall.stdout?ref=8e929946fdf1151736fbad530d96aeb624f8e884", "patch": "@@ -1,6 +1,6 @@\n if_chain! {\n     if let StmtKind::Decl(ref decl, _) = stmt.node\n-    if let Decl_::DeclLocal(ref local) = decl.node;\n+    if let DeclKind::Local(ref local) = decl.node;\n     if let Some(ref init) = local.init\n     if let ExprKind::Call(ref func, ref args) = init.node;\n     if let ExprKind::Path(ref path) = func.node;"}, {"sha": "b99e8e0ade5e5cb3247ef082f179e172acc4c6fa", "filename": "tests/ui/author/for_loop.stdout", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8e929946fdf1151736fbad530d96aeb624f8e884/tests%2Fui%2Fauthor%2Ffor_loop.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/8e929946fdf1151736fbad530d96aeb624f8e884/tests%2Fui%2Fauthor%2Ffor_loop.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Ffor_loop.stdout?ref=8e929946fdf1151736fbad530d96aeb624f8e884", "patch": "@@ -1,7 +1,7 @@\n if_chain! {\n     if let ExprKind::Block(ref block) = expr.node;\n     if let StmtKind::Decl(ref decl, _) = block.node\n-    if let Decl_::DeclLocal(ref local) = decl.node;\n+    if let DeclKind::Local(ref local) = decl.node;\n     if let Some(ref init) = local.init\n     if let ExprKind::Match(ref expr, ref arms, MatchSource::ForLoopDesugar) = init.node;\n     if let ExprKind::Call(ref func, ref args) = expr.node;\n@@ -15,7 +15,7 @@ if_chain! {\n     if arms.len() == 1;\n     if let ExprKind::Loop(ref body, ref label, LoopSource::ForLoop) = arms[0].body.node;\n     if let StmtKind::Decl(ref decl1, _) = body.node\n-    if let Decl_::DeclLocal(ref local1) = decl1.node;\n+    if let DeclKind::Local(ref local1) = decl1.node;\n     if let PatKind::Binding(BindingAnnotation::Mutable, _, name, None) = local1.pat.node;\n     if name.node.as_str() == \"__next\";\n     if let StmtKind::Expr(ref e, _) = local1.pat.node\n@@ -43,7 +43,7 @@ if_chain! {\n     if let PatKind::Path(ref path7) = arms1[1].pats[0].node;\n     if match_qpath(path7, &[\"{{root}}\", \"std\", \"option\", \"Option\", \"None\"]);\n     if let StmtKind::Decl(ref decl2, _) = path7.node\n-    if let Decl_::DeclLocal(ref local2) = decl2.node;\n+    if let DeclKind::Local(ref local2) = decl2.node;\n     if let Some(ref init1) = local2.init\n     if let ExprKind::Path(ref path8) = init1.node;\n     if match_qpath(path8, &[\"__next\"]);\n@@ -52,7 +52,7 @@ if_chain! {\n     if let StmtKind::Expr(ref e1, _) = local2.pat.node\n     if let ExprKind::Block(ref block1) = e1.node;\n     if let StmtKind::Decl(ref decl3, _) = block1.node\n-    if let Decl_::DeclLocal(ref local3) = decl3.node;\n+    if let DeclKind::Local(ref local3) = decl3.node;\n     if let Some(ref init2) = local3.init\n     if let ExprKind::Path(ref path9) = init2.node;\n     if match_qpath(path9, &[\"y\"]);"}, {"sha": "94b25aefabed284196353925164afb34eb70e695", "filename": "tests/ui/author/matches.stout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e929946fdf1151736fbad530d96aeb624f8e884/tests%2Fui%2Fauthor%2Fmatches.stout", "raw_url": "https://github.com/rust-lang/rust/raw/8e929946fdf1151736fbad530d96aeb624f8e884/tests%2Fui%2Fauthor%2Fmatches.stout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fmatches.stout?ref=8e929946fdf1151736fbad530d96aeb624f8e884", "patch": "@@ -1,6 +1,6 @@\n if_chain! {\n     if let StmtKind::Decl(ref decl, _) = stmt.node\n-    if let Decl_::DeclLocal(ref local) = decl.node;\n+    if let DeclKind::Local(ref local) = decl.node;\n     if let Some(ref init) = local.init\n     if let ExprKind::Match(ref expr, ref arms, MatchSource::Normal) = init.node;\n     if let ExprKind::Lit(ref lit) = expr.node;\n@@ -14,7 +14,7 @@ if_chain! {\n     if let LitKind::Int(16, _) = lit2.node;\n     if let ExprKind::Block(ref block) = arms[1].body.node;\n     if let StmtKind::Decl(ref decl1, _) = block.node\n-    if let Decl_::DeclLocal(ref local1) = decl1.node;\n+    if let DeclKind::Local(ref local1) = decl1.node;\n     if let Some(ref init1) = local1.init\n     if let ExprKind::Lit(ref lit3) = init1.node;\n     if let LitKind::Int(3, _) = lit3.node;"}]}