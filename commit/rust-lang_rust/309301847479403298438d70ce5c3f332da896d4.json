{"sha": "309301847479403298438d70ce5c3f332da896d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwOTMwMTg0NzQ3OTQwMzI5ODQzOGQ3MGNlNWMzZjMzMmRhODk2ZDQ=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-04-03T03:02:44Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-04-19T09:53:54Z"}, "message": "Tweak `parse_opt_uint`.\n\nDon't set `slot` on failure, like all the other `parse_*` functions.", "tree": {"sha": "fb36ecfe6518bf447c0a319ebbd80f977945fe31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb36ecfe6518bf447c0a319ebbd80f977945fe31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/309301847479403298438d70ce5c3f332da896d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/309301847479403298438d70ce5c3f332da896d4", "html_url": "https://github.com/rust-lang/rust/commit/309301847479403298438d70ce5c3f332da896d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/309301847479403298438d70ce5c3f332da896d4/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ec7b572a973b565b74f02e459906f647065ebab", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec7b572a973b565b74f02e459906f647065ebab", "html_url": "https://github.com/rust-lang/rust/commit/7ec7b572a973b565b74f02e459906f647065ebab"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2de3bea7086dbc818c02a5db49a09df2c30f4256", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/309301847479403298438d70ce5c3f332da896d4/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/309301847479403298438d70ce5c3f332da896d4/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=309301847479403298438d70ce5c3f332da896d4", "patch": "@@ -421,7 +421,7 @@ macro_rules! options {\n         fn parse_opt_uint(slot: &mut Option<usize>, v: Option<&str>) -> bool {\n             match v {\n                 Some(s) => { *slot = s.parse().ok(); slot.is_some() }\n-                None => { *slot = None; false }\n+                None => false\n             }\n         }\n "}]}