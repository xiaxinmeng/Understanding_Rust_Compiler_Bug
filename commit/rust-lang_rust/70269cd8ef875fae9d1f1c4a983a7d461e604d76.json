{"sha": "70269cd8ef875fae9d1f1c4a983a7d461e604d76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMjY5Y2Q4ZWY4NzVmYWU5ZDFmMWM0YTk4M2E3ZDQ2MWU2MDRkNzY=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "root@localhost", "date": "2015-06-12T17:40:07Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "root@localhost", "date": "2015-06-12T23:41:52Z"}, "message": "mk: Build crates with relative paths to rustc\n\nThe path we pass to rustc will be visible in panic messages and\nbacktraces: they will be user visible!\n\nAvoid junk in these paths by passing relative paths to rustc.\n\nFor most advanced users, `libcore` or `libstd` in the path will be\na clue to the location -- inside our code, not theirs.\n\nStore both the relative path to the source as well as the absolute.\nUse the relative path where it matters, compiling the main crates,\ninstead of changing all of the build process to cope with relative\npaths.\n\nExample output after this patch:\n\n```\n$ ./testunwrap\nthread '<main>' panicked at 'called `Option::unwrap()` on a `None` value', ../src/libcore/option.rs:362\n$ RUST_BACKTRACE=1 ./testunwrap\nthread '<main>' panicked at 'called `Option::unwrap()` on a `None` value', ../src/libcore/option.rs:362\nstack backtrace:\n   1:     0x7ff59c1e9956 - sys::backtrace::write::h67a542fd2b201576des\n                        at ../src/libstd/sys/unix/backtrace.rs:158\n   2:     0x7ff59c1ed5b6 - panicking::on_panic::h3d21c41cdd5c12d41Xw\n                        at ../src/libstd/panicking.rs:58\n   3:     0x7ff59c1e7b6e - rt::unwind::begin_unwind_inner::h9f3a5440cebb8baeLDw\n                        at ../src/libstd/rt/unwind/mod.rs:273\n   4:     0x7ff59c1e7f84 - rt::unwind::begin_unwind_fmt::h4fe8a903e0c296b0RCw\n                        at ../src/libstd/rt/unwind/mod.rs:212\n   5:     0x7ff59c1eced7 - rust_begin_unwind\n   6:     0x7ff59c22c11a - panicking::panic_fmt::h00b0cd49c98a9220i5B\n                        at ../src/libcore/panicking.rs:64\n   7:     0x7ff59c22b9e0 - panicking::panic::hf549420c0ee03339P3B\n                        at ../src/libcore/panicking.rs:45\n   8:     0x7ff59c1e621d - option::Option<T>::unwrap::h501963526474862829\n   9:     0x7ff59c1e61b1 - main::hb5c91ce92347d1e6eaa\n  10:     0x7ff59c1f1c18 - rust_try_inner\n  11:     0x7ff59c1f1c05 - rust_try\n  12:     0x7ff59c1ef374 - rt::lang_start::h7e51e19c6677cffe5Sw\n                        at ../src/libstd/rt/unwind/mod.rs:147\n                        at ../src/libstd/rt/unwind/mod.rs:130\n                        at ../src/libstd/rt/mod.rs:128\n  13:     0x7ff59c1e628e - main\n  14:     0x7ff59b3f6b44 - __libc_start_main\n  15:     0x7ff59c1e6078 - <unknown>\n  16:                0x0 - <unknown>\n```", "tree": {"sha": "2518ee27864c591ac48967bf49eccda075bda0c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2518ee27864c591ac48967bf49eccda075bda0c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70269cd8ef875fae9d1f1c4a983a7d461e604d76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70269cd8ef875fae9d1f1c4a983a7d461e604d76", "html_url": "https://github.com/rust-lang/rust/commit/70269cd8ef875fae9d1f1c4a983a7d461e604d76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70269cd8ef875fae9d1f1c4a983a7d461e604d76/comments", "author": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "committer": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6341a878e46084b3afca1f331ed470fb2bd092e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6341a878e46084b3afca1f331ed470fb2bd092e", "html_url": "https://github.com/rust-lang/rust/commit/f6341a878e46084b3afca1f331ed470fb2bd092e"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "b0549205ace1e26a8f2821a2c30bafde14075016", "filename": "configure", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70269cd8ef875fae9d1f1c4a983a7d461e604d76/configure", "raw_url": "https://github.com/rust-lang/rust/raw/70269cd8ef875fae9d1f1c4a983a7d461e604d76/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=70269cd8ef875fae9d1f1c4a983a7d461e604d76", "patch": "@@ -521,6 +521,7 @@ fi\n DEFAULT_BUILD=\"${CFG_CPUTYPE}-${CFG_OSTYPE}\"\n \n CFG_SRC_DIR=\"$(abs_path $(dirname $0))/\"\n+CFG_SRC_DIR_RELATIVE=\"$(dirname $0)/\"\n CFG_BUILD_DIR=\"$(pwd)/\"\n CFG_SELF=\"$0\"\n CFG_CONFIGURE_ARGS=\"$@\"\n@@ -1558,6 +1559,7 @@ done\n step_msg \"writing configuration\"\n \n putvar CFG_SRC_DIR\n+putvar CFG_SRC_DIR_RELATIVE\n putvar CFG_BUILD_DIR\n putvar CFG_OSTYPE\n putvar CFG_CPUTYPE"}, {"sha": "165079e2e624966ed0d5b7c8ac254798df37f15f", "filename": "mk/crates.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70269cd8ef875fae9d1f1c4a983a7d461e604d76/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/70269cd8ef875fae9d1f1c4a983a7d461e604d76/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=70269cd8ef875fae9d1f1c4a983a7d461e604d76", "patch": "@@ -134,7 +134,7 @@ DOC_CRATES := std alloc collections core libc rustc_unicode\n #\n # $(1) is the crate to generate variables for\n define RUST_CRATE\n-CRATEFILE_$(1) := $$(S)src/lib$(1)/lib.rs\n+CRATEFILE_$(1) := $$(SREL)src/lib$(1)/lib.rs\n RSINPUTS_$(1) := $$(call rwildcard,$(S)src/lib$(1)/,*.rs)\n RUST_DEPS_$(1) := $$(filter-out native:%,$$(DEPS_$(1)))\n NATIVE_DEPS_$(1) := $$(patsubst native:%,%,$$(filter native:%,$$(DEPS_$(1))))"}, {"sha": "81dbc25361fc9c78b175032c82d9a499d98ed7b4", "filename": "mk/main.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70269cd8ef875fae9d1f1c4a983a7d461e604d76/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/70269cd8ef875fae9d1f1c4a983a7d461e604d76/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=70269cd8ef875fae9d1f1c4a983a7d461e604d76", "patch": "@@ -322,6 +322,7 @@ $(foreach host,$(CFG_HOST), \\\n # exported\n \n export CFG_SRC_DIR\n+export CFG_SRC_DIR_RELATIVE\n export CFG_BUILD_DIR\n ifdef CFG_VER_DATE\n export CFG_VER_DATE"}, {"sha": "ea9039558ad21241988179cd2ee2efc6e1e18c84", "filename": "mk/reconfig.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70269cd8ef875fae9d1f1c4a983a7d461e604d76/mk%2Freconfig.mk", "raw_url": "https://github.com/rust-lang/rust/raw/70269cd8ef875fae9d1f1c4a983a7d461e604d76/mk%2Freconfig.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Freconfig.mk?ref=70269cd8ef875fae9d1f1c4a983a7d461e604d76", "patch": "@@ -34,4 +34,4 @@ Makefile config.mk: config.stamp\n \n config.stamp: $(S)configure $(S)Makefile.in $(S)src/snapshots.txt\n \t@$(call E, cfg: reconfiguring)\n-\t$(S)configure $(CFG_CONFIGURE_ARGS)\n+\t$(SREL)configure $(CFG_CONFIGURE_ARGS)"}, {"sha": "918484ac463522865db3dbacefacc5a651933f42", "filename": "mk/util.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70269cd8ef875fae9d1f1c4a983a7d461e604d76/mk%2Futil.mk", "raw_url": "https://github.com/rust-lang/rust/raw/70269cd8ef875fae9d1f1c4a983a7d461e604d76/mk%2Futil.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Futil.mk?ref=70269cd8ef875fae9d1f1c4a983a7d461e604d76", "patch": "@@ -20,3 +20,4 @@ print-%:\n \t@echo $*=$($*)\n \n S := $(CFG_SRC_DIR)\n+SREL := $(CFG_SRC_DIR_RELATIVE)"}]}