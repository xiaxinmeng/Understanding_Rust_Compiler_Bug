{"sha": "4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZGI1NmJmNGRmZGM2MDdhZTBiZDIyMDdkYTE4OWM0YzRkNGMxNGE=", "commit": {"author": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2017-02-03T12:51:50Z"}, "committer": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2017-02-03T12:51:50Z"}, "message": "Simplify wording & fix test src/doc", "tree": {"sha": "09475b93a7434eab57cf79dcca986d89dca9d7e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09475b93a7434eab57cf79dcca986d89dca9d7e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a", "html_url": "https://github.com/rust-lang/rust/commit/4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a/comments", "author": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4cd4e19d976240443ef31968e7b763cf83d6fdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4cd4e19d976240443ef31968e7b763cf83d6fdb", "html_url": "https://github.com/rust-lang/rust/commit/c4cd4e19d976240443ef31968e7b763cf83d6fdb"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "dcf74cbb0a7c47660fede441837ccbf717b3c7fe", "filename": "src/doc/book/structs.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a/src%2Fdoc%2Fbook%2Fstructs.md", "raw_url": "https://github.com/rust-lang/rust/raw/4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a/src%2Fdoc%2Fbook%2Fstructs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fstructs.md?ref=4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a", "patch": "@@ -117,9 +117,9 @@ fn main() {\n }\n ```\n \n-We can initializing a data structure (struct, enum, union) with named fields,\n-by writing `fieldname` as a shorthand for `fieldname: fieldname`. This allows a\n-compact syntax for initialization, with less duplication:\n+Initialization of a data structure (struct, enum, union) can be simplified if\n+fields of the data structure are initialized with variables which has same\n+names as the fields.\n \n ```\n #![feature(field_init_shorthand)]"}, {"sha": "8139a712bddb25e7c9cdd71adf8621f03df32e41", "filename": "src/doc/reference.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=4ddb56bf4dfdc607ae0bd2207da189c4c4d4c14a", "patch": "@@ -2770,8 +2770,13 @@ shorthand for `field: field`.\n Example:\n \n ```\n-let a = SomeStruct { field1, field2: expression, field3 };\n-let b = SomeStruct { field1: field1, field2: expression, field3: field3 };\n+# #![feature(field_init_shorthand)]\n+# struct Point3d { x: i32, y: i32, z: i32 }\n+# let x = 0;\n+# let y_value = 0;\n+# let z = 0;\n+Point3d { x: x, y: y_value, z: z };\n+Point3d { x, y: y_value, z };\n ```\n \n ### Block expressions"}]}