{"sha": "c8c82a0bca8db4dc119536a41112ba8c81f727a5", "node_id": "C_kwDOAAsO6NoAKGM4YzgyYTBiY2E4ZGI0ZGMxMTk1MzZhNDExMTJiYThjODFmNzI3YTU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-20T10:01:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-20T10:01:00Z"}, "message": "make align_offset always work on no-provenance pointers", "tree": {"sha": "b3ca4dd6d8853ec45532074aaddd9826fbaf9f9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3ca4dd6d8853ec45532074aaddd9826fbaf9f9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8c82a0bca8db4dc119536a41112ba8c81f727a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8c82a0bca8db4dc119536a41112ba8c81f727a5", "html_url": "https://github.com/rust-lang/rust/commit/c8c82a0bca8db4dc119536a41112ba8c81f727a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8c82a0bca8db4dc119536a41112ba8c81f727a5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a9e5e8e81959195ff5671d5af20097745381477", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9e5e8e81959195ff5671d5af20097745381477", "html_url": "https://github.com/rust-lang/rust/commit/0a9e5e8e81959195ff5671d5af20097745381477"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b6efad6b5ee0803c8cb111a1298e07bf85b9e11c", "filename": "src/tools/miri/src/shims/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8c82a0bca8db4dc119536a41112ba8c81f727a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c82a0bca8db4dc119536a41112ba8c81f727a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fmod.rs?ref=c8c82a0bca8db4dc119536a41112ba8c81f727a5", "patch": "@@ -89,6 +89,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n         }\n \n         let ptr = this.read_pointer(ptr_op)?;\n+        // If this carries no provenance, treat it like an integer.\n+        if ptr.provenance.is_none() {\n+            // Use actual implementation.\n+            return Ok(false);\n+        }\n+\n         if let Ok((alloc_id, _offset, _)) = this.ptr_try_get_alloc_id(ptr) {\n             // Only do anything if we can identify the allocation this goes to.\n             let (_size, cur_align, _kind) = this.get_alloc_info(alloc_id);"}, {"sha": "4e1584b838714c415c70e8d2133d287fcedb6f0b", "filename": "src/tools/miri/tests/pass/align_offset_symbolic.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8c82a0bca8db4dc119536a41112ba8c81f727a5/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Falign_offset_symbolic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c82a0bca8db4dc119536a41112ba8c81f727a5/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Falign_offset_symbolic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Falign_offset_symbolic.rs?ref=c8c82a0bca8db4dc119536a41112ba8c81f727a5", "patch": "@@ -1,4 +1,7 @@\n //@compile-flags: -Zmiri-symbolic-alignment-check\n+#![feature(strict_provenance)]\n+\n+use std::ptr;\n \n fn test_align_offset() {\n     let d = Box::new([0u32; 4]);\n@@ -16,6 +19,9 @@ fn test_align_offset() {\n     assert_eq!(raw.wrapping_offset(2).align_offset(2), 0);\n     assert_eq!(raw.wrapping_offset(2).align_offset(4), 2);\n     assert_eq!(raw.wrapping_offset(2).align_offset(8), usize::MAX); // requested alignment higher than allocation alignment\n+\n+    let p = ptr::invalid::<()>(1);\n+    assert_eq!(p.align_offset(1), 0);\n }\n \n fn test_align_to() {"}]}