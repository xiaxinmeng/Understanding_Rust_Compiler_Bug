{"sha": "7185ea35c33478d4d350d0cb589db53a9b782813", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxODVlYTM1YzMzNDc4ZDRkMzUwZDBjYjU4OWRiNTNhOWI3ODI4MTM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-19T08:48:28Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-19T08:59:51Z"}, "message": "Use quotes around tokens in parser error messages to make them more readable\n\nCloses #1328", "tree": {"sha": "44b5c6f2f245c6a5cb9cab18e73e88e0fa78077d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44b5c6f2f245c6a5cb9cab18e73e88e0fa78077d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7185ea35c33478d4d350d0cb589db53a9b782813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7185ea35c33478d4d350d0cb589db53a9b782813", "html_url": "https://github.com/rust-lang/rust/commit/7185ea35c33478d4d350d0cb589db53a9b782813", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7185ea35c33478d4d350d0cb589db53a9b782813/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6637340c2860344bacd1554fc025f3d90c80a602", "url": "https://api.github.com/repos/rust-lang/rust/commits/6637340c2860344bacd1554fc025f3d90c80a602", "html_url": "https://github.com/rust-lang/rust/commit/6637340c2860344bacd1554fc025f3d90c80a602"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "752a433e9536070afebaa8342713681cb0582631", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7185ea35c33478d4d350d0cb589db53a9b782813/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7185ea35c33478d4d350d0cb589db53a9b782813/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=7185ea35c33478d4d350d0cb589db53a9b782813", "patch": "@@ -162,20 +162,20 @@ fn bad_expr_word_table() -> hashmap<str, ()> {\n }\n \n fn unexpected(p: parser, t: token::token) -> ! {\n-    let s: str = \"unexpected token: \";\n-    s += token::to_str(p.get_reader(), t);\n+    let s: str = \"unexpected token: '\" + token::to_str(p.get_reader(), t) +\n+        \"'\";\n     p.fatal(s);\n }\n \n fn expect(p: parser, t: token::token) {\n     if p.peek() == t {\n         p.bump();\n     } else {\n-        let s: str = \"expecting \";\n+        let s: str = \"expecting '\";\n         s += token::to_str(p.get_reader(), t);\n-        s += \", found \";\n+        s += \"' but found '\";\n         s += token::to_str(p.get_reader(), p.peek());\n-        p.fatal(s);\n+        p.fatal(s + \"'\");\n     }\n }\n \n@@ -1703,9 +1703,9 @@ fn parse_block_tail(p: parser, lo: uint, s: ast::blk_check_mode) -> ast::blk {\n                   token::RBRACE. { expr = some(e); }\n                   t {\n                     if stmt_ends_with_semi(*stmt) {\n-                        p.fatal(\"expected ';' or '}' after \" +\n-                                    \"expression but found \" +\n-                                    token::to_str(p.get_reader(), t));\n+                        p.fatal(\"expected ';' or '}' after expression but \\\n+                                 found '\" + token::to_str(p.get_reader(), t) +\n+                                \"'\");\n                     }\n                     stmts += [stmt];\n                   }\n@@ -1908,8 +1908,8 @@ fn parse_mod_items(p: parser, term: token::token,\n         alt parse_item(p, attrs) {\n           some(i) { items += [i]; }\n           _ {\n-            p.fatal(\"expected item but found \" +\n-                        token::to_str(p.get_reader(), p.peek()));\n+            p.fatal(\"expected item but found '\" +\n+                    token::to_str(p.get_reader(), p.peek()) + \"'\");\n           }\n         }\n     }\n@@ -2079,8 +2079,8 @@ fn parse_item_tag(p: parser, attrs: [ast::attribute]) -> @ast::item {\n           }\n           token::RBRACE. {/* empty */ }\n           _ {\n-            p.fatal(\"expected name of variant or '}' but found \" +\n-                        token::to_str(p.get_reader(), tok));\n+            p.fatal(\"expected name of variant or '}' but found '\" +\n+                        token::to_str(p.get_reader(), tok) + \"'\");\n           }\n         }\n     }"}, {"sha": "ec883d5ba204c2d54fab5cf56dc4b9f57def439c", "filename": "src/test/compile-fail/attr-bad-meta.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7185ea35c33478d4d350d0cb589db53a9b782813/src%2Ftest%2Fcompile-fail%2Fattr-bad-meta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7185ea35c33478d4d350d0cb589db53a9b782813/src%2Ftest%2Fcompile-fail%2Fattr-bad-meta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-bad-meta.rs?ref=7185ea35c33478d4d350d0cb589db53a9b782813", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:expecting ]\n+// error-pattern:expecting ']'\n \n // asterisk is bogus\n #[attr*]"}, {"sha": "1eea33bc2e9ffb685fb6b5314306878b0411f87c", "filename": "src/test/compile-fail/ext-after-attrib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7185ea35c33478d4d350d0cb589db53a9b782813/src%2Ftest%2Fcompile-fail%2Fext-after-attrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7185ea35c33478d4d350d0cb589db53a9b782813/src%2Ftest%2Fcompile-fail%2Fext-after-attrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fext-after-attrib.rs?ref=7185ea35c33478d4d350d0cb589db53a9b782813", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:expecting [, found fmt\n+// error-pattern:expecting '[' but found 'fmt'\n \n // Don't know how to deal with a syntax extension appearing after an\n // item attribute. Probably could use a better error message."}]}