{"sha": "5728a043e8280e96cbae784a731d43f2c7a50137", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MjhhMDQzZTgyODBlOTZjYmFlNzg0YTczMWQ0M2YyYzdhNTAxMzc=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-12-08T11:16:36Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-12-08T15:01:09Z"}, "message": "Don't call size_hint of underlying iterator needlessly", "tree": {"sha": "42d8631232cf67f7823e6f08148c8432f0d7f0f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42d8631232cf67f7823e6f08148c8432f0d7f0f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5728a043e8280e96cbae784a731d43f2c7a50137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5728a043e8280e96cbae784a731d43f2c7a50137", "html_url": "https://github.com/rust-lang/rust/commit/5728a043e8280e96cbae784a731d43f2c7a50137", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5728a043e8280e96cbae784a731d43f2c7a50137/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e704ce9e8af1713eb938a9acd7f27bf96f88664e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e704ce9e8af1713eb938a9acd7f27bf96f88664e", "html_url": "https://github.com/rust-lang/rust/commit/e704ce9e8af1713eb938a9acd7f27bf96f88664e"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "7b273f7862a1f14f730437311ee1714ce1211ea7", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5728a043e8280e96cbae784a731d43f2c7a50137/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5728a043e8280e96cbae784a731d43f2c7a50137/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=5728a043e8280e96cbae784a731d43f2c7a50137", "patch": "@@ -2109,8 +2109,12 @@ impl<I: Iterator, P> Iterator for TakeWhile<I, P>\n \n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n-        let (_, upper) = self.iter.size_hint();\n-        (0, upper) // can't know a lower bound, due to the predicate\n+        if self.flag {\n+            (0, Some(0))\n+        } else {\n+            let (_, upper) = self.iter.size_hint();\n+            (0, upper) // can't know a lower bound, due to the predicate\n+        }\n     }\n \n     #[inline]\n@@ -2321,6 +2325,10 @@ impl<I> Iterator for Take<I> where I: Iterator{\n \n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n+        if self.n == 0 {\n+            return (0, Some(0));\n+        }\n+\n         let (lower, upper) = self.iter.size_hint();\n \n         let lower = cmp::min(lower, self.n);"}]}