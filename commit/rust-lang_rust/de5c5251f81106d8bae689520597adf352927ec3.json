{"sha": "de5c5251f81106d8bae689520597adf352927ec3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNWM1MjUxZjgxMTA2ZDhiYWU2ODk1MjA1OTdhZGYzNTI5MjdlYzM=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-30T00:03:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-30T00:03:57Z"}, "message": "Rollup merge of #43544 - redox-os:update_redox_sys, r=sfackler\n\nUpdate redox sys\n\n- Add JoinHandleExt\n- Split FL and FD for fcntl", "tree": {"sha": "88d3f4a83e43521708670f1e1d49fc967cddb41c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88d3f4a83e43521708670f1e1d49fc967cddb41c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de5c5251f81106d8bae689520597adf352927ec3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de5c5251f81106d8bae689520597adf352927ec3", "html_url": "https://github.com/rust-lang/rust/commit/de5c5251f81106d8bae689520597adf352927ec3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de5c5251f81106d8bae689520597adf352927ec3/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5116b661a484cf1097f02e8d8205b7ff15ad56f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5116b661a484cf1097f02e8d8205b7ff15ad56f", "html_url": "https://github.com/rust-lang/rust/commit/e5116b661a484cf1097f02e8d8205b7ff15ad56f"}, {"sha": "a30092fbf6ad73bdf11fb6eddba4e5bd66d40601", "url": "https://api.github.com/repos/rust-lang/rust/commits/a30092fbf6ad73bdf11fb6eddba4e5bd66d40601", "html_url": "https://github.com/rust-lang/rust/commit/a30092fbf6ad73bdf11fb6eddba4e5bd66d40601"}], "stats": {"total": 72, "additions": 62, "deletions": 10}, "files": [{"sha": "0c1bf9e9557609d96e54892aa2eaa661d1459397", "filename": "src/libstd/sys/redox/ext/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fmod.rs?ref=de5c5251f81106d8bae689520597adf352927ec3", "patch": "@@ -33,6 +33,7 @@ pub mod ffi;\n pub mod fs;\n pub mod io;\n pub mod process;\n+pub mod thread;\n \n /// A prelude for conveniently writing platform-specific code.\n ///\n@@ -46,5 +47,7 @@ pub mod prelude {\n     #[doc(no_inline)] #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub use super::fs::{FileTypeExt, PermissionsExt, OpenOptionsExt, MetadataExt};\n     #[doc(no_inline)] #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub use super::thread::JoinHandleExt;\n+    #[doc(no_inline)] #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub use super::process::{CommandExt, ExitStatusExt};\n }"}, {"sha": "52be2ccd9f964b43906c8e935018555cba131760", "filename": "src/libstd/sys/redox/ext/thread.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fthread.rs?ref=de5c5251f81106d8bae689520597adf352927ec3", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Unix-specific extensions to primitives in the `std::thread` module.\n+\n+#![stable(feature = \"thread_extensions\", since = \"1.9.0\")]\n+\n+use sys_common::{AsInner, IntoInner};\n+use thread::JoinHandle;\n+\n+#[stable(feature = \"thread_extensions\", since = \"1.9.0\")]\n+#[allow(deprecated)]\n+pub type RawPthread = usize;\n+\n+/// Unix-specific extensions to `std::thread::JoinHandle`\n+#[stable(feature = \"thread_extensions\", since = \"1.9.0\")]\n+pub trait JoinHandleExt {\n+    /// Extracts the raw pthread_t without taking ownership\n+    #[stable(feature = \"thread_extensions\", since = \"1.9.0\")]\n+    fn as_pthread_t(&self) -> RawPthread;\n+\n+    /// Consumes the thread, returning the raw pthread_t\n+    ///\n+    /// This function **transfers ownership** of the underlying pthread_t to\n+    /// the caller. Callers are then the unique owners of the pthread_t and\n+    /// must either detach or join the pthread_t once it's no longer needed.\n+    #[stable(feature = \"thread_extensions\", since = \"1.9.0\")]\n+    fn into_pthread_t(self) -> RawPthread;\n+}\n+\n+#[stable(feature = \"thread_extensions\", since = \"1.9.0\")]\n+impl<T> JoinHandleExt for JoinHandle<T> {\n+    fn as_pthread_t(&self) -> RawPthread {\n+        self.as_inner().id() as RawPthread\n+    }\n+\n+    fn into_pthread_t(self) -> RawPthread {\n+        self.into_inner().into_id() as RawPthread\n+    }\n+}"}, {"sha": "ba7bbdc657fcf90240696b46d5a28b3d8a0b5f77", "filename": "src/libstd/sys/redox/fd.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Ffd.rs?ref=de5c5251f81106d8bae689520597adf352927ec3", "patch": "@@ -57,9 +57,9 @@ impl FileDesc {\n     }\n \n     pub fn set_cloexec(&self) -> io::Result<()> {\n-        let mut flags = cvt(syscall::fcntl(self.fd, syscall::F_GETFL, 0))?;\n+        let mut flags = cvt(syscall::fcntl(self.fd, syscall::F_GETFD, 0))?;\n         flags |= syscall::O_CLOEXEC;\n-        cvt(syscall::fcntl(self.fd, syscall::F_SETFL, flags)).and(Ok(()))\n+        cvt(syscall::fcntl(self.fd, syscall::F_SETFD, flags)).and(Ok(()))\n     }\n \n     pub fn set_nonblocking(&self, nonblocking: bool) -> io::Result<()> {"}, {"sha": "17fa07b99ae39cbf1f3776c5c0d05d5c223d221f", "filename": "src/libstd/sys/redox/process.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fprocess.rs?ref=de5c5251f81106d8bae689520597adf352927ec3", "patch": "@@ -272,21 +272,21 @@ impl Command {\n \n         if let Some(fd) = stdio.stderr.fd() {\n             t!(cvt(syscall::dup2(fd, 2, &[])));\n-            let mut flags = t!(cvt(syscall::fcntl(2, syscall::F_GETFL, 0)));\n+            let mut flags = t!(cvt(syscall::fcntl(2, syscall::F_GETFD, 0)));\n             flags &= ! syscall::O_CLOEXEC;\n-            t!(cvt(syscall::fcntl(2, syscall::F_SETFL, flags)));\n+            t!(cvt(syscall::fcntl(2, syscall::F_SETFD, flags)));\n         }\n         if let Some(fd) = stdio.stdout.fd() {\n             t!(cvt(syscall::dup2(fd, 1, &[])));\n-            let mut flags = t!(cvt(syscall::fcntl(1, syscall::F_GETFL, 0)));\n+            let mut flags = t!(cvt(syscall::fcntl(1, syscall::F_GETFD, 0)));\n             flags &= ! syscall::O_CLOEXEC;\n-            t!(cvt(syscall::fcntl(1, syscall::F_SETFL, flags)));\n+            t!(cvt(syscall::fcntl(1, syscall::F_SETFD, flags)));\n         }\n         if let Some(fd) = stdio.stdin.fd() {\n             t!(cvt(syscall::dup2(fd, 0, &[])));\n-            let mut flags = t!(cvt(syscall::fcntl(0, syscall::F_GETFL, 0)));\n+            let mut flags = t!(cvt(syscall::fcntl(0, syscall::F_GETFD, 0)));\n             flags &= ! syscall::O_CLOEXEC;\n-            t!(cvt(syscall::fcntl(0, syscall::F_SETFL, flags)));\n+            t!(cvt(syscall::fcntl(0, syscall::F_SETFD, flags)));\n         }\n \n         if let Some(g) = self.gid {"}, {"sha": "892007df2b7c66c0dc70a4e3e969c3e0929b92be", "filename": "src/libstd/sys/redox/syscall/flag.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Fflag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5c5251f81106d8bae689520597adf352927ec3/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Fflag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Fflag.rs?ref=de5c5251f81106d8bae689520597adf352927ec3", "patch": "@@ -20,8 +20,10 @@ pub const EVENT_NONE: usize = 0;\n pub const EVENT_READ: usize = 1;\n pub const EVENT_WRITE: usize = 2;\n \n-pub const F_GETFL: usize = 1;\n-pub const F_SETFL: usize = 2;\n+pub const F_GETFD: usize = 1;\n+pub const F_SETFD: usize = 2;\n+pub const F_GETFL: usize = 3;\n+pub const F_SETFL: usize = 4;\n \n pub const FUTEX_WAIT: usize = 0;\n pub const FUTEX_WAKE: usize = 1;"}]}