{"sha": "990233eb3d0b8b609a861f137c91cc5d6163265b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MDIzM2ViM2QwYjhiNjA5YTg2MWYxMzdjOTFjYzVkNjE2MzI2NWI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-10-05T00:41:57Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-10-05T00:41:57Z"}, "message": "rustc: Allow calling native functions on the C stack that take generic arguments. They get turned into i8 pointers.", "tree": {"sha": "2c33bb176b28d7d2dd6ee24109379faac78a7050", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c33bb176b28d7d2dd6ee24109379faac78a7050"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/990233eb3d0b8b609a861f137c91cc5d6163265b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/990233eb3d0b8b609a861f137c91cc5d6163265b", "html_url": "https://github.com/rust-lang/rust/commit/990233eb3d0b8b609a861f137c91cc5d6163265b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/990233eb3d0b8b609a861f137c91cc5d6163265b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "276dfc6133f3c7d3b40778789f72379800f62176", "url": "https://api.github.com/repos/rust-lang/rust/commits/276dfc6133f3c7d3b40778789f72379800f62176", "html_url": "https://github.com/rust-lang/rust/commit/276dfc6133f3c7d3b40778789f72379800f62176"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "69e23adcb2f4daa07b4aa115eb0112d692e03857", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/990233eb3d0b8b609a861f137c91cc5d6163265b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/990233eb3d0b8b609a861f137c91cc5d6163265b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=990233eb3d0b8b609a861f137c91cc5d6163265b", "patch": "@@ -4000,18 +4000,26 @@ fn trans_c_stack_native_call(bcx: @block_ctxt, f: @ast::expr,\n     let llfn = f_res.val; bcx = f_res.bcx;\n \n     // Translate the callee.\n-    let fn_ty = ty::expr_ty(bcx_tcx(bcx), f);\n+    let { params: _, ty: fn_ty } = ty::expr_ty_params_and_ty(bcx_tcx(bcx), f);\n     let fn_arg_tys = ty::ty_fn_args(bcx_tcx(bcx), fn_ty);\n \n     // Translate arguments.\n     let (to_zero, to_revoke) = ([], []);\n     let llargs = vec::map2({ |ty_arg, arg|\n         let arg_ty = ty_arg.ty;\n-        check type_has_static_size(ccx, arg_ty);\n-        let llargty = type_of(ccx, f.span, arg_ty);\n+\n+        let static, llargty;\n+        if check type_has_static_size(ccx, arg_ty) {\n+            static = true;\n+            llargty = type_of(ccx, f.span, arg_ty);\n+        } else {\n+            static = false;\n+            llargty = T_ptr(T_i8());\n+        }\n+\n         let r = trans_arg_expr(bcx, ty_arg, llargty, to_zero, to_revoke, arg);\n         let llargval = r.val; bcx = r.bcx;\n-        { llval: llargval, llty: llargty }\n+        { llval: llargval, llty: llargty, static: static }\n     }, fn_arg_tys, args);\n \n     // Allocate the argument bundle.\n@@ -4023,8 +4031,14 @@ fn trans_c_stack_native_call(bcx: @block_ctxt, f: @ast::expr,\n \n     // Copy in arguments.\n     vec::eachi({ |llarg, i|\n-        // FIXME: This load is unfortunate.\n-        let llargval = Load(bcx, llarg.llval);\n+        let llargval;\n+        if llarg.static {\n+            // FIXME: This load is unfortunate. It won't be necessary once we\n+            // have reference types again.\n+            llargval = Load(bcx, llarg.llval);\n+        } else {\n+            llargval = llarg.llval;\n+        }\n         store_inbounds(bcx, llargval, llargbundle, [C_int(0), C_uint(i)]);\n     }, llargs);\n "}]}