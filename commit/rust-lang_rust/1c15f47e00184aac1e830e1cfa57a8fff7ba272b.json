{"sha": "1c15f47e00184aac1e830e1cfa57a8fff7ba272b", "node_id": "C_kwDOAAsO6NoAKDFjMTVmNDdlMDAxODRhYWMxZTgzMGUxY2ZhNTdhOGZmZjdiYTI3MmI", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:11:50Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:11:50Z"}, "message": "internal: move tests", "tree": {"sha": "6ff03885aff0dd775dfd9971cebc5b74aa303f5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ff03885aff0dd775dfd9971cebc5b74aa303f5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c15f47e00184aac1e830e1cfa57a8fff7ba272b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c15f47e00184aac1e830e1cfa57a8fff7ba272b", "html_url": "https://github.com/rust-lang/rust/commit/1c15f47e00184aac1e830e1cfa57a8fff7ba272b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c15f47e00184aac1e830e1cfa57a8fff7ba272b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6d5c1c9463d485220d041d1617365f03df221a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6d5c1c9463d485220d041d1617365f03df221a4", "html_url": "https://github.com/rust-lang/rust/commit/c6d5c1c9463d485220d041d1617365f03df221a4"}], "stats": {"total": 79, "additions": 42, "deletions": 37}, "files": [{"sha": "0d3d86c8ad68bee4dca783b74fa0ceda0e691100", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1c15f47e00184aac1e830e1cfa57a8fff7ba272b/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c15f47e00184aac1e830e1cfa57a8fff7ba272b/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=1c15f47e00184aac1e830e1cfa57a8fff7ba272b", "patch": "@@ -778,3 +778,45 @@ x!();\n \"#]],\n     )\n }\n+\n+#[test]\n+fn test_ty() {\n+    check(\n+        r#\"\n+macro_rules! foo {\n+    ($t:ty) => ( fn bar() -> $t {} )\n+}\n+foo! { Baz<u8> }\n+\"#,\n+        expect![[r#\"\n+macro_rules! foo {\n+    ($t:ty) => ( fn bar() -> $t {} )\n+}\n+fn bar() -> Baz<u8> {}\n+\"#]],\n+    )\n+}\n+\n+#[test]\n+fn test_ty_with_complex_type() {\n+    check(\n+        r#\"\n+macro_rules! foo {\n+    ($t:ty) => ( fn bar() -> $ t {} )\n+}\n+\n+foo! { &'a Baz<u8> }\n+\n+foo! { extern \"Rust\" fn() -> Ret }\n+\"#,\n+        expect![[r#\"\n+macro_rules! foo {\n+    ($t:ty) => ( fn bar() -> $ t {} )\n+}\n+\n+fn bar() -> & 'a Baz<u8> {}\n+\n+fn bar() -> extern\"Rust\"fn() -> Ret {}\n+\"#]],\n+    );\n+}"}, {"sha": "85283181523ea0c1780d0dcb9c573c361bb4eca7", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/1c15f47e00184aac1e830e1cfa57a8fff7ba272b/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c15f47e00184aac1e830e1cfa57a8fff7ba272b/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=1c15f47e00184aac1e830e1cfa57a8fff7ba272b", "patch": "@@ -101,43 +101,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_ty() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:ty) => (\n-                fn bar() -> $ i { unimplemented!() }\n-            )\n-        }\n-\"#,\n-    )\n-    .assert_expand_items(\"foo! { Baz<u8> }\", \"fn bar () -> Baz < u8 > {unimplemented ! ()}\");\n-}\n-\n-#[test]\n-fn test_ty_with_complex_type() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:ty) => (\n-                fn bar() -> $ i { unimplemented!() }\n-            )\n-        }\n-\"#,\n-    )\n-    // Reference lifetime struct with generic type\n-    .assert_expand_items(\n-        \"foo! { &'a Baz<u8> }\",\n-        \"fn bar () -> & 'a Baz < u8 > {unimplemented ! ()}\",\n-    )\n-    // extern \"Rust\" func type\n-    .assert_expand_items(\n-        r#\"foo! { extern \"Rust\" fn() -> Ret }\"#,\n-        r#\"fn bar () -> extern \"Rust\" fn () -> Ret {unimplemented ! ()}\"#,\n-    );\n-}\n-\n #[test]\n fn test_pat_() {\n     parse_macro("}]}