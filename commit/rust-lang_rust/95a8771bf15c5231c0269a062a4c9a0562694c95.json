{"sha": "95a8771bf15c5231c0269a062a4c9a0562694c95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YTg3NzFiZjE1YzUyMzFjMDI2OWEwNjJhNGM5YTA1NjI2OTRjOTU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-04-13T14:02:55Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-04-13T14:04:57Z"}, "message": "Fixup various things needed to get miri working on rustc", "tree": {"sha": "aa5e0c811e9910bd330155dda1d6088bbc0ab142", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa5e0c811e9910bd330155dda1d6088bbc0ab142"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95a8771bf15c5231c0269a062a4c9a0562694c95", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJfBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlrQuRIsHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MATD\nYA/44KhmNwIJFMowpsICKI0CfrEj6sbgDsKTyGwH1gAp39VjS4RB6Z5WyzRbLSoD\nhiuAH/N6SvLAyF0cU2CFg6ZAC2ZdtMmS8VUV8Ry9ZiEtszx4mgPVDEw8UXzG76IJ\nQZv0Rp7xoEGwcWxT8a6yHrKP5JISqyJ4glnVmO4jYYrDAv2sQztlosTtjpClViZi\ngcOibYdJcI6EKpPaggnLWxSVMgI1kh2AFu78WwzuSrLB1PZSVOxMPFpCOG+UPkMs\nBog4CgsUdMlDWetl+KIfTIItsiwFm6EMSBDiKK8w6Idt6M8knsPeODcx73xiIGDv\n9B8HzkF/CCrnuoQhFm0zGG5bG9Lz8Hm2dC0he2tJE34V6DshCJYk01QiUBlqeuA5\nfMuqDCVwUFPyDq/hWWhdIqEGEnZ0NKn982VdiV+uJ8pVFnlYxKhn2ljB8lcaBUQ9\nMmAMqCkQJY09Yh5w33HBtjqfUFlgOYeAVVbFc+nxMfC5SKIIg+5I/d8eLo1HMuQv\nhWe0jUZiuN+cpo/DbKokJeeffZo0Zt+GJxolQ77HT5qM4sadk4LZlWy5RRV7VNLJ\nTMJ3uU1xJh0W1l7X/CuQQHTAhLv27eoyPR88MwBbSL/OFrxpC/MnNrVBNoPxhfUr\nLzdDgF47khKeKjGW5n9LQzHiYGeRZTwOlTFO/uxZ3cLbgg==\n=PvpA\n-----END PGP SIGNATURE-----", "payload": "tree aa5e0c811e9910bd330155dda1d6088bbc0ab142\nparent 9d186d914e378426064f7158c4cba8149ba44eb2\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1523628175 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1523628297 +0200\n\nFixup various things needed to get miri working on rustc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95a8771bf15c5231c0269a062a4c9a0562694c95", "html_url": "https://github.com/rust-lang/rust/commit/95a8771bf15c5231c0269a062a4c9a0562694c95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95a8771bf15c5231c0269a062a4c9a0562694c95/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d186d914e378426064f7158c4cba8149ba44eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d186d914e378426064f7158c4cba8149ba44eb2", "html_url": "https://github.com/rust-lang/rust/commit/9d186d914e378426064f7158c4cba8149ba44eb2"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "506845dd76adac3f209fe0e7c9682528cee95d68", "filename": "miri/bin/miri.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fbin%2Fmiri.rs?ref=95a8771bf15c5231c0269a062a4c9a0562694c95", "patch": "@@ -206,6 +206,7 @@ fn find_sysroot() -> String {\n }\n \n fn main() {\n+    rustc_driver::init_rustc_env_logger();\n     init_logger();\n     let mut args: Vec<String> = std::env::args().collect();\n "}, {"sha": "a824cbab40a04fa76d94f08bb6bb24061753a829", "filename": "miri/fn_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=95a8771bf15c5231c0269a062a4c9a0562694c95", "patch": "@@ -499,7 +499,7 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n                     return err!(OutOfTls);\n                 }\n                 self.memory.write_primval(\n-                    key_ptr.to_ptr()?,\n+                    key_ptr,\n                     key_align,\n                     PrimVal::Bytes(key),\n                     key_size.bytes(),"}, {"sha": "ea9f0428964a4da449a02f2cb6ae273d706da763", "filename": "miri/intrinsic.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fintrinsic.rs?ref=95a8771bf15c5231c0269a062a4c9a0562694c95", "patch": "@@ -34,7 +34,9 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n             \"align_offset\" => {\n                 // FIXME: return a real value in case the target allocation has an\n                 // alignment bigger than the one requested\n-                self.write_primval(dest, PrimVal::Bytes(u128::max_value()), dest_layout.ty)?;\n+                let n = u128::max_value();\n+                let amt = 128 - self.memory.pointer_size() * 8;\n+                self.write_primval(dest, PrimVal::Bytes((n << amt) >> amt), dest_layout.ty)?;\n             },\n \n             \"add_with_overflow\" => {"}, {"sha": "4d4af6e3adc243387220b3a5714dafd460b15029", "filename": "miri/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Flib.rs?ref=95a8771bf15c5231c0269a062a4c9a0562694c95", "patch": "@@ -133,7 +133,7 @@ pub fn eval_main<'a, 'tcx: 'a>(\n             let ptr_size = ecx.memory.pointer_size();\n             let ptr_align = ecx.tcx.data_layout.pointer_align;\n             let foo_ptr = ecx.memory.allocate(ptr_size, ptr_align, None)?;\n-            ecx.memory.write_primval(foo_ptr, ptr_align, PrimVal::Ptr(foo.into()), ptr_size, false)?;\n+            ecx.memory.write_primval(foo_ptr.into(), ptr_align, PrimVal::Ptr(foo.into()), ptr_size, false)?;\n             ecx.memory.mark_static_initialized(foo_ptr.alloc_id, Mutability::Immutable)?;\n             ecx.write_ptr(dest, foo_ptr.into(), ty)?;\n "}, {"sha": "b2c6f427c51a17c9509b2b974bfcafe6ce3d3c9c", "filename": "miri/validation.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a8771bf15c5231c0269a062a4c9a0562694c95/miri%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fvalidation.rs?ref=95a8771bf15c5231c0269a062a4c9a0562694c95", "patch": "@@ -782,16 +782,7 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n \n                     match adt.adt_kind() {\n                         AdtKind::Enum => {\n-                            let discr = self.read_discriminant_value(query.place.1, query.ty)?;\n-\n-                            // Get variant index for discriminant\n-                            let variant_idx = adt.discriminants(self.tcx.tcx).position(|variant_discr| {\n-                                variant_discr.val == discr\n-                            });\n-                            let variant_idx = match variant_idx {\n-                                Some(val) => val,\n-                                None => return err!(InvalidDiscriminant),\n-                            };\n+                            let variant_idx = self.read_discriminant_value_as_variant_index(query.place.1, query.ty)?;\n                             let variant = &adt.variants[variant_idx];\n \n                             if variant.fields.len() > 0 {"}]}