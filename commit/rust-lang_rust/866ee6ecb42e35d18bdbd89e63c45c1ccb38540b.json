{"sha": "866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NmVlNmVjYjQyZTM1ZDE4YmRiZDg5ZTYzYzQ1YzFjY2IzODU0MGI=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-06-28T21:21:31Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-28T23:12:34Z"}, "message": "Re-enabling some tests.", "tree": {"sha": "6fe7285dac82706012f7c4a1f0908a6feb8871de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fe7285dac82706012f7c4a1f0908a6feb8871de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "html_url": "https://github.com/rust-lang/rust/commit/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/comments", "author": null, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6f8a06d6bf010b8d30c23786976792cccfbd6de", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6f8a06d6bf010b8d30c23786976792cccfbd6de", "html_url": "https://github.com/rust-lang/rust/commit/f6f8a06d6bf010b8d30c23786976792cccfbd6de"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "5fad90ce031db0926b22fe6aaf09ca6c39196a04", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "patch": "@@ -100,7 +100,7 @@ fn declare_upcalls(type_names tn, ModuleRef llmod) -> @upcalls {\n              mark=d(\"mark\", [T_ptr(T_i8())], T_int()),\n              new_str=d(\"new_str\", [T_ptr(T_i8()), T_size_t()],\n                        T_ptr(T_str())),\n-             dup_str=d(\"dup_str\", [T_ptr(T_str())],\n+             dup_str=d(\"dup_str\", [T_taskptr(tn), T_ptr(T_str())],\n                        T_ptr(T_str())),\n              new_vec=d(\"new_vec\", [T_size_t(), T_ptr(T_tydesc(tn))],\n                        T_opaque_vec_ptr()),"}, {"sha": "95488f76a20c5092d3a9d0758f3e7f32a552ed0c", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "patch": "@@ -6512,7 +6512,7 @@ fn deep_copy(&@block_ctxt bcx, ValueRef v, ty::t t, ValueRef target_task)\n     else if(ty::type_is_str(tcx, t)) {\n         ret rslt(bcx,\n                 bcx.build.Call(bcx.fcx.lcx.ccx.upcalls.dup_str,\n-                               [bcx.fcx.lltaskptr, v]));\n+                               [bcx.fcx.lltaskptr, target_task, v]));\n     }\n     else if(ty::type_is_chan(tcx, t)) {\n         // If this is a channel, we need to clone it."}, {"sha": "f6257470b297a6299ecfc9e555c9d69b89c6024e", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "patch": "@@ -355,11 +355,11 @@ upcall_new_str(rust_task *task, char const *s, size_t fill) {\n }\n \n extern \"C\" CDECL rust_str *\n-upcall_dup_str(rust_task *task, rust_str *str) {\n+upcall_dup_str(rust_task *task, rust_task *target, rust_str *str) {\n     LOG_UPCALL_ENTRY(task);\n     scoped_lock with(task->kernel->scheduler_lock);\n \n-    return make_str(task, (char const *)str->data, str->fill);\n+    return make_str(target, (char const *)str->data, str->fill);\n }\n \n extern \"C\" CDECL rust_vec *"}, {"sha": "4bf03ea243a9efbcf920b6a4848c515a2a851db6", "filename": "src/test/run-pass/child-outlives-parent.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs?ref=866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "patch": "@@ -1,10 +1,5 @@\n-\n-\n-\n // xfail-stage0\n-// xfail-stage1\n-// xfail-stage2\n // Reported as issue #126, child leaks the string.\n fn child2(str s) { }\n \n-fn main() { auto x = spawn child2(\"hi\"); }\n\\ No newline at end of file\n+fn main() { auto x = spawn child2(\"hi\"); }"}, {"sha": "4bbeb3c064f11d5d138fca0e8f349ff9354528c5", "filename": "src/test/run-pass/spawn-types.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-types.rs?ref=866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "patch": "@@ -5,8 +5,6 @@\n  */\n \n // xfail-stage0\n-// xfail-stage1\n-// xfail-stage2\n \n use std;\n "}, {"sha": "74d966c780bc824f4083a6c7cfd5cc065d445472", "filename": "src/test/run-pass/task-life-0.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/866ee6ecb42e35d18bdbd89e63c45c1ccb38540b/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-life-0.rs?ref=866ee6ecb42e35d18bdbd89e63c45c1ccb38540b", "patch": "@@ -1,10 +1,8 @@\n // xfail-stage0\n-// xfail-stage1\n-// xfail-stage2\n fn main() -> () {\n     spawn child(\"Hello\");\n }\n \n fn child(str s) {\n     \n-}\n\\ No newline at end of file\n+}"}]}