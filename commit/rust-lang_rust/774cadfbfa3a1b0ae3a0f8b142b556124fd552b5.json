{"sha": "774cadfbfa3a1b0ae3a0f8b142b556124fd552b5", "node_id": "C_kwDOAAsO6NoAKDc3NGNhZGZiZmEzYTFiMGFlM2EwZjhiMTQyYjU1NjEyNGZkNTUyYjU", "commit": {"author": {"name": "joboet", "email": "jonasboettiger@icloud.com", "date": "2022-09-05T07:08:07Z"}, "committer": {"name": "joboet", "email": "jonasboettiger@icloud.com", "date": "2022-09-05T07:08:07Z"}, "message": "std: fix cleanup for uninitialized stdout (#101375)", "tree": {"sha": "dbc88e0875b4ad42a55dd6affd02bab3a3269ad9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbc88e0875b4ad42a55dd6affd02bab3a3269ad9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/774cadfbfa3a1b0ae3a0f8b142b556124fd552b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEVuz3PwcqDyifNyYbcE4BSbAZSzwFAmMVoFcACgkQcE4BSbAZ\nSzw1WA//ccQCjS2mtznTZuq3XSwmCCTTJUCDI40BOgeR3rysUlJruM6nLsBiYGxL\nso+Cr4XexyNd39SGV7ZL1pRW6xvklrEL7nIY7BdbTa4woV0ahqvSEzvAnInwBGlt\n1rLTbveaRR9sVtI6HFTEmFNPv1rX+UwD49KpEhzPld5W+LeDazuVrJuVsoziEzFz\nkF6WAm5yS5FFFDBD6YOAaD6MAG1JhhOdqZdp8r2tAcDq4OUKIZFTrEmTY9yTm52M\nHMqGI/xpAhHLp/ZVPXy9y0ZxjNt8fEow9Rk6DjaqIuBc2rMCMm3aJAlCLIrAum3S\nHIvd1w6GZj77LB6Ea0PzIe7/ouo74+eIILnjrXfP8WDXjaVNSmsWdLjIuBNjJfRo\nrvO+460F0RZDcCGk7yZrkJL3PI1n1m6uiC2EKRwYw4Ta6vSeENAn5e/33COx6Z/0\nlp6AFMjpRP3OutIHiig9ySWSVS+RFvHLydQ0H+Fq+QoW6WjMNVJkTLYLO5pNcItz\n03FpRI+T1eOnp4xEI9OBdDtxTcacTpGjKwwhCoWcd7+ei9Ic3VVAY2spN7AXAcoW\ni+LVDbo88SjNG1QHwDdXzQApupmkSFPJ59jXigzxhY/SiPzJHlENF/ueC5EV+zlU\nUeZtpzUz+6rPULXyzCsYl6F7dNdMAfEq+/UalVm2LEUzr0pqNqc=\n=zEQB\n-----END PGP SIGNATURE-----", "payload": "tree dbc88e0875b4ad42a55dd6affd02bab3a3269ad9\nparent 9358d09a55307e47bde0276e2390c603c35d5fb6\nauthor joboet <jonasboettiger@icloud.com> 1662361687 +0200\ncommitter joboet <jonasboettiger@icloud.com> 1662361687 +0200\n\nstd: fix cleanup for uninitialized stdout (#101375)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/774cadfbfa3a1b0ae3a0f8b142b556124fd552b5", "html_url": "https://github.com/rust-lang/rust/commit/774cadfbfa3a1b0ae3a0f8b142b556124fd552b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/774cadfbfa3a1b0ae3a0f8b142b556124fd552b5/comments", "author": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9358d09a55307e47bde0276e2390c603c35d5fb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9358d09a55307e47bde0276e2390c603c35d5fb6", "html_url": "https://github.com/rust-lang/rust/commit/9358d09a55307e47bde0276e2390c603c35d5fb6"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "91cff3217d21bce19ad24ebdd7632d66729a91e5", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/774cadfbfa3a1b0ae3a0f8b142b556124fd552b5/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774cadfbfa3a1b0ae3a0f8b142b556124fd552b5/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=774cadfbfa3a1b0ae3a0f8b142b556124fd552b5", "patch": "@@ -607,15 +607,24 @@ pub fn stdout() -> Stdout {\n     }\n }\n \n+// Flush the data and disable buffering during shutdown\n+// by replacing the line writer by one with zero\n+// buffering capacity.\n pub fn cleanup() {\n-    // Flush the data and disable buffering during shutdown\n-    // by replacing the line writer by one with zero\n-    // buffering capacity.\n-    // We use try_lock() instead of lock(), because someone\n-    // might have leaked a StdoutLock, which would\n-    // otherwise cause a deadlock here.\n-    if let Some(lock) = STDOUT.get().and_then(ReentrantMutex::try_lock) {\n-        *lock.borrow_mut() = LineWriter::with_capacity(0, stdout_raw());\n+    let mut initialized = false;\n+    let stdout = STDOUT.get_or_init(|| {\n+        initialized = true;\n+        ReentrantMutex::new(RefCell::new(LineWriter::with_capacity(0, stdout_raw())))\n+    });\n+\n+    if !initialized {\n+        // The buffer was previously initialized, overwrite it here.\n+        // We use try_lock() instead of lock(), because someone\n+        // might have leaked a StdoutLock, which would\n+        // otherwise cause a deadlock here.\n+        if let Some(lock) = stdout.try_lock() {\n+            *lock.borrow_mut() = LineWriter::with_capacity(0, stdout_raw());\n+        }\n     }\n }\n "}]}