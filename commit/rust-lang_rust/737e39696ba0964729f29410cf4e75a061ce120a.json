{"sha": "737e39696ba0964729f29410cf4e75a061ce120a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczN2UzOTY5NmJhMDk2NDcyOWYyOTQxMGNmNGU3NWEwNjFjZTEyMGE=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-10-28T08:04:08Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-10-30T06:51:17Z"}, "message": "Special-case some error messages about `Sized`\n\nThe error messages still aren\u2019t as good as they were before DST, but they better\ndescribe the actual problem, not mentioning `Sized` at all (because that bound\nis normally implied, not explicitly stated).\n\nCloses #17567.\nCloses #18040.\nCloses #18159.", "tree": {"sha": "0ff7bb4beddffe9ca37a9e58f436c01c2ebb8d45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ff7bb4beddffe9ca37a9e58f436c01c2ebb8d45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/737e39696ba0964729f29410cf4e75a061ce120a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/737e39696ba0964729f29410cf4e75a061ce120a", "html_url": "https://github.com/rust-lang/rust/commit/737e39696ba0964729f29410cf4e75a061ce120a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/737e39696ba0964729f29410cf4e75a061ce120a/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14398f29290b0d96dbe60f329b69062442eefb33", "url": "https://api.github.com/repos/rust-lang/rust/commits/14398f29290b0d96dbe60f329b69062442eefb33", "html_url": "https://github.com/rust-lang/rust/commit/14398f29290b0d96dbe60f329b69062442eefb33"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "14bb92759d3ecb3b9643cd7db0c4a0d9dd9e2a4e", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/737e39696ba0964729f29410cf4e75a061ce120a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e39696ba0964729f29410cf4e75a061ce120a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=737e39696ba0964729f29410cf4e75a061ce120a", "patch": "@@ -303,15 +303,25 @@ pub fn maybe_report_ambiguity(fcx: &FnCtxt, obligation: &Obligation) {\n         // has_errors() to be sure that compilation isn't happening\n         // anyway. In that case, why inundate the user.\n         if !fcx.tcx().sess.has_errors() {\n-            fcx.tcx().sess.span_err(\n-                obligation.cause.span,\n-                format!(\n-                    \"unable to infer enough type information to \\\n-                     locate the impl of the trait `{}` for \\\n-                     the type `{}`; type annotations required\",\n-                    trait_ref.user_string(fcx.tcx()),\n-                    self_ty.user_string(fcx.tcx())).as_slice());\n-            note_obligation_cause(fcx, obligation);\n+            if fcx.ccx.tcx.lang_items.sized_trait()\n+                  .map_or(false, |sized_id| sized_id == trait_ref.def_id) {\n+                fcx.tcx().sess.span_err(\n+                    obligation.cause.span,\n+                    format!(\n+                        \"unable to infer enough type information about `{}`; type annotations \\\n+                         required\",\n+                        self_ty.user_string(fcx.tcx())).as_slice());\n+            } else {\n+                fcx.tcx().sess.span_err(\n+                    obligation.cause.span,\n+                    format!(\n+                        \"unable to infer enough type information to \\\n+                         locate the impl of the trait `{}` for \\\n+                         the type `{}`; type annotations required\",\n+                        trait_ref.user_string(fcx.tcx()),\n+                        self_ty.user_string(fcx.tcx())).as_slice());\n+                note_obligation_cause(fcx, obligation);\n+            }\n         }\n     } else if !fcx.tcx().sess.has_errors() {\n          // Ambiguity. Coherence should have reported an error."}, {"sha": "2207e10add451719ba53b51ebdf986f3180a0a92", "filename": "src/test/compile-fail/issue-16562.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/737e39696ba0964729f29410cf4e75a061ce120a/src%2Ftest%2Fcompile-fail%2Fissue-16562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e39696ba0964729f29410cf4e75a061ce120a/src%2Ftest%2Fcompile-fail%2Fissue-16562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16562.rs?ref=737e39696ba0964729f29410cf4e75a061ce120a", "patch": "@@ -16,8 +16,7 @@ struct Col<D, C> {\n }\n \n impl<T, M: MatrixShape> Collection for Col<M, uint> {\n-//~^ ERROR unable to infer enough type information to locate the impl of the trait\n-//~^^ NOTE the trait `core::kinds::Sized` must be implemented because it is required by\n+//~^ ERROR unable to infer enough type information\n     fn len(&self) -> uint {\n         unimplemented!()\n     }"}, {"sha": "e7f61a4f3ff5f55329866531dc631c1db77c534f", "filename": "src/test/compile-fail/issue-17551.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737e39696ba0964729f29410cf4e75a061ce120a/src%2Ftest%2Fcompile-fail%2Fissue-17551.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e39696ba0964729f29410cf4e75a061ce120a/src%2Ftest%2Fcompile-fail%2Fissue-17551.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17551.rs?ref=737e39696ba0964729f29410cf4e75a061ce120a", "patch": "@@ -13,6 +13,6 @@\n struct B<T>;\n \n fn main() {\n-    let foo = B; //~ ERROR unable to infer enough type information to locate the impl of the trait\n+    let foo = B; //~ ERROR unable to infer enough type information\n     let closure = |:| foo;\n }"}, {"sha": "e46bcf46cc3983dca3e36ab72d65278b3db1bb23", "filename": "src/test/compile-fail/issue-18159.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/737e39696ba0964729f29410cf4e75a061ce120a/src%2Ftest%2Fcompile-fail%2Fissue-18159.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e39696ba0964729f29410cf4e75a061ce120a/src%2Ftest%2Fcompile-fail%2Fissue-18159.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18159.rs?ref=737e39696ba0964729f29410cf4e75a061ce120a", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let x; //~ ERROR unable to infer enough type information\n+}"}]}