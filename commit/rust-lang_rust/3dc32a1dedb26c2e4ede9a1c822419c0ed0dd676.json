{"sha": "3dc32a1dedb26c2e4ede9a1c822419c0ed0dd676", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYzMyYTFkZWRiMjZjMmU0ZWRlOWExYzgyMjQxOWMwZWQwZGQ2NzY=", "commit": {"author": {"name": "Kevin Walter", "email": "kevin.walter.private@googlemail.com", "date": "2014-10-01T14:09:38Z"}, "committer": {"name": "Kevin Walter", "email": "kevin.walter.private@googlemail.com", "date": "2014-10-01T14:09:38Z"}, "message": "Fix async assertion in test_sendable_future", "tree": {"sha": "2359a3e18acb33dd69ce2aad40df9cec4b5d47e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2359a3e18acb33dd69ce2aad40df9cec4b5d47e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dc32a1dedb26c2e4ede9a1c822419c0ed0dd676", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dc32a1dedb26c2e4ede9a1c822419c0ed0dd676", "html_url": "https://github.com/rust-lang/rust/commit/3dc32a1dedb26c2e4ede9a1c822419c0ed0dd676", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dc32a1dedb26c2e4ede9a1c822419c0ed0dd676/comments", "author": {"login": "lucidd", "id": 688888, "node_id": "MDQ6VXNlcjY4ODg4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/688888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucidd", "html_url": "https://github.com/lucidd", "followers_url": "https://api.github.com/users/lucidd/followers", "following_url": "https://api.github.com/users/lucidd/following{/other_user}", "gists_url": "https://api.github.com/users/lucidd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucidd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucidd/subscriptions", "organizations_url": "https://api.github.com/users/lucidd/orgs", "repos_url": "https://api.github.com/users/lucidd/repos", "events_url": "https://api.github.com/users/lucidd/events{/privacy}", "received_events_url": "https://api.github.com/users/lucidd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lucidd", "id": 688888, "node_id": "MDQ6VXNlcjY4ODg4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/688888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucidd", "html_url": "https://github.com/lucidd", "followers_url": "https://api.github.com/users/lucidd/followers", "following_url": "https://api.github.com/users/lucidd/following{/other_user}", "gists_url": "https://api.github.com/users/lucidd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucidd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucidd/subscriptions", "organizations_url": "https://api.github.com/users/lucidd/orgs", "repos_url": "https://api.github.com/users/lucidd/repos", "events_url": "https://api.github.com/users/lucidd/events{/privacy}", "received_events_url": "https://api.github.com/users/lucidd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ab6fce95e9b8a4ed27ecb7bee69784a02610e1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ab6fce95e9b8a4ed27ecb7bee69784a02610e1d", "html_url": "https://github.com/rust-lang/rust/commit/8ab6fce95e9b8a4ed27ecb7bee69784a02610e1d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "621c08fe7bcc0bc68da5838ff632bfe9cbef10c8", "filename": "src/libstd/sync/future.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3dc32a1dedb26c2e4ede9a1c822419c0ed0dd676/src%2Flibstd%2Fsync%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dc32a1dedb26c2e4ede9a1c822419c0ed0dd676/src%2Flibstd%2Fsync%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Ffuture.rs?ref=3dc32a1dedb26c2e4ede9a1c822419c0ed0dd676", "patch": "@@ -201,12 +201,13 @@ mod test {\n     #[test]\n     fn test_sendable_future() {\n         let expected = \"schlorf\";\n+        let (tx, rx) = channel();\n         let f = Future::spawn(proc() { expected });\n         task::spawn(proc() {\n             let mut f = f;\n-            let actual = f.get();\n-            assert_eq!(actual, expected);\n+            tx.send(f.get());\n         });\n+        assert_eq!(rx.recv(), expected);\n     }\n \n     #[test]"}]}