{"sha": "02a6937926c92181c4bf51982862b542499f2fea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYTY5Mzc5MjZjOTIxODFjNGJmNTE5ODI4NjJiNTQyNDk5ZjJmZWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-02-02T11:59:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-02T11:59:41Z"}, "message": "add docs for `cargo miri`", "tree": {"sha": "14a639778f272829f9c82bc09a6de6e573d2bb25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14a639778f272829f9c82bc09a6de6e573d2bb25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02a6937926c92181c4bf51982862b542499f2fea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02a6937926c92181c4bf51982862b542499f2fea", "html_url": "https://github.com/rust-lang/rust/commit/02a6937926c92181c4bf51982862b542499f2fea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02a6937926c92181c4bf51982862b542499f2fea/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b490a4077cbb2d3c4038fecfd913a0049027d8e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b490a4077cbb2d3c4038fecfd913a0049027d8e5", "html_url": "https://github.com/rust-lang/rust/commit/b490a4077cbb2d3c4038fecfd913a0049027d8e5"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "3822e9ac10cc4808b3f1d09405b0a24336224904", "filename": "README.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/02a6937926c92181c4bf51982862b542499f2fea/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/02a6937926c92181c4bf51982862b542499f2fea/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=02a6937926c92181c4bf51982862b542499f2fea", "patch": "@@ -47,6 +47,13 @@ environment variable to `trace`. These traces are indented based on call stack\n depth. You can get a much less verbose set of information with other logging\n levels such as `warn`.\n \n+## Running miri on your own project('s test suite)\n+\n+Install miri as a cargo subcommand with `cargo install --debug`.\n+Then, inside your own project, use `cargo +nightly miri` to run your project, if it is\n+a bin project, or run `cargo +nightly miri test` to run all tests in your project\n+through miri.\n+\n ## Contributing and getting help\n \n Check out the issues on this GitHub repository for some ideas. There's lots that"}]}