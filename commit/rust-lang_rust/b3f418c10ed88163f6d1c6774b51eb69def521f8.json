{"sha": "b3f418c10ed88163f6d1c6774b51eb69def521f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzZjQxOGMxMGVkODgxNjNmNmQxYzY3NzRiNTFlYjY5ZGVmNTIxZjg=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2012-09-28T08:05:49Z"}, "committer": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2012-09-28T08:05:49Z"}, "message": "jit: Remove old crate loading code and don't search through loaded crates (use llvm default instead)", "tree": {"sha": "21798177d03b851b3bfb69befba499b705a40d9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21798177d03b851b3bfb69befba499b705a40d9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3f418c10ed88163f6d1c6774b51eb69def521f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3f418c10ed88163f6d1c6774b51eb69def521f8", "html_url": "https://github.com/rust-lang/rust/commit/b3f418c10ed88163f6d1c6774b51eb69def521f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3f418c10ed88163f6d1c6774b51eb69def521f8/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca4455666eaf09debf6fe769ba75f90453832981", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca4455666eaf09debf6fe769ba75f90453832981", "html_url": "https://github.com/rust-lang/rust/commit/ca4455666eaf09debf6fe769ba75f90453832981"}], "stats": {"total": 38, "additions": 4, "deletions": 34}, "files": [{"sha": "27b566ac28a6590326f52c79f0b89f34668f4e95", "filename": "src/rustc/back/link.rs", "status": "modified", "additions": 2, "deletions": 23, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b3f418c10ed88163f6d1c6774b51eb69def521f8/src%2Frustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3f418c10ed88163f6d1c6774b51eb69def521f8/src%2Frustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Flink.rs?ref=b3f418c10ed88163f6d1c6774b51eb69def521f8", "patch": "@@ -105,7 +105,7 @@ mod jit {\n         // for us.\n \n         let entry = llvm::LLVMRustExecuteJIT(manager,\n-                                      pm, m, opt, stacks);\n+                                             pm, m, opt, stacks);\n \n         if ptr::is_null(entry) {\n             llvm_err(sess, ~\"Could not JIT\");\n@@ -223,30 +223,9 @@ mod write {\n                 // JIT execution takes ownership of the module,\n                 // so don't dispose and return.\n \n-                // We need to tell LLVM where to resolve all linked\n-                // symbols from. The equivalent of -lstd, -lcore, etc.\n-                // By default the JIT will resolve symbols from the std and\n-                // core linked into rustc. We don't want that,\n-                // incase the user wants to use an older std library.\n-                /*let cstore = sess.cstore;\n-                for cstore::get_used_crate_files(cstore).each |cratepath| {\n-                    debug!{\"linking: %s\", cratepath};\n-\n-                    let _: () = str::as_c_str(\n-                        cratepath,\n-                        |buf_t| {\n-                            if !llvm::LLVMRustLoadLibrary(buf_t) {\n-                                llvm_err(sess, ~\"Could not link\");\n-                            }\n-                            debug!{\"linked: %s\", cratepath};\n-                        });\n-                }*/\n-\n                 jit::exec(sess, pm.llpm, llmod, CodeGenOptLevel, true);\n \n-                if sess.time_llvm_passes() {\n-                    llvm::LLVMRustPrintPassTimings();\n-                }\n+                if sess.time_llvm_passes() { llvm::LLVMRustPrintPassTimings(); }\n                 return;\n             }\n "}, {"sha": "fc2049507eed970eb1ff3a146335faeca7a14fa0", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b3f418c10ed88163f6d1c6774b51eb69def521f8/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b3f418c10ed88163f6d1c6774b51eb69def521f8/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=b3f418c10ed88163f6d1c6774b51eb69def521f8", "patch": "@@ -282,17 +282,7 @@ void *RustMCJITMemoryManager::getPointerToNamedFunction(const std::string &Name,\n \n   const char *NameStr = Name.c_str();\n \n-  // Look through loaded crates for symbols.\n-\n-  for (DenseSet<DynamicLibrary*>::iterator I = crates.begin(),\n-       E = crates.end(); I != E; ++I) {\n-    void *Ptr = (*I)->getAddressOfSymbol(NameStr);\n-\n-    if (Ptr) return Ptr;\n-  }\n-\n-  // Fallback to using any symbols LLVM has loaded (generally\n-  // from the main program).\n+  // Look through loaded crates and main for symbols.\n \n   void *Ptr = sys::DynamicLibrary::SearchForAddressOfSymbol(NameStr);\n   if (Ptr) return Ptr;\n@@ -365,6 +355,7 @@ LLVMRustExecuteJIT(void* mem,\n   PM->run(*unwrap(M));\n \n   ExecutionEngine* EE = EngineBuilder(unwrap(M))\n+    .setErrorStr(&Err)\n     .setTargetOptions(Options)\n     .setJITMemoryManager(MM)\n     .setOptLevel(OptLevel)"}]}