{"sha": "2e06dea146eddea8a7fc4ad22f12cfe8fd9e1eed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMDZkZWExNDZlZGRlYThhN2ZjNGFkMjJmMTJjZmU4ZmQ5ZTFlZWQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-30T14:36:42Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-30T14:37:26Z"}, "message": "Format match expr with empty body", "tree": {"sha": "df494f72d7368dbf0ea8e09e073d60da1c1bd66c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df494f72d7368dbf0ea8e09e073d60da1c1bd66c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e06dea146eddea8a7fc4ad22f12cfe8fd9e1eed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e06dea146eddea8a7fc4ad22f12cfe8fd9e1eed", "html_url": "https://github.com/rust-lang/rust/commit/2e06dea146eddea8a7fc4ad22f12cfe8fd9e1eed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e06dea146eddea8a7fc4ad22f12cfe8fd9e1eed/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e84e01c4428d1a16c04597e963d16bdb6427e9c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e84e01c4428d1a16c04597e963d16bdb6427e9c7", "html_url": "https://github.com/rust-lang/rust/commit/e84e01c4428d1a16c04597e963d16bdb6427e9c7"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "212f05b52b82ffb5fff76c05b0c43d9c646631b6", "filename": "src/expr.rs", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/2e06dea146eddea8a7fc4ad22f12cfe8fd9e1eed/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e06dea146eddea8a7fc4ad22f12cfe8fd9e1eed/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=2e06dea146eddea8a7fc4ad22f12cfe8fd9e1eed", "patch": "@@ -1444,10 +1444,6 @@ fn rewrite_match(\n     span: Span,\n     attrs: &[ast::Attribute],\n ) -> Option<String> {\n-    if arms.is_empty() {\n-        return None;\n-    }\n-\n     // Do not take the rhs overhead from the upper expressions into account\n     // when rewriting match condition.\n     let cond_shape = Shape {\n@@ -1484,9 +1480,12 @@ fn rewrite_match(\n     };\n \n     let open_brace_pos = if inner_attrs.is_empty() {\n-        context\n-            .codemap\n-            .span_after(mk_sp(cond.span.hi(), arms[0].span().lo()), \"{\")\n+        let hi = if arms.is_empty() {\n+            span.hi()\n+        } else {\n+            arms[0].span().lo()\n+        };\n+        context.codemap.span_after(mk_sp(cond.span.hi(), hi), \"{\")\n     } else {\n         inner_attrs[inner_attrs.len() - 1].span().hi()\n     };\n@@ -1497,15 +1496,25 @@ fn rewrite_match(\n         shape.indent.to_string(context.config)\n     };\n \n-    Some(format!(\n-        \"match {}{}{{\\n{}{}{}\\n{}}}\",\n-        cond_str,\n-        block_sep,\n-        inner_attrs_str,\n-        arm_indent_str,\n-        rewrite_match_arms(context, arms, shape, span, open_brace_pos,)?,\n-        shape.indent.to_string(context.config),\n-    ))\n+    if arms.is_empty() {\n+        let snippet = context.snippet(mk_sp(open_brace_pos, span.hi() - BytePos(1)));\n+        if snippet.trim().is_empty() {\n+            Some(format!(\"match {} {{}}\", cond_str))\n+        } else {\n+            // Empty match with comments or inner attributes? We are not going to bother, sorry ;)\n+            Some(context.snippet(span))\n+        }\n+    } else {\n+        Some(format!(\n+            \"match {}{}{{\\n{}{}{}\\n{}}}\",\n+            cond_str,\n+            block_sep,\n+            inner_attrs_str,\n+            arm_indent_str,\n+            rewrite_match_arms(context, arms, shape, span, open_brace_pos)?,\n+            shape.indent.to_string(context.config),\n+        ))\n+    }\n }\n \n fn arm_comma(config: &Config, body: &ast::Expr, is_last: bool) -> &'static str {"}]}