{"sha": "629cdb42d364a7de2845d24204c7018e1f9cd406", "node_id": "C_kwDOAAsO6NoAKDYyOWNkYjQyZDM2NGE3ZGUyODQ1ZDI0MjA0YzcwMThlMWY5Y2Q0MDY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-15T16:04:20Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-22T12:30:36Z"}, "message": "Move eval_discriminant.", "tree": {"sha": "92fd2c4ed2b2db3dd791e50bb5ec42bfcd1dbb10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92fd2c4ed2b2db3dd791e50bb5ec42bfcd1dbb10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/629cdb42d364a7de2845d24204c7018e1f9cd406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/629cdb42d364a7de2845d24204c7018e1f9cd406", "html_url": "https://github.com/rust-lang/rust/commit/629cdb42d364a7de2845d24204c7018e1f9cd406", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/629cdb42d364a7de2845d24204c7018e1f9cd406/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e68cbd45dc169e807b470687f4e8f270ac97039", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e68cbd45dc169e807b470687f4e8f270ac97039", "html_url": "https://github.com/rust-lang/rust/commit/0e68cbd45dc169e807b470687f4e8f270ac97039"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "2f1e93664522e6ce1e6840d2546671bc5178d521", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/629cdb42d364a7de2845d24204c7018e1f9cd406/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/629cdb42d364a7de2845d24204c7018e1f9cd406/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=629cdb42d364a7de2845d24204c7018e1f9cd406", "patch": "@@ -70,22 +70,6 @@ struct ConstAnalysis<'a, 'tcx> {\n     param_env: ty::ParamEnv<'tcx>,\n }\n \n-impl<'tcx> ConstAnalysis<'_, 'tcx> {\n-    fn eval_discriminant(\n-        &self,\n-        enum_ty: Ty<'tcx>,\n-        variant_index: VariantIdx,\n-    ) -> Option<ScalarTy<'tcx>> {\n-        if !enum_ty.is_enum() {\n-            return None;\n-        }\n-        let discr = enum_ty.discriminant_for_variant(self.tcx, variant_index)?;\n-        let discr_layout = self.tcx.layout_of(self.param_env.and(discr.ty)).ok()?;\n-        let discr_value = Scalar::try_from_uint(discr.val, discr_layout.size)?;\n-        Some(ScalarTy(discr_value, discr.ty))\n-    }\n-}\n-\n impl<'tcx> ValueAnalysis<'tcx> for ConstAnalysis<'_, 'tcx> {\n     type Value = FlatSet<ScalarTy<'tcx>>;\n \n@@ -377,6 +361,20 @@ impl<'a, 'tcx> ConstAnalysis<'a, 'tcx> {\n         }\n     }\n \n+    fn eval_discriminant(\n+        &self,\n+        enum_ty: Ty<'tcx>,\n+        variant_index: VariantIdx,\n+    ) -> Option<ScalarTy<'tcx>> {\n+        if !enum_ty.is_enum() {\n+            return None;\n+        }\n+        let discr = enum_ty.discriminant_for_variant(self.tcx, variant_index)?;\n+        let discr_layout = self.tcx.layout_of(self.param_env.and(discr.ty)).ok()?;\n+        let discr_value = Scalar::try_from_uint(discr.val, discr_layout.size)?;\n+        Some(ScalarTy(discr_value, discr.ty))\n+    }\n+\n     fn wrap_scalar(&self, scalar: Scalar, ty: Ty<'tcx>) -> FlatSet<ScalarTy<'tcx>> {\n         FlatSet::Elem(ScalarTy(scalar, ty))\n     }"}]}