{"sha": "7e66785859fc4a31fc3faf4848174699d3a2c020", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNjY3ODU4NTlmYzRhMzFmYzNmYWY0ODQ4MTc0Njk5ZDNhMmMwMjA=", "commit": {"author": {"name": "Toby Dimmick", "email": "tobydimmick@pm.me", "date": "2020-02-06T11:44:00Z"}, "committer": {"name": "Toby Dimmick", "email": "tobydimmick@pm.me", "date": "2020-02-06T19:45:51Z"}, "message": "Rework value parameter parsing\n\n- `Fn__(...)` parameters with idents/patterns no longer parse\n- Trait function parameters with arbitrary patterns parse\n- Trait function parameters without idents/patterns no longer parse\n- `fn(...)` parameters no longer parse with patterns other than a single ident", "tree": {"sha": "94a61899b4628eeca7a21a58c061b343bcf32e62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94a61899b4628eeca7a21a58c061b343bcf32e62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e66785859fc4a31fc3faf4848174699d3a2c020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e66785859fc4a31fc3faf4848174699d3a2c020", "html_url": "https://github.com/rust-lang/rust/commit/7e66785859fc4a31fc3faf4848174699d3a2c020", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e66785859fc4a31fc3faf4848174699d3a2c020/comments", "author": {"login": "tobz1000", "id": 1471978, "node_id": "MDQ6VXNlcjE0NzE5Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1471978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobz1000", "html_url": "https://github.com/tobz1000", "followers_url": "https://api.github.com/users/tobz1000/followers", "following_url": "https://api.github.com/users/tobz1000/following{/other_user}", "gists_url": "https://api.github.com/users/tobz1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobz1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobz1000/subscriptions", "organizations_url": "https://api.github.com/users/tobz1000/orgs", "repos_url": "https://api.github.com/users/tobz1000/repos", "events_url": "https://api.github.com/users/tobz1000/events{/privacy}", "received_events_url": "https://api.github.com/users/tobz1000/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tobz1000", "id": 1471978, "node_id": "MDQ6VXNlcjE0NzE5Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1471978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobz1000", "html_url": "https://github.com/tobz1000", "followers_url": "https://api.github.com/users/tobz1000/followers", "following_url": "https://api.github.com/users/tobz1000/following{/other_user}", "gists_url": "https://api.github.com/users/tobz1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobz1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobz1000/subscriptions", "organizations_url": "https://api.github.com/users/tobz1000/orgs", "repos_url": "https://api.github.com/users/tobz1000/repos", "events_url": "https://api.github.com/users/tobz1000/events{/privacy}", "received_events_url": "https://api.github.com/users/tobz1000/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4431e83025223d5aea0ae3d49a6356775cb5f75", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4431e83025223d5aea0ae3d49a6356775cb5f75", "html_url": "https://github.com/rust-lang/rust/commit/a4431e83025223d5aea0ae3d49a6356775cb5f75"}], "stats": {"total": 863, "additions": 608, "deletions": 255}, "files": [{"sha": "f154077a86c88ce2c67382824d5ae9784115f68c", "filename": "crates/ra_parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -229,7 +229,7 @@ fn lambda_expr(p: &mut Parser) -> CompletedMarker {\n     let m = p.start();\n     p.eat(T![async]);\n     p.eat(T![move]);\n-    params::param_list_opt_types(p);\n+    params::param_list_closure(p);\n     if opt_fn_ret_type(p) {\n         if !p.at(T!['{']) {\n             p.error(\"expected `{`\");"}, {"sha": "b20d224e8867d59b268dd5a0869f5d8977b14ba2", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -164,7 +164,7 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         // async unsafe fn foo() {}\n         // unsafe const fn bar() {}\n         T![fn] => {\n-            fn_def(p, flavor);\n+            fn_def(p);\n             m.complete(p, FN_DEF);\n         }\n \n@@ -301,7 +301,7 @@ pub(crate) fn extern_item_list(p: &mut Parser) {\n     m.complete(p, EXTERN_ITEM_LIST);\n }\n \n-fn fn_def(p: &mut Parser, flavor: ItemFlavor) {\n+fn fn_def(p: &mut Parser) {\n     assert!(p.at(T![fn]));\n     p.bump(T![fn]);\n \n@@ -311,10 +311,7 @@ fn fn_def(p: &mut Parser, flavor: ItemFlavor) {\n     type_params::opt_type_param_list(p);\n \n     if p.at(T!['(']) {\n-        match flavor {\n-            ItemFlavor::Mod => params::param_list(p),\n-            ItemFlavor::Trait => params::param_list_opt_patterns(p),\n-        }\n+        params::param_list_fn(p);\n     } else {\n         p.error(\"expected function arguments\");\n     }"}, {"sha": "897092a6714e29c588c11388103b1852cdeebaf0", "filename": "crates/ra_parser/src/grammar/params.rs", "status": "modified", "additions": 66, "deletions": 45, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -7,54 +7,59 @@ use super::*;\n // fn b(x: i32) {}\n // fn c(x: i32, ) {}\n // fn d(x: i32, y: ()) {}\n-pub(super) fn param_list(p: &mut Parser) {\n-    list_(p, Flavor::Normal)\n+pub(super) fn param_list_fn(p: &mut Parser) {\n+    list_(p, Flavor::Function)\n }\n \n // test param_list_opt_patterns\n // fn foo<F: FnMut(&mut Foo<'a>)>(){}\n-pub(super) fn param_list_opt_patterns(p: &mut Parser) {\n-    list_(p, Flavor::OptionalPattern)\n+pub(super) fn param_list_impl_fn(p: &mut Parser) {\n+    list_(p, Flavor::ImplFn)\n }\n \n-pub(super) fn param_list_opt_types(p: &mut Parser) {\n-    list_(p, Flavor::OptionalType)\n+pub(super) fn param_list_fn_ptr(p: &mut Parser) {\n+    list_(p, Flavor::FnPointer)\n }\n \n-#[derive(Clone, Copy, Eq, PartialEq)]\n-enum Flavor {\n-    OptionalType,\n-    OptionalPattern,\n-    Normal,\n+pub(super) fn param_list_closure(p: &mut Parser) {\n+    list_(p, Flavor::Closure)\n }\n \n-impl Flavor {\n-    fn type_required(self) -> bool {\n-        match self {\n-            Flavor::OptionalType => false,\n-            _ => true,\n-        }\n-    }\n+#[derive(Debug, Clone, Copy)]\n+enum Flavor {\n+    Function, // Includes trait fn params; omitted param idents are not supported\n+    ImplFn,\n+    FnPointer,\n+    Closure\n }\n \n fn list_(p: &mut Parser, flavor: Flavor) {\n-    let (bra, ket) = if flavor.type_required() { (T!['('], T![')']) } else { (T![|], T![|]) };\n-    assert!(p.at(bra));\n+    use Flavor::*;\n+\n+    let (bra, ket) = match flavor {\n+        Closure => (T![|], T![|]),\n+        Function | ImplFn | FnPointer => (T!['('], T![')'])\n+    };\n+\n     let m = p.start();\n     p.bump(bra);\n-    if flavor.type_required() {\n+\n+    if let Function = flavor {\n         // test self_param_outer_attr\n         // fn f(#[must_use] self) {}\n         attributes::outer_attributes(p);\n         opt_self_param(p);\n     }\n+\n     while !p.at(EOF) && !p.at(ket) {\n         // test param_outer_arg\n         // fn f(#[attr1] pat: Type) {}\n         attributes::outer_attributes(p);\n \n-        if flavor.type_required() && p.at(T![...]) {\n-            break;\n+        if let Function | FnPointer = flavor {\n+            if p.at(T![...]) {\n+                break;\n+            }\n         }\n \n         if !p.at_ts(VALUE_PARAMETER_FIRST) {\n@@ -68,7 +73,7 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n     }\n     // test param_list_vararg\n     // extern \"C\" { fn printf(format: *const i8, ...) -> i32; }\n-    if flavor.type_required() {\n+    if let Function | FnPointer = flavor {\n         p.eat(T![...]);\n     }\n     p.expect(ket);\n@@ -80,36 +85,52 @@ const VALUE_PARAMETER_FIRST: TokenSet = patterns::PATTERN_FIRST.union(types::TYP\n fn value_parameter(p: &mut Parser, flavor: Flavor) {\n     let m = p.start();\n     match flavor {\n-        Flavor::OptionalType | Flavor::Normal => {\n+        // test trait_fn_placeholder_parameter\n+        // trait Foo {\n+        //     fn bar(_: u64, mut x: i32);\n+        // }\n+\n+        // test trait_fn_patterns\n+        // trait T {\n+        //     fn f1((a, b): (usize, usize)) {}\n+        //     fn f2(S { a, b }: S) {}\n+        //     fn f3(NewType(a): NewType) {}\n+        //     fn f4(&&a: &&usize) {}\n+        // }\n+\n+        // test fn_patterns\n+        // impl U {\n+        //     fn f1((a, b): (usize, usize)) {}\n+        //     fn f2(S { a, b }: S) {}\n+        //     fn f3(NewType(a): NewType) {}\n+        //     fn f4(&&a: &&usize) {}\n+        // }\n+        Flavor::Function => {\n             patterns::pattern(p);\n-            if p.at(T![:]) && !p.at(T![::]) || flavor.type_required() {\n-                types::ascription(p)\n-            }\n+            types::ascription(p);\n         }\n         // test value_parameters_no_patterns\n-        // type F = Box<Fn(a: i32, &b: &i32, &mut c: &i32, ())>;\n-        Flavor::OptionalPattern => {\n-            let la0 = p.current();\n-            let la1 = p.nth(1);\n-            let la2 = p.nth(2);\n-            let la3 = p.nth(3);\n-\n-            // test trait_fn_placeholder_parameter\n-            // trait Foo {\n-            //     fn bar(_: u64, mut x: i32);\n-            // }\n-            if (la0 == IDENT || la0 == T![_]) && la1 == T![:] && !p.nth_at(1, T![::])\n-                || la0 == T![mut] && la1 == IDENT && la2 == T![:]\n-                || la0 == T![&]\n-                    && (la1 == IDENT && la2 == T![:] && !p.nth_at(2, T![::])\n-                        || la1 == T![mut] && la2 == IDENT && la3 == T![:] && !p.nth_at(3, T![::]))\n-            {\n+        // type F = Box<Fn(i32, &i32, &i32, ())>;\n+        Flavor::ImplFn => {\n+            types::type_(p);\n+        }\n+        // test fn_pointer_param_ident_path\n+        // type Foo = fn(Bar::Baz);\n+        // type Qux = fn(baz: Bar::Baz);\n+        Flavor::FnPointer => {\n+            if p.at(IDENT) && p.nth(1) == T![:] && !p.nth_at(1, T![::]) {\n                 patterns::pattern(p);\n                 types::ascription(p);\n             } else {\n                 types::type_(p);\n             }\n         }\n+        Flavor::Closure => {\n+            patterns::pattern(p);\n+            if p.at(T![:]) && !p.at(T![::]) {\n+                types::ascription(p);\n+            }\n+        }\n     }\n     m.complete(p, PARAM);\n }"}, {"sha": "186064320bd13c53dee78cb72dde3569e1a81518", "filename": "crates/ra_parser/src/grammar/paths.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -97,9 +97,9 @@ fn opt_path_type_args(p: &mut Parser, mode: Mode) {\n         Mode::Use => return,\n         Mode::Type => {\n             // test path_fn_trait_args\n-            // type F = Box<Fn(x: i32) -> ()>;\n+            // type F = Box<Fn(i32) -> ()>;\n             if p.at(T!['(']) {\n-                params::param_list_opt_patterns(p);\n+                params::param_list_impl_fn(p);\n                 opt_fn_ret_type(p);\n             } else {\n                 type_args::opt_type_arg_list(p, false)"}, {"sha": "2c00bce80306ebfa5891880642ecda1498c2ffca", "filename": "crates/ra_parser/src/grammar/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -183,7 +183,7 @@ fn fn_pointer_type(p: &mut Parser) {\n         return;\n     }\n     if p.at(T!['(']) {\n-        params::param_list_opt_patterns(p);\n+        params::param_list_fn_ptr(p);\n     } else {\n         p.error(\"expected parameters\")\n     }"}, {"sha": "93636e926e16764d35243d1f882d610d528e000e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0004_value_parameters_no_patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -1 +1 @@\n-type F = Box<Fn(a: i32, &b: &i32, &mut c: &i32, ())>;\n+type F = Box<Fn(i32, &i32, &i32, ())>;"}, {"sha": "9241f6fb2bcf1f0380467b1d53c0bf19feaec699", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0004_value_parameters_no_patterns.txt", "status": "modified", "additions": 47, "deletions": 68, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.txt?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -1,81 +1,60 @@\n-SOURCE_FILE@[0; 54)\n-  TYPE_ALIAS_DEF@[0; 53)\n+SOURCE_FILE@[0; 39)\n+  TYPE_ALIAS_DEF@[0; 38)\n     TYPE_KW@[0; 4) \"type\"\n     WHITESPACE@[4; 5) \" \"\n     NAME@[5; 6)\n       IDENT@[5; 6) \"F\"\n     WHITESPACE@[6; 7) \" \"\n     EQ@[7; 8) \"=\"\n     WHITESPACE@[8; 9) \" \"\n-    PATH_TYPE@[9; 52)\n-      PATH@[9; 52)\n-        PATH_SEGMENT@[9; 52)\n+    PATH_TYPE@[9; 37)\n+      PATH@[9; 37)\n+        PATH_SEGMENT@[9; 37)\n           NAME_REF@[9; 12)\n             IDENT@[9; 12) \"Box\"\n-          TYPE_ARG_LIST@[12; 52)\n+          TYPE_ARG_LIST@[12; 37)\n             L_ANGLE@[12; 13) \"<\"\n-            TYPE_ARG@[13; 51)\n-              PATH_TYPE@[13; 51)\n-                PATH@[13; 51)\n-                  PATH_SEGMENT@[13; 51)\n+            TYPE_ARG@[13; 36)\n+              PATH_TYPE@[13; 36)\n+                PATH@[13; 36)\n+                  PATH_SEGMENT@[13; 36)\n                     NAME_REF@[13; 15)\n                       IDENT@[13; 15) \"Fn\"\n-                    PARAM_LIST@[15; 51)\n+                    PARAM_LIST@[15; 36)\n                       L_PAREN@[15; 16) \"(\"\n-                      PARAM@[16; 22)\n-                        BIND_PAT@[16; 17)\n-                          NAME@[16; 17)\n-                            IDENT@[16; 17) \"a\"\n-                        COLON@[17; 18) \":\"\n-                        WHITESPACE@[18; 19) \" \"\n-                        PATH_TYPE@[19; 22)\n-                          PATH@[19; 22)\n-                            PATH_SEGMENT@[19; 22)\n-                              NAME_REF@[19; 22)\n-                                IDENT@[19; 22) \"i32\"\n-                      COMMA@[22; 23) \",\"\n-                      WHITESPACE@[23; 24) \" \"\n-                      PARAM@[24; 32)\n-                        REF_PAT@[24; 26)\n-                          AMP@[24; 25) \"&\"\n-                          BIND_PAT@[25; 26)\n-                            NAME@[25; 26)\n-                              IDENT@[25; 26) \"b\"\n-                        COLON@[26; 27) \":\"\n-                        WHITESPACE@[27; 28) \" \"\n-                        REFERENCE_TYPE@[28; 32)\n-                          AMP@[28; 29) \"&\"\n-                          PATH_TYPE@[29; 32)\n-                            PATH@[29; 32)\n-                              PATH_SEGMENT@[29; 32)\n-                                NAME_REF@[29; 32)\n-                                  IDENT@[29; 32) \"i32\"\n-                      COMMA@[32; 33) \",\"\n-                      WHITESPACE@[33; 34) \" \"\n-                      PARAM@[34; 46)\n-                        REF_PAT@[34; 40)\n-                          AMP@[34; 35) \"&\"\n-                          MUT_KW@[35; 38) \"mut\"\n-                          WHITESPACE@[38; 39) \" \"\n-                          BIND_PAT@[39; 40)\n-                            NAME@[39; 40)\n-                              IDENT@[39; 40) \"c\"\n-                        COLON@[40; 41) \":\"\n-                        WHITESPACE@[41; 42) \" \"\n-                        REFERENCE_TYPE@[42; 46)\n-                          AMP@[42; 43) \"&\"\n-                          PATH_TYPE@[43; 46)\n-                            PATH@[43; 46)\n-                              PATH_SEGMENT@[43; 46)\n-                                NAME_REF@[43; 46)\n-                                  IDENT@[43; 46) \"i32\"\n-                      COMMA@[46; 47) \",\"\n-                      WHITESPACE@[47; 48) \" \"\n-                      PARAM@[48; 50)\n-                        TUPLE_TYPE@[48; 50)\n-                          L_PAREN@[48; 49) \"(\"\n-                          R_PAREN@[49; 50) \")\"\n-                      R_PAREN@[50; 51) \")\"\n-            R_ANGLE@[51; 52) \">\"\n-    SEMI@[52; 53) \";\"\n-  WHITESPACE@[53; 54) \"\\n\"\n+                      PARAM@[16; 19)\n+                        PATH_TYPE@[16; 19)\n+                          PATH@[16; 19)\n+                            PATH_SEGMENT@[16; 19)\n+                              NAME_REF@[16; 19)\n+                                IDENT@[16; 19) \"i32\"\n+                      COMMA@[19; 20) \",\"\n+                      WHITESPACE@[20; 21) \" \"\n+                      PARAM@[21; 25)\n+                        REFERENCE_TYPE@[21; 25)\n+                          AMP@[21; 22) \"&\"\n+                          PATH_TYPE@[22; 25)\n+                            PATH@[22; 25)\n+                              PATH_SEGMENT@[22; 25)\n+                                NAME_REF@[22; 25)\n+                                  IDENT@[22; 25) \"i32\"\n+                      COMMA@[25; 26) \",\"\n+                      WHITESPACE@[26; 27) \" \"\n+                      PARAM@[27; 31)\n+                        REFERENCE_TYPE@[27; 31)\n+                          AMP@[27; 28) \"&\"\n+                          PATH_TYPE@[28; 31)\n+                            PATH@[28; 31)\n+                              PATH_SEGMENT@[28; 31)\n+                                NAME_REF@[28; 31)\n+                                  IDENT@[28; 31) \"i32\"\n+                      COMMA@[31; 32) \",\"\n+                      WHITESPACE@[32; 33) \" \"\n+                      PARAM@[33; 35)\n+                        TUPLE_TYPE@[33; 35)\n+                          L_PAREN@[33; 34) \"(\"\n+                          R_PAREN@[34; 35) \")\"\n+                      R_PAREN@[35; 36) \")\"\n+            R_ANGLE@[36; 37) \">\"\n+    SEMI@[37; 38) \";\"\n+  WHITESPACE@[38; 39) \"\\n\""}, {"sha": "17ed20e5b13c542c6de29c7a51c53300114db25d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0104_path_fn_trait_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -1 +1 @@\n-type F = Box<Fn(x: i32) -> ()>;\n+type F = Box<Fn(i32) -> ()>;"}, {"sha": "a983d5954b59118acf92180fb31cb1154852d973", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0104_path_fn_trait_args.txt", "status": "modified", "additions": 28, "deletions": 33, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.txt?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -1,46 +1,41 @@\n-SOURCE_FILE@[0; 32)\n-  TYPE_ALIAS_DEF@[0; 31)\n+SOURCE_FILE@[0; 29)\n+  TYPE_ALIAS_DEF@[0; 28)\n     TYPE_KW@[0; 4) \"type\"\n     WHITESPACE@[4; 5) \" \"\n     NAME@[5; 6)\n       IDENT@[5; 6) \"F\"\n     WHITESPACE@[6; 7) \" \"\n     EQ@[7; 8) \"=\"\n     WHITESPACE@[8; 9) \" \"\n-    PATH_TYPE@[9; 30)\n-      PATH@[9; 30)\n-        PATH_SEGMENT@[9; 30)\n+    PATH_TYPE@[9; 27)\n+      PATH@[9; 27)\n+        PATH_SEGMENT@[9; 27)\n           NAME_REF@[9; 12)\n             IDENT@[9; 12) \"Box\"\n-          TYPE_ARG_LIST@[12; 30)\n+          TYPE_ARG_LIST@[12; 27)\n             L_ANGLE@[12; 13) \"<\"\n-            TYPE_ARG@[13; 29)\n-              PATH_TYPE@[13; 29)\n-                PATH@[13; 29)\n-                  PATH_SEGMENT@[13; 29)\n+            TYPE_ARG@[13; 26)\n+              PATH_TYPE@[13; 26)\n+                PATH@[13; 26)\n+                  PATH_SEGMENT@[13; 26)\n                     NAME_REF@[13; 15)\n                       IDENT@[13; 15) \"Fn\"\n-                    PARAM_LIST@[15; 23)\n+                    PARAM_LIST@[15; 20)\n                       L_PAREN@[15; 16) \"(\"\n-                      PARAM@[16; 22)\n-                        BIND_PAT@[16; 17)\n-                          NAME@[16; 17)\n-                            IDENT@[16; 17) \"x\"\n-                        COLON@[17; 18) \":\"\n-                        WHITESPACE@[18; 19) \" \"\n-                        PATH_TYPE@[19; 22)\n-                          PATH@[19; 22)\n-                            PATH_SEGMENT@[19; 22)\n-                              NAME_REF@[19; 22)\n-                                IDENT@[19; 22) \"i32\"\n-                      R_PAREN@[22; 23) \")\"\n-                    WHITESPACE@[23; 24) \" \"\n-                    RET_TYPE@[24; 29)\n-                      THIN_ARROW@[24; 26) \"->\"\n-                      WHITESPACE@[26; 27) \" \"\n-                      TUPLE_TYPE@[27; 29)\n-                        L_PAREN@[27; 28) \"(\"\n-                        R_PAREN@[28; 29) \")\"\n-            R_ANGLE@[29; 30) \">\"\n-    SEMI@[30; 31) \";\"\n-  WHITESPACE@[31; 32) \"\\n\"\n+                      PARAM@[16; 19)\n+                        PATH_TYPE@[16; 19)\n+                          PATH@[16; 19)\n+                            PATH_SEGMENT@[16; 19)\n+                              NAME_REF@[16; 19)\n+                                IDENT@[16; 19) \"i32\"\n+                      R_PAREN@[19; 20) \")\"\n+                    WHITESPACE@[20; 21) \" \"\n+                    RET_TYPE@[21; 26)\n+                      THIN_ARROW@[21; 23) \"->\"\n+                      WHITESPACE@[23; 24) \" \"\n+                      TUPLE_TYPE@[24; 26)\n+                        L_PAREN@[24; 25) \"(\"\n+                        R_PAREN@[25; 26) \")\"\n+            R_ANGLE@[26; 27) \">\"\n+    SEMI@[27; 28) \";\"\n+  WHITESPACE@[28; 29) \"\\n\""}, {"sha": "b49e872d79da2c64686cde445c33e9dc5a7834d9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_fn_patterns.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_fn_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_fn_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_fn_patterns.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -0,0 +1,6 @@\n+impl U {\n+    fn f1((a, b): (usize, usize)) {}\n+    fn f2(S { a, b }: S) {}\n+    fn f3(NewType(a): NewType) {}\n+    fn f4(&&a: &&usize) {}\n+}"}, {"sha": "933f5b7bd217fca4feae7d62e04bb71fd29cd2b6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_fn_patterns.txt", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_fn_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_fn_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_fn_patterns.txt?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -0,0 +1,164 @@\n+SOURCE_FILE@[0; 137)\n+  IMPL_BLOCK@[0; 136)\n+    IMPL_KW@[0; 4) \"impl\"\n+    WHITESPACE@[4; 5) \" \"\n+    PATH_TYPE@[5; 6)\n+      PATH@[5; 6)\n+        PATH_SEGMENT@[5; 6)\n+          NAME_REF@[5; 6)\n+            IDENT@[5; 6) \"U\"\n+    WHITESPACE@[6; 7) \" \"\n+    ITEM_LIST@[7; 136)\n+      L_CURLY@[7; 8) \"{\"\n+      WHITESPACE@[8; 13) \"\\n    \"\n+      FN_DEF@[13; 45)\n+        FN_KW@[13; 15) \"fn\"\n+        WHITESPACE@[15; 16) \" \"\n+        NAME@[16; 18)\n+          IDENT@[16; 18) \"f1\"\n+        PARAM_LIST@[18; 42)\n+          L_PAREN@[18; 19) \"(\"\n+          PARAM@[19; 41)\n+            TUPLE_PAT@[19; 25)\n+              L_PAREN@[19; 20) \"(\"\n+              BIND_PAT@[20; 21)\n+                NAME@[20; 21)\n+                  IDENT@[20; 21) \"a\"\n+              COMMA@[21; 22) \",\"\n+              WHITESPACE@[22; 23) \" \"\n+              BIND_PAT@[23; 24)\n+                NAME@[23; 24)\n+                  IDENT@[23; 24) \"b\"\n+              R_PAREN@[24; 25) \")\"\n+            COLON@[25; 26) \":\"\n+            WHITESPACE@[26; 27) \" \"\n+            TUPLE_TYPE@[27; 41)\n+              L_PAREN@[27; 28) \"(\"\n+              PATH_TYPE@[28; 33)\n+                PATH@[28; 33)\n+                  PATH_SEGMENT@[28; 33)\n+                    NAME_REF@[28; 33)\n+                      IDENT@[28; 33) \"usize\"\n+              COMMA@[33; 34) \",\"\n+              WHITESPACE@[34; 35) \" \"\n+              PATH_TYPE@[35; 40)\n+                PATH@[35; 40)\n+                  PATH_SEGMENT@[35; 40)\n+                    NAME_REF@[35; 40)\n+                      IDENT@[35; 40) \"usize\"\n+              R_PAREN@[40; 41) \")\"\n+          R_PAREN@[41; 42) \")\"\n+        WHITESPACE@[42; 43) \" \"\n+        BLOCK_EXPR@[43; 45)\n+          BLOCK@[43; 45)\n+            L_CURLY@[43; 44) \"{\"\n+            R_CURLY@[44; 45) \"}\"\n+      WHITESPACE@[45; 50) \"\\n    \"\n+      FN_DEF@[50; 73)\n+        FN_KW@[50; 52) \"fn\"\n+        WHITESPACE@[52; 53) \" \"\n+        NAME@[53; 55)\n+          IDENT@[53; 55) \"f2\"\n+        PARAM_LIST@[55; 70)\n+          L_PAREN@[55; 56) \"(\"\n+          PARAM@[56; 69)\n+            RECORD_PAT@[56; 66)\n+              PATH@[56; 57)\n+                PATH_SEGMENT@[56; 57)\n+                  NAME_REF@[56; 57)\n+                    IDENT@[56; 57) \"S\"\n+              WHITESPACE@[57; 58) \" \"\n+              RECORD_FIELD_PAT_LIST@[58; 66)\n+                L_CURLY@[58; 59) \"{\"\n+                WHITESPACE@[59; 60) \" \"\n+                BIND_PAT@[60; 61)\n+                  NAME@[60; 61)\n+                    IDENT@[60; 61) \"a\"\n+                COMMA@[61; 62) \",\"\n+                WHITESPACE@[62; 63) \" \"\n+                BIND_PAT@[63; 64)\n+                  NAME@[63; 64)\n+                    IDENT@[63; 64) \"b\"\n+                WHITESPACE@[64; 65) \" \"\n+                R_CURLY@[65; 66) \"}\"\n+            COLON@[66; 67) \":\"\n+            WHITESPACE@[67; 68) \" \"\n+            PATH_TYPE@[68; 69)\n+              PATH@[68; 69)\n+                PATH_SEGMENT@[68; 69)\n+                  NAME_REF@[68; 69)\n+                    IDENT@[68; 69) \"S\"\n+          R_PAREN@[69; 70) \")\"\n+        WHITESPACE@[70; 71) \" \"\n+        BLOCK_EXPR@[71; 73)\n+          BLOCK@[71; 73)\n+            L_CURLY@[71; 72) \"{\"\n+            R_CURLY@[72; 73) \"}\"\n+      WHITESPACE@[73; 78) \"\\n    \"\n+      FN_DEF@[78; 107)\n+        FN_KW@[78; 80) \"fn\"\n+        WHITESPACE@[80; 81) \" \"\n+        NAME@[81; 83)\n+          IDENT@[81; 83) \"f3\"\n+        PARAM_LIST@[83; 104)\n+          L_PAREN@[83; 84) \"(\"\n+          PARAM@[84; 103)\n+            TUPLE_STRUCT_PAT@[84; 94)\n+              PATH@[84; 91)\n+                PATH_SEGMENT@[84; 91)\n+                  NAME_REF@[84; 91)\n+                    IDENT@[84; 91) \"NewType\"\n+              L_PAREN@[91; 92) \"(\"\n+              BIND_PAT@[92; 93)\n+                NAME@[92; 93)\n+                  IDENT@[92; 93) \"a\"\n+              R_PAREN@[93; 94) \")\"\n+            COLON@[94; 95) \":\"\n+            WHITESPACE@[95; 96) \" \"\n+            PATH_TYPE@[96; 103)\n+              PATH@[96; 103)\n+                PATH_SEGMENT@[96; 103)\n+                  NAME_REF@[96; 103)\n+                    IDENT@[96; 103) \"NewType\"\n+          R_PAREN@[103; 104) \")\"\n+        WHITESPACE@[104; 105) \" \"\n+        BLOCK_EXPR@[105; 107)\n+          BLOCK@[105; 107)\n+            L_CURLY@[105; 106) \"{\"\n+            R_CURLY@[106; 107) \"}\"\n+      WHITESPACE@[107; 112) \"\\n    \"\n+      FN_DEF@[112; 134)\n+        FN_KW@[112; 114) \"fn\"\n+        WHITESPACE@[114; 115) \" \"\n+        NAME@[115; 117)\n+          IDENT@[115; 117) \"f4\"\n+        PARAM_LIST@[117; 131)\n+          L_PAREN@[117; 118) \"(\"\n+          PARAM@[118; 130)\n+            REF_PAT@[118; 121)\n+              AMP@[118; 119) \"&\"\n+              REF_PAT@[119; 121)\n+                AMP@[119; 120) \"&\"\n+                BIND_PAT@[120; 121)\n+                  NAME@[120; 121)\n+                    IDENT@[120; 121) \"a\"\n+            COLON@[121; 122) \":\"\n+            WHITESPACE@[122; 123) \" \"\n+            REFERENCE_TYPE@[123; 130)\n+              AMP@[123; 124) \"&\"\n+              REFERENCE_TYPE@[124; 130)\n+                AMP@[124; 125) \"&\"\n+                PATH_TYPE@[125; 130)\n+                  PATH@[125; 130)\n+                    PATH_SEGMENT@[125; 130)\n+                      NAME_REF@[125; 130)\n+                        IDENT@[125; 130) \"usize\"\n+          R_PAREN@[130; 131) \")\"\n+        WHITESPACE@[131; 132) \" \"\n+        BLOCK_EXPR@[132; 134)\n+          BLOCK@[132; 134)\n+            L_CURLY@[132; 133) \"{\"\n+            R_CURLY@[133; 134) \"}\"\n+      WHITESPACE@[134; 135) \"\\n\"\n+      R_CURLY@[135; 136) \"}\"\n+  WHITESPACE@[136; 137) \"\\n\""}, {"sha": "a94bf378a8b145f00642a01c0f39e74a2af65f65", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0153_trait_fn_patterns.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0153_trait_fn_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0153_trait_fn_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0153_trait_fn_patterns.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -0,0 +1,6 @@\n+trait T {\n+    fn f1((a, b): (usize, usize)) {}\n+    fn f2(S { a, b }: S) {}\n+    fn f3(NewType(a): NewType) {}\n+    fn f4(&&a: &&usize) {}\n+}"}, {"sha": "b22df8dbe64b9e5d454357b405a916cc673ee733", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0153_trait_fn_patterns.txt", "status": "added", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0153_trait_fn_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0153_trait_fn_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0153_trait_fn_patterns.txt?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -0,0 +1,161 @@\n+SOURCE_FILE@[0; 138)\n+  TRAIT_DEF@[0; 137)\n+    TRAIT_KW@[0; 5) \"trait\"\n+    WHITESPACE@[5; 6) \" \"\n+    NAME@[6; 7)\n+      IDENT@[6; 7) \"T\"\n+    WHITESPACE@[7; 8) \" \"\n+    ITEM_LIST@[8; 137)\n+      L_CURLY@[8; 9) \"{\"\n+      WHITESPACE@[9; 14) \"\\n    \"\n+      FN_DEF@[14; 46)\n+        FN_KW@[14; 16) \"fn\"\n+        WHITESPACE@[16; 17) \" \"\n+        NAME@[17; 19)\n+          IDENT@[17; 19) \"f1\"\n+        PARAM_LIST@[19; 43)\n+          L_PAREN@[19; 20) \"(\"\n+          PARAM@[20; 42)\n+            TUPLE_PAT@[20; 26)\n+              L_PAREN@[20; 21) \"(\"\n+              BIND_PAT@[21; 22)\n+                NAME@[21; 22)\n+                  IDENT@[21; 22) \"a\"\n+              COMMA@[22; 23) \",\"\n+              WHITESPACE@[23; 24) \" \"\n+              BIND_PAT@[24; 25)\n+                NAME@[24; 25)\n+                  IDENT@[24; 25) \"b\"\n+              R_PAREN@[25; 26) \")\"\n+            COLON@[26; 27) \":\"\n+            WHITESPACE@[27; 28) \" \"\n+            TUPLE_TYPE@[28; 42)\n+              L_PAREN@[28; 29) \"(\"\n+              PATH_TYPE@[29; 34)\n+                PATH@[29; 34)\n+                  PATH_SEGMENT@[29; 34)\n+                    NAME_REF@[29; 34)\n+                      IDENT@[29; 34) \"usize\"\n+              COMMA@[34; 35) \",\"\n+              WHITESPACE@[35; 36) \" \"\n+              PATH_TYPE@[36; 41)\n+                PATH@[36; 41)\n+                  PATH_SEGMENT@[36; 41)\n+                    NAME_REF@[36; 41)\n+                      IDENT@[36; 41) \"usize\"\n+              R_PAREN@[41; 42) \")\"\n+          R_PAREN@[42; 43) \")\"\n+        WHITESPACE@[43; 44) \" \"\n+        BLOCK_EXPR@[44; 46)\n+          BLOCK@[44; 46)\n+            L_CURLY@[44; 45) \"{\"\n+            R_CURLY@[45; 46) \"}\"\n+      WHITESPACE@[46; 51) \"\\n    \"\n+      FN_DEF@[51; 74)\n+        FN_KW@[51; 53) \"fn\"\n+        WHITESPACE@[53; 54) \" \"\n+        NAME@[54; 56)\n+          IDENT@[54; 56) \"f2\"\n+        PARAM_LIST@[56; 71)\n+          L_PAREN@[56; 57) \"(\"\n+          PARAM@[57; 70)\n+            RECORD_PAT@[57; 67)\n+              PATH@[57; 58)\n+                PATH_SEGMENT@[57; 58)\n+                  NAME_REF@[57; 58)\n+                    IDENT@[57; 58) \"S\"\n+              WHITESPACE@[58; 59) \" \"\n+              RECORD_FIELD_PAT_LIST@[59; 67)\n+                L_CURLY@[59; 60) \"{\"\n+                WHITESPACE@[60; 61) \" \"\n+                BIND_PAT@[61; 62)\n+                  NAME@[61; 62)\n+                    IDENT@[61; 62) \"a\"\n+                COMMA@[62; 63) \",\"\n+                WHITESPACE@[63; 64) \" \"\n+                BIND_PAT@[64; 65)\n+                  NAME@[64; 65)\n+                    IDENT@[64; 65) \"b\"\n+                WHITESPACE@[65; 66) \" \"\n+                R_CURLY@[66; 67) \"}\"\n+            COLON@[67; 68) \":\"\n+            WHITESPACE@[68; 69) \" \"\n+            PATH_TYPE@[69; 70)\n+              PATH@[69; 70)\n+                PATH_SEGMENT@[69; 70)\n+                  NAME_REF@[69; 70)\n+                    IDENT@[69; 70) \"S\"\n+          R_PAREN@[70; 71) \")\"\n+        WHITESPACE@[71; 72) \" \"\n+        BLOCK_EXPR@[72; 74)\n+          BLOCK@[72; 74)\n+            L_CURLY@[72; 73) \"{\"\n+            R_CURLY@[73; 74) \"}\"\n+      WHITESPACE@[74; 79) \"\\n    \"\n+      FN_DEF@[79; 108)\n+        FN_KW@[79; 81) \"fn\"\n+        WHITESPACE@[81; 82) \" \"\n+        NAME@[82; 84)\n+          IDENT@[82; 84) \"f3\"\n+        PARAM_LIST@[84; 105)\n+          L_PAREN@[84; 85) \"(\"\n+          PARAM@[85; 104)\n+            TUPLE_STRUCT_PAT@[85; 95)\n+              PATH@[85; 92)\n+                PATH_SEGMENT@[85; 92)\n+                  NAME_REF@[85; 92)\n+                    IDENT@[85; 92) \"NewType\"\n+              L_PAREN@[92; 93) \"(\"\n+              BIND_PAT@[93; 94)\n+                NAME@[93; 94)\n+                  IDENT@[93; 94) \"a\"\n+              R_PAREN@[94; 95) \")\"\n+            COLON@[95; 96) \":\"\n+            WHITESPACE@[96; 97) \" \"\n+            PATH_TYPE@[97; 104)\n+              PATH@[97; 104)\n+                PATH_SEGMENT@[97; 104)\n+                  NAME_REF@[97; 104)\n+                    IDENT@[97; 104) \"NewType\"\n+          R_PAREN@[104; 105) \")\"\n+        WHITESPACE@[105; 106) \" \"\n+        BLOCK_EXPR@[106; 108)\n+          BLOCK@[106; 108)\n+            L_CURLY@[106; 107) \"{\"\n+            R_CURLY@[107; 108) \"}\"\n+      WHITESPACE@[108; 113) \"\\n    \"\n+      FN_DEF@[113; 135)\n+        FN_KW@[113; 115) \"fn\"\n+        WHITESPACE@[115; 116) \" \"\n+        NAME@[116; 118)\n+          IDENT@[116; 118) \"f4\"\n+        PARAM_LIST@[118; 132)\n+          L_PAREN@[118; 119) \"(\"\n+          PARAM@[119; 131)\n+            REF_PAT@[119; 122)\n+              AMP@[119; 120) \"&\"\n+              REF_PAT@[120; 122)\n+                AMP@[120; 121) \"&\"\n+                BIND_PAT@[121; 122)\n+                  NAME@[121; 122)\n+                    IDENT@[121; 122) \"a\"\n+            COLON@[122; 123) \":\"\n+            WHITESPACE@[123; 124) \" \"\n+            REFERENCE_TYPE@[124; 131)\n+              AMP@[124; 125) \"&\"\n+              REFERENCE_TYPE@[125; 131)\n+                AMP@[125; 126) \"&\"\n+                PATH_TYPE@[126; 131)\n+                  PATH@[126; 131)\n+                    PATH_SEGMENT@[126; 131)\n+                      NAME_REF@[126; 131)\n+                        IDENT@[126; 131) \"usize\"\n+          R_PAREN@[131; 132) \")\"\n+        WHITESPACE@[132; 133) \" \"\n+        BLOCK_EXPR@[133; 135)\n+          BLOCK@[133; 135)\n+            L_CURLY@[133; 134) \"{\"\n+            R_CURLY@[134; 135) \"}\"\n+      WHITESPACE@[135; 136) \"\\n\"\n+      R_CURLY@[136; 137) \"}\"\n+  WHITESPACE@[137; 138) \"\\n\""}, {"sha": "80a1701fd66f9e00aa97a6fb1638308e0e6029a3", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0154_fn_pointer_param_ident_path.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -0,0 +1,2 @@\n+type Foo = fn(Bar::Baz);\n+type Qux = fn(baz: Bar::Baz);"}, {"sha": "cb686854adca1c95afd863fd7c646f54d8b21068", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0154_fn_pointer_param_ident_path.txt", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.txt?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -0,0 +1,58 @@\n+SOURCE_FILE@[0; 55)\n+  TYPE_ALIAS_DEF@[0; 24)\n+    TYPE_KW@[0; 4) \"type\"\n+    WHITESPACE@[4; 5) \" \"\n+    NAME@[5; 8)\n+      IDENT@[5; 8) \"Foo\"\n+    WHITESPACE@[8; 9) \" \"\n+    EQ@[9; 10) \"=\"\n+    WHITESPACE@[10; 11) \" \"\n+    FN_POINTER_TYPE@[11; 23)\n+      FN_KW@[11; 13) \"fn\"\n+      PARAM_LIST@[13; 23)\n+        L_PAREN@[13; 14) \"(\"\n+        PARAM@[14; 22)\n+          PATH_TYPE@[14; 22)\n+            PATH@[14; 22)\n+              PATH@[14; 17)\n+                PATH_SEGMENT@[14; 17)\n+                  NAME_REF@[14; 17)\n+                    IDENT@[14; 17) \"Bar\"\n+              COLONCOLON@[17; 19) \"::\"\n+              PATH_SEGMENT@[19; 22)\n+                NAME_REF@[19; 22)\n+                  IDENT@[19; 22) \"Baz\"\n+        R_PAREN@[22; 23) \")\"\n+    SEMI@[23; 24) \";\"\n+  WHITESPACE@[24; 25) \"\\n\"\n+  TYPE_ALIAS_DEF@[25; 54)\n+    TYPE_KW@[25; 29) \"type\"\n+    WHITESPACE@[29; 30) \" \"\n+    NAME@[30; 33)\n+      IDENT@[30; 33) \"Qux\"\n+    WHITESPACE@[33; 34) \" \"\n+    EQ@[34; 35) \"=\"\n+    WHITESPACE@[35; 36) \" \"\n+    FN_POINTER_TYPE@[36; 53)\n+      FN_KW@[36; 38) \"fn\"\n+      PARAM_LIST@[38; 53)\n+        L_PAREN@[38; 39) \"(\"\n+        PARAM@[39; 52)\n+          BIND_PAT@[39; 42)\n+            NAME@[39; 42)\n+              IDENT@[39; 42) \"baz\"\n+          COLON@[42; 43) \":\"\n+          WHITESPACE@[43; 44) \" \"\n+          PATH_TYPE@[44; 52)\n+            PATH@[44; 52)\n+              PATH@[44; 47)\n+                PATH_SEGMENT@[44; 47)\n+                  NAME_REF@[44; 47)\n+                    IDENT@[44; 47) \"Bar\"\n+              COLONCOLON@[47; 49) \"::\"\n+              PATH_SEGMENT@[49; 52)\n+                NAME_REF@[49; 52)\n+                  IDENT@[49; 52) \"Baz\"\n+        R_PAREN@[52; 53) \")\"\n+    SEMI@[53; 54) \";\"\n+  WHITESPACE@[54; 55) \"\\n\""}, {"sha": "ac30843eff649ff3644413d8998a2973578d5690", "filename": "crates/ra_syntax/test_data/parser/ok/0030_traits.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rs?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -1,7 +1,3 @@\n-pub trait WriteMessage {\n-    fn write_message(&FrontendMessage);\n-}\n-\n trait Runnable {\n     fn handler();\n }"}, {"sha": "ac314ae501c628b660b656d1a66cd4d7b76e62f0", "filename": "crates/ra_syntax/test_data/parser/ok/0030_traits.txt", "status": "modified", "additions": 61, "deletions": 93, "changes": 154, "blob_url": "https://github.com/rust-lang/rust/blob/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7e66785859fc4a31fc3faf4848174699d3a2c020/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.txt?ref=7e66785859fc4a31fc3faf4848174699d3a2c020", "patch": "@@ -1,93 +1,61 @@\n-SOURCE_FILE@[0; 164)\n-  TRAIT_DEF@[0; 66)\n-    VISIBILITY@[0; 3)\n-      PUB_KW@[0; 3) \"pub\"\n-    WHITESPACE@[3; 4) \" \"\n-    TRAIT_KW@[4; 9) \"trait\"\n-    WHITESPACE@[9; 10) \" \"\n-    NAME@[10; 22)\n-      IDENT@[10; 22) \"WriteMessage\"\n-    WHITESPACE@[22; 23) \" \"\n-    ITEM_LIST@[23; 66)\n-      L_CURLY@[23; 24) \"{\"\n-      WHITESPACE@[24; 29) \"\\n    \"\n-      FN_DEF@[29; 64)\n-        FN_KW@[29; 31) \"fn\"\n-        WHITESPACE@[31; 32) \" \"\n-        NAME@[32; 45)\n-          IDENT@[32; 45) \"write_message\"\n-        PARAM_LIST@[45; 63)\n-          L_PAREN@[45; 46) \"(\"\n-          PARAM@[46; 62)\n-            REFERENCE_TYPE@[46; 62)\n-              AMP@[46; 47) \"&\"\n-              PATH_TYPE@[47; 62)\n-                PATH@[47; 62)\n-                  PATH_SEGMENT@[47; 62)\n-                    NAME_REF@[47; 62)\n-                      IDENT@[47; 62) \"FrontendMessage\"\n-          R_PAREN@[62; 63) \")\"\n-        SEMI@[63; 64) \";\"\n-      WHITESPACE@[64; 65) \"\\n\"\n-      R_CURLY@[65; 66) \"}\"\n-  WHITESPACE@[66; 68) \"\\n\\n\"\n-  TRAIT_DEF@[68; 104)\n-    TRAIT_KW@[68; 73) \"trait\"\n-    WHITESPACE@[73; 74) \" \"\n-    NAME@[74; 82)\n-      IDENT@[74; 82) \"Runnable\"\n-    WHITESPACE@[82; 83) \" \"\n-    ITEM_LIST@[83; 104)\n-      L_CURLY@[83; 84) \"{\"\n-      WHITESPACE@[84; 89) \"\\n    \"\n-      FN_DEF@[89; 102)\n-        FN_KW@[89; 91) \"fn\"\n-        WHITESPACE@[91; 92) \" \"\n-        NAME@[92; 99)\n-          IDENT@[92; 99) \"handler\"\n-        PARAM_LIST@[99; 101)\n-          L_PAREN@[99; 100) \"(\"\n-          R_PAREN@[100; 101) \")\"\n-        SEMI@[101; 102) \";\"\n-      WHITESPACE@[102; 103) \"\\n\"\n-      R_CURLY@[103; 104) \"}\"\n-  WHITESPACE@[104; 106) \"\\n\\n\"\n-  TRAIT_DEF@[106; 163)\n-    TRAIT_KW@[106; 111) \"trait\"\n-    WHITESPACE@[111; 112) \" \"\n-    NAME@[112; 125)\n-      IDENT@[112; 125) \"TraitWithExpr\"\n-    WHITESPACE@[125; 126) \" \"\n-    ITEM_LIST@[126; 163)\n-      L_CURLY@[126; 127) \"{\"\n-      WHITESPACE@[127; 132) \"\\n    \"\n-      FN_DEF@[132; 161)\n-        FN_KW@[132; 134) \"fn\"\n-        WHITESPACE@[134; 135) \" \"\n-        NAME@[135; 147)\n-          IDENT@[135; 147) \"fn_with_expr\"\n-        PARAM_LIST@[147; 160)\n-          L_PAREN@[147; 148) \"(\"\n-          PARAM@[148; 159)\n-            BIND_PAT@[148; 149)\n-              NAME@[148; 149)\n-                IDENT@[148; 149) \"x\"\n-            COLON@[149; 150) \":\"\n-            WHITESPACE@[150; 151) \" \"\n-            ARRAY_TYPE@[151; 159)\n-              L_BRACK@[151; 152) \"[\"\n-              PATH_TYPE@[152; 155)\n-                PATH@[152; 155)\n-                  PATH_SEGMENT@[152; 155)\n-                    NAME_REF@[152; 155)\n-                      IDENT@[152; 155) \"i32\"\n-              SEMI@[155; 156) \";\"\n-              WHITESPACE@[156; 157) \" \"\n-              LITERAL@[157; 158)\n-                INT_NUMBER@[157; 158) \"1\"\n-              R_BRACK@[158; 159) \"]\"\n-          R_PAREN@[159; 160) \")\"\n-        SEMI@[160; 161) \";\"\n-      WHITESPACE@[161; 162) \"\\n\"\n-      R_CURLY@[162; 163) \"}\"\n-  WHITESPACE@[163; 164) \"\\n\"\n+SOURCE_FILE@[0; 96)\n+  TRAIT_DEF@[0; 36)\n+    TRAIT_KW@[0; 5) \"trait\"\n+    WHITESPACE@[5; 6) \" \"\n+    NAME@[6; 14)\n+      IDENT@[6; 14) \"Runnable\"\n+    WHITESPACE@[14; 15) \" \"\n+    ITEM_LIST@[15; 36)\n+      L_CURLY@[15; 16) \"{\"\n+      WHITESPACE@[16; 21) \"\\n    \"\n+      FN_DEF@[21; 34)\n+        FN_KW@[21; 23) \"fn\"\n+        WHITESPACE@[23; 24) \" \"\n+        NAME@[24; 31)\n+          IDENT@[24; 31) \"handler\"\n+        PARAM_LIST@[31; 33)\n+          L_PAREN@[31; 32) \"(\"\n+          R_PAREN@[32; 33) \")\"\n+        SEMI@[33; 34) \";\"\n+      WHITESPACE@[34; 35) \"\\n\"\n+      R_CURLY@[35; 36) \"}\"\n+  WHITESPACE@[36; 38) \"\\n\\n\"\n+  TRAIT_DEF@[38; 95)\n+    TRAIT_KW@[38; 43) \"trait\"\n+    WHITESPACE@[43; 44) \" \"\n+    NAME@[44; 57)\n+      IDENT@[44; 57) \"TraitWithExpr\"\n+    WHITESPACE@[57; 58) \" \"\n+    ITEM_LIST@[58; 95)\n+      L_CURLY@[58; 59) \"{\"\n+      WHITESPACE@[59; 64) \"\\n    \"\n+      FN_DEF@[64; 93)\n+        FN_KW@[64; 66) \"fn\"\n+        WHITESPACE@[66; 67) \" \"\n+        NAME@[67; 79)\n+          IDENT@[67; 79) \"fn_with_expr\"\n+        PARAM_LIST@[79; 92)\n+          L_PAREN@[79; 80) \"(\"\n+          PARAM@[80; 91)\n+            BIND_PAT@[80; 81)\n+              NAME@[80; 81)\n+                IDENT@[80; 81) \"x\"\n+            COLON@[81; 82) \":\"\n+            WHITESPACE@[82; 83) \" \"\n+            ARRAY_TYPE@[83; 91)\n+              L_BRACK@[83; 84) \"[\"\n+              PATH_TYPE@[84; 87)\n+                PATH@[84; 87)\n+                  PATH_SEGMENT@[84; 87)\n+                    NAME_REF@[84; 87)\n+                      IDENT@[84; 87) \"i32\"\n+              SEMI@[87; 88) \";\"\n+              WHITESPACE@[88; 89) \" \"\n+              LITERAL@[89; 90)\n+                INT_NUMBER@[89; 90) \"1\"\n+              R_BRACK@[90; 91) \"]\"\n+          R_PAREN@[91; 92) \")\"\n+        SEMI@[92; 93) \";\"\n+      WHITESPACE@[93; 94) \"\\n\"\n+      R_CURLY@[94; 95) \"}\"\n+  WHITESPACE@[95; 96) \"\\n\""}]}