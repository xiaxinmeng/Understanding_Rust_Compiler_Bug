{"sha": "8604161d7538fd23cb1fe76f4d2f7317c0e8d315", "node_id": "C_kwDOAAsO6NoAKDg2MDQxNjFkNzUzOGZkMjNjYjFmZTc2ZjRkMmY3MzE3YzBlOGQzMTU", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-02-01T04:12:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-01T04:12:56Z"}, "message": "Rollup merge of #93090 - jyn514:errorkind-asstr, r=dtolnay\n\n`impl Display for io::ErrorKind`\n\nThis avoids having to convert from `ErrorKind` to `Error` just to print the error message.", "tree": {"sha": "ee52ccacc755a885d83166ee557af4057af17901", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee52ccacc755a885d83166ee557af4057af17901"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8604161d7538fd23cb1fe76f4d2f7317c0e8d315", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh+LNICRBK7hj4Ov3rIwAAbkkIAHOwzE0dLUDK38QmLkiJG1n+\nEMo3jriC0T/jM3tH7/Ept0Yme5Zv6xRQXzN3D2Dw4NvC94NfIOYvDEY8CF0YZ4eU\nRP6ZPr7y2QpPnDg6y350jZvVNYLYmmipvnZVQ+YRyrTnYNV7PIfMLr0oDRy7suBD\nhX/KEJNyadn74bWM22IXLVpagRGOW9QHlDOBut7UdnBQvoHafbXhvfyA2Y5Klw+P\n3m2mUSmEwcMcI0//QkMtSCGqst1bcSePhHPCIpB9iW7f/x7RTkH6jUZvfKcEHF1E\nt0hzYN8AOHwa+kJsCXB58NhKsvWcbcKYP1JfK/id+o/fJHpQsQ63zOQzwvQF7AY=\n=OA7R\n-----END PGP SIGNATURE-----\n", "payload": "tree ee52ccacc755a885d83166ee557af4057af17901\nparent d7c0b4f706ca1f093845faab62100cec29769bb0\nparent f8ee57be2c585c3fd8931eeb88994fbfcaa0f083\nauthor Eric Huss <eric@huss.org> 1643688776 -0800\ncommitter GitHub <noreply@github.com> 1643688776 -0800\n\nRollup merge of #93090 - jyn514:errorkind-asstr, r=dtolnay\n\n`impl Display for io::ErrorKind`\n\nThis avoids having to convert from `ErrorKind` to `Error` just to print the error message.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8604161d7538fd23cb1fe76f4d2f7317c0e8d315", "html_url": "https://github.com/rust-lang/rust/commit/8604161d7538fd23cb1fe76f4d2f7317c0e8d315", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8604161d7538fd23cb1fe76f4d2f7317c0e8d315/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7c0b4f706ca1f093845faab62100cec29769bb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c0b4f706ca1f093845faab62100cec29769bb0", "html_url": "https://github.com/rust-lang/rust/commit/d7c0b4f706ca1f093845faab62100cec29769bb0"}, {"sha": "f8ee57be2c585c3fd8931eeb88994fbfcaa0f083", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ee57be2c585c3fd8931eeb88994fbfcaa0f083", "html_url": "https://github.com/rust-lang/rust/commit/f8ee57be2c585c3fd8931eeb88994fbfcaa0f083"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "074d693b83155dcfddf0808d7751b17b0ac3c31d", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8604161d7538fd23cb1fe76f4d2f7317c0e8d315/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8604161d7538fd23cb1fe76f4d2f7317c0e8d315/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=8604161d7538fd23cb1fe76f4d2f7317c0e8d315", "patch": "@@ -361,13 +361,29 @@ impl ErrorKind {\n     }\n }\n \n+#[stable(feature = \"io_errorkind_display\", since = \"1.60.0\")]\n+impl fmt::Display for ErrorKind {\n+    /// Shows a human-readable description of the `ErrorKind`.\n+    ///\n+    /// This is similar to `impl Display for Error`, but doesn't require first converting to Error.\n+    ///\n+    /// # Examples\n+    /// ```\n+    /// use std::io::ErrorKind;\n+    /// assert_eq!(\"entity not found\", ErrorKind::NotFound.to_string());\n+    /// ```\n+    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        fmt.write_str(self.as_str())\n+    }\n+}\n+\n /// Intended for use for errors not exposed to the user, where allocating onto\n /// the heap (for normal construction via Error::new) is too costly.\n #[stable(feature = \"io_error_from_errorkind\", since = \"1.14.0\")]\n impl From<ErrorKind> for Error {\n     /// Converts an [`ErrorKind`] into an [`Error`].\n     ///\n-    /// This conversion allocates a new error with a simple representation of error kind.\n+    /// This conversion creates a new error with a simple representation of error kind.\n     ///\n     /// # Examples\n     ///"}]}