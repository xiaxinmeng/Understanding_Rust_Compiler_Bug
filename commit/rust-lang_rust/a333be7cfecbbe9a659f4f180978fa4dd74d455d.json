{"sha": "a333be7cfecbbe9a659f4f180978fa4dd74d455d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMzNiZTdjZmVjYmJlOWE2NTlmNGYxODA5NzhmYTRkZDc0ZDQ1NWQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-05-29T16:46:29Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-05-30T17:19:34Z"}, "message": "Add new error code", "tree": {"sha": "57eb83beca50b8f10b5de443e6d14f36670ab5b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57eb83beca50b8f10b5de443e6d14f36670ab5b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a333be7cfecbbe9a659f4f180978fa4dd74d455d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a333be7cfecbbe9a659f4f180978fa4dd74d455d", "html_url": "https://github.com/rust-lang/rust/commit/a333be7cfecbbe9a659f4f180978fa4dd74d455d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a333be7cfecbbe9a659f4f180978fa4dd74d455d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f89d8d184490ecb3cf91f7b6bb7296d649f931ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/f89d8d184490ecb3cf91f7b6bb7296d649f931ba", "html_url": "https://github.com/rust-lang/rust/commit/f89d8d184490ecb3cf91f7b6bb7296d649f931ba"}], "stats": {"total": 67, "additions": 51, "deletions": 16}, "files": [{"sha": "2beb40d6b2f1ab34598a52849779be57a9ca4f72", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -1871,7 +1871,9 @@ makes a difference in practice.)\n \n E0593: r##\"\n You tried to supply an `Fn`-based type with an incorrect number of arguments\n-than what was expected. Erroneous code example:\n+than what was expected.\n+\n+Erroneous code example:\n \n ```compile_fail,E0593\n fn foo<F: Fn()>(x: F) { }\n@@ -1883,6 +1885,21 @@ fn main() {\n ```\n \"##,\n \n+E0601: r##\"\n+No `main` function was found in a binary crate. To fix this error, just add a\n+`main` function. For example:\n+\n+```\n+fn main() {\n+    // Your program will start here.\n+    println!(\"Hello world!\");\n+}\n+```\n+\n+If you don't know the basics of Rust, you can go look to the Rust Book to get\n+started: https://doc.rust-lang.org/book/\n+\"##,\n+\n }\n \n "}, {"sha": "b26cccf5f161746a3883fa84ba8ddd240de192ef", "filename": "src/librustc/middle/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibrustc%2Fmiddle%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibrustc%2Fmiddle%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fentry.rs?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -162,7 +162,7 @@ fn configure_main(this: &mut EntryContext) {\n         this.session.entry_type.set(Some(config::EntryMain));\n     } else {\n         // No main function\n-        let mut err = this.session.struct_err(\"main function not found\");\n+        let mut err = struct_err!(this.session, E0601, \"main function not found\");\n         if !this.non_main_fns.is_empty() {\n             // There were some functions named 'main' though. Try to give the user a hint.\n             err.note(\"the main function must be defined at the crate level \\"}, {"sha": "827fa72f034045e90701bc34d8679a4745c7c35c", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -158,14 +158,14 @@ impl Session {\n     pub fn struct_span_warn<'a, S: Into<MultiSpan>>(&'a self,\n                                                     sp: S,\n                                                     msg: &str)\n-                                                    -> DiagnosticBuilder<'a>  {\n+                                                    -> DiagnosticBuilder<'a> {\n         self.diagnostic().struct_span_warn(sp, msg)\n     }\n     pub fn struct_span_warn_with_code<'a, S: Into<MultiSpan>>(&'a self,\n                                                               sp: S,\n                                                               msg: &str,\n                                                               code: &str)\n-                                                              -> DiagnosticBuilder<'a>  {\n+                                                              -> DiagnosticBuilder<'a> {\n         self.diagnostic().struct_span_warn_with_code(sp, msg, code)\n     }\n     pub fn struct_warn<'a>(&'a self, msg: &str) -> DiagnosticBuilder<'a>  {\n@@ -174,30 +174,34 @@ impl Session {\n     pub fn struct_span_err<'a, S: Into<MultiSpan>>(&'a self,\n                                                    sp: S,\n                                                    msg: &str)\n-                                                   -> DiagnosticBuilder<'a>  {\n+                                                   -> DiagnosticBuilder<'a> {\n         self.diagnostic().struct_span_err(sp, msg)\n     }\n     pub fn struct_span_err_with_code<'a, S: Into<MultiSpan>>(&'a self,\n                                                              sp: S,\n                                                              msg: &str,\n                                                              code: &str)\n-                                                             -> DiagnosticBuilder<'a>  {\n+                                                             -> DiagnosticBuilder<'a> {\n         self.diagnostic().struct_span_err_with_code(sp, msg, code)\n     }\n-    pub fn struct_err<'a>(&'a self, msg: &str) -> DiagnosticBuilder<'a>  {\n+    // FIXME: This method should be removed (every error should have an associated error code).\n+    pub fn struct_err<'a>(&'a self, msg: &str) -> DiagnosticBuilder<'a> {\n         self.diagnostic().struct_err(msg)\n     }\n+    pub fn struct_err_with_code<'a>(&'a self, msg: &str, code: &str) -> DiagnosticBuilder<'a> {\n+        self.diagnostic().struct_err_with_code(msg, code)\n+    }\n     pub fn struct_span_fatal<'a, S: Into<MultiSpan>>(&'a self,\n                                                      sp: S,\n                                                      msg: &str)\n-                                                     -> DiagnosticBuilder<'a>  {\n+                                                     -> DiagnosticBuilder<'a> {\n         self.diagnostic().struct_span_fatal(sp, msg)\n     }\n     pub fn struct_span_fatal_with_code<'a, S: Into<MultiSpan>>(&'a self,\n                                                                sp: S,\n                                                                msg: &str,\n                                                                code: &str)\n-                                                               -> DiagnosticBuilder<'a>  {\n+                                                               -> DiagnosticBuilder<'a> {\n         self.diagnostic().struct_span_fatal_with_code(sp, msg, code)\n     }\n     pub fn struct_fatal<'a>(&'a self, msg: &str) -> DiagnosticBuilder<'a>  {"}, {"sha": "d1aaaf4ba7b378c7e8dd0f2f9e78cf5b15a525b8", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -345,9 +345,15 @@ impl Handler {\n         result.code(code.to_owned());\n         result\n     }\n+    // FIXME: This method should be removed (every error should have an associated error code).\n     pub fn struct_err<'a>(&'a self, msg: &str) -> DiagnosticBuilder<'a> {\n         DiagnosticBuilder::new(self, Level::Error, msg)\n     }\n+    pub fn struct_err_with_code<'a>(&'a self, msg: &str, code: &str) -> DiagnosticBuilder<'a> {\n+        let mut result = DiagnosticBuilder::new(self, Level::Error, msg);\n+        result.code(code.to_owned());\n+        result\n+    }\n     pub fn struct_span_fatal<'a, S: Into<MultiSpan>>(&'a self,\n                                                      sp: S,\n                                                      msg: &str)"}, {"sha": "13016d72127eabd3ad511892e22c54ef72c66aa4", "filename": "src/libsyntax/diagnostics/macros.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -38,6 +38,14 @@ macro_rules! span_warn {\n     })\n }\n \n+#[macro_export]\n+macro_rules! struct_err {\n+    ($session:expr, $code:ident, $($message:tt)*) => ({\n+        __diagnostic_used!($code);\n+        $session.struct_err_with_code(&format!($($message)*), stringify!($code))\n+    })\n+}\n+\n #[macro_export]\n macro_rules! span_err_or_warn {\n     ($is_warning:expr, $session:expr, $span:expr, $code:ident, $($message:tt)*) => ({"}, {"sha": "2d699c66359d82edf2165b32632776fb229fa207", "filename": "src/test/ui/missing-items/m2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -1,4 +1,4 @@\n-error: main function not found\n+error[E0601]: main function not found\n \n error[E0046]: not all trait items implemented, missing: `CONSTANT`, `Type`, `method`\n   --> $DIR/m2.rs:20:1"}, {"sha": "009d969fc285d703b6ae838023045ca81ae5c294", "filename": "src/test/ui/resolve/issue-14254.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -142,7 +142,7 @@ error[E0425]: cannot find value `bah` in this scope\n 133 |         bah;\n     |         ^^^ did you mean `Self::bah`?\n \n-error: main function not found\n+error[E0601]: main function not found\n \n error: aborting due to previous error(s)\n "}, {"sha": "b35f1bd26706ccfc5bafcf5b03018d13ac9159a8", "filename": "src/test/ui/resolve/issue-21221-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -7,7 +7,7 @@ error[E0405]: cannot find trait `T` in this scope\n help: possible candidate is found in another module, you can import it into scope\n    | use foo::bar::T;\n \n-error: main function not found\n+error[E0601]: main function not found\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "a34c27a47da8288892b482a4f6043f34cf56b902", "filename": "src/test/ui/resolve/suggest-path-instead-of-mod-dot-item.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -72,7 +72,7 @@ error[E0423]: expected function, found module `a::b`\n    |        |\n    |        did you mean `I`?\n \n-error: main function not found\n+error[E0601]: main function not found\n \n error: aborting due to previous error(s)\n "}, {"sha": "a2597aba0bd295af2c3efe6c5821cb24027572ba", "filename": "src/test/ui/span/issue-35987.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -7,7 +7,7 @@ error[E0404]: expected trait, found type parameter `Add`\n help: possible better candidate is found in another module, you can import it into scope\n    | use std::ops::Add;\n \n-error: main function not found\n+error[E0601]: main function not found\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "4b0b05ca65adc89eee6a6baf957dc68bcc75ef57", "filename": "src/test/ui/token/issue-10636-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -22,7 +22,7 @@ error: expected expression, found `)`\n 19 | } //~ ERROR: incorrect close delimiter\n    | ^\n \n-error: main function not found\n+error[E0601]: main function not found\n \n error: aborting due to previous error(s)\n "}, {"sha": "56f71a2995382759495c4daf6e8dfaa1160e19ff", "filename": "src/test/ui/token/issue-41155.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a333be7cfecbbe9a659f4f180978fa4dd74d455d/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr?ref=a333be7cfecbbe9a659f4f180978fa4dd74d455d", "patch": "@@ -12,7 +12,7 @@ error[E0412]: cannot find type `S` in this scope\n 11 | impl S {\n    |      ^ not found in this scope\n \n-error: main function not found\n+error[E0601]: main function not found\n \n error: aborting due to previous error(s)\n "}]}