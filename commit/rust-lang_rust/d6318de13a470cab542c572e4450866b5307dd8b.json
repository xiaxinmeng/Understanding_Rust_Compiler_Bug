{"sha": "d6318de13a470cab542c572e4450866b5307dd8b", "node_id": "C_kwDOAAsO6NoAKGQ2MzE4ZGUxM2E0NzBjYWI1NDJjNTcyZTQ0NTA4NjZiNTMwN2RkOGI", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-09-18T18:53:38Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-09-18T20:26:03Z"}, "message": "Never use legacy PM for writing bitcode", "tree": {"sha": "ab8da5c2ee75d442bffc93d0fb38be89a9b32201", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab8da5c2ee75d442bffc93d0fb38be89a9b32201"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6318de13a470cab542c572e4450866b5307dd8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6318de13a470cab542c572e4450866b5307dd8b", "html_url": "https://github.com/rust-lang/rust/commit/d6318de13a470cab542c572e4450866b5307dd8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6318de13a470cab542c572e4450866b5307dd8b/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "url": "https://api.github.com/repos/rust-lang/rust/commits/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "html_url": "https://github.com/rust-lang/rust/commit/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "349c16f0745790c6be583aec188b9b2a1dab3ae1", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d6318de13a470cab542c572e4450866b5307dd8b/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d6318de13a470cab542c572e4450866b5307dd8b/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=d6318de13a470cab542c572e4450866b5307dd8b", "patch": "@@ -31,13 +31,11 @@\n #include \"llvm/Transforms/IPO/PassManagerBuilder.h\"\n #include \"llvm/Transforms/IPO/AlwaysInliner.h\"\n #include \"llvm/Transforms/IPO/FunctionImport.h\"\n-#if LLVM_VERSION_GE(15, 0)\n #include \"llvm/Transforms/IPO/ThinLTOBitcodeWriter.h\"\n-#endif\n #include \"llvm/Transforms/Utils/AddDiscriminators.h\"\n #include \"llvm/Transforms/Utils/FunctionImportUtils.h\"\n #include \"llvm/LTO/LTO.h\"\n-#include \"llvm/Bitcode/BitcodeWriterPass.h\"\n+#include \"llvm/Bitcode/BitcodeWriter.h\"\n #include \"llvm-c/Transforms/PassManagerBuilder.h\"\n \n #include \"llvm/Transforms/Instrumentation.h\"\n@@ -1377,11 +1375,6 @@ LLVMRustThinLTOBufferCreate(LLVMModuleRef M, bool is_thin) {\n     raw_string_ostream OS(Ret->data);\n     {\n       if (is_thin) {\n-#if LLVM_VERSION_LT(15, 0)\n-        legacy::PassManager PM;\n-        PM.add(createWriteThinLTOBitcodePass(OS));\n-        PM.run(*unwrap(M));\n-#else\n         PassBuilder PB;\n         LoopAnalysisManager LAM;\n         FunctionAnalysisManager FAM;\n@@ -1395,11 +1388,8 @@ LLVMRustThinLTOBufferCreate(LLVMModuleRef M, bool is_thin) {\n         ModulePassManager MPM;\n         MPM.addPass(ThinLTOBitcodeWriterPass(OS, nullptr));\n         MPM.run(*unwrap(M), MAM);\n-#endif\n       } else {\n-        legacy::PassManager PM;\n-        PM.add(createBitcodeWriterPass(OS));\n-        PM.run(*unwrap(M));\n+        WriteBitcodeToFile(*unwrap(M), OS);\n       }\n     }\n   }"}, {"sha": "a908e3457386f0879850965104bdeda4b4177f2a", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6318de13a470cab542c572e4450866b5307dd8b/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d6318de13a470cab542c572e4450866b5307dd8b/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=d6318de13a470cab542c572e4450866b5307dd8b", "patch": "@@ -12,7 +12,7 @@\n #include \"llvm/Object/COFFImportFile.h\"\n #include \"llvm/Object/ObjectFile.h\"\n #include \"llvm/Pass.h\"\n-#include \"llvm/Bitcode/BitcodeWriterPass.h\"\n+#include \"llvm/Bitcode/BitcodeWriter.h\"\n #include \"llvm/Support/Signals.h\"\n #include \"llvm/ADT/Optional.h\"\n \n@@ -1709,11 +1709,7 @@ LLVMRustModuleBufferCreate(LLVMModuleRef M) {\n   auto Ret = std::make_unique<LLVMRustModuleBuffer>();\n   {\n     raw_string_ostream OS(Ret->data);\n-    {\n-      legacy::PassManager PM;\n-      PM.add(createBitcodeWriterPass(OS));\n-      PM.run(*unwrap(M));\n-    }\n+    WriteBitcodeToFile(*unwrap(M), OS);\n   }\n   return Ret.release();\n }"}]}