{"sha": "3645b0626c89ed098c121ff2215ad3ec50f44836", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NDViMDYyNmM4OWVkMDk4YzEyMWZmMjIxNWFkM2VjNTBmNDQ4MzY=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-08-08T00:20:19Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-08-08T18:31:42Z"}, "message": "#[must_use] for functions (RFC 1940)\n\nThe return value of a function annotated with `must_use`, must be used.\n\nThis is in the matter of #43302.", "tree": {"sha": "0425b7d8903a0c991905423660a5932e6a7c2366", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0425b7d8903a0c991905423660a5932e6a7c2366"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3645b0626c89ed098c121ff2215ad3ec50f44836", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3645b0626c89ed098c121ff2215ad3ec50f44836", "html_url": "https://github.com/rust-lang/rust/commit/3645b0626c89ed098c121ff2215ad3ec50f44836", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3645b0626c89ed098c121ff2215ad3ec50f44836/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0188ec6ef8d580f4d07c11ca271d90ec78e6b7a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0188ec6ef8d580f4d07c11ca271d90ec78e6b7a8", "html_url": "https://github.com/rust-lang/rust/commit/0188ec6ef8d580f4d07c11ca271d90ec78e6b7a8"}], "stats": {"total": 81, "additions": 72, "deletions": 9}, "files": [{"sha": "ba17df4cdca4b930759bd8dd547ce93f1686209d", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3645b0626c89ed098c121ff2215ad3ec50f44836/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3645b0626c89ed098c121ff2215ad3ec50f44836/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=3645b0626c89ed098c121ff2215ad3ec50f44836", "patch": "@@ -145,22 +145,38 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         }\n \n         let t = cx.tables.expr_ty(&expr);\n-        let warned = match t.sty {\n-            ty::TyTuple(ref tys, _) if tys.is_empty() => return,\n-            ty::TyNever => return,\n-            ty::TyBool => return,\n-            ty::TyAdt(def, _) => check_must_use(cx, def.did, s.span),\n+        let ty_warned = match t.sty {\n+            ty::TyAdt(def, _) => check_must_use(cx, def.did, s.span, \"\"),\n             _ => false,\n         };\n-        if !warned {\n+\n+        let mut fn_warned = false;\n+        let maybe_def = match expr.node {\n+            hir::ExprCall(ref callee, _) => {\n+                match callee.node {\n+                    hir::ExprPath(ref qpath) => Some(cx.tables.qpath_def(qpath, callee.id)),\n+                    _ => None\n+                }\n+            },\n+            hir::ExprMethodCall(..) => {\n+                cx.tables.type_dependent_defs.get(&expr.id).cloned()\n+            },\n+            _ => { None }\n+        };\n+        if let Some(def) = maybe_def {\n+            let def_id = def.def_id();\n+            fn_warned = check_must_use(cx, def_id, s.span, \"return value of \");\n+        }\n+\n+        if !(ty_warned || fn_warned) {\n             cx.span_lint(UNUSED_RESULTS, s.span, \"unused result\");\n         }\n \n-        fn check_must_use(cx: &LateContext, def_id: DefId, sp: Span) -> bool {\n+        fn check_must_use(cx: &LateContext, def_id: DefId, sp: Span, describe_path: &str) -> bool {\n             for attr in cx.tcx.get_attrs(def_id).iter() {\n                 if attr.check_name(\"must_use\") {\n-                    let mut msg = format!(\"unused `{}` which must be used\",\n-                                          cx.tcx.item_path_str(def_id));\n+                    let mut msg = format!(\"unused {}`{}` which must be used\",\n+                                          describe_path, cx.tcx.item_path_str(def_id));\n                     // check for #[must_use=\"...\"]\n                     if let Some(s) = attr.value_str() {\n                         msg.push_str(\": \");"}, {"sha": "ea2197f3fd1a0cb24925cedddac29895e79e2c48", "filename": "src/test/ui/lint/fn_must_use.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3645b0626c89ed098c121ff2215ad3ec50f44836/src%2Ftest%2Fui%2Flint%2Ffn_must_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3645b0626c89ed098c121ff2215ad3ec50f44836/src%2Ftest%2Fui%2Flint%2Ffn_must_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ffn_must_use.rs?ref=3645b0626c89ed098c121ff2215ad3ec50f44836", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+struct MyStruct {\n+    n: usize\n+}\n+\n+impl MyStruct {\n+    #[must_use]\n+    fn need_to_use_this_method_value(&self) -> usize {\n+        self.n\n+    }\n+}\n+\n+#[must_use=\"it's important\"]\n+fn need_to_use_this_value() -> bool {\n+    false\n+}\n+\n+fn main() {\n+    need_to_use_this_value();\n+\n+    let m = MyStruct { n: 2 };\n+    m.need_to_use_this_method_value();\n+}"}, {"sha": "7057c8e9aaad1663872df8f935100172d42e365a", "filename": "src/test/ui/lint/fn_must_use.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3645b0626c89ed098c121ff2215ad3ec50f44836/src%2Ftest%2Fui%2Flint%2Ffn_must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3645b0626c89ed098c121ff2215ad3ec50f44836/src%2Ftest%2Fui%2Flint%2Ffn_must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ffn_must_use.stderr?ref=3645b0626c89ed098c121ff2215ad3ec50f44836", "patch": "@@ -0,0 +1,14 @@\n+warning: unused return value of `need_to_use_this_value` which must be used: it's important\n+  --> $DIR/fn_must_use.rs:29:5\n+   |\n+29 |     need_to_use_this_value();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: #[warn(unused_must_use)] on by default\n+\n+warning: unused return value of `MyStruct::need_to_use_this_method_value` which must be used\n+  --> $DIR/fn_must_use.rs:32:5\n+   |\n+32 |     m.need_to_use_this_method_value();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+"}]}