{"sha": "e932ba31e1a69deccbab59b53b0895014508035a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MzJiYTMxZTFhNjlkZWNjYmFiNTliNTNiMDg5NTAxNDUwODAzNWE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-14T17:53:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-14T17:53:38Z"}, "message": "Rollup merge of #87120 - jyn514:rustdoc-cleanup, r=CraftSpider\n\nrustdoc: Remove unnecessary `extern crate` aliases", "tree": {"sha": "ab0a559c786a33ddcaa8b3b67d5dd2d796a62675", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab0a559c786a33ddcaa8b3b67d5dd2d796a62675"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e932ba31e1a69deccbab59b53b0895014508035a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg7ySjCRBK7hj4Ov3rIwAAHGEIADgqcuehgPVVGnKlcnoJbkYl\naMt7j0kkE4ZdPJhzqawMe0Ia8ipVdA+ooVCtMHrACFNnawXWNjSC9uy2Ul2SGMhm\nz9LXKfWUTagThQzea9IFP5VMeAoxdwjXj3W6ad4fGyldNvHOsjT6z8baRLhSv6Pr\ncJBwYDxHSwZQpmSENdnoYtyNXtKluQvQiLfk0r48YzFiPlqD6nLvm4BVBhdEHuTz\ndFso8SJKlYOGOx5C/gkyLsA7BulcqsQ38Sdk8hoB5PvLtckTDe1vb+FxMXjz1UBx\nu3Y+toA0WYCBy9DtGsZ0fs645odcjR+PtY5CwKr7HvQXr0JLFqYDbloXE3Fl0gQ=\n=2bSq\n-----END PGP SIGNATURE-----\n", "payload": "tree ab0a559c786a33ddcaa8b3b67d5dd2d796a62675\nparent 40155f5ea7f284605b7fc95c36d60dabc2f76008\nparent 1006175e22bf55ebdabca83ce91777852668d277\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1626285218 +0200\ncommitter GitHub <noreply@github.com> 1626285218 +0200\n\nRollup merge of #87120 - jyn514:rustdoc-cleanup, r=CraftSpider\n\nrustdoc: Remove unnecessary `extern crate` aliases\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e932ba31e1a69deccbab59b53b0895014508035a", "html_url": "https://github.com/rust-lang/rust/commit/e932ba31e1a69deccbab59b53b0895014508035a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e932ba31e1a69deccbab59b53b0895014508035a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40155f5ea7f284605b7fc95c36d60dabc2f76008", "url": "https://api.github.com/repos/rust-lang/rust/commits/40155f5ea7f284605b7fc95c36d60dabc2f76008", "html_url": "https://github.com/rust-lang/rust/commit/40155f5ea7f284605b7fc95c36d60dabc2f76008"}, {"sha": "1006175e22bf55ebdabca83ce91777852668d277", "url": "https://api.github.com/repos/rust-lang/rust/commits/1006175e22bf55ebdabca83ce91777852668d277", "html_url": "https://github.com/rust-lang/rust/commit/1006175e22bf55ebdabca83ce91777852668d277"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "c5ca396e72029c4870506a73145c79a9aec9c5da", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e932ba31e1a69deccbab59b53b0895014508035a/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e932ba31e1a69deccbab59b53b0895014508035a/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=e932ba31e1a69deccbab59b53b0895014508035a", "patch": "@@ -167,11 +167,7 @@ crate fn run(options: Options) -> Result<(), ErrorReported> {\n \n     test_args.insert(0, \"rustdoctest\".to_string());\n \n-    testing::test_main(\n-        &test_args,\n-        tests,\n-        Some(testing::Options::new().display_output(display_warnings)),\n-    );\n+    test::test_main(&test_args, tests, Some(test::Options::new().display_output(display_warnings)));\n \n     // Collect and warn about unused externs, but only if we've gotten\n     // reports for each doctest\n@@ -769,7 +765,7 @@ crate trait Tester {\n }\n \n crate struct Collector {\n-    crate tests: Vec<testing::TestDescAndFn>,\n+    crate tests: Vec<test::TestDescAndFn>,\n \n     // The name of the test displayed to the user, separated by `::`.\n     //\n@@ -930,22 +926,22 @@ impl Tester for Collector {\n         };\n \n         debug!(\"creating test {}: {}\", name, test);\n-        self.tests.push(testing::TestDescAndFn {\n-            desc: testing::TestDesc {\n-                name: testing::DynTestName(name),\n+        self.tests.push(test::TestDescAndFn {\n+            desc: test::TestDesc {\n+                name: test::DynTestName(name),\n                 ignore: match config.ignore {\n                     Ignore::All => true,\n                     Ignore::None => false,\n                     Ignore::Some(ref ignores) => ignores.iter().any(|s| target_str.contains(s)),\n                 },\n                 // compiler failures are test failures\n-                should_panic: testing::ShouldPanic::No,\n+                should_panic: test::ShouldPanic::No,\n                 allow_fail: config.allow_fail,\n                 compile_fail: config.compile_fail,\n                 no_run,\n-                test_type: testing::TestType::DocTest,\n+                test_type: test::TestType::DocTest,\n             },\n-            testfn: testing::DynTestFn(box move || {\n+            testfn: test::DynTestFn(box move || {\n                 let report_unused_externs = |uext| {\n                     unused_externs.lock().unwrap().push(uext);\n                 };"}, {"sha": "d4d87819c0d7a3c4a7452971e23175afc8928a58", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e932ba31e1a69deccbab59b53b0895014508035a/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e932ba31e1a69deccbab59b53b0895014508035a/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e932ba31e1a69deccbab59b53b0895014508035a", "patch": "@@ -53,11 +53,11 @@ extern crate rustc_parse;\n extern crate rustc_passes;\n extern crate rustc_resolve;\n extern crate rustc_session;\n-extern crate rustc_span as rustc_span;\n+extern crate rustc_span;\n extern crate rustc_target;\n extern crate rustc_trait_selection;\n extern crate rustc_typeck;\n-extern crate test as testing;\n+extern crate test;\n \n #[cfg(feature = \"jemalloc\")]\n extern crate tikv_jemalloc_sys;"}, {"sha": "45966c0058df4de71fa520d4b631235854f7ebef", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e932ba31e1a69deccbab59b53b0895014508035a/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e932ba31e1a69deccbab59b53b0895014508035a/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=e932ba31e1a69deccbab59b53b0895014508035a", "patch": "@@ -136,10 +136,10 @@ crate fn test(mut options: Options) -> Result<(), String> {\n     find_testable_code(&input_str, &mut collector, codes, options.enable_per_target_ignores, None);\n \n     options.test_args.insert(0, \"rustdoctest\".to_string());\n-    testing::test_main(\n+    test::test_main(\n         &options.test_args,\n         collector.tests,\n-        Some(testing::Options::new().display_output(options.display_warnings)),\n+        Some(test::Options::new().display_output(options.display_warnings)),\n     );\n     Ok(())\n }"}]}