{"sha": "c8135455c4a96b1d2570198619f38185c063579d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MTM1NDU1YzRhOTZiMWQyNTcwMTk4NjE5ZjM4MTg1YzA2MzU3OWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-21T01:16:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-21T01:16:20Z"}, "message": "Auto merge of #80088 - operutka:fix-cmsg-len-uclibc, r=dtolnay\n\nFix failing build of std on armv5te-unknown-linux-uclibceabi due to missing cmsg_len_zero\n\nI'm getting the following error when trying to build `std` on `armv5te-unknown-linux-uclibceabi`:\n\n```\nerror[E0425]: cannot find value `cmsg_len_zero` in this scope\n   --> /home/operutka/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/ext/net/ancillary.rs:376:47\n    |\n376 |             let data_len = (*cmsg).cmsg_len - cmsg_len_zero;\n    |                                               ^^^^^^^^^^^^^ not found in this scope\n```\n\nObviously, this branch:\n```rust\ncfg_if::cfg_if! {\n    if #[cfg(any(target_os = \"android\", all(target_os = \"linux\", target_env = \"gnu\")))] {\n        let cmsg_len_zero = libc::CMSG_LEN(0) as libc::size_t;\n    } else if #[cfg(any(\n                  target_os = \"dragonfly\",\n                  target_os = \"emscripten\",\n                  target_os = \"freebsd\",\n                  all(target_os = \"linux\", target_env = \"musl\",),\n                  target_os = \"netbsd\",\n                  target_os = \"openbsd\",\n              ))] {\n        let cmsg_len_zero = libc::CMSG_LEN(0) as libc::socklen_t;\n    }\n}\n```\n\ndoes not cover the case `all(target_os = \"linux\", target_env = \"uclibc\")`.", "tree": {"sha": "6a54a67e8075966ea8a09f70fc71b7bf8d33ae07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a54a67e8075966ea8a09f70fc71b7bf8d33ae07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8135455c4a96b1d2570198619f38185c063579d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8135455c4a96b1d2570198619f38185c063579d", "html_url": "https://github.com/rust-lang/rust/commit/c8135455c4a96b1d2570198619f38185c063579d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8135455c4a96b1d2570198619f38185c063579d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c609b2eaf323186a1167ec1a9ffa69a7d4a5b1b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c609b2eaf323186a1167ec1a9ffa69a7d4a5b1b9", "html_url": "https://github.com/rust-lang/rust/commit/c609b2eaf323186a1167ec1a9ffa69a7d4a5b1b9"}, {"sha": "ec078155f140de8bd838596ac0d5d786d988d493", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec078155f140de8bd838596ac0d5d786d988d493", "html_url": "https://github.com/rust-lang/rust/commit/ec078155f140de8bd838596ac0d5d786d988d493"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "0964b6335aa7929722b8157288d55489fc767e18", "filename": "library/std/src/sys/unix/ext/net/ancillary.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8135455c4a96b1d2570198619f38185c063579d/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8135455c4a96b1d2570198619f38185c063579d/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs?ref=c8135455c4a96b1d2570198619f38185c063579d", "patch": "@@ -360,7 +360,11 @@ impl<'a> AncillaryData<'a> {\n     fn try_from_cmsghdr(cmsg: &'a libc::cmsghdr) -> Result<Self, AncillaryError> {\n         unsafe {\n             cfg_if::cfg_if! {\n-                if #[cfg(any(target_os = \"android\", all(target_os = \"linux\", target_env = \"gnu\")))] {\n+                if #[cfg(any(\n+                        target_os = \"android\",\n+                        all(target_os = \"linux\", target_env = \"gnu\"),\n+                        all(target_os = \"linux\", target_env = \"uclibc\"),\n+                   ))] {\n                     let cmsg_len_zero = libc::CMSG_LEN(0) as libc::size_t;\n                 } else if #[cfg(any(\n                               target_os = \"dragonfly\","}]}