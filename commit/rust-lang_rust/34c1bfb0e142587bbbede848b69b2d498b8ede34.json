{"sha": "34c1bfb0e142587bbbede848b69b2d498b8ede34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0YzFiZmIwZTE0MjU4N2JiYmVkZTg0OGI2OWIyZDQ5OGI4ZWRlMzQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-08-01T11:55:44Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-08-01T23:51:00Z"}, "message": "Remove unnecessary clones in doc examples.", "tree": {"sha": "db437aee4ebb23eee19308291e2e80c897d47e91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db437aee4ebb23eee19308291e2e80c897d47e91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34c1bfb0e142587bbbede848b69b2d498b8ede34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34c1bfb0e142587bbbede848b69b2d498b8ede34", "html_url": "https://github.com/rust-lang/rust/commit/34c1bfb0e142587bbbede848b69b2d498b8ede34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34c1bfb0e142587bbbede848b69b2d498b8ede34/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1599fad5b485cbfbed698df3590665f064999948", "url": "https://api.github.com/repos/rust-lang/rust/commits/1599fad5b485cbfbed698df3590665f064999948", "html_url": "https://github.com/rust-lang/rust/commit/1599fad5b485cbfbed698df3590665f064999948"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "3c39db3fbabb3e984879f2e6d6797b3e2f77bc9b", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/34c1bfb0e142587bbbede848b69b2d498b8ede34/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34c1bfb0e142587bbbede848b69b2d498b8ede34/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=34c1bfb0e142587bbbede848b69b2d498b8ede34", "patch": "@@ -325,13 +325,13 @@ impl<T, S> HashSet<T, S>\n     ///     println!(\"{}\", x); // Print 1\n     /// }\n     ///\n-    /// let diff: HashSet<_> = a.difference(&b).cloned().collect();\n-    /// assert_eq!(diff, [1].iter().cloned().collect());\n+    /// let diff: HashSet<_> = a.difference(&b).collect();\n+    /// assert_eq!(diff, [1].iter().collect());\n     ///\n     /// // Note that difference is not symmetric,\n     /// // and `b - a` means something else:\n-    /// let diff: HashSet<_> = b.difference(&a).cloned().collect();\n-    /// assert_eq!(diff, [4].iter().cloned().collect());\n+    /// let diff: HashSet<_> = b.difference(&a).collect();\n+    /// assert_eq!(diff, [4].iter().collect());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn difference<'a>(&'a self, other: &'a HashSet<T, S>) -> Difference<'a, T, S> {\n@@ -356,11 +356,11 @@ impl<T, S> HashSet<T, S>\n     ///     println!(\"{}\", x);\n     /// }\n     ///\n-    /// let diff1: HashSet<_> = a.symmetric_difference(&b).cloned().collect();\n-    /// let diff2: HashSet<_> = b.symmetric_difference(&a).cloned().collect();\n+    /// let diff1: HashSet<_> = a.symmetric_difference(&b).collect();\n+    /// let diff2: HashSet<_> = b.symmetric_difference(&a).collect();\n     ///\n     /// assert_eq!(diff1, diff2);\n-    /// assert_eq!(diff1, [1, 4].iter().cloned().collect());\n+    /// assert_eq!(diff1, [1, 4].iter().collect());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn symmetric_difference<'a>(&'a self,\n@@ -384,8 +384,8 @@ impl<T, S> HashSet<T, S>\n     ///     println!(\"{}\", x);\n     /// }\n     ///\n-    /// let intersection: HashSet<_> = a.intersection(&b).cloned().collect();\n-    /// assert_eq!(intersection, [2, 3].iter().cloned().collect());\n+    /// let intersection: HashSet<_> = a.intersection(&b).collect();\n+    /// assert_eq!(intersection, [2, 3].iter().collect());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn intersection<'a>(&'a self, other: &'a HashSet<T, S>) -> Intersection<'a, T, S> {\n@@ -410,8 +410,8 @@ impl<T, S> HashSet<T, S>\n     ///     println!(\"{}\", x);\n     /// }\n     ///\n-    /// let union: HashSet<_> = a.union(&b).cloned().collect();\n-    /// assert_eq!(union, [1, 2, 3, 4].iter().cloned().collect());\n+    /// let union: HashSet<_> = a.union(&b).collect();\n+    /// assert_eq!(union, [1, 2, 3, 4].iter().collect());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn union<'a>(&'a self, other: &'a HashSet<T, S>) -> Union<'a, T, S> {"}]}