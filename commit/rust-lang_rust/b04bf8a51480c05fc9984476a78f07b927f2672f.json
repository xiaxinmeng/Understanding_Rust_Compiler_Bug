{"sha": "b04bf8a51480c05fc9984476a78f07b927f2672f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNGJmOGE1MTQ4MGMwNWZjOTk4NDQ3NmE3OGYwN2I5MjdmMjY3MmY=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-06T23:12:25Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:23:32Z"}, "message": "Rustfmt the test.", "tree": {"sha": "9c476d9536bd43a551d5b3203b6f41dbd1031dc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c476d9536bd43a551d5b3203b6f41dbd1031dc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b04bf8a51480c05fc9984476a78f07b927f2672f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b04bf8a51480c05fc9984476a78f07b927f2672f", "html_url": "https://github.com/rust-lang/rust/commit/b04bf8a51480c05fc9984476a78f07b927f2672f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b04bf8a51480c05fc9984476a78f07b927f2672f/comments", "author": null, "committer": null, "parents": [{"sha": "f21197f081048e383ff10427216db7867b746832", "url": "https://api.github.com/repos/rust-lang/rust/commits/f21197f081048e383ff10427216db7867b746832", "html_url": "https://github.com/rust-lang/rust/commit/f21197f081048e383ff10427216db7867b746832"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "50aa6fee2f8763241c51c67e1b554c6f0ac0c4c9", "filename": "tests/run-pass/concurrency/thread_locals.rs", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b04bf8a51480c05fc9984476a78f07b927f2672f/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04bf8a51480c05fc9984476a78f07b927f2672f/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs?ref=b04bf8a51480c05fc9984476a78f07b927f2672f", "patch": "@@ -17,7 +17,6 @@ struct Sender(*mut u8);\n unsafe impl Send for Sender {}\n \n fn main() {\n-\n     let ptr = unsafe {\n         let x = get_a_ref();\n         *x = 5;\n@@ -26,31 +25,28 @@ fn main() {\n         C = 25;\n         Sender(&mut A)\n     };\n-    \n-    thread::spawn(move || {\n-        unsafe {\n-            assert_eq!(*ptr.0, 5);\n-            assert_eq!(A, 0);\n-            assert_eq!(B, 0);\n-            assert_eq!(C, 25);\n-            B = 14;\n-            C = 24;\n-            let y = get_a_ref();\n-            assert_eq!(*y, 0);\n-            *y = 4;\n-            assert_eq!(*ptr.0, 5);\n-            assert_eq!(A, 4);\n-            assert_eq!(*get_a_ref(), 4);\n-            \n-        }\n-    }).join().unwrap();\n+\n+    thread::spawn(move || unsafe {\n+        assert_eq!(*ptr.0, 5);\n+        assert_eq!(A, 0);\n+        assert_eq!(B, 0);\n+        assert_eq!(C, 25);\n+        B = 14;\n+        C = 24;\n+        let y = get_a_ref();\n+        assert_eq!(*y, 0);\n+        *y = 4;\n+        assert_eq!(*ptr.0, 5);\n+        assert_eq!(A, 4);\n+        assert_eq!(*get_a_ref(), 4);\n+    })\n+    .join()\n+    .unwrap();\n \n     unsafe {\n         assert_eq!(*get_a_ref(), 5);\n         assert_eq!(A, 5);\n         assert_eq!(B, 15);\n         assert_eq!(C, 24);\n     }\n-    \n }\n-"}]}