{"sha": "9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkYzlmMzQwY2NmMzdiY2NkZDZhZWMwZTBmNDQyMzhkMjJmYTZkN2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-09-17T02:52:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-17T02:52:53Z"}, "message": "Auto merge of #36468 - michaelwoerister:collect-vtable-drop-glue, r=eddyb\n\ntrans: Let the collector find drop-glue for all vtables, not just VTableImpl.\n\nThis fixes #36260. So far, the collector has only recorded drop-glue for insertion into a vtable if the vtable was for an impl. But there's actually no reason why it shouldn't do just the same for closure vtables, afaict.\n\nr? @eddyb\ncc @rust-lang/compiler", "tree": {"sha": "0ee013636b95efed89f55d217bb843452548a947", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee013636b95efed89f55d217bb843452548a947"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "html_url": "https://github.com/rust-lang/rust/commit/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4037fc47682ba3aa02656b3bfca962c28965936", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4037fc47682ba3aa02656b3bfca962c28965936", "html_url": "https://github.com/rust-lang/rust/commit/d4037fc47682ba3aa02656b3bfca962c28965936"}, {"sha": "1b3a588f55c84d4fc36f4889f4c7ef7357ad471a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b3a588f55c84d4fc36f4889f4c7ef7357ad471a", "html_url": "https://github.com/rust-lang/rust/commit/1b3a588f55c84d4fc36f4889f4c7ef7357ad471a"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "a58de71ca41ed2e8247af47ea0e094f67e359ad1", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "patch": "@@ -497,7 +497,7 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                                                           self.output);\n                 }\n             }\n-            mir::Rvalue::Box(_) => {\n+            mir::Rvalue::Box(..) => {\n                 let exchange_malloc_fn_def_id =\n                     self.scx\n                         .tcx()\n@@ -1072,15 +1072,16 @@ fn create_trans_items_for_vtable_methods<'a, 'tcx>(scx: &SharedCrateContext<'a,\n                         });\n \n                     output.extend(items);\n-\n-                    // Also add the destructor\n-                    let dg_type = glue::get_drop_glue_type(scx.tcx(),\n-                                                           trait_ref.self_ty());\n-                    output.push(TransItem::DropGlue(DropGlueKind::Ty(dg_type)));\n                 }\n                 _ => { /* */ }\n             }\n         }\n+\n+        // Also add the destructor\n+        let dg_type = glue::get_drop_glue_type(scx.tcx(), impl_ty);\n+        if glue::type_needs_drop(scx.tcx(), dg_type) {\n+            output.push(TransItem::DropGlue(DropGlueKind::Ty(dg_type)));\n+        }\n     }\n }\n "}, {"sha": "b77252512200103aad028b238058dfe6c4934eec", "filename": "src/test/codegen-units/item-collection/instantiation-through-vtable.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs?ref=9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "patch": "@@ -40,5 +40,3 @@ fn main() {\n     //~ TRANS_ITEM fn instantiation_through_vtable::{{impl}}[0]::bar[0]<u64>\n     let _ = &s1 as &Trait;\n }\n-\n-//~ TRANS_ITEM drop-glue i8"}, {"sha": "45ba441bc8ba6066bef2f85c6eed8fbd37de471c", "filename": "src/test/codegen-units/item-collection/unsizing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funsizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funsizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funsizing.rs?ref=9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "patch": "@@ -78,5 +78,3 @@ fn main()\n     //~ TRANS_ITEM fn unsizing::{{impl}}[3]::foo[0]\n     let _wrapper_sized = wrapper_sized as Wrapper<Trait>;\n }\n-\n-//~ TRANS_ITEM drop-glue i8"}, {"sha": "ee5e97cd9c212dc8f7e10d1aa52ae9504f4b76bf", "filename": "src/test/codegen-units/partitioning/vtable-through-const.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs?ref=9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "patch": "@@ -89,5 +89,3 @@ fn main() {\n     //~ TRANS_ITEM fn vtable_through_const::mod1[0]::id[0]<char> @@ vtable_through_const[Internal]\n     mod1::ID_CHAR('x');\n }\n-\n-//~ TRANS_ITEM drop-glue i8"}, {"sha": "08dbbb5c9fe13ef412083973be201d34f31058fa", "filename": "src/test/run-pass/issue36260.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Ftest%2Frun-pass%2Fissue36260.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f/src%2Ftest%2Frun-pass%2Fissue36260.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue36260.rs?ref=9dc9f340ccf37bccdd6aec0e0f44238d22fa6d7f", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Make sure this compiles without getting a linker error because of missing\n+// drop-glue because the collector missed adding drop-glue for the closure:\n+\n+fn create_fn() -> Box<Fn()> {\n+    let text = String::new();\n+\n+    Box::new(move || { let _ = &text; })\n+}\n+\n+fn main() {\n+    let _ = create_fn();\n+}"}]}