{"sha": "447f23c71b1bedc8ba363eeeb0c24affc79f89a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0N2YyM2M3MWIxYmVkYzhiYTM2M2VlZWIwYzI0YWZmYzc5Zjg5YTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-06T08:13:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-06T08:13:30Z"}, "message": "fmt", "tree": {"sha": "92820141d4f759782c0537b3569c5b833500e3c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92820141d4f759782c0537b3569c5b833500e3c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/447f23c71b1bedc8ba363eeeb0c24affc79f89a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/447f23c71b1bedc8ba363eeeb0c24affc79f89a0", "html_url": "https://github.com/rust-lang/rust/commit/447f23c71b1bedc8ba363eeeb0c24affc79f89a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/447f23c71b1bedc8ba363eeeb0c24affc79f89a0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "340267525c9bfdd0b7bdca51f4a36e7857a05b25", "url": "https://api.github.com/repos/rust-lang/rust/commits/340267525c9bfdd0b7bdca51f4a36e7857a05b25", "html_url": "https://github.com/rust-lang/rust/commit/340267525c9bfdd0b7bdca51f4a36e7857a05b25"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "0b92817c9728e450ff8d98918b2faf26ebe81f91", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447f23c71b1bedc8ba363eeeb0c24affc79f89a0/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447f23c71b1bedc8ba363eeeb0c24affc79f89a0/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=447f23c71b1bedc8ba363eeeb0c24affc79f89a0", "patch": "@@ -518,9 +518,7 @@ impl Stacks {\n             ) => (extra.global_base_ptr(id), Permission::SharedReadWrite),\n             // Heap allocations we only track precisely when raw pointers are tagged, for now.\n             MemoryKind::Machine(\n-                MiriMemoryKind::Rust\n-                | MiriMemoryKind::C\n-                | MiriMemoryKind::WinHeap,\n+                MiriMemoryKind::Rust | MiriMemoryKind::C | MiriMemoryKind::WinHeap,\n             ) => {\n                 let tag =\n                     if extra.track_raw { Tag::Tagged(extra.new_ptr()) } else { Tag::Untagged };"}]}