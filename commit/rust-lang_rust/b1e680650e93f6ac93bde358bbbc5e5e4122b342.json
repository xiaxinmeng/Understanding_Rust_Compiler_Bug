{"sha": "b1e680650e93f6ac93bde358bbbc5e5e4122b342", "node_id": "C_kwDOAAsO6NoAKGIxZTY4MDY1MGU5M2Y2YWM5M2JkZTM1OGJiYmM1ZTVlNDEyMmIzNDI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-03T16:37:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-03T16:37:44Z"}, "message": "Rollup merge of #105200 - cjgillot:issue-104562, r=compiler-errors\n\nRemove useless filter in unused extern crate check.\n\nFixes https://github.com/rust-lang/rust/issues/104562", "tree": {"sha": "00983877a3a10a0db357a05f6707d1ab6424f94e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00983877a3a10a0db357a05f6707d1ab6424f94e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1e680650e93f6ac93bde358bbbc5e5e4122b342", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJji3tYCRBK7hj4Ov3rIwAAk/gIALNc90B1yrdhuGpzGiSJ7s1O\nwMHQ1tf1YY7VzEKEXqFIAeHnvrR9N9suMOx0vzvjVvhbiVvh0KE8dQlhuMYUxhaB\noogfXSZmgp121TQ08U/R2Tp60lvCrqBrP69qDyyOuxNBxEV7RfwcJ+eWbsrYyiVT\n/NfLM407nwGuI+uV2IjK20EQ9B69IBqptd2gDa9dIUgm5GoYFELgA6yWgJm/jU2r\nGOAxFc+AHfmGj5rFUn6haVrY3O0lR+h8Jz55crcQvtLX5jrjxth34dJcHfzipYoo\n/DArjBhdUIh0aRzSqBORpc8FQjUjfaxbvbzX+J67P0ZWQyxgKT3BuIeYpAV1Wg4=\n=fB9d\n-----END PGP SIGNATURE-----\n", "payload": "tree 00983877a3a10a0db357a05f6707d1ab6424f94e\nparent ed9a21eb0c1b18b1b108351f3154dfff432a4e3b\nparent 59cc6cd4acd2e9ccbdbc8e78c26d2ac9e0b00f89\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670085464 +0100\ncommitter GitHub <noreply@github.com> 1670085464 +0100\n\nRollup merge of #105200 - cjgillot:issue-104562, r=compiler-errors\n\nRemove useless filter in unused extern crate check.\n\nFixes https://github.com/rust-lang/rust/issues/104562\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e680650e93f6ac93bde358bbbc5e5e4122b342", "html_url": "https://github.com/rust-lang/rust/commit/b1e680650e93f6ac93bde358bbbc5e5e4122b342", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1e680650e93f6ac93bde358bbbc5e5e4122b342/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9a21eb0c1b18b1b108351f3154dfff432a4e3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed9a21eb0c1b18b1b108351f3154dfff432a4e3b", "html_url": "https://github.com/rust-lang/rust/commit/ed9a21eb0c1b18b1b108351f3154dfff432a4e3b"}, {"sha": "59cc6cd4acd2e9ccbdbc8e78c26d2ac9e0b00f89", "url": "https://api.github.com/repos/rust-lang/rust/commits/59cc6cd4acd2e9ccbdbc8e78c26d2ac9e0b00f89", "html_url": "https://github.com/rust-lang/rust/commit/59cc6cd4acd2e9ccbdbc8e78c26d2ac9e0b00f89"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "5749b04783ce4ff8c7608e83771a3754471fffe4", "filename": "compiler/rustc_hir_analysis/src/check_unused.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b1e680650e93f6ac93bde358bbbc5e5e4122b342/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e680650e93f6ac93bde358bbbc5e5e4122b342/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck_unused.rs?ref=b1e680650e93f6ac93bde358bbbc5e5e4122b342", "patch": "@@ -56,25 +56,6 @@ fn unused_crates_lint(tcx: TyCtxt<'_>) {\n     let unused_extern_crates: FxHashMap<LocalDefId, Span> = tcx\n         .maybe_unused_extern_crates(())\n         .iter()\n-        .filter(|&&(def_id, _)| {\n-            // The `def_id` here actually was calculated during resolution (at least\n-            // at the time of this writing) and is being shipped to us via a side\n-            // channel of the tcx. There may have been extra expansion phases,\n-            // however, which ended up removing the `def_id` *after* expansion.\n-            //\n-            // As a result we need to verify that `def_id` is indeed still valid for\n-            // our AST and actually present in the HIR map. If it's not there then\n-            // there's safely nothing to warn about, and otherwise we carry on with\n-            // our execution.\n-            //\n-            // Note that if we carry through to the `extern_mod_stmt_cnum` query\n-            // below it'll cause a panic because `def_id` is actually bogus at this\n-            // point in time otherwise.\n-            if tcx.hir().find(tcx.hir().local_def_id_to_hir_id(def_id)).is_none() {\n-                return false;\n-            }\n-            true\n-        })\n         .filter(|&&(def_id, _)| {\n             tcx.extern_mod_stmt_cnum(def_id).map_or(true, |cnum| {\n                 !tcx.is_compiler_builtins(cnum)"}, {"sha": "70dcd5413f1ee0b2a445e4cedd3058f9326b881f", "filename": "src/test/ui/attributes/unused-item-in-attr.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b1e680650e93f6ac93bde358bbbc5e5e4122b342/src%2Ftest%2Fui%2Fattributes%2Funused-item-in-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e680650e93f6ac93bde358bbbc5e5e4122b342/src%2Ftest%2Fui%2Fattributes%2Funused-item-in-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Funused-item-in-attr.rs?ref=b1e680650e93f6ac93bde358bbbc5e5e4122b342", "patch": "@@ -0,0 +1,6 @@\n+#[w = { extern crate alloc; }]\n+//~^ ERROR unexpected expression: `{\n+//~| ERROR cannot find attribute `w` in this scope\n+fn f() {}\n+\n+fn main() {}"}, {"sha": "92a8f58582136a05f808b34a53f3d5d0b1d7a89d", "filename": "src/test/ui/attributes/unused-item-in-attr.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b1e680650e93f6ac93bde358bbbc5e5e4122b342/src%2Ftest%2Fui%2Fattributes%2Funused-item-in-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1e680650e93f6ac93bde358bbbc5e5e4122b342/src%2Ftest%2Fui%2Fattributes%2Funused-item-in-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Funused-item-in-attr.stderr?ref=b1e680650e93f6ac93bde358bbbc5e5e4122b342", "patch": "@@ -0,0 +1,16 @@\n+error: unexpected expression: `{\n+           extern crate alloc;\n+       }`\n+  --> $DIR/unused-item-in-attr.rs:1:7\n+   |\n+LL | #[w = { extern crate alloc; }]\n+   |       ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: cannot find attribute `w` in this scope\n+  --> $DIR/unused-item-in-attr.rs:1:3\n+   |\n+LL | #[w = { extern crate alloc; }]\n+   |   ^\n+\n+error: aborting due to 2 previous errors\n+"}]}