{"sha": "84933761f0b20012c25ede433da945f8ac942b3d", "node_id": "C_kwDOAAsO6NoAKDg0OTMzNzYxZjBiMjAwMTJjMjVlZGU0MzNkYTk0NWY4YWM5NDJiM2Q", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-09-25T04:39:05Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-09-25T13:15:29Z"}, "message": "Fix panic when displaying the backtrace of failing integration tests", "tree": {"sha": "efc1cd9f694f546ed5a26c49799dc437d4380ecd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efc1cd9f694f546ed5a26c49799dc437d4380ecd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84933761f0b20012c25ede433da945f8ac942b3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84933761f0b20012c25ede433da945f8ac942b3d", "html_url": "https://github.com/rust-lang/rust/commit/84933761f0b20012c25ede433da945f8ac942b3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84933761f0b20012c25ede433da945f8ac942b3d/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b1ad17e5c9931097240b659e9f596985ad5ba45", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b1ad17e5c9931097240b659e9f596985ad5ba45", "html_url": "https://github.com/rust-lang/rust/commit/8b1ad17e5c9931097240b659e9f596985ad5ba45"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "818ff70b33f4d0b04cac4d75206b08ede5671c1f", "filename": "tests/integration.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/84933761f0b20012c25ede433da945f8ac942b3d/tests%2Fintegration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84933761f0b20012c25ede433da945f8ac942b3d/tests%2Fintegration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fintegration.rs?ref=84933761f0b20012c25ede433da945f8ac942b3d", "patch": "@@ -6,6 +6,11 @@ use std::env;\n use std::ffi::OsStr;\n use std::process::Command;\n \n+#[cfg(not(windows))]\n+const CARGO_CLIPPY: &str = \"cargo-clippy\";\n+#[cfg(windows)]\n+const CARGO_CLIPPY: &str = \"cargo-clippy.exe\";\n+\n #[cfg_attr(feature = \"integration\", test)]\n fn integration_test() {\n     let repo_name = env::var(\"INTEGRATION\").expect(\"`INTEGRATION` var not set\");\n@@ -31,7 +36,7 @@ fn integration_test() {\n \n     let root_dir = std::path::PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n     let target_dir = std::path::Path::new(&root_dir).join(\"target\");\n-    let clippy_binary = target_dir.join(env!(\"PROFILE\")).join(\"cargo-clippy\");\n+    let clippy_binary = target_dir.join(env!(\"PROFILE\")).join(CARGO_CLIPPY);\n \n     let output = Command::new(clippy_binary)\n         .current_dir(repo_dir)\n@@ -51,17 +56,15 @@ fn integration_test() {\n         .expect(\"unable to run clippy\");\n \n     let stderr = String::from_utf8_lossy(&output.stderr);\n-    if stderr.contains(\"internal compiler error\") {\n-        let backtrace_start = stderr\n-            .find(\"thread 'rustc' panicked at\")\n-            .expect(\"start of backtrace not found\");\n-        let backtrace_end = stderr\n-            .rfind(\"error: internal compiler error\")\n+    if let Some(backtrace_start) = stderr.find(\"error: internal compiler error\") {\n+        static BACKTRACE_END_MSG: &str = \"end of query stack\";\n+        let backtrace_end = stderr[backtrace_start..]\n+            .find(BACKTRACE_END_MSG)\n             .expect(\"end of backtrace not found\");\n \n         panic!(\n             \"internal compiler error\\nBacktrace:\\n\\n{}\",\n-            &stderr[backtrace_start..backtrace_end]\n+            &stderr[backtrace_start..backtrace_start + backtrace_end + BACKTRACE_END_MSG.len()]\n         );\n     } else if stderr.contains(\"query stack during panic\") {\n         panic!(\"query stack during panic in the output\");"}]}