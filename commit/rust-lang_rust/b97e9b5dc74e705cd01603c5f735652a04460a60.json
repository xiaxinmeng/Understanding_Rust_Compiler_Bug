{"sha": "b97e9b5dc74e705cd01603c5f735652a04460a60", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5N2U5YjVkYzc0ZTcwNWNkMDE2MDNjNWY3MzU2NTJhMDQ0NjBhNjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-18T03:21:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-18T03:21:22Z"}, "message": "Auto merge of #75654 - tmandry:rollup-ej0oezi, r=tmandry\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #75548 (librustc_metadata::locator: Properly detect file type.)\n - #75603 (Use more compatible out-implib style)\n - #75637 (update stacker to 0.1.11 to unbreak build for wasm32-unknown-unknown)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "239513efd2c6134eba5b84e7923b298f40a4090a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/239513efd2c6134eba5b84e7923b298f40a4090a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b97e9b5dc74e705cd01603c5f735652a04460a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b97e9b5dc74e705cd01603c5f735652a04460a60", "html_url": "https://github.com/rust-lang/rust/commit/b97e9b5dc74e705cd01603c5f735652a04460a60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b97e9b5dc74e705cd01603c5f735652a04460a60/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7dcae03c9c014362cdefb7ec605bb35804a6a94", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7dcae03c9c014362cdefb7ec605bb35804a6a94", "html_url": "https://github.com/rust-lang/rust/commit/d7dcae03c9c014362cdefb7ec605bb35804a6a94"}, {"sha": "14c0e4c9ea9b7c69df61f76f308af3133330366f", "url": "https://api.github.com/repos/rust-lang/rust/commits/14c0e4c9ea9b7c69df61f76f308af3133330366f", "html_url": "https://github.com/rust-lang/rust/commit/14c0e4c9ea9b7c69df61f76f308af3133330366f"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "5c767817ae56318cd309fd5e4d64d29c2b590b67", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b97e9b5dc74e705cd01603c5f735652a04460a60/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b97e9b5dc74e705cd01603c5f735652a04460a60/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b97e9b5dc74e705cd01603c5f735652a04460a60", "patch": "@@ -4345,9 +4345,9 @@ checksum = \"ffbc596e092fe5f598b12ef46cc03754085ac2f4d8c739ad61c4ae266cc3b3fa\"\n \n [[package]]\n name = \"stacker\"\n-version = \"0.1.9\"\n+version = \"0.1.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"72dd941b456e1c006d6b9f27c526d5b69281288aeea8cba82c19d3843d8ccdd2\"\n+checksum = \"a92bc346006ae78c539d6ab2cf1a1532bc657b8339c464877a990ec82073c66f\"\n dependencies = [\n  \"cc\",\n  \"cfg-if\","}, {"sha": "0ddf8bd316fcd4255a6d676b74f6ff0bdac5331e", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b97e9b5dc74e705cd01603c5f735652a04460a60/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97e9b5dc74e705cd01603c5f735652a04460a60/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=b97e9b5dc74e705cd01603c5f735652a04460a60", "patch": "@@ -266,7 +266,7 @@ impl<'a> GccLinker<'a> {\n                 if let Some(implib_name) = implib_name {\n                     let implib = out_filename.parent().map(|dir| dir.join(&implib_name));\n                     if let Some(implib) = implib {\n-                        self.linker_arg(&format!(\"--out-implib,{}\", (*implib).to_str().unwrap()));\n+                        self.linker_arg(&format!(\"--out-implib={}\", (*implib).to_str().unwrap()));\n                     }\n                 }\n             }"}, {"sha": "988bb733f9fb77e38412021864205ec9e34b0616", "filename": "src/librustc_data_structures/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b97e9b5dc74e705cd01603c5f735652a04460a60/src%2Flibrustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b97e9b5dc74e705cd01603c5f735652a04460a60/src%2Flibrustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2FCargo.toml?ref=b97e9b5dc74e705cd01603c5f735652a04460a60", "patch": "@@ -30,7 +30,7 @@ rustc_index = { path = \"../librustc_index\", package = \"rustc_index\" }\n bitflags = \"1.2.1\"\n measureme = \"0.7.1\"\n libc = \"0.2\"\n-stacker = \"0.1.9\"\n+stacker = \"0.1.11\"\n tempfile = \"3.0.5\"\n \n [dependencies.parking_lot]"}, {"sha": "8fa14a44f527e48fa6fef3071314e03cfad4a840", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b97e9b5dc74e705cd01603c5f735652a04460a60/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97e9b5dc74e705cd01603c5f735652a04460a60/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=b97e9b5dc74e705cd01603c5f735652a04460a60", "patch": "@@ -685,13 +685,19 @@ impl<'a> CrateLocator<'a> {\n                     && file.ends_with(&self.target.options.dll_suffix)\n             {\n                 // Make sure there's at most one rlib and at most one dylib.\n-                let loc = fs::canonicalize(&loc).unwrap_or_else(|_| loc.clone());\n+                // Note to take care and match against the non-canonicalized name:\n+                // some systems save build artifacts into content-addressed stores\n+                // that do not preserve extensions, and then link to them using\n+                // e.g. symbolic links. If we canonicalize too early, we resolve\n+                // the symlink, the file type is lost and we might treat rlibs and\n+                // rmetas as dylibs.\n+                let loc_canon = fs::canonicalize(&loc).unwrap_or_else(|_| loc.clone());\n                 if loc.file_name().unwrap().to_str().unwrap().ends_with(\".rlib\") {\n-                    rlibs.insert(loc, PathKind::ExternFlag);\n+                    rlibs.insert(loc_canon, PathKind::ExternFlag);\n                 } else if loc.file_name().unwrap().to_str().unwrap().ends_with(\".rmeta\") {\n-                    rmetas.insert(loc, PathKind::ExternFlag);\n+                    rmetas.insert(loc_canon, PathKind::ExternFlag);\n                 } else {\n-                    dylibs.insert(loc, PathKind::ExternFlag);\n+                    dylibs.insert(loc_canon, PathKind::ExternFlag);\n                 }\n             } else {\n                 self.rejected_via_filename"}]}