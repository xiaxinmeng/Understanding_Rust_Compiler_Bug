{"sha": "7aa39204886b9072c50973f7f1c15325196ff89a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYTM5MjA0ODg2YjkwNzJjNTA5NzNmN2YxYzE1MzI1MTk2ZmY4OWE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-01-19T09:28:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-19T09:28:03Z"}, "message": "Rollup merge of #81166 - RalfJung:debug-assert-comments, r=Mark-Simulacrum\n\nremove some outdated comments regarding  debug assertions\n\nhttps://github.com/rust-lang/rust/pull/79684 removed those debug assertions.", "tree": {"sha": "7f48bbaa7ed5798ea4f6d9f2c3f54250d1c581c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f48bbaa7ed5798ea4f6d9f2c3f54250d1c581c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7aa39204886b9072c50973f7f1c15325196ff89a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgBqYjCRBK7hj4Ov3rIwAAdHIIAGmcBdtNkMr1U/qPOK/qxXqR\n6c/qewZEBG7hmphx3hTy//eLdFREiaJs7535JMI+8ZmynVvY0QInt80oDJKeiApG\npOHPR9l8s+2f9tGp4HFdGOajE1COUqupteOpnd4ZgH3So3axUwrthYedxy2jlZDd\nfYXGv+82txRp+MXtVoj1XfdJ/4jshMwVRWqBbOOs0ZWHWFX2NJHLj28tt0Nha8F2\niZMcAJ4nG5kW1LBjwtdpz0Uu/PsIswfctamd7yqUwq/Oun9nLOi6c3ojqyhH92bW\ndniNqP6TqGEpmy2BQVJFpjUyD/G9jJwf7ATACYHnFTgM+C85pG8VOxw1cXvTibY=\n=0SMy\n-----END PGP SIGNATURE-----\n", "payload": "tree 7f48bbaa7ed5798ea4f6d9f2c3f54250d1c581c5\nparent 2f1d5c4d40bca9ffd5c347bc9b3ec854bf115d77\nparent 712d0650615f206b140d6060bfeb02fb379087ec\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1611048483 +0100\ncommitter GitHub <noreply@github.com> 1611048483 +0100\n\nRollup merge of #81166 - RalfJung:debug-assert-comments, r=Mark-Simulacrum\n\nremove some outdated comments regarding  debug assertions\n\nhttps://github.com/rust-lang/rust/pull/79684 removed those debug assertions.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7aa39204886b9072c50973f7f1c15325196ff89a", "html_url": "https://github.com/rust-lang/rust/commit/7aa39204886b9072c50973f7f1c15325196ff89a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7aa39204886b9072c50973f7f1c15325196ff89a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f1d5c4d40bca9ffd5c347bc9b3ec854bf115d77", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f1d5c4d40bca9ffd5c347bc9b3ec854bf115d77", "html_url": "https://github.com/rust-lang/rust/commit/2f1d5c4d40bca9ffd5c347bc9b3ec854bf115d77"}, {"sha": "712d0650615f206b140d6060bfeb02fb379087ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/712d0650615f206b140d6060bfeb02fb379087ec", "html_url": "https://github.com/rust-lang/rust/commit/712d0650615f206b140d6060bfeb02fb379087ec"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "8d901c08f91a36cd966b81b7401578ffaee10cd9", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7aa39204886b9072c50973f7f1c15325196ff89a/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aa39204886b9072c50973f7f1c15325196ff89a/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=7aa39204886b9072c50973f7f1c15325196ff89a", "patch": "@@ -687,7 +687,6 @@ pub unsafe fn replace<T>(dst: *mut T, mut src: T) -> T {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n pub const unsafe fn read<T>(src: *const T) -> T {\n-    // `copy_nonoverlapping` takes care of debug_assert.\n     let mut tmp = MaybeUninit::<T>::uninit();\n     // SAFETY: the caller must guarantee that `src` is valid for reads.\n     // `src` cannot overlap `tmp` because `tmp` was just allocated on\n@@ -787,7 +786,6 @@ pub const unsafe fn read<T>(src: *const T) -> T {\n #[stable(feature = \"ptr_unaligned\", since = \"1.17.0\")]\n #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n pub const unsafe fn read_unaligned<T>(src: *const T) -> T {\n-    // `copy_nonoverlapping` takes care of debug_assert.\n     let mut tmp = MaybeUninit::<T>::uninit();\n     // SAFETY: the caller must guarantee that `src` is valid for reads.\n     // `src` cannot overlap `tmp` because `tmp` was just allocated on\n@@ -988,7 +986,6 @@ pub unsafe fn write_unaligned<T>(dst: *mut T, src: T) {\n     // `dst` cannot overlap `src` because the caller has mutable access\n     // to `dst` while `src` is owned by this function.\n     unsafe {\n-        // `copy_nonoverlapping` takes care of debug_assert.\n         copy_nonoverlapping(&src as *const T as *const u8, dst as *mut u8, mem::size_of::<T>());\n     }\n     mem::forget(src);"}]}