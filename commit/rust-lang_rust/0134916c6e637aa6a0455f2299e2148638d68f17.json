{"sha": "0134916c6e637aa6a0455f2299e2148638d68f17", "node_id": "C_kwDOAAsO6NoAKDAxMzQ5MTZjNmU2MzdhYTZhMDQ1NWYyMjk5ZTIxNDg2MzhkNjhmMTc", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-19T09:31:16Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-19T09:31:16Z"}, "message": "Sync from rust 4507fdaaa27ea2fb59a41df2ce7d1f290da53dae", "tree": {"sha": "830b080122caf0ae3107f525c1b2cafea7a7fa46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/830b080122caf0ae3107f525c1b2cafea7a7fa46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0134916c6e637aa6a0455f2299e2148638d68f17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0134916c6e637aa6a0455f2299e2148638d68f17", "html_url": "https://github.com/rust-lang/rust/commit/0134916c6e637aa6a0455f2299e2148638d68f17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0134916c6e637aa6a0455f2299e2148638d68f17/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb12ad73975d380bc69f68a57de94069a3eb0dd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb12ad73975d380bc69f68a57de94069a3eb0dd6", "html_url": "https://github.com/rust-lang/rust/commit/cb12ad73975d380bc69f68a57de94069a3eb0dd6"}, {"sha": "8fe8e533009adda27754abf05af6ed623f7e9c86", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe8e533009adda27754abf05af6ed623f7e9c86", "html_url": "https://github.com/rust-lang/rust/commit/8fe8e533009adda27754abf05af6ed623f7e9c86"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7b23041eee719adf9aef82886fb3d590b6ffec38", "filename": "src/codegen_i128.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0134916c6e637aa6a0455f2299e2148638d68f17/src%2Fcodegen_i128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0134916c6e637aa6a0455f2299e2148638d68f17/src%2Fcodegen_i128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcodegen_i128.rs?ref=0134916c6e637aa6a0455f2299e2148638d68f17", "patch": "@@ -41,7 +41,7 @@ pub(crate) fn maybe_codegen<'tcx>(\n                     fx.layout_of(if is_signed { fx.tcx.types.i128 } else { fx.tcx.types.u128 }),\n                 ))\n             } else {\n-                let out_ty = fx.tcx.mk_tup([lhs.layout().ty, fx.tcx.types.bool].iter());\n+                let out_ty = fx.tcx.intern_tup(&[lhs.layout().ty, fx.tcx.types.bool]);\n                 let oflow = CPlace::new_stack_slot(fx, fx.layout_of(fx.tcx.types.i32));\n                 let lhs = lhs.load_scalar(fx);\n                 let rhs = rhs.load_scalar(fx);\n@@ -63,7 +63,7 @@ pub(crate) fn maybe_codegen<'tcx>(\n         }\n         BinOp::Add | BinOp::Sub | BinOp::Mul => {\n             assert!(checked);\n-            let out_ty = fx.tcx.mk_tup([lhs.layout().ty, fx.tcx.types.bool].iter());\n+            let out_ty = fx.tcx.intern_tup(&[lhs.layout().ty, fx.tcx.types.bool]);\n             let out_place = CPlace::new_stack_slot(fx, fx.layout_of(out_ty));\n             let param_types = vec![\n                 AbiParam::special(fx.pointer_type, ArgumentPurpose::StructReturn),"}, {"sha": "cbac2e667652b9a66f09735228be2bd253c5f695", "filename": "src/intrinsics/llvm_x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0134916c6e637aa6a0455f2299e2148638d68f17/src%2Fintrinsics%2Fllvm_x86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0134916c6e637aa6a0455f2299e2148638d68f17/src%2Fintrinsics%2Fllvm_x86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fllvm_x86.rs?ref=0134916c6e637aa6a0455f2299e2148638d68f17", "patch": "@@ -191,7 +191,7 @@ fn llvm_add_sub<'tcx>(\n     // carry0 | carry1 -> carry or borrow respectively\n     let cb_out = fx.bcx.ins().bor(cb0, cb1);\n \n-    let layout = fx.layout_of(fx.tcx.mk_tup([fx.tcx.types.u8, fx.tcx.types.u64].iter()));\n+    let layout = fx.layout_of(fx.tcx.intern_tup(&[fx.tcx.types.u8, fx.tcx.types.u64]));\n     let val = CValue::by_val_pair(cb_out, c, layout);\n     ret.write_cvalue(fx, val);\n }"}, {"sha": "bb37a3612c17829573d4d9420e7b83694184092f", "filename": "src/main_shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0134916c6e637aa6a0455f2299e2148638d68f17/src%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0134916c6e637aa6a0455f2299e2148638d68f17/src%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain_shim.rs?ref=0134916c6e637aa6a0455f2299e2148638d68f17", "patch": "@@ -119,7 +119,7 @@ pub(crate) fn maybe_create_entry_wrapper(\n                     tcx,\n                     ParamEnv::reveal_all(),\n                     report.def_id,\n-                    tcx.mk_substs([GenericArg::from(main_ret_ty)].iter()),\n+                    tcx.intern_substs(&[GenericArg::from(main_ret_ty)]),\n                 )\n                 .unwrap()\n                 .unwrap()"}, {"sha": "7103289a93e2c0cff5d865cca78c4234b2bb5c1b", "filename": "src/num.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0134916c6e637aa6a0455f2299e2148638d68f17/src%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0134916c6e637aa6a0455f2299e2148638d68f17/src%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnum.rs?ref=0134916c6e637aa6a0455f2299e2148638d68f17", "patch": "@@ -289,7 +289,7 @@ pub(crate) fn codegen_checked_int_binop<'tcx>(\n         _ => bug!(\"binop {:?} on checked int/uint lhs: {:?} rhs: {:?}\", bin_op, in_lhs, in_rhs),\n     };\n \n-    let out_layout = fx.layout_of(fx.tcx.mk_tup([in_lhs.layout().ty, fx.tcx.types.bool].iter()));\n+    let out_layout = fx.layout_of(fx.tcx.intern_tup(&[in_lhs.layout().ty, fx.tcx.types.bool]));\n     CValue::by_val_pair(res, has_overflow, out_layout)\n }\n "}]}