{"sha": "1b27b69e5a5464484e63f7eb324376c901fd3692", "node_id": "C_kwDOAAsO6NoAKDFiMjdiNjllNWE1NDY0NDg0ZTYzZjdlYjMyNDM3NmM5MDFmZDM2OTI", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-12-07T09:54:35Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-12-07T09:54:35Z"}, "message": "don't allocate strings when str is enought for using as key", "tree": {"sha": "77dd5006e47a350ff118fa57fe481c226917dfc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77dd5006e47a350ff118fa57fe481c226917dfc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b27b69e5a5464484e63f7eb324376c901fd3692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b27b69e5a5464484e63f7eb324376c901fd3692", "html_url": "https://github.com/rust-lang/rust/commit/1b27b69e5a5464484e63f7eb324376c901fd3692", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b27b69e5a5464484e63f7eb324376c901fd3692/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2af5c6562deed1878000e791f2cb21b981a53959", "url": "https://api.github.com/repos/rust-lang/rust/commits/2af5c6562deed1878000e791f2cb21b981a53959", "html_url": "https://github.com/rust-lang/rust/commit/2af5c6562deed1878000e791f2cb21b981a53959"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "cb9df3c33898fe4b8bb3428b98b24057cea9f12c", "filename": "compiler/rustc_serialize/src/json.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1b27b69e5a5464484e63f7eb324376c901fd3692/compiler%2Frustc_serialize%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b27b69e5a5464484e63f7eb324376c901fd3692/compiler%2Frustc_serialize%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fjson.rs?ref=1b27b69e5a5464484e63f7eb324376c901fd3692", "patch": "@@ -2320,12 +2320,12 @@ impl crate::Decoder for Decoder {\n         let name = match self.pop() {\n             Json::String(s) => s,\n             Json::Object(mut o) => {\n-                let n = match o.remove(&\"variant\".to_owned()) {\n+                let n = match o.remove(\"variant\") {\n                     Some(Json::String(s)) => s,\n                     Some(val) => return Err(ExpectedError(\"String\".to_owned(), val.to_string())),\n                     None => return Err(MissingFieldError(\"variant\".to_owned())),\n                 };\n-                match o.remove(&\"fields\".to_string()) {\n+                match o.remove(\"fields\") {\n                     Some(Json::Array(l)) => {\n                         self.stack.extend(l.into_iter().rev());\n                     }\n@@ -2365,7 +2365,7 @@ impl crate::Decoder for Decoder {\n     {\n         let mut obj = expect!(self.pop(), Object)?;\n \n-        let value = match obj.remove(&name.to_string()) {\n+        let value = match obj.remove(name) {\n             None => {\n                 // Add a Null and try to parse it as an Option<_>\n                 // to get None as a default value."}]}