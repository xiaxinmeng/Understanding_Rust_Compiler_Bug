{"sha": "7a3e450df45d2e40cff0ab6a4928084d6f61e993", "node_id": "C_kwDOAAsO6NoAKDdhM2U0NTBkZjQ1ZDJlNDBjZmYwYWI2YTQ5MjgwODRkNmY2MWU5OTM", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-09-23T19:15:51Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-09-23T21:45:17Z"}, "message": "Add tests to verify the drop order of fields in fully captured upvars", "tree": {"sha": "6e6521f7e3af4226902984655f733727f4efff88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e6521f7e3af4226902984655f733727f4efff88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a3e450df45d2e40cff0ab6a4928084d6f61e993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a3e450df45d2e40cff0ab6a4928084d6f61e993", "html_url": "https://github.com/rust-lang/rust/commit/7a3e450df45d2e40cff0ab6a4928084d6f61e993", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a3e450df45d2e40cff0ab6a4928084d6f61e993/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15d9ba0133ce0b35348e1c8367afe00aec841ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/15d9ba0133ce0b35348e1c8367afe00aec841ffa", "html_url": "https://github.com/rust-lang/rust/commit/15d9ba0133ce0b35348e1c8367afe00aec841ffa"}], "stats": {"total": 360, "additions": 360, "deletions": 0}, "files": [{"sha": "ecc265208c56e8389b4c70e0e877ce483b0b0dcb", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order.rs", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.rs?ref=7a3e450df45d2e40cff0ab6a4928084d6f61e993", "patch": "@@ -0,0 +1,98 @@\n+// edition:2021\n+\n+// Tests that in cases where we individually capture all the fields of a type,\n+// we still drop them in the order they would have been dropped in the 2018 edition.\n+\n+#![feature(rustc_attrs)]\n+\n+#[derive(Debug)]\n+struct HasDrop;\n+impl Drop for HasDrop {\n+    fn drop(&mut self) {\n+        println!(\"dropped\");\n+    }\n+}\n+\n+fn test_one() {\n+    let a = (HasDrop, HasDrop);\n+    let b = (HasDrop, HasDrop);\n+\n+    let c = #[rustc_capture_analysis]\n+    //~^ ERROR: attributes on expressions are experimental\n+    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n+    || {\n+        //~^ ERROR: First Pass analysis includes:\n+        //~| ERROR: Min Capture analysis includes:\n+        println!(\"{:?}\", a.0);\n+        //~^ NOTE: Capturing a[(0, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+        println!(\"{:?}\", a.1);\n+        //~^ NOTE: Capturing a[(1, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+\n+        println!(\"{:?}\", b.0);\n+        //~^ NOTE: Capturing b[(0, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+        println!(\"{:?}\", b.1);\n+        //~^ NOTE: Capturing b[(1, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+    };\n+}\n+\n+fn test_two() {\n+    let a = (HasDrop, HasDrop);\n+    let b = (HasDrop, HasDrop);\n+\n+    let c = #[rustc_capture_analysis]\n+    //~^ ERROR: attributes on expressions are experimental\n+    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n+    || {\n+        //~^ ERROR: First Pass analysis includes:\n+        //~| ERROR: Min Capture analysis includes:\n+        println!(\"{:?}\", a.1);\n+        //~^ NOTE: Capturing a[(1, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+        println!(\"{:?}\", a.0);\n+        //~^ NOTE: Capturing a[(0, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+\n+        println!(\"{:?}\", b.1);\n+        //~^ NOTE: Capturing b[(1, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+        println!(\"{:?}\", b.0);\n+        //~^ NOTE: Capturing b[(0, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+    };\n+}\n+\n+fn test_three() {\n+    let a = (HasDrop, HasDrop);\n+    let b = (HasDrop, HasDrop);\n+\n+    let c = #[rustc_capture_analysis]\n+    //~^ ERROR: attributes on expressions are experimental\n+    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n+    || {\n+        //~^ ERROR: First Pass analysis includes:\n+        //~| ERROR: Min Capture analysis includes:\n+        println!(\"{:?}\", b.1);\n+        //~^ NOTE: Capturing b[(1, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+        println!(\"{:?}\", a.1);\n+        //~^ NOTE: Capturing a[(1, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+        println!(\"{:?}\", a.0);\n+        //~^ NOTE: Capturing a[(0, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+\n+        println!(\"{:?}\", b.0);\n+        //~^ NOTE: Capturing b[(0, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+    };\n+}\n+\n+fn main() {\n+    test_one();\n+    test_two();\n+    test_three(); \n+}"}, {"sha": "7fdeab6a74d711e2ddf8c9de8299113f400c755b", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order.stderr", "status": "added", "additions": 228, "deletions": 0, "changes": 228, "blob_url": "https://github.com/rust-lang/rust/blob/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr?ref=7a3e450df45d2e40cff0ab6a4928084d6f61e993", "patch": "@@ -0,0 +1,228 @@\n+error[E0658]: attributes on expressions are experimental\n+  --> $DIR/preserve_field_drop_order.rs:20:13\n+   |\n+LL |     let c = #[rustc_capture_analysis]\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n+\n+error[E0658]: attributes on expressions are experimental\n+  --> $DIR/preserve_field_drop_order.rs:46:13\n+   |\n+LL |     let c = #[rustc_capture_analysis]\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n+\n+error[E0658]: attributes on expressions are experimental\n+  --> $DIR/preserve_field_drop_order.rs:72:13\n+   |\n+LL |     let c = #[rustc_capture_analysis]\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n+\n+error: First Pass analysis includes:\n+  --> $DIR/preserve_field_drop_order.rs:23:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         println!(\"{:?}\", a.0);\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Capturing a[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:26:26\n+   |\n+LL |         println!(\"{:?}\", a.0);\n+   |                          ^^^\n+note: Capturing a[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:29:26\n+   |\n+LL |         println!(\"{:?}\", a.1);\n+   |                          ^^^\n+note: Capturing b[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:33:26\n+   |\n+LL |         println!(\"{:?}\", b.0);\n+   |                          ^^^\n+note: Capturing b[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:36:26\n+   |\n+LL |         println!(\"{:?}\", b.1);\n+   |                          ^^^\n+\n+error: Min Capture analysis includes:\n+  --> $DIR/preserve_field_drop_order.rs:23:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         println!(\"{:?}\", a.0);\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Min Capture a[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:26:26\n+   |\n+LL |         println!(\"{:?}\", a.0);\n+   |                          ^^^\n+note: Min Capture a[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:29:26\n+   |\n+LL |         println!(\"{:?}\", a.1);\n+   |                          ^^^\n+note: Min Capture b[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:33:26\n+   |\n+LL |         println!(\"{:?}\", b.0);\n+   |                          ^^^\n+note: Min Capture b[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:36:26\n+   |\n+LL |         println!(\"{:?}\", b.1);\n+   |                          ^^^\n+\n+error: First Pass analysis includes:\n+  --> $DIR/preserve_field_drop_order.rs:49:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         println!(\"{:?}\", a.1);\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Capturing a[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:52:26\n+   |\n+LL |         println!(\"{:?}\", a.1);\n+   |                          ^^^\n+note: Capturing a[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:55:26\n+   |\n+LL |         println!(\"{:?}\", a.0);\n+   |                          ^^^\n+note: Capturing b[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:59:26\n+   |\n+LL |         println!(\"{:?}\", b.1);\n+   |                          ^^^\n+note: Capturing b[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:62:26\n+   |\n+LL |         println!(\"{:?}\", b.0);\n+   |                          ^^^\n+\n+error: Min Capture analysis includes:\n+  --> $DIR/preserve_field_drop_order.rs:49:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         println!(\"{:?}\", a.1);\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Min Capture a[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:52:26\n+   |\n+LL |         println!(\"{:?}\", a.1);\n+   |                          ^^^\n+note: Min Capture a[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:55:26\n+   |\n+LL |         println!(\"{:?}\", a.0);\n+   |                          ^^^\n+note: Min Capture b[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:59:26\n+   |\n+LL |         println!(\"{:?}\", b.1);\n+   |                          ^^^\n+note: Min Capture b[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:62:26\n+   |\n+LL |         println!(\"{:?}\", b.0);\n+   |                          ^^^\n+\n+error: First Pass analysis includes:\n+  --> $DIR/preserve_field_drop_order.rs:75:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         println!(\"{:?}\", b.1);\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Capturing b[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:78:26\n+   |\n+LL |         println!(\"{:?}\", b.1);\n+   |                          ^^^\n+note: Capturing a[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:81:26\n+   |\n+LL |         println!(\"{:?}\", a.1);\n+   |                          ^^^\n+note: Capturing a[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:84:26\n+   |\n+LL |         println!(\"{:?}\", a.0);\n+   |                          ^^^\n+note: Capturing b[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:88:26\n+   |\n+LL |         println!(\"{:?}\", b.0);\n+   |                          ^^^\n+\n+error: Min Capture analysis includes:\n+  --> $DIR/preserve_field_drop_order.rs:75:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         println!(\"{:?}\", b.1);\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Min Capture b[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:78:26\n+   |\n+LL |         println!(\"{:?}\", b.1);\n+   |                          ^^^\n+note: Min Capture b[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:88:26\n+   |\n+LL |         println!(\"{:?}\", b.0);\n+   |                          ^^^\n+note: Min Capture a[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:81:26\n+   |\n+LL |         println!(\"{:?}\", a.1);\n+   |                          ^^^\n+note: Min Capture a[(0, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:84:26\n+   |\n+LL |         println!(\"{:?}\", a.0);\n+   |                          ^^^\n+\n+error: aborting due to 9 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "bc5c92122c6c8c9209b38833411ef6f9fb158883", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order2.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.rs?ref=7a3e450df45d2e40cff0ab6a4928084d6f61e993", "patch": "@@ -0,0 +1,28 @@\n+// run-pass\n+// check-run-results\n+// revisions: twenty_eighteen twenty_twentyone\n+// [twenty_eighteen]compile-flags: --edition 2018\n+// [twenty_twentyone]compile-flags: --edition 2021\n+\n+#[derive(Debug)]\n+struct Dropable(String);\n+\n+impl Drop for Dropable {\n+    fn drop(&mut self) {\n+        println!(\"Dropping {}\", self.0)\n+    }\n+}\n+\n+#[derive(Debug)]\n+struct A {\n+    x: Dropable,\n+    y: Dropable,\n+}\n+\n+fn main() {\n+    let a = A { x: Dropable(format!(\"x\")), y: Dropable(format!(\"y\")) };\n+\n+    let c = move || println!(\"{:?} {:?}\", a.y, a.x);\n+    \n+    c();\n+}"}, {"sha": "e393169651817c65446230819daf3bcbb2d6206e", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order2.twenty_eighteen.run.stdout", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_eighteen.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_eighteen.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_eighteen.run.stdout?ref=7a3e450df45d2e40cff0ab6a4928084d6f61e993", "patch": "@@ -0,0 +1,3 @@\n+Dropable(\"y\") Dropable(\"x\")\n+Dropping x\n+Dropping y"}, {"sha": "90b1200fd08d1ec9e1e5b07f370223bbeb593ad0", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order2.twenty_twentyone.run.stdout", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/7a3e450df45d2e40cff0ab6a4928084d6f61e993/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout?ref=7a3e450df45d2e40cff0ab6a4928084d6f61e993", "patch": "@@ -0,0 +1,3 @@\n+Dropable(\"y\") Dropable(\"x\")\n+Dropping y\n+Dropping x"}]}