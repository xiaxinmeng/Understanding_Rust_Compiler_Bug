{"sha": "f647c11121bcaff1a9006b7d04cd52331f1be869", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDdjMTExMjFiY2FmZjFhOTAwNmI3ZDA0Y2Q1MjMzMWYxYmU4Njk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-06T22:35:48Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:43:21Z"}, "message": "simplify parse_fn_block_decl", "tree": {"sha": "e5475032499d14194bb37d1ea3c15c999bb191d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5475032499d14194bb37d1ea3c15c999bb191d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f647c11121bcaff1a9006b7d04cd52331f1be869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f647c11121bcaff1a9006b7d04cd52331f1be869", "html_url": "https://github.com/rust-lang/rust/commit/f647c11121bcaff1a9006b7d04cd52331f1be869", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f647c11121bcaff1a9006b7d04cd52331f1be869/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6f91a4223974cdafed923658e38f7952638bb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6f91a4223974cdafed923658e38f7952638bb7", "html_url": "https://github.com/rust-lang/rust/commit/ad6f91a4223974cdafed923658e38f7952638bb7"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "acc7bfd3f8a1b67ce47ae9306518042a6f119578", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f647c11121bcaff1a9006b7d04cd52331f1be869/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f647c11121bcaff1a9006b7d04cd52331f1be869/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=f647c11121bcaff1a9006b7d04cd52331f1be869", "patch": "@@ -1360,26 +1360,24 @@ impl<'a> Parser<'a> {\n \n     /// Parses the `|arg, arg|` header of a closure.\n     fn parse_fn_block_decl(&mut self) -> PResult<'a, P<FnDecl>> {\n-        let inputs_captures = {\n-            if self.eat(&token::OrOr) {\n-                Vec::new()\n-            } else {\n-                self.expect(&token::BinOp(token::Or))?;\n-                let args = self\n-                    .parse_seq_to_before_tokens(\n-                        &[&token::BinOp(token::Or), &token::OrOr],\n-                        SeqSep::trailing_allowed(token::Comma),\n-                        TokenExpectType::NoExpect,\n-                        |p| p.parse_fn_block_param(),\n-                    )?\n-                    .0;\n-                self.expect_or()?;\n-                args\n-            }\n+        let inputs = if self.eat(&token::OrOr) {\n+            Vec::new()\n+        } else {\n+            self.expect(&token::BinOp(token::Or))?;\n+            let args = self\n+                .parse_seq_to_before_tokens(\n+                    &[&token::BinOp(token::Or), &token::OrOr],\n+                    SeqSep::trailing_allowed(token::Comma),\n+                    TokenExpectType::NoExpect,\n+                    |p| p.parse_fn_block_param(),\n+                )?\n+                .0;\n+            self.expect_or()?;\n+            args\n         };\n         let output = self.parse_ret_ty(true, true)?;\n \n-        Ok(P(FnDecl { inputs: inputs_captures, output }))\n+        Ok(P(FnDecl { inputs, output }))\n     }\n \n     /// Parses a parameter in a closure header (e.g., `|arg, arg|`)."}]}