{"sha": "2eb248dd16f6727a2cdaa66f3f529a53bbcc54c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYjI0OGRkMTZmNjcyN2EyY2RhYTY2ZjNmNTI5YTUzYmJjYzU0Yzc=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-10-31T08:34:01Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-10-31T08:34:01Z"}, "message": "Fix formatting", "tree": {"sha": "070d57d6d5e3b0b6a782fa66a9f7215ebf8a9c9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/070d57d6d5e3b0b6a782fa66a9f7215ebf8a9c9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2eb248dd16f6727a2cdaa66f3f529a53bbcc54c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2eb248dd16f6727a2cdaa66f3f529a53bbcc54c7", "html_url": "https://github.com/rust-lang/rust/commit/2eb248dd16f6727a2cdaa66f3f529a53bbcc54c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2eb248dd16f6727a2cdaa66f3f529a53bbcc54c7/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d73371663ec67558700b43a55d606caa71a7f71", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d73371663ec67558700b43a55d606caa71a7f71", "html_url": "https://github.com/rust-lang/rust/commit/9d73371663ec67558700b43a55d606caa71a7f71"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "344ed02361de959ccf6270fb0d0b2775dc1bd9a7", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2eb248dd16f6727a2cdaa66f3f529a53bbcc54c7/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb248dd16f6727a2cdaa66f3f529a53bbcc54c7/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=2eb248dd16f6727a2cdaa66f3f529a53bbcc54c7", "patch": "@@ -518,7 +518,10 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n                 self.possible_borrower.add(borrowed.local, lhs);\n             },\n             other => {\n-                if ContainsRegion.visit_ty(place.ty(&self.body.local_decls, self.cx.tcx).ty).is_continue() {\n+                if ContainsRegion\n+                    .visit_ty(place.ty(&self.body.local_decls, self.cx.tcx).ty)\n+                    .is_continue()\n+                {\n                     return;\n                 }\n                 rvalue_locals(other, |rhs| {"}]}