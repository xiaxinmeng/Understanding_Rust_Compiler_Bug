{"sha": "c93c771e71ca96a94ab7d13b37103cb57be22df5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5M2M3NzFlNzFjYTk2YTk0YWI3ZDEzYjM3MTAzY2I1N2JlMjJkZjU=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-11-13T13:53:34Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-11-13T13:53:34Z"}, "message": "Fix span issue with generic method calls", "tree": {"sha": "9fe02a135947d2df33ea0688d3ab4403ffbc179a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fe02a135947d2df33ea0688d3ab4403ffbc179a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c93c771e71ca96a94ab7d13b37103cb57be22df5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c93c771e71ca96a94ab7d13b37103cb57be22df5", "html_url": "https://github.com/rust-lang/rust/commit/c93c771e71ca96a94ab7d13b37103cb57be22df5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c93c771e71ca96a94ab7d13b37103cb57be22df5/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "686ec52b504c7c7a991a98053d6518cd005ede80", "url": "https://api.github.com/repos/rust-lang/rust/commits/686ec52b504c7c7a991a98053d6518cd005ede80", "html_url": "https://github.com/rust-lang/rust/commit/686ec52b504c7c7a991a98053d6518cd005ede80"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "9c5b37d35cbfac6fe68a785e434073a9fdfefa67", "filename": "src/chains.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c93c771e71ca96a94ab7d13b37103cb57be22df5/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93c771e71ca96a94ab7d13b37103cb57be22df5/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=c93c771e71ca96a94ab7d13b37103cb57be22df5", "patch": "@@ -217,15 +217,17 @@ fn rewrite_method_call(method_name: ast::Ident,\n                        width: usize,\n                        offset: Indent)\n                        -> Option<String> {\n-    let type_str = if types.is_empty() {\n-        String::new()\n+    let (lo, type_str) = if types.is_empty() {\n+        (args[0].span.hi, String::new())\n     } else {\n         let type_list = types.iter().map(|ty| pprust::ty_to_string(ty)).collect::<Vec<_>>();\n-        format!(\"::<{}>\", type_list.join(\", \"))\n+\n+        (types.last().unwrap().span.hi,\n+         format!(\"::<{}>\", type_list.join(\", \")))\n     };\n \n     let callee_str = format!(\".{}{}\", method_name, type_str);\n-    let span = mk_sp(args[0].span.hi, span.hi);\n+    let span = mk_sp(lo, span.hi);\n \n     rewrite_call(context, &callee_str, &args[1..], span, width, offset)\n }"}, {"sha": "e7d9783a51cc0aa7ee2e9c9cac35ec4a30917db1", "filename": "tests/source/chains.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c93c771e71ca96a94ab7d13b37103cb57be22df5/tests%2Fsource%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93c771e71ca96a94ab7d13b37103cb57be22df5/tests%2Fsource%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fchains.rs?ref=c93c771e71ca96a94ab7d13b37103cb57be22df5", "patch": "@@ -106,3 +106,9 @@ fn is_replaced_content() -> bool {\n     constellat.send(ConstellationMsg::ViewportConstrained(\n             self.id, constraints)).unwrap();\n }\n+\n+fn issue587() {\n+    a.b::<()>(c);\n+\n+    std::mem::transmute(dl.symbol::<()>(\"init\").unwrap())\n+}"}, {"sha": "d8fca6d40fe294f22fcc8d777696262f4166429d", "filename": "tests/target/chains.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c93c771e71ca96a94ab7d13b37103cb57be22df5/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93c771e71ca96a94ab7d13b37103cb57be22df5/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=c93c771e71ca96a94ab7d13b37103cb57be22df5", "patch": "@@ -132,3 +132,9 @@ fn is_replaced_content() -> bool {\n     constellat.send(ConstellationMsg::ViewportConstrained(self.id, constraints))\n               .unwrap();\n }\n+\n+fn issue587() {\n+    a.b::<()>(c);\n+\n+    std::mem::transmute(dl.symbol::<()>(\"init\").unwrap())\n+}"}]}