{"sha": "d78b4a93509174bed2080b627d74c956d2654366", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3OGI0YTkzNTA5MTc0YmVkMjA4MGI2MjdkNzRjOTU2ZDI2NTQzNjY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-02T02:09:36Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-02T02:09:36Z"}, "message": "change compile_flags to eagerly split into a vector on whitespace", "tree": {"sha": "52075505e49e922e41b7ab3211cb886b95f85db0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52075505e49e922e41b7ab3211cb886b95f85db0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d78b4a93509174bed2080b627d74c956d2654366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d78b4a93509174bed2080b627d74c956d2654366", "html_url": "https://github.com/rust-lang/rust/commit/d78b4a93509174bed2080b627d74c956d2654366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d78b4a93509174bed2080b627d74c956d2654366/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c76125742a3d7ab9f6ad9fbaba8174f959adc18b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c76125742a3d7ab9f6ad9fbaba8174f959adc18b", "html_url": "https://github.com/rust-lang/rust/commit/c76125742a3d7ab9f6ad9fbaba8174f959adc18b"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "26567e12ea778f1ee4f3c285bd7cb48774afe906", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d78b4a93509174bed2080b627d74c956d2654366/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d78b4a93509174bed2080b627d74c956d2654366/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=d78b4a93509174bed2080b627d74c956d2654366", "patch": "@@ -22,7 +22,7 @@ pub struct TestProps {\n     // Lines that should be expected, in order, on standard out\n     pub error_patterns: Vec<String> ,\n     // Extra flags to pass to the compiler\n-    pub compile_flags: Option<String>,\n+    pub compile_flags: Vec<String>,\n     // Extra flags to pass when the compiled code is run (such as --bench)\n     pub run_flags: Option<String>,\n     // If present, the name of a file that this test should match when\n@@ -57,7 +57,6 @@ pub fn load_props(testfile: &Path) -> TestProps {\n     let error_patterns = Vec::new();\n     let aux_builds = Vec::new();\n     let exec_env = Vec::new();\n-    let compile_flags = None;\n     let run_flags = None;\n     let pp_exact = None;\n     let check_lines = Vec::new();\n@@ -70,7 +69,7 @@ pub fn load_props(testfile: &Path) -> TestProps {\n     let forbid_output = Vec::new();\n     let mut props = TestProps {\n         error_patterns: error_patterns,\n-        compile_flags: compile_flags,\n+        compile_flags: vec![],\n         run_flags: run_flags,\n         pp_exact: pp_exact,\n         aux_builds: aux_builds,\n@@ -95,8 +94,11 @@ pub fn load_props_into(props: &mut TestProps, testfile: &Path) {\n             props.error_patterns.push(ep);\n         }\n \n-        if props.compile_flags.is_none() {\n-            props.compile_flags = parse_compile_flags(ln);\n+        if let Some(flags) = parse_compile_flags(ln) {\n+            props.compile_flags.extend(\n+                flags\n+                    .split_whitespace()\n+                    .map(|s| s.to_owned()));\n         }\n \n         if props.run_flags.is_none() {"}, {"sha": "4ebfce8638121575605ef14f23e01d4c9126eba2", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d78b4a93509174bed2080b627d74c956d2654366/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d78b4a93509174bed2080b627d74c956d2654366/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=d78b4a93509174bed2080b627d74c956d2654366", "patch": "@@ -275,7 +275,7 @@ fn run_pretty_test(config: &Config, props: &TestProps, testpaths: &TestPaths) {\n                             \"-L\".to_owned(),\n                             aux_dir.to_str().unwrap().to_owned());\n         args.extend(split_maybe_args(&config.target_rustcflags));\n-        args.extend(split_maybe_args(&props.compile_flags));\n+        args.extend(props.compile_flags.iter().cloned());\n         return ProcArgs {\n             prog: config.rustc_path.to_str().unwrap().to_owned(),\n             args: args,\n@@ -322,7 +322,7 @@ actual:\\n\\\n                             \"-L\".to_owned(),\n                             aux_dir.to_str().unwrap().to_owned());\n         args.extend(split_maybe_args(&config.target_rustcflags));\n-        args.extend(split_maybe_args(&props.compile_flags));\n+        args.extend(props.compile_flags.iter().cloned());\n         // FIXME (#9639): This needs to handle non-utf8 paths\n         return ProcArgs {\n             prog: config.rustc_path.to_str().unwrap().to_owned(),\n@@ -1184,7 +1184,7 @@ fn document(config: &Config,\n                         \"-o\".to_owned(),\n                         out_dir.to_str().unwrap().to_owned(),\n                         testpaths.file.to_str().unwrap().to_owned()];\n-    args.extend(split_maybe_args(&props.compile_flags));\n+    args.extend(props.compile_flags.iter().cloned());\n     let args = ProcArgs {\n         prog: config.rustdoc_path.to_str().unwrap().to_owned(),\n         args: args,\n@@ -1369,7 +1369,7 @@ fn make_compile_args<F>(config: &Config,\n     } else {\n         args.extend(split_maybe_args(&config.target_rustcflags));\n     }\n-    args.extend(split_maybe_args(&props.compile_flags));\n+    args.extend(props.compile_flags.iter().cloned());\n     return ProcArgs {\n         prog: config.rustc_path.to_str().unwrap().to_owned(),\n         args: args,"}]}