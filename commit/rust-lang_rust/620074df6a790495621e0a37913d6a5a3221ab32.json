{"sha": "620074df6a790495621e0a37913d6a5a3221ab32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMDA3NGRmNmE3OTA0OTU2MjFlMGEzNzkxM2Q2YTVhMzIyMWFiMzI=", "commit": {"author": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2017-01-28T21:53:06Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2017-02-07T20:35:54Z"}, "message": "reference: clarify #[cfg] section", "tree": {"sha": "a2686af8c479785344459fe1b1dcd9cb840f2f6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2686af8c479785344459fe1b1dcd9cb840f2f6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/620074df6a790495621e0a37913d6a5a3221ab32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/620074df6a790495621e0a37913d6a5a3221ab32", "html_url": "https://github.com/rust-lang/rust/commit/620074df6a790495621e0a37913d6a5a3221ab32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/620074df6a790495621e0a37913d6a5a3221ab32/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a797b6e2feb1c6cd60868a2d3b59029a0ca5df64", "url": "https://api.github.com/repos/rust-lang/rust/commits/a797b6e2feb1c6cd60868a2d3b59029a0ca5df64", "html_url": "https://github.com/rust-lang/rust/commit/a797b6e2feb1c6cd60868a2d3b59029a0ca5df64"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "97ff1c7598f52010c5101b0d3297c96504bc77e1", "filename": "src/doc/reference.md", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/620074df6a790495621e0a37913d6a5a3221ab32/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/620074df6a790495621e0a37913d6a5a3221ab32/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=620074df6a790495621e0a37913d6a5a3221ab32", "patch": "@@ -2114,10 +2114,15 @@ Sometimes one wants to have different compiler outputs from the same code,\n depending on build target, such as targeted operating system, or to enable\n release builds.\n \n-There are two kinds of configuration options, one that is either defined or not\n-(`#[cfg(foo)]`), and the other that contains a string that can be checked\n-against (`#[cfg(bar = \"baz\")]`). Currently, only compiler-defined configuration\n-options can have the latter form.\n+Configuration options are boolean (on or off) and are named either with a\n+single identifier (e.g. `foo`) or an identifier and a string (e.g. `foo = \"bar\"`;\n+the quotes are required and spaces around the `=` are unimportant). Note that\n+similarly-named options, such as `foo`, `foo=\"bar\"` and `foo=\"baz\"` may each be set\n+or unset independently.\n+\n+Configuration options are either provided by the compiler or passed in on the\n+command line using `--cfg` (e.g. `rustc main.rs --cfg foo --cfg 'bar=\"baz\"'`).\n+Rust code then checks for their presence using the `#[cfg(...)]` attribute:\n \n ```\n // The function is only included in the build when compiling for OSX\n@@ -2196,7 +2201,10 @@ You can also set another attribute based on a `cfg` variable with `cfg_attr`:\n #[cfg_attr(a, b)]\n ```\n \n-Will be the same as `#[b]` if `a` is set by `cfg`, and nothing otherwise.\n+This is the same as `#[b]` if `a` is set by `cfg`, and nothing otherwise.\n+\n+Lastly, configuration options can be used in expressions by invoking the `cfg!`\n+macro: `cfg!(a)` evaluates to `true` if `a` is set, and `false` otherwise.\n \n ### Lint check attributes\n "}]}