{"sha": "ddd811601e7e65764d372e840f166dfc94f71498", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZDgxMTYwMWU3ZTY1NzY0ZDM3MmU4NDBmMTY2ZGZjOTRmNzE0OTg=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-31T18:39:19Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-31T18:39:19Z"}, "message": "Small refactor", "tree": {"sha": "698f5c436c77dd80ddd46a563d5ec660015158e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/698f5c436c77dd80ddd46a563d5ec660015158e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddd811601e7e65764d372e840f166dfc94f71498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd811601e7e65764d372e840f166dfc94f71498", "html_url": "https://github.com/rust-lang/rust/commit/ddd811601e7e65764d372e840f166dfc94f71498", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddd811601e7e65764d372e840f166dfc94f71498/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4bdc1495142a7497a92388570defd519c22dcb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4bdc1495142a7497a92388570defd519c22dcb1", "html_url": "https://github.com/rust-lang/rust/commit/e4bdc1495142a7497a92388570defd519c22dcb1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9650b8781748a2ca8c66a07715959cd68e849965", "filename": "crates/ra_syntax/src/syntax_node.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ddd811601e7e65764d372e840f166dfc94f71498/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddd811601e7e65764d372e840f166dfc94f71498/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs?ref=ddd811601e7e65764d372e840f166dfc94f71498", "patch": "@@ -48,11 +48,11 @@ impl SyntaxTreeBuilder {\n \n     pub fn finish(self) -> Parse<SyntaxNode> {\n         let (green, errors) = self.finish_raw();\n-        let node = SyntaxNode::new_root(green);\n         if cfg!(debug_assertions) {\n+            let node = SyntaxNode::new_root(green.clone());\n             crate::validation::validate_block_structure(&node);\n         }\n-        Parse::new(node.green().clone(), errors)\n+        Parse::new(green, errors)\n     }\n \n     pub fn token(&mut self, kind: SyntaxKind, text: SmolStr) {"}]}