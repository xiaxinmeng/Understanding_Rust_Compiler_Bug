{"sha": "3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYmEyOThmMTQxOWQ4YzNjYTk3NjZhYWVhY2RjNGM1MDg3YzBmNDQ=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-05-01T16:13:22Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-05-01T18:39:59Z"}, "message": "Fixed build for latest nightly", "tree": {"sha": "c280e3419dd80e997d90dbfd4e9711dbae66b459", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c280e3419dd80e997d90dbfd4e9711dbae66b459"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "html_url": "https://github.com/rust-lang/rust/commit/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f48fed70d4447445b586a35c4ae88683542ffc72", "url": "https://api.github.com/repos/rust-lang/rust/commits/f48fed70d4447445b586a35c4ae88683542ffc72", "html_url": "https://github.com/rust-lang/rust/commit/f48fed70d4447445b586a35c4ae88683542ffc72"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "c763802bec9d92809809d563c7b85ca213e48567", "filename": "miri/fn_call.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "patch": "@@ -3,8 +3,8 @@ use rustc::ty::layout::{self, Align, LayoutOf};\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::mir;\n use rustc_data_structures::indexed_vec::Idx;\n+use rustc_target::spec::abi::Abi;\n use syntax::attr;\n-use syntax::abi::Abi;\n use syntax::codemap::Span;\n \n use std::mem;\n@@ -49,7 +49,7 @@ fn write_discriminant_value<'a, 'mir, 'tcx: 'a + 'mir>(\n                 if variant_index != dataful_variant {\n                     let (niche_dest, niche) =\n                         ecx.place_field(dest, mir::Field::new(0), layout)?;\n-                    let niche_value = ((variant_index - niche_variants.start) as u128)\n+                    let niche_value = ((variant_index - niche_variants.start()) as u128)\n                         .wrapping_add(niche_start);\n                     ecx.write_primval(niche_dest, PrimVal::Bytes(niche_value), niche.ty)?;\n                 }\n@@ -177,7 +177,7 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n         let attrs = self.tcx.get_attrs(def_id);\n         let link_name = match attr::first_attr_value_str_by_name(&attrs, \"link_name\") {\n             Some(name) => name.as_str(),\n-            None => self.tcx.item_name(def_id),\n+            None => self.tcx.item_name(def_id).as_str(),\n         };\n \n         match &link_name[..] {"}, {"sha": "b941e65437d9bb57f330917e05aaa647ce6557d2", "filename": "miri/helpers.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fhelpers.rs?ref=3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "patch": "@@ -1,7 +1,9 @@\n-use super::{Pointer, EvalResult, PrimVal, EvalContext};\n+use mir;\n use rustc::ty::Ty;\n use rustc::ty::layout::LayoutOf;\n \n+use super::{Pointer, EvalResult, PrimVal, EvalContext};\n+\n pub trait EvalContextExt<'tcx> {\n     fn wrapping_pointer_offset(\n         &self,\n@@ -63,7 +65,7 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n             }\n             Ok(ptr)\n         } else {\n-            err!(OverflowingMath)\n+            err!(Overflow(mir::BinOp::Mul))\n         };\n     }\n }"}, {"sha": "9f4950e8c9fb788918dff0cc03dc8f7f9e4bce04", "filename": "miri/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fintrinsic.rs?ref=3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "patch": "@@ -29,7 +29,7 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n     ) -> EvalResult<'tcx> {\n         let substs = instance.substs;\n \n-        let intrinsic_name = &self.tcx.item_name(instance.def_id())[..];\n+        let intrinsic_name = &self.tcx.item_name(instance.def_id()).as_str()[..];\n         match intrinsic_name {\n             \"align_offset\" => {\n                 // FIXME: return a real value in case the target allocation has an"}, {"sha": "adc19ba0a7ae2a91846222f53bfd8932ae5ebf68", "filename": "miri/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Flib.rs?ref=3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "patch": "@@ -1,7 +1,8 @@\n #![feature(\n     rustc_private,\n     catch_expr,\n-    inclusive_range_fields\n+    inclusive_range_fields,\n+    inclusive_range_methods,\n )]\n \n #[macro_use]\n@@ -12,6 +13,7 @@ extern crate log;\n extern crate rustc;\n extern crate rustc_mir;\n extern crate rustc_data_structures;\n+extern crate rustc_target;\n extern crate syntax;\n extern crate regex;\n #[macro_use]"}, {"sha": "51b40772139974307921f29a2518240446a496ef", "filename": "miri/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dba298f1419d8c3ca9766aaeacdc4c5087c0f44/miri%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fvalidation.rs?ref=3dba298f1419d8c3ca9766aaeacdc4c5087c0f44", "patch": "@@ -3,7 +3,7 @@ use rustc::hir::Mutability::*;\n use rustc::mir::{self, ValidationOp, ValidationOperand};\n use rustc::mir::interpret::GlobalId;\n use rustc::ty::{self, Ty, TypeFoldable, TyCtxt, Instance};\n-use rustc::ty::layout::LayoutOf;\n+use rustc::ty::layout::{LayoutOf, PrimitiveExt};\n use rustc::ty::subst::{Substs, Subst};\n use rustc::traits::{self, TraitEngine};\n use rustc::infer::InferCtxt;"}]}