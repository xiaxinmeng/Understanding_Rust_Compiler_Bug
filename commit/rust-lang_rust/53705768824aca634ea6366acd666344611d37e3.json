{"sha": "53705768824aca634ea6366acd666344611d37e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNzA1NzY4ODI0YWNhNjM0ZWE2MzY2YWNkNjY2MzQ0NjExZDM3ZTM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-24T12:56:04Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-28T01:22:05Z"}, "message": "fix clippy lint warnings", "tree": {"sha": "80ea3da0ec14ab44e6268f0459117ce8ff32042a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80ea3da0ec14ab44e6268f0459117ce8ff32042a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53705768824aca634ea6366acd666344611d37e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53705768824aca634ea6366acd666344611d37e3", "html_url": "https://github.com/rust-lang/rust/commit/53705768824aca634ea6366acd666344611d37e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53705768824aca634ea6366acd666344611d37e3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b119b6585959b77017d75149075b22927c452207", "url": "https://api.github.com/repos/rust-lang/rust/commits/b119b6585959b77017d75149075b22927c452207", "html_url": "https://github.com/rust-lang/rust/commit/b119b6585959b77017d75149075b22927c452207"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "493bd3bf56bb62f600cd3be8c5bf52f3501f1d9d", "filename": "tests/lint_message_convention.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/53705768824aca634ea6366acd666344611d37e3/tests%2Flint_message_convention.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53705768824aca634ea6366acd666344611d37e3/tests%2Flint_message_convention.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Flint_message_convention.rs?ref=53705768824aca634ea6366acd666344611d37e3", "patch": "@@ -1,3 +1,4 @@\n+use std::ffi::OsStr;\n use std::path::PathBuf;\n \n use regex::RegexSet;\n@@ -47,7 +48,7 @@ impl Message {\n             .filter(|line| regex_set.matches(line).matched_any())\n             // ignore exceptions\n             .filter(|line| !exceptions_set.matches(line).matched_any())\n-            .map(|s| s.to_owned())\n+            .map(ToOwned::to_owned)\n             .collect::<Vec<String>>();\n \n         Message { path, bad_lines }\n@@ -71,17 +72,16 @@ fn lint_message_convention() {\n \n     // gather all .stderr files\n     let tests = test_dirs\n-        .map(|dir| {\n+        .flat_map(|dir| {\n             std::fs::read_dir(dir)\n                 .expect(\"failed to read dir\")\n                 .map(|direntry| direntry.unwrap().path())\n         })\n-        .flatten()\n-        .filter(|file| matches!(file.extension().map(|s| s.to_str()), Some(Some(\"stderr\"))));\n+        .filter(|file| matches!(file.extension().map(OsStr::to_str), Some(Some(\"stderr\"))));\n \n     // get all files that have any \"bad lines\" in them\n     let bad_tests: Vec<Message> = tests\n-        .map(|path| Message::new(path))\n+        .map(Message::new)\n         .filter(|message| !message.bad_lines.is_empty())\n         .collect();\n "}]}