{"sha": "a8834bc46ab948c8978b5fcbe0a7aa4760783338", "node_id": "C_kwDOAAsO6NoAKGE4ODM0YmM0NmFiOTQ4Yzg5NzhiNWZjYmUwYTdhYTQ3NjA3ODMzMzg", "commit": {"author": {"name": "Icxolu", "email": "10486322+Icxolu@users.noreply.github.com", "date": "2023-05-04T20:44:35Z"}, "committer": {"name": "Icxolu", "email": "10486322+Icxolu@users.noreply.github.com", "date": "2023-05-11T20:25:14Z"}, "message": "add lint `manual_next_back`\n\nchecks for manual reverse iteration (`.rev().next()`) of a\n`DoubleEndedIterator`", "tree": {"sha": "96f787fe5fceab4e10c393f1eb9709c45dbd743f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96f787fe5fceab4e10c393f1eb9709c45dbd743f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8834bc46ab948c8978b5fcbe0a7aa4760783338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8834bc46ab948c8978b5fcbe0a7aa4760783338", "html_url": "https://github.com/rust-lang/rust/commit/a8834bc46ab948c8978b5fcbe0a7aa4760783338", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8834bc46ab948c8978b5fcbe0a7aa4760783338/comments", "author": {"login": "Icxolu", "id": 10486322, "node_id": "MDQ6VXNlcjEwNDg2MzIy", "avatar_url": "https://avatars.githubusercontent.com/u/10486322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Icxolu", "html_url": "https://github.com/Icxolu", "followers_url": "https://api.github.com/users/Icxolu/followers", "following_url": "https://api.github.com/users/Icxolu/following{/other_user}", "gists_url": "https://api.github.com/users/Icxolu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Icxolu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Icxolu/subscriptions", "organizations_url": "https://api.github.com/users/Icxolu/orgs", "repos_url": "https://api.github.com/users/Icxolu/repos", "events_url": "https://api.github.com/users/Icxolu/events{/privacy}", "received_events_url": "https://api.github.com/users/Icxolu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Icxolu", "id": 10486322, "node_id": "MDQ6VXNlcjEwNDg2MzIy", "avatar_url": "https://avatars.githubusercontent.com/u/10486322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Icxolu", "html_url": "https://github.com/Icxolu", "followers_url": "https://api.github.com/users/Icxolu/followers", "following_url": "https://api.github.com/users/Icxolu/following{/other_user}", "gists_url": "https://api.github.com/users/Icxolu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Icxolu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Icxolu/subscriptions", "organizations_url": "https://api.github.com/users/Icxolu/orgs", "repos_url": "https://api.github.com/users/Icxolu/repos", "events_url": "https://api.github.com/users/Icxolu/events{/privacy}", "received_events_url": "https://api.github.com/users/Icxolu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c56dd3d4c02bc4be32490988a15fa317dc13a2fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/c56dd3d4c02bc4be32490988a15fa317dc13a2fa", "html_url": "https://github.com/rust-lang/rust/commit/c56dd3d4c02bc4be32490988a15fa317dc13a2fa"}], "stats": {"total": 154, "additions": 154, "deletions": 0}, "files": [{"sha": "4cb937e876664e6ca3c7e0a96f6e4a66531c38f1", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a8834bc46ab948c8978b5fcbe0a7aa4760783338/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8834bc46ab948c8978b5fcbe0a7aa4760783338/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a8834bc46ab948c8978b5fcbe0a7aa4760783338", "patch": "@@ -4785,6 +4785,7 @@ Released 2018-09-13\n [`manual_main_separator_str`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_main_separator_str\n [`manual_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_map\n [`manual_memcpy`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n+[`manual_next_back`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n [`manual_non_exhaustive`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive\n [`manual_ok_or`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_ok_or\n [`manual_range_contains`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains"}, {"sha": "982d5a802f5d38fcc0c1012911b5b5dbc5a30c5f", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a8834bc46ab948c8978b5fcbe0a7aa4760783338/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8834bc46ab948c8978b5fcbe0a7aa4760783338/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=a8834bc46ab948c8978b5fcbe0a7aa4760783338", "patch": "@@ -351,6 +351,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::methods::ITER_WITH_DRAIN_INFO,\n     crate::methods::MANUAL_FILTER_MAP_INFO,\n     crate::methods::MANUAL_FIND_MAP_INFO,\n+    crate::methods::MANUAL_NEXT_BACK_INFO,\n     crate::methods::MANUAL_OK_OR_INFO,\n     crate::methods::MANUAL_SATURATING_ARITHMETIC_INFO,\n     crate::methods::MANUAL_SPLIT_ONCE_INFO,"}, {"sha": "5f3fec53827a9bae6f44e7504b2ea84ad05af633", "filename": "clippy_lints/src/methods/manual_next_back.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/a8834bc46ab948c8978b5fcbe0a7aa4760783338/clippy_lints%2Fsrc%2Fmethods%2Fmanual_next_back.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8834bc46ab948c8978b5fcbe0a7aa4760783338/clippy_lints%2Fsrc%2Fmethods%2Fmanual_next_back.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmanual_next_back.rs?ref=a8834bc46ab948c8978b5fcbe0a7aa4760783338", "patch": "@@ -0,0 +1,38 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_trait_method;\n+use clippy_utils::ty::implements_trait;\n+use rustc_errors::Applicability;\n+use rustc_hir::Expr;\n+use rustc_lint::LateContext;\n+use rustc_span::symbol::sym;\n+\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    expr: &'tcx Expr<'_>,\n+    rev_call: &'tcx Expr<'_>,\n+    rev_recv: &'tcx Expr<'_>,\n+) {\n+    let rev_recv_ty = cx.typeck_results().expr_ty(rev_recv);\n+\n+    // check that the receiver of `rev` implements `DoubleEndedIterator` and\n+    // that `rev` and `next` come from `Iterator`\n+    if cx\n+        .tcx\n+        .get_diagnostic_item(sym::DoubleEndedIterator)\n+        .map_or(false, |double_ended_iterator| {\n+            implements_trait(cx, rev_recv_ty, double_ended_iterator, &[])\n+        })\n+        && is_trait_method(cx, rev_call, sym::Iterator)\n+        && is_trait_method(cx, expr, sym::Iterator)\n+    {\n+        span_lint_and_sugg(\n+            cx,\n+            super::MANUAL_NEXT_BACK,\n+            expr.span.with_lo(rev_recv.span.hi()),\n+            \"manual backwards iteration\",\n+            \"use\",\n+            String::from(\".next_back()\"),\n+            Applicability::MachineApplicable,\n+        );\n+    }\n+}"}, {"sha": "cb86917464b4c4c93b3ae87a7efea03b08ca0feb", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a8834bc46ab948c8978b5fcbe0a7aa4760783338/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8834bc46ab948c8978b5fcbe0a7aa4760783338/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=a8834bc46ab948c8978b5fcbe0a7aa4760783338", "patch": "@@ -45,6 +45,7 @@ mod iter_overeager_cloned;\n mod iter_skip_next;\n mod iter_with_drain;\n mod iterator_step_by_zero;\n+mod manual_next_back;\n mod manual_ok_or;\n mod manual_saturating_arithmetic;\n mod manual_str_repeat;\n@@ -3193,6 +3194,29 @@ declare_clippy_lint! {\n     \"calling `drain` in order to `clear` a container\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for `.rev().next()` on a `DoubleEndedIterator`\n+    ///\n+    /// ### Why is this bad?\n+    /// `.next_back()` is cleaner.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// # let foo = [0; 10];\n+    /// foo.iter().rev().next();\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// # let foo = [0; 10];\n+    /// foo.iter().next_back();\n+    /// ```\n+    #[clippy::version = \"1.71.0\"]\n+    pub MANUAL_NEXT_BACK,\n+    style,\n+    \"manual reverse iteration of `DoubleEndedIterator`\"\n+}\n+\n pub struct Methods {\n     avoid_breaking_exported_api: bool,\n     msrv: Msrv,\n@@ -3321,6 +3345,7 @@ impl_lint_pass!(Methods => [\n     NEEDLESS_COLLECT,\n     SUSPICIOUS_COMMAND_ARG_SPACE,\n     CLEAR_WITH_DRAIN,\n+    MANUAL_NEXT_BACK,\n ]);\n \n /// Extracts a method call name, args, and `Span` of the method name.\n@@ -3677,6 +3702,7 @@ impl Methods {\n                             (\"iter\", []) => iter_next_slice::check(cx, expr, recv2),\n                             (\"skip\", [arg]) => iter_skip_next::check(cx, expr, recv2, arg),\n                             (\"skip_while\", [_]) => skip_while_next::check(cx, expr),\n+                            (\"rev\", [])=> manual_next_back::check(cx, expr, recv, recv2),\n                             _ => {},\n                         }\n                     }"}, {"sha": "e8a47063ad61343a8ed691eedee1ba3e6b8e9b2a", "filename": "tests/ui/manual_next_back.fixed", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a8834bc46ab948c8978b5fcbe0a7aa4760783338/tests%2Fui%2Fmanual_next_back.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a8834bc46ab948c8978b5fcbe0a7aa4760783338/tests%2Fui%2Fmanual_next_back.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_next_back.fixed?ref=a8834bc46ab948c8978b5fcbe0a7aa4760783338", "patch": "@@ -0,0 +1,36 @@\n+//@run-rustfix\n+\n+#![allow(unused)]\n+#![warn(clippy::manual_next_back)]\n+\n+struct FakeIter(std::ops::Range<i32>);\n+\n+impl FakeIter {\n+    fn rev(self) -> Self {\n+        self\n+    }\n+\n+    fn next(&self) {}\n+}\n+\n+impl DoubleEndedIterator for FakeIter {\n+    fn next_back(&mut self) -> Option<Self::Item> {\n+        self.0.next_back()\n+    }\n+}\n+\n+impl Iterator for FakeIter {\n+    type Item = i32;\n+    fn next(&mut self) -> Option<Self::Item> {\n+        self.0.next()\n+    }\n+}\n+\n+fn main() {\n+    // should not lint\n+    FakeIter(0..10).rev().next();\n+\n+    // should lint\n+    let _ = (0..10).next_back().unwrap();\n+    let _ = \"something\".bytes().next_back();\n+}"}, {"sha": "9ec89242241c82ae5d9b5b67aa8408340e6cfcac", "filename": "tests/ui/manual_next_back.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a8834bc46ab948c8978b5fcbe0a7aa4760783338/tests%2Fui%2Fmanual_next_back.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8834bc46ab948c8978b5fcbe0a7aa4760783338/tests%2Fui%2Fmanual_next_back.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_next_back.rs?ref=a8834bc46ab948c8978b5fcbe0a7aa4760783338", "patch": "@@ -0,0 +1,36 @@\n+//@run-rustfix\n+\n+#![allow(unused)]\n+#![warn(clippy::manual_next_back)]\n+\n+struct FakeIter(std::ops::Range<i32>);\n+\n+impl FakeIter {\n+    fn rev(self) -> Self {\n+        self\n+    }\n+\n+    fn next(&self) {}\n+}\n+\n+impl DoubleEndedIterator for FakeIter {\n+    fn next_back(&mut self) -> Option<Self::Item> {\n+        self.0.next_back()\n+    }\n+}\n+\n+impl Iterator for FakeIter {\n+    type Item = i32;\n+    fn next(&mut self) -> Option<Self::Item> {\n+        self.0.next()\n+    }\n+}\n+\n+fn main() {\n+    // should not lint\n+    FakeIter(0..10).rev().next();\n+\n+    // should lint\n+    let _ = (0..10).rev().next().unwrap();\n+    let _ = \"something\".bytes().rev().next();\n+}"}, {"sha": "94ccaa9e4cc3fcbcb3e7728c3a208024251b8f16", "filename": "tests/ui/manual_next_back.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a8834bc46ab948c8978b5fcbe0a7aa4760783338/tests%2Fui%2Fmanual_next_back.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8834bc46ab948c8978b5fcbe0a7aa4760783338/tests%2Fui%2Fmanual_next_back.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_next_back.stderr?ref=a8834bc46ab948c8978b5fcbe0a7aa4760783338", "patch": "@@ -0,0 +1,16 @@\n+error: manual backwards iteration\n+  --> $DIR/manual_next_back.rs:34:20\n+   |\n+LL |     let _ = (0..10).rev().next().unwrap();\n+   |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n+   |\n+   = note: `-D clippy::manual-next-back` implied by `-D warnings`\n+\n+error: manual backwards iteration\n+  --> $DIR/manual_next_back.rs:35:32\n+   |\n+LL |     let _ = \"something\".bytes().rev().next();\n+   |                                ^^^^^^^^^^^^^ help: use: `.next_back()`\n+\n+error: aborting due to 2 previous errors\n+"}]}