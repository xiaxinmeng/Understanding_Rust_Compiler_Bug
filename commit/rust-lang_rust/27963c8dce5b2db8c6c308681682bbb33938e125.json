{"sha": "27963c8dce5b2db8c6c308681682bbb33938e125", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OTYzYzhkY2U1YjJkYjhjNmMzMDg2ODE2ODJiYmIzMzkzOGUxMjU=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-17T05:34:20Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-17T15:59:45Z"}, "message": "move chars_last_cmp_with_unwrap to its own module", "tree": {"sha": "4fa5f6cd9182ffe4ae97f816f0e487d41b57217c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fa5f6cd9182ffe4ae97f816f0e487d41b57217c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27963c8dce5b2db8c6c308681682bbb33938e125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27963c8dce5b2db8c6c308681682bbb33938e125", "html_url": "https://github.com/rust-lang/rust/commit/27963c8dce5b2db8c6c308681682bbb33938e125", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27963c8dce5b2db8c6c308681682bbb33938e125/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d1f2bc56519a9b37daaec84273f97e3aba4318b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d1f2bc56519a9b37daaec84273f97e3aba4318b", "html_url": "https://github.com/rust-lang/rust/commit/4d1f2bc56519a9b37daaec84273f97e3aba4318b"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "c29ee0ec8c8ca5720430947f701cdc6ed6c2e7e9", "filename": "clippy_lints/src/methods/chars_last_cmp_with_unwrap.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/27963c8dce5b2db8c6c308681682bbb33938e125/clippy_lints%2Fsrc%2Fmethods%2Fchars_last_cmp_with_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27963c8dce5b2db8c6c308681682bbb33938e125/clippy_lints%2Fsrc%2Fmethods%2Fchars_last_cmp_with_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fchars_last_cmp_with_unwrap.rs?ref=27963c8dce5b2db8c6c308681682bbb33938e125", "patch": "@@ -0,0 +1,13 @@\n+use crate::methods::chars_cmp_with_unwrap;\n+use rustc_lint::LateContext;\n+\n+use super::CHARS_LAST_CMP;\n+\n+/// Checks for the `CHARS_LAST_CMP` lint with `unwrap()`.\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, info: &crate::methods::BinaryExprInfo<'_>) -> bool {\n+    if chars_cmp_with_unwrap::check(cx, info, &[\"chars\", \"last\", \"unwrap\"], CHARS_LAST_CMP, \"ends_with\") {\n+        true\n+    } else {\n+        chars_cmp_with_unwrap::check(cx, info, &[\"chars\", \"next_back\", \"unwrap\"], CHARS_LAST_CMP, \"ends_with\")\n+    }\n+}"}, {"sha": "f124d0b12f5f4bda52bc81a3c607e39c99b8efe6", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/27963c8dce5b2db8c6c308681682bbb33938e125/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27963c8dce5b2db8c6c308681682bbb33938e125/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=27963c8dce5b2db8c6c308681682bbb33938e125", "patch": "@@ -3,6 +3,7 @@ mod bytes_nth;\n mod chars_cmp;\n mod chars_cmp_with_unwrap;\n mod chars_last_cmp;\n+mod chars_last_cmp_with_unwrap;\n mod chars_next_cmp;\n mod chars_next_cmp_with_unwrap;\n mod clone_on_copy;\n@@ -1974,16 +1975,7 @@ fn lint_binary_expr_with_method_call(cx: &LateContext<'_>, info: &mut BinaryExpr\n     lint_with_both_lhs_and_rhs!(chars_next_cmp::check, cx, info);\n     lint_with_both_lhs_and_rhs!(chars_last_cmp::check, cx, info);\n     lint_with_both_lhs_and_rhs!(chars_next_cmp_with_unwrap::check, cx, info);\n-    lint_with_both_lhs_and_rhs!(lint_chars_last_cmp_with_unwrap, cx, info);\n-}\n-\n-/// Checks for the `CHARS_LAST_CMP` lint with `unwrap()`.\n-fn lint_chars_last_cmp_with_unwrap<'tcx>(cx: &LateContext<'tcx>, info: &BinaryExprInfo<'_>) -> bool {\n-    if chars_cmp_with_unwrap::check(cx, info, &[\"chars\", \"last\", \"unwrap\"], CHARS_LAST_CMP, \"ends_with\") {\n-        true\n-    } else {\n-        chars_cmp_with_unwrap::check(cx, info, &[\"chars\", \"next_back\", \"unwrap\"], CHARS_LAST_CMP, \"ends_with\")\n-    }\n+    lint_with_both_lhs_and_rhs!(chars_last_cmp_with_unwrap::check, cx, info);\n }\n \n fn get_hint_if_single_char_arg("}]}