{"sha": "27ff5360ab661a3c20ab7256529aeb61b4e2b215", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZmY1MzYwYWI2NjFhM2MyMGFiNzI1NjUyOWFlYjYxYjRlMmIyMTU=", "commit": {"author": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-04-13T20:25:13Z"}, "committer": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-04-13T20:25:13Z"}, "message": "Reorder blank lines in AsMut documentation", "tree": {"sha": "87b0f6d2f83a9190970feb0a5ccf60af1642592f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87b0f6d2f83a9190970feb0a5ccf60af1642592f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27ff5360ab661a3c20ab7256529aeb61b4e2b215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27ff5360ab661a3c20ab7256529aeb61b4e2b215", "html_url": "https://github.com/rust-lang/rust/commit/27ff5360ab661a3c20ab7256529aeb61b4e2b215", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27ff5360ab661a3c20ab7256529aeb61b4e2b215/comments", "author": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a33ece38216a42764a0c74ae99baf183b888817", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a33ece38216a42764a0c74ae99baf183b888817", "html_url": "https://github.com/rust-lang/rust/commit/4a33ece38216a42764a0c74ae99baf183b888817"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "86846d3842c08c640ac06ca0529c2c3517d36b9f", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27ff5360ab661a3c20ab7256529aeb61b4e2b215/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ff5360ab661a3c20ab7256529aeb61b4e2b215/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=27ff5360ab661a3c20ab7256529aeb61b4e2b215", "patch": "@@ -180,6 +180,7 @@ pub trait AsRef<T: ?Sized> {\n /// write a function `add_one`that takes all arguments that can be converted to `&mut u64`.\n /// Because [`Box<T>`] implements `AsMut<T>` `add_one` accepts arguments of type\n /// `&mut Box<u64>` as well:\n+///\n /// ```\n /// fn add_one<T: AsMut<u64>>(num: &mut T) {\n ///     *num.as_mut() += 1;\n@@ -189,8 +190,8 @@ pub trait AsRef<T: ?Sized> {\n /// add_one(&mut boxed_num);\n /// assert_eq!(*boxed_num, 1);\n /// ```\n-/// [`Box<T>`]: ../../std/boxed/struct.Box.html\n ///\n+/// [`Box<T>`]: ../../std/boxed/struct.Box.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait AsMut<T: ?Sized> {\n     /// Performs the conversion."}]}