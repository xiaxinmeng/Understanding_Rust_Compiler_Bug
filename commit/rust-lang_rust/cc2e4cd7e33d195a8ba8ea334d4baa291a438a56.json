{"sha": "cc2e4cd7e33d195a8ba8ea334d4baa291a438a56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMmU0Y2Q3ZTMzZDE5NWE4YmE4ZWEzMzRkNGJhYTI5MWE0MzhhNTY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-18T12:07:02Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-28T13:43:47Z"}, "message": "use `visit_all_bodies_in_krate` for borrowck instead of item-likes", "tree": {"sha": "d338d01d27ee7bbd9e359a121de902d9583f5815", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d338d01d27ee7bbd9e359a121de902d9583f5815"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc2e4cd7e33d195a8ba8ea334d4baa291a438a56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc2e4cd7e33d195a8ba8ea334d4baa291a438a56", "html_url": "https://github.com/rust-lang/rust/commit/cc2e4cd7e33d195a8ba8ea334d4baa291a438a56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc2e4cd7e33d195a8ba8ea334d4baa291a438a56/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "085d71c3efe453863739c1fb68fd9bd1beff214f", "url": "https://api.github.com/repos/rust-lang/rust/commits/085d71c3efe453863739c1fb68fd9bd1beff214f", "html_url": "https://github.com/rust-lang/rust/commit/085d71c3efe453863739c1fb68fd9bd1beff214f"}], "stats": {"total": 69, "additions": 10, "deletions": 59}, "files": [{"sha": "bb8f4b752826204b2d271fccab340d32dc129176", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc2e4cd7e33d195a8ba8ea334d4baa291a438a56/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc2e4cd7e33d195a8ba8ea334d4baa291a438a56/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=cc2e4cd7e33d195a8ba8ea334d4baa291a438a56", "patch": "@@ -91,6 +91,7 @@ pub enum DepNode<D: Clone + Debug> {\n     // things read/modify that MIR.\n     Mir(D),\n \n+    BorrowCheckKrate,\n     BorrowCheck(D),\n     RvalueCheck(D),\n     Reachability,\n@@ -209,6 +210,7 @@ impl<D: Clone + Debug> DepNode<D> {\n \n         match *self {\n             Krate => Some(Krate),\n+            BorrowCheckKrate => Some(BorrowCheckKrate),\n             CollectLanguageItems => Some(CollectLanguageItems),\n             CheckStaticRecursion => Some(CheckStaticRecursion),\n             ResolveLifetimes => Some(ResolveLifetimes),"}, {"sha": "f0381dd1b70bf559ae32d9c149b5bce227fe97f0", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 8, "deletions": 59, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/cc2e4cd7e33d195a8ba8ea334d4baa291a438a56/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc2e4cd7e33d195a8ba8ea334d4baa291a438a56/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=cc2e4cd7e33d195a8ba8ea334d4baa291a438a56", "patch": "@@ -45,7 +45,7 @@ use syntax_pos::{MultiSpan, Span};\n use errors::DiagnosticBuilder;\n \n use rustc::hir;\n-use rustc::hir::intravisit::{self, Visitor, FnKind, NestedVisitorMap};\n+use rustc::hir::intravisit::{self, Visitor};\n \n pub mod check_loans;\n \n@@ -60,65 +60,14 @@ pub struct LoanDataFlowOperator;\n \n pub type LoanDataFlow<'a, 'tcx> = DataFlowContext<'a, 'tcx, LoanDataFlowOperator>;\n \n-impl<'a, 'tcx> Visitor<'tcx> for BorrowckCtxt<'a, 'tcx> {\n-    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n-        NestedVisitorMap::OnlyBodies(&self.tcx.hir)\n-    }\n-\n-    fn visit_fn(&mut self, fk: FnKind<'tcx>, fd: &'tcx hir::FnDecl,\n-                b: hir::BodyId, s: Span, id: ast::NodeId) {\n-        match fk {\n-            FnKind::ItemFn(..) |\n-            FnKind::Method(..) => {\n-                borrowck_fn(self.tcx, b);\n-                intravisit::walk_fn(self, fk, fd, b, s, id);\n-            }\n-\n-            FnKind::Closure(..) => {\n-                borrowck_fn(self.tcx, b);\n-                intravisit::walk_fn(self, fk, fd, b, s, id);\n-            }\n-        }\n-    }\n-\n-    fn visit_item(&mut self, item: &'tcx hir::Item) {\n-        // Gather loans for items. Note that we don't need\n-        // to check loans for single expressions. The check\n-        // loan step is intended for things that have a data\n-        // flow dependent conditions.\n-        match item.node {\n-            hir::ItemStatic(.., ex) |\n-            hir::ItemConst(_, ex) => {\n-                borrowck_fn(self.tcx, ex);\n-            }\n-            _ => { }\n-        }\n-\n-        intravisit::walk_item(self, item);\n-    }\n-\n-    fn visit_trait_item(&mut self, ti: &'tcx hir::TraitItem) {\n-        if let hir::TraitItemKind::Const(_, Some(expr)) = ti.node {\n-            borrowck_fn(self.tcx, expr);\n-        }\n-        intravisit::walk_trait_item(self, ti);\n-    }\n-\n-    fn visit_impl_item(&mut self, ii: &'tcx hir::ImplItem) {\n-        if let hir::ImplItemKind::Const(_, expr) = ii.node {\n-            borrowck_fn(self.tcx, expr);\n-        }\n-        intravisit::walk_impl_item(self, ii);\n-    }\n-}\n-\n pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n-    let mut bccx = BorrowckCtxt {\n-        tcx: tcx,\n-        tables: None,\n-    };\n-\n-    tcx.visit_all_item_likes_in_krate(DepNode::BorrowCheck, &mut bccx.as_deep_visitor());\n+    tcx.dep_graph.with_task(DepNode::BorrowCheckKrate, || {\n+        tcx.visit_all_bodies_in_krate(|body_owner_def_id, body_id| {\n+            tcx.dep_graph.with_task(DepNode::BorrowCheck(body_owner_def_id), || {\n+                borrowck_fn(tcx, body_id);\n+            });\n+        });\n+    });\n }\n \n /// Collection of conclusions determined via borrow checker analyses."}]}