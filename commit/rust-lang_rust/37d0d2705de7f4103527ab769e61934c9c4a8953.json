{"sha": "37d0d2705de7f4103527ab769e61934c9c4a8953", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ZDBkMjcwNWRlN2Y0MTAzNTI3YWI3NjllNjE5MzRjOWM0YTg5NTM=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-06-20T18:05:37Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-06-20T18:05:37Z"}, "message": "Do not set depth to 0 in fully_expand_fragment", "tree": {"sha": "5af6884f7720bd795f92a7b4acb184a3b5f9558d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5af6884f7720bd795f92a7b4acb184a3b5f9558d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37d0d2705de7f4103527ab769e61934c9c4a8953", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbeLZzPb62/vY3smZSV3NIU3bZIFAmDPg3UACgkQZSV3NIU3\nbZLqfA//Zb8h01jktD+pGje/L+T8VoWv7SbHzsjA5VrkrxCnikTkmEKUvlqVRWU2\nYVrVm56QkD5huQGkywadJtxAS2cFTeCyC6oYrQH3MFRKCqnTtF4CrtfTKFuIjOOM\nNPqyxasu8ktqlWiGggOfnNZnT/QbrlqDfEPLVqr8eQURuTLnHA8ZpEnJmyTuaiOR\n6qQ46+jOupW3YDCqKELKWWz5+R4K189V73jhgHZdAZ/5w4uE5p5ZDxmSZMjwi+m8\nlZia2bVju/m6WtR/HKPaX3MfQFagyZcPnROxLnjBniJ43+Qgg3+Gqzz8EjwfJLtJ\no/hhxFgrccwzkfbXDpQt/sGgO10d4gmzZ98ZMn9EkBFGk5p5bvs4MUDJN0eol4Bm\nHZ3B9DIGbbNxCAgrJIZIHzEpBKERvoyLcQz0VWMy7UtnX95pPoLW/7pxlRMAjy0j\n3QVBEh0pNOKJTFBAfn/JMUhgnzHhJX6xg/4FKZMwyUH8GpfagtPe3148NkuEHOx1\neDHHhPzpL5cnNzTkak58LOIVLBdxkLQps3VBYxSCIxrfmIC+ibGRTSAbdnv9QKB6\nEqTC+UI/Vu4cOFXimD1JB0pZwsE7803qPAZ36nXzMDd2I5dUXNzvRNaSmaqauISW\nGU9ah/ZGwF3lLWAD9NN9e56XfHbS3Wq+xxL+vWmNJ23apCC7iqw=\n=r190\n-----END PGP SIGNATURE-----", "payload": "tree 5af6884f7720bd795f92a7b4acb184a3b5f9558d\nparent 192920c22bc8433ab14706ee0829e707d119b74f\nauthor Deadbeef <ent3rm4n@gmail.com> 1624212337 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1624212337 +0800\n\nDo not set depth to 0 in fully_expand_fragment\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37d0d2705de7f4103527ab769e61934c9c4a8953", "html_url": "https://github.com/rust-lang/rust/commit/37d0d2705de7f4103527ab769e61934c9c4a8953", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37d0d2705de7f4103527ab769e61934c9c4a8953/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "192920c22bc8433ab14706ee0829e707d119b74f", "url": "https://api.github.com/repos/rust-lang/rust/commits/192920c22bc8433ab14706ee0829e707d119b74f", "html_url": "https://github.com/rust-lang/rust/commit/192920c22bc8433ab14706ee0829e707d119b74f"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "37a4765a4be2bfe569b02d81370f383f8fe0c913", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37d0d2705de7f4103527ab769e61934c9c4a8953/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d0d2705de7f4103527ab769e61934c9c4a8953/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=37d0d2705de7f4103527ab769e61934c9c4a8953", "patch": "@@ -427,7 +427,6 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n     pub fn fully_expand_fragment(&mut self, input_fragment: AstFragment) -> AstFragment {\n         let orig_expansion_data = self.cx.current_expansion.clone();\n         let orig_force_mode = self.cx.force_mode;\n-        self.cx.current_expansion.depth = 0;\n \n         // Collect all macro invocations and replace them with placeholders.\n         let (mut fragment_with_placeholders, mut invocations) =\n@@ -488,6 +487,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             };\n \n             let ExpansionData { depth, id: expn_id, .. } = invoc.expansion_data;\n+            let depth = depth - orig_expansion_data.depth;\n             self.cx.current_expansion = invoc.expansion_data.clone();\n             self.cx.force_mode = force;\n "}, {"sha": "9139775c805a22424010b12fb991f018a442ab46", "filename": "src/test/ui/macros/issue-84632-eager-expansion-recursion-limit.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/37d0d2705de7f4103527ab769e61934c9c4a8953/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d0d2705de7f4103527ab769e61934c9c4a8953/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.rs?ref=37d0d2705de7f4103527ab769e61934c9c4a8953", "patch": "@@ -0,0 +1,16 @@\n+// Regression test for #84632: Recursion limit is ignored\n+// for builtin macros that eagerly expands.\n+\n+#![recursion_limit = \"15\"]\n+macro_rules! a {\n+    () => (\"\");\n+    (A) => (concat!(\"\", a!()));\n+    (A, $($A:ident),*) => (concat!(\"\", a!($($A),*)))\n+    //~^ ERROR recursion limit reached\n+    //~| HELP consider adding\n+}\n+\n+fn main() {\n+    a!(A, A, A, A, A);\n+    a!(A, A, A, A, A, A, A, A, A, A, A);\n+}"}, {"sha": "e6067e333498808231d917468045546a09b144c4", "filename": "src/test/ui/macros/issue-84632-eager-expansion-recursion-limit.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/37d0d2705de7f4103527ab769e61934c9c4a8953/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37d0d2705de7f4103527ab769e61934c9c4a8953/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr?ref=37d0d2705de7f4103527ab769e61934c9c4a8953", "patch": "@@ -0,0 +1,14 @@\n+error: recursion limit reached while expanding `concat!`\n+  --> $DIR/issue-84632-eager-expansion-recursion-limit.rs:8:28\n+   |\n+LL |     (A, $($A:ident),*) => (concat!(\"\", a!($($A),*)))\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     a!(A, A, A, A, A, A, A, A, A, A, A);\n+   |     ------------------------------------ in this macro invocation\n+   |\n+   = help: consider adding a `#![recursion_limit=\"30\"]` attribute to your crate (`issue_84632_eager_expansion_recursion_limit`)\n+   = note: this error originates in the macro `a` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}