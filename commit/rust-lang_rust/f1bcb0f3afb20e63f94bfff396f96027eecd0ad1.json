{"sha": "f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "node_id": "C_kwDOAAsO6NoAKGYxYmNiMGYzYWZiMjBlNjNmOTRiZmZmMzk2Zjk2MDI3ZWVjZDBhZDE", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-22T23:14:51Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-22T23:14:51Z"}, "message": "Delete Decoder::read_unit", "tree": {"sha": "afd68331b5034ce78eb4acb77bbffddab60807f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afd68331b5034ce78eb4acb77bbffddab60807f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "html_url": "https://github.com/rust-lang/rust/commit/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2098ea6eba5ac7901b419841972c9bbffbf49a93", "url": "https://api.github.com/repos/rust-lang/rust/commits/2098ea6eba5ac7901b419841972c9bbffbf49a93", "html_url": "https://github.com/rust-lang/rust/commit/2098ea6eba5ac7901b419841972c9bbffbf49a93"}], "stats": {"total": 21, "additions": 4, "deletions": 17}, "files": [{"sha": "0449d715a5e1aec8d9bd0c5a44e86c0586f1290f", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "patch": "@@ -2418,8 +2418,7 @@ impl<S: Encoder> rustc_serialize::Encodable<S> for AttrId {\n }\n \n impl<D: Decoder> rustc_serialize::Decodable<D> for AttrId {\n-    fn decode(d: &mut D) -> AttrId {\n-        d.read_unit();\n+    fn decode(_: &mut D) -> AttrId {\n         crate::attr::mk_attr_id()\n     }\n }"}, {"sha": "4fe2cde753290226889e54fc4591db806410d0f7", "filename": "compiler/rustc_middle/src/mir/predecessors.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpredecessors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpredecessors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpredecessors.rs?ref=f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "patch": "@@ -63,8 +63,7 @@ impl<S: serialize::Encoder> serialize::Encodable<S> for PredecessorCache {\n \n impl<D: serialize::Decoder> serialize::Decodable<D> for PredecessorCache {\n     #[inline]\n-    fn decode(d: &mut D) -> Self {\n-        let () = d.read_unit();\n+    fn decode(_: &mut D) -> Self {\n         Self::new()\n     }\n }"}, {"sha": "23fb7a49d9c8e923602a56e5f66a1e504aaf8b92", "filename": "compiler/rustc_middle/src/ty/codec.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs?ref=f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "patch": "@@ -465,8 +465,6 @@ macro_rules! implement_ty_decoder {\n \n             impl<$($typaram ),*> Decoder for $DecoderName<$($typaram),*> {\n                 $crate::__impl_decoder_methods! {\n-                    read_unit -> ();\n-\n                     read_u128 -> u128;\n                     read_u64 -> u64;\n                     read_u32 -> u32;"}, {"sha": "5e5cbacbcff1a47c9551f9c6c76b99116f96b8c7", "filename": "compiler/rustc_serialize/src/opaque.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs?ref=f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "patch": "@@ -555,11 +555,6 @@ macro_rules! read_leb128 {\n }\n \n impl<'a> serialize::Decoder for Decoder<'a> {\n-    #[inline]\n-    fn read_unit(&mut self) -> () {\n-        ()\n-    }\n-\n     #[inline]\n     fn read_u128(&mut self) -> u128 {\n         read_leb128!(self, read_u128_leb128)"}, {"sha": "42bf6ff2a9852101431f4464874d3bc5443121b7", "filename": "compiler/rustc_serialize/src/serialize.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1bcb0f3afb20e63f94bfff396f96027eecd0ad1/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs?ref=f1bcb0f3afb20e63f94bfff396f96027eecd0ad1", "patch": "@@ -181,7 +181,6 @@ pub trait Encoder {\n // concise.\n pub trait Decoder {\n     // Primitive types:\n-    fn read_unit(&mut self) -> ();\n     fn read_usize(&mut self) -> usize;\n     fn read_u128(&mut self) -> u128;\n     fn read_u64(&mut self) -> u64;\n@@ -324,9 +323,7 @@ impl<S: Encoder> Encodable<S> for () {\n }\n \n impl<D: Decoder> Decodable<D> for () {\n-    fn decode(d: &mut D) -> () {\n-        d.read_unit()\n-    }\n+    fn decode(_: &mut D) -> () {}\n }\n \n impl<S: Encoder, T> Encodable<S> for PhantomData<T> {\n@@ -336,8 +333,7 @@ impl<S: Encoder, T> Encodable<S> for PhantomData<T> {\n }\n \n impl<D: Decoder, T> Decodable<D> for PhantomData<T> {\n-    fn decode(d: &mut D) -> PhantomData<T> {\n-        d.read_unit();\n+    fn decode(_: &mut D) -> PhantomData<T> {\n         PhantomData\n     }\n }"}]}