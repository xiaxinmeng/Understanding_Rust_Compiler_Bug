{"sha": "60524c55e9150892913272737b77bbcc2fd29a02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNTI0YzU1ZTkxNTA4OTI5MTMyNzI3MzdiNzdiYmNjMmZkMjlhMDI=", "commit": {"author": {"name": "Marco Castelluccio", "email": "mcastelluccio@mozilla.com", "date": "2017-06-04T16:12:47Z"}, "committer": {"name": "Marco Castelluccio", "email": "mcastelluccio@mozilla.com", "date": "2017-06-04T16:12:47Z"}, "message": "Stop checking uses_std", "tree": {"sha": "a441c102120ce99ba0ef9d986d4de169e824fdc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a441c102120ce99ba0ef9d986d4de169e824fdc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60524c55e9150892913272737b77bbcc2fd29a02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60524c55e9150892913272737b77bbcc2fd29a02", "html_url": "https://github.com/rust-lang/rust/commit/60524c55e9150892913272737b77bbcc2fd29a02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60524c55e9150892913272737b77bbcc2fd29a02/comments", "author": {"login": "marco-c", "id": 1616846, "node_id": "MDQ6VXNlcjE2MTY4NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1616846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marco-c", "html_url": "https://github.com/marco-c", "followers_url": "https://api.github.com/users/marco-c/followers", "following_url": "https://api.github.com/users/marco-c/following{/other_user}", "gists_url": "https://api.github.com/users/marco-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/marco-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marco-c/subscriptions", "organizations_url": "https://api.github.com/users/marco-c/orgs", "repos_url": "https://api.github.com/users/marco-c/repos", "events_url": "https://api.github.com/users/marco-c/events{/privacy}", "received_events_url": "https://api.github.com/users/marco-c/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marco-c", "id": 1616846, "node_id": "MDQ6VXNlcjE2MTY4NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1616846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marco-c", "html_url": "https://github.com/marco-c", "followers_url": "https://api.github.com/users/marco-c/followers", "following_url": "https://api.github.com/users/marco-c/following{/other_user}", "gists_url": "https://api.github.com/users/marco-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/marco-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marco-c/subscriptions", "organizations_url": "https://api.github.com/users/marco-c/orgs", "repos_url": "https://api.github.com/users/marco-c/repos", "events_url": "https://api.github.com/users/marco-c/events{/privacy}", "received_events_url": "https://api.github.com/users/marco-c/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecba8d6a23d8bafd6296d619180a5f3e09bb21b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecba8d6a23d8bafd6296d619180a5f3e09bb21b1", "html_url": "https://github.com/rust-lang/rust/commit/ecba8d6a23d8bafd6296d619180a5f3e09bb21b1"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "45633e995502dc4f1953c71bdb375b077ae3165a", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/60524c55e9150892913272737b77bbcc2fd29a02/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60524c55e9150892913272737b77bbcc2fd29a02/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=60524c55e9150892913272737b77bbcc2fd29a02", "patch": "@@ -908,27 +908,18 @@ impl<'a> CrateLoader<'a> {\n \n     fn inject_profiler_runtime(&mut self) {\n         if self.sess.opts.debugging_opts.profile {\n-            let mut uses_std = false;\n-            self.cstore.iter_crate_data(|_, data| {\n-                if data.name == \"std\" {\n-                    uses_std = true;\n-                }\n-            });\n-\n-            if uses_std {\n-                info!(\"loading profiler\");\n-\n-                let symbol = Symbol::intern(\"profiler_builtins\");\n-                let dep_kind = DepKind::Implicit;\n-                let (_, data) =\n-                    self.resolve_crate(&None, symbol, symbol, None, DUMMY_SP,\n-                                       PathKind::Crate, dep_kind);\n-\n-                // Sanity check the loaded crate to ensure it is indeed a profiler runtime\n-                if !data.is_profiler_runtime(&self.sess.dep_graph) {\n-                    self.sess.err(&format!(\"the crate `profiler_builtins` is not \\\n-                                            a profiler runtime\"));\n-                }\n+            info!(\"loading profiler\");\n+\n+            let symbol = Symbol::intern(\"profiler_builtins\");\n+            let dep_kind = DepKind::Implicit;\n+            let (_, data) =\n+                self.resolve_crate(&None, symbol, symbol, None, DUMMY_SP,\n+                                   PathKind::Crate, dep_kind);\n+\n+            // Sanity check the loaded crate to ensure it is indeed a profiler runtime\n+            if !data.is_profiler_runtime(&self.sess.dep_graph) {\n+                self.sess.err(&format!(\"the crate `profiler_builtins` is not \\\n+                                        a profiler runtime\"));\n             }\n         }\n     }"}]}