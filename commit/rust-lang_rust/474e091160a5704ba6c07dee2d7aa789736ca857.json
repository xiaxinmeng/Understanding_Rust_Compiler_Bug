{"sha": "474e091160a5704ba6c07dee2d7aa789736ca857", "node_id": "C_kwDOAAsO6NoAKDQ3NGUwOTExNjBhNTcwNGJhNmMwN2RlZTJkN2FhNzg5NzM2Y2E4NTc", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-13T19:46:04Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-13T19:46:04Z"}, "message": "Move FIXME to if statement", "tree": {"sha": "7f801ed641ff2d6def60c7f60805637fb172e393", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f801ed641ff2d6def60c7f60805637fb172e393"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/474e091160a5704ba6c07dee2d7aa789736ca857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/474e091160a5704ba6c07dee2d7aa789736ca857", "html_url": "https://github.com/rust-lang/rust/commit/474e091160a5704ba6c07dee2d7aa789736ca857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/474e091160a5704ba6c07dee2d7aa789736ca857/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aafcbf1e70defb145542ec66a98d581c23899e76", "url": "https://api.github.com/repos/rust-lang/rust/commits/aafcbf1e70defb145542ec66a98d581c23899e76", "html_url": "https://github.com/rust-lang/rust/commit/aafcbf1e70defb145542ec66a98d581c23899e76"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7f9d04d237eee082839c93bc7e9383835e560009", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/474e091160a5704ba6c07dee2d7aa789736ca857/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/474e091160a5704ba6c07dee2d7aa789736ca857/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=474e091160a5704ba6c07dee2d7aa789736ca857", "patch": "@@ -171,10 +171,6 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     /// the hashmap because certain items (traits and types) need to have their mappings for trait\n     /// implementations filled out before they're inserted.\n     fn item(&mut self, item: clean::Item) -> Result<(), Error> {\n-        // FIXME(CraftSpider): We skip children of local blanket implementations, as we'll have\n-        //     already seen the actual generic impl, and the generated ones don't need documenting.\n-        //     This is necessary due to the visibility, return type, and self arg of the generated\n-        //     impls not quite matching, and will no longer be necessary when the mismatch is fixed.\n         let local_blanket_impl = match item.def_id {\n             clean::ItemId::Blanket { impl_id, .. } => impl_id.is_local(),\n             clean::ItemId::Auto { .. }\n@@ -183,6 +179,10 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         };\n \n         // Flatten items that recursively store other items\n+        // FIXME(CraftSpider): We skip children of local blanket implementations, as we'll have\n+        //     already seen the actual generic impl, and the generated ones don't need documenting.\n+        //     This is necessary due to the visibility, return type, and self arg of the generated\n+        //     impls not quite matching, and will no longer be necessary when the mismatch is fixed.\n         if !local_blanket_impl {\n             item.kind.inner_items().for_each(|i| self.item(i.clone()).unwrap());\n         }"}]}