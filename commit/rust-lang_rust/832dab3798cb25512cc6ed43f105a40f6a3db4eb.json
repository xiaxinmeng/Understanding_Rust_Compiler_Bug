{"sha": "832dab3798cb25512cc6ed43f105a40f6a3db4eb", "node_id": "C_kwDOAAsO6NoAKDgzMmRhYjM3OThjYjI1NTEyY2M2ZWQ0M2YxMDVhNDBmNmEzZGI0ZWI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-03-04T09:54:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-04T09:54:37Z"}, "message": "Rollup merge of #108405 - Nilstrieb:lazy-crate-name-optimization-fuel, r=WaffleLapkin\n\nLazily compute crate name for consider_optimizing\n\nThe extra query is unnecessary in the common case of not having fuel.", "tree": {"sha": "b3a37724429e3963389eb48984a1f1cc30f03114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3a37724429e3963389eb48984a1f1cc30f03114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/832dab3798cb25512cc6ed43f105a40f6a3db4eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkAxVdCRBK7hj4Ov3rIwAAqnQIAC7fO1jTpo+aPQjZt2FHWxJq\nfsf6SmuPaLPC4UkM2WmrLA4s+W7A8vFefIm3xEhBRzKhfQGi14iVJ4A6s58/Gexx\n6dmWc5Cx4h+AQdtOLa1ZYW3OAjS1MsN+xrfQuQalt24lHOTTI/wlYmK/lE+4jXMi\n7i9NkaXXiJ9wQ3UsnA/eoP2WsLboH6MOOJ4fCEY3iHcHFzB1mrS5OefoTLcbmziO\nZWJT/r3l/aShmmmJrY/1XaqAgUk7aBkLH/z6UpkF5500kQ/jpcIEYfVlTSOObl56\n3x610YTQvOjDpIQWdSvbfLVThYA/MV+1aUjv9PvYRTALxJ2RPd+dw328q13noOk=\n=s0Ex\n-----END PGP SIGNATURE-----\n", "payload": "tree b3a37724429e3963389eb48984a1f1cc30f03114\nparent 035aa2816a34dcb19c1a3cd87e03c689f445f354\nparent 7ee01b4b800233db0d494d433b318ce06ec25115\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1677923677 +0530\ncommitter GitHub <noreply@github.com> 1677923677 +0530\n\nRollup merge of #108405 - Nilstrieb:lazy-crate-name-optimization-fuel, r=WaffleLapkin\n\nLazily compute crate name for consider_optimizing\n\nThe extra query is unnecessary in the common case of not having fuel.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/832dab3798cb25512cc6ed43f105a40f6a3db4eb", "html_url": "https://github.com/rust-lang/rust/commit/832dab3798cb25512cc6ed43f105a40f6a3db4eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/832dab3798cb25512cc6ed43f105a40f6a3db4eb/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "035aa2816a34dcb19c1a3cd87e03c689f445f354", "url": "https://api.github.com/repos/rust-lang/rust/commits/035aa2816a34dcb19c1a3cd87e03c689f445f354", "html_url": "https://github.com/rust-lang/rust/commit/035aa2816a34dcb19c1a3cd87e03c689f445f354"}, {"sha": "7ee01b4b800233db0d494d433b318ce06ec25115", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee01b4b800233db0d494d433b318ce06ec25115", "html_url": "https://github.com/rust-lang/rust/commit/7ee01b4b800233db0d494d433b318ce06ec25115"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "d9af2fd74cee5057ddb375ebb1786563f9f27592", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/832dab3798cb25512cc6ed43f105a40f6a3db4eb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832dab3798cb25512cc6ed43f105a40f6a3db4eb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=832dab3798cb25512cc6ed43f105a40f6a3db4eb", "patch": "@@ -794,8 +794,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     pub fn consider_optimizing<T: Fn() -> String>(self, msg: T) -> bool {\n-        let cname = self.crate_name(LOCAL_CRATE);\n-        self.sess.consider_optimizing(cname.as_str(), msg)\n+        self.sess.consider_optimizing(|| self.crate_name(LOCAL_CRATE), msg)\n     }\n \n     /// Obtain all lang items of this crate and all dependencies (recursively)"}, {"sha": "12634f67185fd94e200b3b2116279a4e5c905a33", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/832dab3798cb25512cc6ed43f105a40f6a3db4eb/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832dab3798cb25512cc6ed43f105a40f6a3db4eb/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=832dab3798cb25512cc6ed43f105a40f6a3db4eb", "patch": "@@ -882,10 +882,14 @@ impl Session {\n \n     /// We want to know if we're allowed to do an optimization for crate foo from -z fuel=foo=n.\n     /// This expends fuel if applicable, and records fuel if applicable.\n-    pub fn consider_optimizing<T: Fn() -> String>(&self, crate_name: &str, msg: T) -> bool {\n+    pub fn consider_optimizing(\n+        &self,\n+        get_crate_name: impl Fn() -> Symbol,\n+        msg: impl Fn() -> String,\n+    ) -> bool {\n         let mut ret = true;\n         if let Some((ref c, _)) = self.opts.unstable_opts.fuel {\n-            if c == crate_name {\n+            if c == get_crate_name().as_str() {\n                 assert_eq!(self.threads(), 1);\n                 let mut fuel = self.optimization_fuel.lock();\n                 ret = fuel.remaining != 0;\n@@ -903,7 +907,7 @@ impl Session {\n             }\n         }\n         if let Some(ref c) = self.opts.unstable_opts.print_fuel {\n-            if c == crate_name {\n+            if c == get_crate_name().as_str() {\n                 assert_eq!(self.threads(), 1);\n                 self.print_fuel.fetch_add(1, SeqCst);\n             }"}]}