{"sha": "c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133", "node_id": "C_kwDOAAsO6NoAKGMwZWMxOGJkMGQwZjRlZmY0M2UxMWNiZGI0NzFhN2Q2YmI1MTcxMzM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-28T17:34:24Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-28T18:38:36Z"}, "message": "Avoid unnecessary string interning for const_str", "tree": {"sha": "e0656522f8eb18eef0994516b77575b81e6c0493", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0656522f8eb18eef0994516b77575b81e6c0493"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133", "html_url": "https://github.com/rust-lang/rust/commit/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bad0d5b201c74dfe372ddf30a90a09bc2829a52", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bad0d5b201c74dfe372ddf30a90a09bc2829a52", "html_url": "https://github.com/rust-lang/rust/commit/6bad0d5b201c74dfe372ddf30a90a09bc2829a52"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "d156f87443497b5d7a909f01991298e4a4b05f8b", "filename": "src/common.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133", "patch": "@@ -12,7 +12,6 @@ use rustc_middle::mir::Mutability;\n use rustc_middle::ty::ScalarInt;\n use rustc_middle::ty::layout::{TyAndLayout, LayoutOf};\n use rustc_middle::mir::interpret::{ConstAllocation, GlobalAlloc, Scalar};\n-use rustc_span::Symbol;\n use rustc_target::abi::{self, HasDataLayout, Pointer, Size};\n \n use crate::consts::const_alloc_to_gcc;\n@@ -125,12 +124,15 @@ impl<'gcc, 'tcx> ConstMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n         self.context.new_rvalue_from_double(typ, val)\n     }\n \n-    fn const_str(&self, s: Symbol) -> (RValue<'gcc>, RValue<'gcc>) {\n-        let s_str = s.as_str();\n-        let str_global = *self.const_str_cache.borrow_mut().entry(s).or_insert_with(|| {\n-            self.global_string(s_str)\n-        });\n-        let len = s_str.len();\n+    fn const_str(&self, s: &str) -> (RValue<'gcc>, RValue<'gcc>) {\n+        let str_global = *self\n+            .const_str_cache\n+            .borrow_mut()\n+            .raw_entry_mut()\n+            .from_key(s)\n+            .or_insert_with(|| (s.to_owned(), self.global_string(s)))\n+            .1;\n+        let len = s.len();\n         let cs = self.const_ptrcast(str_global.get_address(None),\n             self.type_ptr_to(self.layout_of(self.tcx.types.str_).gcc_type(self, true)),\n         );"}, {"sha": "478f6d893dd0f347210b4297139f2087f99cdabf", "filename": "src/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133/src%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133/src%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcontext.rs?ref=c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::mir::mono::CodegenUnit;\n use rustc_middle::ty::{self, Instance, ParamEnv, PolyExistentialTraitRef, Ty, TyCtxt};\n use rustc_middle::ty::layout::{FnAbiError, FnAbiOfHelpers, FnAbiRequest, HasParamEnv, HasTyCtxt, LayoutError, TyAndLayout, LayoutOfHelpers};\n use rustc_session::Session;\n-use rustc_span::{Span, Symbol};\n+use rustc_span::Span;\n use rustc_target::abi::{call::FnAbi, HasDataLayout, PointeeInfo, Size, TargetDataLayout, VariantIdx};\n use rustc_target::spec::{HasTargetSpec, Target, TlsModel};\n \n@@ -101,7 +101,7 @@ pub struct CodegenCx<'gcc, 'tcx> {\n     pub global_lvalues: RefCell<FxHashMap<RValue<'gcc>, LValue<'gcc>>>,\n \n     /// Cache of constant strings,\n-    pub const_str_cache: RefCell<FxHashMap<Symbol, LValue<'gcc>>>,\n+    pub const_str_cache: RefCell<FxHashMap<String, LValue<'gcc>>>,\n \n     /// Cache of globals.\n     pub globals: RefCell<FxHashMap<String, RValue<'gcc>>>,"}, {"sha": "399830de84cb951b68f9f85ce8204e84d2063c02", "filename": "src/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c0ec18bd0d0f4eff43e11cbdb471a7d6bb517133", "patch": "@@ -6,7 +6,14 @@\n  * TODO(antoyo): remove the patches.\n  */\n \n-#![feature(rustc_private, decl_macro, associated_type_bounds, never_type, trusted_len)]\n+#![feature(\n+    rustc_private,\n+    decl_macro,\n+    associated_type_bounds,\n+    never_type,\n+    trusted_len,\n+    hash_raw_entry\n+)]\n #![allow(broken_intra_doc_links)]\n #![recursion_limit=\"256\"]\n #![warn(rust_2018_idioms)]"}]}