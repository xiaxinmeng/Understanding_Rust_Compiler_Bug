{"sha": "fb4380b12db03264afbd085e1f654b0a38ecc3f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNDM4MGIxMmRiMDMyNjRhZmJkMDg1ZTFmNjU0YjBhMzhlY2MzZjI=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2017-04-28T08:08:48Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2017-05-01T17:24:10Z"}, "message": "Queryify const_is_rvalue_promotable_to_static", "tree": {"sha": "515608c3683506ec349628bde2d17c7d6eaca138", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/515608c3683506ec349628bde2d17c7d6eaca138"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb4380b12db03264afbd085e1f654b0a38ecc3f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4380b12db03264afbd085e1f654b0a38ecc3f2", "html_url": "https://github.com/rust-lang/rust/commit/fb4380b12db03264afbd085e1f654b0a38ecc3f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb4380b12db03264afbd085e1f654b0a38ecc3f2/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05b2081e2344cf396427451572f8c3b6e2331f6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/05b2081e2344cf396427451572f8c3b6e2331f6b", "html_url": "https://github.com/rust-lang/rust/commit/05b2081e2344cf396427451572f8c3b6e2331f6b"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "3cb827cdf6c3236c3aa22d3472951d8889b1016d", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=fb4380b12db03264afbd085e1f654b0a38ecc3f2", "patch": "@@ -249,7 +249,6 @@ pub trait CrateStore {\n     // misc. metadata\n     fn item_body<'a, 'tcx>(&self, tcx: TyCtxt<'a, 'tcx, 'tcx>, def: DefId)\n                            -> &'tcx hir::Body;\n-    fn const_is_rvalue_promotable_to_static(&self, def: DefId) -> bool;\n \n     fn is_item_mir_available(&self, def: DefId) -> bool;\n \n@@ -399,9 +398,6 @@ impl CrateStore for DummyCrateStore {\n                            -> &'tcx hir::Body {\n         bug!(\"item_body\")\n     }\n-    fn const_is_rvalue_promotable_to_static(&self, def: DefId) -> bool {\n-        bug!(\"const_is_rvalue_promotable_to_static\")\n-    }\n \n     fn is_item_mir_available(&self, def: DefId) -> bool {\n         bug!(\"is_item_mir_available\")"}, {"sha": "57a69c5fa0bb0cbe9d78d9afcddf9d2ab1127e8c", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=fb4380b12db03264afbd085e1f654b0a38ecc3f2", "patch": "@@ -298,6 +298,13 @@ impl<'tcx> QueryDescription for queries::item_body_nested_bodies<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::const_is_rvalue_promotable_to_static<'tcx> {\n+    fn describe(tcx: TyCtxt, def_id: DefId) -> String {\n+        format!(\"const checking if rvalue is promotable to static `{}`\",\n+            tcx.item_path_str(def_id))\n+    }\n+}\n+\n macro_rules! define_maps {\n     (<$tcx:tt>\n      $($(#[$attr:meta])*\n@@ -587,6 +594,7 @@ define_maps! { <'tcx>\n     [] def_span: DefSpan(DefId) -> Span,\n \n     [] item_body_nested_bodies: metadata_dep_node(DefId) -> Rc<BTreeMap<hir::BodyId, hir::Body>>,\n+    [] const_is_rvalue_promotable_to_static: metadata_dep_node(DefId) -> bool,\n }\n \n fn coherent_trait_dep_node((_, def_id): (CrateNum, DefId)) -> DepNode<DefId> {"}, {"sha": "a492e2afa4c7a77c056fce5808279b5284085bc4", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=fb4380b12db03264afbd085e1f654b0a38ecc3f2", "patch": "@@ -122,6 +122,10 @@ provide! { <'tcx> tcx, def_id, cdata\n \n         Rc::new(map)\n     }\n+    const_is_rvalue_promotable_to_static => {\n+        cdata.entry(def_id.index).ast.expect(\"const item missing `ast`\")\n+            .decode(cdata).rvalue_promotable_to_static\n+    }\n }\n \n impl CrateStore for cstore::CStore {\n@@ -439,11 +443,6 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_data(def_id.krate).item_body(tcx, def_id.index)\n     }\n \n-    fn const_is_rvalue_promotable_to_static(&self, def: DefId) -> bool {\n-        self.dep_graph.read(DepNode::MetaData(def));\n-        self.get_crate_data(def.krate).const_is_rvalue_promotable_to_static(def.index)\n-    }\n-\n     fn is_item_mir_available(&self, def: DefId) -> bool {\n         self.dep_graph.read(DepNode::MetaData(def));\n         self.get_crate_data(def.krate).is_item_mir_available(def.index)"}, {"sha": "2317c156b4192ba4e0753ff428d59605fe3f0531", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=fb4380b12db03264afbd085e1f654b0a38ecc3f2", "patch": "@@ -772,11 +772,6 @@ impl<'a, 'tcx> CrateMetadata {\n         tcx.alloc_tables(ast.tables.decode((self, tcx)))\n     }\n \n-    pub fn const_is_rvalue_promotable_to_static(&self, id: DefIndex) -> bool {\n-        self.entry(id).ast.expect(\"const item missing `ast`\")\n-            .decode(self).rvalue_promotable_to_static\n-    }\n-\n     pub fn is_item_mir_available(&self, id: DefIndex) -> bool {\n         !self.is_proc_macro(id) &&\n         self.maybe_entry(id).and_then(|item| item.decode(self).mir).is_some()"}, {"sha": "6866fe807684a816f591688f15b15b9ebf445281", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb4380b12db03264afbd085e1f654b0a38ecc3f2/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=fb4380b12db03264afbd085e1f654b0a38ecc3f2", "patch": "@@ -336,7 +336,7 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>, e: &hir::Expr, node\n                             _ => false\n                         }\n                     } else {\n-                        v.tcx.sess.cstore.const_is_rvalue_promotable_to_static(did)\n+                        v.tcx.const_is_rvalue_promotable_to_static(did)\n                     };\n                 }\n                 _ => {"}]}