{"sha": "ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNmNjMmQ2YjBhYWQwYjFjYzk3ZjFkYjZkOGU5ZDRmMTE3ZWNhOTU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-03T20:45:49Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-07T02:46:11Z"}, "message": "Collect unclosed delimiters in parent parser", "tree": {"sha": "d278a10675eb33a42670803d7620cddf316d98f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d278a10675eb33a42670803d7620cddf316d98f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95", "html_url": "https://github.com/rust-lang/rust/commit/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51d0e86c221dbd937ca248f25a95dad787035b9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/51d0e86c221dbd937ca248f25a95dad787035b9e", "html_url": "https://github.com/rust-lang/rust/commit/51d0e86c221dbd937ca248f25a95dad787035b9e"}], "stats": {"total": 80, "additions": 45, "deletions": 35}, "files": [{"sha": "348c26d2044b915278f193c4d6475d917bdaf28e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95", "patch": "@@ -1510,9 +1510,13 @@ impl<'a> Parser<'a> {\n     pub fn parse_trait_item(&mut self, at_end: &mut bool) -> PResult<'a, TraitItem> {\n         maybe_whole!(self, NtTraitItem, |x| x);\n         let attrs = self.parse_outer_attributes()?;\n+        let mut unclosed_delims = vec![];\n         let (mut item, tokens) = self.collect_tokens(|this| {\n-            this.parse_trait_item_(at_end, attrs)\n+            let item = this.parse_trait_item_(at_end, attrs);\n+            unclosed_delims.append(&mut this.unclosed_delims);\n+            item\n         })?;\n+        self.unclosed_delims.append(&mut unclosed_delims);\n         // See `parse_item` for why this clause is here.\n         if !item.attrs.iter().any(|attr| attr.style == AttrStyle::Inner) {\n             item.tokens = Some(tokens);\n@@ -6475,9 +6479,13 @@ impl<'a> Parser<'a> {\n     pub fn parse_impl_item(&mut self, at_end: &mut bool) -> PResult<'a, ImplItem> {\n         maybe_whole!(self, NtImplItem, |x| x);\n         let attrs = self.parse_outer_attributes()?;\n+        let mut unclosed_delims = vec![];\n         let (mut item, tokens) = self.collect_tokens(|this| {\n-            this.parse_impl_item_(at_end, attrs)\n+            let item = this.parse_impl_item_(at_end, attrs);\n+            unclosed_delims.append(&mut this.unclosed_delims);\n+            item\n         })?;\n+        self.unclosed_delims.append(&mut unclosed_delims);\n \n         // See `parse_item` for why this clause is here.\n         if !item.attrs.iter().any(|attr| attr.style == AttrStyle::Inner) {\n@@ -7797,12 +7805,13 @@ impl<'a> Parser<'a> {\n         macros_allowed: bool,\n         attributes_allowed: bool,\n     ) -> PResult<'a, Option<P<Item>>> {\n+        let mut unclosed_delims = vec![];\n         let (ret, tokens) = self.collect_tokens(|this| {\n             let item = this.parse_item_implementation(attrs, macros_allowed, attributes_allowed);\n-            let diag = this.diagnostic();\n-            emit_unclosed_delims(&mut this.unclosed_delims, diag);\n+            unclosed_delims.append(&mut this.unclosed_delims);\n             item\n         })?;\n+        self.unclosed_delims.append(&mut unclosed_delims);\n \n         // Once we've parsed an item and recorded the tokens we got while\n         // parsing we may want to store `tokens` into the item we're about to"}, {"sha": "76f7af38e776dcd3b1ca8260669ff958795e297d", "filename": "src/test/ui/parser-recovery-2.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/src%2Ftest%2Fui%2Fparser-recovery-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/src%2Ftest%2Fui%2Fparser-recovery-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-2.stderr?ref=ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95", "patch": "@@ -1,3 +1,9 @@\n+error: unexpected token: `;`\n+  --> $DIR/parser-recovery-2.rs:12:15\n+   |\n+LL |     let x = y.;  //~ ERROR unexpected token\n+   |               ^\n+\n error: incorrect close delimiter: `)`\n   --> $DIR/parser-recovery-2.rs:8:5\n    |\n@@ -7,12 +13,6 @@ LL |         let x = foo(); //~ ERROR cannot find function `foo` in this scope\n LL |     ) //~ ERROR incorrect close delimiter: `)`\n    |     ^ incorrect close delimiter\n \n-error: unexpected token: `;`\n-  --> $DIR/parser-recovery-2.rs:12:15\n-   |\n-LL |     let x = y.;  //~ ERROR unexpected token\n-   |               ^\n-\n error[E0425]: cannot find function `foo` in this scope\n   --> $DIR/parser-recovery-2.rs:7:17\n    |"}, {"sha": "212b88ac8b05f3845787196cb5d6950772b2c22b", "filename": "src/test/ui/resolve/token-error-correct-3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.rs?ref=ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95", "patch": "@@ -14,10 +14,10 @@ pub mod raw {\n             //~^ ERROR cannot find function `is_directory`\n             callback(path.as_ref();\n             //~^ ERROR expected one of\n-            //~| ERROR this function takes 1 parameter but 2 parameters were supplied\n             fs::create_dir_all(path.as_ref()).map(|()| true)\n+            //~^ ERROR mismatched types\n         } else {\n-            //~^ ERROR incorrect close delimiter: `}`\n+            //~^ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `)`\n             Ok(false);\n         }\n "}, {"sha": "035a5ede4538467cd478b9c56c07a2b5195c22dd", "filename": "src/test/ui/resolve/token-error-correct-3.stderr", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr?ref=ac6cc2d6b0aad0b1cc97f1db6d8e9d4f117eca95", "patch": "@@ -1,38 +1,39 @@\n-error: incorrect close delimiter: `}`\n-  --> $DIR/token-error-correct-3.rs:19:9\n-   |\n-LL |         if !is_directory(path.as_ref()) {\n-   |                                         - close delimiter possibly meant for this\n-LL |             //~^ ERROR cannot find function `is_directory`\n-LL |             callback(path.as_ref();\n-   |                     - un-closed delimiter\n-...\n-LL |         } else {\n-   |         ^ incorrect close delimiter\n-\n error: expected one of `)`, `,`, `.`, `?`, or an operator, found `;`\n   --> $DIR/token-error-correct-3.rs:15:35\n    |\n LL |             callback(path.as_ref();\n-   |                                   ^ expected one of `)`, `,`, `.`, `?`, or an operator here\n+   |                     -             ^\n+   |                     |             |\n+   |                     |             help: `)` may belong here\n+   |                     unclosed delimiter\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found `)`\n+  --> $DIR/token-error-correct-3.rs:19:9\n+   |\n+LL |             fs::create_dir_all(path.as_ref()).map(|()| true)\n+   |                                                             - expected one of `.`, `;`, `?`, `}`, or an operator here\n+LL |             //~^ ERROR mismatched types\n+LL |         } else {\n+   |         ^ unexpected token\n \n error[E0425]: cannot find function `is_directory` in this scope\n   --> $DIR/token-error-correct-3.rs:13:13\n    |\n LL |         if !is_directory(path.as_ref()) {\n    |             ^^^^^^^^^^^^ not found in this scope\n \n-error[E0057]: this function takes 1 parameter but 2 parameters were supplied\n-  --> $DIR/token-error-correct-3.rs:15:13\n+error[E0308]: mismatched types\n+  --> $DIR/token-error-correct-3.rs:17:13\n+   |\n+LL |             fs::create_dir_all(path.as_ref()).map(|()| true)\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- help: try adding a semicolon: `;`\n+   |             |\n+   |             expected (), found enum `std::result::Result`\n    |\n-LL | /             callback(path.as_ref();\n-LL | |             //~^ ERROR expected one of\n-LL | |             //~| ERROR this function takes 1 parameter but 2 parameters were supplied\n-LL | |             fs::create_dir_all(path.as_ref()).map(|()| true)\n-LL | |         } else {\n-   | |_________^ expected 1 parameter\n+   = note: expected type `()`\n+              found type `std::result::Result<bool, std::io::Error>`\n \n error: aborting due to 4 previous errors\n \n-Some errors occurred: E0057, E0425.\n-For more information about an error, try `rustc --explain E0057`.\n+Some errors occurred: E0308, E0425.\n+For more information about an error, try `rustc --explain E0308`."}]}