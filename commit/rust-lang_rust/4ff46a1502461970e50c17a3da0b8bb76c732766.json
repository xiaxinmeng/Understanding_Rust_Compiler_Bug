{"sha": "4ff46a1502461970e50c17a3da0b8bb76c732766", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZjQ2YTE1MDI0NjE5NzBlNTBjMTdhM2RhMGI4YmI3NmM3MzI3NjY=", "commit": {"author": {"name": "Jesse Ruderman", "email": "jruderman@gmail.com", "date": "2011-09-27T03:34:07Z"}, "committer": {"name": "Jesse Ruderman", "email": "jruderman@gmail.com", "date": "2011-09-27T03:34:07Z"}, "message": "Add a cycle-collection fuzzer", "tree": {"sha": "6356e761c1ac020a00441cb3f5de155c90d1693b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6356e761c1ac020a00441cb3f5de155c90d1693b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ff46a1502461970e50c17a3da0b8bb76c732766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff46a1502461970e50c17a3da0b8bb76c732766", "html_url": "https://github.com/rust-lang/rust/commit/4ff46a1502461970e50c17a3da0b8bb76c732766", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ff46a1502461970e50c17a3da0b8bb76c732766/comments", "author": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3778b6c6a80a5ebced4782f1e4462ff82471847b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3778b6c6a80a5ebced4782f1e4462ff82471847b", "html_url": "https://github.com/rust-lang/rust/commit/3778b6c6a80a5ebced4782f1e4462ff82471847b"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "0caf414d1366c9e591e9981b3f032e3836932371", "filename": "src/fuzzer/cycles.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/4ff46a1502461970e50c17a3da0b8bb76c732766/src%2Ffuzzer%2Fcycles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff46a1502461970e50c17a3da0b8bb76c732766/src%2Ffuzzer%2Fcycles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Fcycles.rs?ref=4ff46a1502461970e50c17a3da0b8bb76c732766", "patch": "@@ -0,0 +1,59 @@\n+use std;\n+import std::vec;\n+import std::rand;\n+import std::option;\n+\n+// random uint less than n\n+fn under(r : rand::rng, n : uint) -> uint { assert n != 0u; r.next() as uint % n }\n+\n+// random choice from a vec\n+fn choice<T>(r : rand::rng, v : [T]) -> T { assert vec::len(v) != 0u; v[under(r, vec::len(v))] }\n+\n+// 1 in n chance of being true\n+fn unlikely(r : rand::rng, n : uint) -> bool { under(r, n) == 0u }\n+\n+tag maybe_pointy {\n+  no_pointy;\n+  yes_pointy(@pointy);\n+}\n+\n+type pointy = {\n+  mutable x : maybe_pointy,\n+  mutable y : maybe_pointy,\n+  mutable z : fn()->()\n+};\n+\n+iter allunder(n: uint) -> uint {\n+    let i: uint = 0u;\n+    while i < n { put i; i += 1u; }\n+}\n+\n+fn nopT(_x : @pointy) { }\n+fn nop() { }\n+\n+fn test_cycles(r : rand::rng)\n+{\n+    const max : uint = 10u;\n+\n+    let v : [mutable @pointy] = [mutable];\n+    for each i in allunder(max) {\n+        v += [mutable @{ mutable x : no_pointy, mutable y : no_pointy, mutable z: nop }];\n+    }\n+\n+    for each i in allunder(max) {\n+        v[i].x = yes_pointy(v[under(r, max)]);\n+        v[i].y = yes_pointy(v[under(r, max)]);\n+        v[i].z = bind nopT(v[under(r, max)]);\n+    }\n+\n+    // Drop refs one at a time\n+    for each i in allunder(max) {\n+        v[i] = @{ mutable x : no_pointy, mutable y : no_pointy, mutable z: nop };\n+    }\n+}\n+\n+fn main()\n+{\n+    let r = rand::mk_rng();\n+    test_cycles(r);\n+}"}]}