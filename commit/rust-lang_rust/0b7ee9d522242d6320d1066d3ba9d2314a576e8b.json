{"sha": "0b7ee9d522242d6320d1066d3ba9d2314a576e8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiN2VlOWQ1MjIyNDJkNjMyMGQxMDY2ZDNiYTlkMjMxNGE1NzZlOGI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-12T17:40:35Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-12T17:54:40Z"}, "message": "build-manifest: bundle the rustc version in the binary", "tree": {"sha": "49a55cefdd144822a58bc645d3cb1b1f5d8d9b05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49a55cefdd144822a58bc645d3cb1b1f5d8d9b05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b7ee9d522242d6320d1066d3ba9d2314a576e8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl+EmGEACgkQPgar6Auq\n8ZxpAxAAt3lbP+FbbcEPxvthd15M3ctoXD+HD0tFUHVtZpK/UVzt+orBD1pwlXYQ\nLz33oV1hRz99kLiF2C2TgBc4Atamp1xbUwl7Fnn+QT1B9rJCYvcvNkwLMwgN2iiq\nQ3wfDO67YHLNvONUUl7zkGQCZv3VoxYAM6YeWF38S40VIDDwwO4Z1Sr9Nqr6KKln\n41vqFg6DQQkBdk0MbUaJ0Xul8ikxzvjKfovETU+Tw6kTYdUHHb4G4qcvY5BDoSO4\nTk7sJVU/QzWRgiWWDyjulTQffGIUXmmp7qAGIni4MGbKEHID9bw4TZoV3yURBak8\nA8KPThPTUR56elk6VCezu1BY+0xrOrPfn4WF4uNSMKIH+RGmy8wh9B+HBDM3nmR8\n9sbSAel69fT6MkQaDKgJIUr8TXkfCGqAlvb/LFcRFakRmMsxHpGP9lrL3SVE0RJe\n/nFj5G9anvt4QAQxD+4s0wXIzjJIZb/HbtA4EtNBHwUtxKjDVKBQ8GhMDVDlLXvQ\n4ZO7gdgFwu+EnF7Zm+8vKt3vyVeDlnU1iRQ+5E1eckIQz7yvM2LgynZEZ8vE6lgZ\nZhVX0U+bL1+50Ap3ceEURDj0UgNhwJ9ORilR/FxlG37eNsHoS6lOl+nj4aBW4lJd\n8o9prS86Ofyjao3lAfx5WnnLVty3omYAnkWX1OjTMass0/aZ3p0=\n=IAr9\n-----END PGP SIGNATURE-----", "payload": "tree 49a55cefdd144822a58bc645d3cb1b1f5d8d9b05\nparent cbded3e193ba7acc4611e9b8612bbc98608e7800\nauthor Pietro Albini <pietro@pietroalbini.org> 1602524435 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1602525280 +0200\n\nbuild-manifest: bundle the rustc version in the binary\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7ee9d522242d6320d1066d3ba9d2314a576e8b", "html_url": "https://github.com/rust-lang/rust/commit/0b7ee9d522242d6320d1066d3ba9d2314a576e8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbded3e193ba7acc4611e9b8612bbc98608e7800", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbded3e193ba7acc4611e9b8612bbc98608e7800", "html_url": "https://github.com/rust-lang/rust/commit/cbded3e193ba7acc4611e9b8612bbc98608e7800"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "dd4cf9d5953230ea19306ffaf446d1af3ff3a6f6", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=0b7ee9d522242d6320d1066d3ba9d2314a576e8b", "patch": "@@ -2353,7 +2353,6 @@ impl Step for HashSign {\n         cmd.arg(today.trim());\n         cmd.arg(addr);\n         cmd.arg(&builder.config.channel);\n-        cmd.arg(&builder.version);\n         cmd.env(\"BUILD_MANIFEST_LEGACY\", \"1\");\n \n         builder.create_dir(&distdir(builder));"}, {"sha": "7c64e5a0aadc8e3624dfc6900a268115eb40a931", "filename": "src/bootstrap/run.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/src%2Fbootstrap%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/src%2Fbootstrap%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frun.rs?ref=0b7ee9d522242d6320d1066d3ba9d2314a576e8b", "patch": "@@ -77,7 +77,6 @@ impl Step for BuildManifest {\n         cmd.arg(today.trim());\n         cmd.arg(addr);\n         cmd.arg(&builder.config.channel);\n-        cmd.arg(&builder.version);\n \n         builder.create_dir(&distdir(builder));\n         builder.run(&mut cmd);"}, {"sha": "cb04900c737e07ecf99ee9f2badea0c1ca5c60b9", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=0b7ee9d522242d6320d1066d3ba9d2314a576e8b", "patch": "@@ -226,7 +226,6 @@ fn main() {\n     let date = args.next().unwrap();\n     let s3_address = args.next().unwrap();\n     let channel = args.next().unwrap();\n-    let rustc_version = args.next().unwrap();\n \n     // Do not ask for a passphrase while manually testing\n     let mut passphrase = String::new();\n@@ -236,7 +235,7 @@ fn main() {\n     }\n \n     Builder {\n-        versions: Versions::new(&channel, &rustc_version, &input).unwrap(),\n+        versions: Versions::new(&channel, &input).unwrap(),\n \n         input,\n         output,"}, {"sha": "79f2ef8dfc450cff1196bf1c03982560317cd9c7", "filename": "src/tools/build-manifest/src/versions.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7ee9d522242d6320d1066d3ba9d2314a576e8b/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs?ref=0b7ee9d522242d6320d1066d3ba9d2314a576e8b", "patch": "@@ -7,6 +7,7 @@ use std::path::{Path, PathBuf};\n use tar::Archive;\n \n const DEFAULT_TARGET: &str = \"x86_64-unknown-linux-gnu\";\n+const RUSTC_VERSION: &str = include_str!(\"../../../version\");\n \n #[derive(Debug, Hash, Eq, PartialEq, Clone)]\n pub(crate) enum PkgType {\n@@ -87,19 +88,13 @@ pub(crate) struct VersionInfo {\n \n pub(crate) struct Versions {\n     channel: String,\n-    rustc_version: String,\n     dist_path: PathBuf,\n     versions: HashMap<PkgType, VersionInfo>,\n }\n \n impl Versions {\n-    pub(crate) fn new(channel: &str, rustc_version: &str, dist_path: &Path) -> Result<Self, Error> {\n-        Ok(Self {\n-            channel: channel.into(),\n-            rustc_version: rustc_version.into(),\n-            dist_path: dist_path.into(),\n-            versions: HashMap::new(),\n-        })\n+    pub(crate) fn new(channel: &str, dist_path: &Path) -> Result<Self, Error> {\n+        Ok(Self { channel: channel.into(), dist_path: dist_path.into(), versions: HashMap::new() })\n     }\n \n     pub(crate) fn channel(&self) -> &str {\n@@ -177,10 +172,10 @@ impl Versions {\n     ) -> Result<String, Error> {\n         let component_name = package.tarball_component_name();\n         let version = match self.channel.as_str() {\n-            \"stable\" => self.rustc_version.clone(),\n+            \"stable\" => RUSTC_VERSION.into(),\n             \"beta\" => \"beta\".into(),\n             \"nightly\" => \"nightly\".into(),\n-            _ => format!(\"{}-dev\", self.rustc_version),\n+            _ => format!(\"{}-dev\", RUSTC_VERSION),\n         };\n \n         if package.target_independent() {\n@@ -191,6 +186,6 @@ impl Versions {\n     }\n \n     pub(crate) fn rustc_version(&self) -> &str {\n-        &self.rustc_version\n+        RUSTC_VERSION\n     }\n }"}]}