{"sha": "ae2672340cf8e4243b99a59c7f01b663a4d4dc78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMjY3MjM0MGNmOGU0MjQzYjk5YTU5YzdmMDFiNjYzYTRkNGRjNzg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-16T15:38:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-16T15:38:52Z"}, "message": "Rollup merge of #62666 - estebank:preempt-ice, r=eddyb\n\nCancel unemitted diagnostics during error recovery\n\nFollow up to https://github.com/rust-lang/rust/pull/62604. Use @eddyb's preferred style and catch other case of the same problem.\n\nr? @eddyb", "tree": {"sha": "44f5ef1d592fa7b12d6a3d18cb0ecafa957146e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44f5ef1d592fa7b12d6a3d18cb0ecafa957146e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae2672340cf8e4243b99a59c7f01b663a4d4dc78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdLe+MCRBK7hj4Ov3rIwAAdHIIAK/orJGvHWCqo1hR3ZZSreFA\nOfFjcL5/VBwME8qJgmLpvS4izMKo9UQZnoB7aWT0DWU1xqYYg/eR/dBXw0oEhgIi\nTS2iENDmMkoDEXQCK204S75PjeHng3hV09D7Wgu5Jpng5ZgD/UwEni17ZOcRhRja\nMme0ZhtvbKe8OyLZiLYrXzTsxSdXfg2SkIdFNXWv6qQ1Xa4R8oIM6OkqgdtyX9Gr\n7NOCOLzPngElb7piwHTp+fGPkjGek23TQu9pBZ3Ozn1iHQWvtNp/tQGwrW8aX3wG\nGZqWWNf51GlDg9eAvENbHGviz1CcFInKbjZ2UtsyXHWswQmzIfFhjN5RRWyLRYo=\n=Wibx\n-----END PGP SIGNATURE-----\n", "payload": "tree 44f5ef1d592fa7b12d6a3d18cb0ecafa957146e3\nparent 02785dabad07d19b8c76a7f86763801d5d3497ff\nparent f05dfe07f69cc126ee6c4132394b78d36e93c0d0\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1563291532 -0400\ncommitter GitHub <noreply@github.com> 1563291532 -0400\n\nRollup merge of #62666 - estebank:preempt-ice, r=eddyb\n\nCancel unemitted diagnostics during error recovery\n\nFollow up to https://github.com/rust-lang/rust/pull/62604. Use @eddyb's preferred style and catch other case of the same problem.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae2672340cf8e4243b99a59c7f01b663a4d4dc78", "html_url": "https://github.com/rust-lang/rust/commit/ae2672340cf8e4243b99a59c7f01b663a4d4dc78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae2672340cf8e4243b99a59c7f01b663a4d4dc78/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02785dabad07d19b8c76a7f86763801d5d3497ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/02785dabad07d19b8c76a7f86763801d5d3497ff", "html_url": "https://github.com/rust-lang/rust/commit/02785dabad07d19b8c76a7f86763801d5d3497ff"}, {"sha": "f05dfe07f69cc126ee6c4132394b78d36e93c0d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f05dfe07f69cc126ee6c4132394b78d36e93c0d0", "html_url": "https://github.com/rust-lang/rust/commit/f05dfe07f69cc126ee6c4132394b78d36e93c0d0"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "1d4d02c7325826118bbefbf57101b84f77c19b9c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ae2672340cf8e4243b99a59c7f01b663a4d4dc78/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae2672340cf8e4243b99a59c7f01b663a4d4dc78/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ae2672340cf8e4243b99a59c7f01b663a4d4dc78", "patch": "@@ -7418,13 +7418,12 @@ impl<'a> Parser<'a> {\n             } else if self.look_ahead(1, |t| *t == token::OpenDelim(token::Paren)) {\n                 let ident = self.parse_ident().unwrap();\n                 self.bump();  // `(`\n-                let kw_name = match self.parse_self_arg_with_attrs() {\n-                    Ok(Some(_)) => \"method\",\n-                    Ok(None) => \"function\",\n-                    Err(mut err) => {\n-                        err.cancel();\n-                        \"function\"\n-                    }\n+                let kw_name = if let Ok(Some(_)) = self.parse_self_arg_with_attrs()\n+                    .map_err(|mut e| e.cancel())\n+                {\n+                    \"method\"\n+                } else {\n+                    \"function\"\n                 };\n                 self.consume_block(token::Paren);\n                 let (kw, kw_name, ambiguous) = if self.check(&token::RArrow) {\n@@ -7472,7 +7471,9 @@ impl<'a> Parser<'a> {\n                 self.eat_to_tokens(&[&token::Gt]);\n                 self.bump();  // `>`\n                 let (kw, kw_name, ambiguous) = if self.eat(&token::OpenDelim(token::Paren)) {\n-                    if let Ok(Some(_)) = self.parse_self_arg_with_attrs() {\n+                    if let Ok(Some(_)) = self.parse_self_arg_with_attrs()\n+                        .map_err(|mut e| e.cancel())\n+                    {\n                         (\"fn\", \"method\", false)\n                     } else {\n                         (\"fn\", \"function\", false)"}]}