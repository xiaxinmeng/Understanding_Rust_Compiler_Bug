{"sha": "e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZjNiOTRkNTYxYmZiOGY5Yzc4YTllZjJiMjc2YzIyYjI5YThmYWY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-10T03:45:32Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-10T21:30:12Z"}, "message": "Clippy fixes", "tree": {"sha": "a9ad109ed4b1d909c1a8c9db141b4896c62629d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9ad109ed4b1d909c1a8c9db141b4896c62629d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl7hUOQACgkQtAh+UQ6Y\nsWTqoA//VH8UTOtGQoukOY/cbGCa1viC0vFJUVgiODBJLapoNYLU+ATsZHqWD2ji\nW/G2lQUiUrFG/MC6TPc+BXOoIxj4JAvi0DScGEJHSm98+CKwSGNkhOwODk1PkWKg\n+7sZ8DEruPYMsoJ/SR5h1yAvDfbMIw0iHkrvH9EGrTNX3HEw8+PuzPrIJKGokkqM\nAM3IdUolm/HB21JfrN+0BUmsa0X3ZtpQ1bIyXvnWFLzxUeJUuG2zD0hdiH61/Q/t\nv9BlC5HRYn/yntOPY7WtqZ9Yt+U0yBt5Kn6YimXUsE+W9xzOXqN6F1c2q9i36PjT\nR3djN/LTKp0Wt9WaDoH/4oNqX5GT5suvMVk/YGa22juBEZKAZzjE7oTd2f7xX+R8\nmfxUwm9/WDnPfLboq/PRWYUyP6e+3dhvfLbenfD5r3SAsaENAIPb7owFTPsugjrq\nwPF2LtxZQVr+qBA5dwyq5XF8XQjojwlU3TXyTTsPiJbT1Jjwv9AFtWlKw0JG8XV2\nDPeUt7f5HUeTd+L78z/ZeLGte0nybeWxoG1KvbsNw4qOThfpl7KaV6yROkU75ai9\n28w4ul+giBQBFaC0Z5hdH361tsOORa7b70wZD5aUM6H7aa9C20Tsr6SlvwCTQAqz\nnE79bqVMmFpD2kmlQFeTzlE16Ju5Sz+5xXb3xkqU2L2/1/n3zhE=\n=0t51\n-----END PGP SIGNATURE-----", "payload": "tree a9ad109ed4b1d909c1a8c9db141b4896c62629d3\nparent bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90\nauthor Aaron Hill <aa1ronham@gmail.com> 1591760732 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1591824612 -0400\n\nClippy fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf", "html_url": "https://github.com/rust-lang/rust/commit/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "html_url": "https://github.com/rust-lang/rust/commit/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e94eebb88e4974bd10511c483ed24101051a2db5", "filename": "src/tools/clippy/clippy_lints/src/unnecessary_sort_by.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnecessary_sort_by.rs?ref=e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf", "patch": "@@ -95,7 +95,7 @@ fn mirrored_exprs(\n         // The two exprs are method calls.\n         // Check to see that the function is the same and the arguments are mirrored\n         // This is enough because the receiver of the method is listed in the arguments\n-        (ExprKind::MethodCall(left_segment, _, left_args), ExprKind::MethodCall(right_segment, _, right_args)) => {\n+        (ExprKind::MethodCall(left_segment, _, left_args, _), ExprKind::MethodCall(right_segment, _, right_args, _)) => {\n             left_segment.ident == right_segment.ident\n                 && left_args\n                     .iter()\n@@ -170,7 +170,7 @@ fn mirrored_exprs(\n \n fn detect_lint(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> Option<LintTrigger> {\n     if_chain! {\n-        if let ExprKind::MethodCall(name_ident, _, args) = &expr.kind;\n+        if let ExprKind::MethodCall(name_ident, _, args, _) = &expr.kind;\n         if let name = name_ident.ident.name.to_ident_string();\n         if name == \"sort_by\" || name == \"sort_unstable_by\";\n         if let [vec, Expr { kind: ExprKind::Closure(_, _, closure_body_id, _, _), .. }] = args;\n@@ -180,7 +180,7 @@ fn detect_lint(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> Option<LintTrigger>\n             Param { pat: Pat { kind: PatKind::Binding(_, _, left_ident, _), .. }, ..},\n             Param { pat: Pat { kind: PatKind::Binding(_, _, right_ident, _), .. }, .. }\n         ] = &closure_body.params;\n-        if let ExprKind::MethodCall(method_path, _, [ref left_expr, ref right_expr]) = &closure_body.value.kind;\n+        if let ExprKind::MethodCall(method_path, _, [ref left_expr, ref right_expr], _) = &closure_body.value.kind;\n         if method_path.ident.name.to_ident_string() == \"cmp\";\n         then {\n             let (closure_body, closure_arg, reverse) = if mirrored_exprs("}, {"sha": "e60e2a81e070bdeb97296492bfe433117e50cc3c", "filename": "src/tools/clippy/clippy_lints/src/utils/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fast_utils.rs?ref=e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf", "patch": "@@ -120,7 +120,7 @@ pub fn eq_expr(l: &Expr, r: &Expr) -> bool {\n         (Array(l), Array(r)) | (Tup(l), Tup(r)) => over(l, r, |l, r| eq_expr(l, r)),\n         (Repeat(le, ls), Repeat(re, rs)) => eq_expr(le, re) && eq_expr(&ls.value, &rs.value),\n         (Call(lc, la), Call(rc, ra)) => eq_expr(lc, rc) && over(la, ra, |l, r| eq_expr(l, r)),\n-        (MethodCall(lc, la), MethodCall(rc, ra)) => eq_path_seg(lc, rc) && over(la, ra, |l, r| eq_expr(l, r)),\n+        (MethodCall(lc, la, _), MethodCall(rc, ra, _)) => eq_path_seg(lc, rc) && over(la, ra, |l, r| eq_expr(l, r)),\n         (Binary(lo, ll, lr), Binary(ro, rl, rr)) => lo.node == ro.node && eq_expr(ll, rl) && eq_expr(lr, rr),\n         (Unary(lo, l), Unary(ro, r)) => mem::discriminant(lo) == mem::discriminant(ro) && eq_expr(l, r),\n         (Lit(l), Lit(r)) => l.kind == r.kind,"}, {"sha": "55758efa32e67f7e0d390f90d5e7b517a89695fe", "filename": "src/tools/clippy/clippy_lints/src/vec_resize_to_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fvec_resize_to_zero.rs?ref=e5f3b94d561bfb8f9c78a9ef2b276c22b29a8faf", "patch": "@@ -31,7 +31,7 @@ declare_lint_pass!(VecResizeToZero => [VEC_RESIZE_TO_ZERO]);\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for VecResizeToZero {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'_>) {\n         if_chain! {\n-            if let hir::ExprKind::MethodCall(path_segment, _, ref args) = expr.kind;\n+            if let hir::ExprKind::MethodCall(path_segment, _, ref args, _) = expr.kind;\n             if let Some(method_def_id) = cx.tables.type_dependent_def_id(expr.hir_id);\n             if match_def_path(cx, method_def_id, &paths::VEC_RESIZE) && args.len() == 3;\n             if let ExprKind::Lit(Spanned { node: LitKind::Int(0, _), .. }) = args[1].kind;"}]}