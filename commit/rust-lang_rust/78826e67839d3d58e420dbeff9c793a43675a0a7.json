{"sha": "78826e67839d3d58e420dbeff9c793a43675a0a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ODI2ZTY3ODM5ZDNkNThlNDIwZGJlZmY5Yzc5M2E0MzY3NWEwYTc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-03-28T14:16:52Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-03-29T00:17:58Z"}, "message": "Fix a typo", "tree": {"sha": "5f3fde9b19a14a3a5b71c22fa92d3365461ba157", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f3fde9b19a14a3a5b71c22fa92d3365461ba157"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78826e67839d3d58e420dbeff9c793a43675a0a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78826e67839d3d58e420dbeff9c793a43675a0a7", "html_url": "https://github.com/rust-lang/rust/commit/78826e67839d3d58e420dbeff9c793a43675a0a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78826e67839d3d58e420dbeff9c793a43675a0a7/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2d57e956a0d2021d3909b9ca676ec4eeb86c5c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2d57e956a0d2021d3909b9ca676ec4eeb86c5c5", "html_url": "https://github.com/rust-lang/rust/commit/a2d57e956a0d2021d3909b9ca676ec4eeb86c5c5"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "91b17db5d23b92077c4dee1999e416706a8659c4", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/78826e67839d3d58e420dbeff9c793a43675a0a7/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78826e67839d3d58e420dbeff9c793a43675a0a7/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=78826e67839d3d58e420dbeff9c793a43675a0a7", "patch": "@@ -24,7 +24,7 @@ use lists::{write_list, itemize_list, ListFormatting, SeparatorTactic, ListTacti\n use string::{StringFormat, rewrite_string};\n use utils::{extra_offset, last_line_width, wrap_str, binary_search, first_line_width,\n             semicolon_for_stmt, trimmed_last_line_width, left_most_sub_expr, stmt_expr,\n-            place_spaces};\n+            colon_spaces};\n use visitor::FmtVisitor;\n use config::{Config, IndentStyle, MultilineStyle, ControlBraceStyle};\n use comment::{FindUncommented, rewrite_comment, contains_comment, recover_comment_removed};\n@@ -1891,8 +1891,9 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n     // of space, we should fall back to BlockIndent.\n }\n \n-pub fn type_annotation_separator(config: &Config) -> & str {\n-    place_spaces (config.space_before_type_annotation, config.space_after_type_annotation_colon)\n+pub fn type_annotation_separator(config: &Config) -> &str {\n+    colon_spaces(config.space_before_type_annotation,\n+                 config.space_after_type_annotation_colon)\n }\n \n fn rewrite_field(context: &RewriteContext, field: &ast::Field, shape: Shape) -> Option<String> {"}, {"sha": "3fb49b67c1c2c8873ddb6a3e01875290b359e227", "filename": "src/lists.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78826e67839d3d58e420dbeff9c793a43675a0a7/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78826e67839d3d58e420dbeff9c793a43675a0a7/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=78826e67839d3d58e420dbeff9c793a43675a0a7", "patch": "@@ -207,7 +207,7 @@ pub fn write_list<I, T>(items: I, formatting: &ListFormatting) -> Option<String>\n         let item_sep_len = if separate { sep_len } else { 0 };\n \n         // Item string may be multi-line. Its length (used for block comment alignment)\n-        // Should be only the length of the last line.\n+        // should be only the length of the last line.\n         let item_last_line = if item.is_multiline() {\n             inner_item.lines().last().unwrap_or(\"\")\n         } else {"}, {"sha": "d766b9770de8d769e2969457668409b138af13cc", "filename": "src/types.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78826e67839d3d58e420dbeff9c793a43675a0a7/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78826e67839d3d58e420dbeff9c793a43675a0a7/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=78826e67839d3d58e420dbeff9c793a43675a0a7", "patch": "@@ -21,7 +21,7 @@ use {Shape, Spanned};\n use codemap::SpanUtils;\n use lists::{format_item_list, itemize_list, format_fn_args};\n use rewrite::{Rewrite, RewriteContext};\n-use utils::{extra_offset, format_mutability, place_spaces, wrap_str};\n+use utils::{extra_offset, format_mutability, colon_spaces, wrap_str};\n use expr::{rewrite_unary_prefix, rewrite_pair, rewrite_tuple};\n use config::TypeDensity;\n use itertools::Itertools;\n@@ -346,7 +346,8 @@ fn format_function_type<'a, I>(inputs: I,\n }\n \n fn type_bound_colon(context: &RewriteContext) -> &'static str {\n-    place_spaces(context.config.space_before_bound, context.config.space_after_bound_colon)\n+    colon_spaces(context.config.space_before_bound,\n+                 context.config.space_after_bound_colon)\n }\n \n impl Rewrite for ast::WherePredicate {"}, {"sha": "1b1ef99955eefb2374295645ee43d4074be7dc60", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78826e67839d3d58e420dbeff9c793a43675a0a7/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78826e67839d3d58e420dbeff9c793a43675a0a7/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=78826e67839d3d58e420dbeff9c793a43675a0a7", "patch": "@@ -327,7 +327,7 @@ pub fn binary_search<C, T>(mut lo: usize, mut hi: usize, callback: C) -> Option<\n }\n \n #[inline]\n-pub fn place_spaces(before: bool, after: bool) -> &'static str {\n+pub fn colon_spaces(before: bool, after: bool) -> &'static str {\n     match (before, after) {\n         (true, true) => \" : \",\n         (true, false) => \" :\","}]}