{"sha": "d230b92ba7a2a32000be5e207860aa27d1a11113", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMzBiOTJiYTdhMmEzMjAwMGJlNWUyMDc4NjBhYTI3ZDFhMTExMTM=", "commit": {"author": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-08-23T13:05:40Z"}, "committer": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-08-23T13:05:40Z"}, "message": "implement debug in similar way to RangeInclusive", "tree": {"sha": "dffa0271c91f9f030d20910111088715752606f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dffa0271c91f9f030d20910111088715752606f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d230b92ba7a2a32000be5e207860aa27d1a11113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d230b92ba7a2a32000be5e207860aa27d1a11113", "html_url": "https://github.com/rust-lang/rust/commit/d230b92ba7a2a32000be5e207860aa27d1a11113", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d230b92ba7a2a32000be5e207860aa27d1a11113/comments", "author": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8e6d9bd86c9cf685666718ca99e016275e1751b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8e6d9bd86c9cf685666718ca99e016275e1751b", "html_url": "https://github.com/rust-lang/rust/commit/e8e6d9bd86c9cf685666718ca99e016275e1751b"}], "stats": {"total": 208, "additions": 49, "deletions": 159}, "files": [{"sha": "c9d0b12e7396f0bac4815b20e57d81c63f596e26", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d230b92ba7a2a32000be5e207860aa27d1a11113/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d230b92ba7a2a32000be5e207860aa27d1a11113/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=d230b92ba7a2a32000be5e207860aa27d1a11113", "patch": "@@ -688,7 +688,7 @@ impl Primitive {\n ///\n /// This is intended specifically to mirror LLVM\u2019s `!range` metadata,\n /// semantics.\n-#[derive(Clone, PartialEq, Eq, Hash, Debug)]\n+#[derive(Clone, PartialEq, Eq, Hash)]\n #[derive(HashStable_Generic)]\n pub struct WrappingRange {\n     pub start: u128,\n@@ -714,6 +714,13 @@ impl WrappingRange {\n     }\n }\n \n+impl fmt::Debug for WrappingRange {\n+    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        write!(fmt, \"{}..={}\", self.start, self.end)?;\n+        Ok(())\n+    }\n+}\n+\n /// Information about one scalar component of a Rust type.\n #[derive(Clone, PartialEq, Eq, Hash, Debug)]\n #[derive(HashStable_Generic)]"}, {"sha": "e44f324945481e2f84cc695315d701aecd25078e", "filename": "src/test/ui/consts/const-eval/ub-nonnull.32bit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.32bit.stderr?ref=d230b92ba7a2a32000be5e207860aa27d1a11113", "patch": "@@ -52,7 +52,7 @@ error[E0080]: it is undefined behavior to use this value\n   --> $DIR/ub-nonnull.rs:41:1\n    |\n LL | const BAD_RANGE1: RestrictedRange1 = unsafe { RestrictedRange1(42) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 42, but expected something in the range AllocationRange { start: 10, end: 30 }\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 42, but expected something in the range 10..=30\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 4, align: 4) {"}, {"sha": "1ce87bc7c1ce87a4e22b3c66578373ff1b11703e", "filename": "src/test/ui/consts/const-eval/ub-nonnull.64bit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.64bit.stderr?ref=d230b92ba7a2a32000be5e207860aa27d1a11113", "patch": "@@ -52,7 +52,7 @@ error[E0080]: it is undefined behavior to use this value\n   --> $DIR/ub-nonnull.rs:41:1\n    |\n LL | const BAD_RANGE1: RestrictedRange1 = unsafe { RestrictedRange1(42) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 42, but expected something in the range AllocationRange { start: 10, end: 30 }\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 42, but expected something in the range 10..=30\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 4, align: 4) {"}, {"sha": "1a371c6b17000b6c93d2a491f88321ba4ee95230", "filename": "src/test/ui/layout/debug.stderr", "status": "modified", "additions": 9, "deletions": 36, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Flayout%2Fdebug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Flayout%2Fdebug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fdebug.stderr?ref=d230b92ba7a2a32000be5e207860aa27d1a11113", "patch": "@@ -15,10 +15,7 @@ error: layout_of(E) = Layout {\n                 I32,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 0,\n-            },\n+            valid_range: 0..=0,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -94,10 +91,7 @@ error: layout_of(E) = Layout {\n                     I32,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 0,\n-                    end: 0,\n-                },\n+                valid_range: 0..=0,\n             },\n         },\n     ),\n@@ -144,20 +138,14 @@ error: layout_of(S) = Layout {\n                 I32,\n                 true,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 4294967295,\n-            },\n+            valid_range: 0..=4294967295,\n         },\n         Scalar {\n             value: Int(\n                 I32,\n                 true,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 4294967295,\n-            },\n+            valid_range: 0..=4294967295,\n         },\n     ),\n     largest_niche: None,\n@@ -219,10 +207,7 @@ error: layout_of(std::result::Result<i32, i32>) = Layout {\n                 I32,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 1,\n-            },\n+            valid_range: 0..=1,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -291,20 +276,14 @@ error: layout_of(std::result::Result<i32, i32>) = Layout {\n                 I32,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 1,\n-            },\n+            valid_range: 0..=1,\n         },\n         Scalar {\n             value: Int(\n                 I32,\n                 true,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 4294967295,\n-            },\n+            valid_range: 0..=4294967295,\n         },\n     ),\n     largest_niche: Some(\n@@ -317,10 +296,7 @@ error: layout_of(std::result::Result<i32, i32>) = Layout {\n                     I32,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 0,\n-                    end: 1,\n-                },\n+                valid_range: 0..=1,\n             },\n         },\n     ),\n@@ -350,10 +326,7 @@ error: layout_of(i32) = Layout {\n                 I32,\n                 true,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 4294967295,\n-            },\n+            valid_range: 0..=4294967295,\n         },\n     ),\n     largest_niche: None,"}, {"sha": "d4676a5afb25e227f19eb6a3867692e635ddda8c", "filename": "src/test/ui/layout/hexagon-enum.stderr", "status": "modified", "additions": 15, "deletions": 60, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Flayout%2Fhexagon-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Flayout%2Fhexagon-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fhexagon-enum.stderr?ref=d230b92ba7a2a32000be5e207860aa27d1a11113", "patch": "@@ -15,10 +15,7 @@ error: layout_of(A) = Layout {\n                 I8,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 0,\n-            },\n+            valid_range: 0..=0,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -55,10 +52,7 @@ error: layout_of(A) = Layout {\n                 I8,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 0,\n-            },\n+            valid_range: 0..=0,\n         },\n     ),\n     largest_niche: Some(\n@@ -71,10 +65,7 @@ error: layout_of(A) = Layout {\n                     I8,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 0,\n-                    end: 0,\n-                },\n+                valid_range: 0..=0,\n             },\n         },\n     ),\n@@ -112,10 +103,7 @@ error: layout_of(B) = Layout {\n                 I8,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 255,\n-                end: 255,\n-            },\n+            valid_range: 255..=255,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -152,10 +140,7 @@ error: layout_of(B) = Layout {\n                 I8,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 255,\n-                end: 255,\n-            },\n+            valid_range: 255..=255,\n         },\n     ),\n     largest_niche: Some(\n@@ -168,10 +153,7 @@ error: layout_of(B) = Layout {\n                     I8,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 255,\n-                    end: 255,\n-                },\n+                valid_range: 255..=255,\n             },\n         },\n     ),\n@@ -209,10 +191,7 @@ error: layout_of(C) = Layout {\n                 I16,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 256,\n-                end: 256,\n-            },\n+            valid_range: 256..=256,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -249,10 +228,7 @@ error: layout_of(C) = Layout {\n                 I16,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 256,\n-                end: 256,\n-            },\n+            valid_range: 256..=256,\n         },\n     ),\n     largest_niche: Some(\n@@ -265,10 +241,7 @@ error: layout_of(C) = Layout {\n                     I16,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 256,\n-                    end: 256,\n-                },\n+                valid_range: 256..=256,\n             },\n         },\n     ),\n@@ -306,10 +279,7 @@ error: layout_of(P) = Layout {\n                 I32,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 268435456,\n-                end: 268435456,\n-            },\n+            valid_range: 268435456..=268435456,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -346,10 +316,7 @@ error: layout_of(P) = Layout {\n                 I32,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 268435456,\n-                end: 268435456,\n-            },\n+            valid_range: 268435456..=268435456,\n         },\n     ),\n     largest_niche: Some(\n@@ -362,10 +329,7 @@ error: layout_of(P) = Layout {\n                     I32,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 268435456,\n-                    end: 268435456,\n-                },\n+                valid_range: 268435456..=268435456,\n             },\n         },\n     ),\n@@ -403,10 +367,7 @@ error: layout_of(T) = Layout {\n                 I32,\n                 true,\n             ),\n-            valid_range: AllocationRange {\n-                start: 2164260864,\n-                end: 2164260864,\n-            },\n+            valid_range: 2164260864..=2164260864,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -443,10 +404,7 @@ error: layout_of(T) = Layout {\n                 I32,\n                 true,\n             ),\n-            valid_range: AllocationRange {\n-                start: 2164260864,\n-                end: 2164260864,\n-            },\n+            valid_range: 2164260864..=2164260864,\n         },\n     ),\n     largest_niche: Some(\n@@ -459,10 +417,7 @@ error: layout_of(T) = Layout {\n                     I32,\n                     true,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 2164260864,\n-                    end: 2164260864,\n-                },\n+                valid_range: 2164260864..=2164260864,\n             },\n         },\n     ),"}, {"sha": "898a61b904db50bd0dbf1fa8f6feb492d2878290", "filename": "src/test/ui/layout/thumb-enum.stderr", "status": "modified", "additions": 15, "deletions": 60, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Flayout%2Fthumb-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d230b92ba7a2a32000be5e207860aa27d1a11113/src%2Ftest%2Fui%2Flayout%2Fthumb-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fthumb-enum.stderr?ref=d230b92ba7a2a32000be5e207860aa27d1a11113", "patch": "@@ -15,10 +15,7 @@ error: layout_of(A) = Layout {\n                 I8,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 0,\n-            },\n+            valid_range: 0..=0,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -55,10 +52,7 @@ error: layout_of(A) = Layout {\n                 I8,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 0,\n-                end: 0,\n-            },\n+            valid_range: 0..=0,\n         },\n     ),\n     largest_niche: Some(\n@@ -71,10 +65,7 @@ error: layout_of(A) = Layout {\n                     I8,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 0,\n-                    end: 0,\n-                },\n+                valid_range: 0..=0,\n             },\n         },\n     ),\n@@ -112,10 +103,7 @@ error: layout_of(B) = Layout {\n                 I8,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 255,\n-                end: 255,\n-            },\n+            valid_range: 255..=255,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -152,10 +140,7 @@ error: layout_of(B) = Layout {\n                 I8,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 255,\n-                end: 255,\n-            },\n+            valid_range: 255..=255,\n         },\n     ),\n     largest_niche: Some(\n@@ -168,10 +153,7 @@ error: layout_of(B) = Layout {\n                     I8,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 255,\n-                    end: 255,\n-                },\n+                valid_range: 255..=255,\n             },\n         },\n     ),\n@@ -209,10 +191,7 @@ error: layout_of(C) = Layout {\n                 I16,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 256,\n-                end: 256,\n-            },\n+            valid_range: 256..=256,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -249,10 +228,7 @@ error: layout_of(C) = Layout {\n                 I16,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 256,\n-                end: 256,\n-            },\n+            valid_range: 256..=256,\n         },\n     ),\n     largest_niche: Some(\n@@ -265,10 +241,7 @@ error: layout_of(C) = Layout {\n                     I16,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 256,\n-                    end: 256,\n-                },\n+                valid_range: 256..=256,\n             },\n         },\n     ),\n@@ -306,10 +279,7 @@ error: layout_of(P) = Layout {\n                 I32,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 268435456,\n-                end: 268435456,\n-            },\n+            valid_range: 268435456..=268435456,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -346,10 +316,7 @@ error: layout_of(P) = Layout {\n                 I32,\n                 false,\n             ),\n-            valid_range: AllocationRange {\n-                start: 268435456,\n-                end: 268435456,\n-            },\n+            valid_range: 268435456..=268435456,\n         },\n     ),\n     largest_niche: Some(\n@@ -362,10 +329,7 @@ error: layout_of(P) = Layout {\n                     I32,\n                     false,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 268435456,\n-                    end: 268435456,\n-                },\n+                valid_range: 268435456..=268435456,\n             },\n         },\n     ),\n@@ -403,10 +367,7 @@ error: layout_of(T) = Layout {\n                 I32,\n                 true,\n             ),\n-            valid_range: AllocationRange {\n-                start: 2164260864,\n-                end: 2164260864,\n-            },\n+            valid_range: 2164260864..=2164260864,\n         },\n         tag_encoding: Direct,\n         tag_field: 0,\n@@ -443,10 +404,7 @@ error: layout_of(T) = Layout {\n                 I32,\n                 true,\n             ),\n-            valid_range: AllocationRange {\n-                start: 2164260864,\n-                end: 2164260864,\n-            },\n+            valid_range: 2164260864..=2164260864,\n         },\n     ),\n     largest_niche: Some(\n@@ -459,10 +417,7 @@ error: layout_of(T) = Layout {\n                     I32,\n                     true,\n                 ),\n-                valid_range: AllocationRange {\n-                    start: 2164260864,\n-                    end: 2164260864,\n-                },\n+                valid_range: 2164260864..=2164260864,\n             },\n         },\n     ),"}]}