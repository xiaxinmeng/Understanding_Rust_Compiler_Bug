{"sha": "a0a47904d64031a7a24828d6ad368ea9da33082a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwYTQ3OTA0ZDY0MDMxYTdhMjQ4MjhkNmFkMzY4ZWE5ZGEzMzA4MmE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-11-21T18:36:11Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-11-21T18:41:44Z"}, "message": "renumber segment ids for visibilities whenever we clone them", "tree": {"sha": "63afcb87e838b9cb87c6bd75c1f71b4fd7e93926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63afcb87e838b9cb87c6bd75c1f71b4fd7e93926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0a47904d64031a7a24828d6ad368ea9da33082a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a47904d64031a7a24828d6ad368ea9da33082a", "html_url": "https://github.com/rust-lang/rust/commit/a0a47904d64031a7a24828d6ad368ea9da33082a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0a47904d64031a7a24828d6ad368ea9da33082a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40f80940035af4b44aa7846ed34abee71151d3ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/40f80940035af4b44aa7846ed34abee71151d3ee", "html_url": "https://github.com/rust-lang/rust/commit/40f80940035af4b44aa7846ed34abee71151d3ee"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "79d605c0035ed414e25dd0ba223b6fdd53f24b04", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a0a47904d64031a7a24828d6ad368ea9da33082a/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0a47904d64031a7a24828d6ad368ea9da33082a/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=a0a47904d64031a7a24828d6ad368ea9da33082a", "patch": "@@ -3029,12 +3029,7 @@ impl<'a> LoweringContext<'a> {\n                             hir::VisibilityKind::Inherited => hir::VisibilityKind::Inherited,\n                             hir::VisibilityKind::Restricted { ref path, id: _, hir_id: _ } => {\n                                 let id = this.next_id();\n-                                let mut path = path.clone();\n-                                for seg in path.segments.iter_mut() {\n-                                    if seg.id.is_some() {\n-                                        seg.id = Some(this.next_id().node_id);\n-                                    }\n-                                }\n+                                let path = this.renumber_segment_ids(path);\n                                 hir::VisibilityKind::Restricted {\n                                     path,\n                                     id: id.node_id,\n@@ -3119,8 +3114,9 @@ impl<'a> LoweringContext<'a> {\n                             hir::VisibilityKind::Inherited => hir::VisibilityKind::Inherited,\n                             hir::VisibilityKind::Restricted { ref path, id: _, hir_id: _ } => {\n                                 let id = this.next_id();\n+                                let path = this.renumber_segment_ids(path);\n                                 hir::VisibilityKind::Restricted {\n-                                    path: path.clone(),\n+                                    path: path,\n                                     id: id.node_id,\n                                     hir_id: id.hir_id,\n                                 }\n@@ -3154,6 +3150,20 @@ impl<'a> LoweringContext<'a> {\n         }\n     }\n \n+    /// Paths like the visibility path in `pub(super) use foo::{bar, baz}` are repeated\n+    /// many times in the HIR tree; for each occurrence, we need to assign distinct\n+    /// node-ids. (See e.g. #56128.)\n+    fn renumber_segment_ids(&mut self, path: &P<hir::Path>) -> P<hir::Path> {\n+        debug!(\"renumber_segment_ids(path = {:?})\", path);\n+        let mut path = path.clone();\n+        for seg in path.segments.iter_mut() {\n+            if seg.id.is_some() {\n+                seg.id = Some(self.next_id().node_id);\n+            }\n+        }\n+        path\n+    }\n+\n     fn lower_trait_item(&mut self, i: &TraitItem) -> hir::TraitItem {\n         let LoweredNodeId { node_id, hir_id } = self.lower_node_id(i.id);\n         let trait_item_def_id = self.resolver.definitions().local_def_id(node_id);"}]}