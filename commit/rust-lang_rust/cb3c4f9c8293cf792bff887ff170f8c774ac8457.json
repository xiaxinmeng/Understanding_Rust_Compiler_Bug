{"sha": "cb3c4f9c8293cf792bff887ff170f8c774ac8457", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiM2M0ZjljODI5M2NmNzkyYmZmODg3ZmYxNzBmOGM3NzRhYzg0NTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-29T07:16:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-29T07:16:41Z"}, "message": "auto merge of #14472 : huonw/rust/native-lib-warnings, r=alexcrichton\n\nrustc: clarify warning about native deps for a staticlib.\r\n\r\nThis adjusts the \"unlinked native library\" warning one receives when\r\ncompiling with `crate_type=\"staticlib\"`. The warning is just trying to\r\ntell the user that they need to link against these libraries, but the\r\nold text wasn't making this obvious, the new text says this explicitly.", "tree": {"sha": "e30359302b0869158670961cf1cd901f5c23627f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e30359302b0869158670961cf1cd901f5c23627f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb3c4f9c8293cf792bff887ff170f8c774ac8457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3c4f9c8293cf792bff887ff170f8c774ac8457", "html_url": "https://github.com/rust-lang/rust/commit/cb3c4f9c8293cf792bff887ff170f8c774ac8457", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb3c4f9c8293cf792bff887ff170f8c774ac8457/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6a1c9071ae88a6a846a5d68923be1e1575518c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a1c9071ae88a6a846a5d68923be1e1575518c6", "html_url": "https://github.com/rust-lang/rust/commit/a6a1c9071ae88a6a846a5d68923be1e1575518c6"}, {"sha": "a167caf1061ea81cb946ff4be2ca31cc1bc98310", "url": "https://api.github.com/repos/rust-lang/rust/commits/a167caf1061ea81cb946ff4be2ca31cc1bc98310", "html_url": "https://github.com/rust-lang/rust/commit/a167caf1061ea81cb946ff4be2ca31cc1bc98310"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "e59ce5cbf67ec11bdde67f9c8829f84356d9ccf8", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cb3c4f9c8293cf792bff887ff170f8c774ac8457/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb3c4f9c8293cf792bff887ff170f8c774ac8457/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=cb3c4f9c8293cf792bff887ff170f8c774ac8457", "patch": "@@ -1019,6 +1019,8 @@ fn link_staticlib(sess: &Session, obj_filename: &Path, out_filename: &Path) {\n     a.add_native_library(\"compiler-rt\").unwrap();\n \n     let crates = sess.cstore.get_used_crates(cstore::RequireStatic);\n+    let mut all_native_libs = vec![];\n+\n     for &(cnum, ref path) in crates.iter() {\n         let name = sess.cstore.get_crate_data(cnum).name.clone();\n         let p = match *path {\n@@ -1029,17 +1031,25 @@ fn link_staticlib(sess: &Session, obj_filename: &Path, out_filename: &Path) {\n             }\n         };\n         a.add_rlib(&p, name.as_slice(), sess.lto()).unwrap();\n+\n         let native_libs = csearch::get_native_libraries(&sess.cstore, cnum);\n-        for &(kind, ref lib) in native_libs.iter() {\n-            let name = match kind {\n-                cstore::NativeStatic => \"static library\",\n-                cstore::NativeUnknown => \"library\",\n-                cstore::NativeFramework => \"framework\",\n-            };\n-            sess.warn(format!(\"unlinked native {}: {}\",\n-                              name,\n-                              *lib).as_slice());\n-        }\n+        all_native_libs.extend(native_libs.move_iter());\n+    }\n+\n+    if !all_native_libs.is_empty() {\n+        sess.warn(\"link against the following native artifacts when linking against \\\n+                  this static library\");\n+        sess.note(\"the order and any duplication can be significant on some platforms, \\\n+                  and so may need to be preserved\");\n+    }\n+\n+    for &(kind, ref lib) in all_native_libs.iter() {\n+        let name = match kind {\n+            cstore::NativeStatic => \"static library\",\n+            cstore::NativeUnknown => \"library\",\n+            cstore::NativeFramework => \"framework\",\n+        };\n+        sess.note(format!(\"{}: {}\", name, *lib).as_slice());\n     }\n }\n "}]}