{"sha": "bea83213f3cf0293b0c7707ff1ddcdb6519e0d64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYTgzMjEzZjNjZjAyOTNiMGM3NzA3ZmYxZGRjZGI2NTE5ZTBkNjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-24T17:25:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-24T17:25:44Z"}, "message": "Rollup merge of #57803 - jethrogb:jb/sgx-unwind-version, r=alexcrichton\n\nSeveral changes to libunwind for SGX target\n\nTwo fixes:\n* #34978 bites again!\n* __rust_alloc are actually private symbols. Add new public versions. Also, these ones are `extern \"C\"`.\n\nUpstream changes (https://github.com/fortanix/llvm-project/pull/2, https://github.com/fortanix/llvm-project/pull/3):\n* b7357de Avoid too new relocation types being emitted\n* 0feefe5 Use new symbol names to call Rust allocator\n\nFixes https://github.com/fortanix/rust-sgx/issues/65", "tree": {"sha": "41f0d77e46cd6cab8053116270c68401061b4539", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41f0d77e46cd6cab8053116270c68401061b4539"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcSfUYCRBK7hj4Ov3rIwAAdHIIAJfNcMauWKtCg+eFB9iuWao8\nNtaeZ3WZXa/12DQIIfO6LRJ51Dcy7QSoh6aoeXJp2ZWB5RLZ3qeUGSRtCwRJflB1\nGd7/XMbEAvq2RwP+R0vwdWBBvygql5k3R2SqvQe6F4xrX3y8iA9d9TRjghiWkgRV\nYXH8kT2R11zaP6iG/D61hxmcNWEcpYGwu+LlGjsckOccITZ5COvOy+qsy+6sahjx\nbs40Y8sHNCQoX37j4ezT9T83iDwh7gXeo4rySsZu/9h2/vq/xvtklwlXXuhUF0QC\nXcySjuIifYoF5fq4Ot/5oojr4m18xUEa7fLkKmOzIOdrTSI/JXXbvHzlzg1Eujo=\n=DPwf\n-----END PGP SIGNATURE-----\n", "payload": "tree 41f0d77e46cd6cab8053116270c68401061b4539\nparent 8348f8338859d6267ef52d4671d98e8a4cf76a6f\nparent 6abba95045e28e768a2b553f6b0cd2f04a71bfe0\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548350744 +0100\ncommitter GitHub <noreply@github.com> 1548350744 +0100\n\nRollup merge of #57803 - jethrogb:jb/sgx-unwind-version, r=alexcrichton\n\nSeveral changes to libunwind for SGX target\n\nTwo fixes:\n* #34978 bites again!\n* __rust_alloc are actually private symbols. Add new public versions. Also, these ones are `extern \"C\"`.\n\nUpstream changes (https://github.com/fortanix/llvm-project/pull/2, https://github.com/fortanix/llvm-project/pull/3):\n* b7357de Avoid too new relocation types being emitted\n* 0feefe5 Use new symbol names to call Rust allocator\n\nFixes https://github.com/fortanix/rust-sgx/issues/65\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64", "html_url": "https://github.com/rust-lang/rust/commit/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8348f8338859d6267ef52d4671d98e8a4cf76a6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8348f8338859d6267ef52d4671d98e8a4cf76a6f", "html_url": "https://github.com/rust-lang/rust/commit/8348f8338859d6267ef52d4671d98e8a4cf76a6f"}, {"sha": "6abba95045e28e768a2b553f6b0cd2f04a71bfe0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6abba95045e28e768a2b553f6b0cd2f04a71bfe0", "html_url": "https://github.com/rust-lang/rust/commit/6abba95045e28e768a2b553f6b0cd2f04a71bfe0"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "952c1ba2ccb76b21ac52e3296b579398d04e8d73", "filename": "src/ci/docker/dist-various-2/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile?ref=bea83213f3cf0293b0c7707ff1ddcdb6519e0d64", "patch": "@@ -32,7 +32,7 @@ RUN /tmp/build-solaris-toolchain.sh sparcv9 sparcv9 solaris-sparc\n COPY dist-various-2/build-x86_64-fortanix-unknown-sgx-toolchain.sh /tmp/\n # We pass the commit id of the port of LLVM's libunwind to the build script.\n # Any update to the commit id here, should cause the container image to be re-built from this point on.\n-RUN /tmp/build-x86_64-fortanix-unknown-sgx-toolchain.sh \"bbe23902411be88d7388f381becefadd6e3ef819\"\n+RUN /tmp/build-x86_64-fortanix-unknown-sgx-toolchain.sh \"13fad13f8ea83a8da58d04a5faa45943151b3398\"\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh"}, {"sha": "43ceae7d33b8d88d8c2e904531730db606f3ee6a", "filename": "src/libstd/sys/sgx/rwlock.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64/src%2Flibstd%2Fsys%2Fsgx%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64/src%2Flibstd%2Fsys%2Fsgx%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Frwlock.rs?ref=bea83213f3cf0293b0c7707ff1ddcdb6519e0d64", "patch": "@@ -1,3 +1,4 @@\n+use alloc::{self, Layout};\n use num::NonZeroUsize;\n use slice;\n use str;\n@@ -147,6 +148,7 @@ impl RWLock {\n         self.__write_unlock(rguard, wguard);\n     }\n \n+    // only used by __rust_rwlock_unlock below\n     #[inline]\n     unsafe fn unlock(&self) {\n         let rguard = self.readers.lock();\n@@ -164,6 +166,7 @@ impl RWLock {\n \n const EINVAL: i32 = 22;\n \n+// used by libunwind port\n #[no_mangle]\n pub unsafe extern \"C\" fn __rust_rwlock_rdlock(p: *mut RWLock) -> i32 {\n     if p.is_null() {\n@@ -190,6 +193,8 @@ pub unsafe extern \"C\" fn __rust_rwlock_unlock(p: *mut RWLock) -> i32 {\n     return 0;\n }\n \n+// the following functions are also used by the libunwind port. They're\n+// included here to make sure parallel codegen and LTO don't mess things up.\n #[no_mangle]\n pub unsafe extern \"C\" fn __rust_print_err(m: *mut u8, s: i32) {\n     if s < 0 {\n@@ -206,6 +211,16 @@ pub unsafe extern \"C\" fn __rust_abort() {\n     ::sys::abort_internal();\n }\n \n+#[no_mangle]\n+pub unsafe extern \"C\" fn __rust_c_alloc(size: usize, align: usize) -> *mut u8 {\n+    alloc::alloc(Layout::from_size_align_unchecked(size, align))\n+}\n+\n+#[no_mangle]\n+pub unsafe extern \"C\" fn __rust_c_dealloc(ptr: *mut u8, size: usize, align: usize) {\n+    alloc::dealloc(ptr, Layout::from_size_align_unchecked(size, align))\n+}\n+\n #[cfg(test)]\n mod tests {\n "}]}