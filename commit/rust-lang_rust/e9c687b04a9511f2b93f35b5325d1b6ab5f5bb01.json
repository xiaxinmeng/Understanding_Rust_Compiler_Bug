{"sha": "e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YzY4N2IwNGE5NTExZjJiOTNmMzViNTMyNWQxYjZhYjVmNWJiMDE=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-03-30T13:05:33Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-04-24T18:38:02Z"}, "message": "Evaluate hair::ExprKind::Use in into\n\nThis avoids some unnecessary moves", "tree": {"sha": "d1f8ecb02a44b18f28b4ac880bda08377db27908", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1f8ecb02a44b18f28b4ac880bda08377db27908"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "html_url": "https://github.com/rust-lang/rust/commit/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff4d4b277f40b33b02e529d14c462ac11ab059ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff4d4b277f40b33b02e529d14c462ac11ab059ab", "html_url": "https://github.com/rust-lang/rust/commit/ff4d4b277f40b33b02e529d14c462ac11ab059ab"}], "stats": {"total": 46, "additions": 22, "deletions": 24}, "files": [{"sha": "da2de43c09efe03d74113c9d79019632f4c21546", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "patch": "@@ -150,10 +150,6 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                 let source = unpack!(block = this.as_operand(block, scope, source));\n                 block.and(Rvalue::Cast(CastKind::Misc, source, expr.ty))\n             }\n-            ExprKind::Use { source } => {\n-                let source = unpack!(block = this.as_operand(block, scope, source));\n-                block.and(Rvalue::Use(source))\n-            }\n             ExprKind::Pointer { cast, source } => {\n                 let source = unpack!(block = this.as_operand(block, scope, source));\n                 block.and(Rvalue::Cast(CastKind::Pointer(cast), source, expr.ty))\n@@ -363,6 +359,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n             | ExprKind::Match { .. }\n             | ExprKind::If { .. }\n             | ExprKind::NeverToAny { .. }\n+            | ExprKind::Use { .. }\n             | ExprKind::Loop { .. }\n             | ExprKind::LogicalOp { .. }\n             | ExprKind::Call { .. }"}, {"sha": "4e24b6853d6eb5fc7862e5809615c984e4742697", "filename": "src/librustc_mir/build/expr/category.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fcategory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fcategory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fcategory.rs?ref=e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "patch": "@@ -48,6 +48,7 @@ impl Category {\n             | ExprKind::If { .. }\n             | ExprKind::Match { .. }\n             | ExprKind::NeverToAny { .. }\n+            | ExprKind::Use { .. }\n             | ExprKind::Call { .. } => Some(Category::Rvalue(RvalueFunc::Into)),\n \n             ExprKind::Array { .. }\n@@ -58,7 +59,6 @@ impl Category {\n             | ExprKind::Binary { .. }\n             | ExprKind::Box { .. }\n             | ExprKind::Cast { .. }\n-            | ExprKind::Use { .. }\n             | ExprKind::Pointer { .. }\n             | ExprKind::Repeat { .. }\n             | ExprKind::Borrow { .. }"}, {"sha": "30ed9cef36f7bdec4ac0dbeac437bc3d8de2214e", "filename": "src/librustc_mir/build/expr/into.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs?ref=e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "patch": "@@ -327,6 +327,9 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                     success.unit()\n                 }\n             }\n+            ExprKind::Use { source } => {\n+                this.into(destination, block, source)\n+            }\n \n             // These cases don't actually need a destination\n             ExprKind::Assign { .. }\n@@ -379,7 +382,6 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n             | ExprKind::Binary { .. }\n             | ExprKind::Box { .. }\n             | ExprKind::Cast { .. }\n-            | ExprKind::Use { .. }\n             | ExprKind::Pointer { .. }\n             | ExprKind::Repeat { .. }\n             | ExprKind::Borrow { .. }"}, {"sha": "00a6b26d0cf226c8aa2d0a592851f03a73ec6016", "filename": "src/test/mir-opt/array-index-is-temporary.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary.rs?ref=e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "patch": "@@ -18,25 +18,24 @@ fn main() {\n // START rustc.main.EraseRegions.after.mir\n //     bb0: {\n //         ...\n-//         _6 = &mut _2;\n-//         _5 = &mut (*_6);\n-//         _4 = move _5 as *mut usize (Misc);\n-//         _3 = move _4;\n+//         _5 = &mut _2;\n+//         _4 = &mut (*_5);\n+//         _3 = move _4 as *mut usize (Misc);\n //         ...\n-//         _8 = _3;\n-//         _7 = const foo(move _8) -> bb1;\n+//         _7 = _3;\n+//         _6 = const foo(move _7) -> bb1;\n //     }\n //\n //     bb1: {\n //         ...\n-//         _9 = _2;\n-//         _10 = Len(_1);\n-//         _11 = Lt(_9, _10);\n-//         assert(move _11, \"index out of bounds: the len is move _10 but the index is _9\") -> bb2;\n+//         _8 = _2;\n+//         _9 = Len(_1);\n+//         _10 = Lt(_8, _9);\n+//         assert(move _10, \"index out of bounds: the len is move _9 but the index is _8\") -> bb2;\n //     }\n //\n //     bb2: {\n-//         _1[_9] = move _7;\n+//         _1[_8] = move _6;\n //         ...\n //         return;\n //     }"}, {"sha": "6b7c863fcd43febb098d171fb4cbfc8b99b44546", "filename": "src/test/mir-opt/retag.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Ftest%2Fmir-opt%2Fretag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01/src%2Ftest%2Fmir-opt%2Fretag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fretag.rs?ref=e9c687b04a9511f2b93f35b5325d1b6ab5f5bb01", "patch": "@@ -75,18 +75,18 @@ fn main() {\n //         _10 = move _8;\n //         Retag(_10);\n //         ...\n-//         _15 = &mut (*_10);\n-//         Retag(_15);\n-//         _14 = move _15 as *mut i32 (Misc);\n-//         Retag([raw] _14);\n+//         _13 = &mut (*_10);\n+//         Retag(_13);\n+//         _12 = move _13 as *mut i32 (Misc);\n+//         Retag([raw] _12);\n //         ...\n-//         _18 = move _19(move _20) -> bb2;\n+//         _16 = move _17(move _18) -> bb2;\n //     }\n //\n //     bb2: {\n-//         Retag(_18);\n+//         Retag(_16);\n //         ...\n-//         _22 = const Test::foo_shr(move _23, move _25) -> bb3;\n+//         _20 = const Test::foo_shr(move _21, move _23) -> bb3;\n //     }\n //\n //     bb3: {"}]}