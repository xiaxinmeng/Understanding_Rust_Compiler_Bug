{"sha": "a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZmEzMTAyOWYyNjQ5ODhjMWRhYzMwNzc4ZDljYmViZGQ1ZWI0ZDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-22T19:12:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-22T19:12:59Z"}, "message": "Auto merge of #39243 - cseale:issue_30924, r=est31\n\n[Gate Tests] - marking feature tests\n\nRemoval of the lang feature gate tests whitelist #39059\n\nr? @est31", "tree": {"sha": "b5cc3557935f043e0765012775590a4497c22574", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5cc3557935f043e0765012775590a4497c22574"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "html_url": "https://github.com/rust-lang/rust/commit/a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b79081c2eb7fe789f428ffcd20f49549c7ca84ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/b79081c2eb7fe789f428ffcd20f49549c7ca84ea", "html_url": "https://github.com/rust-lang/rust/commit/b79081c2eb7fe789f428ffcd20f49549c7ca84ea"}, {"sha": "ddb602721354f5c6501aae9d3558699987710e2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddb602721354f5c6501aae9d3558699987710e2c", "html_url": "https://github.com/rust-lang/rust/commit/ddb602721354f5c6501aae9d3558699987710e2c"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "e77fde845ae16bb3faaef0df6ac92190e18686d0", "filename": "src/test/compile-fail/attr-literals.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fattr-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fattr-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-literals.rs?ref=a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "patch": "@@ -10,6 +10,8 @@\n \n // Check that literals in attributes parse just fine.\n \n+// gate-test-custom_attribute\n+\n #![feature(rustc_attrs, attr_literals)]\n #![allow(dead_code)]\n #![allow(unused_variables)]"}, {"sha": "0d89c52d885f9022a85dfffaddd905ddd7914263", "filename": "src/test/compile-fail/attr-on-generic-formals-are-visited.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fattr-on-generic-formals-are-visited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fattr-on-generic-formals-are-visited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-on-generic-formals-are-visited.rs?ref=a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "patch": "@@ -15,6 +15,8 @@\n // checking feature-gating of the attributes themselves, not the\n // capability to parse such attributes in that context.\n \n+// gate-test-custom_attribute\n+\n #![feature(generic_param_attrs)]\n #![allow(dead_code)]\n "}, {"sha": "b500bfc3c21390aa3255c242544a2b951844a7f1", "filename": "src/test/compile-fail/gated-attr-literals.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fgated-attr-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fgated-attr-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-attr-literals.rs?ref=a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "patch": "@@ -11,6 +11,7 @@\n // Check that literals in attributes don't parse without the feature gate.\n \n // gate-test-attr_literals\n+// gate-test-custom_attribute\n \n #![feature(rustc_attrs)]\n #![allow(dead_code)]"}, {"sha": "6cc682bde997f123ebfaa2fd78da40bc2d9aad9d", "filename": "src/test/compile-fail/macro-with-seps-err-msg.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs?ref=a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-use_extern_macros\n+\n fn main() {\n     globnar::brotz!(); //~ ERROR non-ident macro paths are experimental\n     ::foo!(); //~ ERROR non-ident macro paths are experimental"}, {"sha": "c40d0574955919351ab47a6747376751514b7997", "filename": "src/test/compile-fail/struct-path-self-feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-path-self-feature-gate.rs?ref=a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-more_struct_aliases\n+\n struct S;\n \n trait Tr {"}, {"sha": "a2c8116c9ba1c7c186057dced23a89900b232e97", "filename": "src/test/compile-fail/type-parameter-invalid-lint.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs?ref=a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-default_type_parameter_fallback\n+\n #![deny(future_incompatible)]\n #![allow(dead_code)]\n "}, {"sha": "f540dc3d3e6ad9da782f7f222d2c0fb0961ad5fb", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa31029f264988c1dac30778d9cbebdd5eb4d3/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "patch": "@@ -166,10 +166,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n     // FIXME get this whitelist empty.\n     let whitelist = vec![\n         \"abi_ptx\", \"simd\", \"macro_reexport\",\n-        \"more_struct_aliases\", \"static_recursion\", \"reflect\",\n-        \"quote\", \"cfg_target_has_atomic\", \"custom_attribute\",\n-        \"default_type_parameter_fallback\",\n-        \"use_extern_macros\", \"staged_api\", \"const_indexing\",\n+        \"static_recursion\", \"reflect\", \"quote\",\n+        \"cfg_target_has_atomic\", \"staged_api\", \"const_indexing\",\n         \"unboxed_closures\", \"stmt_expr_attributes\",\n         \"cfg_target_thread_local\", \"unwind_attributes\",\n         \"inclusive_range_syntax\", \"proc_macro\""}]}