{"sha": "f3798fd2134ce3b47d69e452dfe9aa926b66e859", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNzk4ZmQyMTM0Y2UzYjQ3ZDY5ZTQ1MmRmZTlhYTkyNmI2NmU4NTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-23T21:41:52Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-23T21:43:03Z"}, "message": "rustc: Load immediate types when iterating over interior vectors", "tree": {"sha": "364f9f6273be5fafa2985761216ec550d3a7caf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/364f9f6273be5fafa2985761216ec550d3a7caf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3798fd2134ce3b47d69e452dfe9aa926b66e859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3798fd2134ce3b47d69e452dfe9aa926b66e859", "html_url": "https://github.com/rust-lang/rust/commit/f3798fd2134ce3b47d69e452dfe9aa926b66e859", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3798fd2134ce3b47d69e452dfe9aa926b66e859/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cf00c15770a8e140c5612d42b943f6919f7909b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf00c15770a8e140c5612d42b943f6919f7909b", "html_url": "https://github.com/rust-lang/rust/commit/3cf00c15770a8e140c5612d42b943f6919f7909b"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "b7152d9e9ba7257934eb212399531181e21a5231", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f3798fd2134ce3b47d69e452dfe9aa926b66e859/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3798fd2134ce3b47d69e452dfe9aa926b66e859/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f3798fd2134ce3b47d69e452dfe9aa926b66e859", "patch": "@@ -2488,11 +2488,39 @@ fn iter_structural_ty_full(&@block_ctxt cx, ValueRef av, ValueRef bv,\n         auto b_elem_i8 = bcx.build.PointerCast(b_elem, T_ptr(T_i8()));\n         auto b_end_i8 = bcx.build.GEP(b_elem_i8, [len]);\n         auto b_end = bcx.build.PointerCast(b_end_i8, T_ptr(llunitty));\n+\n+        auto dest_elem_ptr = alloca(bcx, T_ptr(llunitty));\n+        auto src_elem_ptr = alloca(bcx, T_ptr(llunitty));\n+        bcx.build.Store(a_elem, dest_elem_ptr);\n+        bcx.build.Store(b_elem, src_elem_ptr);\n+\n         // Now perform the iteration.\n+        auto loop_header_cx = new_sub_block_ctxt(bcx,\n+                                                 \"iter_ivec_loop_header\");\n+        bcx.build.Br(loop_header_cx.llbb);\n+        auto dest_elem = loop_header_cx.build.Load(dest_elem_ptr);\n+        auto src_elem = loop_header_cx.build.Load(src_elem_ptr);\n+        auto not_yet_at_end = loop_header_cx.build.ICmp(lib::llvm::LLVMIntULT,\n+                                                        dest_elem, b_end);\n+        auto loop_body_cx = new_sub_block_ctxt(bcx, \"iter_ivec_loop_body\");\n+        auto next_cx = new_sub_block_ctxt(bcx, \"iter_ivec_next\");\n+        loop_header_cx.build.CondBr(not_yet_at_end, loop_body_cx.llbb,\n+                                    next_cx.llbb);\n+\n+        rslt = f(loop_body_cx,\n+            load_if_immediate(loop_body_cx, dest_elem, unit_ty),\n+            load_if_immediate(loop_body_cx, src_elem, unit_ty), unit_ty);\n+\n+        loop_body_cx = rslt.bcx;\n+        loop_body_cx.build.Store(loop_body_cx.build.InBoundsGEP(dest_elem,\n+            [C_int(1)]), dest_elem_ptr);\n+        loop_body_cx.build.Store(loop_body_cx.build.InBoundsGEP(src_elem,\n+            [C_int(1)]), src_elem_ptr);\n+        loop_body_cx.build.Br(loop_header_cx.llbb);\n \n-        auto vpf = bind adapter(_, _, _, unit_ty, f);\n-        ret iter_sequence_raw(bcx, a_elem, b_elem, b_end, unit_sz, vpf);\n+        ret res(next_cx, C_nil());\n     }\n+\n     let result r = res(cx, C_nil());\n     alt (ty::struct(cx.fcx.lcx.ccx.tcx, t)) {\n         case (ty::ty_tup(?args)) {"}]}