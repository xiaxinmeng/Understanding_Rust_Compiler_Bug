{"sha": "9c38a54cae966cd56db7358479a0d612572dc6f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMzhhNTRjYWU5NjZjZDU2ZGI3MzU4NDc5YTBkNjEyNTcyZGM2Zjk=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-17T03:52:20Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:03:28Z"}, "message": "Inline FunctionContext.mir", "tree": {"sha": "cf134a03a059e66c33140ed72d0d457ddd01160b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf134a03a059e66c33140ed72d0d457ddd01160b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c38a54cae966cd56db7358479a0d612572dc6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c38a54cae966cd56db7358479a0d612572dc6f9", "html_url": "https://github.com/rust-lang/rust/commit/9c38a54cae966cd56db7358479a0d612572dc6f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c38a54cae966cd56db7358479a0d612572dc6f9/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65f040031eeb1e3f0416290aaf6ab0aedb357443", "url": "https://api.github.com/repos/rust-lang/rust/commits/65f040031eeb1e3f0416290aaf6ab0aedb357443", "html_url": "https://github.com/rust-lang/rust/commit/65f040031eeb1e3f0416290aaf6ab0aedb357443"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "71875b008fadf6a92a5e5efa92f73ee1c7959fef", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9c38a54cae966cd56db7358479a0d612572dc6f9/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c38a54cae966cd56db7358479a0d612572dc6f9/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=9c38a54cae966cd56db7358479a0d612572dc6f9", "patch": "@@ -752,11 +752,7 @@ pub fn trans_instance<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, instance: Instance\n \n     let fcx = FunctionContext::new(ccx, lldecl, fn_ty, Some((instance, &sig, abi)), true);\n \n-    if fcx.mir.is_none() {\n-        bug!(\"attempted translation of `{}` w/o MIR\", instance);\n-    }\n-\n-    mir::trans_mir(&fcx);\n+    mir::trans_mir(&fcx, ccx.tcx().item_mir(instance.def));\n }\n \n pub fn trans_ctor_shim<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,"}, {"sha": "3fe9d64d575df15fc504b490892fff72a583ae07", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9c38a54cae966cd56db7358479a0d612572dc6f9/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c38a54cae966cd56db7358479a0d612572dc6f9/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=9c38a54cae966cd56db7358479a0d612572dc6f9", "patch": "@@ -22,7 +22,6 @@ use rustc::hir::def::Def;\n use rustc::hir::def_id::DefId;\n use rustc::hir::map::DefPathData;\n use rustc::infer::TransNormalize;\n-use rustc::mir::Mir;\n use rustc::util::common::MemoizationMap;\n use middle::lang_items::LangItem;\n use rustc::ty::subst::Substs;\n@@ -48,7 +47,6 @@ use std::borrow::Cow;\n use std::iter;\n use std::ops::Deref;\n use std::ffi::CString;\n-use std::cell::Ref;\n \n use syntax::ast;\n use syntax::symbol::{Symbol, InternedString};\n@@ -237,9 +235,6 @@ impl<'a, 'tcx> VariantInfo<'tcx> {\n \n // Function context. Every LLVM function we create will have one of these.\n pub struct FunctionContext<'a, 'tcx: 'a> {\n-    // The MIR for this function.\n-    pub mir: Option<Ref<'tcx, Mir<'tcx>>>,\n-\n     // The ValueRef returned from a call to llvm::LLVMAddFunction; the\n     // address of the first instruction in the sequence of\n     // instructions for this function that will go in the .text\n@@ -318,7 +313,6 @@ impl<'a, 'tcx> FunctionContext<'a, 'tcx> {\n         };\n \n         let mut fcx = FunctionContext {\n-            mir: mir,\n             llfn: llfndecl,\n             llretslotptr: None,\n             param_env: ccx.tcx().empty_parameter_environment(),\n@@ -368,10 +362,6 @@ impl<'a, 'tcx> FunctionContext<'a, 'tcx> {\n         }, self)\n     }\n \n-    pub fn mir(&self) -> Ref<'tcx, Mir<'tcx>> {\n-        self.mir.as_ref().map(Ref::clone).expect(\"fcx.mir was empty\")\n-    }\n-\n     pub fn new_block(&'a self, name: &str) -> BasicBlockRef {\n         unsafe {\n             let name = CString::new(name).unwrap();"}, {"sha": "3ddbed7aebdc01265eecacc7ce02ce6d3b202fac", "filename": "src/librustc_trans/debuginfo/create_scope_map.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9c38a54cae966cd56db7358479a0d612572dc6f9/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c38a54cae966cd56db7358479a0d612572dc6f9/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs?ref=9c38a54cae966cd56db7358479a0d612572dc6f9", "patch": "@@ -19,6 +19,7 @@ use rustc::mir::{Mir, VisibilityScope};\n \n use libc::c_uint;\n use std::ptr;\n+use std::cell::Ref;\n \n use syntax_pos::Pos;\n \n@@ -44,8 +45,10 @@ impl MirDebugScope {\n \n /// Produce DIScope DIEs for each MIR Scope which has variables defined in it.\n /// If debuginfo is disabled, the returned vector is empty.\n-pub fn create_mir_scopes(fcx: &FunctionContext) -> IndexVec<VisibilityScope, MirDebugScope> {\n-    let mir = fcx.mir();\n+pub fn create_mir_scopes<'tcx>(\n+    fcx: &FunctionContext,\n+    mir: Ref<'tcx, Mir<'tcx>>,\n+) -> IndexVec<VisibilityScope, MirDebugScope> {\n     let null_scope = MirDebugScope {\n         scope_metadata: ptr::null_mut(),\n         file_start_pos: BytePos(0),"}, {"sha": "b0b41cd1b069ab4ee48cc2f680e070e01cb6cbda", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9c38a54cae966cd56db7358479a0d612572dc6f9/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c38a54cae966cd56db7358479a0d612572dc6f9/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=9c38a54cae966cd56db7358479a0d612572dc6f9", "patch": "@@ -12,7 +12,7 @@ use libc::c_uint;\n use llvm::{self, ValueRef, BasicBlockRef};\n use llvm::debuginfo::DIScope;\n use rustc::ty;\n-use rustc::mir;\n+use rustc::mir::{self, Mir};\n use rustc::mir::tcx::LvalueTy;\n use session::config::FullDebugInfo;\n use base;\n@@ -179,9 +179,11 @@ impl<'tcx> LocalRef<'tcx> {\n \n ///////////////////////////////////////////////////////////////////////////\n \n-pub fn trans_mir<'blk, 'tcx: 'blk>(fcx: &'blk FunctionContext<'blk, 'tcx>) {\n+pub fn trans_mir<'blk, 'tcx: 'blk>(\n+    fcx: &'blk FunctionContext<'blk, 'tcx>,\n+    mir: Ref<'tcx, Mir<'tcx>>\n+) {\n     let bcx = fcx.get_entry_block();\n-    let mir = fcx.mir();\n \n     // Analyze the temps to determine which must be lvalues\n     // FIXME\n@@ -199,7 +201,7 @@ pub fn trans_mir<'blk, 'tcx: 'blk>(fcx: &'blk FunctionContext<'blk, 'tcx>) {\n         }).collect();\n \n     // Compute debuginfo scopes from MIR scopes.\n-    let scopes = debuginfo::create_mir_scopes(fcx);\n+    let scopes = debuginfo::create_mir_scopes(fcx, Ref::clone(&mir));\n \n     let mut mircx = MirContext {\n         mir: Ref::clone(&mir),"}]}