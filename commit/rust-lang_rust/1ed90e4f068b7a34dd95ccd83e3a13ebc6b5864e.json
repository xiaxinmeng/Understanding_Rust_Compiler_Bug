{"sha": "1ed90e4f068b7a34dd95ccd83e3a13ebc6b5864e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZDkwZTRmMDY4YjdhMzRkZDk1Y2NkODNlM2ExM2ViYzZiNTg2NGU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-08T02:11:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-08T02:11:47Z"}, "message": "Rollup merge of #80791 - mrcz:master, r=jyn514\n\nFix type name in doc example for Iter and IterMut", "tree": {"sha": "ec4aeacf70b125d64979dd0b3cb74e265b6982ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec4aeacf70b125d64979dd0b3cb74e265b6982ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ed90e4f068b7a34dd95ccd83e3a13ebc6b5864e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf979jCRBK7hj4Ov3rIwAAdHIIAJpfAb1UGTlRyAXnZe2/qH0D\nBBzXQm2LfXrqI3oSUWKhTLjHHyAGm/XlcT+pgCISgrby2JrC1YnfrbMCsCCay1eH\nJP9B2DHkCfbKIUGPYAbNjZN2uXWkhWmDgsJdHKsCNtP9THAXnD7mYqYxxl5aYnUJ\nYXedWVtO/y51PKKuER+udhWwyElCi9NQaoOsd5k9uRNnKsNQ+1agQt1boEi357Yl\ni5Rh5tjptcpVrpeKCYNsmdijW/8zcHzXReiHVt1PIL4RyeAylNEpa8UJvdxTlwpA\n8OySBCf567etJ/JqMz5rUrW8WeYTPQMow77dOO46abxksHAxAtfWXgeD8koV1lg=\n=HmIa\n-----END PGP SIGNATURE-----\n", "payload": "tree ec4aeacf70b125d64979dd0b3cb74e265b6982ba\nparent f6c58afe151ff810b06499cce5b417e3d41d83de\nparent 358ef56216c298b36dfa95e879e9605bc0bae492\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1610071907 +0900\ncommitter GitHub <noreply@github.com> 1610071907 +0900\n\nRollup merge of #80791 - mrcz:master, r=jyn514\n\nFix type name in doc example for Iter and IterMut\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ed90e4f068b7a34dd95ccd83e3a13ebc6b5864e", "html_url": "https://github.com/rust-lang/rust/commit/1ed90e4f068b7a34dd95ccd83e3a13ebc6b5864e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ed90e4f068b7a34dd95ccd83e3a13ebc6b5864e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6c58afe151ff810b06499cce5b417e3d41d83de", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c58afe151ff810b06499cce5b417e3d41d83de", "html_url": "https://github.com/rust-lang/rust/commit/f6c58afe151ff810b06499cce5b417e3d41d83de"}, {"sha": "358ef56216c298b36dfa95e879e9605bc0bae492", "url": "https://api.github.com/repos/rust-lang/rust/commits/358ef56216c298b36dfa95e879e9605bc0bae492", "html_url": "https://github.com/rust-lang/rust/commit/358ef56216c298b36dfa95e879e9605bc0bae492"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "769b673d80ab58ec82a748e6567a4da9a356aae8", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ed90e4f068b7a34dd95ccd83e3a13ebc6b5864e/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ed90e4f068b7a34dd95ccd83e3a13ebc6b5864e/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=1ed90e4f068b7a34dd95ccd83e3a13ebc6b5864e", "patch": "@@ -51,7 +51,7 @@ fn size_from_ptr<T>(_: *const T) -> usize {\n /// Basic usage:\n ///\n /// ```\n-/// // First, we declare a type which has `iter` method to get the `Iter` struct (&[usize here]):\n+/// // First, we declare a type which has `iter` method to get the `Iter` struct (`&[usize]` here):\n /// let slice = &[1, 2, 3];\n ///\n /// // Then, we iterate over it:\n@@ -112,7 +112,7 @@ impl<'a, T> Iter<'a, T> {\n     ///\n     /// ```\n     /// // First, we declare a type which has the `iter` method to get the `Iter`\n-    /// // struct (&[usize here]):\n+    /// // struct (`&[usize]` here):\n     /// let slice = &[1, 2, 3];\n     ///\n     /// // Then, we get the iterator:\n@@ -167,7 +167,7 @@ impl<T> AsRef<[T]> for Iter<'_, T> {\n ///\n /// ```\n /// // First, we declare a type which has `iter_mut` method to get the `IterMut`\n-/// // struct (&[usize here]):\n+/// // struct (`&[usize]` here):\n /// let mut slice = &mut [1, 2, 3];\n ///\n /// // Then, we iterate over it and increment each element value:\n@@ -246,7 +246,7 @@ impl<'a, T> IterMut<'a, T> {\n     ///\n     /// ```\n     /// // First, we declare a type which has `iter_mut` method to get the `IterMut`\n-    /// // struct (&[usize here]):\n+    /// // struct (`&[usize]` here):\n     /// let mut slice = &mut [1, 2, 3];\n     ///\n     /// {"}]}