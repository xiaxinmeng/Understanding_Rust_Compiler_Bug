{"sha": "56aa6e20e0279c69e0130905573b1607056cfaf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YWE2ZTIwZTAyNzljNjllMDEzMDkwNTU3M2IxNjA3MDU2Y2ZhZjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-11T13:20:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-11T13:20:37Z"}, "message": "More symbols", "tree": {"sha": "814d6201390b46f64ea0f9571c6b2fcff52fa016", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/814d6201390b46f64ea0f9571c6b2fcff52fa016"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56aa6e20e0279c69e0130905573b1607056cfaf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56aa6e20e0279c69e0130905573b1607056cfaf9", "html_url": "https://github.com/rust-lang/rust/commit/56aa6e20e0279c69e0130905573b1607056cfaf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56aa6e20e0279c69e0130905573b1607056cfaf9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe1fe866f3fd0a7bb542debaae782470f107b7c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1fe866f3fd0a7bb542debaae782470f107b7c1", "html_url": "https://github.com/rust-lang/rust/commit/fe1fe866f3fd0a7bb542debaae782470f107b7c1"}], "stats": {"total": 64, "additions": 42, "deletions": 22}, "files": [{"sha": "f7723af004432ae13e64f1cfc9468c932d0224e0", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/56aa6e20e0279c69e0130905573b1607056cfaf9/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/56aa6e20e0279c69e0130905573b1607056cfaf9/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=56aa6e20e0279c69e0130905573b1607056cfaf9", "patch": "@@ -2,3 +2,4 @@\n **/*.rs.bk\n Cargo.lock\n .vscode/*\n+*.log"}, {"sha": "5cd781c8019961c5f68b759363051dc0521a46cd", "filename": "crates/libeditor/src/symbols.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Flibeditor%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Flibeditor%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fsymbols.rs?ref=56aa6e20e0279c69e0130905573b1607056cfaf9", "patch": "@@ -63,5 +63,8 @@ fn to_symbol(node: SyntaxNodeRef) -> Option<FileSymbol> {\n         .visit(decl::<ast::Enum<_>>)\n         .visit(decl::<ast::Trait<_>>)\n         .visit(decl::<ast::Module<_>>)\n+        .visit(decl::<ast::TypeItem<_>>)\n+        .visit(decl::<ast::ConstItem<_>>)\n+        .visit(decl::<ast::StaticItem<_>>)\n         .accept(node)?\n }"}, {"sha": "dedca49a4f7cd2e5253038e4decfc25daef35e21", "filename": "crates/libeditor/tests/test.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Flibeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Flibeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Ftests%2Ftest.rs?ref=56aa6e20e0279c69e0130905573b1607056cfaf9", "patch": "@@ -70,14 +70,20 @@ mod m {\n }\n \n enum E { X, Y(i32) }\n+type T = ();\n+static S: i32 = 92;\n+const C: i32 = 92;\n \"#);\n     let symbols = file_symbols(&file);\n     dbg_eq(\n         &symbols,\n         r#\"[FileSymbol { parent: None, name: \"Foo\", name_range: [8; 11), node_range: [1; 26), kind: STRUCT },\n             FileSymbol { parent: None, name: \"m\", name_range: [32; 33), node_range: [28; 53), kind: MODULE },\n             FileSymbol { parent: Some(1), name: \"bar\", name_range: [43; 46), node_range: [40; 51), kind: FUNCTION },\n-            FileSymbol { parent: None, name: \"E\", name_range: [60; 61), node_range: [55; 75), kind: ENUM }]\"#,\n+            FileSymbol { parent: None, name: \"E\", name_range: [60; 61), node_range: [55; 75), kind: ENUM },\n+            FileSymbol { parent: None, name: \"T\", name_range: [81; 82), node_range: [76; 88), kind: TYPE_ITEM },\n+            FileSymbol { parent: None, name: \"S\", name_range: [96; 97), node_range: [89; 108), kind: STATIC_ITEM },\n+            FileSymbol { parent: None, name: \"C\", name_range: [115; 116), node_range: [109; 127), kind: CONST_ITEM }]\"#,\n     )\n }\n "}, {"sha": "31f5ecc442330cc573e0be667a23a47ba81ff719", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=56aa6e20e0279c69e0130905573b1607056cfaf9", "patch": "@@ -180,3 +180,22 @@ impl<R: TreeRoot> AstNode<R> for Trait<R> {\n impl<R: TreeRoot> ast::NameOwner<R> for Trait<R> {}\n impl<R: TreeRoot> Trait<R> {}\n \n+// TypeItem\n+#[derive(Debug, Clone, Copy)]\n+pub struct TypeItem<R: TreeRoot = Arc<SyntaxRoot>> {\n+    syntax: SyntaxNode<R>,\n+}\n+\n+impl<R: TreeRoot> AstNode<R> for TypeItem<R> {\n+    fn cast(syntax: SyntaxNode<R>) -> Option<Self> {\n+        match syntax.kind() {\n+            TYPE_ITEM => Some(TypeItem { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode<R> { &self.syntax }\n+}\n+\n+impl<R: TreeRoot> ast::NameOwner<R> for TypeItem<R> {}\n+impl<R: TreeRoot> TypeItem<R> {}\n+"}, {"sha": "d4e8c53d3f0250fa3fc6a1d2c05398ce2dd6ed9c", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=56aa6e20e0279c69e0130905573b1607056cfaf9", "patch": "@@ -219,27 +219,14 @@ Grammar(\n                 [\"functions\", \"Function\"]\n             ]\n         ),\n-        \"Function\": (\n-            traits: [\"NameOwner\"]\n-        ),\n-        \"Struct\": (\n-            traits: [\"NameOwner\"]\n-        ),\n-        \"Enum\": (\n-            traits: [\"NameOwner\"]\n-        ),\n-        \"Trait\": (\n-            traits: [\"NameOwner\"]\n-        ),\n-        \"Module\": (\n-            traits: [\"NameOwner\"]\n-        ),\n-        \"ConstItem\": (\n-            traits: [\"NameOwner\"]\n-        ),\n-        \"StaticItem\": (\n-            traits: [\"NameOwner\"]\n-        ),\n+        \"Function\": ( traits: [\"NameOwner\"] ),\n+        \"Struct\": ( traits: [\"NameOwner\"] ),\n+        \"Enum\": ( traits: [\"NameOwner\"] ),\n+        \"Trait\": ( traits: [\"NameOwner\"] ),\n+        \"Module\": ( traits: [\"NameOwner\"] ),\n+        \"ConstItem\": ( traits: [\"NameOwner\"] ),\n+        \"StaticItem\": ( traits: [\"NameOwner\"] ),\n+        \"TypeItem\": ( traits: [\"NameOwner\"] ),\n         \"Name\": (),\n     },\n )"}, {"sha": "f6f960d224b0b96886f8ac823ab1187fbc5639c0", "filename": "crates/server/src/handlers.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Fserver%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Fserver%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fhandlers.rs?ref=56aa6e20e0279c69e0130905573b1607056cfaf9", "patch": "@@ -74,6 +74,9 @@ fn to_symbol_kind(kind: SyntaxKind) -> SymbolKind {\n         SyntaxKind::ENUM => SymbolKind::Enum,\n         SyntaxKind::TRAIT => SymbolKind::Interface,\n         SyntaxKind::MODULE => SymbolKind::Module,\n+        SyntaxKind::TYPE_ITEM => SymbolKind::TypeParameter,\n+        SyntaxKind::STATIC_ITEM => SymbolKind::Constant,\n+        SyntaxKind::CONST_ITEM => SymbolKind::Constant,\n         _ => SymbolKind::Variable,\n     }\n }"}, {"sha": "289ad6e3ce94dc029cc01d1c264c2ad3ccaa217b", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56aa6e20e0279c69e0130905573b1607056cfaf9/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=56aa6e20e0279c69e0130905573b1607056cfaf9", "patch": "@@ -188,6 +188,7 @@ fn existing_tests(dir: &Path) -> Result<HashMap<String, (PathBuf, Test)>> {\n }\n \n fn install_code_extension() -> Result<()> {\n+    execute!(r\"cargo install --path crates/server --force\")?;\n     execute!(\n         r\"\n cd code"}]}