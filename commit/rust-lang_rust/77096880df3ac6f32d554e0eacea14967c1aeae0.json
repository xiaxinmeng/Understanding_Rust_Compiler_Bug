{"sha": "77096880df3ac6f32d554e0eacea14967c1aeae0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MDk2ODgwZGYzYWM2ZjMyZDU1NGUwZWFjZWExNDk2N2MxYWVhZTA=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-14T23:57:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-14T23:57:19Z"}, "message": "Rollup merge of #72172 - Mark-Simulacrum:check-no-stage, r=alexcrichton\n\nForbid stage arguments to check\n\nUsers generally expect that check builds are fast, and that's only true in stage\n0 (stages beyond that need us to build a compiler, which is slow).\n\nCloses #69337\n\nr? @alexcrichton", "tree": {"sha": "08a5f56fa24412acce2598ea08fcaa8e22784a90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08a5f56fa24412acce2598ea08fcaa8e22784a90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77096880df3ac6f32d554e0eacea14967c1aeae0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJevdrfCRBK7hj4Ov3rIwAAdHIIAGrG8ET+QKCtbJVEzkBbBOPh\n9PIeLNP9N1/Huh+ZfhoXD+wFGfUZaZbV1hxtNCT29qd41rwpOGQcU6mJmiNcGRM1\nQqfTab0D1EGxDGfDjPgxBROoiveN7VcxFnVWJrBVIqqmqFJFeDYJ1XGIk38lkQRB\ndeOOjcteBV5fgeR7RW43yFzZQlcafMnTV6ZQrZgAA93AEUawxiFNpRy3yLsPhMVS\nmmTs8JACjXIK2KtH8B5dsUU224/+BewuQDns8WVQhhPutBUvGgxka3n4EFijURRN\nG4fgISBtIVlspJmMkmcUhGyeqp944pDxTEe/xaPCJX/YZYFHsU2dWAD1PC6Ov8Q=\n=uUot\n-----END PGP SIGNATURE-----\n", "payload": "tree 08a5f56fa24412acce2598ea08fcaa8e22784a90\nparent 24cd42781fdf65dcd28e12b48d0ad9895dc29d0d\nparent 2b42a2b541e04164428e83a4adfc4c120a482f82\nauthor Dylan DPC <dylan.dpc@gmail.com> 1589500639 +0200\ncommitter GitHub <noreply@github.com> 1589500639 +0200\n\nRollup merge of #72172 - Mark-Simulacrum:check-no-stage, r=alexcrichton\n\nForbid stage arguments to check\n\nUsers generally expect that check builds are fast, and that's only true in stage\n0 (stages beyond that need us to build a compiler, which is slow).\n\nCloses #69337\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77096880df3ac6f32d554e0eacea14967c1aeae0", "html_url": "https://github.com/rust-lang/rust/commit/77096880df3ac6f32d554e0eacea14967c1aeae0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77096880df3ac6f32d554e0eacea14967c1aeae0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "html_url": "https://github.com/rust-lang/rust/commit/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d"}, {"sha": "2b42a2b541e04164428e83a4adfc4c120a482f82", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b42a2b541e04164428e83a4adfc4c120a482f82", "html_url": "https://github.com/rust-lang/rust/commit/2b42a2b541e04164428e83a4adfc4c120a482f82"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "646b9e05d99c3c25c9357c3d24f2e359dee06deb", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/77096880df3ac6f32d554e0eacea14967c1aeae0/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77096880df3ac6f32d554e0eacea14967c1aeae0/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=77096880df3ac6f32d554e0eacea14967c1aeae0", "patch": "@@ -503,6 +503,20 @@ Arguments:\n             }\n         };\n \n+        if let Subcommand::Check { .. } = &cmd {\n+            if matches.opt_str(\"stage\").is_some() {\n+                println!(\"{}\", \"--stage not supported for x.py check, always treated as stage 0\");\n+                process::exit(1);\n+            }\n+            if matches.opt_str(\"keep-stage\").is_some() {\n+                println!(\n+                    \"{}\",\n+                    \"--keep-stage not supported for x.py check, only one stage available\"\n+                );\n+                process::exit(1);\n+            }\n+        }\n+\n         Flags {\n             verbose: matches.opt_count(\"verbose\"),\n             stage: matches.opt_str(\"stage\").map(|j| j.parse().expect(\"`stage` should be a number\")),"}]}