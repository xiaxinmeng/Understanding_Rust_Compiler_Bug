{"sha": "db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNWJlMWZlMjA4ZDBjYmRkZTc1MGEwZWI5ZjAxYmJkOGFmZGExZWU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-27T06:43:11Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-27T06:43:11Z"}, "message": "Move QueryContext to the parent module.", "tree": {"sha": "c83f6ed0c1ce68bce57565dbfefefae7b38265d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c83f6ed0c1ce68bce57565dbfefefae7b38265d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "html_url": "https://github.com/rust-lang/rust/commit/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4faf701d2028dd6031a3c772ae4b3e844d51c3c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4faf701d2028dd6031a3c772ae4b3e844d51c3c3", "html_url": "https://github.com/rust-lang/rust/commit/4faf701d2028dd6031a3c772ae4b3e844d51c3c3"}], "stats": {"total": 88, "additions": 46, "deletions": 42}, "files": [{"sha": "0c0335ba04f9a17934a8b96fc3d476a1294d7b05", "filename": "src/librustc_query_system/query/caches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs?ref=db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "patch": "@@ -1,6 +1,6 @@\n use crate::dep_graph::DepNodeIndex;\n-use crate::query::config::QueryContext;\n use crate::query::plumbing::{QueryLookup, QueryState};\n+use crate::query::QueryContext;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sharded::Sharded;"}, {"sha": "20dad0bd47ebcfb1de39e458e0d35a5b7f31268d", "filename": "src/librustc_query_system/query/config.rs", "status": "modified", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fconfig.rs?ref=db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "patch": "@@ -1,20 +1,14 @@\n //! Query configuration and description traits.\n \n+use crate::dep_graph::DepNode;\n use crate::dep_graph::SerializedDepNodeIndex;\n-use crate::dep_graph::{DepContext, DepGraph, DepNode};\n use crate::query::caches::QueryCache;\n-use crate::query::job::{QueryJobId, QueryJobInfo};\n use crate::query::plumbing::CycleError;\n-use crate::query::QueryState;\n+use crate::query::{QueryContext, QueryState};\n use rustc_data_structures::profiling::ProfileCategory;\n use rustc_span::def_id::DefId;\n \n use rustc_data_structures::fingerprint::Fingerprint;\n-use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::stable_hasher::HashStable;\n-use rustc_data_structures::sync::Lock;\n-use rustc_data_structures::thin_vec::ThinVec;\n-use rustc_errors::Diagnostic;\n use std::borrow::Cow;\n use std::fmt::Debug;\n use std::hash::Hash;\n@@ -29,36 +23,6 @@ pub trait QueryConfig<CTX> {\n     type Value: Clone;\n }\n \n-pub trait QueryContext: DepContext {\n-    type Query: Clone + HashStable<Self::StableHashingContext>;\n-\n-    fn incremental_verify_ich(&self) -> bool;\n-    fn verbose(&self) -> bool;\n-\n-    /// Get string representation from DefPath.\n-    fn def_path_str(&self, def_id: DefId) -> String;\n-\n-    /// Access the DepGraph.\n-    fn dep_graph(&self) -> &DepGraph<Self::DepKind>;\n-\n-    /// Get the query information from the TLS context.\n-    fn current_query_job(&self) -> Option<QueryJobId<Self::DepKind>>;\n-\n-    fn try_collect_active_jobs(\n-        &self,\n-    ) -> Option<FxHashMap<QueryJobId<Self::DepKind>, QueryJobInfo<Self>>>;\n-\n-    /// Executes a job by changing the `ImplicitCtxt` to point to the\n-    /// new query job while it executes. It returns the diagnostics\n-    /// captured during execution and the actual result.\n-    fn start_query<R>(\n-        &self,\n-        token: QueryJobId<Self::DepKind>,\n-        diagnostics: Option<&Lock<ThinVec<Diagnostic>>>,\n-        compute: impl FnOnce(Self) -> R,\n-    ) -> R;\n-}\n-\n pub trait QueryAccessors<CTX: QueryContext>: QueryConfig<CTX> {\n     const ANON: bool;\n     const EVAL_ALWAYS: bool;"}, {"sha": "de6dc81d8687a18be8d9e7ad7ccc7cc3257258e3", "filename": "src/librustc_query_system/query/job.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fjob.rs?ref=db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "patch": "@@ -1,6 +1,6 @@\n use crate::dep_graph::{DepContext, DepKind};\n-use crate::query::config::QueryContext;\n use crate::query::plumbing::CycleError;\n+use crate::query::QueryContext;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_span::Span;"}, {"sha": "b1677c5c93da9e9a4a8fa978e7b255135339e103", "filename": "src/librustc_query_system/query/mod.rs", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fmod.rs?ref=db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "patch": "@@ -10,4 +10,43 @@ mod caches;\n pub use self::caches::{CacheSelector, DefaultCacheSelector, QueryCache};\n \n mod config;\n-pub use self::config::{QueryAccessors, QueryConfig, QueryContext, QueryDescription};\n+pub use self::config::{QueryAccessors, QueryConfig, QueryDescription};\n+\n+use crate::dep_graph::{DepContext, DepGraph};\n+\n+use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::stable_hasher::HashStable;\n+use rustc_data_structures::sync::Lock;\n+use rustc_data_structures::thin_vec::ThinVec;\n+use rustc_errors::Diagnostic;\n+use rustc_span::def_id::DefId;\n+\n+pub trait QueryContext: DepContext {\n+    type Query: Clone + HashStable<Self::StableHashingContext>;\n+\n+    fn incremental_verify_ich(&self) -> bool;\n+    fn verbose(&self) -> bool;\n+\n+    /// Get string representation from DefPath.\n+    fn def_path_str(&self, def_id: DefId) -> String;\n+\n+    /// Access the DepGraph.\n+    fn dep_graph(&self) -> &DepGraph<Self::DepKind>;\n+\n+    /// Get the query information from the TLS context.\n+    fn current_query_job(&self) -> Option<QueryJobId<Self::DepKind>>;\n+\n+    fn try_collect_active_jobs(\n+        &self,\n+    ) -> Option<FxHashMap<QueryJobId<Self::DepKind>, QueryJobInfo<Self>>>;\n+\n+    /// Executes a job by changing the `ImplicitCtxt` to point to the\n+    /// new query job while it executes. It returns the diagnostics\n+    /// captured during execution and the actual result.\n+    fn start_query<R>(\n+        &self,\n+        token: QueryJobId<Self::DepKind>,\n+        diagnostics: Option<&Lock<ThinVec<Diagnostic>>>,\n+        compute: impl FnOnce(Self) -> R,\n+    ) -> R;\n+}"}, {"sha": "b371a914c6fce02304d26bd16c237862b4a91e7c", "filename": "src/librustc_query_system/query/plumbing.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs?ref=db5be1fe208d0cbdde750a0eb9f01bbd8afda1ee", "patch": "@@ -5,8 +5,9 @@\n use crate::dep_graph::{DepKind, DepNode};\n use crate::dep_graph::{DepNodeIndex, SerializedDepNodeIndex};\n use crate::query::caches::QueryCache;\n-use crate::query::config::{QueryContext, QueryDescription};\n+use crate::query::config::QueryDescription;\n use crate::query::job::{QueryInfo, QueryJob, QueryJobId, QueryJobInfo, QueryShardJobId};\n+use crate::query::QueryContext;\n \n #[cfg(not(parallel_compiler))]\n use rustc_data_structures::cold_path;"}]}