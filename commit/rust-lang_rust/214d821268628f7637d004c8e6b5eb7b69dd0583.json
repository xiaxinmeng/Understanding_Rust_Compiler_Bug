{"sha": "214d821268628f7637d004c8e6b5eb7b69dd0583", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNGQ4MjEyNjg2MjhmNzYzN2QwMDRjOGU2YjVlYjdiNjlkZDA1ODM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-14T17:59:32Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-15T21:13:17Z"}, "message": "lintcheck: put some code into a gather_stats() function", "tree": {"sha": "6cc20ff5495b950b89febeb2ba57204ad3b5e257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cc20ff5495b950b89febeb2ba57204ad3b5e257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/214d821268628f7637d004c8e6b5eb7b69dd0583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/214d821268628f7637d004c8e6b5eb7b69dd0583", "html_url": "https://github.com/rust-lang/rust/commit/214d821268628f7637d004c8e6b5eb7b69dd0583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/214d821268628f7637d004c8e6b5eb7b69dd0583/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4856e5f8fc37f1fbe3766a44f1cec9520e208a5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4856e5f8fc37f1fbe3766a44f1cec9520e208a5a", "html_url": "https://github.com/rust-lang/rust/commit/4856e5f8fc37f1fbe3766a44f1cec9520e208a5a"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "ce05d4b0887b7939d8e77ea092a38378e80fb25d", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 22, "deletions": 18, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/214d821268628f7637d004c8e6b5eb7b69dd0583/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214d821268628f7637d004c8e6b5eb7b69dd0583/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=214d821268628f7637d004c8e6b5eb7b69dd0583", "patch": "@@ -319,6 +319,26 @@ fn parse_json_message(json_message: &str, krate: &Crate) -> ClippyWarning {\n     }\n }\n \n+/// Generate a short list of occuring lints-types and their count\n+fn gather_stats(clippy_warnings: &[ClippyWarning]) -> String {\n+    // count lint type occurrences\n+    let mut counter: HashMap<&String, usize> = HashMap::new();\n+    clippy_warnings\n+        .iter()\n+        .for_each(|wrn| *counter.entry(&wrn.linttype).or_insert(0) += 1);\n+\n+    // collect into a tupled list for sorting\n+    let mut stats: Vec<(&&String, &usize)> = counter.iter().map(|(lint, count)| (lint, count)).collect();\n+    // sort by \"000{count} {clippy::lintname}\"\n+    // to not have a lint with 200 and 2 warnings take the same spot\n+    stats.sort_by_key(|(lint, count)| format!(\"{:0>4}, {}\", count, lint));\n+\n+    stats\n+        .iter()\n+        .map(|(lint, count)| format!(\"{} {}\\n\", lint, count))\n+        .collect::<String>()\n+}\n+\n /// lintchecks `main()` function\n pub fn run(clap_config: &ArgMatches) {\n     let cargo_clippy_path: PathBuf = PathBuf::from(\"target/debug/cargo-clippy\");\n@@ -380,7 +400,8 @@ pub fn run(clap_config: &ArgMatches) {\n             .collect()\n     };\n \n-    // generate some stats:\n+    // generate some stats\n+    let stats_formatted = gather_stats(&clippy_warnings);\n \n     // grab crashes/ICEs, save the crate name and the ice message\n     let ices: Vec<(&String, &String)> = clippy_warnings\n@@ -389,23 +410,6 @@ pub fn run(clap_config: &ArgMatches) {\n         .map(|w| (&w.crate_name, &w.message))\n         .collect();\n \n-    // count lint type occurrences\n-    let mut counter: HashMap<&String, usize> = HashMap::new();\n-    clippy_warnings\n-        .iter()\n-        .for_each(|wrn| *counter.entry(&wrn.linttype).or_insert(0) += 1);\n-\n-    // collect into a tupled list for sorting\n-    let mut stats: Vec<(&&String, &usize)> = counter.iter().map(|(lint, count)| (lint, count)).collect();\n-    // sort by \"000{count} {clippy::lintname}\"\n-    // to not have a lint with 200 and 2 warnings take the same spot\n-    stats.sort_by_key(|(lint, count)| format!(\"{:0>4}, {}\", count, lint));\n-\n-    let stats_formatted: String = stats\n-        .iter()\n-        .map(|(lint, count)| format!(\"{} {}\\n\", lint, count))\n-        .collect::<String>();\n-\n     let mut all_msgs: Vec<String> = clippy_warnings.iter().map(|warning| warning.to_string()).collect();\n     all_msgs.sort();\n     all_msgs.push(\"\\n\\n\\n\\nStats\\n\\n\".into());"}]}