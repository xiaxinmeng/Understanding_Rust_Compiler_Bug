{"sha": "02a0bdee0da2b1462463468909a656d10c412e30", "node_id": "C_kwDOAAsO6NoAKDAyYTBiZGVlMGRhMmIxNDYyNDYzNDY4OTA5YTY1NmQxMGM0MTJlMzA", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-11-07T00:46:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-07T00:46:28Z"}, "message": "Rollup merge of #104066 - TimNN:riscv-layout, r=nikic\n\nLLVM 16: Update RISCV data layout\n\nThe RISCV data layout was changed in https://github.com/llvm/llvm-project/commit/974e2e690b4024c2677dde26cc76ec31e0047c1d.\n\nThis updates all `riscv64*` targets, though I don't really know what the difference between the `gc` and `imac` ones is.\n\nPasses `x test codegen` at LLVM head and with the currently bundled LLVM version. Without this patch, some tests fail with:\n\n> error: internal compiler error: compiler/rustc_codegen_llvm/src/context.rs:192:13: data-layout for target `riscv64gc-unknown-none-elf`, `e-m:e-p:64:64-i64:64-i128:128-n64-S128`, differs from LLVM target's `riscv64` default layout, `e-m:e-p:64:64-i64:64-i128:128-n32:64-S128", "tree": {"sha": "4b9ea05b467f970d2f63046acfe3e1c14e4d6ba8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b9ea05b467f970d2f63046acfe3e1c14e4d6ba8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02a0bdee0da2b1462463468909a656d10c412e30", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjaFVkCRBK7hj4Ov3rIwAATr4IAIMQdT6AH8dom8uF9uxyW0gU\nRQztBlkkqld6KbH5YxqtnVngYhodN+lQMNLoSes5xolcYLPXVcFnv50b+sZEBwFu\nPnyXwLU5qkJovdvjs1EfEeLpVhFRUBlp5MF/4mevXRJrY8EPJeK6hW2qF1CYI+s4\nugHh9C1cIW6fJk6+uoqwX6DJSrxDpOtIM5u0nlwhThffY+7Y4Km5Th8yuREi/14Z\nOWbbdSUOMGWukzmau27h6uA+H9qkBoLu+/XRPTWJ7lAkHGnA/ETj8QUbYPSlHFST\nVNvezmFdaXoh31OYlYf6THQ4eS0jmFQUsGHqC5h7ZLR7eCTYu7STIWVyNGgXeyg=\n=bp9x\n-----END PGP SIGNATURE-----\n", "payload": "tree 4b9ea05b467f970d2f63046acfe3e1c14e4d6ba8\nparent fe6161a6a5c3837151aa48cd43b390fa248f4d59\nparent f414715ebfda201f91f80ef9f28d9923d614d1c4\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1667781988 +0900\ncommitter GitHub <noreply@github.com> 1667781988 +0900\n\nRollup merge of #104066 - TimNN:riscv-layout, r=nikic\n\nLLVM 16: Update RISCV data layout\n\nThe RISCV data layout was changed in https://github.com/llvm/llvm-project/commit/974e2e690b4024c2677dde26cc76ec31e0047c1d.\n\nThis updates all `riscv64*` targets, though I don't really know what the difference between the `gc` and `imac` ones is.\n\nPasses `x test codegen` at LLVM head and with the currently bundled LLVM version. Without this patch, some tests fail with:\n\n> error: internal compiler error: compiler/rustc_codegen_llvm/src/context.rs:192:13: data-layout for target `riscv64gc-unknown-none-elf`, `e-m:e-p:64:64-i64:64-i128:128-n64-S128`, differs from LLVM target's `riscv64` default layout, `e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02a0bdee0da2b1462463468909a656d10c412e30", "html_url": "https://github.com/rust-lang/rust/commit/02a0bdee0da2b1462463468909a656d10c412e30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02a0bdee0da2b1462463468909a656d10c412e30/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe6161a6a5c3837151aa48cd43b390fa248f4d59", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe6161a6a5c3837151aa48cd43b390fa248f4d59", "html_url": "https://github.com/rust-lang/rust/commit/fe6161a6a5c3837151aa48cd43b390fa248f4d59"}, {"sha": "f414715ebfda201f91f80ef9f28d9923d614d1c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f414715ebfda201f91f80ef9f28d9923d614d1c4", "html_url": "https://github.com/rust-lang/rust/commit/f414715ebfda201f91f80ef9f28d9923d614d1c4"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "c22ec128dacb0cddc7b57f337668448729ed0dcb", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=02a0bdee0da2b1462463468909a656d10c412e30", "patch": "@@ -158,6 +158,10 @@ pub unsafe fn create_module<'ll>(\n         if sess.target.arch == \"s390x\" {\n             target_data_layout = target_data_layout.replace(\"-v128:64\", \"\");\n         }\n+\n+        if sess.target.arch == \"riscv64\" {\n+            target_data_layout = target_data_layout.replace(\"-n32:64-\", \"-n64-\");\n+        }\n     }\n \n     // Ensure the data-layout values hardcoded remain the defaults."}, {"sha": "8281bac10f88feba01ee04bd28bdbd3858bd34b8", "filename": "compiler/rustc_target/src/spec/riscv64gc_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_freebsd.rs?ref=02a0bdee0da2b1462463468909a656d10c412e30", "patch": "@@ -4,7 +4,7 @@ pub fn target() -> Target {\n     Target {\n         llvm_target: \"riscv64-unknown-freebsd\".into(),\n         pointer_width: 64,\n-        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n64-S128\".into(),\n+        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\".into(),\n         arch: \"riscv64\".into(),\n         options: TargetOptions {\n             code_model: Some(CodeModel::Medium),"}, {"sha": "90dccb28063dc955e7029939ca36d3f1a6429348", "filename": "compiler/rustc_target/src/spec/riscv64gc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_gnu.rs?ref=02a0bdee0da2b1462463468909a656d10c412e30", "patch": "@@ -4,7 +4,7 @@ pub fn target() -> Target {\n     Target {\n         llvm_target: \"riscv64-unknown-linux-gnu\".into(),\n         pointer_width: 64,\n-        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n64-S128\".into(),\n+        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\".into(),\n         arch: \"riscv64\".into(),\n         options: TargetOptions {\n             code_model: Some(CodeModel::Medium),"}, {"sha": "1a56c78e6852421e6eafd144d1835cccb4ec7edb", "filename": "compiler/rustc_target/src/spec/riscv64gc_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_musl.rs?ref=02a0bdee0da2b1462463468909a656d10c412e30", "patch": "@@ -4,7 +4,7 @@ pub fn target() -> Target {\n     Target {\n         llvm_target: \"riscv64-unknown-linux-musl\".into(),\n         pointer_width: 64,\n-        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n64-S128\".into(),\n+        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\".into(),\n         arch: \"riscv64\".into(),\n         options: TargetOptions {\n             code_model: Some(CodeModel::Medium),"}, {"sha": "409b0b2696152305a411713bace7a52f22f9bd88", "filename": "compiler/rustc_target/src/spec/riscv64gc_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_none_elf.rs?ref=02a0bdee0da2b1462463468909a656d10c412e30", "patch": "@@ -3,7 +3,7 @@ use crate::spec::{RelocModel, Target, TargetOptions};\n \n pub fn target() -> Target {\n     Target {\n-        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n64-S128\".into(),\n+        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\".into(),\n         llvm_target: \"riscv64\".into(),\n         pointer_width: 64,\n         arch: \"riscv64\".into(),"}, {"sha": "ade9d77624bdb4840bff24c6768d54c323bfeaea", "filename": "compiler/rustc_target/src/spec/riscv64gc_unknown_openbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_openbsd.rs?ref=02a0bdee0da2b1462463468909a656d10c412e30", "patch": "@@ -4,7 +4,7 @@ pub fn target() -> Target {\n     Target {\n         llvm_target: \"riscv64-unknown-openbsd\".into(),\n         pointer_width: 64,\n-        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n64-S128\".into(),\n+        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\".into(),\n         arch: \"riscv64\".into(),\n         options: TargetOptions {\n             code_model: Some(CodeModel::Medium),"}, {"sha": "87aba9171b41679976e92c0c7e1f517941b0965a", "filename": "compiler/rustc_target/src/spec/riscv64imac_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64imac_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0bdee0da2b1462463468909a656d10c412e30/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64imac_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64imac_unknown_none_elf.rs?ref=02a0bdee0da2b1462463468909a656d10c412e30", "patch": "@@ -3,7 +3,7 @@ use crate::spec::{RelocModel, Target, TargetOptions};\n \n pub fn target() -> Target {\n     Target {\n-        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n64-S128\".into(),\n+        data_layout: \"e-m:e-p:64:64-i64:64-i128:128-n32:64-S128\".into(),\n         llvm_target: \"riscv64\".into(),\n         pointer_width: 64,\n         arch: \"riscv64\".into(),"}]}