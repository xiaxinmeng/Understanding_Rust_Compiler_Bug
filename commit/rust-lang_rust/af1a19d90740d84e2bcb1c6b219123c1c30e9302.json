{"sha": "af1a19d90740d84e2bcb1c6b219123c1c30e9302", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMWExOWQ5MDc0MGQ4NGUyYmNiMWM2YjIxOTEyM2MxYzMwZTkzMDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-28T04:57:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-28T04:57:33Z"}, "message": "Auto merge of #963 - rust-lang:rustup, r=RalfJung\n\nUpdate to latest nightly", "tree": {"sha": "fedc2245527b7158a75b9406e8429af851bc5c5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fedc2245527b7158a75b9406e8429af851bc5c5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af1a19d90740d84e2bcb1c6b219123c1c30e9302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af1a19d90740d84e2bcb1c6b219123c1c30e9302", "html_url": "https://github.com/rust-lang/rust/commit/af1a19d90740d84e2bcb1c6b219123c1c30e9302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af1a19d90740d84e2bcb1c6b219123c1c30e9302/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "402129c01e162a74608bed05c8dd71607ced1441", "url": "https://api.github.com/repos/rust-lang/rust/commits/402129c01e162a74608bed05c8dd71607ced1441", "html_url": "https://github.com/rust-lang/rust/commit/402129c01e162a74608bed05c8dd71607ced1441"}, {"sha": "c424e069932d632e08856739e2811764d4d7020c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c424e069932d632e08856739e2811764d4d7020c", "html_url": "https://github.com/rust-lang/rust/commit/c424e069932d632e08856739e2811764d4d7020c"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "446fab7941105aeede2228f7c6ffe18918a65a25", "filename": ".travis.yml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/af1a19d90740d84e2bcb1c6b219123c1c30e9302/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/af1a19d90740d84e2bcb1c6b219123c1c30e9302/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=af1a19d90740d84e2bcb1c6b219123c1c30e9302", "patch": "@@ -33,12 +33,15 @@ before_script:\n # Install Rust (\"stable\" toolchain for better caching, it is just used to build rustup-toolchain-install-master)\n - curl https://build.travis-ci.org/files/rustup-init.sh -sSf | sh -s -- -y --default-toolchain stable\n - export PATH=$HOME/.cargo/bin:$PATH\n+- rustup default stable\n+- rustup uninstall beta\n - rustup update\n # Install \"master\" toolchain\n - cargo install rustup-toolchain-install-master || echo \"rustup-toolchain-install-master already installed\"\n - travis_retry rustup-toolchain-install-master -f -n master $RUSTC_HASH -c rust-src\n - rustup default master\n - rustc --version\n+- cargo --version\n \n script:\n - ./travis.sh"}, {"sha": "5a5c774169cff110c1e8899893e94550ad77e09d", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af1a19d90740d84e2bcb1c6b219123c1c30e9302/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/af1a19d90740d84e2bcb1c6b219123c1c30e9302/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=af1a19d90740d84e2bcb1c6b219123c1c30e9302", "patch": "@@ -59,5 +59,5 @@ cargo_miri = [\"cargo_metadata\", \"directories\", \"rustc_version\"]\n rustc_tests = []\n \n [dev-dependencies]\n-compiletest_rs = { version = \"0.3.22\", features = [\"tmp\", \"stable\"] }\n+compiletest_rs = { version = \"0.3.23\", features = [\"tmp\"] }\n colored = \"1.6\""}, {"sha": "e8bca6ea63b580d343f8184190b0a3e592bddf02", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af1a19d90740d84e2bcb1c6b219123c1c30e9302/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/af1a19d90740d84e2bcb1c6b219123c1c30e9302/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=af1a19d90740d84e2bcb1c6b219123c1c30e9302", "patch": "@@ -1 +1 @@\n-ea3ba36f3f4b7f0168a27d23c499efeb2304e2d5\n+dc45735f29788924b9fc351d100e5bf3ebdca162"}, {"sha": "3bee028c5eb7a7148620869755f8838107c66465", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af1a19d90740d84e2bcb1c6b219123c1c30e9302/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1a19d90740d84e2bcb1c6b219123c1c30e9302/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=af1a19d90740d84e2bcb1c6b219123c1c30e9302", "patch": "@@ -211,7 +211,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             fn visit_value(&mut self, v: MPlaceTy<'tcx, Tag>) -> InterpResult<'tcx>\n             {\n                 trace!(\"UnsafeCellVisitor: {:?} {:?}\", *v, v.layout.ty);\n-                let is_unsafe_cell = match v.layout.ty.sty {\n+                let is_unsafe_cell = match v.layout.ty.kind {\n                     ty::Adt(adt, _) => Some(adt.did) == self.ecx.tcx.lang_items().unsafe_cell_type(),\n                     _ => false,\n                 };"}, {"sha": "5258cbb5485b4bd5ce9ced346d68873483dca5a7", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af1a19d90740d84e2bcb1c6b219123c1c30e9302/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1a19d90740d84e2bcb1c6b219123c1c30e9302/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=af1a19d90740d84e2bcb1c6b219123c1c30e9302", "patch": "@@ -435,7 +435,7 @@ impl<'tcx> Stacks {\n \n         Stacks {\n             stacks: RefCell::new(RangeMap::new(size, stack)),\n-            global: extra, \n+            global: extra,\n         }\n     }\n \n@@ -460,7 +460,7 @@ impl Stacks {\n     pub fn new_allocation(\n         id: AllocId,\n         size: Size,\n-        extra: MemoryExtra, \n+        extra: MemoryExtra,\n         kind: MemoryKind<MiriMemoryKind>,\n     ) -> (Self, Tag) {\n         let (tag, perm) = match kind {\n@@ -616,7 +616,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         // Cannot use `builtin_deref` because that reports *immutable* for `Box`,\n         // making it useless.\n         fn qualify(ty: ty::Ty<'_>, kind: RetagKind) -> Option<(RefKind, bool)> {\n-            match ty.sty {\n+            match ty.kind {\n                 // References are simple.\n                 ty::Ref(_, _, MutMutable) =>\n                     Some((RefKind::Unique { two_phase: kind == RetagKind::TwoPhase}, kind == RetagKind::FnEntry)),"}]}