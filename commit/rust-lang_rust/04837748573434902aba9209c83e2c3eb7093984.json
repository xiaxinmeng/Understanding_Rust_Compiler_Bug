{"sha": "04837748573434902aba9209c83e2c3eb7093984", "node_id": "C_kwDOAAsO6NoAKDA0ODM3NzQ4NTczNDM0OTAyYWJhOTIwOWM4M2UyYzNlYjcwOTM5ODQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-27T15:18:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-27T15:18:35Z"}, "message": "Merge #10873\n\n10873: minor: if-let-else to shorter match r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "7a4bc3227007fada2503ea48c0dea834270aef13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a4bc3227007fada2503ea48c0dea834270aef13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04837748573434902aba9209c83e2c3eb7093984", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhokxLCRBK7hj4Ov3rIwAAiuUIADnz0bR2/3OiQ+w72GNmyOUL\nafpsnTDfN/6UOPohMmJWGEoC6f85UCxB9gHhfDK/qEz7Df682vfthzSzEm50iIwh\nnik2lNeelVpPbU3zDMwBP3cEYrNiTRZyr0xxSL5gwLoS5dyQB0dQMR9xMzNcGjOL\nbtjefMCjmGkuQSNqgTqRaACjMz2bW73FHZwLv956S1xBsr6h9XfD3pA7groWkWb2\nl+7KTIYIS1z248D2xA2dF8awgUqrFPVBRyVu0uC1QLO9dfbnNB8pod6K3ORrmSWO\n1dhRbHwC32WpACMIAaH30hePumS7ZFWUF1eFRdsy3wmm8/7q7PD6uclokrkbIQM=\n=k4zl\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a4bc3227007fada2503ea48c0dea834270aef13\nparent 90c435519d7194008cdf2352fb923e1d0dc6f104\nparent a1aa8212effd87cc04a912a23c46340c74070da9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638026315 +0000\ncommitter GitHub <noreply@github.com> 1638026315 +0000\n\nMerge #10873\n\n10873: minor: if-let-else to shorter match r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04837748573434902aba9209c83e2c3eb7093984", "html_url": "https://github.com/rust-lang/rust/commit/04837748573434902aba9209c83e2c3eb7093984", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04837748573434902aba9209c83e2c3eb7093984/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90c435519d7194008cdf2352fb923e1d0dc6f104", "url": "https://api.github.com/repos/rust-lang/rust/commits/90c435519d7194008cdf2352fb923e1d0dc6f104", "html_url": "https://github.com/rust-lang/rust/commit/90c435519d7194008cdf2352fb923e1d0dc6f104"}, {"sha": "a1aa8212effd87cc04a912a23c46340c74070da9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1aa8212effd87cc04a912a23c46340c74070da9", "html_url": "https://github.com/rust-lang/rust/commit/a1aa8212effd87cc04a912a23c46340c74070da9"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "db2398fbdee50856db5d72acb4ad2e28be8af6da", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/04837748573434902aba9209c83e2c3eb7093984/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04837748573434902aba9209c83e2c3eb7093984/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=04837748573434902aba9209c83e2c3eb7093984", "patch": "@@ -105,15 +105,14 @@ pub struct ItemTree {\n impl ItemTree {\n     pub(crate) fn file_item_tree_query(db: &dyn DefDatabase, file_id: HirFileId) -> Arc<ItemTree> {\n         let _p = profile::span(\"item_tree_query\").detail(|| format!(\"{:?}\", file_id));\n-        let syntax = if let Some(node) = db.parse_or_expand(file_id) {\n-            if node.kind() == SyntaxKind::ERROR {\n-                // FIXME: not 100% sure why these crop up, but return an empty tree to avoid a panic\n-                return Default::default();\n-            }\n-            node\n-        } else {\n-            return Default::default();\n+        let syntax = match db.parse_or_expand(file_id) {\n+            Some(node) => node,\n+            None => return Default::default(),\n         };\n+        if syntax.kind() == SyntaxKind::ERROR {\n+            // FIXME: not 100% sure why these crop up, but return an empty tree to avoid a panic\n+            return Default::default();\n+        }\n \n         let hygiene = Hygiene::new(db.upcast(), file_id);\n         let ctx = lower::Ctx::new(db, hygiene.clone(), file_id);"}]}