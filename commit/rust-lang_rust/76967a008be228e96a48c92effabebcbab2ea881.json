{"sha": "76967a008be228e96a48c92effabebcbab2ea881", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2OTY3YTAwOGJlMjI4ZTk2YTQ4YzkyZWZmYWJlYmNiYWIyZWE4ODE=", "commit": {"author": {"name": "Jan Niklas Hasse", "email": "jhasse@gmail.com", "date": "2014-01-12T01:31:33Z"}, "committer": {"name": "Jan Niklas Hasse", "email": "jhasse@gmail.com", "date": "2014-01-12T01:31:33Z"}, "message": "Support linking of rlib files in rustpkg", "tree": {"sha": "627f49eecd0456eb159c93a22b1d529b549a3bde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/627f49eecd0456eb159c93a22b1d529b549a3bde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76967a008be228e96a48c92effabebcbab2ea881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76967a008be228e96a48c92effabebcbab2ea881", "html_url": "https://github.com/rust-lang/rust/commit/76967a008be228e96a48c92effabebcbab2ea881", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76967a008be228e96a48c92effabebcbab2ea881/comments", "author": {"login": "jhasse", "id": 80071, "node_id": "MDQ6VXNlcjgwMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/80071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhasse", "html_url": "https://github.com/jhasse", "followers_url": "https://api.github.com/users/jhasse/followers", "following_url": "https://api.github.com/users/jhasse/following{/other_user}", "gists_url": "https://api.github.com/users/jhasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhasse/subscriptions", "organizations_url": "https://api.github.com/users/jhasse/orgs", "repos_url": "https://api.github.com/users/jhasse/repos", "events_url": "https://api.github.com/users/jhasse/events{/privacy}", "received_events_url": "https://api.github.com/users/jhasse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhasse", "id": 80071, "node_id": "MDQ6VXNlcjgwMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/80071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhasse", "html_url": "https://github.com/jhasse", "followers_url": "https://api.github.com/users/jhasse/followers", "following_url": "https://api.github.com/users/jhasse/following{/other_user}", "gists_url": "https://api.github.com/users/jhasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhasse/subscriptions", "organizations_url": "https://api.github.com/users/jhasse/orgs", "repos_url": "https://api.github.com/users/jhasse/repos", "events_url": "https://api.github.com/users/jhasse/events{/privacy}", "received_events_url": "https://api.github.com/users/jhasse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68ebe8141a9d469ed7a7081e7a4a9ff4c82fbff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/68ebe8141a9d469ed7a7081e7a4a9ff4c82fbff7", "html_url": "https://github.com/rust-lang/rust/commit/68ebe8141a9d469ed7a7081e7a4a9ff4c82fbff7"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "460a9eb807f32c114fd9d1265736cc543ec858ef", "filename": "src/librustpkg/path_util.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/76967a008be228e96a48c92effabebcbab2ea881/src%2Flibrustpkg%2Fpath_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76967a008be228e96a48c92effabebcbab2ea881/src%2Flibrustpkg%2Fpath_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fpath_util.rs?ref=76967a008be228e96a48c92effabebcbab2ea881", "patch": "@@ -226,10 +226,13 @@ fn library_in(short_name: &str, version: &Version, dir_to_search: &Path) -> Opti\n     };\n     debug!(\"dir has {:?} entries\", dir_contents.len());\n \n-    let lib_prefix = format!(\"{}{}\", os::consts::DLL_PREFIX, short_name);\n-    let lib_filetype = os::consts::DLL_EXTENSION;\n+    let dll_prefix = format!(\"{}{}\", os::consts::DLL_PREFIX, short_name);\n+    let dll_filetype = os::consts::DLL_EXTENSION;\n+    let rlib_prefix = format!(\"{}{}\", \"lib\", short_name);\n+    let rlib_filetype = \"rlib\";\n \n-    debug!(\"lib_prefix = {} and lib_filetype = {}\", lib_prefix, lib_filetype);\n+    debug!(\"dll_prefix = {} and dll_filetype = {}\", dll_prefix, dll_filetype);\n+    debug!(\"rlib_prefix = {} and rlib_filetype = {}\", rlib_prefix, rlib_filetype);\n \n     // Find a filename that matches the pattern:\n     // (lib_prefix)-hash-(version)(lib_suffix)\n@@ -238,7 +241,7 @@ fn library_in(short_name: &str, version: &Version, dir_to_search: &Path) -> Opti\n         debug!(\"p = {}, p's extension is {:?}\", p.display(), extension);\n         match extension {\n             None => false,\n-            Some(ref s) => lib_filetype == *s\n+            Some(ref s) => dll_filetype == *s || rlib_filetype == *s,\n         }\n     });\n \n@@ -261,8 +264,12 @@ fn library_in(short_name: &str, version: &Version, dir_to_search: &Path) -> Opti\n                        Some(ref found_vers) if version == found_vers => {\n                            match f_name.slice(0, i).rfind('-') {\n                                Some(j) => {\n-                                   debug!(\"Maybe {} equals {}\", f_name.slice(0, j), lib_prefix);\n-                                   if f_name.slice(0, j) == lib_prefix {\n+                                    let lib_prefix = match p_path.extension_str() {\n+                                        Some(ref s) if dll_filetype == *s => &dll_prefix,\n+                                        _ => &rlib_prefix,\n+                                    };\n+                                    debug!(\"Maybe {} equals {}\", f_name.slice(0, j), *lib_prefix);\n+                                    if f_name.slice(0, j) == *lib_prefix {\n                                        result_filename = Some(p_path.clone());\n                                    }\n                                    break;"}]}