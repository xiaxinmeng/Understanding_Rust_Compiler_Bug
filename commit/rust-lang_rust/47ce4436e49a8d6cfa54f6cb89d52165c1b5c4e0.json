{"sha": "47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "node_id": "C_kwDOAAsO6NoAKDQ3Y2U0NDM2ZTQ5YThkNmNmYTU0ZjZjYjg5ZDUyMTY1YzFiNWM0ZTA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-26T14:06:11Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-26T15:36:44Z"}, "message": "Make hir::Local::name infallible", "tree": {"sha": "9cd5f7bf60c28c038fd0198b37e15c19b9e4047d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd5f7bf60c28c038fd0198b37e15c19b9e4047d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "html_url": "https://github.com/rust-lang/rust/commit/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36603e0478bace705b9a3b59aebb8a6918a1700b", "url": "https://api.github.com/repos/rust-lang/rust/commits/36603e0478bace705b9a3b59aebb8a6918a1700b", "html_url": "https://github.com/rust-lang/rust/commit/36603e0478bace705b9a3b59aebb8a6918a1700b"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "e02ba2e7c864e7b918016a5f3eba386fd27ad234", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "patch": "@@ -2047,10 +2047,13 @@ impl Local {\n     pub fn is_param(self, db: &dyn HirDatabase) -> bool {\n         let src = self.source(db);\n         match src.value {\n-            Either::Left(bind_pat) => {\n-                bind_pat.syntax().ancestors().any(|it| ast::Param::can_cast(it.kind()))\n-            }\n-            Either::Right(_self_param) => true,\n+            Either::Left(pat) => pat\n+                .syntax()\n+                .ancestors()\n+                .map(|it| it.kind())\n+                .take_while(|&kind| ast::Pat::can_cast(kind) || ast::Param::can_cast(kind))\n+                .any(ast::Param::can_cast),\n+            Either::Right(_) => true,\n         }\n     }\n \n@@ -2061,17 +2064,19 @@ impl Local {\n         }\n     }\n \n-    // FIXME: why is this an option? It shouldn't be?\n-    pub fn name(self, db: &dyn HirDatabase) -> Option<Name> {\n+    pub fn name(self, db: &dyn HirDatabase) -> Name {\n         let body = db.body(self.parent);\n         match &body[self.pat_id] {\n-            Pat::Bind { name, .. } => Some(name.clone()),\n-            _ => None,\n+            Pat::Bind { name, .. } => name.clone(),\n+            _ => {\n+                stdx::never!(\"hir::Local is missing a name!\");\n+                Name::missing()\n+            }\n         }\n     }\n \n     pub fn is_self(self, db: &dyn HirDatabase) -> bool {\n-        self.name(db) == Some(name![self])\n+        self.name(db) == name![self]\n     }\n \n     pub fn is_mut(self, db: &dyn HirDatabase) -> bool {"}, {"sha": "40a647c90b23cdae4e5540b12274ac941b1e5c83", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "patch": "@@ -480,7 +480,7 @@ fn local(db: &RootDatabase, it: hir::Local) -> Option<Markup> {\n     let is_mut = if it.is_mut(db) { \"mut \" } else { \"\" };\n     let desc = match it.source(db).value {\n         Either::Left(ident) => {\n-            let name = it.name(db).unwrap();\n+            let name = it.name(db);\n             let let_kw = if ident\n                 .syntax()\n                 .parent()"}, {"sha": "834668960f3686996dc2400cfcf425fab18bef00", "filename": "crates/ide/src/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fnavigation_target.rs?ref=47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "patch": "@@ -390,10 +390,7 @@ impl ToNav for hir::Local {\n         let FileRange { file_id, range: full_range } =\n             InFile::new(file_id, node).original_file_range(db);\n \n-        let name = match self.name(db) {\n-            Some(it) => it.to_smol_str(),\n-            None => \"\".into(),\n-        };\n+        let name = self.name(db).to_smol_str();\n         let kind = if self.is_self(db) {\n             SymbolKind::SelfParam\n         } else if self.is_param(db) {"}, {"sha": "8ad27b1fdcd04b8827e97329b8bfed46cbb8d264", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "patch": "@@ -235,10 +235,9 @@ fn highlight_name_ref(\n     let mut h = match name_class {\n         NameRefClass::Definition(def) => {\n             if let Definition::Local(local) = &def {\n-                if let Some(name) = local.name(db) {\n-                    let shadow_count = bindings_shadow_count.entry(name.clone()).or_default();\n-                    *binding_hash = Some(calc_binding_hash(&name, *shadow_count))\n-                }\n+                let name = local.name(db);\n+                let shadow_count = bindings_shadow_count.entry(name.clone()).or_default();\n+                *binding_hash = Some(calc_binding_hash(&name, *shadow_count))\n             };\n \n             let mut h = highlight_def(sema, krate, def);\n@@ -288,11 +287,10 @@ fn highlight_name(\n ) -> Highlight {\n     let name_kind = NameClass::classify(sema, &name);\n     if let Some(NameClass::Definition(Definition::Local(local))) = &name_kind {\n-        if let Some(name) = local.name(sema.db) {\n-            let shadow_count = bindings_shadow_count.entry(name.clone()).or_default();\n-            *shadow_count += 1;\n-            *binding_hash = Some(calc_binding_hash(&name, *shadow_count))\n-        }\n+        let name = local.name(sema.db);\n+        let shadow_count = bindings_shadow_count.entry(name.clone()).or_default();\n+        *shadow_count += 1;\n+        *binding_hash = Some(calc_binding_hash(&name, *shadow_count))\n     };\n     match name_kind {\n         Some(NameClass::Definition(def)) => {"}, {"sha": "e80dce0c4555da3d4ed5982aeafedd018732c82d", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "patch": "@@ -393,7 +393,7 @@ impl Param {\n     }\n \n     fn to_param(&self, ctx: &AssistContext, module: hir::Module) -> ast::Param {\n-        let var = self.var.name(ctx.db()).unwrap().to_string();\n+        let var = self.var.name(ctx.db()).to_string();\n         let var_name = make::name(&var);\n         let pat = match self.kind() {\n             ParamKind::MutValue => make::ident_pat(false, true, var_name),\n@@ -1144,12 +1144,12 @@ fn make_call(ctx: &AssistContext, fun: &Function, indent: IndentLevel) -> String\n     match fun.outliving_locals.as_slice() {\n         [] => {}\n         [var] => {\n-            format_to!(buf, \"let {}{} = \", mut_modifier(var), var.local.name(ctx.db()).unwrap())\n+            format_to!(buf, \"let {}{} = \", mut_modifier(var), var.local.name(ctx.db()))\n         }\n         vars => {\n             buf.push_str(\"let (\");\n             let bindings = vars.iter().format_with(\", \", |local, f| {\n-                f(&format_args!(\"{}{}\", mut_modifier(local), local.local.name(ctx.db()).unwrap()))\n+                f(&format_args!(\"{}{}\", mut_modifier(local), local.local.name(ctx.db())))\n             });\n             format_to!(buf, \"{}\", bindings);\n             buf.push_str(\") = \");\n@@ -1288,7 +1288,7 @@ impl FlowHandler {\n }\n \n fn path_expr_from_local(ctx: &AssistContext, var: Local) -> ast::Expr {\n-    let name = var.name(ctx.db()).unwrap().to_string();\n+    let name = var.name(ctx.db()).to_string();\n     make::expr_path(make::ext::ident_path(&name))\n }\n "}, {"sha": "e41c97ea953227415d890a6d7e732901533578f6", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=47ce4436e49a8d6cfa54f6cb89d52165c1b5c4e0", "patch": "@@ -106,7 +106,7 @@ impl Definition {\n             Definition::TypeAlias(it) => it.name(db),\n             Definition::BuiltinType(it) => it.name(),\n             Definition::SelfType(_) => return None,\n-            Definition::Local(it) => it.name(db)?,\n+            Definition::Local(it) => it.name(db),\n             Definition::GenericParam(it) => it.name(db),\n             Definition::Label(it) => it.name(db),\n             Definition::BuiltinAttr(_) => return None, // FIXME"}]}