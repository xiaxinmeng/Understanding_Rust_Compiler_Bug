{"sha": "d7d75eff30ff03f607ff0656a50f4be768cfdbc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZDc1ZWZmMzBmZjAzZjYwN2ZmMDY1NmE1MGY0YmU3NjhjZmRiYzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-07T06:52:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-07T06:52:05Z"}, "message": "Auto merge of #43931 - eddyb:const-local-key, r=alexcrichton\n\nMake the LocalKey facade of thread_local! inlineable cross-crate.\n\nFixes (almost*) #25088 by changing the `LocalKey` `static` `thread_local!` generates to a `const`.\nThis can be done because a `LocalKey` value holds no actual TLS data, only function pointers to get at said data, and it could even be made `Copy` without any negative consequences.\nThe recent stabilization of rvalue promotion to `'static` allows doing this without changing the API.\nr? @alexcrichton\n\n*almost because we can't yet inline `__getit` because it breaks on MSVC, see https://github.com/rust-lang/rust/pull/43931#issuecomment-323534214", "tree": {"sha": "f4b1b8c6ed97239450a2e468e0fbda720f005bc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4b1b8c6ed97239450a2e468e0fbda720f005bc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7d75eff30ff03f607ff0656a50f4be768cfdbc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d75eff30ff03f607ff0656a50f4be768cfdbc9", "html_url": "https://github.com/rust-lang/rust/commit/d7d75eff30ff03f607ff0656a50f4be768cfdbc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7d75eff30ff03f607ff0656a50f4be768cfdbc9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6a9d4c5fd214cb8110482dee2017607e23ccc7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a9d4c5fd214cb8110482dee2017607e23ccc7b", "html_url": "https://github.com/rust-lang/rust/commit/a6a9d4c5fd214cb8110482dee2017607e23ccc7b"}, {"sha": "4e2be14986b022dfdf5efa73293566cc6faf570e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e2be14986b022dfdf5efa73293566cc6faf570e", "html_url": "https://github.com/rust-lang/rust/commit/4e2be14986b022dfdf5efa73293566cc6faf570e"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "4ee8132f55cee90e353ae10a87ed076080e03a87", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d7d75eff30ff03f607ff0656a50f4be768cfdbc9/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7d75eff30ff03f607ff0656a50f4be768cfdbc9/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=d7d75eff30ff03f607ff0656a50f4be768cfdbc9", "patch": "@@ -159,8 +159,9 @@ macro_rules! thread_local {\n #[allow_internal_unstable]\n #[allow_internal_unsafe]\n macro_rules! __thread_local_inner {\n-    ($(#[$attr:meta])* $vis:vis $name:ident, $t:ty, $init:expr) => {\n-        $(#[$attr])* $vis static $name: $crate::thread::LocalKey<$t> = {\n+    (@key $(#[$attr:meta])* $vis:vis $name:ident, $t:ty, $init:expr) => {\n+        {\n+            #[inline]\n             fn __init() -> $t { $init }\n \n             unsafe fn __getit() -> $crate::option::Option<\n@@ -182,7 +183,16 @@ macro_rules! __thread_local_inner {\n             unsafe {\n                 $crate::thread::LocalKey::new(__getit, __init)\n             }\n-        };\n+        }\n+    };\n+    ($(#[$attr:meta])* $vis:vis $name:ident, $t:ty, $init:expr) => {\n+        #[cfg(stage0)]\n+        $(#[$attr])* $vis static $name: $crate::thread::LocalKey<$t> =\n+            __thread_local_inner!(@key $(#[$attr])* $vis $name, $t, $init);\n+\n+        #[cfg(not(stage0))]\n+        $(#[$attr])* $vis const $name: $crate::thread::LocalKey<$t> =\n+            __thread_local_inner!(@key $(#[$attr])* $vis $name, $t, $init);\n     }\n }\n "}, {"sha": "3ae629cd89529bd096601bd987e079e4860b502a", "filename": "src/test/compile-fail/macro-local-data-key-priv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7d75eff30ff03f607ff0656a50f4be768cfdbc9/src%2Ftest%2Fcompile-fail%2Fmacro-local-data-key-priv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7d75eff30ff03f607ff0656a50f4be768cfdbc9/src%2Ftest%2Fcompile-fail%2Fmacro-local-data-key-priv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-local-data-key-priv.rs?ref=d7d75eff30ff03f607ff0656a50f4be768cfdbc9", "patch": "@@ -16,5 +16,5 @@ mod bar {\n \n fn main() {\n     bar::baz.with(|_| ());\n-    //~^ ERROR static `baz` is private\n+    //~^ ERROR `baz` is private\n }"}]}