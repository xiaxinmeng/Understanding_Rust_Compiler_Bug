{"sha": "369001615f7ce8624139e51a42e2751da8584766", "node_id": "C_kwDOAAsO6NoAKDM2OTAwMTYxNWY3Y2U4NjI0MTM5ZTUxYTQyZTI3NTFkYTg1ODQ3NjY", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-27T13:23:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T14:00:55Z"}, "message": "move path", "tree": {"sha": "d74213d1c441fbb30f0a9b46ecdef7fff225f685", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d74213d1c441fbb30f0a9b46ecdef7fff225f685"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/369001615f7ce8624139e51a42e2751da8584766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/369001615f7ce8624139e51a42e2751da8584766", "html_url": "https://github.com/rust-lang/rust/commit/369001615f7ce8624139e51a42e2751da8584766", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/369001615f7ce8624139e51a42e2751da8584766/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5d8a9b341eee52ef5d83c61726700f42492ace9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5d8a9b341eee52ef5d83c61726700f42492ace9", "html_url": "https://github.com/rust-lang/rust/commit/c5d8a9b341eee52ef5d83c61726700f42492ace9"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "3137bd91cf8d88d6932731381adcffce214b1278", "filename": "crates/mbe/src/expander/matcher.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/369001615f7ce8624139e51a42e2751da8584766/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/369001615f7ce8624139e51a42e2751da8584766/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs?ref=369001615f7ce8624139e51a42e2751da8584766", "patch": "@@ -690,7 +690,11 @@ fn match_leaf(lhs: &tt::Leaf, src: &mut TtIter) -> Result<(), ExpandError> {\n \n fn match_meta_var(kind: &str, input: &mut TtIter) -> ExpandResult<Option<Fragment>> {\n     let fragment = match kind {\n-        \"path\" => ParserEntryPoint::Path,\n+        \"path\" => {\n+            return input\n+                .expect_fragment2(parser::PrefixEntryPoint::Path)\n+                .map(|tt| tt.map(Fragment::Tokens));\n+        }\n         \"expr\" => {\n             return input\n                 .expect_fragment2(parser::PrefixEntryPoint::Expr)"}, {"sha": "8310b38b92932e92754044990071d9f5cff34341", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/369001615f7ce8624139e51a42e2751da8584766/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/369001615f7ce8624139e51a42e2751da8584766/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=369001615f7ce8624139e51a42e2751da8584766", "patch": "@@ -72,6 +72,9 @@ pub(crate) mod entry {\n         pub(crate) fn expr(p: &mut Parser) {\n             let _ = expressions::expr(p);\n         }\n+        pub(crate) fn path(p: &mut Parser) {\n+            let _ = paths::type_path(p);\n+        }\n     }\n }\n \n@@ -85,12 +88,6 @@ pub(crate) mod entry_points {\n         m.complete(p, SOURCE_FILE);\n     }\n \n-    pub(crate) use paths::type_path as path;\n-\n-    pub(crate) fn expr(p: &mut Parser) {\n-        let _ = expressions::expr(p);\n-    }\n-\n     pub(crate) fn stmt_optional_semi(p: &mut Parser) {\n         expressions::stmt(p, expressions::StmtWithSemi::Optional, false);\n     }"}, {"sha": "867acc45f3f3cd486ae4fd636232787f97ab7aec", "filename": "crates/parser/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/369001615f7ce8624139e51a42e2751da8584766/crates%2Fparser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/369001615f7ce8624139e51a42e2751da8584766/crates%2Fparser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Flib.rs?ref=369001615f7ce8624139e51a42e2751da8584766", "patch": "@@ -58,6 +58,7 @@ pub enum PrefixEntryPoint {\n     Pat,\n     Ty,\n     Expr,\n+    Path,\n }\n \n impl PrefixEntryPoint {\n@@ -69,6 +70,7 @@ impl PrefixEntryPoint {\n             PrefixEntryPoint::Pat => grammar::entry::prefix::pat,\n             PrefixEntryPoint::Ty => grammar::entry::prefix::ty,\n             PrefixEntryPoint::Expr => grammar::entry::prefix::expr,\n+            PrefixEntryPoint::Path => grammar::entry::prefix::path,\n         };\n         let mut p = parser::Parser::new(input);\n         entry_point(&mut p);\n@@ -112,8 +114,8 @@ pub fn parse_source_file(inp: &Input) -> Output {\n pub fn parse(inp: &Input, entry_point: ParserEntryPoint) -> Output {\n     let entry_point: fn(&'_ mut parser::Parser) = match entry_point {\n         ParserEntryPoint::SourceFile => grammar::entry_points::source_file,\n-        ParserEntryPoint::Path => grammar::entry_points::path,\n-        ParserEntryPoint::Expr => grammar::entry_points::expr,\n+        ParserEntryPoint::Path => grammar::entry::prefix::path,\n+        ParserEntryPoint::Expr => grammar::entry::prefix::expr,\n         ParserEntryPoint::Type => grammar::entry::prefix::ty,\n         ParserEntryPoint::Pattern => grammar::entry::prefix::pat,\n         ParserEntryPoint::Item => grammar::entry_points::item,"}]}