{"sha": "0190286d488365e033fa9210188b15fc46e22764", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOTAyODZkNDg4MzY1ZTAzM2ZhOTIxMDE4OGIxNWZjNDZlMjI3NjQ=", "commit": {"author": {"name": "Re\u0301my Rakic", "email": "remy.rakic@gmail.com", "date": "2018-07-03T22:31:12Z"}, "committer": {"name": "Re\u0301my Rakic", "email": "remy.rakic@gmail.com", "date": "2018-07-04T06:50:12Z"}, "message": "NLL Liveness: Skip regionless types when visiting free regions\n\nThe tuple-stress benchmark exercises the liveness constraint generation code for types which do not have regions", "tree": {"sha": "914aeda813094883efea78eb527f37a2e5384d87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/914aeda813094883efea78eb527f37a2e5384d87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0190286d488365e033fa9210188b15fc46e22764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0190286d488365e033fa9210188b15fc46e22764", "html_url": "https://github.com/rust-lang/rust/commit/0190286d488365e033fa9210188b15fc46e22764", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0190286d488365e033fa9210188b15fc46e22764/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "739320a6011fd78b15328416d3c488d025974039", "url": "https://api.github.com/repos/rust-lang/rust/commits/739320a6011fd78b15328416d3c488d025974039", "html_url": "https://github.com/rust-lang/rust/commit/739320a6011fd78b15328416d3c488d025974039"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "a933d7e6de8b7b338acc561ae9653ad8d17a7ec3", "filename": "src/librustc/ty/fold.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0190286d488365e033fa9210188b15fc46e22764/src%2Flibrustc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0190286d488365e033fa9210188b15fc46e22764/src%2Flibrustc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffold.rs?ref=0190286d488365e033fa9210188b15fc46e22764", "patch": "@@ -307,6 +307,15 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n                 false // keep visiting\n             }\n+\n+            fn visit_ty(&mut self, ty: Ty<'tcx>) -> bool {\n+                // We're only interested in types involving regions\n+                if ty.flags.intersects(TypeFlags::HAS_FREE_REGIONS) {\n+                    ty.super_visit_with(self)\n+                } else {\n+                    false // keep visiting\n+                }\n+            }\n         }\n     }\n }"}]}