{"sha": "e07e5104fef572c879c5f0fff3584c92983b4006", "node_id": "C_kwDOAAsO6NoAKGUwN2U1MTA0ZmVmNTcyYzg3OWM1ZjBmZmYzNTg0YzkyOTgzYjQwMDY", "commit": {"author": {"name": "Danny Milosavljevic", "email": "dannym@scratchpost.org", "date": "2022-10-01T01:50:05Z"}, "committer": {"name": "Danny Milosavljevic", "email": "dannym@scratchpost.org", "date": "2022-10-17T19:10:46Z"}, "message": "Remove execute bit from lock file permissions", "tree": {"sha": "a0c4fa93d47027558db44bd85791da1e4f3e1ed1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0c4fa93d47027558db44bd85791da1e4f3e1ed1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e07e5104fef572c879c5f0fff3584c92983b4006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e07e5104fef572c879c5f0fff3584c92983b4006", "html_url": "https://github.com/rust-lang/rust/commit/e07e5104fef572c879c5f0fff3584c92983b4006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e07e5104fef572c879c5f0fff3584c92983b4006/comments", "author": {"login": "daym", "id": 7755349, "node_id": "MDQ6VXNlcjc3NTUzNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/7755349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daym", "html_url": "https://github.com/daym", "followers_url": "https://api.github.com/users/daym/followers", "following_url": "https://api.github.com/users/daym/following{/other_user}", "gists_url": "https://api.github.com/users/daym/gists{/gist_id}", "starred_url": "https://api.github.com/users/daym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daym/subscriptions", "organizations_url": "https://api.github.com/users/daym/orgs", "repos_url": "https://api.github.com/users/daym/repos", "events_url": "https://api.github.com/users/daym/events{/privacy}", "received_events_url": "https://api.github.com/users/daym/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daym", "id": 7755349, "node_id": "MDQ6VXNlcjc3NTUzNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/7755349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daym", "html_url": "https://github.com/daym", "followers_url": "https://api.github.com/users/daym/followers", "following_url": "https://api.github.com/users/daym/following{/other_user}", "gists_url": "https://api.github.com/users/daym/gists{/gist_id}", "starred_url": "https://api.github.com/users/daym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daym/subscriptions", "organizations_url": "https://api.github.com/users/daym/orgs", "repos_url": "https://api.github.com/users/daym/repos", "events_url": "https://api.github.com/users/daym/events{/privacy}", "received_events_url": "https://api.github.com/users/daym/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ce3204af9463db3192ea1eb31c45c2f6d4b5ae6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ce3204af9463db3192ea1eb31c45c2f6d4b5ae6", "html_url": "https://github.com/rust-lang/rust/commit/8ce3204af9463db3192ea1eb31c45c2f6d4b5ae6"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "9ed26e4900696f4b48061d9585bedc61594e1828", "filename": "compiler/rustc_data_structures/src/flock/linux.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e07e5104fef572c879c5f0fff3584c92983b4006/compiler%2Frustc_data_structures%2Fsrc%2Fflock%2Flinux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e07e5104fef572c879c5f0fff3584c92983b4006/compiler%2Frustc_data_structures%2Fsrc%2Fflock%2Flinux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fflock%2Flinux.rs?ref=e07e5104fef572c879c5f0fff3584c92983b4006", "patch": "@@ -14,12 +14,7 @@ pub struct Lock {\n \n impl Lock {\n     pub fn new(p: &Path, wait: bool, create: bool, exclusive: bool) -> io::Result<Lock> {\n-        let file = OpenOptions::new()\n-            .read(true)\n-            .write(true)\n-            .create(create)\n-            .mode(libc::S_IRWXU as u32)\n-            .open(p)?;\n+        let file = OpenOptions::new().read(true).write(true).create(create).mode(0o600).open(p)?;\n \n         let mut operation = if exclusive { libc::LOCK_EX } else { libc::LOCK_SH };\n         if !wait {"}]}