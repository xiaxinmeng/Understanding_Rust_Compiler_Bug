{"sha": "8280abc57b50a08b42cbfec39e6a6840f466c33c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyODBhYmM1N2I1MGEwOGI0MmNiZmVjMzllNmE2ODQwZjQ2NmMzM2M=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-12T21:53:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-12T21:53:28Z"}, "message": "Rollup merge of #81012 - VillSnow:stabilize_partition_point, r=matklad\n\nStabilize the partition_point feature\n\nStabilize the partition_point feature.\nTracking Issue: #73831\nFirst PR: #73577", "tree": {"sha": "339f3bfcdac9204a75d86a32d78614778943fe95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/339f3bfcdac9204a75d86a32d78614778943fe95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8280abc57b50a08b42cbfec39e6a6840f466c33c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgJvjZCRBK7hj4Ov3rIwAAdHIIAG11tqbIDtIZKQtUspSdk8V0\nrAcwd3yl2LH6Qr2zG7MuJtnOoQjrx2Du+pe5nFusmAc9n/NlX3ZA67FwDSB8Cu75\na++mOkVb+VA797eqfm00RRZoZ08G8m7dnDPJXO+vESpzgTjlhocPANOe4dA13oiF\nAgqt7UKQ2iQhaJduUIH9VL//8z/gHfALzdphlioCCFNTO/nGEzrvzy6BIGMuSJDN\nCEsOfdKW6fWUQDKCgdzSSx5JW17AfiZoFysHJ5iPwscGrN+UBL7bJfK4uJBwX8ex\nJJmnc4ndng3BVP8HCb5wJEUhIC8px5W13wuWWBKYX7AT2odFivcF9rTdXFcdBJs=\n=gx+k\n-----END PGP SIGNATURE-----\n", "payload": "tree 339f3bfcdac9204a75d86a32d78614778943fe95\nparent ab3f4f0bc0f953b84fa1e175b3f996209b22f9cf\nparent afdc8c79184dad881e618026c1ce91f2b9bae138\nauthor Dylan DPC <dylan.dpc@gmail.com> 1613166808 +0100\ncommitter GitHub <noreply@github.com> 1613166808 +0100\n\nRollup merge of #81012 - VillSnow:stabilize_partition_point, r=matklad\n\nStabilize the partition_point feature\n\nStabilize the partition_point feature.\nTracking Issue: #73831\nFirst PR: #73577\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8280abc57b50a08b42cbfec39e6a6840f466c33c", "html_url": "https://github.com/rust-lang/rust/commit/8280abc57b50a08b42cbfec39e6a6840f466c33c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8280abc57b50a08b42cbfec39e6a6840f466c33c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab3f4f0bc0f953b84fa1e175b3f996209b22f9cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3f4f0bc0f953b84fa1e175b3f996209b22f9cf", "html_url": "https://github.com/rust-lang/rust/commit/ab3f4f0bc0f953b84fa1e175b3f996209b22f9cf"}, {"sha": "afdc8c79184dad881e618026c1ce91f2b9bae138", "url": "https://api.github.com/repos/rust-lang/rust/commits/afdc8c79184dad881e618026c1ce91f2b9bae138", "html_url": "https://github.com/rust-lang/rust/commit/afdc8c79184dad881e618026c1ce91f2b9bae138"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "c99572d98ff829f3b4cb5cf0a64023253cfdfee2", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8280abc57b50a08b42cbfec39e6a6840f466c33c/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8280abc57b50a08b42cbfec39e6a6840f466c33c/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=8280abc57b50a08b42cbfec39e6a6840f466c33c", "patch": "@@ -2082,6 +2082,12 @@ impl<T> [T] {\n     /// [`Result::Err`] is returned, containing the index where a matching\n     /// element could be inserted while maintaining sorted order.\n     ///\n+    /// See also [`binary_search_by`], [`binary_search_by_key`], and [`partition_point`].\n+    ///\n+    /// [`binary_search_by`]: #method.binary_search_by\n+    /// [`binary_search_by_key`]: #method.binary_search_by_key\n+    /// [`partition_point`]: #method.partition_point\n+    ///\n     /// # Examples\n     ///\n     /// Looks up a series of four elements. The first is found, with a\n@@ -2129,6 +2135,12 @@ impl<T> [T] {\n     /// [`Result::Err`] is returned, containing the index where a matching\n     /// element could be inserted while maintaining sorted order.\n     ///\n+    /// See also [`binary_search`], [`binary_search_by_key`], and [`partition_point`].\n+    ///\n+    /// [`binary_search`]: #method.binary_search\n+    /// [`binary_search_by_key`]: #method.binary_search_by_key\n+    /// [`partition_point`]: #method.partition_point\n+    ///\n     /// # Examples\n     ///\n     /// Looks up a series of four elements. The first is found, with a\n@@ -2186,7 +2198,12 @@ impl<T> [T] {\n     /// [`Result::Err`] is returned, containing the index where a matching\n     /// element could be inserted while maintaining sorted order.\n     ///\n+    /// See also [`binary_search`], [`binary_search_by`], and [`partition_point`].\n+    ///\n     /// [`sort_by_key`]: #method.sort_by_key\n+    /// [`binary_search`]: #method.binary_search\n+    /// [`binary_search_by`]: #method.binary_search_by\n+    /// [`partition_point`]: #method.partition_point\n     ///\n     /// # Examples\n     ///\n@@ -3399,19 +3416,23 @@ impl<T> [T] {\n     /// If this slice is not partitioned, the returned result is unspecified and meaningless,\n     /// as this method performs a kind of binary search.\n     ///\n+    /// See also [`binary_search`], [`binary_search_by`], and [`binary_search_by_key`].\n+    ///\n+    /// [`binary_search`]: #method.binary_search\n+    /// [`binary_search_by`]: #method.binary_search_by\n+    /// [`binary_search_by_key`]: #method.binary_search_by_key\n+    ///\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(partition_point)]\n-    ///\n     /// let v = [1, 2, 3, 3, 5, 6, 7];\n     /// let i = v.partition_point(|&x| x < 5);\n     ///\n     /// assert_eq!(i, 4);\n     /// assert!(v[..i].iter().all(|&x| x < 5));\n     /// assert!(v[i..].iter().all(|&x| !(x < 5)));\n     /// ```\n-    #[unstable(feature = \"partition_point\", reason = \"new API\", issue = \"73831\")]\n+    #[stable(feature = \"partition_point\", since = \"1.52.0\")]\n     pub fn partition_point<P>(&self, mut pred: P) -> usize\n     where\n         P: FnMut(&T) -> bool,"}, {"sha": "40dc6473b7d4088358dae9738faa12a71eabb95e", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8280abc57b50a08b42cbfec39e6a6840f466c33c/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8280abc57b50a08b42cbfec39e6a6840f466c33c/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=8280abc57b50a08b42cbfec39e6a6840f466c33c", "patch": "@@ -67,7 +67,6 @@\n #![feature(option_result_unwrap_unchecked)]\n #![feature(option_unwrap_none)]\n #![feature(peekable_peek_mut)]\n-#![feature(partition_point)]\n #![feature(once_cell)]\n #![feature(unsafe_block_in_unsafe_fn)]\n #![feature(int_bits_const)]"}]}