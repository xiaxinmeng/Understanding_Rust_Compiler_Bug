{"sha": "9a12971da5c08f9a95d54bdaef5cd83698ed4509", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMTI5NzFkYTVjMDhmOWE5NWQ1NGJkYWVmNWNkODM2OThlZDQ1MDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-30T14:25:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-30T14:25:34Z"}, "message": "Auto merge of #70568 - Dylan-DPC:rollup-em6vnpx, r=Dylan-DPC\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #70479 (avoid creating unnecessary reference in Windows Env iterator)\n - #70546 (Polonius: update to 0.12.1, fix more move errors false positives, update test expectations)\n - #70559 (fix BTreeMap test compilation with Miri)\n - #70567 (Fix broken link in README)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "022e54b66a564f036d464627f7b6112c63aeb5af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/022e54b66a564f036d464627f7b6112c63aeb5af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a12971da5c08f9a95d54bdaef5cd83698ed4509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a12971da5c08f9a95d54bdaef5cd83698ed4509", "html_url": "https://github.com/rust-lang/rust/commit/9a12971da5c08f9a95d54bdaef5cd83698ed4509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a12971da5c08f9a95d54bdaef5cd83698ed4509/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a80ec3b3b1d11ed83754885efdd07037d256dbf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a80ec3b3b1d11ed83754885efdd07037d256dbf2", "html_url": "https://github.com/rust-lang/rust/commit/a80ec3b3b1d11ed83754885efdd07037d256dbf2"}, {"sha": "aaa8aa31814dc33b98cb790d337b12d907e9b12c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaa8aa31814dc33b98cb790d337b12d907e9b12c", "html_url": "https://github.com/rust-lang/rust/commit/aaa8aa31814dc33b98cb790d337b12d907e9b12c"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "15d016a97cf8c56f85fd1cdd64dd57f93b4ab54e", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -2522,9 +2522,9 @@ checksum = \"05da548ad6865900e60eaba7f589cc0783590a92e940c26953ff81ddbab2d677\"\n \n [[package]]\n name = \"polonius-engine\"\n-version = \"0.12.0\"\n+version = \"0.12.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"04d8ef65e3f89ecaec9ca7cb0e0911b4617352d4494018bcf934992f03f2024c\"\n+checksum = \"ef2558a4b464e185b36ee08a2937ebb62ea5464c38856cfb1465c97cb38db52d\"\n dependencies = [\n  \"datafrog\",\n  \"log\","}, {"sha": "e28b71510ce71c8aa2785f33a46d796f7da3585a", "filename": "src/liballoc/tests/btree/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -528,7 +528,7 @@ fn test_range_1000() {\n     #[cfg(not(miri))] // Miri is too slow\n     let size = 1000;\n     #[cfg(miri)]\n-    let size = MIN_INSERTS_HEIGHT_2;\n+    let size = MIN_INSERTS_HEIGHT_2 as u32;\n     let map: BTreeMap<_, _> = (0..size).map(|i| (i, i)).collect();\n \n     fn test(map: &BTreeMap<u32, u32>, size: u32, min: Bound<&u32>, max: Bound<&u32>) {"}, {"sha": "afec60d017ee626eba22f99e93047f8d25ac891d", "filename": "src/librustc_codegen_llvm/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Flibrustc_codegen_llvm%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Flibrustc_codegen_llvm%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2FREADME.md?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -4,4 +4,4 @@ that runs towards the end of the compilation process.\n \n For more information about how codegen works, see the [rustc dev guide].\n \n-[rustc dev guide]: https://rustc-dev-guide.rust-lang.org/codegen.html\n+[rustc dev guide]: https://rustc-dev-guide.rust-lang.org/backend/codegen.html"}, {"sha": "26d75f08ae49aa11a744d27994dac56ab310e288", "filename": "src/librustc_mir/borrow_check/type_check/liveness/polonius.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fpolonius.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fpolonius.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fpolonius.rs?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -43,7 +43,7 @@ impl UseFactsExtractor<'_> {\n \n     fn insert_path_access(&mut self, path: MovePathIndex, location: Location) {\n         debug!(\"UseFactsExtractor::insert_path_access({:?}, {:?})\", path, location);\n-        self.path_accessed_at_base.push((path, self.location_table.start_index(location)));\n+        self.path_accessed_at_base.push((path, self.location_to_index(location)));\n     }\n \n     fn place_to_mpi(&self, place: &Place<'_>) -> Option<MovePathIndex> {"}, {"sha": "a0da2498bb7e0fec156dd7cb11251f4ed98ffb1c", "filename": "src/libstd/sys/windows/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -94,7 +94,7 @@ impl Iterator for Env {\n                 if *self.cur == 0 {\n                     return None;\n                 }\n-                let p = &*self.cur as *const u16;\n+                let p = self.cur as *const u16;\n                 let mut len = 0;\n                 while *p.offset(len) != 0 {\n                     len += 1;"}, {"sha": "df60416709f13f8fdc24fedaf5809206474b38aa", "filename": "src/test/ui/closures/closure-expected-type/expect-region-supply-region.polonius.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.polonius.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.polonius.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.polonius.stderr?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -2,7 +2,7 @@ error[E0521]: borrowed data escapes outside of closure\n   --> $DIR/expect-region-supply-region.rs:18:9\n    |\n LL |     let mut f: Option<&u32> = None;\n-   |         ----- `f` is declared here, outside of the closure body\n+   |         ----- `f` declared here, outside of the closure body\n LL |     closure_expecting_bound(|x| {\n    |                              - `x` is a reference that is only valid in the closure body\n LL |         f = Some(x);\n@@ -12,7 +12,7 @@ error[E0521]: borrowed data escapes outside of closure\n   --> $DIR/expect-region-supply-region.rs:28:9\n    |\n LL |     let mut f: Option<&u32> = None;\n-   |         ----- `f` is declared here, outside of the closure body\n+   |         ----- `f` declared here, outside of the closure body\n LL |     closure_expecting_bound(|x: &u32| {\n    |                              - `x` is a reference that is only valid in the closure body\n LL |         f = Some(x);\n@@ -33,7 +33,7 @@ error[E0521]: borrowed data escapes outside of closure\n   --> $DIR/expect-region-supply-region.rs:42:9\n    |\n LL |     let mut f: Option<&u32> = None;\n-   |         ----- `f` is declared here, outside of the closure body\n+   |         ----- `f` declared here, outside of the closure body\n ...\n LL |     closure_expecting_bound(|x: &'x u32| {\n    |                              - `x` is a reference that is only valid in the closure body"}, {"sha": "676a934569c4783f57cc66060e1ca943667d4aad", "filename": "src/test/ui/hrtb/hrtb-perfect-forwarding.polonius.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.polonius.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.polonius.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.polonius.stderr?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -39,6 +39,7 @@ LL | |     // Not OK -- The forwarding impl for `Foo` requires that `Bar` also\n ...  |\n LL | |     foo_hrtb_bar_not(&mut t);\n    | |     ------------------------ recursive call site\n+LL | |\n LL | | }\n    | |_^ cannot return without recursing\n    |\n@@ -51,7 +52,7 @@ LL |     foo_hrtb_bar_not(&mut t);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: function cannot return without recursing\n-  --> $DIR/hrtb-perfect-forwarding.rs:49:1\n+  --> $DIR/hrtb-perfect-forwarding.rs:50:1\n    |\n LL | / fn foo_hrtb_bar_hrtb<T>(mut t: T)\n LL | |     where T : for<'a> Foo<&'a isize> + for<'b> Bar<&'b isize>"}, {"sha": "6ce3aaf49eb339b12630c25e863546a959c7027f", "filename": "src/test/ui/impl-trait/multiple-lifetimes/error-handling.polonius.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling.polonius.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling.polonius.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling.polonius.stderr?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -1,10 +1,13 @@\n error: lifetime may not live long enough\n-  --> $DIR/error-handling.rs:13:56\n+  --> $DIR/error-handling.rs:23:16\n    |\n LL | fn foo<'a, 'b, 'c>(x: &'static i32, mut y: &'a i32) -> E<'b, 'c> {\n-   |        --  -- lifetime `'b` defined here               ^^^^^^^^^ opaque type requires that `'a` must outlive `'b`\n+   |        --  -- lifetime `'b` defined here\n    |        |\n    |        lifetime `'a` defined here\n+...\n+LL |         let _: &'b i32 = *u.0;\n+   |                ^^^^^^^ type annotation requires that `'a` must outlive `'b`\n    |\n    = help: consider adding the following bound: `'a: 'b`\n "}, {"sha": "dbbda62d2086c27f59d8c4fb355c686322521a1d", "filename": "src/test/ui/nll/outlives-suggestion-simple.polonius.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.polonius.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.polonius.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.polonius.stderr?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -72,6 +72,8 @@ LL |     (x, x)\n    |\n    = help: consider adding the following bound: `'a: 'c`\n \n+help: add bound `'a: 'b + 'c`\n+\n error: lifetime may not live long enough\n   --> $DIR/outlives-suggestion-simple.rs:31:9\n    |\n@@ -106,16 +108,16 @@ LL |         self.x\n    |\n    = help: consider adding the following bound: `'b: 'a`\n \n-error[E0521]: borrowed data escapes outside of function\n+error[E0521]: borrowed data escapes outside of associated function\n   --> $DIR/outlives-suggestion-simple.rs:73:9\n    |\n LL |     fn get_bar(&self) -> Bar2 {\n    |                -----\n    |                |\n-   |                `self` is declared here, outside of the function body\n-   |                `self` is a reference that is only valid in the function body\n+   |                `self` declared here, outside of the associated function body\n+   |                `self` is a reference that is only valid in the associated function body\n LL |         Bar2::new(&self)\n-   |         ^^^^^^^^^^^^^^^^ `self` escapes the function body here\n+   |         ^^^^^^^^^^^^^^^^ `self` escapes the associated function body here\n \n error: aborting due to 10 previous errors\n "}, {"sha": "46b6c04dcbc341e502a0c51bda030107e85b55da", "filename": "src/test/ui/nll/user-annotations/closure-substs.polonius.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.polonius.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a12971da5c08f9a95d54bdaef5cd83698ed4509/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.polonius.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.polonius.stderr?ref=9a12971da5c08f9a95d54bdaef5cd83698ed4509", "patch": "@@ -50,7 +50,7 @@ error[E0521]: borrowed data escapes outside of closure\n   --> $DIR/closure-substs.rs:29:9\n    |\n LL |     |x: &i32, b: fn(&'static i32)| {\n-   |      -        - `b` is declared here, outside of the closure body\n+   |      -        - `b` declared here, outside of the closure body\n    |      |\n    |      `x` is a reference that is only valid in the closure body\n LL |         b(x);"}]}