{"sha": "99986a5a057a02fb37e41c3e4fe20db1f75aa6cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5OTg2YTVhMDU3YTAyZmIzN2U0MWMzZTRmZTIwZGIxZjc1YWE2Y2M=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-13T05:03:22Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-13T11:20:57Z"}, "message": "Rollup merge of #55889 - RalfJung:global-alloc, r=alexcrichton\n\nglobal allocators: add a few comments\n\nThese comments answer some questions that came up when I tried to understand how the control flow works for the global allocator, `Global` and `System`.\n\nr? @alexcrichton", "tree": {"sha": "dcbf06fee8f815bd3a1bae86b246ec0b98e9daa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcbf06fee8f815bd3a1bae86b246ec0b98e9daa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvqs5kACgkQ/vbIBR0O\nATzX/w/9H97mIxKaAevBpEmqBh3U6JiYKYmQIC4WxRptMBlxlCNq0+fe5B1Nc8jQ\nJ7dlPwALoJwYXWJi5JngVcO9+ZgSTQLUiQlwDJfV4qnIt890bpjXgPwQQ5mZiqoD\nlTVcPVvRz7xj2dccrCp8gQG/JGMAKY06fscElSXk8C7D6sz8LDBcCjUltBVbER3X\n8nhXTBhCwaPI82/gBjtDDlMPOAb72VJcdQhOuOraoqDe/XNTY62SWNac6CSbHJcZ\nDjgpTxnLak8DLIKiJf9VNVTWsjNaNJCHk1PjLA52H/NrBUSOrgoFiMcriWAYIkg/\nO8z4BdZ+l0uV6iXx72IFosQ9HwjdVdoa3m0lKu3KMQWLHD/pAhcEeBEdnVpjW38S\nDcuKK55MW7PVqvBKB9+9XGxSb4bZIqIxRzvAZrsT5WlFAvou+sGRsBmoCvWj5LSj\nh54t9oN8Qlq/oA2g1mPg99HvwqfbFem0+nxAPT9vyxA6fJLA54ttEwT7iOTGuPnb\nuiQBJSh0zqDLeGVaoue3Ddxz9EDQ1JNAYsPP6HM7R7hK1kao4+zl0wmALrU54PVB\nxsENV8OTTOgPrIFhFWsgPb9ggWc1aj+K5o4gFzVafVCHJhfsLZ1g0LqtZOyyaxiv\n2gquSGlaXJQmFqbxZCygaGvDr+UO/Vm/fVMIvzhg00y3kUe/eAU=\n=+RLQ\n-----END PGP SIGNATURE-----", "payload": "tree dcbf06fee8f815bd3a1bae86b246ec0b98e9daa4\nparent c246a2981383e47ab667e788d8f0a0c65bae4c91\nparent 075983c70ba20f31fc1279dacae6d6fcb8bc9cad\nauthor kennytm <kennytm@gmail.com> 1542085402 +0800\ncommitter kennytm <kennytm@gmail.com> 1542108057 +0800\n\nRollup merge of #55889 - RalfJung:global-alloc, r=alexcrichton\n\nglobal allocators: add a few comments\n\nThese comments answer some questions that came up when I tried to understand how the control flow works for the global allocator, `Global` and `System`.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc", "html_url": "https://github.com/rust-lang/rust/commit/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c246a2981383e47ab667e788d8f0a0c65bae4c91", "url": "https://api.github.com/repos/rust-lang/rust/commits/c246a2981383e47ab667e788d8f0a0c65bae4c91", "html_url": "https://github.com/rust-lang/rust/commit/c246a2981383e47ab667e788d8f0a0c65bae4c91"}, {"sha": "075983c70ba20f31fc1279dacae6d6fcb8bc9cad", "url": "https://api.github.com/repos/rust-lang/rust/commits/075983c70ba20f31fc1279dacae6d6fcb8bc9cad", "html_url": "https://github.com/rust-lang/rust/commit/075983c70ba20f31fc1279dacae6d6fcb8bc9cad"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "1a8a081e16fadc105ae6c1b46221f66f4673b149", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=99986a5a057a02fb37e41c3e4fe20db1f75aa6cc", "patch": "@@ -21,6 +21,10 @@ use core::usize;\n pub use core::alloc::*;\n \n extern \"Rust\" {\n+    // These are the magic symbols to call the global allocator.  rustc generates\n+    // them from the `#[global_allocator]` attribute if there is one, or uses the\n+    // default implementations in libstd (`__rdl_alloc` etc in `src/libstd/alloc.rs`)\n+    // otherwise.\n     #[allocator]\n     #[rustc_allocator_nounwind]\n     fn __rust_alloc(size: usize, align: usize) -> *mut u8;"}, {"sha": "9c0573964702e7425428534f0d5aad79fe150add", "filename": "src/libstd/alloc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc/src%2Flibstd%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc/src%2Flibstd%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Falloc.rs?ref=99986a5a057a02fb37e41c3e4fe20db1f75aa6cc", "patch": "@@ -142,6 +142,7 @@ pub use alloc_crate::alloc::*;\n #[derive(Debug, Copy, Clone)]\n pub struct System;\n \n+// The Alloc impl just forwards to the GlobalAlloc impl, which is in `std::sys::*::alloc`.\n #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n unsafe impl Alloc for System {\n     #[inline]\n@@ -226,6 +227,10 @@ pub fn rust_oom(layout: Layout) -> ! {\n #[unstable(feature = \"alloc_internals\", issue = \"0\")]\n pub mod __default_lib_allocator {\n     use super::{System, Layout, GlobalAlloc};\n+    // These magic symbol names are used as a fallback for implementing the\n+    // `__rust_alloc` etc symbols (see `src/liballoc/alloc.rs) when there is\n+    // no `#[global_allocator]` attribute.\n+\n     // for symbol names src/librustc/middle/allocator.rs\n     // for signatures src/librustc_allocator/lib.rs\n "}]}