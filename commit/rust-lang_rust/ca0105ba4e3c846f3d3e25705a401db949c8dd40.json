{"sha": "ca0105ba4e3c846f3d3e25705a401db949c8dd40", "node_id": "C_kwDOAAsO6NoAKGNhMDEwNWJhNGUzYzg0NmYzZDNlMjU3MDVhNDAxZGI5NDljOGRkNDA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-25T16:28:27Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-01T17:38:34Z"}, "message": "Show source of ambiguity in a few more places", "tree": {"sha": "bb0affcaa34c0d160b48826c73117f4e3f509060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb0affcaa34c0d160b48826c73117f4e3f509060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca0105ba4e3c846f3d3e25705a401db949c8dd40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0105ba4e3c846f3d3e25705a401db949c8dd40", "html_url": "https://github.com/rust-lang/rust/commit/ca0105ba4e3c846f3d3e25705a401db949c8dd40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca0105ba4e3c846f3d3e25705a401db949c8dd40/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f44ae98ceec2361a47e8822a8f5018d4443018ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/f44ae98ceec2361a47e8822a8f5018d4443018ea", "html_url": "https://github.com/rust-lang/rust/commit/f44ae98ceec2361a47e8822a8f5018d4443018ea"}], "stats": {"total": 55, "additions": 35, "deletions": 20}, "files": [{"sha": "00b4d0857ac2cf4087175516f137e8e6db4c9b15", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2020,7 +2020,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'a, 'tcx> for InferCtxt<'a, 'tcx> {\n                     subst,\n                     impl_candidates,\n                     ErrorCode::E0283,\n-                    false,\n+                    true,\n                 );\n \n                 let obligation = Obligation::new(\n@@ -2132,7 +2132,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'a, 'tcx> for InferCtxt<'a, 'tcx> {\n                     a.into(),\n                     vec![],\n                     ErrorCode::E0282,\n-                    false,\n+                    true,\n                 )\n             }\n             ty::PredicateKind::Projection(data) => {\n@@ -2149,7 +2149,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'a, 'tcx> for InferCtxt<'a, 'tcx> {\n                         self_ty.into(),\n                         vec![],\n                         ErrorCode::E0284,\n-                        false,\n+                        true,\n                     );\n                     err.note(&format!(\"cannot satisfy `{}`\", predicate));\n                     err"}, {"sha": "688db695fa848cc4b7761acf444292bbe0fc2785", "filename": "src/test/ui/const-generics/generic_arg_infer/issue-91614.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fissue-91614.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fissue-91614.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fissue-91614.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,7 @@ error[E0283]: type annotations needed for `Mask<_, LANES>`\n   --> $DIR/issue-91614.rs:6:9\n    |\n LL |     let y = Mask::<_, _>::splat(false);\n-   |         ^\n+   |         ^   ------------------- type must be known at this point\n    |\n    = note: cannot satisfy `_: MaskElement`\n note: required by a bound in `Mask::<T, LANES>::splat`"}, {"sha": "c1e43f0b721f50a7e5c3fa33951d1f60aa1d64bd", "filename": "src/test/ui/inference/cannot-infer-partial-try-return.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -3,6 +3,9 @@ error[E0282]: type annotations needed for `Result<(), QualifiedError<_>>`\n    |\n LL |     let x = || -> Result<_, QualifiedError<_>> {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL |         infallible()?;\n+   |         ------------- type must be known at this point\n    |\n help: try giving this closure an explicit return type\n    |"}, {"sha": "7bb281802d2cebd74d392b6e2db4011f17178ae0", "filename": "src/test/ui/inference/erase-type-params-in-label.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,7 @@ error[E0283]: type annotations needed for `Foo<i32, &str, W, Z>`\n   --> $DIR/erase-type-params-in-label.rs:2:9\n    |\n LL |     let foo = foo(1, \"\");\n-   |         ^^^\n+   |         ^^^   --- type must be known at this point\n    |\n    = note: cannot satisfy `_: Default`\n note: required by a bound in `foo`\n@@ -23,7 +23,7 @@ error[E0283]: type annotations needed for `Bar<i32, &str, Z>`\n   --> $DIR/erase-type-params-in-label.rs:5:9\n    |\n LL |     let bar = bar(1, \"\");\n-   |         ^^^\n+   |         ^^^   --- type must be known at this point\n    |\n    = note: cannot satisfy `_: Default`\n note: required by a bound in `bar`"}, {"sha": "a71ce9a8ef27af725cbd111f92027f71ee94288d", "filename": "src/test/ui/inference/issue-72616.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fissue-72616.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fissue-72616.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-72616.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,9 @@ error[E0283]: type annotations needed\n   --> $DIR/issue-72616.rs:20:37\n    |\n LL |         if String::from(\"a\") == \"a\".try_into().unwrap() {}\n-   |                                     ^^^^^^^^\n+   |                              --     ^^^^^^^^\n+   |                              |\n+   |                              type must be known at this point\n    |\n    = note: multiple `impl`s satisfying `String: PartialEq<_>` found in the `alloc` crate:\n            - impl PartialEq for String;"}, {"sha": "d4eeda07366a8015c2a4c04374f6ee6b4fc32bf7", "filename": "src/test/ui/inference/issue-72690.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fissue-72690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fissue-72690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-72690.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -55,7 +55,7 @@ error[E0283]: type annotations needed for `&T`\n   --> $DIR/issue-72690.rs:17:9\n    |\n LL |     let _ = \"x\".as_ref();\n-   |         ^\n+   |         ^       ------ type must be known at this point\n    |\n    = note: multiple `impl`s satisfying `str: AsRef<_>` found in the following crates: `core`, `std`:\n            - impl AsRef<OsStr> for str;"}, {"sha": "e395e65fad066acc6142cbea61b08523aca2414f", "filename": "src/test/ui/inference/issue-86162-1.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fissue-86162-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fissue-86162-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-86162-1.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,9 @@ error[E0283]: type annotations needed\n   --> $DIR/issue-86162-1.rs:7:9\n    |\n LL |     foo(gen()); //<- Do not suggest `foo::<impl Clone>()`!\n-   |         ^^^ cannot infer type of the type parameter `T` declared on the function `gen`\n+   |     --- ^^^ cannot infer type of the type parameter `T` declared on the function `gen`\n+   |     |\n+   |     type must be known at this point\n    |\n    = note: cannot satisfy `_: Clone`\n note: required by a bound in `foo`"}, {"sha": "30e6e10eaa2fd07a09fba9e3c544a89e6e3d6d19", "filename": "src/test/ui/inference/issue-86162-2.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fissue-86162-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Finference%2Fissue-86162-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-86162-2.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,9 @@ error[E0283]: type annotations needed\n   --> $DIR/issue-86162-2.rs:12:14\n    |\n LL |     Foo::bar(gen()); //<- Do not suggest `Foo::bar::<impl Clone>()`!\n-   |              ^^^ cannot infer type of the type parameter `T` declared on the function `gen`\n+   |     -------- ^^^ cannot infer type of the type parameter `T` declared on the function `gen`\n+   |     |\n+   |     type must be known at this point\n    |\n    = note: cannot satisfy `_: Clone`\n note: required by a bound in `Foo::bar`"}, {"sha": "9be6c2f8564ffb35f6a95168fdb0d31b41e0af4d", "filename": "src/test/ui/issues/issue-69455.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fissues%2Fissue-69455.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fissues%2Fissue-69455.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69455.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -14,7 +14,9 @@ error[E0283]: type annotations needed\n   --> $DIR/issue-69455.rs:29:41\n    |\n LL |     println!(\"{}\", 23u64.test(xs.iter().sum()));\n-   |                                         ^^^ cannot infer type of the type parameter `S` declared on the associated function `sum`\n+   |                          ----           ^^^ cannot infer type of the type parameter `S` declared on the associated function `sum`\n+   |                          |\n+   |                          type must be known at this point\n    |\n note: multiple `impl`s satisfying `u64: Test<_>` found\n   --> $DIR/issue-69455.rs:11:1"}, {"sha": "2a747f679a84daa430aad2bbb4920e363b9f471e", "filename": "src/test/ui/issues/issue-7813.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fissues%2Fissue-7813.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fissues%2Fissue-7813.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7813.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,7 @@ error[E0282]: type annotations needed for `&[_; 0]`\n   --> $DIR/issue-7813.rs:2:9\n    |\n LL |     let v = &[];\n-   |         ^\n+   |         ^   --- type must be known at this point\n    |\n help: consider giving `v` an explicit type, where the placeholders `_` are specified\n    |"}, {"sha": "f4c2eb7ff34ae1e76d66f454df31a557abc0f1c4", "filename": "src/test/ui/suggestions/suggest-closure-return-type-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-1.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,7 @@ error[E0282]: type annotations needed for `[_; 0]`\n   --> $DIR/suggest-closure-return-type-1.rs:4:18\n    |\n LL |     unbound_drop(|| -> _ { [] });\n-   |                  ^^^^^^^\n+   |                  ^^^^^^^   -- type must be known at this point\n    |\n help: try giving this closure an explicit return type\n    |"}, {"sha": "88bf263043d2c4745c206a0888218569cc2ce843", "filename": "src/test/ui/suggestions/suggest-closure-return-type-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-2.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,7 @@ error[E0282]: type annotations needed for `[_; 0]`\n   --> $DIR/suggest-closure-return-type-2.rs:4:18\n    |\n LL |     unbound_drop(|| { [] })\n-   |                  ^^\n+   |                  ^^   -- type must be known at this point\n    |\n help: try giving this closure an explicit return type\n    |"}, {"sha": "bc4107528d2745f06a48efc44194ba5b5284c3a0", "filename": "src/test/ui/suggestions/suggest-closure-return-type-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-closure-return-type-3.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,7 @@ error[E0282]: type annotations needed for `[_; 0]`\n   --> $DIR/suggest-closure-return-type-3.rs:4:18\n    |\n LL |     unbound_drop(|| []);\n-   |                  ^^\n+   |                  ^^ -- type must be known at this point\n    |\n help: try giving this closure an explicit return type\n    |"}, {"sha": "a2d23c4e9dfad0497417f2f70bcd26bede39e065", "filename": "src/test/ui/traits/issue-77982.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Ftraits%2Fissue-77982.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Ftraits%2Fissue-77982.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-77982.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -26,7 +26,9 @@ error[E0283]: type annotations needed\n   --> $DIR/issue-77982.rs:8:10\n    |\n LL |     opts.get(opt.as_ref());\n-   |          ^^^ cannot infer type of the type parameter `Q` declared on the associated function `get`\n+   |          ^^^     ------ type must be known at this point\n+   |          |\n+   |          cannot infer type of the type parameter `Q` declared on the associated function `get`\n    |\n    = note: multiple `impl`s satisfying `String: AsRef<_>` found in the following crates: `alloc`, `std`:\n            - impl AsRef<OsStr> for String;\n@@ -42,7 +44,9 @@ error[E0283]: type annotations needed\n   --> $DIR/issue-77982.rs:13:59\n    |\n LL |     let ips: Vec<_> = (0..100_000).map(|_| u32::from(0u32.into())).collect();\n-   |                                                           ^^^^\n+   |                                            ---------      ^^^^\n+   |                                            |\n+   |                                            type must be known at this point\n    |\n    = note: multiple `impl`s satisfying `u32: From<_>` found in the following crates: `core`, `std`:\n            - impl From<Ipv4Addr> for u32;\n@@ -59,7 +63,7 @@ error[E0283]: type annotations needed for `Box<T>`\n   --> $DIR/issue-77982.rs:36:9\n    |\n LL |     let _ = ().foo();\n-   |         ^\n+   |         ^      --- type must be known at this point\n    |\n note: multiple `impl`s satisfying `(): Foo<'_, _>` found\n   --> $DIR/issue-77982.rs:29:1\n@@ -77,7 +81,7 @@ error[E0283]: type annotations needed for `Box<T>`\n   --> $DIR/issue-77982.rs:40:9\n    |\n LL |     let _ = (&()).bar();\n-   |         ^\n+   |         ^         --- type must be known at this point\n    |\n note: multiple `impl`s satisfying `&(): Bar<'_, _>` found\n   --> $DIR/issue-77982.rs:32:1"}, {"sha": "e823bad2668ae554ee92b18b80ccd95a58e996f3", "filename": "src/test/ui/type/type-check/cannot_infer_local_or_array.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fcannot_infer_local_or_array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca0105ba4e3c846f3d3e25705a401db949c8dd40/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fcannot_infer_local_or_array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fcannot_infer_local_or_array.stderr?ref=ca0105ba4e3c846f3d3e25705a401db949c8dd40", "patch": "@@ -2,7 +2,7 @@ error[E0282]: type annotations needed for `[_; 0]`\n   --> $DIR/cannot_infer_local_or_array.rs:2:9\n    |\n LL |     let x = [];\n-   |         ^\n+   |         ^   -- type must be known at this point\n    |\n help: consider giving `x` an explicit type, where the placeholders `_` are specified\n    |"}]}