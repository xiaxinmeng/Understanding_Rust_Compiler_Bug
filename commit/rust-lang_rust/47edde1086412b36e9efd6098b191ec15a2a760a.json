{"sha": "47edde1086412b36e9efd6098b191ec15a2a760a", "node_id": "C_kwDOAAsO6NoAKDQ3ZWRkZTEwODY0MTJiMzZlOWVmZDYwOThiMTkxZWMxNWEyYTc2MGE", "commit": {"author": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-10-04T16:52:17Z"}, "committer": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-10-04T16:52:17Z"}, "message": "Optimize `saturating_add_signed`", "tree": {"sha": "a69886ea0830db8b731851aad39835530c1e6020", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a69886ea0830db8b731851aad39835530c1e6020"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47edde1086412b36e9efd6098b191ec15a2a760a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47edde1086412b36e9efd6098b191ec15a2a760a", "html_url": "https://github.com/rust-lang/rust/commit/47edde1086412b36e9efd6098b191ec15a2a760a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47edde1086412b36e9efd6098b191ec15a2a760a/comments", "author": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7", "html_url": "https://github.com/rust-lang/rust/commit/4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "96375b82582ed147932130477b337f3750d1887c", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/47edde1086412b36e9efd6098b191ec15a2a760a/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47edde1086412b36e9efd6098b191ec15a2a760a/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=47edde1086412b36e9efd6098b191ec15a2a760a", "patch": "@@ -1037,10 +1037,13 @@ macro_rules! uint_impl {\n                       without modifying the original\"]\n         #[inline]\n         pub const fn saturating_add_signed(self, rhs: $SignedT) -> Self {\n-            if rhs >= 0 {\n-                self.saturating_add(rhs as Self)\n+            let (res, overflow) = self.overflowing_add(rhs as Self);\n+            if overflow == (rhs < 0) {\n+                res\n+            } else if overflow {\n+                Self::MAX\n             } else {\n-                self.saturating_sub(rhs.unsigned_abs())\n+                0\n             }\n         }\n "}]}