{"sha": "4f2e1df29dd1090c666d9402f75d3ad5c804591c", "node_id": "C_kwDOAAsO6NoAKDRmMmUxZGYyOWRkMTA5MGM2NjZkOTQwMmY3NWQzYWQ1YzgwNDU5MWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-08T10:36:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-08T10:36:18Z"}, "message": "Rollup merge of #112333 - Zoxc:try_collect_active_jobs-deadlock, r=cjgillot\n\nDon't hold the active queries lock while calling `make_query`\n\nThis moves the call to `make_query` outside the parts that holds the active queries lock in `try_collect_active_jobs`. This should help removed the deadlock and borrow panic that has been observed when printing the query stack during an ICE.\n\ncc `@SparrowLii`\nr? `@cjgillot`", "tree": {"sha": "375660f75ee6ecb9b77cc70f9b4373e8f6fae568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/375660f75ee6ecb9b77cc70f9b4373e8f6fae568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f2e1df29dd1090c666d9402f75d3ad5c804591c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkga8iCRBK7hj4Ov3rIwAAajYIADPoxYAK3CqSKAK9ESWk7Kq/\nDNYzUfoGzga9AhsFnQalnJs81XQ/RjRk7TKLnUR7GjEHCy/oMNrLjMdUOtUtw+iM\n1X/xGrOkDELt/+ZvqOBr1ffJPk/xaTzN7k5yzaQbDnkhmUYyzccFJ983Uvodvfck\nYfgpEJZ2zlPgjfYXnVucAcNDOOmEKp2JQDmi92OEt7BDC2zPjknPPzvH+QGOuaHT\nXRXQFVLUrTs1PNCRHO/sK409RxRnE3LjRD3pRxxJb9g0JO+K57kjOKindy69GHeS\nRoyjeM9NsnHW7MlqCWCHwnIS8OTGZQ5tSZzxK5iYfIP72+Ys2gXmbiGOouWbPds=\n=z/8c\n-----END PGP SIGNATURE-----\n", "payload": "tree 375660f75ee6ecb9b77cc70f9b4373e8f6fae568\nparent 8747c0ebea5dd04311cb56310a5b2f0d32258d2f\nparent fd3d2d49f2527efd2decad3a6194b82e26137bd8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686220578 +0200\ncommitter GitHub <noreply@github.com> 1686220578 +0200\n\nRollup merge of #112333 - Zoxc:try_collect_active_jobs-deadlock, r=cjgillot\n\nDon't hold the active queries lock while calling `make_query`\n\nThis moves the call to `make_query` outside the parts that holds the active queries lock in `try_collect_active_jobs`. This should help removed the deadlock and borrow panic that has been observed when printing the query stack during an ICE.\n\ncc `@SparrowLii`\nr? `@cjgillot`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f2e1df29dd1090c666d9402f75d3ad5c804591c", "html_url": "https://github.com/rust-lang/rust/commit/4f2e1df29dd1090c666d9402f75d3ad5c804591c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f2e1df29dd1090c666d9402f75d3ad5c804591c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8747c0ebea5dd04311cb56310a5b2f0d32258d2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8747c0ebea5dd04311cb56310a5b2f0d32258d2f", "html_url": "https://github.com/rust-lang/rust/commit/8747c0ebea5dd04311cb56310a5b2f0d32258d2f"}, {"sha": "fd3d2d49f2527efd2decad3a6194b82e26137bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd3d2d49f2527efd2decad3a6194b82e26137bd8", "html_url": "https://github.com/rust-lang/rust/commit/fd3d2d49f2527efd2decad3a6194b82e26137bd8"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "b2bc33c7e0de0ef82734d6d9565c87a1519df5e7", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4f2e1df29dd1090c666d9402f75d3ad5c804591c/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f2e1df29dd1090c666d9402f75d3ad5c804591c/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=4f2e1df29dd1090c666d9402f75d3ad5c804591c", "patch": "@@ -69,6 +69,8 @@ where\n         make_query: fn(Qcx, K) -> QueryStackFrame<D>,\n         jobs: &mut QueryMap<D>,\n     ) -> Option<()> {\n+        let mut active = Vec::new();\n+\n         #[cfg(parallel_compiler)]\n         {\n             // We use try_lock_shards here since we are called from the\n@@ -77,8 +79,7 @@ where\n             for shard in shards.iter() {\n                 for (k, v) in shard.iter() {\n                     if let QueryResult::Started(ref job) = *v {\n-                        let query = make_query(qcx, *k);\n-                        jobs.insert(job.id, QueryJobInfo { query, job: job.clone() });\n+                        active.push((*k, job.clone()));\n                     }\n                 }\n             }\n@@ -91,12 +92,18 @@ where\n             // really hurt much.)\n             for (k, v) in self.active.try_lock()?.iter() {\n                 if let QueryResult::Started(ref job) = *v {\n-                    let query = make_query(qcx, *k);\n-                    jobs.insert(job.id, QueryJobInfo { query, job: job.clone() });\n+                    active.push((*k, job.clone()));\n                 }\n             }\n         }\n \n+        // Call `make_query` while we're not holding a `self.active` lock as `make_query` may call\n+        // queries leading to a deadlock.\n+        for (key, job) in active {\n+            let query = make_query(qcx, key);\n+            jobs.insert(job.id, QueryJobInfo { query, job });\n+        }\n+\n         Some(())\n     }\n }"}]}