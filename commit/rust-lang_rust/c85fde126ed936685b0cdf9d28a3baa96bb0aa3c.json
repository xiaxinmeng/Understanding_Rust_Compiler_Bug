{"sha": "c85fde126ed936685b0cdf9d28a3baa96bb0aa3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NWZkZTEyNmVkOTM2Njg1YjBjZGY5ZDI4YTNiYWE5NmJiMGFhM2M=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-04-05T19:32:34Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-04-11T21:34:01Z"}, "message": "Account for type params with bounds", "tree": {"sha": "86a67547508d584d0ce31af6a9f70ed10d4a683d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86a67547508d584d0ce31af6a9f70ed10d4a683d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c", "html_url": "https://github.com/rust-lang/rust/commit/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "794b644f0be7c4acbac8ca5de182af6efe12345f", "url": "https://api.github.com/repos/rust-lang/rust/commits/794b644f0be7c4acbac8ca5de182af6efe12345f", "html_url": "https://github.com/rust-lang/rust/commit/794b644f0be7c4acbac8ca5de182af6efe12345f"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "7e210cb7d25ab5d86392d666dd755bb33b3f2e94", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=c85fde126ed936685b0cdf9d28a3baa96bb0aa3c", "patch": "@@ -203,8 +203,7 @@ fn suggest_restriction(\n             {\n                 if segment.ident.as_str() == impl_name.as_str() {\n                     // `fn foo(t: impl Trait)`\n-                    //            ^^^^^^^^^^ get this to suggest\n-                    //                       `T` instead\n+                    //            ^^^^^^^^^^ get this to suggest `T` instead\n \n                     // There might be more than one `impl Trait`.\n                     ty_spans.push(input.span);\n@@ -237,7 +236,10 @@ fn suggest_restriction(\n                 None => (generics.span, format!(\"<{}>\", type_param)),\n                 // `fn foo<A>(t: impl Trait)`\n                 //        ^^^ suggest `<A, T: Trait>` here\n-                Some(param) => (param.span.shrink_to_hi(), format!(\", {}\", type_param)),\n+                Some(param) => (\n+                    param.bounds_span().unwrap_or(param.span).shrink_to_hi(),\n+                    format!(\", {}\", type_param),\n+                ),\n             },\n             // `fn foo(t: impl Trait)`\n             //                       ^ suggest `where <T as Trait>::A: Bound`\n@@ -247,8 +249,7 @@ fn suggest_restriction(\n \n         // Suggest `fn foo<T: Trait>(t: T) where <T as Trait>::A: Bound`.\n         err.multipart_suggestion(\n-            \"introduce a type parameter with a trait bound instead of using \\\n-                    `impl Trait`\",\n+            \"introduce a type parameter with a trait bound instead of using `impl Trait`\",\n             sugg,\n             Applicability::MaybeIncorrect,\n         );"}, {"sha": "d831bafa2b51ce321d3821759e796b79f437bc5f", "filename": "src/test/ui/suggestions/impl-trait-with-missing-bounds.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-bounds.rs?ref=c85fde126ed936685b0cdf9d28a3baa96bb0aa3c", "patch": "@@ -24,6 +24,14 @@ fn baz(t: impl std::fmt::Debug, constraints: impl Iterator) {\n     }\n }\n \n+fn bat<T: std::fmt::Debug>(t: T, constraints: impl Iterator) {\n+    for constraint in constraints {\n+        qux(t);\n+        qux(constraint);\n+//~^ ERROR `<impl Iterator as std::iter::Iterator>::Item` doesn't implement `std::fmt::Debug`\n+    }\n+}\n+\n fn qux(_: impl std::fmt::Debug) {}\n \n fn main() {}"}, {"sha": "f0f47876ed0f2ec5a98a9d9cc1dc451a3802daf6", "filename": "src/test/ui/suggestions/impl-trait-with-missing-bounds.stderr", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c85fde126ed936685b0cdf9d28a3baa96bb0aa3c/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-with-missing-bounds.stderr?ref=c85fde126ed936685b0cdf9d28a3baa96bb0aa3c", "patch": "@@ -43,6 +43,21 @@ help: introduce a type parameter with a trait bound instead of using `impl Trait\n LL | fn baz<T: Iterator>(t: impl std::fmt::Debug, constraints: T) where <T as std::iter::Iterator>::Item: std::fmt::Debug  {\n    |       ^^^^^^^^^^^^^                                       ^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error[E0277]: `<impl Iterator as std::iter::Iterator>::Item` doesn't implement `std::fmt::Debug`\n+  --> $DIR/impl-trait-with-missing-bounds.rs:30:13\n+   |\n+LL |         qux(constraint);\n+   |             ^^^^^^^^^^ `<impl Iterator as std::iter::Iterator>::Item` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`\n+...\n+LL | fn qux(_: impl std::fmt::Debug) {}\n+   |    ---         --------------- required by this bound in `qux`\n+   |\n+   = help: the trait `std::fmt::Debug` is not implemented for `<impl Iterator as std::iter::Iterator>::Item`\n+help: introduce a type parameter with a trait bound instead of using `impl Trait`\n+   |\n+LL | fn bat<T: std::fmt::Debug, T: Iterator>(t: T, constraints: T) where <T as std::iter::Iterator>::Item: std::fmt::Debug  {\n+   |                          ^^^^^^^^^^^^^                     ^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}]}