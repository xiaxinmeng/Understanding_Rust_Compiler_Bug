{"sha": "8b19845ffb7b9b6fd760f0bf8066731028377237", "node_id": "C_kwDOAAsO6NoAKDhiMTk4NDVmZmI3YjliNmZkNzYwZjBiZjgwNjY3MzEwMjgzNzcyMzc", "commit": {"author": {"name": "Piotr Mikulski", "email": "piotr@near.org", "date": "2021-12-24T05:46:21Z"}, "committer": {"name": "Piotr Mikulski", "email": "piotr@near.org", "date": "2021-12-24T05:46:21Z"}, "message": "refactor", "tree": {"sha": "e47e3a7e2ee8718e5fcd97975d9a69d4fdf3fc0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e47e3a7e2ee8718e5fcd97975d9a69d4fdf3fc0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b19845ffb7b9b6fd760f0bf8066731028377237", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b19845ffb7b9b6fd760f0bf8066731028377237", "html_url": "https://github.com/rust-lang/rust/commit/8b19845ffb7b9b6fd760f0bf8066731028377237", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b19845ffb7b9b6fd760f0bf8066731028377237/comments", "author": {"login": "pmnoxx", "id": 7828365, "node_id": "MDQ6VXNlcjc4MjgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7828365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmnoxx", "html_url": "https://github.com/pmnoxx", "followers_url": "https://api.github.com/users/pmnoxx/followers", "following_url": "https://api.github.com/users/pmnoxx/following{/other_user}", "gists_url": "https://api.github.com/users/pmnoxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmnoxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmnoxx/subscriptions", "organizations_url": "https://api.github.com/users/pmnoxx/orgs", "repos_url": "https://api.github.com/users/pmnoxx/repos", "events_url": "https://api.github.com/users/pmnoxx/events{/privacy}", "received_events_url": "https://api.github.com/users/pmnoxx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmnoxx", "id": 7828365, "node_id": "MDQ6VXNlcjc4MjgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7828365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmnoxx", "html_url": "https://github.com/pmnoxx", "followers_url": "https://api.github.com/users/pmnoxx/followers", "following_url": "https://api.github.com/users/pmnoxx/following{/other_user}", "gists_url": "https://api.github.com/users/pmnoxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmnoxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmnoxx/subscriptions", "organizations_url": "https://api.github.com/users/pmnoxx/orgs", "repos_url": "https://api.github.com/users/pmnoxx/repos", "events_url": "https://api.github.com/users/pmnoxx/events{/privacy}", "received_events_url": "https://api.github.com/users/pmnoxx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab77c924e9e26dcaa28c0eb861d08eb3ee998b6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab77c924e9e26dcaa28c0eb861d08eb3ee998b6c", "html_url": "https://github.com/rust-lang/rust/commit/ab77c924e9e26dcaa28c0eb861d08eb3ee998b6c"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "cde707790effed51e9866013ef608bea05f1a6c2", "filename": "clippy_lints/src/methods/unwrap_or_else_default.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b19845ffb7b9b6fd760f0bf8066731028377237/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b19845ffb7b9b6fd760f0bf8066731028377237/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs?ref=8b19845ffb7b9b6fd760f0bf8066731028377237", "patch": "@@ -5,8 +5,6 @@ use clippy_utils::{\n     diagnostics::span_lint_and_sugg, is_default_equivalent_ctor, is_diag_trait_item, is_trait_item,\n     source::snippet_with_applicability, ty::is_type_diagnostic_item,\n };\n-use rustc_hir::ExprKind;\n-\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n@@ -26,7 +24,7 @@ pub(super) fn check<'tcx>(\n     let is_result = is_type_diagnostic_item(cx, recv_ty, sym::Result);\n \n     let is_default_eq = match &u_arg.kind {\n-        ExprKind::Path(qpath) => {\n+        hir::ExprKind::Path(qpath) => {\n             if let Some(repl_def_id) = cx.qpath_res(qpath, u_arg.hir_id).opt_def_id() {\n                 if is_diag_trait_item(cx, repl_def_id, sym::Default)\n                     || is_default_equivalent_ctor(cx, repl_def_id, qpath)"}]}