{"sha": "784e4316ebf24c516fb956b02c661ad51031b4cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NGU0MzE2ZWJmMjRjNTE2ZmI5NTZiMDJjNjYxYWQ1MTAzMWI0Y2I=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-07T03:03:41Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-07T03:06:14Z"}, "message": "ugly, but works!", "tree": {"sha": "b246f6cf12f91445d860c678559ba643cc012abd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b246f6cf12f91445d860c678559ba643cc012abd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/784e4316ebf24c516fb956b02c661ad51031b4cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/784e4316ebf24c516fb956b02c661ad51031b4cb", "html_url": "https://github.com/rust-lang/rust/commit/784e4316ebf24c516fb956b02c661ad51031b4cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/784e4316ebf24c516fb956b02c661ad51031b4cb/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b413596da6b17537dd8c8b626fbad97f921a2759", "url": "https://api.github.com/repos/rust-lang/rust/commits/b413596da6b17537dd8c8b626fbad97f921a2759", "html_url": "https://github.com/rust-lang/rust/commit/b413596da6b17537dd8c8b626fbad97f921a2759"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "4477496f231e5a764e1282cef92ce332a4e29224", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/784e4316ebf24c516fb956b02c661ad51031b4cb/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/784e4316ebf24c516fb956b02c661ad51031b4cb/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=784e4316ebf24c516fb956b02c661ad51031b4cb", "patch": "@@ -88,12 +88,22 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n                 if let TerminatorKind::Call {\n                     func: Operand::Constant(ref f), .. } = terminator.kind {\n                     if let ty::TyFnDef(callee_def_id, substs) = f.ty.sty {\n-                        callsites.push_back(CallSite {\n-                            callee: callee_def_id,\n-                            substs,\n-                            bb,\n-                            location: terminator.source_info\n-                        });\n+                        let should_inline = match self.tcx.opt_associated_item(callee_def_id) {\n+                            Some(item) => match item.container {\n+                               ty::AssociatedItemContainer::ImplContainer(_) => true,\n+                               ty::AssociatedItemContainer::TraitContainer(_) => false,\n+                            },\n+                            None => true\n+                        };\n+\n+                        if should_inline {\n+                            callsites.push_back(CallSite {\n+                                callee: callee_def_id,\n+                                substs,\n+                                bb,\n+                                location: terminator.source_info\n+                            });\n+                        }\n                     }\n                 }\n             }"}]}