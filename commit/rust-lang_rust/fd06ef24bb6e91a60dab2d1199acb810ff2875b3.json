{"sha": "fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMDZlZjI0YmI2ZTkxYTYwZGFiMmQxMTk5YWNiODEwZmYyODc1YjM=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-02T19:56:00Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:44Z"}, "message": "librustc: fix fallout", "tree": {"sha": "d966df6807c3d7bb9302f4fdc5ac48cdaef8e572", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d966df6807c3d7bb9302f4fdc5ac48cdaef8e572"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "html_url": "https://github.com/rust-lang/rust/commit/fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/comments", "author": null, "committer": null, "parents": [{"sha": "5e7469cfe18583dbacfdd4a1db424068f8ae69a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e7469cfe18583dbacfdd4a1db424068f8ae69a5", "html_url": "https://github.com/rust-lang/rust/commit/5e7469cfe18583dbacfdd4a1db424068f8ae69a5"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "404c7edeb88d6ddfad3dadabcc64dfd668688c49", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "patch": "@@ -25,6 +25,7 @@\n #![feature(default_type_params, globs, import_shadowing, macro_rules, phase, quote)]\n #![feature(slicing_syntax, unsafe_destructor)]\n #![feature(rustc_diagnostic_macros)]\n+#![feature(unboxed_closures)]\n \n extern crate arena;\n extern crate flate;"}, {"sha": "04ecaf2f483f9e3a0c13e4f599659e174acf3804", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "patch": "@@ -432,15 +432,17 @@ impl<T> VecPerParamSpace<T> {\n         self.all_vecs(|v| v.is_empty())\n     }\n \n-    pub fn map<U>(&self, pred: |&T| -> U) -> VecPerParamSpace<U> {\n+    pub fn map<U, P>(&self, pred: P) -> VecPerParamSpace<U> where P: FnMut(&T) -> U {\n         let result = self.iter().map(pred).collect();\n         VecPerParamSpace::new_internal(result,\n                                        self.type_limit,\n                                        self.self_limit,\n                                        self.assoc_limit)\n     }\n \n-    pub fn map_enumerated<U>(&self, pred: |(ParamSpace, uint, &T)| -> U) -> VecPerParamSpace<U> {\n+    pub fn map_enumerated<U, P>(&self, pred: P) -> VecPerParamSpace<U> where\n+        P: FnMut((ParamSpace, uint, &T)) -> U,\n+    {\n         let result = self.iter_enumerated().map(pred).collect();\n         VecPerParamSpace::new_internal(result,\n                                        self.type_limit,"}, {"sha": "52d331539820910da15f74df8a726090449fb641", "filename": "src/librustc/middle/traits/mod.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs?ref=fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "patch": "@@ -312,7 +312,7 @@ impl<'tcx, N> Vtable<'tcx, N> {\n         }\n     }\n \n-    pub fn map_nested<M>(&self, op: |&N| -> M) -> Vtable<'tcx, M> {\n+    pub fn map_nested<M, F>(&self, op: F) -> Vtable<'tcx, M> where F: FnMut(&N) -> M {\n         match *self {\n             VtableImpl(ref i) => VtableImpl(i.map_nested(op)),\n             VtableFnPointer(ref sig) => VtableFnPointer((*sig).clone()),\n@@ -338,9 +338,8 @@ impl<'tcx, N> VtableImplData<'tcx, N> {\n         self.nested.iter()\n     }\n \n-    pub fn map_nested<M>(&self,\n-                         op: |&N| -> M)\n-                         -> VtableImplData<'tcx, M>\n+    pub fn map_nested<M, F>(&self, op: F) -> VtableImplData<'tcx, M> where\n+        F: FnMut(&N) -> M,\n     {\n         VtableImplData {\n             impl_def_id: self.impl_def_id,\n@@ -365,10 +364,7 @@ impl<N> VtableBuiltinData<N> {\n         self.nested.iter()\n     }\n \n-    pub fn map_nested<M>(&self,\n-                         op: |&N| -> M)\n-                         -> VtableBuiltinData<M>\n-    {\n+    pub fn map_nested<M, F>(&self, op: F) -> VtableBuiltinData<M> where F: FnMut(&N) -> M {\n         VtableBuiltinData {\n             nested: self.nested.map(op)\n         }"}, {"sha": "5dbf3208595ed9434f64a625918b29165c58cc75", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd06ef24bb6e91a60dab2d1199acb810ff2875b3/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "patch": "@@ -241,7 +241,9 @@ pub fn trait_store_to_string(cx: &ctxt, s: ty::TraitStore) -> String {\n     }\n }\n \n-pub fn vec_map_to_string<T>(ts: &[T], f: |t: &T| -> String) -> String {\n+pub fn vec_map_to_string<T, F>(ts: &[T], f: F) -> String where\n+    F: FnMut(&T) -> String,\n+{\n     let tstrs = ts.iter().map(f).collect::<Vec<String>>();\n     format!(\"[{}]\", tstrs.connect(\", \"))\n }"}]}