{"sha": "1f10dd26069d94488bbcb9669e4b60c66e295c60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMTBkZDI2MDY5ZDk0NDg4YmJjYjk2NjllNGI2MGM2NmUyOTVjNjA=", "commit": {"author": {"name": "Michael A. Plikk", "email": "michael@aptoma.com", "date": "2018-05-24T17:26:04Z"}, "committer": {"name": "Michael A. Plikk", "email": "michael@aptoma.com", "date": "2018-05-24T17:38:40Z"}, "message": "Fix note on macro outside current crate. Changed group to restricted", "tree": {"sha": "cfe64d0faac0e2d6094855bf7ec68d3cedeed9ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfe64d0faac0e2d6094855bf7ec68d3cedeed9ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f10dd26069d94488bbcb9669e4b60c66e295c60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f10dd26069d94488bbcb9669e4b60c66e295c60", "html_url": "https://github.com/rust-lang/rust/commit/1f10dd26069d94488bbcb9669e4b60c66e295c60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f10dd26069d94488bbcb9669e4b60c66e295c60/comments", "author": {"login": "mipli", "id": 795482, "node_id": "MDQ6VXNlcjc5NTQ4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/795482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mipli", "html_url": "https://github.com/mipli", "followers_url": "https://api.github.com/users/mipli/followers", "following_url": "https://api.github.com/users/mipli/following{/other_user}", "gists_url": "https://api.github.com/users/mipli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mipli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mipli/subscriptions", "organizations_url": "https://api.github.com/users/mipli/orgs", "repos_url": "https://api.github.com/users/mipli/repos", "events_url": "https://api.github.com/users/mipli/events{/privacy}", "received_events_url": "https://api.github.com/users/mipli/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mipli", "id": 795482, "node_id": "MDQ6VXNlcjc5NTQ4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/795482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mipli", "html_url": "https://github.com/mipli", "followers_url": "https://api.github.com/users/mipli/followers", "following_url": "https://api.github.com/users/mipli/following{/other_user}", "gists_url": "https://api.github.com/users/mipli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mipli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mipli/subscriptions", "organizations_url": "https://api.github.com/users/mipli/orgs", "repos_url": "https://api.github.com/users/mipli/repos", "events_url": "https://api.github.com/users/mipli/events{/privacy}", "received_events_url": "https://api.github.com/users/mipli/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc8d29be4ac405e61b6c403b0ea09809e55b8efa", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc8d29be4ac405e61b6c403b0ea09809e55b8efa", "html_url": "https://github.com/rust-lang/rust/commit/dc8d29be4ac405e61b6c403b0ea09809e55b8efa"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "aaf2ef5738c34f45baf0423af60efd32ea746d66", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f10dd26069d94488bbcb9669e4b60c66e295c60/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f10dd26069d94488bbcb9669e4b60c66e295c60/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=1f10dd26069d94488bbcb9669e4b60c66e295c60", "patch": "@@ -434,6 +434,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         methods::WRONG_PUB_SELF_CONVENTION,\n         misc::FLOAT_CMP_CONST,\n         missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS,\n+        panic_unimplemented::UNIMPLEMENTED,\n         shadow::SHADOW_REUSE,\n         shadow::SHADOW_SAME,\n         shadow::SHADOW_UNRELATED,\n@@ -627,7 +628,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         open_options::NONSENSICAL_OPEN_OPTIONS,\n         overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n         panic_unimplemented::PANIC_PARAMS,\n-        panic_unimplemented::UNIMPLEMENTED,\n         partialeq_ne_impl::PARTIALEQ_NE_IMPL,\n         precedence::PRECEDENCE,\n         ptr::CMP_NULL,\n@@ -750,7 +750,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         non_expressive_names::MANY_SINGLE_CHAR_NAMES,\n         ok_if_let::IF_LET_SOME_RESULT,\n         panic_unimplemented::PANIC_PARAMS,\n-        panic_unimplemented::UNIMPLEMENTED,\n         ptr::CMP_NULL,\n         ptr::PTR_ARG,\n         question_mark::QUESTION_MARK,"}, {"sha": "b257f5b3b940f9f34c2c988261661142e806d9f5", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1f10dd26069d94488bbcb9669e4b60c66e295c60/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f10dd26069d94488bbcb9669e4b60c66e295c60/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=1f10dd26069d94488bbcb9669e4b60c66e295c60", "patch": "@@ -2,6 +2,7 @@ use rustc::hir::*;\n use rustc::lint::*;\n use syntax::ast::LitKind;\n use syntax::ptr::P;\n+use syntax::ext::quote::rt::Span;\n use utils::{is_direct_expn_of, is_expn_of, match_def_path, opt_def_id, paths, resolve_node, span_lint};\n \n /// **What it does:** Checks for missing parameters in `panic!`.\n@@ -35,7 +36,7 @@ declare_clippy_lint! {\n /// ```\n declare_clippy_lint! {\n     pub UNIMPLEMENTED,\n-    style,\n+    restriction,\n     \"`unimplemented!` should not be present in production code\"\n }\n \n@@ -60,7 +61,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             if params.len() == 2;\n             then {\n                 if is_expn_of(expr.span, \"unimplemented\").is_some() {\n-                    span_lint(cx, UNIMPLEMENTED, expr.span,\n+                    let span = get_outer_span(expr);\n+                    span_lint(cx, UNIMPLEMENTED, span,\n                               \"`unimplemented` should not be present in production code\");\n                 } else {\n                     match_panic(params, expr, cx);\n@@ -70,6 +72,18 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     }\n }\n \n+fn get_outer_span(expr: &Expr) -> Span {\n+    if_chain! {\n+        if let Some(first) = expr.span.ctxt().outer().expn_info();\n+        if let Some(second) = first.call_site.ctxt().outer().expn_info();\n+        then {\n+            second.call_site\n+        } else {\n+            expr.span\n+        }\n+    }\n+}\n+\n fn match_panic(params: &P<[Expr]>, expr: &Expr, cx: &LateContext) {\n     if_chain! {\n         if let ExprLit(ref lit) = params[0].node;"}, {"sha": "914153c64fff9364720ff4643ed5ae5888d66ddf", "filename": "tests/run-pass/ice_exacte_size.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f10dd26069d94488bbcb9669e4b60c66e295c60/tests%2Frun-pass%2Fice_exacte_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f10dd26069d94488bbcb9669e4b60c66e295c60/tests%2Frun-pass%2Fice_exacte_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice_exacte_size.rs?ref=1f10dd26069d94488bbcb9669e4b60c66e295c60", "patch": "@@ -6,7 +6,6 @@ struct Foo;\n impl Iterator for Foo {\n     type Item = ();\n \n-    #[allow(unimplemented)]\n     fn next(&mut self) -> Option<()> {\n         let _ = self.len() == 0;\n         unimplemented!()"}, {"sha": "33050633f7fbae22e7564daa37673da9d3604a43", "filename": "tests/ui/panic_unimplemented.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f10dd26069d94488bbcb9669e4b60c66e295c60/tests%2Fui%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f10dd26069d94488bbcb9669e4b60c66e295c60/tests%2Fui%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_unimplemented.rs?ref=1f10dd26069d94488bbcb9669e4b60c66e295c60", "patch": "@@ -54,7 +54,9 @@ fn ok_escaped() {\n }\n \n fn unimplemented() {\n+    let a = 2;\n     unimplemented!();\n+    let b = a + 2;\n }\n \n fn main() {"}, {"sha": "3bf5589c46825675eb94839b3c55faa1bb84774e", "filename": "tests/ui/panic_unimplemented.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f10dd26069d94488bbcb9669e4b60c66e295c60/tests%2Fui%2Fpanic_unimplemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f10dd26069d94488bbcb9669e4b60c66e295c60/tests%2Fui%2Fpanic_unimplemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_unimplemented.stderr?ref=1f10dd26069d94488bbcb9669e4b60c66e295c60", "patch": "@@ -25,13 +25,12 @@ error: you probably are missing some parameter in your format string\n    |            ^^^^^^^^^^^^\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panic_unimplemented.rs:57:5\n+  --> $DIR/panic_unimplemented.rs:58:5\n    |\n-57 |     unimplemented!();\n+58 |     unimplemented!();\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D unimplemented` implied by `-D warnings`\n-   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: aborting due to 5 previous errors\n "}]}