{"sha": "03474943ec5cfd713064e085000cfe9f405a28ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNDc0OTQzZWM1Y2ZkNzEzMDY0ZTA4NTAwMGNmZTlmNDA1YTI4ZWY=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-30T13:41:43Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-31T08:22:45Z"}, "message": "ScalarPair for two element tuples was treated wrongly in closure calls", "tree": {"sha": "a33749430672c2457d3ee130f3bfef8414888410", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a33749430672c2457d3ee130f3bfef8414888410"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03474943ec5cfd713064e085000cfe9f405a28ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03474943ec5cfd713064e085000cfe9f405a28ef", "html_url": "https://github.com/rust-lang/rust/commit/03474943ec5cfd713064e085000cfe9f405a28ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03474943ec5cfd713064e085000cfe9f405a28ef/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "823013349ffc58e243560f21886152cc62917f1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/823013349ffc58e243560f21886152cc62917f1d", "html_url": "https://github.com/rust-lang/rust/commit/823013349ffc58e243560f21886152cc62917f1d"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "9151bfbdd1b3c57cc7757dc806e98f272cf4de35", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/03474943ec5cfd713064e085000cfe9f405a28ef/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03474943ec5cfd713064e085000cfe9f405a28ef/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=03474943ec5cfd713064e085000cfe9f405a28ef", "patch": "@@ -291,10 +291,10 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                     // and need to pack arguments\n                     Abi::Rust => {\n                         trace!(\n-                            \"arg_locals: {:?}\",\n+                            \"arg_locals: {:#?}\",\n                             self.frame().mir.args_iter().collect::<Vec<_>>()\n                         );\n-                        trace!(\"args: {:?}\", args);\n+                        trace!(\"args: {:#?}\", args);\n                         let local = arg_locals.nth(1).unwrap();\n                         for (i, &valty) in args.into_iter().enumerate() {\n                             let dest = self.eval_place(&mir::Place::Local(local).field(\n@@ -321,10 +321,10 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                 let mut arg_locals = self.frame().mir.args_iter();\n                 trace!(\"ABI: {:?}\", sig.abi);\n                 trace!(\n-                    \"arg_locals: {:?}\",\n+                    \"arg_locals: {:#?}\",\n                     self.frame().mir.args_iter().collect::<Vec<_>>()\n                 );\n-                trace!(\"args: {:?}\", args);\n+                trace!(\"args: {:#?}\", args);\n                 match sig.abi {\n                     Abi::RustCall => {\n                         assert_eq!(args.len(), 2);\n@@ -376,14 +376,26 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                                             }\n                                             break;\n                                         }\n-                                        let dest = self.eval_place(&mir::Place::Local(\n-                                            arg_locals.next().unwrap(),\n-                                        ))?;\n-                                        let valty = ValTy {\n-                                            value: other,\n-                                            ty: layout.ty,\n-                                        };\n-                                        self.write_value(valty, dest)?;\n+                                        {\n+                                            let mut write_next = |value| {\n+                                                let dest = self.eval_place(&mir::Place::Local(\n+                                                    arg_locals.next().unwrap(),\n+                                                ))?;\n+                                                let valty = ValTy {\n+                                                    value: Value::Scalar(value),\n+                                                    ty: layout.ty,\n+                                                };\n+                                                self.write_value(valty, dest)\n+                                            };\n+                                            match other {\n+                                                Value::Scalar(value) | Value::ScalarPair(value, _) => write_next(value)?,\n+                                                _ => unreachable!(),\n+                                            }\n+                                            if let Value::ScalarPair(_, value) = other {\n+                                                write_next(value)?;\n+                                            }\n+                                        }\n+                                        assert!(arg_locals.next().is_none());\n                                     }\n                                 }\n                             } else {"}, {"sha": "ac667d372f4094debfb9b7e29041f9e4a874fa6c", "filename": "src/tools/miri", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri?ref=03474943ec5cfd713064e085000cfe9f405a28ef", "patch": "@@ -1 +1 @@\n-Subproject commit 49ca1746482e3c8221d8e8c7161b7d92ae076c8f\n+Subproject commit ac667d372f4094debfb9b7e29041f9e4a874fa6c"}]}