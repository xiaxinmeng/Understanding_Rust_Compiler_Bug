{"sha": "4dbfc8ddbfd091aefa4b0af674b6625378ce34fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYmZjOGRkYmZkMDkxYWVmYTRiMGFmNjc0YjY2MjUzNzhjZTM0ZmU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-30T09:10:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-30T09:10:53Z"}, "message": "Rollup merge of #47760 - little-dude:master, r=alexcrichton\n\nimplement Send for process::Command on unix\n\ncloses https://github.com/rust-lang/rust/issues/47751", "tree": {"sha": "bf5724b80636bc2a853c3178fc8790ecb83fc655", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf5724b80636bc2a853c3178fc8790ecb83fc655"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dbfc8ddbfd091aefa4b0af674b6625378ce34fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbfc8ddbfd091aefa4b0af674b6625378ce34fe", "html_url": "https://github.com/rust-lang/rust/commit/4dbfc8ddbfd091aefa4b0af674b6625378ce34fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dbfc8ddbfd091aefa4b0af674b6625378ce34fe/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f06a391a40dca2adc4ba15385ec27ecd949ed103", "url": "https://api.github.com/repos/rust-lang/rust/commits/f06a391a40dca2adc4ba15385ec27ecd949ed103", "html_url": "https://github.com/rust-lang/rust/commit/f06a391a40dca2adc4ba15385ec27ecd949ed103"}, {"sha": "077d3434aa8a2a3064afcc1c9406a49d0acf0a8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/077d3434aa8a2a3064afcc1c9406a49d0acf0a8d", "html_url": "https://github.com/rust-lang/rust/commit/077d3434aa8a2a3064afcc1c9406a49d0acf0a8d"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "9b2f815b71383b0e6fdca479ecee7ded45264321", "filename": "src/libstd/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4dbfc8ddbfd091aefa4b0af674b6625378ce34fe/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dbfc8ddbfd091aefa4b0af674b6625378ce34fe/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=4dbfc8ddbfd091aefa4b0af674b6625378ce34fe", "patch": "@@ -1843,4 +1843,10 @@ mod tests {\n         }\n         assert!(events > 0);\n     }\n+\n+    #[test]\n+    fn test_command_implements_send() {\n+        fn take_send_type<T: Send>(_: T) {}\n+        take_send_type(Command::new(\"\"))\n+    }\n }"}, {"sha": "7e057401fab70a2a0d41407677e97c90916e9a2b", "filename": "src/libstd/sys/unix/process/process_common.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4dbfc8ddbfd091aefa4b0af674b6625378ce34fe/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dbfc8ddbfd091aefa4b0af674b6625378ce34fe/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=4dbfc8ddbfd091aefa4b0af674b6625378ce34fe", "patch": "@@ -45,7 +45,7 @@ pub struct Command {\n     // other keys.\n     program: CString,\n     args: Vec<CString>,\n-    argv: Vec<*const c_char>,\n+    argv: Argv,\n     env: CommandEnv<DefaultEnvKey>,\n \n     cwd: Option<CString>,\n@@ -58,6 +58,12 @@ pub struct Command {\n     stderr: Option<Stdio>,\n }\n \n+// Create a new type for argv, so that we can make it `Send`\n+struct Argv(Vec<*const c_char>);\n+\n+// It is safe to make Argv Send, because it contains pointers to memory owned by `Command.args`\n+unsafe impl Send for Argv {}\n+\n // passed back to std::process with the pipes connected to the child, if any\n // were requested\n pub struct StdioPipes {\n@@ -92,7 +98,7 @@ impl Command {\n         let mut saw_nul = false;\n         let program = os2c(program, &mut saw_nul);\n         Command {\n-            argv: vec![program.as_ptr(), ptr::null()],\n+            argv: Argv(vec![program.as_ptr(), ptr::null()]),\n             program,\n             args: Vec::new(),\n             env: Default::default(),\n@@ -111,8 +117,8 @@ impl Command {\n         // Overwrite the trailing NULL pointer in `argv` and then add a new null\n         // pointer.\n         let arg = os2c(arg, &mut self.saw_nul);\n-        self.argv[self.args.len() + 1] = arg.as_ptr();\n-        self.argv.push(ptr::null());\n+        self.argv.0[self.args.len() + 1] = arg.as_ptr();\n+        self.argv.0.push(ptr::null());\n \n         // Also make sure we keep track of the owned value to schedule a\n         // destructor for this memory.\n@@ -133,7 +139,7 @@ impl Command {\n         self.saw_nul\n     }\n     pub fn get_argv(&self) -> &Vec<*const c_char> {\n-        &self.argv\n+        &self.argv.0\n     }\n \n     #[allow(dead_code)]"}]}