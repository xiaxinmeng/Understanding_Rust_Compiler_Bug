{"sha": "adfcb74db02e348a53c37f023540e21a1bb378c5", "node_id": "C_kwDOAAsO6NoAKGFkZmNiNzRkYjAyZTM0OGE1M2MzN2YwMjM1NDBlMjFhMWJiMzc4YzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-04T21:11:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-04T21:11:14Z"}, "message": "Rollup merge of #98886 - michaelwoerister:tracked-split-dwarf-kind, r=davidtwco\n\nincr.comp.: Make split-dwarf commandline options [TRACKED].\n\nThis commandline options have an influence on the contents of object files (and .dwo files), so they need to be `[TRACKED]`.\n\nr? `@davidtwco`", "tree": {"sha": "89ea90cc4e6e1887882a5dff6077f3a437f440c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89ea90cc4e6e1887882a5dff6077f3a437f440c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adfcb74db02e348a53c37f023540e21a1bb378c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiw1dzCRBK7hj4Ov3rIwAAUDsIACP2XMWzM9aKej6aGt2zHUjd\nMNKt81ciwVL7ZYx8QP1luTTPX2uHEMvZ9Iqc19hiVB/eeg699D85TCAiysLpJgRr\nkSyP5iU6mC8HSn2+YeASQXMT7n1sAasUv6vU6Uc5l1ElckmHg7DOli4ADNiKtLOW\nBEDKwQoHXrbzOG0LwNzHGfH917MaWhLJO7kLbLRxm/zY4G3vsDwo5FuTwPYjJilM\n3oawsyxfQzve1rhFd0tEh3pekWMK7T2bFcLm2FPsShbrsZi0InSM+yc22+Jrgr2U\nAvTmVYXuWaEa2vokFiBYr1+2mGLOtUXilYQsU0TSXWatCn87l8IMT3DJDN0w9Bg=\n=sZPY\n-----END PGP SIGNATURE-----\n", "payload": "tree 89ea90cc4e6e1887882a5dff6077f3a437f440c3\nparent accb41ef01e23a01357215527600e97649727c6c\nparent 822957f49cf74705248ab1ff62c3bfc890a33562\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656969074 +0200\ncommitter GitHub <noreply@github.com> 1656969074 +0200\n\nRollup merge of #98886 - michaelwoerister:tracked-split-dwarf-kind, r=davidtwco\n\nincr.comp.: Make split-dwarf commandline options [TRACKED].\n\nThis commandline options have an influence on the contents of object files (and .dwo files), so they need to be `[TRACKED]`.\n\nr? `@davidtwco`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adfcb74db02e348a53c37f023540e21a1bb378c5", "html_url": "https://github.com/rust-lang/rust/commit/adfcb74db02e348a53c37f023540e21a1bb378c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adfcb74db02e348a53c37f023540e21a1bb378c5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "accb41ef01e23a01357215527600e97649727c6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/accb41ef01e23a01357215527600e97649727c6c", "html_url": "https://github.com/rust-lang/rust/commit/accb41ef01e23a01357215527600e97649727c6c"}, {"sha": "822957f49cf74705248ab1ff62c3bfc890a33562", "url": "https://api.github.com/repos/rust-lang/rust/commits/822957f49cf74705248ab1ff62c3bfc890a33562", "html_url": "https://github.com/rust-lang/rust/commit/822957f49cf74705248ab1ff62c3bfc890a33562"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "e7717f1367cb053d4619a7a27f4e9189d2ce3354", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adfcb74db02e348a53c37f023540e21a1bb378c5/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adfcb74db02e348a53c37f023540e21a1bb378c5/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=adfcb74db02e348a53c37f023540e21a1bb378c5", "patch": "@@ -2724,8 +2724,8 @@ pub(crate) mod dep_tracking {\n     use super::{\n         BranchProtection, CFGuard, CFProtection, CrateType, DebugInfo, ErrorOutputType,\n         InstrumentCoverage, LdImpl, LinkerPluginLto, LocationDetail, LtoCli, OomStrategy, OptLevel,\n-        OutputType, OutputTypes, Passes, SourceFileHashAlgorithm, SwitchWithOptPath,\n-        SymbolManglingVersion, TrimmedDefPaths,\n+        OutputType, OutputTypes, Passes, SourceFileHashAlgorithm, SplitDwarfKind,\n+        SwitchWithOptPath, SymbolManglingVersion, TrimmedDefPaths,\n     };\n     use crate::lint;\n     use crate::options::WasiExecModel;\n@@ -2812,6 +2812,7 @@ pub(crate) mod dep_tracking {\n         Edition,\n         LinkerPluginLto,\n         SplitDebuginfo,\n+        SplitDwarfKind,\n         StackProtector,\n         SwitchWithOptPath,\n         SymbolManglingVersion,"}, {"sha": "be70ea5d5e48059b9c92548af34b446fef2ebf61", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/adfcb74db02e348a53c37f023540e21a1bb378c5/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adfcb74db02e348a53c37f023540e21a1bb378c5/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=adfcb74db02e348a53c37f023540e21a1bb378c5", "patch": "@@ -1496,15 +1496,15 @@ options! {\n         \"control if mem::uninitialized and mem::zeroed panic on more UB\"),\n     strip: Strip = (Strip::None, parse_strip, [UNTRACKED],\n         \"tell the linker which information to strip (`none` (default), `debuginfo` or `symbols`)\"),\n-    split_dwarf_kind: SplitDwarfKind = (SplitDwarfKind::Split, parse_split_dwarf_kind, [UNTRACKED],\n+    split_dwarf_kind: SplitDwarfKind = (SplitDwarfKind::Split, parse_split_dwarf_kind, [TRACKED],\n         \"split dwarf variant (only if -Csplit-debuginfo is enabled and on relevant platform)\n         (default: `split`)\n \n         `split`: sections which do not require relocation are written into a DWARF object (`.dwo`)\n                  file which is ignored by the linker\n         `single`: sections which do not require relocation are written into object file but ignored\n                   by the linker\"),\n-    split_dwarf_inlining: bool = (true, parse_bool, [UNTRACKED],\n+    split_dwarf_inlining: bool = (true, parse_bool, [TRACKED],\n         \"provide minimal debug info in the object/executable to facilitate online \\\n          symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF\"),\n     symbol_mangling_version: Option<SymbolManglingVersion> = (None,"}, {"sha": "f2533e4146a84fe1eb19ba8bc661f54ed96adda7", "filename": "src/test/incremental/split_debuginfo_mode.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/adfcb74db02e348a53c37f023540e21a1bb378c5/src%2Ftest%2Fincremental%2Fsplit_debuginfo_mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adfcb74db02e348a53c37f023540e21a1bb378c5/src%2Ftest%2Fincremental%2Fsplit_debuginfo_mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fsplit_debuginfo_mode.rs?ref=adfcb74db02e348a53c37f023540e21a1bb378c5", "patch": "@@ -0,0 +1,33 @@\n+// This test case makes sure that changing split-debuginfo commandline options triggers a full re-compilation.\n+// We only test on x86_64-unknown-linux-gnu because there all combinations split-debuginfo settings are valid\n+// and the test is platform-independent otherwise.\n+\n+// ignore-tidy-linelength\n+// only-x86_64-unknown-linux-gnu\n+// revisions:rpass1 rpass2 rpass3 rpass4\n+\n+// [rpass1]compile-flags: -Zquery-dep-graph -Zunstable-options -Csplit-debuginfo=unpacked -Zsplit-dwarf-kind=single -Zsplit-dwarf-inlining=on\n+// [rpass2]compile-flags: -Zquery-dep-graph -Zunstable-options -Csplit-debuginfo=packed -Zsplit-dwarf-kind=single -Zsplit-dwarf-inlining=on\n+// [rpass3]compile-flags: -Zquery-dep-graph -Zunstable-options -Csplit-debuginfo=packed -Zsplit-dwarf-kind=split -Zsplit-dwarf-inlining=on\n+// [rpass4]compile-flags: -Zquery-dep-graph -Zunstable-options -Csplit-debuginfo=packed -Zsplit-dwarf-kind=split -Zsplit-dwarf-inlining=off\n+\n+#![feature(rustc_attrs)]\n+// For rpass2 we change -Csplit-debuginfo and thus expect every CGU to be recompiled\n+#![rustc_partition_codegened(module = \"split_debuginfo_mode\", cfg = \"rpass2\")]\n+#![rustc_partition_codegened(module = \"split_debuginfo_mode-another_module\", cfg = \"rpass2\")]\n+// For rpass3 we change -Zsplit-dwarf-kind and thus also expect every CGU to be recompiled\n+#![rustc_partition_codegened(module = \"split_debuginfo_mode\", cfg = \"rpass3\")]\n+#![rustc_partition_codegened(module = \"split_debuginfo_mode-another_module\", cfg = \"rpass3\")]\n+// For rpass4 we change -Zsplit-dwarf-inlining and thus also expect every CGU to be recompiled\n+#![rustc_partition_codegened(module = \"split_debuginfo_mode\", cfg = \"rpass4\")]\n+#![rustc_partition_codegened(module = \"split_debuginfo_mode-another_module\", cfg = \"rpass4\")]\n+\n+mod another_module {\n+    pub fn foo() -> &'static str {\n+        \"hello world\"\n+    }\n+}\n+\n+pub fn main() {\n+    println!(\"{}\", another_module::foo());\n+}"}]}