{"sha": "ec996737fe5e3f0693f4e92a33a53c2c189f36ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjOTk2NzM3ZmU1ZTNmMDY5M2Y0ZTkyYTMzYTUzYzJjMTg5ZjM2YmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-07T22:40:58Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-10T22:22:00Z"}, "message": "rustc: Remove absolute rpaths\n\nConcerns have been raised about using absolute rpaths in #11746, and this is the\nfirst step towards not relying on rpaths at all. The only current use case for\nan absolute rpath is when a non-installed rust builds an executable that then\nmoves from is built location. The relative rpath back to libstd and absolute\nrpath to the installation directory still remain (CFG_PREFIX).\n\nCloses #11746\nRebasing of #12754", "tree": {"sha": "5f095684857aff6b12b89b1567f80b5b31552639", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f095684857aff6b12b89b1567f80b5b31552639"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec996737fe5e3f0693f4e92a33a53c2c189f36ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec996737fe5e3f0693f4e92a33a53c2c189f36ba", "html_url": "https://github.com/rust-lang/rust/commit/ec996737fe5e3f0693f4e92a33a53c2c189f36ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec996737fe5e3f0693f4e92a33a53c2c189f36ba/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85299e360cda49d61b8d9a509319e19bc206c336", "url": "https://api.github.com/repos/rust-lang/rust/commits/85299e360cda49d61b8d9a509319e19bc206c336", "html_url": "https://github.com/rust-lang/rust/commit/85299e360cda49d61b8d9a509319e19bc206c336"}], "stats": {"total": 34, "additions": 1, "deletions": 33}, "files": [{"sha": "f2bcdbd4bd539fd1aae0ba2cea7033fdeaaa032f", "filename": "mk/main.mk", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec996737fe5e3f0693f4e92a33a53c2c189f36ba/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ec996737fe5e3f0693f4e92a33a53c2c189f36ba/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=ec996737fe5e3f0693f4e92a33a53c2c189f36ba", "patch": "@@ -358,17 +358,13 @@ CFGFLAG$(1)_T_$(2)_H_$(3) = stage1\n endif\n endif\n \n-ifdef CFG_DISABLE_RPATH\n ifeq ($$(OSTYPE_$(3)),apple-darwin)\n   RPATH_VAR$(1)_T_$(2)_H_$(3) := \\\n       DYLD_LIBRARY_PATH=\"$$$$DYLD_LIBRARY_PATH:$$(CURDIR)/$$(HLIB$(1)_H_$(3))\"\n else\n   RPATH_VAR$(1)_T_$(2)_H_$(3) := \\\n       LD_LIBRARY_PATH=\"$$$$LD_LIBRARY_PATH:$$(CURDIR)/$$(HLIB$(1)_H_$(3))\"\n endif\n-else\n-    RPATH_VAR$(1)_T_$(2)_H_$(3) :=\n-endif\n \n STAGE$(1)_T_$(2)_H_$(3) := \t\t\t\t\t\t\\\n \t$$(Q)$$(RPATH_VAR$(1)_T_$(2)_H_$(3))                            \\"}, {"sha": "73ccc8871caeadc6a45cda27676745f5a6181384", "filename": "src/librustc/back/rpath.rs", "status": "modified", "additions": 1, "deletions": 29, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ec996737fe5e3f0693f4e92a33a53c2c189f36ba/src%2Flibrustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec996737fe5e3f0693f4e92a33a53c2c189f36ba/src%2Flibrustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Frpath.rs?ref=ec996737fe5e3f0693f4e92a33a53c2c189f36ba", "patch": "@@ -87,10 +87,6 @@ fn get_rpaths(os: abi::Os,\n     // crates they depend on.\n     let rel_rpaths = get_rpaths_relative_to_output(os, output, libs);\n \n-    // Make backup absolute paths to the libraries. Binaries can\n-    // be moved as long as the crates they link against don't move.\n-    let abs_rpaths = get_absolute_rpaths(libs);\n-\n     // And a final backup rpath to the global library location.\n     let fallback_rpaths = vec!(get_install_prefix_rpath(sysroot, target_triple));\n \n@@ -102,11 +98,9 @@ fn get_rpaths(os: abi::Os,\n     }\n \n     log_rpaths(\"relative\", rel_rpaths.as_slice());\n-    log_rpaths(\"absolute\", abs_rpaths.as_slice());\n     log_rpaths(\"fallback\", fallback_rpaths.as_slice());\n \n     let mut rpaths = rel_rpaths;\n-    rpaths.push_all(abs_rpaths.as_slice());\n     rpaths.push_all(fallback_rpaths.as_slice());\n \n     // Remove duplicates\n@@ -146,17 +140,6 @@ pub fn get_rpath_relative_to_output(os: abi::Os,\n     prefix+\"/\"+relative.as_str().expect(\"non-utf8 component in path\")\n }\n \n-fn get_absolute_rpaths(libs: &[Path]) -> Vec<~str> {\n-    libs.iter().map(|a| get_absolute_rpath(a)).collect()\n-}\n-\n-pub fn get_absolute_rpath(lib: &Path) -> ~str {\n-    let mut p = os::make_absolute(lib);\n-    p.pop();\n-    // FIXME (#9639): This needs to handle non-utf8 paths\n-    p.as_str().expect(\"non-utf8 component in rpath\").to_owned()\n-}\n-\n pub fn get_install_prefix_rpath(sysroot: &Path, target_triple: &str) -> ~str {\n     let install_prefix = env!(\"CFG_PREFIX\");\n \n@@ -183,7 +166,7 @@ pub fn minimize_rpaths(rpaths: &[~str]) -> Vec<~str> {\n mod test {\n     use std::os;\n \n-    use back::rpath::{get_absolute_rpath, get_install_prefix_rpath};\n+    use back::rpath::get_install_prefix_rpath;\n     use back::rpath::{minimize_rpaths, rpaths_to_flags, get_rpath_relative_to_output};\n     use syntax::abi;\n     use metadata::filesearch;\n@@ -258,15 +241,4 @@ mod test {\n                                                &Path::new(\"lib/libstd.so\"));\n         assert_eq!(res.as_slice(), \"@loader_path/../lib\");\n     }\n-\n-    #[test]\n-    fn test_get_absolute_rpath() {\n-        let res = get_absolute_rpath(&Path::new(\"lib/libstd.so\"));\n-        let lib = os::make_absolute(&Path::new(\"lib\"));\n-        debug!(\"test_get_absolute_rpath: {} vs. {}\",\n-               res.to_str(), lib.display());\n-\n-        // FIXME (#9639): This needs to handle non-utf8 paths\n-        assert_eq!(res.as_slice(), lib.as_str().expect(\"non-utf8 component in path\"));\n-    }\n }"}]}