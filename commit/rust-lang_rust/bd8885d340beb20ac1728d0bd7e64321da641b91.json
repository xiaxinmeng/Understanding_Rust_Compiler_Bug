{"sha": "bd8885d340beb20ac1728d0bd7e64321da641b91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkODg4NWQzNDBiZWIyMGFjMTcyOGQwYmQ3ZTY0MzIxZGE2NDFiOTE=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2019-05-01T20:23:07Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2019-05-01T20:23:07Z"}, "message": "Fall back to `/dev/urandom` on `EPERM` for `getrandom`\n\nThis can happen because of seccomp or some VMs.\n\nFixes #52609.", "tree": {"sha": "b92c0bc82c916ab33432619c60ef0677c3b4d6a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b92c0bc82c916ab33432619c60ef0677c3b4d6a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd8885d340beb20ac1728d0bd7e64321da641b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8885d340beb20ac1728d0bd7e64321da641b91", "html_url": "https://github.com/rust-lang/rust/commit/bd8885d340beb20ac1728d0bd7e64321da641b91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd8885d340beb20ac1728d0bd7e64321da641b91/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cc24f26036b28fb3366de86efe3da6c4464057a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cc24f26036b28fb3366de86efe3da6c4464057a", "html_url": "https://github.com/rust-lang/rust/commit/6cc24f26036b28fb3366de86efe3da6c4464057a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "71c62461ee9cb4aef5aa6e01652c37165842f25e", "filename": "src/libstd/sys/unix/rand.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bd8885d340beb20ac1728d0bd7e64321da641b91/src%2Flibstd%2Fsys%2Funix%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd8885d340beb20ac1728d0bd7e64321da641b91/src%2Flibstd%2Fsys%2Funix%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Frand.rs?ref=bd8885d340beb20ac1728d0bd7e64321da641b91", "patch": "@@ -47,7 +47,12 @@ mod imp {\n                 let err = errno() as libc::c_int;\n                 if err == libc::EINTR {\n                     continue;\n-                } else if err == libc::ENOSYS {\n+                } else if err == libc::ENOSYS || err == libc::EPERM {\n+                    // Fall back to reading /dev/urandom if `getrandom` is not\n+                    // supported on the current kernel.\n+                    //\n+                    // Also fall back in case it is disabled by something like\n+                    // seccomp or inside of virtual machines.\n                     GETRANDOM_UNAVAILABLE.store(true, Ordering::Relaxed);\n                     return false;\n                 } else if err == libc::EAGAIN {"}]}