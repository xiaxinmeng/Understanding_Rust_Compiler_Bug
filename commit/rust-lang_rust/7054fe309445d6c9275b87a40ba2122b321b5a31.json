{"sha": "7054fe309445d6c9275b87a40ba2122b321b5a31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNTRmZTMwOTQ0NWQ2YzkyNzViODdhNDBiYTIxMjJiMzIxYjVhMzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-07-23T13:20:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-07-23T13:20:14Z"}, "message": "Lambda expressions honor no struct literal restriction", "tree": {"sha": "6d60a9f0602f8efd4da6dea7934de95ac9b9ffa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d60a9f0602f8efd4da6dea7934de95ac9b9ffa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7054fe309445d6c9275b87a40ba2122b321b5a31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7054fe309445d6c9275b87a40ba2122b321b5a31", "html_url": "https://github.com/rust-lang/rust/commit/7054fe309445d6c9275b87a40ba2122b321b5a31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7054fe309445d6c9275b87a40ba2122b321b5a31/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8d485f53dbe87e0d7b4ad14904fd7b0447a8cbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d485f53dbe87e0d7b4ad14904fd7b0447a8cbe", "html_url": "https://github.com/rust-lang/rust/commit/f8d485f53dbe87e0d7b4ad14904fd7b0447a8cbe"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "ab0dab9a1eb8c2ec85094eaf040675ec00b4cffe", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7054fe309445d6c9275b87a40ba2122b321b5a31/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7054fe309445d6c9275b87a40ba2122b321b5a31/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7054fe309445d6c9275b87a40ba2122b321b5a31", "patch": "@@ -3073,7 +3073,10 @@ impl<'a> Parser<'a> {\n         let decl = self.parse_fn_block_decl()?;\n         let decl_hi = self.prev_span;\n         let body = match decl.output {\n-            FunctionRetTy::Default(_) => self.parse_expr()?,\n+            FunctionRetTy::Default(_) => {\n+                let restrictions = self.restrictions - RESTRICTION_STMT_EXPR;\n+                self.parse_expr_res(restrictions, None)?\n+            },\n             _ => {\n                 // If an explicit return type is given, require a\n                 // block to appear (RFC 968)."}, {"sha": "6b7a26556f430af72f7c3565d88cd8869b085167", "filename": "src/test/parse-fail/struct-literal-restrictions-in-lamda.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7054fe309445d6c9275b87a40ba2122b321b5a31/src%2Ftest%2Fparse-fail%2Fstruct-literal-restrictions-in-lamda.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7054fe309445d6c9275b87a40ba2122b321b5a31/src%2Ftest%2Fparse-fail%2Fstruct-literal-restrictions-in-lamda.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-restrictions-in-lamda.rs?ref=7054fe309445d6c9275b87a40ba2122b321b5a31", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z parse-only\n+\n+struct Foo {\n+    x: isize,\n+}\n+\n+impl Foo {\n+    fn hi(&self) -> bool {\n+        true\n+    }\n+}\n+\n+fn main() {\n+    while || Foo {\n+        x: 3    //~ ERROR expected type, found `3`\n+    }.hi() { //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `{`\n+        println!(\"yo\");\n+    }\n+}"}, {"sha": "0fc5fe498a62d6012d580df01e90d6e0def615f8", "filename": "src/test/run-pass/semistatement-in-lambda.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7054fe309445d6c9275b87a40ba2122b321b5a31/src%2Ftest%2Frun-pass%2Fsemistatement-in-lambda.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7054fe309445d6c9275b87a40ba2122b321b5a31/src%2Ftest%2Frun-pass%2Fsemistatement-in-lambda.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsemistatement-in-lambda.rs?ref=7054fe309445d6c9275b87a40ba2122b321b5a31", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+pub fn main() {\n+    // Test that lambdas behave as unary expressions with block-like expressions\n+    -if true { 1 } else { 2 } * 3;\n+    || if true { 1 } else { 2 } * 3;\n+\n+    // The following is invalid and parses as `if true { 1 } else { 2 }; *3`\n+    // if true { 1 } else { 2 } * 3\n+}"}]}