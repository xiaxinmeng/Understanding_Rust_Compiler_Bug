{"sha": "b9bf119c4f98f40eb84b385a6d3239c358b054cb", "node_id": "C_kwDOAAsO6NoAKGI5YmYxMTljNGY5OGY0MGViODRiMzg1YTZkMzIzOWMzNThiMDU0Y2I", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-14T11:12:51Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-06T18:59:45Z"}, "message": "Simplify some nested conditions", "tree": {"sha": "9192adf11294d03f7a1818bb4f4582ac2e4f2b11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9192adf11294d03f7a1818bb4f4582ac2e4f2b11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9bf119c4f98f40eb84b385a6d3239c358b054cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9bf119c4f98f40eb84b385a6d3239c358b054cb", "html_url": "https://github.com/rust-lang/rust/commit/b9bf119c4f98f40eb84b385a6d3239c358b054cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9bf119c4f98f40eb84b385a6d3239c358b054cb/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e60fbaf4ce768d13a6abc048bd34ee12995d18dc", "html_url": "https://github.com/rust-lang/rust/commit/e60fbaf4ce768d13a6abc048bd34ee12995d18dc"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "98639434d8c29718b158f8c224317f7dc60b8373", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b9bf119c4f98f40eb84b385a6d3239c358b054cb/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9bf119c4f98f40eb84b385a6d3239c358b054cb/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=b9bf119c4f98f40eb84b385a6d3239c358b054cb", "patch": "@@ -1386,20 +1386,13 @@ impl EmitterWriter {\n         let mut annotated_files = FileWithAnnotatedLines::collect_annotations(self, args, msp);\n \n         // Make sure our primary file comes first\n-        let (primary_lo, sm) = if let (Some(sm), Some(ref primary_span)) =\n-            (self.sm.as_ref(), msp.primary_span().as_ref())\n-        {\n-            if !primary_span.is_dummy() {\n-                (sm.lookup_char_pos(primary_span.lo()), sm)\n-            } else {\n-                emit_to_destination(&buffer.render(), level, &mut self.dst, self.short_message)?;\n-                return Ok(());\n-            }\n-        } else {\n+        let primary_span = msp.primary_span().unwrap_or_default();\n+        let (Some(sm), false) = (self.sm.as_ref(), primary_span.is_dummy()) else {\n             // If we don't have span information, emit and exit\n             emit_to_destination(&buffer.render(), level, &mut self.dst, self.short_message)?;\n             return Ok(());\n         };\n+        let primary_lo = sm.lookup_char_pos(primary_span.lo());\n         if let Ok(pos) =\n             annotated_files.binary_search_by(|x| x.file.name.cmp(&primary_lo.file.name))\n         {"}]}