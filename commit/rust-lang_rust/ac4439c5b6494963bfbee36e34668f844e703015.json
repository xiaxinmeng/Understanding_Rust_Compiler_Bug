{"sha": "ac4439c5b6494963bfbee36e34668f844e703015", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNDQzOWM1YjY0OTQ5NjNiZmJlZTM2ZTM0NjY4Zjg0NGU3MDMwMTU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-03T22:41:30Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-09T16:00:25Z"}, "message": "Reuse Hash impls for session data structures", "tree": {"sha": "15f455473d159a63b2d6eb7db03c54758d1d9cf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15f455473d159a63b2d6eb7db03c54758d1d9cf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac4439c5b6494963bfbee36e34668f844e703015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac4439c5b6494963bfbee36e34668f844e703015", "html_url": "https://github.com/rust-lang/rust/commit/ac4439c5b6494963bfbee36e34668f844e703015", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac4439c5b6494963bfbee36e34668f844e703015/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f138e1e558828506f8eb801b77f0bfc60d738e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f138e1e558828506f8eb801b77f0bfc60d738e0", "html_url": "https://github.com/rust-lang/rust/commit/7f138e1e558828506f8eb801b77f0bfc60d738e0"}], "stats": {"total": 58, "additions": 13, "deletions": 45}, "files": [{"sha": "f00c5a649d274a95e311acb735888b09402f957a", "filename": "src/librustc/ich/fingerprint.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac4439c5b6494963bfbee36e34668f844e703015/src%2Flibrustc%2Fich%2Ffingerprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4439c5b6494963bfbee36e34668f844e703015/src%2Flibrustc%2Fich%2Ffingerprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Ffingerprint.rs?ref=ac4439c5b6494963bfbee36e34668f844e703015", "patch": "@@ -92,14 +92,7 @@ impl stable_hasher::StableHasherResult for Fingerprint {\n     }\n }\n \n-impl<CTX> stable_hasher::HashStable<CTX> for Fingerprint {\n-    #[inline]\n-    fn hash_stable<W: stable_hasher::StableHasherResult>(&self,\n-                                          _: &mut CTX,\n-                                          hasher: &mut stable_hasher::StableHasher<W>) {\n-        ::std::hash::Hash::hash(self, hasher);\n-    }\n-}\n+impl_stable_hash_via_hash!(Fingerprint);\n \n impl serialize::UseSpecializedEncodable for Fingerprint { }\n "}, {"sha": "ef1052d562e5584db33003e9672eb28d6f42bc9a", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 4, "deletions": 32, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ac4439c5b6494963bfbee36e34668f844e703015/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4439c5b6494963bfbee36e34668f844e703015/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=ac4439c5b6494963bfbee36e34668f844e703015", "patch": "@@ -16,10 +16,8 @@ use std::str::FromStr;\n use session::{early_error, early_warn, Session};\n use session::search_paths::SearchPaths;\n \n-use ich::StableHashingContext;\n use rustc_target::spec::{LinkerFlavor, PanicStrategy, RelroLevel};\n use rustc_target::spec::{Target, TargetTriple};\n-use rustc_data_structures::stable_hasher::ToStableHashKey;\n use lint;\n use middle::cstore;\n \n@@ -126,25 +124,7 @@ pub enum OutputType {\n     DepInfo,\n }\n \n-\n-impl_stable_hash_for!(enum self::OutputType {\n-    Bitcode,\n-    Assembly,\n-    LlvmAssembly,\n-    Mir,\n-    Metadata,\n-    Object,\n-    Exe,\n-    DepInfo\n-});\n-\n-impl<'a, 'tcx> ToStableHashKey<StableHashingContext<'a>> for OutputType {\n-    type KeyType = OutputType;\n-    #[inline]\n-    fn to_stable_hash_key(&self, _: &StableHashingContext<'a>) -> Self::KeyType {\n-        *self\n-    }\n-}\n+impl_stable_hash_via_hash!(OutputType);\n \n impl OutputType {\n     fn is_compatible_with_codegen_units_and_single_output_file(&self) -> bool {\n@@ -233,9 +213,7 @@ impl Default for ErrorOutputType {\n #[derive(Clone, Hash)]\n pub struct OutputTypes(BTreeMap<OutputType, Option<PathBuf>>);\n \n-impl_stable_hash_for!(tuple_struct self::OutputTypes {\n-    map\n-});\n+impl_stable_hash_via_hash!(OutputTypes);\n \n impl OutputTypes {\n     pub fn new(entries: &[(OutputType, Option<PathBuf>)]) -> OutputTypes {\n@@ -512,7 +490,7 @@ impl Input {\n     }\n }\n \n-#[derive(Clone)]\n+#[derive(Clone, Hash)]\n pub struct OutputFilenames {\n     pub out_directory: PathBuf,\n     pub out_filestem: String,\n@@ -521,13 +499,7 @@ pub struct OutputFilenames {\n     pub outputs: OutputTypes,\n }\n \n-impl_stable_hash_for!(struct self::OutputFilenames {\n-    out_directory,\n-    out_filestem,\n-    single_output_file,\n-    extra,\n-    outputs\n-});\n+impl_stable_hash_via_hash!(OutputFilenames);\n \n pub const RUST_CGU_EXT: &str = \"rcgu\";\n "}, {"sha": "6bbb4d9c6688d5d212569c1b4ccd2867ada15b7f", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac4439c5b6494963bfbee36e34668f844e703015/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4439c5b6494963bfbee36e34668f844e703015/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=ac4439c5b6494963bfbee36e34668f844e703015", "patch": "@@ -1235,7 +1235,7 @@ impl From<Fingerprint> for CrateDisambiguator {\n     }\n }\n \n-impl_stable_hash_for!(tuple_struct CrateDisambiguator { fingerprint });\n+impl_stable_hash_via_hash!(CrateDisambiguator);\n \n /// Holds data on the current incremental compilation session, if there is one.\n #[derive(Debug)]"}, {"sha": "9f1c7dac1194ef3c48f20b46a11e092232204642", "filename": "src/librustc_data_structures/stable_hasher.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ac4439c5b6494963bfbee36e34668f844e703015/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4439c5b6494963bfbee36e34668f844e703015/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fstable_hasher.rs?ref=ac4439c5b6494963bfbee36e34668f844e703015", "patch": "@@ -183,13 +183,16 @@ pub trait ToStableHashKey<HCX> {\n \n // Implement HashStable by just calling `Hash::hash()`. This works fine for\n // self-contained values that don't depend on the hashing context `CTX`.\n+#[macro_export]\n macro_rules! impl_stable_hash_via_hash {\n     ($t:ty) => (\n-        impl<CTX> HashStable<CTX> for $t {\n+        impl<CTX> $crate::stable_hasher::HashStable<CTX> for $t {\n             #[inline]\n-            fn hash_stable<W: StableHasherResult>(&self,\n-                                                  _: &mut CTX,\n-                                                  hasher: &mut StableHasher<W>) {\n+            fn hash_stable<W: $crate::stable_hasher::StableHasherResult>(\n+                &self,\n+                _: &mut CTX,\n+                hasher: &mut $crate::stable_hasher::StableHasher<W>\n+            ) {\n                 ::std::hash::Hash::hash(self, hasher);\n             }\n         }"}]}