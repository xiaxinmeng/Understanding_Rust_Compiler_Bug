{"sha": "0c47fdfedbb44256b3c78f315cd6150190317e38", "node_id": "C_kwDOAAsO6NoAKDBjNDdmZGZlZGJiNDQyNTZiM2M3OGYzMTVjZDYxNTAxOTAzMTdlMzg", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-10-07T20:05:45Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-10-07T20:05:45Z"}, "message": "Cast vtable type too", "tree": {"sha": "9c6b47a16d1894edb4021e76741637f4dda034b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c6b47a16d1894edb4021e76741637f4dda034b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c47fdfedbb44256b3c78f315cd6150190317e38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c47fdfedbb44256b3c78f315cd6150190317e38", "html_url": "https://github.com/rust-lang/rust/commit/0c47fdfedbb44256b3c78f315cd6150190317e38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c47fdfedbb44256b3c78f315cd6150190317e38/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43499da7539d4d0f6bfcea14e19cbe3d7dda4777", "url": "https://api.github.com/repos/rust-lang/rust/commits/43499da7539d4d0f6bfcea14e19cbe3d7dda4777", "html_url": "https://github.com/rust-lang/rust/commit/43499da7539d4d0f6bfcea14e19cbe3d7dda4777"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "5837b4ff2b9deb0dd8a0392a1769e04ebf2949bd", "filename": "compiler/rustc_codegen_ssa/src/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0c47fdfedbb44256b3c78f315cd6150190317e38/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c47fdfedbb44256b3c78f315cd6150190317e38/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs?ref=0c47fdfedbb44256b3c78f315cd6150190317e38", "patch": "@@ -286,6 +286,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                                 bug!(\"Only valid to do a DynStar cast into a DynStar type\")\n                             };\n                         let vtable = get_vtable(bx.cx(), source.ty(self.mir, bx.tcx()), trait_ref);\n+                        let vtable = bx.pointercast(vtable, bx.cx().type_ptr_to(bx.cx().type_isize()));\n                         let data = match operand.layout.pointee_info_at(bx.cx(), Size::ZERO) {\n                             Some(_) => bx.ptrtoint(data, bx.cx().type_isize()),\n                             None => data,"}]}