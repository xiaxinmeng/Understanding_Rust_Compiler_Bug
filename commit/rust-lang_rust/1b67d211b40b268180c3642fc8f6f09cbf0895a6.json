{"sha": "1b67d211b40b268180c3642fc8f6f09cbf0895a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNjdkMjExYjQwYjI2ODE4MGMzNjQyZmM4ZjZmMDljYmYwODk1YTY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-03T00:00:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-03T05:11:46Z"}, "message": "Add a rust_str typedef to the runtime. Issue #855", "tree": {"sha": "10159d086cab03097aa59118d87cbcd08b2203b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10159d086cab03097aa59118d87cbcd08b2203b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b67d211b40b268180c3642fc8f6f09cbf0895a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b67d211b40b268180c3642fc8f6f09cbf0895a6", "html_url": "https://github.com/rust-lang/rust/commit/1b67d211b40b268180c3642fc8f6f09cbf0895a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b67d211b40b268180c3642fc8f6f09cbf0895a6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01b254b411a954ebed24a38f873e02b7f6edd0a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/01b254b411a954ebed24a38f873e02b7f6edd0a6", "html_url": "https://github.com/rust-lang/rust/commit/01b254b411a954ebed24a38f873e02b7f6edd0a6"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "fbf6ff7a08b25ccaeb609b8e151d0dbccc05f4a8", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b67d211b40b268180c3642fc8f6f09cbf0895a6/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1b67d211b40b268180c3642fc8f6f09cbf0895a6/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=1b67d211b40b268180c3642fc8f6f09cbf0895a6", "patch": "@@ -43,10 +43,10 @@ command_line_args : public kernel_owned<command_line_args>\n                            \"command line arg interior\");\n         args->fill = args->alloc = sizeof(rust_vec*) * argc;\n         for (int i = 0; i < argc; ++i) {\n-            rust_vec *str = make_str(kernel, argv[i],\n+            rust_str *str = make_str(kernel, argv[i],\n                                      strlen(argv[i]),\n                                      \"command line arg\");\n-            ((rust_vec**)&args->data)[i] = str;\n+            ((rust_str**)&args->data)[i] = str;\n         }\n     }\n "}, {"sha": "f8fc85a0fe1586ed7d9b8b459cb2b1a83c9a4ccf", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1b67d211b40b268180c3642fc8f6f09cbf0895a6/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1b67d211b40b268180c3642fc8f6f09cbf0895a6/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=1b67d211b40b268180c3642fc8f6f09cbf0895a6", "patch": "@@ -7,7 +7,7 @@\n \n /* Native builtins. */\n \n-extern \"C\" CDECL rust_vec*\n+extern \"C\" CDECL rust_str*\n last_os_error(rust_task *task) {\n     LOG(task, task, \"last_os_error()\");\n \n@@ -40,15 +40,15 @@ last_os_error(rust_task *task) {\n     }\n #endif\n \n-    rust_vec * st = make_str(task->kernel, buf, strlen(buf),\n-                              \"last_os_error\");\n+    rust_str * st = make_str(task->kernel, buf, strlen(buf),\n+                             \"last_os_error\");\n #ifdef __WIN32__\n     LocalFree((HLOCAL)buf);\n #endif\n     return st;\n }\n \n-extern \"C\" CDECL rust_vec *\n+extern \"C\" CDECL rust_str *\n rust_getcwd(rust_task *task) {\n     LOG(task, task, \"rust_getcwd()\");\n \n@@ -323,15 +323,15 @@ debug_ptrcast(rust_task *task,\n \n extern \"C\" CDECL rust_vec*\n rust_list_files(rust_task *task, rust_vec **path) {\n-    array_list<rust_vec*> strings;\n+    array_list<rust_str*> strings;\n #if defined(__WIN32__)\n     WIN32_FIND_DATA FindFileData;\n     HANDLE hFind = FindFirstFile((char*)(*path)->data, &FindFileData);\n     if (hFind != INVALID_HANDLE_VALUE) {\n         do {\n-            rust_vec *str = make_str(task->kernel, FindFileData.cFileName,\n-                                      strlen(FindFileData.cFileName),\n-                                      \"list_files_str\");\n+            rust_str *str = make_str(task->kernel, FindFileData.cFileName,\n+                                     strlen(FindFileData.cFileName),\n+                                     \"list_files_str\");\n             strings.push(str);\n         } while (FindNextFile(hFind, &FindFileData));\n         FindClose(hFind);"}, {"sha": "50545b2131025f6dc810a56f4552bdb3b33fd72f", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1b67d211b40b268180c3642fc8f6f09cbf0895a6/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/1b67d211b40b268180c3642fc8f6f09cbf0895a6/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=1b67d211b40b268180c3642fc8f6f09cbf0895a6", "patch": "@@ -188,11 +188,13 @@ inline void reserve_vec(rust_task* task, rust_vec** vpp, size_t size) {\n     }\n }\n \n-inline rust_vec *\n+typedef rust_vec rust_str;\n+\n+inline rust_str *\n make_str(rust_kernel* kernel, char* c, size_t strlen, const char* name) {\n     size_t str_fill = strlen + 1;\n     size_t str_alloc = str_fill;\n-    rust_vec *str = (rust_vec *)\n+    rust_str *str = (rust_str *)\n         kernel->malloc(vec_size<char>(str_fill), name);\n     str->fill = str_fill;\n     str->alloc = str_alloc;"}]}