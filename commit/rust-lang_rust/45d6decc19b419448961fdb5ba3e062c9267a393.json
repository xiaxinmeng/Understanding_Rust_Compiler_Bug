{"sha": "45d6decc19b419448961fdb5ba3e062c9267a393", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZDZkZWNjMTliNDE5NDQ4OTYxZmRiNWJhM2UwNjJjOTI2N2EzOTM=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-30T08:48:48Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-08-22T18:23:29Z"}, "message": "Remove try_mark_green_and_read.", "tree": {"sha": "a6ccde47f22e94118fd4017f1c8ed8c6bbbd4487", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6ccde47f22e94118fd4017f1c8ed8c6bbbd4487"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45d6decc19b419448961fdb5ba3e062c9267a393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45d6decc19b419448961fdb5ba3e062c9267a393", "html_url": "https://github.com/rust-lang/rust/commit/45d6decc19b419448961fdb5ba3e062c9267a393", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45d6decc19b419448961fdb5ba3e062c9267a393/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3bf3969d408f46881908336f9e3a8721601abc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3bf3969d408f46881908336f9e3a8721601abc4", "html_url": "https://github.com/rust-lang/rust/commit/c3bf3969d408f46881908336f9e3a8721601abc4"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "16fca7a3cd958f0171d8ffa1042fbc9a6a72f4a5", "filename": "compiler/rustc_query_system/src/dep_graph/graph.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/45d6decc19b419448961fdb5ba3e062c9267a393/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d6decc19b419448961fdb5ba3e062c9267a393/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs?ref=45d6decc19b419448961fdb5ba3e062c9267a393", "patch": "@@ -499,22 +499,11 @@ impl<K: DepKind> DepGraph<K> {\n         None\n     }\n \n-    /// Try to read a node index for the node dep_node.\n+    /// Try to mark a node index for the node dep_node.\n+    ///\n     /// A node will have an index, when it's already been marked green, or when we can mark it\n     /// green. This function will mark the current task as a reader of the specified node, when\n     /// a node index can be found for that node.\n-    pub fn try_mark_green_and_read<Ctxt: QueryContext<DepKind = K>>(\n-        &self,\n-        tcx: Ctxt,\n-        dep_node: &DepNode<K>,\n-    ) -> Option<(SerializedDepNodeIndex, DepNodeIndex)> {\n-        self.try_mark_green(tcx, dep_node).map(|(prev_index, dep_node_index)| {\n-            debug_assert!(self.is_green(&dep_node));\n-            self.read_index(dep_node_index);\n-            (prev_index, dep_node_index)\n-        })\n-    }\n-\n     pub fn try_mark_green<Ctxt: QueryContext<DepKind = K>>(\n         &self,\n         tcx: Ctxt,"}, {"sha": "9f89f6f530910ec5ce26ba1fd79f921b6fe0aeb1", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/45d6decc19b419448961fdb5ba3e062c9267a393/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d6decc19b419448961fdb5ba3e062c9267a393/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=45d6decc19b419448961fdb5ba3e062c9267a393", "patch": "@@ -523,7 +523,8 @@ where\n     // We must ensure that this is handled correctly.\n \n     let (prev_dep_node_index, dep_node_index) =\n-        tcx.dep_context().dep_graph().try_mark_green_and_read(tcx, &dep_node)?;\n+        tcx.dep_context().dep_graph().try_mark_green(tcx, &dep_node)?;\n+    tcx.dep_context().dep_graph().read_index(dep_node_index);\n \n     debug_assert!(tcx.dep_context().dep_graph().is_green(dep_node));\n \n@@ -725,9 +726,10 @@ where\n \n     let dep_node = query.to_dep_node(*tcx.dep_context(), key);\n \n-    match tcx.dep_context().dep_graph().try_mark_green_and_read(tcx, &dep_node) {\n+    let dep_graph = tcx.dep_context().dep_graph();\n+    match dep_graph.try_mark_green(tcx, &dep_node) {\n         None => {\n-            // A None return from `try_mark_green_and_read` means that this is either\n+            // A None return from `try_mark_green` means that this is either\n             // a new dep node or that the dep node has already been marked red.\n             // Either way, we can't call `dep_graph.read()` as we don't have the\n             // DepNodeIndex. We must invoke the query itself. The performance cost\n@@ -736,6 +738,7 @@ where\n             true\n         }\n         Some((_, dep_node_index)) => {\n+            dep_graph.read_index(dep_node_index);\n             tcx.dep_context().profiler().query_cache_hit(dep_node_index.into());\n             false\n         }"}]}