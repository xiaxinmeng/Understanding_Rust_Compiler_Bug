{"sha": "4a7e45ec28fcbee14cd143402c1129d30cef39f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhN2U0NWVjMjhmY2JlZTE0Y2QxNDM0MDJjMTEyOWQzMGNlZjM5ZjA=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-04-06T14:03:11Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-04-10T03:36:57Z"}, "message": "Simplify UseTree::has_comment", "tree": {"sha": "1b0b247d1a7a46cad52400f32058807f795df456", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b0b247d1a7a46cad52400f32058807f795df456"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a7e45ec28fcbee14cd143402c1129d30cef39f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a7e45ec28fcbee14cd143402c1129d30cef39f0", "html_url": "https://github.com/rust-lang/rust/commit/4a7e45ec28fcbee14cd143402c1129d30cef39f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a7e45ec28fcbee14cd143402c1129d30cef39f0/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1954513ace66d81b62692f208fdaa91ab48c9757", "url": "https://api.github.com/repos/rust-lang/rust/commits/1954513ace66d81b62692f208fdaa91ab48c9757", "html_url": "https://github.com/rust-lang/rust/commit/1954513ace66d81b62692f208fdaa91ab48c9757"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "03df4aed6af76e7e557d8a6b470de38b87f937bd", "filename": "src/imports.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4a7e45ec28fcbee14cd143402c1129d30cef39f0/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a7e45ec28fcbee14cd143402c1129d30cef39f0/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=4a7e45ec28fcbee14cd143402c1129d30cef39f0", "patch": "@@ -446,9 +446,7 @@ impl UseTree {\n     }\n \n     fn has_comment(&self) -> bool {\n-        self.list_item.as_ref().map_or(false, |list_item| {\n-            list_item.pre_comment.is_some() || list_item.post_comment.is_some()\n-        })\n+        self.list_item.as_ref().map_or(false, ListItem::has_comment)\n     }\n \n     fn same_visibility(&self, other: &UseTree) -> bool {\n@@ -526,7 +524,6 @@ impl UseTree {\n             if *a == b {\n                 len = i + 1;\n                 new_path.push(b);\n-                continue;\n             } else {\n                 len = i;\n                 break;"}]}