{"sha": "3c5da6e6b9b0b3a7969036732ba45cd307d2cf93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNWRhNmU2YjliMGIzYTc5NjkwMzY3MzJiYTQ1Y2QzMDdkMmNmOTM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-06T22:38:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-06T22:38:44Z"}, "message": "Rollup merge of #84953 - GuillaumeGomez:remove-unneeded-with_default_session_globals, r=jyn514\n\nRemove unneeded call to with_default_session_globals in rustdoc highlight\n\nThis was the origin of the `Span` bug in https://github.com/rust-lang/rust/pull/84176.\n\ncc `````@Aaron1011`````\nr? `````@jyn514`````", "tree": {"sha": "01311552495c58142f5f18cdd9ae5f21a7f556e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01311552495c58142f5f18cdd9ae5f21a7f556e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglG/0CRBK7hj4Ov3rIwAAw7IIAIz4b7YQSKOM5bf8VeEN4rLz\n602m5obZEuR9N2g1Z/nw3aUCiG2L1/JGce6XV0ivHObK9mG3F6qPewWJyZeQNUWD\n0EwE8sxLPragxDlsHLYonOrWwcHeoP9Ge9gC+PQK4Ul59AtaP+hPZSe+HL1K96m8\n5RloNbHga6OtsNcXOicaNa64AbRDBk6v/rwUWXqPBsSSSSw79MP+XPc1ByJetjT8\njGWE+FvjKA9peXr4LQDlJlN7+T+T98DoXnoAUmNoLqRhQRdaRlIYOvNzaMYvawWc\ntEwDsmW98a3TXB4tUpQBzcibZzSO6ymuu9hz98z+hPdVHWhS498PjFiVeCt8lnE=\n=/rmk\n-----END PGP SIGNATURE-----\n", "payload": "tree 01311552495c58142f5f18cdd9ae5f21a7f556e1\nparent eec3ae3feb8fc812df5f982940511a43c2de0df0\nparent 3c489a3482258a5788516d2d8c31e68ee26e0e15\nauthor Dylan DPC <dylan.dpc@gmail.com> 1620340724 +0200\ncommitter GitHub <noreply@github.com> 1620340724 +0200\n\nRollup merge of #84953 - GuillaumeGomez:remove-unneeded-with_default_session_globals, r=jyn514\n\nRemove unneeded call to with_default_session_globals in rustdoc highlight\n\nThis was the origin of the `Span` bug in https://github.com/rust-lang/rust/pull/84176.\n\ncc `````@Aaron1011`````\nr? `````@jyn514`````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93", "html_url": "https://github.com/rust-lang/rust/commit/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eec3ae3feb8fc812df5f982940511a43c2de0df0", "url": "https://api.github.com/repos/rust-lang/rust/commits/eec3ae3feb8fc812df5f982940511a43c2de0df0", "html_url": "https://github.com/rust-lang/rust/commit/eec3ae3feb8fc812df5f982940511a43c2de0df0"}, {"sha": "3c489a3482258a5788516d2d8c31e68ee26e0e15", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c489a3482258a5788516d2d8c31e68ee26e0e15", "html_url": "https://github.com/rust-lang/rust/commit/3c489a3482258a5788516d2d8c31e68ee26e0e15"}], "stats": {"total": 64, "additions": 33, "deletions": 31}, "files": [{"sha": "f631f627fc255caeab1105a64243f8f2dfb1151f", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=3c5da6e6b9b0b3a7969036732ba45cd307d2cf93", "patch": "@@ -13,7 +13,6 @@ use std::iter::Peekable;\n use rustc_lexer::{LiteralKind, TokenKind};\n use rustc_span::edition::Edition;\n use rustc_span::symbol::Symbol;\n-use rustc_span::with_default_session_globals;\n \n use super::format::Buffer;\n \n@@ -238,28 +237,26 @@ impl<'a> Classifier<'a> {\n     /// possibly giving it an HTML span with a class specifying what flavor of\n     /// token is used.\n     fn highlight(mut self, sink: &mut dyn FnMut(Highlight<'a>)) {\n-        with_default_session_globals(|| {\n-            loop {\n-                if self\n-                    .tokens\n-                    .peek()\n-                    .map(|t| matches!(t.0, TokenKind::Colon | TokenKind::Ident))\n-                    .unwrap_or(false)\n-                {\n-                    let tokens = self.get_full_ident_path();\n-                    for (token, start, end) in tokens {\n-                        let text = &self.src[start..end];\n-                        self.advance(token, text, sink);\n-                        self.byte_pos += text.len() as u32;\n-                    }\n-                }\n-                if let Some((token, text)) = self.next() {\n+        loop {\n+            if self\n+                .tokens\n+                .peek()\n+                .map(|t| matches!(t.0, TokenKind::Colon | TokenKind::Ident))\n+                .unwrap_or(false)\n+            {\n+                let tokens = self.get_full_ident_path();\n+                for (token, start, end) in tokens {\n+                    let text = &self.src[start..end];\n                     self.advance(token, text, sink);\n-                } else {\n-                    break;\n+                    self.byte_pos += text.len() as u32;\n                 }\n             }\n-        })\n+            if let Some((token, text)) = self.next() {\n+                self.advance(token, text, sink);\n+            } else {\n+                break;\n+            }\n+        }\n     }\n \n     /// Single step of highlighting. This will classify `token`, but maybe also"}, {"sha": "a0da2c963d167312314911e4aed238f1fff62a42", "filename": "src/librustdoc/html/highlight/tests.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ftests.rs?ref=3c5da6e6b9b0b3a7969036732ba45cd307d2cf93", "patch": "@@ -2,6 +2,7 @@ use super::write_code;\n use crate::html::format::Buffer;\n use expect_test::expect_file;\n use rustc_span::edition::Edition;\n+use rustc_span::with_default_session_globals;\n \n const STYLE: &str = r#\"\n <style>\n@@ -17,21 +18,25 @@ const STYLE: &str = r#\"\n \n #[test]\n fn test_html_highlighting() {\n-    let src = include_str!(\"fixtures/sample.rs\");\n-    let html = {\n-        let mut out = Buffer::new();\n-        write_code(&mut out, src, Edition::Edition2018);\n-        format!(\"{}<pre><code>{}</code></pre>\\n\", STYLE, out.into_inner())\n-    };\n-    expect_file![\"fixtures/sample.html\"].assert_eq(&html);\n+    with_default_session_globals(|| {\n+        let src = include_str!(\"fixtures/sample.rs\");\n+        let html = {\n+            let mut out = Buffer::new();\n+            write_code(&mut out, src, Edition::Edition2018);\n+            format!(\"{}<pre><code>{}</code></pre>\\n\", STYLE, out.into_inner())\n+        };\n+        expect_file![\"fixtures/sample.html\"].assert_eq(&html);\n+    });\n }\n \n #[test]\n fn test_dos_backline() {\n-    let src = \"pub fn foo() {\\r\\n\\\n+    with_default_session_globals(|| {\n+        let src = \"pub fn foo() {\\r\\n\\\n     println!(\\\"foo\\\");\\r\\n\\\n }\\r\\n\";\n-    let mut html = Buffer::new();\n-    write_code(&mut html, src, Edition::Edition2018);\n-    expect_file![\"fixtures/dos_line.html\"].assert_eq(&html.into_inner());\n+        let mut html = Buffer::new();\n+        write_code(&mut html, src, Edition::Edition2018);\n+        expect_file![\"fixtures/dos_line.html\"].assert_eq(&html.into_inner());\n+    });\n }"}]}