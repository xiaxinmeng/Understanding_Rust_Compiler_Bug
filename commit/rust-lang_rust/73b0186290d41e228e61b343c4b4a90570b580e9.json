{"sha": "73b0186290d41e228e61b343c4b4a90570b580e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYjAxODYyOTBkNDFlMjI4ZTYxYjM0M2M0YjRhOTA1NzBiNTgwZTk=", "commit": {"author": {"name": "Timoth\u00e9e Ravier", "email": "tim@siosm.fr", "date": "2014-04-04T00:55:06Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-04T20:22:57Z"}, "message": "Fix inner attribute syntax from `#[foo];` to `#![foo]`\n\nFrom the 0.10 changelog:\n * The inner attribute syntax has changed from `#[foo];` to `#![foo]`.", "tree": {"sha": "d46a9e775bc4ca657c6f547bcd7dd1436ae45d9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d46a9e775bc4ca657c6f547bcd7dd1436ae45d9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73b0186290d41e228e61b343c4b4a90570b580e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73b0186290d41e228e61b343c4b4a90570b580e9", "html_url": "https://github.com/rust-lang/rust/commit/73b0186290d41e228e61b343c4b4a90570b580e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73b0186290d41e228e61b343c4b4a90570b580e9/comments", "author": {"login": "travier", "id": 64795720, "node_id": "MDQ6VXNlcjY0Nzk1NzIw", "avatar_url": "https://avatars.githubusercontent.com/u/64795720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/travier", "html_url": "https://github.com/travier", "followers_url": "https://api.github.com/users/travier/followers", "following_url": "https://api.github.com/users/travier/following{/other_user}", "gists_url": "https://api.github.com/users/travier/gists{/gist_id}", "starred_url": "https://api.github.com/users/travier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/travier/subscriptions", "organizations_url": "https://api.github.com/users/travier/orgs", "repos_url": "https://api.github.com/users/travier/repos", "events_url": "https://api.github.com/users/travier/events{/privacy}", "received_events_url": "https://api.github.com/users/travier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba9c51d20fe258f385d3a3334613955c8ce20af0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba9c51d20fe258f385d3a3334613955c8ce20af0", "html_url": "https://github.com/rust-lang/rust/commit/ba9c51d20fe258f385d3a3334613955c8ce20af0"}], "stats": {"total": 162, "additions": 81, "deletions": 81}, "files": [{"sha": "47b629ac4d0908da7ff623185e5d415d926a8c20", "filename": "src/doc/guide-unsafe.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fdoc%2Fguide-unsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fdoc%2Fguide-unsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-unsafe.md?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -294,7 +294,7 @@ asm!(assembly template\n    );\n ```\n \n-Any use of `asm` is feature gated (requires `#[feature(asm)];` on the\n+Any use of `asm` is feature gated (requires `#![feature(asm)]` on the\n crate to allow) and of course requires an `unsafe` block.\n \n > **Note**: the examples here are given in x86/x86-64 assembly, but all\n@@ -306,7 +306,7 @@ The `assembly template` is the only required parameter and must be a\n literal string (i.e `\"\"`)\n \n ```\n-#[feature(asm)];\n+#![feature(asm)]\n \n #[cfg(target_arch = \"x86\")]\n #[cfg(target_arch = \"x86_64\")]\n@@ -334,7 +334,7 @@ Output operands, input operands, clobbers and options are all optional\n but you must add the right number of `:` if you skip them:\n \n ```\n-# #[feature(asm)];\n+# #![feature(asm)]\n # #[cfg(target_arch = \"x86\")] #[cfg(target_arch = \"x86_64\")]\n # fn main() { unsafe {\n asm!(\"xor %eax, %eax\"\n@@ -348,7 +348,7 @@ asm!(\"xor %eax, %eax\"\n Whitespace also doesn't matter:\n \n ```\n-# #[feature(asm)];\n+# #![feature(asm)]\n # #[cfg(target_arch = \"x86\")] #[cfg(target_arch = \"x86_64\")]\n # fn main() { unsafe {\n asm!(\"xor %eax, %eax\" ::: \"eax\");\n@@ -362,7 +362,7 @@ Input and output operands follow the same format: `:\n expressions must be mutable lvalues:\n \n ```\n-# #[feature(asm)];\n+# #![feature(asm)]\n # #[cfg(target_arch = \"x86\")] #[cfg(target_arch = \"x86_64\")]\n fn add(a: int, b: int) -> int {\n     let mut c = 0;\n@@ -390,7 +390,7 @@ compiler not to assume any values loaded into those registers will\n stay valid.\n \n ```\n-# #[feature(asm)];\n+# #![feature(asm)]\n # #[cfg(target_arch = \"x86\")] #[cfg(target_arch = \"x86_64\")]\n # fn main() { unsafe {\n // Put the value 0x200 in eax"}, {"sha": "de0164cc6b68fcc0abe19f8445fd4c94a13bc5db", "filename": "src/doc/po/ja/rust.md.po", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fdoc%2Fpo%2Fja%2Frust.md.po", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fdoc%2Fpo%2Fja%2Frust.md.po", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fpo%2Fja%2Frust.md.po?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,5 +1,5 @@\n # Japanese translations for Rust package\n-# Copyright (C) 2013 The Rust Project Developers\n+# Copyright (C) 2013-2014 The Rust Project Developers\n # This file is distributed under the same license as the Rust package.\n # Automatically generated, 2013.\n #\n@@ -886,7 +886,7 @@ msgstr \"\"\n #: src/doc/rust.md:2008\n #, fuzzy\n #| msgid \"~~~~ use std::task::spawn;\"\n-msgid \"~~~~ {.ignore} #[warn(unstable)];\"\n+msgid \"~~~~ {.ignore} #![warn(unstable)]\"\n msgstr \"\"\n \"~~~~\\n\"\n \"use std::task::spawn;\""}, {"sha": "68423b416f645d7a73a7776894a396b67655120f", "filename": "src/etc/combine-tests.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -54,7 +54,7 @@ def scrub(b):\n #[crate_id=\\\"run_pass_stage2#0.1\\\"];\n #[crate_id=\\\"run_pass_stage2#0.1\\\"];\n #[feature(globs, macro_rules, struct_variant, managed_boxes)];\n-#[allow(warnings)];\n+#![allow(warnings)]\n extern crate collections;\n \"\"\"\n )"}, {"sha": "0656dd1f641633abde9c26befe165d5f26d4e01e", "filename": "src/liblog/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fliblog%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fliblog%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Flib.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -15,7 +15,7 @@ Utilities for program-wide and customizable logging\n ## Example\n \n ```\n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)] extern crate log;\n \n fn main() {"}, {"sha": "f1d4a318bf080ff1bfd0a4b2babbcc939a00a520", "filename": "src/liblog/macros.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fliblog%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Fliblog%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Fmacros.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -21,7 +21,7 @@\n /// # Example\n ///\n /// ```\n-/// #[feature(phase)];\n+/// #![feature(phase)]\n /// #[phase(syntax, link)] extern crate log;\n ///\n /// # fn main() {\n@@ -45,7 +45,7 @@ macro_rules! log(\n /// # Example\n ///\n /// ```\n-/// #[feature(phase)];\n+/// #![feature(phase)]\n /// #[phase(syntax, link)] extern crate log;\n ///\n /// # fn main() {\n@@ -63,7 +63,7 @@ macro_rules! error(\n /// # Example\n ///\n /// ```\n-/// #[feature(phase)];\n+/// #![feature(phase)]\n /// #[phase(syntax, link)] extern crate log;\n ///\n /// # fn main() {\n@@ -81,7 +81,7 @@ macro_rules! warn(\n /// # Example\n ///\n /// ```\n-/// #[feature(phase)];\n+/// #![feature(phase)]\n /// #[phase(syntax, link)] extern crate log;\n ///\n /// # fn main() {\n@@ -101,7 +101,7 @@ macro_rules! info(\n /// # Example\n ///\n /// ```\n-/// #[feature(phase)];\n+/// #![feature(phase)]\n /// #[phase(syntax, link)] extern crate log;\n ///\n /// # fn main() {\n@@ -118,7 +118,7 @@ macro_rules! debug(\n /// # Example\n ///\n /// ```\n-/// #[feature(phase)];\n+/// #![feature(phase)]\n /// #[phase(syntax, link)] extern crate log;\n ///\n /// # fn main() {"}, {"sha": "4530fa4bc256d60f2f6ea4d989ba4f03b4e814f3", "filename": "src/test/auxiliary/issue_2316_b.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #[allow(unused_imports)];\n-#[feature(globs)];\n+#![feature(globs)]\n \n extern crate issue_2316_a;\n "}, {"sha": "b0a6e0f84fcd59c18365037ee4f6d563176b2d7b", "filename": "src/test/auxiliary/logging_right_crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)] extern crate log;\n \n pub fn foo<T>() {"}, {"sha": "210a47d2d039c0fc5f412f01f2e3877e6f6cce5a", "filename": "src/test/compile-fail/import-glob-0.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,7 +10,7 @@\n \n // error-pattern: unresolved name\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n use module_of_many_things::*;\n "}, {"sha": "39b18e1c445a222ed6450a68c08a34c6941f242b", "filename": "src/test/compile-fail/import-glob-circular.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fimport-glob-circular.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fimport-glob-circular.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-circular.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,7 +10,7 @@\n \n // error-pattern: unresolved\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n mod circ1 {\n     pub use circ2::f2;"}, {"sha": "b5c0157cb5e29ed3604b141f14fb827561e504e1", "filename": "src/test/compile-fail/name-clash-nullary.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n // error-pattern:declaration of `None` shadows\n use std::option::*;"}, {"sha": "365a2fbe287cf011ade8cef796005d0a305d721b", "filename": "src/test/compile-fail/qquote-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-test Can't use syntax crate here\n \n-#[feature(quote)];\n+#![feature(quote)]\n \n extern crate syntax;\n "}, {"sha": "f202f1bb73c42ef5b85bb13c16137b7a42aaf9a8", "filename": "src/test/compile-fail/qquote-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-test Can't use syntax crate here\n \n-#[feature(quote)];\n+#![feature(quote)]\n \n extern crate syntax;\n "}, {"sha": "91d53339648b01170ccdb052553ebc337958eda0", "filename": "src/test/debug-info/simd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fdebug-info%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fdebug-info%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fsimd.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -40,7 +40,7 @@\n \n // debugger:continue\n \n-#[allow(experimental)];\n+#![allow(experimental)]\n #[allow(unused_variable)];\n \n use std::unstable::simd::{i8x16, i16x8,i32x4,i64x2,u8x16,u16x8,u32x4,u64x2,f32x4,f64x2};"}, {"sha": "b76591048ce69a39d4b6f8cf00e50927356da51c", "filename": "src/test/pretty/raw-str-nonexpr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -11,7 +11,7 @@\n // ignore-fast #[feature] doesn't work with check-fast\n // pp-exact\n \n-#[feature(asm)];\n+#![feature(asm)]\n \n #[cfg = r#\"just parse this\"#]\n extern crate blah = r##\"blah\"##;"}, {"sha": "a67ab3d2efc2175d53707365a72d9650397794ee", "filename": "src/test/run-fail/glob-use-std.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-fail%2Fglob-use-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-fail%2Fglob-use-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fglob-use-std.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -11,7 +11,7 @@\n // Issue #7580\n \n // error-pattern:fail works\n-#[feature(globs)];\n+#![feature(globs)]\n \n use std::*;\n "}, {"sha": "385bc1452048704772a66b97f6978fa61e08c6ec", "filename": "src/test/run-fail/rt-set-exit-status-fail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,7 +10,7 @@\n \n // error-pattern:whatever\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)] extern crate log;\n use std::os;\n "}, {"sha": "3b5e27027b43c96b12814faf17299fb909865c88", "filename": "src/test/run-fail/rt-set-exit-status-fail2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,7 +10,7 @@\n \n // error-pattern:whatever\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)] extern crate log;\n use std::os;\n use std::task;"}, {"sha": "b94045e5d124225d42ad181bd4aa17cccdae23d4", "filename": "src/test/run-fail/rt-set-exit-status.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,7 +10,7 @@\n \n // error-pattern:whatever\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)] extern crate log;\n use std::os;\n "}, {"sha": "cde78da3f61bcdd9220c184016ff4de02ab78555", "filename": "src/test/run-pass-fulldeps/macro-crate-outlive-expansion-phase.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -14,7 +14,7 @@\n // ignore-android\n // ignore-cross-compile #12102\n \n-#[feature(phase)];\n+#![feature(phase)]\n \n #[phase(syntax)]\n extern crate macro_crate_outlive_expansion_phase;"}, {"sha": "e30498bb3c1d4f90ca434b4c559af3ce3300e496", "filename": "src/test/run-pass-fulldeps/macro-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -14,7 +14,7 @@\n // ignore-android\n // ignore-cross-compile #12102\n \n-#[feature(phase)];\n+#![feature(phase)]\n \n #[phase(syntax)]\n extern crate macro_crate_test;"}, {"sha": "ff82ff62a59ee75fd3d44fe90387de665b588574", "filename": "src/test/run-pass-fulldeps/phase-syntax-link-does-resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fphase-syntax-link-does-resolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fphase-syntax-link-does-resolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fphase-syntax-link-does-resolve.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -24,7 +24,7 @@\n // can't run host binaries, and force-host to make this test build as the host\n // arch.\n \n-#[feature(phase)];\n+#![feature(phase)]\n \n #[phase(syntax, link)]\n extern crate macro_crate_test;"}, {"sha": "1def436b4de0184a40fe0672b92bb5e6d991ae72", "filename": "src/test/run-pass-fulldeps/qquote.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -11,7 +11,7 @@\n // ignore-pretty\n // ignore-test\n \n-#[feature(quote)];\n+#![feature(quote)]\n \n extern crate syntax;\n "}, {"sha": "5180ac68482f0f51146fd457ac14be11c55a5227", "filename": "src/test/run-pass-fulldeps/quote-tokens.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-test\n \n-#[feature(quote)];\n+#![feature(quote)]\n #[feature(managed_boxes)];\n \n extern crate syntax;"}, {"sha": "ea2ffb8dcf89a16061e67750d1889fb8bdb0425a", "filename": "src/test/run-pass-fulldeps/quote-unused-sp-no-warning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-fast\n // ignore-android\n-#[feature(quote)];\n+#![feature(quote)]\n #[deny(unused_variable)];\n \n extern crate syntax;"}, {"sha": "54687c03da59677da94200f6ef3929368878e7ee", "filename": "src/test/run-pass-fulldeps/syntax-extension-fourcc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -13,7 +13,7 @@\n // ignore-pretty\n // ignore-cross-compile\n \n-#[feature(phase)];\n+#![feature(phase)]\n \n #[phase(syntax)]\n extern crate fourcc;"}, {"sha": "eb25d82e5491bf7fbabd7466c1633820896d0561", "filename": "src/test/run-pass-fulldeps/syntax-extension-hexfloat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-hexfloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-hexfloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-hexfloat.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -13,7 +13,7 @@\n // ignore-cross-compile #12102\n // ignore-fast\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax)]\n extern crate hexfloat;\n "}, {"sha": "5615089dcdc618f5edc47362f9f4226ca00dae3f", "filename": "src/test/run-pass/asm-concat-src.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-fast #[feature] doesn't work with check-fast\n-#[feature(asm)];\n+#![feature(asm)]\n \n pub fn main() {\n     unsafe { asm!(concat!(\"\", \"\")) };"}, {"sha": "0b5502aa33079b4a248aa38dba5b76bbd52cfa95", "filename": "src/test/run-pass/asm-in-out-operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-fast #[feature] doesn't work with check-fast\n-#[feature(asm)];\n+#![feature(asm)]\n \n #[cfg(target_arch = \"x86\")]\n #[cfg(target_arch = \"x86_64\")]"}, {"sha": "de2630d1ca9a3a46c8063fb6dfc8be54d581a32d", "filename": "src/test/run-pass/asm-out-assign.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-fast #[feature] doesn't work with check-fast\n-#[feature(asm)];\n+#![feature(asm)]\n \n #[cfg(target_arch = \"x86\")]\n #[cfg(target_arch = \"x86_64\")]"}, {"sha": "10976c5c612cd7016bf1bcf225763fda03a43831", "filename": "src/test/run-pass/capturing-logging.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -12,7 +12,7 @@\n // ignore-android (FIXME #11419)\n // exec-env:RUST_LOG=info\n \n-#[feature(phase)];\n+#![feature(phase)]\n \n #[phase(syntax, link)]\n extern crate log;"}, {"sha": "460846ef31c111f89a4aec1ef3895dced73b2f1b", "filename": "src/test/run-pass/conditional-debug-macro-off.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -12,7 +12,7 @@\n // compile-flags: --cfg ndebug\n // exec-env:RUST_LOG=conditional-debug-macro-off=4\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)]\n extern crate log;\n "}, {"sha": "e4f037e4563ce978a07bb57ccd94658f3e475dd2", "filename": "src/test/run-pass/export-glob-imports-target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -15,7 +15,7 @@\n \n // Modified to not use export since it's going away. --pcw\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n mod foo {\n     use foo::bar::*;"}, {"sha": "7cdd932faf6fdd79712d97c1068ce389dfb6a8d5", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -11,7 +11,7 @@\n // ignore-fast: check-fast screws up repr paths\n \n #[feature(macro_rules)];\n-#[deny(warnings)];\n+#![deny(warnings)]\n #[allow(unused_must_use)];\n #[allow(deprecated_owned_vector)];\n "}, {"sha": "5f4bf557b23f6e81b1200068abecdfa57aa7f754", "filename": "src/test/run-pass/import-glob-0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n use module_of_many_things::*;\n use dug::too::greedily::and::too::deep::*;"}, {"sha": "e1ca890f4fde741664f0b86a480d4049b54606ce", "filename": "src/test/run-pass/import-glob-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(globs)];\n+#![feature(globs)]\n #[allow(dead_assignment)];\n \n use std::mem::*;"}, {"sha": "24196c225719a113887d410990dad2b80e0a1b4f", "filename": "src/test/run-pass/import-in-block.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fimport-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fimport-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-in-block.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n pub fn main() {\n     use std::mem::replace;"}, {"sha": "867e12d4139ed68c3b404d1c41c31a2b3b21da3c", "filename": "src/test/run-pass/intrinsics-integer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n mod rusti {\n     extern \"rust-intrinsic\" {"}, {"sha": "00323b606495d92b06f474d01ef29e6beb92a0cf", "filename": "src/test/run-pass/issue-2526-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -11,7 +11,7 @@\n // ignore-fast\n // aux-build:issue-2526.rs\n \n-#[feature(globs)];\n+#![feature(globs)]\n #[allow(unused_imports)];\n \n extern crate issue_2526;"}, {"sha": "ae5a86c699eafa1dfaf04cd1b29e7b9f02e81c68", "filename": "src/test/run-pass/item-attributes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fitem-attributes.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -160,7 +160,7 @@ mod test_foreign_items {\n         use std::libc;\n \n         extern {\n-            #[attr];\n+            #![attr]\n \n             #[attr]\n             fn rust_get_test_int() -> libc::intptr_t;"}, {"sha": "4b2c98614931fd92b9e9885255ceec70181d3ed4", "filename": "src/test/run-pass/linkage1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage1.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -14,7 +14,7 @@\n // ignore-macos\n // aux-build:linkage1.rs\n \n-#[feature(linkage)];\n+#![feature(linkage)]\n \n extern crate other = \"linkage1\";\n "}, {"sha": "f5db1c7b1d6e7467943eaf1355eb7b0d0e70e97f", "filename": "src/test/run-pass/logging-enabled-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -12,7 +12,7 @@\n // compile-flags:--cfg ndebug\n // exec-env:RUST_LOG=logging-enabled-debug=debug\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)]\n extern crate log;\n "}, {"sha": "31437586897bb43f4cc323bfdb571bf22b006ab2", "filename": "src/test/run-pass/logging-enabled.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -11,7 +11,7 @@\n // ignore-fast\n // exec-env:RUST_LOG=logging-enabled=info\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)]\n extern crate log;\n "}, {"sha": "75b001a71d2b6157acefad16c8bdbef3aaacee69", "filename": "src/test/run-pass/macro-crate-def-only.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -11,7 +11,7 @@\n // aux-build:macro_crate_def_only.rs\n // ignore-fast\n \n-#[feature(phase)];\n+#![feature(phase)]\n \n #[phase(syntax)]\n extern crate macro_crate_def_only;"}, {"sha": "d77b360336c96251820ab167c85705b8bb13ad51", "filename": "src/test/run-pass/macro-export-inner-module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -12,7 +12,7 @@\n //ignore-stage1\n //ignore-fast\n \n-#[feature(phase)];\n+#![feature(phase)]\n \n #[phase(syntax)]\n extern crate macro_export_inner_module;"}, {"sha": "00861bd9b21d580b2c4d6e68a92b7466d31c2f88", "filename": "src/test/run-pass/out-of-stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fout-of-stack.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-fast\n \n-#[feature(asm)];\n+#![feature(asm)]\n \n use std::io::Process;\n use std::os;"}, {"sha": "008a04eaa4949b9d9994bce8106e123c931459c9", "filename": "src/test/run-pass/phase-use-ignored.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-fast\n \n-#[feature(phase)];\n+#![feature(phase)]\n \n #[phase(syntax)]\n use std::mem;"}, {"sha": "bc7df6bb599af5d9e4d7048dce9f201b329a5c8f", "filename": "src/test/run-pass/privacy-ns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -13,7 +13,7 @@\n // Check we do the correct privacy checks when we import a name and there is an\n // item with that name in both the value and type namespaces.\n \n-#[feature(globs)];\n+#![feature(globs)]\n #[allow(dead_code)];\n #[allow(unused_imports)];\n "}, {"sha": "3b7696b548aaf5e4cadbd51c48cb0332fc5fead1", "filename": "src/test/run-pass/reexport-star.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Freexport-star.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Freexport-star.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexport-star.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n // FIXME #3654\n "}, {"sha": "0c2744f68387db2597521e1b8aa41368d554dffb", "filename": "src/test/run-pass/simd-binop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fsimd-binop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fsimd-binop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-binop.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[allow(experimental)];\n+#![allow(experimental)]\n \n use std::unstable::simd::{i32x4, f32x4, u32x4};\n "}, {"sha": "75062a462247b3c3a5971b18d3efff30a642ef1d", "filename": "src/test/run-pass/simd-generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fsimd-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fsimd-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-generics.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-fast\n \n-#[feature(simd)];\n+#![feature(simd)]\n \n use std::ops;\n "}, {"sha": "4e3c3afc5ad8ae45910016b01d788e6771dfb80d", "filename": "src/test/run-pass/simd-issue-10604.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fsimd-issue-10604.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fsimd-issue-10604.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-issue-10604.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,8 +10,8 @@\n \n // ignore-fast\n \n-#[allow(experimental)];\n-#[feature(simd)];\n+#![allow(experimental)]\n+#![feature(simd)]\n \n pub fn main() {\n     let _o = None::<std::unstable::simd::i32x4>;"}, {"sha": "c79f285e486af3336c8440113f7060b44e9140b3", "filename": "src/test/run-pass/simd-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fsimd-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fsimd-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-type.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-fast feature doesn't work\n \n-#[feature(simd)];\n+#![feature(simd)]\n \n #[simd]\n struct RGBA {"}, {"sha": "bc749b5d905e4e6829daed622fc1e104a8ec77aa", "filename": "src/test/run-pass/tag-exports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Ftag-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Ftag-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-exports.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -10,7 +10,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(globs)];\n+#![feature(globs)]\n \n use alder::*;\n "}, {"sha": "d18e2ac7354344c42e01e253a7b8428828c6be62", "filename": "src/test/run-pass/tcp-stress.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftcp-stress.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -13,7 +13,7 @@\n // ignore-android needs extra network permissions\n // exec-env:RUST_LOG=debug\n \n-#[feature(phase)];\n+#![feature(phase)]\n #[phase(syntax, link)]\n extern crate log;\n "}, {"sha": "9b0a23401565631654d9316a537330c38c0320b1", "filename": "src/test/run-pass/warn-ctypes-inhibit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b0186290d41e228e61b343c4b4a90570b580e9/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs?ref=73b0186290d41e228e61b343c4b4a90570b580e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,7 +10,7 @@\n \n // compile-flags:-D ctypes\n \n-#[allow(ctypes)];\n+#![allow(ctypes)]\n \n mod libc {\n     extern {"}]}