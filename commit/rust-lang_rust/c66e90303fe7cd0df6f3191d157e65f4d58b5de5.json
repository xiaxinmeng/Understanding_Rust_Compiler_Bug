{"sha": "c66e90303fe7cd0df6f3191d157e65f4d58b5de5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NmU5MDMwM2ZlN2NkMGRmNmYzMTkxZDE1N2U2NWY0ZDU4YjVkZTU=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-04-24T11:48:53Z"}, "committer": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-04-24T11:48:53Z"}, "message": "Merge pull request #875 from Manishearth/fx-doc\n\nImprove new_without_default docs", "tree": {"sha": "597a65c4fab01262ce1cb3e866b49f6b72406ef9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/597a65c4fab01262ce1cb3e866b49f6b72406ef9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c66e90303fe7cd0df6f3191d157e65f4d58b5de5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c66e90303fe7cd0df6f3191d157e65f4d58b5de5", "html_url": "https://github.com/rust-lang/rust/commit/c66e90303fe7cd0df6f3191d157e65f4d58b5de5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c66e90303fe7cd0df6f3191d157e65f4d58b5de5/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "865191026ec2ec1b22cc61fea2319be12293a98b", "url": "https://api.github.com/repos/rust-lang/rust/commits/865191026ec2ec1b22cc61fea2319be12293a98b", "html_url": "https://github.com/rust-lang/rust/commit/865191026ec2ec1b22cc61fea2319be12293a98b"}, {"sha": "c3d75ad80d949be1cdb7c5a6c20d9134df677070", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3d75ad80d949be1cdb7c5a6c20d9134df677070", "html_url": "https://github.com/rust-lang/rust/commit/c3d75ad80d949be1cdb7c5a6c20d9134df677070"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "46021ec883678909c7fb56f3233c8cab7909333d", "filename": "src/new_without_default.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c66e90303fe7cd0df6f3191d157e65f4d58b5de5/src%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c66e90303fe7cd0df6f3191d157e65f4d58b5de5/src%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnew_without_default.rs?ref=c66e90303fe7cd0df6f3191d157e65f4d58b5de5", "patch": "@@ -6,10 +6,13 @@ use syntax::codemap::Span;\n use utils::paths;\n use utils::{get_trait_def_id, implements_trait, in_external_macro, return_ty, same_tys, span_lint};\n \n-/// **What it does:** This lints about type with a `fn new() -> Self` method and no `Default`\n-/// implementation.\n+/// **What it does:** This lints about type with a `fn new() -> Self` method\n+/// and no implementation of\n+/// [`Default`](https://doc.rust-lang.org/std/default/trait.Default.html)\n ///\n-/// **Why is this bad?** User might expect to be able to use `Default` as the type can be\n+/// **Why is this bad?** User might expect to be able to use\n+/// [`Default`](https://doc.rust-lang.org/std/default/trait.Default.html)\n+/// as the type can be\n /// constructed without arguments.\n ///\n /// **Known problems:** Hopefully none.\n@@ -25,6 +28,21 @@ use utils::{get_trait_def_id, implements_trait, in_external_macro, return_ty, sa\n ///     }\n /// }\n /// ```\n+///\n+/// Instead, use:\n+///\n+/// ```rust\n+/// struct Foo;\n+///\n+/// impl Default for Foo {\n+///     fn default() -> Self {\n+///         Foo\n+///     }\n+/// }\n+/// ```\n+///\n+/// You can also have `new()` call `Default::default()`\n+///\n declare_lint! {\n     pub NEW_WITHOUT_DEFAULT,\n     Warn,"}]}