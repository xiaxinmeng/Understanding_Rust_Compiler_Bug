{"sha": "78de7f0d4a53e92c343b0c12889b423f1f9bd433", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZGU3ZjBkNGE1M2U5MmMzNDNiMGMxMjg4OWI0MjNmMWY5YmQ0MzM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-10T15:30:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-10T15:30:49Z"}, "message": "Remove debug print", "tree": {"sha": "87d88e58657a266ad19ef28cefb82fd121010d34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87d88e58657a266ad19ef28cefb82fd121010d34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78de7f0d4a53e92c343b0c12889b423f1f9bd433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78de7f0d4a53e92c343b0c12889b423f1f9bd433", "html_url": "https://github.com/rust-lang/rust/commit/78de7f0d4a53e92c343b0c12889b423f1f9bd433", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78de7f0d4a53e92c343b0c12889b423f1f9bd433/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6c8098113505009453b12c8b461dd905f299c05", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c8098113505009453b12c8b461dd905f299c05", "html_url": "https://github.com/rust-lang/rust/commit/a6c8098113505009453b12c8b461dd905f299c05"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "2b0924ae5a6dae020988c38e80ca21ad2f4d3bae", "filename": "crates/completion/src/completions/unqualified_path.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/78de7f0d4a53e92c343b0c12889b423f1f9bd433/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78de7f0d4a53e92c343b0c12889b423f1f9bd433/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs?ref=78de7f0d4a53e92c343b0c12889b423f1f9bd433", "patch": "@@ -145,13 +145,11 @@ fn fuzzy_completion(acc: &mut Completions, ctx: &CompletionContext) -> Option<()\n     })\n     .filter(|(mod_path, _)| mod_path.len() > 1)\n     .filter_map(|(import_path, definition)| {\n-        let ie =\n-            ImportEdit { import_path: import_path.clone(), import_scope: import_scope.clone() };\n-        {\n-            let _p = profile::span(\"totextedit\");\n-            ie.to_text_edit(ctx.config.merge);\n-        }\n-        render_resolution_with_import(RenderContext::new(ctx), ie, &definition)\n+        render_resolution_with_import(\n+            RenderContext::new(ctx),\n+            ImportEdit { import_path: import_path.clone(), import_scope: import_scope.clone() },\n+            &definition,\n+        )\n     });\n \n     acc.add_all(possible_imports);"}]}