{"sha": "9fdaeb393a16951f6fdef087193fef576e36aba6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZGFlYjM5M2ExNjk1MWY2ZmRlZjA4NzE5M2ZlZjU3NmUzNmFiYTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-06T14:51:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-06T14:51:51Z"}, "message": "Auto merge of #76356 - caass:hooks, r=jyn514\n\nAdd a command to install a git hook to automatically run `x.py test tidy --bless`\n\nSome folks (such as myself) would probably find a lot of convenience in a pre-commit hook that automatically runs tidy before committing, to avoid burning CI time learning that your commit wasn't tidy.\n\nI'm absolutely positive I have missed some stuff. I basically just got this to where you can run `./x.py run install-git-hook` and then clicked the commit button. Please let me know what else you'd like me to add before this can be merged!\n\n[rustc-dev-guide companion PR](https://github.com/rust-lang/rustc-dev-guide/pull/848)", "tree": {"sha": "64d4bc18709a56c9aa4127bbf52a9a9e2c8017fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64d4bc18709a56c9aa4127bbf52a9a9e2c8017fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fdaeb393a16951f6fdef087193fef576e36aba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fdaeb393a16951f6fdef087193fef576e36aba6", "html_url": "https://github.com/rust-lang/rust/commit/9fdaeb393a16951f6fdef087193fef576e36aba6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fdaeb393a16951f6fdef087193fef576e36aba6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08e2d4616613716362b4b49980ff303f2b9ae654", "url": "https://api.github.com/repos/rust-lang/rust/commits/08e2d4616613716362b4b49980ff303f2b9ae654", "html_url": "https://github.com/rust-lang/rust/commit/08e2d4616613716362b4b49980ff303f2b9ae654"}, {"sha": "0845627f73faa2322bc24421cf3dd1f5dd3005df", "url": "https://api.github.com/repos/rust-lang/rust/commits/0845627f73faa2322bc24421cf3dd1f5dd3005df", "html_url": "https://github.com/rust-lang/rust/commit/0845627f73faa2322bc24421cf3dd1f5dd3005df"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "4bc162abee6c11e26faadc741ae8f982d07c9caf", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fdaeb393a16951f6fdef087193fef576e36aba6/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdaeb393a16951f6fdef087193fef576e36aba6/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=9fdaeb393a16951f6fdef087193fef576e36aba6", "patch": "@@ -477,7 +477,7 @@ impl<'a> Builder<'a> {\n                 install::Src,\n                 install::Rustc\n             ),\n-            Kind::Run => describe!(run::ExpandYamlAnchors, run::BuildManifest,),\n+            Kind::Run => describe!(run::ExpandYamlAnchors, run::BuildManifest),\n         }\n     }\n "}, {"sha": "24ec43373ccb57c1d6d55f3bb32db040e26d1fff", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/9fdaeb393a16951f6fdef087193fef576e36aba6/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdaeb393a16951f6fdef087193fef576e36aba6/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=9fdaeb393a16951f6fdef087193fef576e36aba6", "patch": "@@ -46,6 +46,12 @@ pub fn setup(src_path: &Path, include_name: &str) {\n         _ => return,\n     };\n \n+    println!();\n+\n+    t!(install_git_hook_maybe(src_path));\n+\n+    println!();\n+\n     println!(\"To get started, try one of the following commands:\");\n     for cmd in suggestions {\n         println!(\"- `x.py {}`\", cmd);\n@@ -86,3 +92,44 @@ d) Install Rust from source\"\n     };\n     Ok(template.to_owned())\n }\n+\n+// install a git hook to automatically run tidy --bless, if they want\n+fn install_git_hook_maybe(src_path: &Path) -> io::Result<()> {\n+    let mut input = String::new();\n+    println!(\n+        \"Rust's CI will automatically fail if it doesn't pass `tidy`, the internal tool for ensuring code quality.\n+If you'd like, x.py can install a git hook for you that will automatically run `tidy --bless` on each commit\n+to ensure your code is up to par. If you decide later that this behavior is undesirable,\n+simply delete the `pre-commit` file from .git/hooks.\"\n+    );\n+\n+    let should_install = loop {\n+        print!(\"Would you like to install the git hook?: [y/N] \");\n+        io::stdout().flush()?;\n+        input.clear();\n+        io::stdin().read_line(&mut input)?;\n+        break match input.trim().to_lowercase().as_str() {\n+            \"y\" | \"yes\" => true,\n+            \"n\" | \"no\" | \"\" => false,\n+            _ => {\n+                println!(\"error: unrecognized option '{}'\", input.trim());\n+                println!(\"note: press Ctrl+C to exit\");\n+                continue;\n+            }\n+        };\n+    };\n+\n+    Ok(if should_install {\n+        let src = src_path.join(\"src\").join(\"etc\").join(\"pre-commit.sh\");\n+        let dst = src_path.join(\".git\").join(\"hooks\").join(\"pre-commit\");\n+        match fs::hard_link(src, dst) {\n+            Err(e) => println!(\n+                \"x.py encountered an error -- do you already have the git hook installed?\\n{}\",\n+                e\n+            ),\n+            Ok(_) => println!(\"Linked `src/etc/pre-commit.sh` to `.git/hooks/pre-commit`\"),\n+        };\n+    } else {\n+        println!(\"Ok, skipping installation!\");\n+    })\n+}"}, {"sha": "5c5922a7e63ecafd514e3110b7d63442ac808378", "filename": "src/etc/pre-commit.sh", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9fdaeb393a16951f6fdef087193fef576e36aba6/src%2Fetc%2Fpre-commit.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9fdaeb393a16951f6fdef087193fef576e36aba6/src%2Fetc%2Fpre-commit.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fpre-commit.sh?ref=9fdaeb393a16951f6fdef087193fef576e36aba6", "patch": "@@ -0,0 +1,21 @@\n+#!/usr/bin/env bash\n+#\n+# Call `tidy --bless` before each commit\n+# Copy this scripts to .git/hooks to activate,\n+# and remove it from .git/hooks to deactivate.\n+#\n+\n+set -Eeuo pipefail\n+\n+ROOT_DIR=\"$(git rev-parse --show-toplevel)\";\n+COMMAND=\"$ROOT_DIR/x.py test tidy --bless\";\n+\n+if [[ \"$OSTYPE\" == \"msys\" || \"$OSTYPE\" == \"win32\" ]]; then\n+  COMMAND=\"python $COMMAND\"\n+fi\n+\n+echo \"Running pre-commit script '$COMMAND'\";\n+\n+cd \"$ROOT_DIR\"\n+\n+$COMMAND;"}]}