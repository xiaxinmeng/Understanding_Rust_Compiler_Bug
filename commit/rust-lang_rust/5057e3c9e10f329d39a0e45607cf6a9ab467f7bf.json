{"sha": "5057e3c9e10f329d39a0e45607cf6a9ab467f7bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNTdlM2M5ZTEwZjMyOWQzOWEwZTQ1NjA3Y2Y2YTlhYjQ2N2Y3YmY=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-31T05:13:02Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-31T05:13:02Z"}, "message": "Commit code for option size hint", "tree": {"sha": "46ef405610b764cdb616a60fa94f0344a2428c18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46ef405610b764cdb616a60fa94f0344a2428c18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5057e3c9e10f329d39a0e45607cf6a9ab467f7bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5057e3c9e10f329d39a0e45607cf6a9ab467f7bf", "html_url": "https://github.com/rust-lang/rust/commit/5057e3c9e10f329d39a0e45607cf6a9ab467f7bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5057e3c9e10f329d39a0e45607cf6a9ab467f7bf/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01af316867dd6477072e0feae2d7cead2229ebfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/01af316867dd6477072e0feae2d7cead2229ebfd", "html_url": "https://github.com/rust-lang/rust/commit/01af316867dd6477072e0feae2d7cead2229ebfd"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "61ef6798b2efb2062d5c874f531c86171a573c22", "filename": "src/libcore/option.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5057e3c9e10f329d39a0e45607cf6a9ab467f7bf/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5057e3c9e10f329d39a0e45607cf6a9ab467f7bf/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=5057e3c9e10f329d39a0e45607cf6a9ab467f7bf", "patch": "@@ -1191,7 +1191,12 @@ impl<A, V: FromIterator<A>> FromIterator<Option<A>> for Option<V> {\n \n             #[inline]\n             fn size_hint(&self) -> (usize, Option<usize>) {\n-                self.iter.size_hint()\n+                if self.found_none {\n+                    (0, Some(0))\n+                } else {\n+                    let (_, upper) = self.iter.size_hint();\n+                    (0, upper)\n+                }\n             }\n         }\n "}]}