{"sha": "baefba80b733f1676f141a033424ec0d257b09d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZWZiYTgwYjczM2YxNjc2ZjE0MWEwMzM0MjRlYzBkMjU3YjA5ZDk=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-25T16:31:22Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-25T16:32:08Z"}, "message": "Adjust pretty-print compat hack to work with item statements", "tree": {"sha": "1f6ca22ec78b28724a27c307972cad2e8946176e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f6ca22ec78b28724a27c307972cad2e8946176e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baefba80b733f1676f141a033424ec0d257b09d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl++hwkACgkQtAh+UQ6Y\nsWQCcg/5Acicw14KWoGFb1/RssN1WZfvWyw6prUk2/b45JMN24tOLEFM9gGtVE0K\nLUFKNsf2z6jKYij2wbXRWo2W+ocyh5HAD/KXanPrls5WShZkJsJi4TyyhJhfvRJ4\n93ElW59hZ0BG+eMHi6ulvr+GjlXw5BTXzb91/lZ16w70jAWcc9iCJxwxG/2Lv8D4\nmrv6Qgrd08vqt804oIgcYlfJPJAcqTXUmw+Gs1WRrFHesh7FnO6M8bEQasar9qRE\nUwLpEiMplzyYaJT6Yzoy82rA/c0FRmjxGuL7aZsTax1UrZbXgNCLGT+vVt9v8mDW\n6p4MdI3TBhAV6PJRxhDU09RszwY/xUGCzMibx2DDNXMLjI83cSo1Of/3Shnooo2f\nHHf8fAggakITClkIl5qkFnYsy+0yabSnRbGvVmWr4fFlG8TijD/zTYhYMSWyFWS/\nNWS7zUtZPPNvtOx8ItgxmxpiydLscPK9hNGHcansqjAKLqqZE02Cvx9JII6lOHu6\nAU9IL3nsy/JM3cgQUuznno9X5Q2Ss4BS2VQlDg4f6Pn0NU6iNEFsfbwMRFcetxIn\nyaP0vIRg4kdo7LfQ+UU5W78+NjEAxUbTKcylImpc7uupR0O+6AO435oEiiRCBhXh\nxEN5owNtkbDtX2dxIzJDghTT+4AOfyzPTwqYvXhFedE/ZxJrEPo=\n=p7/i\n-----END PGP SIGNATURE-----", "payload": "tree 1f6ca22ec78b28724a27c307972cad2e8946176e\nparent 9c9f40656dadf3c2a05b2d5add875f5d0d3541d8\nauthor Aaron Hill <aa1ronham@gmail.com> 1606321882 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1606321928 -0500\n\nAdjust pretty-print compat hack to work with item statements\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baefba80b733f1676f141a033424ec0d257b09d9", "html_url": "https://github.com/rust-lang/rust/commit/baefba80b733f1676f141a033424ec0d257b09d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baefba80b733f1676f141a033424ec0d257b09d9/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c9f40656dadf3c2a05b2d5add875f5d0d3541d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c9f40656dadf3c2a05b2d5add875f5d0d3541d8", "html_url": "https://github.com/rust-lang/rust/commit/9c9f40656dadf3c2a05b2d5add875f5d0d3541d8"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "f583825fbb3c5070aa4d38d3620de70bb3eadb5f", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/baefba80b733f1676f141a033424ec0d257b09d9/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baefba80b733f1676f141a033424ec0d257b09d9/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=baefba80b733f1676f141a033424ec0d257b09d9", "patch": "@@ -785,13 +785,20 @@ impl Nonterminal {\n     /// See issue #73345 for more details.\n     /// FIXME(#73933): Remove this eventually.\n     pub fn pretty_printing_compatibility_hack(&self) -> bool {\n-        if let NtItem(item) = self {\n-            let name = item.ident.name;\n-            if name == sym::ProceduralMasqueradeDummyType || name == sym::ProcMacroHack {\n-                if let ast::ItemKind::Enum(enum_def, _) = &item.kind {\n-                    if let [variant] = &*enum_def.variants {\n-                        return variant.ident.name == sym::Input;\n-                    }\n+        let item = match self {\n+            NtItem(item) => item,\n+            NtStmt(stmt) => match &stmt.kind {\n+                ast::StmtKind::Item(item) => item,\n+                _ => return false,\n+            },\n+            _ => return false,\n+        };\n+\n+        let name = item.ident.name;\n+        if name == sym::ProceduralMasqueradeDummyType || name == sym::ProcMacroHack {\n+            if let ast::ItemKind::Enum(enum_def, _) = &item.kind {\n+                if let [variant] = &*enum_def.variants {\n+                    return variant.ident.name == sym::Input;\n                 }\n             }\n         }"}]}