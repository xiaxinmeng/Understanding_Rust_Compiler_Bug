{"sha": "f907fbe1a6676a26cfc893b78f0fffb4285f1e6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MDdmYmUxYTY2NzZhMjZjZmM4OTNiNzhmMGZmZmI0Mjg1ZjFlNmM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-19T16:16:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-20T09:22:06Z"}, "message": "skip all refs-to-uninit-local, not just arguments", "tree": {"sha": "30075378463bff8c9bbe19dad61d7f2b5051e5a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30075378463bff8c9bbe19dad61d7f2b5051e5a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f907fbe1a6676a26cfc893b78f0fffb4285f1e6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f907fbe1a6676a26cfc893b78f0fffb4285f1e6c", "html_url": "https://github.com/rust-lang/rust/commit/f907fbe1a6676a26cfc893b78f0fffb4285f1e6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f907fbe1a6676a26cfc893b78f0fffb4285f1e6c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "282403e6bd0f858474c47fe2b9efd50645023c7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/282403e6bd0f858474c47fe2b9efd50645023c7c", "html_url": "https://github.com/rust-lang/rust/commit/282403e6bd0f858474c47fe2b9efd50645023c7c"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "780b49cd9db0d100751e6738733a54cc08d79feb", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f907fbe1a6676a26cfc893b78f0fffb4285f1e6c/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f907fbe1a6676a26cfc893b78f0fffb4285f1e6c/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=f907fbe1a6676a26cfc893b78f0fffb4285f1e6c", "patch": "@@ -523,18 +523,19 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             // local. There's nothing it can do here: taking a reference needs an allocation\n             // which needs to know the size. Normally that's okay as during execution\n             // (e.g. for CTFE) it can never happen. But here in const_prop\n-            // we leave function arguments uninitialized, so if one of these is unsized\n+            // unknown data is uninitialized, so if e.g. a function argument is unsized\n             // and has a reference taken, we get an ICE.\n             Rvalue::Ref(_, _, Place { base: PlaceBase::Local(local), projection: box [] }) => {\n                 trace!(\"checking Ref({:?})\", place);\n                 let alive =\n                     if let LocalValue::Live(_) = self.ecx.frame().locals[*local].value {\n                         true\n-                    } else { false };\n+                    } else {\n+                        false\n+                    };\n \n-                // local 0 is the return place; locals 1..=arg_count are the arguments.\n-                if local.as_usize() <= self.ecx.frame().body.arg_count && !alive {\n-                    trace!(\"skipping Ref({:?})\", place);\n+                if !alive {\n+                    trace!(\"skipping Ref({:?}) to uninitialized local\", place);\n                     return None;\n                 }\n             }"}]}