{"sha": "4c3a5a5da636f16ea0ada0a55960230760e4031c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjM2E1YTVkYTYzNmYxNmVhMGFkYTBhNTU5NjAyMzA3NjBlNDAzMWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-19T05:57:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-19T05:57:37Z"}, "message": "Rollup merge of #69969 - iximeow:sigstack-guard-page, r=cuviper\n\nunix: Set a guard page at the end of signal stacks\n\nThis mitigates possible issues when signal stacks overflow, which could\nmanifest as segfaults or in unlucky circumstances possible clobbering of\nother memory values as stack overflows tend to enable.\n\nI went ahead and made a PR for this because it's a pretty small change, though if I should open an issue/RFC for this and discuss there first I'll happily do so. I've also added some example programs that demonstrate the uncomfortably clobber-happy behavior we currently have, and the segfaults that could/should result instead, [here](https://github.com/iximeow/jubilant-train).", "tree": {"sha": "a764530065496a8b81abb2f36018dab8619b42e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a764530065496a8b81abb2f36018dab8619b42e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c3a5a5da636f16ea0ada0a55960230760e4031c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJecwnRCRBK7hj4Ov3rIwAAdHIIAA8fN5SeC1xFlu0sjMx4bC2u\nczPaPBErR7ZndfxHpqKSqxCFb6xOIV/CxcCIlV/8qufOVxshlDosPF1vPYWOEv7J\nw819kBML6Jwb1v+SxnfdbH6PQ6xzcT5XsoLX7U2Qz304xnFz3hzzcaL8CWYrUMWe\nYTOBh9fiQyC8Utr/wEIAqNONrxzMF7lUfe9vcZApq1iLx1y0z7IlZKRg7+Y3Ried\ncne1g7IspKAB/t9DovD8boQEyYJBc8TlWhaX2IgjiCUOVsAKFZYXMiWOfY1biPhX\nc+yIlHAjnsM9xHjQssxNwgHN26EyWXzWp05m+4d9zcmG2IVp4YzJ7k6erd/oUWk=\n=EH6/\n-----END PGP SIGNATURE-----\n", "payload": "tree a764530065496a8b81abb2f36018dab8619b42e5\nparent 73c3a496cc8ce261e87abbd998b36ab16dab4f4b\nparent 28eeea630faf1e7514da96c5eedd67e330fe8571\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1584597457 +0100\ncommitter GitHub <noreply@github.com> 1584597457 +0100\n\nRollup merge of #69969 - iximeow:sigstack-guard-page, r=cuviper\n\nunix: Set a guard page at the end of signal stacks\n\nThis mitigates possible issues when signal stacks overflow, which could\nmanifest as segfaults or in unlucky circumstances possible clobbering of\nother memory values as stack overflows tend to enable.\n\nI went ahead and made a PR for this because it's a pretty small change, though if I should open an issue/RFC for this and discuss there first I'll happily do so. I've also added some example programs that demonstrate the uncomfortably clobber-happy behavior we currently have, and the segfaults that could/should result instead, [here](https://github.com/iximeow/jubilant-train).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c3a5a5da636f16ea0ada0a55960230760e4031c", "html_url": "https://github.com/rust-lang/rust/commit/4c3a5a5da636f16ea0ada0a55960230760e4031c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c3a5a5da636f16ea0ada0a55960230760e4031c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73c3a496cc8ce261e87abbd998b36ab16dab4f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/73c3a496cc8ce261e87abbd998b36ab16dab4f4b", "html_url": "https://github.com/rust-lang/rust/commit/73c3a496cc8ce261e87abbd998b36ab16dab4f4b"}, {"sha": "28eeea630faf1e7514da96c5eedd67e330fe8571", "url": "https://api.github.com/repos/rust-lang/rust/commits/28eeea630faf1e7514da96c5eedd67e330fe8571", "html_url": "https://github.com/rust-lang/rust/commit/28eeea630faf1e7514da96c5eedd67e330fe8571"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "2626ca37cf8b866d326e9e8665d226356c2d2568", "filename": "src/libstd/sys/unix/stack_overflow.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4c3a5a5da636f16ea0ada0a55960230760e4031c/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3a5a5da636f16ea0ada0a55960230760e4031c/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs?ref=4c3a5a5da636f16ea0ada0a55960230760e4031c", "patch": "@@ -45,8 +45,9 @@ mod imp {\n     use libc::{mmap, munmap};\n     use libc::{sigaction, sighandler_t, SA_ONSTACK, SA_SIGINFO, SIGBUS, SIG_DFL};\n     use libc::{sigaltstack, SIGSTKSZ, SS_DISABLE};\n-    use libc::{MAP_ANON, MAP_PRIVATE, PROT_READ, PROT_WRITE, SIGSEGV};\n+    use libc::{MAP_ANON, MAP_PRIVATE, PROT_NONE, PROT_READ, PROT_WRITE, SIGSEGV};\n \n+    use crate::sys::unix::os::page_size;\n     use crate::sys_common::thread_info;\n \n     #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n@@ -137,12 +138,22 @@ mod imp {\n     }\n \n     unsafe fn get_stackp() -> *mut libc::c_void {\n-        let stackp =\n-            mmap(ptr::null_mut(), SIGSTKSZ, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);\n+        let stackp = mmap(\n+            ptr::null_mut(),\n+            SIGSTKSZ + page_size(),\n+            PROT_READ | PROT_WRITE,\n+            MAP_PRIVATE | MAP_ANON,\n+            -1,\n+            0,\n+        );\n         if stackp == MAP_FAILED {\n             panic!(\"failed to allocate an alternative stack\");\n         }\n-        stackp\n+        let guard_result = libc::mprotect(stackp, page_size(), PROT_NONE);\n+        if guard_result != 0 {\n+            panic!(\"failed to set up alternative stack guard page\");\n+        }\n+        stackp.add(page_size())\n     }\n \n     #[cfg(any(\n@@ -190,7 +201,9 @@ mod imp {\n                 ss_size: SIGSTKSZ,\n             };\n             sigaltstack(&stack, ptr::null_mut());\n-            munmap(handler._data, SIGSTKSZ);\n+            // We know from `get_stackp` that the alternate stack we installed is part of a mapping\n+            // that started one page earlier, so walk back a page and unmap from there.\n+            munmap(handler._data.sub(page_size()), SIGSTKSZ + page_size());\n         }\n     }\n }"}]}