{"sha": "e7f07cb2a377628922b337fdd08ca2dbbb14f2a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZjA3Y2IyYTM3NzYyODkyMmIzMzdmZGQwOGNhMmRiYmIxNGYyYTU=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-11-21T20:53:49Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-29T20:09:11Z"}, "message": "Update tests to respect the way that macros work now.", "tree": {"sha": "1e34a509b40f360a31fdecdcb0f5fd1133f691b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e34a509b40f360a31fdecdcb0f5fd1133f691b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5", "html_url": "https://github.com/rust-lang/rust/commit/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45bcb10204b3e2e04521a895c3f4216b5eb641ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/45bcb10204b3e2e04521a895c3f4216b5eb641ce", "html_url": "https://github.com/rust-lang/rust/commit/45bcb10204b3e2e04521a895c3f4216b5eb641ce"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "f342f5db140baa1db373d0974654af990c997bef", "filename": "src/test/run-pass/macro-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/src%2Ftest%2Frun-pass%2Fmacro-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/src%2Ftest%2Frun-pass%2Fmacro-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-2.rs?ref=e7f07cb2a377628922b337fdd08ca2dbbb14f2a5", "patch": "@@ -3,10 +3,10 @@\n fn main() {\n \n     macro_rules! mylambda_tt(\n-        ($x:ident, $body:expr) => {\n+        ($x:ident, $body:expr) => ({\n             fn f($x: int) -> int { return $body; };\n             f\n-        }\n+        })\n     )\n \n     assert(mylambda_tt!(y, y * 2)(8) == 16)"}, {"sha": "d5e5fe1b489b974b54585b42a40ef41818f1aded", "filename": "src/test/run-pass/macro-interpolation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/src%2Ftest%2Frun-pass%2Fmacro-interpolation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/src%2Ftest%2Frun-pass%2Fmacro-interpolation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-interpolation.rs?ref=e7f07cb2a377628922b337fdd08ca2dbbb14f2a5", "patch": "@@ -1,15 +1,15 @@\n \n macro_rules! overly_complicated (\n     ($fnname:ident, $arg:ident, $ty:ty, $body:block, $val:expr, $pat:pat, $res:path) =>\n-    {\n+    ({\n         fn $fnname($arg: $ty) -> Option<$ty> $body\n         match $fnname($val) {\n           Some($pat) => {\n             $res\n           }\n           _ => { fail; }\n         }\n-    }\n+    })\n \n )\n fn main() {"}, {"sha": "d54fef5c260de4ac4df9211c5410a63c411bb403", "filename": "src/test/run-pass/macro-path.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/src%2Ftest%2Frun-pass%2Fmacro-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/src%2Ftest%2Frun-pass%2Fmacro-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-path.rs?ref=e7f07cb2a377628922b337fdd08ca2dbbb14f2a5", "patch": "@@ -2,13 +2,11 @@ mod m {\n     pub type t = int;\n }\n \n-fn macros() {\n-    macro_rules! foo {\n-        ($p:path) => {\n-            fn f() -> $p { 10 }\n-            f()\n-        }\n-    }\n+macro_rules! foo {\n+    ($p:path) => ({\n+        fn f() -> $p { 10 };\n+        f()\n+    })\n }\n \n fn main() {"}, {"sha": "6b07f88a8a9671256162eec8f579b0c2ea8cd012", "filename": "src/test/run-pass/pipe-presentation-examples.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7f07cb2a377628922b337fdd08ca2dbbb14f2a5/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs?ref=e7f07cb2a377628922b337fdd08ca2dbbb14f2a5", "patch": "@@ -54,12 +54,12 @@ macro_rules! select (\n             $($message:path$(($($x: ident),+))dont_type_this*\n               -> $next:ident $e:expr),+\n         } )+\n-    } => {\n+    } => ({\n         let index = pipes::selecti([$(($port).header()),+]);\n         select_if!(index, 0, $( $port => [\n             $($message$(($($x),+))dont_type_this* -> $next $e),+\n         ], )+)\n-    }\n+    })\n )\n \n // Types and protocols"}]}