{"sha": "c0056c04f61a051e26dae2631c59637da815abbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMDU2YzA0ZjYxYTA1MWUyNmRhZTI2MzFjNTk2MzdkYTgxNWFiYmI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-03T14:59:05Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-06T10:08:23Z"}, "message": "legacy_ctor_visibility -> error", "tree": {"sha": "a09fbde8910e45b14abddec9e9441bd68a1b518e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a09fbde8910e45b14abddec9e9441bd68a1b518e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0056c04f61a051e26dae2631c59637da815abbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0056c04f61a051e26dae2631c59637da815abbb", "html_url": "https://github.com/rust-lang/rust/commit/c0056c04f61a051e26dae2631c59637da815abbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0056c04f61a051e26dae2631c59637da815abbb/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8b190ac4ad79e58d21ee1d573529ff74d8eedaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8b190ac4ad79e58d21ee1d573529ff74d8eedaa", "html_url": "https://github.com/rust-lang/rust/commit/e8b190ac4ad79e58d21ee1d573529ff74d8eedaa"}], "stats": {"total": 92, "additions": 13, "deletions": 79}, "files": [{"sha": "540543f98f3a0ac981bcfa53ea82491615f86929", "filename": "src/doc/rustc/src/lints/listing/deny-by-default.md", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c0056c04f61a051e26dae2631c59637da815abbb/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fdeny-by-default.md", "raw_url": "https://github.com/rust-lang/rust/raw/c0056c04f61a051e26dae2631c59637da815abbb/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fdeny-by-default.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fdeny-by-default.md?ref=c0056c04f61a051e26dae2631c59637da815abbb", "patch": "@@ -45,41 +45,6 @@ error: defaults for type parameters are only allowed in `struct`, `enum`, `type`\n   = note: for more information, see issue #36887 <https://github.com/rust-lang/rust/issues/36887>\n ```\n \n-## legacy-constructor-visibility\n-\n-[RFC 1506](https://github.com/rust-lang/rfcs/blob/master/text/1506-adt-kinds.md) modified some\n-visibility rules, and changed the visibility of struct constructors. Some\n-example code that triggers this lint:\n-\n-```rust,ignore\n-mod m {\n-    pub struct S(u8);\n-    \n-    fn f() {\n-        // this is trying to use S from the 'use' line, but because the `u8` is\n-        // not pub, it is private\n-        ::S;\n-    }\n-}\n-\n-use m::S;\n-```\n-\n-This will produce:\n-\n-```text\n-error: private struct constructors are not usable through re-exports in outer modules\n- --> src/main.rs:5:9\n-  |\n-5 |         ::S;\n-  |         ^^^\n-  |\n-  = note: `#[deny(legacy_constructor_visibility)]` on by default\n-  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-  = note: for more information, see issue #39207 <https://github.com/rust-lang/rust/issues/39207>\n-```\n-\n-\n ## legacy-directory-ownership\n \n The legacy_directory_ownership warning is issued when"}, {"sha": "4dd45f27aca4c0c9826f4ffed9e92bd3455be1cf", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c0056c04f61a051e26dae2631c59637da815abbb/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0056c04f61a051e26dae2631c59637da815abbb/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=c0056c04f61a051e26dae2631c59637da815abbb", "patch": "@@ -218,16 +218,6 @@ declare_lint! {\n      };\n }\n \n-declare_lint! {\n-    pub LEGACY_CONSTRUCTOR_VISIBILITY,\n-    Deny,\n-    \"detects use of struct constructors that would be invisible with new visibility rules\",\n-    @future_incompatible = FutureIncompatibleInfo {\n-        reference: \"issue #39207 <https://github.com/rust-lang/rust/issues/39207>\",\n-        edition: None,\n-    };\n-}\n-\n declare_lint! {\n     pub MISSING_FRAGMENT_SPECIFIER,\n     Deny,\n@@ -560,7 +550,6 @@ declare_lint_pass! {\n         SAFE_PACKED_BORROWS,\n         PATTERNS_IN_FNS_WITHOUT_BODY,\n         LEGACY_DIRECTORY_OWNERSHIP,\n-        LEGACY_CONSTRUCTOR_VISIBILITY,\n         MISSING_FRAGMENT_SPECIFIER,\n         PARENTHESIZED_PARAMS_IN_TYPES_AND_MODULES,\n         LATE_BOUND_LIFETIME_ARGUMENTS,"}, {"sha": "4636a3d65b7bc74394233c0478d616ff738d6c05", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0056c04f61a051e26dae2631c59637da815abbb/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0056c04f61a051e26dae2631c59637da815abbb/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=c0056c04f61a051e26dae2631c59637da815abbb", "patch": "@@ -334,6 +334,8 @@ fn register_builtins(store: &mut lint::LintStore, no_interleave_lints: bool) {\n         \"converted into hard error, see https://github.com/rust-lang/rust/issues/57742\");\n     store.register_removed(\"incoherent_fundamental_impls\",\n         \"converted into hard error, see https://github.com/rust-lang/rust/issues/46205\");\n+    store.register_removed(\"legacy_constructor_visibility\",\n+        \"converted into hard error, see https://github.com/rust-lang/rust/issues/39207\");\n }\n \n fn register_internals(store: &mut lint::LintStore) {"}, {"sha": "9c8425975119d29b0d35863d2dc8e5bd0f4f93e4", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c0056c04f61a051e26dae2631c59637da815abbb/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0056c04f61a051e26dae2631c59637da815abbb/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=c0056c04f61a051e26dae2631c59637da815abbb", "patch": "@@ -1539,25 +1539,7 @@ impl<'a, 'b> LateResolutionVisitor<'a, '_> {\n                 if is_expected(partial_res.base_res()) || partial_res.base_res() == Res::Err {\n                     partial_res\n                 } else {\n-                    // Add a temporary hack to smooth the transition to new struct ctor\n-                    // visibility rules. See #38932 for more details.\n-                    let mut res = None;\n-                    if let Res::Def(DefKind::Struct, def_id) = partial_res.base_res() {\n-                        if let Some((ctor_res, ctor_vis))\n-                                = self.r.struct_constructors.get(&def_id).cloned() {\n-                            if is_expected(ctor_res) &&\n-                               self.r.is_accessible_from(ctor_vis, self.parent_scope.module) {\n-                                let lint = lint::builtin::LEGACY_CONSTRUCTOR_VISIBILITY;\n-                                self.r.lint_buffer.buffer_lint(lint, id, span,\n-                                    \"private struct constructors are not usable through \\\n-                                     re-exports in outer modules\",\n-                                );\n-                                res = Some(PartialRes::new(ctor_res));\n-                            }\n-                        }\n-                    }\n-\n-                    res.unwrap_or_else(|| report_errors(self, Some(partial_res.base_res())))\n+                    report_errors(self, Some(partial_res.base_res()))\n                 }\n             }\n             Some(partial_res) if source.defer_to_typeck() => {"}, {"sha": "5732b6446fea8e1b43b0d3af268ac576a738c292", "filename": "src/test/ui/privacy/legacy-ctor-visibility.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c0056c04f61a051e26dae2631c59637da815abbb/src%2Ftest%2Fui%2Fprivacy%2Flegacy-ctor-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0056c04f61a051e26dae2631c59637da815abbb/src%2Ftest%2Fui%2Fprivacy%2Flegacy-ctor-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Flegacy-ctor-visibility.rs?ref=c0056c04f61a051e26dae2631c59637da815abbb", "patch": "@@ -1,7 +1,3 @@\n-// ignore-tidy-linelength\n-\n-#![allow(unused)]\n-\n use m::S;\n \n mod m {\n@@ -11,8 +7,7 @@ mod m {\n         use S;\n         fn f() {\n             S(10);\n-            //~^ ERROR private struct constructors are not usable through re-exports in outer modules\n-            //~| WARN this was previously accepted\n+            //~^ ERROR expected function, tuple struct or tuple variant, found struct `S`\n         }\n     }\n }"}, {"sha": "74a1f1ceeffb4c7c3474546dd89f2da2ea4c970d", "filename": "src/test/ui/privacy/legacy-ctor-visibility.stderr", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c0056c04f61a051e26dae2631c59637da815abbb/src%2Ftest%2Fui%2Fprivacy%2Flegacy-ctor-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0056c04f61a051e26dae2631c59637da815abbb/src%2Ftest%2Fui%2Fprivacy%2Flegacy-ctor-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Flegacy-ctor-visibility.stderr?ref=c0056c04f61a051e26dae2631c59637da815abbb", "patch": "@@ -1,12 +1,13 @@\n-error: private struct constructors are not usable through re-exports in outer modules\n-  --> $DIR/legacy-ctor-visibility.rs:13:13\n+error[E0423]: expected function, tuple struct or tuple variant, found struct `S`\n+  --> $DIR/legacy-ctor-visibility.rs:9:13\n    |\n-LL |             S(10);\n-   |             ^\n-   |\n-   = note: `#[deny(legacy_constructor_visibility)]` on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #39207 <https://github.com/rust-lang/rust/issues/39207>\n+LL | /         fn f() {\n+LL | |             S(10);\n+   | |             ^ help: a function with a similar name exists: `f`\n+LL | |\n+LL | |         }\n+   | |_________- similarly named function `f` defined here\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0423`."}]}