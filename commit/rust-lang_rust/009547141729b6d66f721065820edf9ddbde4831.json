{"sha": "009547141729b6d66f721065820edf9ddbde4831", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwOTU0NzE0MTcyOWI2ZDY2ZjcyMTA2NTgyMGVkZjlkZGJkZTQ4MzE=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-20T00:51:02Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-20T00:51:02Z"}, "message": "Switch out another use of `do catch`", "tree": {"sha": "be2c79586d7a24a323bee68cbf01c1019fa54f34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be2c79586d7a24a323bee68cbf01c1019fa54f34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/009547141729b6d66f721065820edf9ddbde4831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/009547141729b6d66f721065820edf9ddbde4831", "html_url": "https://github.com/rust-lang/rust/commit/009547141729b6d66f721065820edf9ddbde4831", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/009547141729b6d66f721065820edf9ddbde4831/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "html_url": "https://github.com/rust-lang/rust/commit/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "0b9d53b5af45e0c62328747a0037607f731907c7", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/009547141729b6d66f721065820edf9ddbde4831/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009547141729b6d66f721065820edf9ddbde4831/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=009547141729b6d66f721065820edf9ddbde4831", "patch": "@@ -26,8 +26,8 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_sort_by_cached_key)]\n #![feature(str_escape)]\n+#![feature(try_trait)]\n #![feature(unicode_internals)]\n-#![feature(catch_expr)]\n \n #![recursion_limit=\"256\"]\n "}, {"sha": "b766fbd0d71b7fc5854ea627105b3db964db7ddb", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/009547141729b6d66f721065820edf9ddbde4831/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009547141729b6d66f721065820edf9ddbde4831/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=009547141729b6d66f721065820edf9ddbde4831", "patch": "@@ -1756,9 +1756,17 @@ impl<'a> Parser<'a> {\n \n             let parser_snapshot_before_pat = self.clone();\n \n+            // Once we can use edition 2018 in the compiler,\n+            // replace this with real try blocks.\n+            macro_rules! try_block {\n+                ($($inside:tt)*) => (\n+                    (||{ ::std::ops::Try::from_ok({ $($inside)* }) })()\n+                )\n+            }\n+\n             // We're going to try parsing the argument as a pattern (even though it's not\n             // allowed). This way we can provide better errors to the user.\n-            let pat_arg: PResult<'a, _> = do catch {\n+            let pat_arg: PResult<'a, _> = try_block! {\n                 let pat = self.parse_pat()?;\n                 self.expect(&token::Colon)?;\n                 (pat, self.parse_ty()?)"}]}