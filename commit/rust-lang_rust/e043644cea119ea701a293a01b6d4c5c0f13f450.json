{"sha": "e043644cea119ea701a293a01b6d4c5c0f13f450", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNDM2NDRjZWExMTllYTcwMWEyOTNhMDFiNmQ0YzVjMGYxM2Y0NTA=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-05-14T19:54:19Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-15T20:50:36Z"}, "message": "use sched_yield on linux and freebsd\n\npthread_yield is non-standard, while sched_yield is POSIX\n\nThe Linux documentation recommends using the standard function. This is\nthe only feature we're currently using that's present in glibc but not\nin musl.", "tree": {"sha": "fb99bf6af2490e2f830a96f1daab8f788802e9b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb99bf6af2490e2f830a96f1daab8f788802e9b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e043644cea119ea701a293a01b6d4c5c0f13f450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e043644cea119ea701a293a01b6d4c5c0f13f450", "html_url": "https://github.com/rust-lang/rust/commit/e043644cea119ea701a293a01b6d4c5c0f13f450", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e043644cea119ea701a293a01b6d4c5c0f13f450/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8211539114df8b6e3a9b8b251fa57cb5a77d2f14", "url": "https://api.github.com/repos/rust-lang/rust/commits/8211539114df8b6e3a9b8b251fa57cb5a77d2f14", "html_url": "https://github.com/rust-lang/rust/commit/8211539114df8b6e3a9b8b251fa57cb5a77d2f14"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "e25fa4734d5cb0e06161e8daae2a6e8607264503", "filename": "src/libstd/rt/thread.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e043644cea119ea701a293a01b6d4c5c0f13f450/src%2Flibstd%2Frt%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e043644cea119ea701a293a01b6d4c5c0f13f450/src%2Flibstd%2Frt%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fthread.rs?ref=e043644cea119ea701a293a01b6d4c5c0f13f450", "patch": "@@ -273,13 +273,8 @@ mod imp {\n         assert_eq!(pthread_detach(native), 0);\n     }\n \n-    #[cfg(target_os = \"macos\")]\n-    #[cfg(target_os = \"android\")]\n     pub unsafe fn yield_now() { assert_eq!(sched_yield(), 0); }\n \n-    #[cfg(not(target_os = \"macos\"), not(target_os = \"android\"))]\n-    pub unsafe fn yield_now() { assert_eq!(pthread_yield(), 0); }\n-\n     // glibc >= 2.15 has a __pthread_get_minstack() function that returns\n     // PTHREAD_STACK_MIN plus however many bytes are needed for thread-local\n     // storage.  We need that information to avoid blowing up when a small stack\n@@ -326,12 +321,7 @@ mod imp {\n         fn pthread_attr_setdetachstate(attr: *mut libc::pthread_attr_t,\n                                        state: libc::c_int) -> libc::c_int;\n         fn pthread_detach(thread: libc::pthread_t) -> libc::c_int;\n-\n-        #[cfg(target_os = \"macos\")]\n-        #[cfg(target_os = \"android\")]\n         fn sched_yield() -> libc::c_int;\n-        #[cfg(not(target_os = \"macos\"), not(target_os = \"android\"))]\n-        fn pthread_yield() -> libc::c_int;\n     }\n }\n "}]}