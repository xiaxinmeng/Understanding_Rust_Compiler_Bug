{"sha": "66e2266d04610ba69ad8d53d5568bc93d5c92e41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZTIyNjZkMDQ2MTBiYTY5YWQ4ZDUzZDU1NjhiYzkzZDVjOTJlNDE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-11T19:53:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-11T19:53:32Z"}, "message": "Extern fns are implicitly unsafe\n\ncloses #4865", "tree": {"sha": "4734c7fc5bf40f94576959b895a167f1a37e4658", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4734c7fc5bf40f94576959b895a167f1a37e4658"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66e2266d04610ba69ad8d53d5568bc93d5c92e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66e2266d04610ba69ad8d53d5568bc93d5c92e41", "html_url": "https://github.com/rust-lang/rust/commit/66e2266d04610ba69ad8d53d5568bc93d5c92e41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66e2266d04610ba69ad8d53d5568bc93d5c92e41/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00c81f8006926b5a326d4dd11f61ea5ae09aadbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/00c81f8006926b5a326d4dd11f61ea5ae09aadbd", "html_url": "https://github.com/rust-lang/rust/commit/00c81f8006926b5a326d4dd11f61ea5ae09aadbd"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "0b1509e132f13659397cd8762ef5c8e979cc8fdc", "filename": "crates/ra_hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66e2266d04610ba69ad8d53d5568bc93d5c92e41/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66e2266d04610ba69ad8d53d5568bc93d5c92e41/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=66e2266d04610ba69ad8d53d5568bc93d5c92e41", "patch": "@@ -546,6 +546,7 @@ impl Ctx {\n                     let id: ModItem = match item {\n                         ast::ExternItem::FnDef(ast) => {\n                             let func = self.lower_function(&ast)?;\n+                            self.data().functions[func.index].is_unsafe = true;\n                             func.into()\n                         }\n                         ast::ExternItem::StaticDef(ast) => {"}]}