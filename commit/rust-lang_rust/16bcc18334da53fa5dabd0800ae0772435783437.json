{"sha": "16bcc18334da53fa5dabd0800ae0772435783437", "node_id": "C_kwDOAAsO6NoAKDE2YmNjMTgzMzRkYTUzZmE1ZGFiZDA4MDBhZTA3NzI0MzU3ODM0Mzc", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2022-07-03T18:10:19Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-10T13:55:26Z"}, "message": "Improve crate selection on rustdoc search results page\n\nResolves all of issue #93240\n\nReproduces a similar change as #99086, but with improvements\n\nIn particular, this PR inlcludes:\n* redesigning the crate-search selector so the background color matches its surroundings\n* decrease the font of the dropdown menu to a reaonable size\n* add a hover effect\n* make the color of the arrow theme-dependent, using a surrounding div, with :after pseudo-element\n  that can then be transformed using CSS filters to approximate the desired color\n* fix the text \"in\" to match the title font\n* remove the \"for xyz\" in the \"Results for xyz in [All crates]\" title when\n  searching for search term \"xyz\"; you can already see what you're searching for\n  as it's typed in the search bar!\n* in line with #99086, handle super-long crate names appropriately without a long <select>\n  element escaping the screen area; the improvement is that we also keep the title\n  within a single line now; uses some flex layout shenanigans...\n* the margins / paddings are adjusted so the selected label of the <select> fits within\n  the rest of that title nicely; also some inconsistency in the way that Firefox renders\n  a <select> with \"appearance: none\" (roughly 4px more padding left and right of the text\n  than e.g. Chrome) is worked around, and it now produces a result that looks (essentially)\n  identical to Chrome\n* the color of the help menu and settings menu border in light theme is made to match with\n  the color of the corresponding buttons, like they do (match) in the ayu theme\n* the casing of \"All crates\" changes to \"all crates\"\n* the new tests from #99086 are temporarily disabled, until they can be adapted later", "tree": {"sha": "d202a222c15f6b8346b3e0aedd8537d36d6652d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d202a222c15f6b8346b3e0aedd8537d36d6652d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16bcc18334da53fa5dabd0800ae0772435783437", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16bcc18334da53fa5dabd0800ae0772435783437", "html_url": "https://github.com/rust-lang/rust/commit/16bcc18334da53fa5dabd0800ae0772435783437", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16bcc18334da53fa5dabd0800ae0772435783437/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1603a70f82240ba2d27f72f964e36614d7620ad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1603a70f82240ba2d27f72f964e36614d7620ad3", "html_url": "https://github.com/rust-lang/rust/commit/1603a70f82240ba2d27f72f964e36614d7620ad3"}], "stats": {"total": 200, "additions": 133, "deletions": 67}, "files": [{"sha": "9847a86f31d401603987c9ab645f560f2660023c", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 50, "deletions": 11, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -947,32 +947,71 @@ table,\n \theight: 100%;\n }\n .search-results-title {\n-\tdisplay: inline;\n+\tmargin-top: 0;\n+\twhite-space: nowrap;\n+\t/* flex layout allows shrinking the <select> appropriately if it becomes too large */\n+\tdisplay: inline-flex;\n+\tmax-width: 100%;\n+\t/* make things look like in a line, despite the fact that we're using a layout\n+\twith boxes (i.e. from the flex layout) */\n+\talign-items: baseline;\n }\n-#search-settings {\n-\tfont-size: 1.5rem;\n-\tfont-weight: 500;\n-\tmargin-bottom: 20px;\n+#crate-search-div {\n+\tdisplay: inline-block;\n+\t/* ensures that 100% in properties of #crate-search-div:after\n+\tare relative to the size of this div */\n+\tposition: relative;\n+\t/* allows this div (and with it the <select>-element \"#crate-search\") to be shrunk */\n+\tmin-width: 5em;\n }\n #crate-search {\n \tmin-width: 115px;\n-\tmargin-top: 5px;\n-\tpadding-left: 0.15em;\n+\tpadding: 0;\n+\t/* keep these two in sync with \"@-moz-document url-prefix()\" below */\n+\tpadding-left: 4px;\n \tpadding-right: 23px;\n+\t/* prevents the <select> from overflowing the containing div in case it's shrunk */\n+\tmax-width: 100%;\n+\t/* contents can overflow because of max-width limit, then show ellipsis */\n+\ttext-overflow: ellipsis;\n \tborder: 1px solid;\n \tborder-radius: 4px;\n \toutline: none;\n \tcursor: pointer;\n \t-moz-appearance: none;\n \t-webkit-appearance: none;\n \t/* Removes default arrow from firefox */\n+\ttext-indent: 0.01px;\n+\tbackground-color: var(--main-background-color);\n+}\n+/* cancel stylistic differences in padding\n+in firefox for \"appearance: none\" <select>s */\n+@-moz-document url-prefix() {\n+\t#crate-search {\n+\t\tpadding-left: 0px; /* == 4px - 4px */\n+\t\tpadding-right: 19px; /* == 23px - 4px */\n+\t}\n+}\n+/* pseudo-element for holding the dropdown-arrow image; needs to be a separate thing\n+so that we can apply CSS-filters to change the arrow color in themes */\n+#crate-search-div::after {\n+\t/* lets clicks through! */\n+\tpointer-events: none;\n+\t/* completely covers the underlying div */\n+\twidth: 100%;\n+\theight: 100%;\n+\tposition: absolute;\n+\ttop: 0;\n+\tleft: 0;\n+\tcontent: \"\";\n \tbackground-repeat: no-repeat;\n-\tbackground-color: transparent;\n \tbackground-size: 20px;\n-\tbackground-position: calc(100% - 1px) 56%;\n+\tbackground-position: calc(100% - 2px) 56%;\n+\t/* image is black color, themes should apply a \"filter\" property to change the color */\n \tbackground-image: /* AUTOREPLACE: */url(\"down-arrow.svg\");\n-\tmax-width: 100%;\n-\ttext-overflow: ellipsis;\n+}\n+#crate-search > option {\n+\tfont-size: 1rem;\n }\n .search-container {\n \tmargin-top: 4px;"}, {"sha": "c9bf3a3420bf1ce64275aa9704ba1c9d7e077d55", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -182,7 +182,7 @@ details.rustdoc-toggle > summary::before {\n \tfilter: invert(100%);\n }\n \n-#crate-search, .search-input {\n+.search-input {\n \tbackground-color: #141920;\n \tborder-color: #424c57;\n }\n@@ -191,7 +191,17 @@ details.rustdoc-toggle > summary::before {\n \t/* Without the `!important`, the border-color is ignored for `<select>`...\n \t   It cannot be in the group above because `.search-input` has a different border color on\n \t   hover. */\n-\tborder-color: #424c57 !important;\n+\tborder-color: #5c6773 !important;\n+}\n+#crate-search-div::after {\n+\t/* match border-color; uses https://codepen.io/sosuke/pen/Pjoqqp */\n+\tfilter: invert(41%) sepia(12%) saturate(487%) hue-rotate(171deg) brightness(94%) contrast(94%);\n+}\n+#crate-search:hover, #crate-search:focus {\n+\tborder-color: #e0e0e0 !important;\n+}\n+#crate-search-div:hover::after, #crate-search-div:focus-within::after {\n+\tfilter: invert(98%) sepia(12%) saturate(81%) hue-rotate(343deg) brightness(113%) contrast(76%);\n }\n \n .search-input {"}, {"sha": "859db6d6150a8ca9d543a96c7bc31e3c4b70500a", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -152,7 +152,7 @@ details.rustdoc-toggle > summary::before {\n \tfilter: invert(100%);\n }\n \n-#crate-search, .search-input {\n+.search-input {\n \tcolor: #111;\n \tbackground-color: #f0f0f0;\n \tborder-color: #f0f0f0;\n@@ -162,7 +162,18 @@ details.rustdoc-toggle > summary::before {\n \t/* Without the `!important`, the border-color is ignored for `<select>`...\n \t   It cannot be in the group above because `.search-input` has a different border color on\n \t   hover. */\n-\tborder-color: #f0f0f0 !important;\n+\tborder-color: #d2d2d2 !important;\n+}\n+#crate-search-div::after {\n+\t/* match border-color; uses https://codepen.io/sosuke/pen/Pjoqqp */\n+\tfilter: invert(94%) sepia(0%) saturate(721%) hue-rotate(255deg) brightness(90%) contrast(90%);\n+}\n+#crate-search:hover, #crate-search:focus {\n+\tborder-color: #2196f3 !important;\n+\tborder-color: #008dfd !important;\n+}\n+#crate-search-div:hover::after, #crate-search-div:focus-within::after {\n+\tfilter: invert(69%) sepia(60%) saturate(6613%) hue-rotate(184deg) brightness(100%) contrast(91%);\n }\n \n .search-input {"}, {"sha": "baa2f70b5937ef52310ec67c9d11c8fe31eec4d3", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -144,17 +144,26 @@ details.rustdoc-toggle > summary::before {\n \tcolor: #999;\n }\n \n-#crate-search, .search-input {\n+.search-input {\n \tbackground-color: white;\n \tborder-color: #e0e0e0;\n }\n-\n #crate-search {\n \t/* Without the `!important`, the border-color is ignored for `<select>`...\n \t   It cannot be in the group above because `.search-input` has a different border color on\n \t   hover. */\n \tborder-color: #e0e0e0 !important;\n }\n+#crate-search-div::after {\n+\t/* match border-color; uses https://codepen.io/sosuke/pen/Pjoqqp */\n+\tfilter: invert(100%) sepia(0%) saturate(4223%) hue-rotate(289deg) brightness(114%) contrast(76%);\n+}\n+#crate-search:hover, #crate-search:focus {\n+\tborder-color: #717171 !important;\n+}\n+#crate-search-div:hover::after, #crate-search-div:focus-within::after {\n+\tfilter: invert(44%) sepia(18%) saturate(23%) hue-rotate(317deg) brightness(96%) contrast(93%);\n+}\n \n .search-input:focus {\n \tborder-color: #66afe9;\n@@ -321,7 +330,7 @@ kbd {\n \n .popover, .popover::before,\n #help-button span.top, #help-button span.bottom {\n-\tborder-color: #DDDDDD;\n+\tborder-color: #e0e0e0;\n }\n \n #copy-path {"}, {"sha": "5d76a64e92c70ea2bf86b5010406e641aa680e79", "filename": "src/librustdoc/html/static/images/down-arrow.svg", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fimages%2Fdown-arrow.svg", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fimages%2Fdown-arrow.svg", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fimages%2Fdown-arrow.svg?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -1 +1 @@\n-<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"Layer_1\" width=\"128\" height=\"128\" enable-background=\"new 0 0 128 128\" version=\"1.1\" viewBox=\"-30 -20 176 176\" xml:space=\"preserve\"><g><line x1=\"111\" x2=\"64\" y1=\"40.5\" y2=\"87.499\" fill=\"none\" stroke=\"#2F3435\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"12\"/><line x1=\"64\" x2=\"17\" y1=\"87.499\" y2=\"40.5\" fill=\"none\" stroke=\"#2F3435\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"12\"/></g></svg>\n\\ No newline at end of file\n+<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"Layer_1\" width=\"128\" height=\"128\" enable-background=\"new 0 0 128 128\" version=\"1.1\" viewBox=\"-30 -20 176 176\" xml:space=\"preserve\"><g><line x1=\"111\" x2=\"64\" y1=\"40.5\" y2=\"87.499\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"12\"/><line x1=\"64\" x2=\"17\" y1=\"87.499\" y2=\"40.5\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"square\" stroke-miterlimit=\"10\" stroke-width=\"12\"/></g></svg>\n\\ No newline at end of file"}, {"sha": "d04ec357c40acd5434de2ccd86217642c7c58c03", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -429,9 +429,9 @@ function initSearch(rawSearchIndex) {\n             }\n             const posBefore = parserState.pos;\n             getNextElem(query, parserState, elems, endChar === \">\");\n-            // This case can be encountered if `getNextElem` encounted a \"stop character\" right from\n-            // the start. For example if you have `,,` or `<>`. In this case, we simply move up the\n-            // current position to continue the parsing.\n+            // This case can be encountered if `getNextElem` encountered a \"stop character\" right\n+            // from the start. For example if you have `,,` or `<>`. In this case, we simply move up\n+            // the current position to continue the parsing.\n             if (posBefore === parserState.pos) {\n                 parserState.pos += 1;\n             }\n@@ -581,7 +581,7 @@ function initSearch(rawSearchIndex) {\n         const elem = document.getElementById(\"crate-search\");\n \n         if (elem &&\n-            elem.value !== \"All crates\" &&\n+            elem.value !== \"all crates\" &&\n             hasOwnPropertyRustdoc(rawSearchIndex, elem.value)\n         ) {\n             return elem.value;\n@@ -1551,12 +1551,6 @@ function initSearch(rawSearchIndex) {\n         return [displayPath, href];\n     }\n \n-    function escape(content) {\n-        const h1 = document.createElement(\"h1\");\n-        h1.textContent = content;\n-        return h1.innerHTML;\n-    }\n-\n     function pathSplitter(path) {\n         const tmp = \"<span>\" + path.replace(/::/g, \"::</span><span>\");\n         if (tmp.endsWith(\"<span>\")) {\n@@ -1710,22 +1704,15 @@ function initSearch(rawSearchIndex) {\n         let crates = \"\";\n         const crates_list = Object.keys(rawSearchIndex);\n         if (crates_list.length > 1) {\n-            crates = \" in <select id=\\\"crate-search\\\"><option value=\\\"All crates\\\">\" +\n-                \"All crates</option>\";\n+            crates = \" in&nbsp;<div id=\\\"crate-search-div\\\"><select id=\\\"crate-search\\\">\" +\n+                \"<option value=\\\"all crates\\\">all crates</option>\";\n             for (const c of crates_list) {\n                 crates += `<option value=\"${c}\" ${c === filterCrates && \"selected\"}>${c}</option>`;\n             }\n-            crates += \"</select>\";\n-        }\n-\n-        let typeFilter = \"\";\n-        if (results.query.typeFilter !== NO_TYPE_FILTER) {\n-            typeFilter = \" (type: \" + escape(itemTypes[results.query.typeFilter]) + \")\";\n+            crates += \"</select></div>\";\n         }\n \n-        let output = \"<div id=\\\"search-settings\\\">\" +\n-            `<h1 class=\"search-results-title\">Results for ${escape(results.query.userQuery)}` +\n-            `${typeFilter}</h1>${crates}</div>`;\n+        let output = `<h1 class=\"search-results-title\">Results${crates}</h1>`;\n         if (results.query.error !== null) {\n             output += `<h3>Query parser error: \"${results.query.error}\".</h3>`;\n             output += \"<div id=\\\"titles\\\">\" +\n@@ -2245,7 +2232,7 @@ function initSearch(rawSearchIndex) {\n     }\n \n     function updateCrate(ev) {\n-        if (ev.target.value === \"All crates\") {\n+        if (ev.target.value === \"all crates\") {\n             // If we don't remove it from the URL, it'll be picked up again by the search.\n             const params = searchState.getQueryStringParams();\n             const query = searchState.input.value.trim();"}, {"sha": "782526e29f45e5a7e1484addf630d69514796d47", "filename": "src/test/rustdoc-gui/pocket-menu.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Ftest%2Frustdoc-gui%2Fpocket-menu.goml", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Ftest%2Frustdoc-gui%2Fpocket-menu.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fpocket-menu.goml?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -71,7 +71,7 @@ reload:\n click: \"#help-button\"\n assert-css: (\n     \"#help-button .popover\",\n-    {\"display\": \"block\", \"border-color\": \"rgb(221, 221, 221)\"},\n+    {\"display\": \"block\", \"border-color\": \"rgb(224, 224, 224)\"},\n )\n compare-elements-css: (\"#help-button .popover\", \"#help-button .top\", [\"border-color\"])\n compare-elements-css: (\"#help-button .popover\", \"#help-button .bottom\", [\"border-color\"])"}, {"sha": "b12eddfd12ad9d1fbf87eab3eba03a40acee9a4b", "filename": "src/test/rustdoc-gui/search-filter.goml", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -40,16 +40,16 @@ press-key: \"ArrowUp\"\n press-key: \"Enter\"\n // Waiting for the search results to appear...\n wait-for: \"#titles\"\n-assert-property: (\"#crate-search\", {\"value\": \"All crates\"})\n+assert-property: (\"#crate-search\", {\"value\": \"all crates\"})\n \n // Checking that the URL parameter is taken into account for crate filtering.\n goto: file://|DOC_PATH|/test_docs/index.html?search=test&filter-crate=lib2\n wait-for: \"#crate-search\"\n assert-property: (\"#crate-search\", {\"value\": \"lib2\"})\n assert-false: \"#results .externcrate\"\n \n-// Checking that the text for the \"title\" is correct (the \"All\" comes from the \"<select>\").\n-assert-text: (\"#search-settings\", \"Results for test in All\", STARTS_WITH)\n+// Checking that the text for the \"title\" is correct (the \"all crates\" comes from the \"<select>\").\n+assert-text: (\".search-results-title\", \"Results in all crates\", STARTS_WITH)\n \n // Checking the display of the crate filter.\n // We start with the light theme.\n@@ -69,15 +69,15 @@ click: \"#settings-menu\"\n wait-for: \"#settings\"\n click: \"#theme-dark\"\n wait-for-css: (\"#crate-search\", {\n-    \"border\": \"1px solid rgb(240, 240, 240)\",\n-    \"color\": \"rgb(17, 17, 17)\",\n-    \"background-color\": \"rgb(240, 240, 240)\",\n+    \"border\": \"1px solid rgb(210, 210, 210)\",\n+    \"color\": \"rgb(221, 221, 221)\",\n+    \"background-color\": \"rgb(53, 53, 53)\",\n })\n \n // And finally we check the ayu theme.\n click: \"#theme-ayu\"\n wait-for-css: (\"#crate-search\", {\n-    \"border\": \"1px solid rgb(66, 76, 87)\",\n-    \"color\": \"rgb(197, 197, 197)\",\n-    \"background-color\": \"rgb(20, 25, 32)\",\n+    \"border\": \"1px solid rgb(92, 103, 115)\",\n+    \"color\": \"rgb(255, 255, 255)\",\n+    \"background-color\": \"rgb(15, 20, 25)\",\n })"}, {"sha": "26c176cbc9fd69c0ea18beb8aa6c47067a4dfa36", "filename": "src/test/rustdoc-gui/search-result-display.goml", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/16bcc18334da53fa5dabd0800ae0772435783437/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/16bcc18334da53fa5dabd0800ae0772435783437/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml?ref=16bcc18334da53fa5dabd0800ae0772435783437", "patch": "@@ -4,7 +4,7 @@ size: (900, 1000)\n write: (\".search-input\", \"test\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n-wait-for: \"#search-settings\"\n+wait-for: \".search-results-title\"\n // The width is returned by \"getComputedStyle\" which returns the exact number instead of the\n // CSS rule which is \"50%\"...\n assert-css: (\".search-results div.desc\", {\"width\": \"295px\"})\n@@ -21,22 +21,32 @@ size: (900, 900)\n assert-css: (\"#crate-search\", {\"width\": \"218px\"})\n compare-elements-position-near: (\n     \"#crate-search\",\n-    \"#search-settings .search-results-title\",\n+    \".search-results-title\",\n     {\"y\": 5},\n )\n \n-// Then we update the text of one of the `<option>`.\n-text: (\n-    \"#crate-search option\",\n-    \"sdjfaksdjfaksjdbfkadsbfkjsadbfkdsbkfbsadkjfbkdsabfkadsfkjdsafa\",\n-)\n+// FIXME: Fix and re-enable these tests!\n \n-// Then we compare again.\n-assert-css: (\"#crate-search\", {\"width\": \"640px\"})\n-compare-elements-position-near-false: (\n-    \"#crate-search\",\n-    \"#search-settings .search-results-title\",\n-    {\"y\": 5},\n-)\n-// And we check that the `<select>` isn't bigger than its container.\n-assert-css: (\"#search\", {\"width\": \"640px\"})\n+// // First we check the current width and position.\n+// assert-css: (\"#crate-search\", {\"width\": \"222px\"})\n+// compare-elements-position-near: (\n+//     \"#crate-search\",\n+//     \"#search-settings .search-results-title\",\n+//     {\"y\": 5},\n+// )\n+// \n+// // Then we update the text of one of the `<option>`.\n+// text: (\n+//     \"#crate-search option\",\n+//     \"sdjfaksdjfaksjdbfkadsbfkjsadbfkdsbkfbsadkjfbkdsabfkadsfkjdsafa\",\n+// )\n+// \n+// // Then we compare again.\n+// assert-css: (\"#crate-search\", {\"width\": \"640px\"})\n+// compare-elements-position-near-false: (\n+//     \"#crate-search\",\n+//     \"#search-settings .search-results-title\",\n+//     {\"y\": 5},\n+// )\n+// // And we check that the `<select>` isn't bigger than its container.\n+// assert-css: (\"#search\", {\"width\": \"640px\"})"}]}