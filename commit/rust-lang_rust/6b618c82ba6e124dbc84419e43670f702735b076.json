{"sha": "6b618c82ba6e124dbc84419e43670f702735b076", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNjE4YzgyYmE2ZTEyNGRiYzg0NDE5ZTQzNjcwZjcwMjczNWIwNzY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-24T04:47:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-24T04:47:35Z"}, "message": "Rollup merge of #86533 - inquisitivecrystal:lower-case-error-explain, r=petrochenkov\n\nSupport lowercase error codes in `--explain`\n\nThis enables `rustc --explain` to accept a lowercase error code. Thus, for instance, `rustc --explain e0573` would be valid after this change, where before a user would have needed to do `rustc --explain E0573`. Although the upper case form of an error code is canonical, the user may prefer the easier-to-type lowercase form, and there's nothing to be gained by forcing them to type the upper case version.\n\nResolves #86518.", "tree": {"sha": "0440a9d27cfc2e3c3047c4565736eb6a25334198", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0440a9d27cfc2e3c3047c4565736eb6a25334198"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b618c82ba6e124dbc84419e43670f702735b076", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg1A5nCRBK7hj4Ov3rIwAAcjsIAKb+EwKRaWCZy1m7/374wJQl\n3rmtDIXgKoNqdJGcDJckuvZ8AtD0Un0EFC/zp8PxQ8AW89rtk3v+vIqOL762N5pE\nLI1AiGOGPf4ObYK7qRS0zC4S+zwaG9ggnAnAszk+k6ihSjymE62ile7azw1Spfml\nGXXWIjDmietM6lMErjRW5rkl509ex9Q4qjewGRg4lTvgODZVefFz3lin3JpyWui+\nR1VX6DL7FJ/mk+alJ0K2opgGcC0uyfvDSSIufISxxha+He9heEGiNGcWuSm0NnNC\n88hNnyGUunqo8f723uXsPy5pTyXqf+R3h8CQFpqNDkqPQCfwTuw/r+Z6+2rPZPw=\n=hsYI\n-----END PGP SIGNATURE-----\n", "payload": "tree 0440a9d27cfc2e3c3047c4565736eb6a25334198\nparent 0fa4f0ba6207ac8c8d1503f14f284d38b8fef81c\nparent 0bb6bc40ce8d544ca41006d3faf8bcda2152030f\nauthor Yuki Okushi <jtitor@2k36.org> 1624510055 +0900\ncommitter GitHub <noreply@github.com> 1624510055 +0900\n\nRollup merge of #86533 - inquisitivecrystal:lower-case-error-explain, r=petrochenkov\n\nSupport lowercase error codes in `--explain`\n\nThis enables `rustc --explain` to accept a lowercase error code. Thus, for instance, `rustc --explain e0573` would be valid after this change, where before a user would have needed to do `rustc --explain E0573`. Although the upper case form of an error code is canonical, the user may prefer the easier-to-type lowercase form, and there's nothing to be gained by forcing them to type the upper case version.\n\nResolves #86518.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b618c82ba6e124dbc84419e43670f702735b076", "html_url": "https://github.com/rust-lang/rust/commit/6b618c82ba6e124dbc84419e43670f702735b076", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b618c82ba6e124dbc84419e43670f702735b076/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fa4f0ba6207ac8c8d1503f14f284d38b8fef81c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fa4f0ba6207ac8c8d1503f14f284d38b8fef81c", "html_url": "https://github.com/rust-lang/rust/commit/0fa4f0ba6207ac8c8d1503f14f284d38b8fef81c"}, {"sha": "0bb6bc40ce8d544ca41006d3faf8bcda2152030f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb6bc40ce8d544ca41006d3faf8bcda2152030f", "html_url": "https://github.com/rust-lang/rust/commit/0bb6bc40ce8d544ca41006d3faf8bcda2152030f"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "87bc829b48891bde6c0cf60118c85548f03c8d13", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b618c82ba6e124dbc84419e43670f702735b076/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b618c82ba6e124dbc84419e43670f702735b076/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=6b618c82ba6e124dbc84419e43670f702735b076", "patch": "@@ -528,8 +528,12 @@ fn stderr_isatty() -> bool {\n }\n \n fn handle_explain(registry: Registry, code: &str, output: ErrorOutputType) {\n-    let normalised =\n-        if code.starts_with('E') { code.to_string() } else { format!(\"E{0:0>4}\", code) };\n+    let upper_cased_code = code.to_ascii_uppercase();\n+    let normalised = if upper_cased_code.starts_with('E') {\n+        upper_cased_code\n+    } else {\n+        format!(\"E{0:0>4}\", code)\n+    };\n     match registry.try_find_description(&normalised) {\n         Ok(Some(description)) => {\n             let mut is_in_code_block = false;"}]}