{"sha": "993c4480ac0ad6233068b02f1f4c1d4096111cbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5M2M0NDgwYWMwYWQ2MjMzMDY4YjAyZjFmNGMxZDQwOTYxMTFjYmU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-16T09:14:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-16T17:50:09Z"}, "message": "emphasize that ManuallyDrop is safe-to-access and unsafe-to-drop", "tree": {"sha": "5b71f6de618dc32d9e7ab429a7a3c084dbb91924", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b71f6de618dc32d9e7ab429a7a3c084dbb91924"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/993c4480ac0ad6233068b02f1f4c1d4096111cbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/993c4480ac0ad6233068b02f1f4c1d4096111cbe", "html_url": "https://github.com/rust-lang/rust/commit/993c4480ac0ad6233068b02f1f4c1d4096111cbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/993c4480ac0ad6233068b02f1f4c1d4096111cbe/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6163394e1ff98c53abc9d27f68b5608faa8cd9b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6163394e1ff98c53abc9d27f68b5608faa8cd9b6", "html_url": "https://github.com/rust-lang/rust/commit/6163394e1ff98c53abc9d27f68b5608faa8cd9b6"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "18767c482c77ea47cd863685db33ee1110ffe1dc", "filename": "src/libcore/mem/manually_drop.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/993c4480ac0ad6233068b02f1f4c1d4096111cbe/src%2Flibcore%2Fmem%2Fmanually_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/993c4480ac0ad6233068b02f1f4c1d4096111cbe/src%2Flibcore%2Fmem%2Fmanually_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmanually_drop.rs?ref=993c4480ac0ad6233068b02f1f4c1d4096111cbe", "patch": "@@ -2,7 +2,6 @@ use crate::ops::{Deref, DerefMut};\n use crate::ptr;\n \n /// A wrapper to inhibit compiler from automatically calling `T`\u2019s destructor.\n-///\n /// This wrapper is 0-cost.\n ///\n /// `ManuallyDrop<T>` is subject to the same layout optimizations as `T`.\n@@ -11,6 +10,11 @@ use crate::ptr;\n /// with [`mem::zeroed`] is undefined behavior.\n /// If you need to handle uninitialized data, use [`MaybeUninit<T>`] instead.\n ///\n+/// Note that accessing the value inside a `ManuallyDrop<T>` is safe.\n+/// This means that a `ManuallyDrop<T>` whose content has been dropped must not\n+/// be exposed through a public safe API.\n+/// Correspondingly, `ManuallyDrop::drop` is unsafe.\n+///\n /// # Examples\n ///\n /// This wrapper can be used to enforce a particular drop order on fields, regardless"}]}