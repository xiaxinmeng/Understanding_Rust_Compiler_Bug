{"sha": "b6278664af23004be3fbf9ecd64505e9abdf3644", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2Mjc4NjY0YWYyMzAwNGJlM2ZiZjllY2Q2NDUwNWU5YWJkZjM2NDQ=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-09-10T19:37:42Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-09-10T22:25:41Z"}, "message": "optimize utf8_is_cont_byte() to speed up str.chars().count()\n\nit shows consistent improvements across several x86_64 feature levels\n\n```\nold, -O2, x86-64\ntest str::str_char_count_emoji                                  ... bench:       1,924 ns/iter (+/- 26)\ntest str::str_char_count_lorem                                  ... bench:         879 ns/iter (+/- 12)\ntest str::str_char_count_lorem_short                            ... bench:           5 ns/iter (+/- 0)\n\nnew, -O2, x86-64\ntest str::str_char_count_emoji                                  ... bench:       1,878 ns/iter (+/- 21)\ntest str::str_char_count_lorem                                  ... bench:         851 ns/iter (+/- 11)\ntest str::str_char_count_lorem_short                            ... bench:           4 ns/iter (+/- 0)\n\nold, -O2, x86-64-v2\ntest str::str_char_count_emoji                                  ... bench:       1,477 ns/iter (+/- 46)\ntest str::str_char_count_lorem                                  ... bench:         675 ns/iter (+/- 15)\ntest str::str_char_count_lorem_short                            ... bench:           5 ns/iter (+/- 0)\n\nnew, -O2, x86-64-v2\ntest str::str_char_count_emoji                                  ... bench:       1,323 ns/iter (+/- 39)\ntest str::str_char_count_lorem                                  ... bench:         593 ns/iter (+/- 18)\ntest str::str_char_count_lorem_short                            ... bench:           4 ns/iter (+/- 0)\n\nold, -O2, x86-64-v3\ntest str::str_char_count_emoji                                  ... bench:         748 ns/iter (+/- 7)\ntest str::str_char_count_lorem                                  ... bench:         348 ns/iter (+/- 2)\ntest str::str_char_count_lorem_short                            ... bench:           5 ns/iter (+/- 0)\n\nnew, -O2, x86-64-v3\ntest str::str_char_count_emoji                                  ... bench:         650 ns/iter (+/- 4)\ntest str::str_char_count_lorem                                  ... bench:         301 ns/iter (+/- 1)\ntest str::str_char_count_lorem_short                            ... bench:           5 ns/iter (+/- 0)\n```", "tree": {"sha": "15aab672681faa15f75ec87d9dcc2a12cdcaab3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15aab672681faa15f75ec87d9dcc2a12cdcaab3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6278664af23004be3fbf9ecd64505e9abdf3644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6278664af23004be3fbf9ecd64505e9abdf3644", "html_url": "https://github.com/rust-lang/rust/commit/b6278664af23004be3fbf9ecd64505e9abdf3644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6278664af23004be3fbf9ecd64505e9abdf3644/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c44f061d80390a07081c7cefa5da3ddae7807c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c44f061d80390a07081c7cefa5da3ddae7807c3", "html_url": "https://github.com/rust-lang/rust/commit/4c44f061d80390a07081c7cefa5da3ddae7807c3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fc8f47dced46e0f8415aae89a9598c3b58f7a685", "filename": "library/core/src/str/validations.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6278664af23004be3fbf9ecd64505e9abdf3644/library%2Fcore%2Fsrc%2Fstr%2Fvalidations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6278664af23004be3fbf9ecd64505e9abdf3644/library%2Fcore%2Fsrc%2Fstr%2Fvalidations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fvalidations.rs?ref=b6278664af23004be3fbf9ecd64505e9abdf3644", "patch": "@@ -22,7 +22,7 @@ fn utf8_acc_cont_byte(ch: u32, byte: u8) -> u32 {\n /// bits `10`).\n #[inline]\n pub(super) fn utf8_is_cont_byte(byte: u8) -> bool {\n-    (byte & !CONT_MASK) == TAG_CONT_U8\n+    (byte as i8) < -64\n }\n \n #[inline]"}]}