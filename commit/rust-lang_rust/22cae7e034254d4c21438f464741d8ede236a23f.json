{"sha": "22cae7e034254d4c21438f464741d8ede236a23f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyY2FlN2UwMzQyNTRkNGMyMTQzOGY0NjQ3NDFkOGVkZTIzNmEyM2Y=", "commit": {"author": {"name": "Kelvin Ly", "email": "kelvin.ly1618@gmail.com", "date": "2015-01-05T04:43:47Z"}, "committer": {"name": "Kelvin Ly", "email": "kelvin.ly1618@gmail.com", "date": "2015-01-05T04:43:47Z"}, "message": "Pylinted and slightly better commented", "tree": {"sha": "8ed14da18b3a4c39251d82e0cb1db0281d6e1217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ed14da18b3a4c39251d82e0cb1db0281d6e1217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22cae7e034254d4c21438f464741d8ede236a23f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22cae7e034254d4c21438f464741d8ede236a23f", "html_url": "https://github.com/rust-lang/rust/commit/22cae7e034254d4c21438f464741d8ede236a23f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22cae7e034254d4c21438f464741d8ede236a23f/comments", "author": {"login": "cactorium", "id": 1513183, "node_id": "MDQ6VXNlcjE1MTMxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1513183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cactorium", "html_url": "https://github.com/cactorium", "followers_url": "https://api.github.com/users/cactorium/followers", "following_url": "https://api.github.com/users/cactorium/following{/other_user}", "gists_url": "https://api.github.com/users/cactorium/gists{/gist_id}", "starred_url": "https://api.github.com/users/cactorium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cactorium/subscriptions", "organizations_url": "https://api.github.com/users/cactorium/orgs", "repos_url": "https://api.github.com/users/cactorium/repos", "events_url": "https://api.github.com/users/cactorium/events{/privacy}", "received_events_url": "https://api.github.com/users/cactorium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cactorium", "id": 1513183, "node_id": "MDQ6VXNlcjE1MTMxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1513183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cactorium", "html_url": "https://github.com/cactorium", "followers_url": "https://api.github.com/users/cactorium/followers", "following_url": "https://api.github.com/users/cactorium/following{/other_user}", "gists_url": "https://api.github.com/users/cactorium/gists{/gist_id}", "starred_url": "https://api.github.com/users/cactorium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cactorium/subscriptions", "organizations_url": "https://api.github.com/users/cactorium/orgs", "repos_url": "https://api.github.com/users/cactorium/repos", "events_url": "https://api.github.com/users/cactorium/events{/privacy}", "received_events_url": "https://api.github.com/users/cactorium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d3670bc65a07f1d4dcaca8d0965d3f0ba040101", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101", "html_url": "https://github.com/rust-lang/rust/commit/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "b6770c99975f13caf0f178e07533e6bdc2dbf021", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/22cae7e034254d4c21438f464741d8ede236a23f/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/22cae7e034254d4c21438f464741d8ede236a23f/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=22cae7e034254d4c21438f464741d8ede236a23f", "patch": "@@ -51,7 +51,7 @@ def rust_pretty_printer_lookup_function(val):\n     enum_member_count = len(enum_members)\n \n     if enum_member_count == 0:\n-      return RustStructPrinter(val, false)\n+      return RustStructPrinter(val, False)\n \n     if enum_member_count == 1:\n       first_variant_name = enum_members[0].name\n@@ -60,7 +60,11 @@ def rust_pretty_printer_lookup_function(val):\n         return rust_pretty_printer_lookup_function(val[enum_members[0]])\n       else:\n         assert first_variant_name.startswith(\"RUST$ENCODED$ENUM$\")\n-        # This is a space-optimized enum\n+        # This is a space-optimized enum.\n+        # This means this enum has only two states, and Rust uses one of the\n+        # fields somewhere in the struct to determine which of the two states\n+        # it's in. The location of the field is encoded in the name as something\n+        # like RUST$ENCODED$ENUM$(num$)*name_of_zero_state\n         last_separator_index = first_variant_name.rfind(\"$\")\n         start_index = len(\"RUST$ENCODED$ENUM$\")\n         disr_field_indices = first_variant_name[start_index :\n@@ -76,7 +80,7 @@ def rust_pretty_printer_lookup_function(val):\n         # If the discriminant field is a fat pointer we have to consider the\n         # first word as the true discriminant\n         if discriminant.type.code == gdb.TYPE_CODE_STRUCT:\n-            discriminant = discriminant[get_field_at_index(discriminant, 0)]\n+          discriminant = discriminant[get_field_at_index(discriminant, 0)]\n \n         if discriminant == 0:\n           null_variant_name = first_variant_name[last_separator_index + 1:]"}, {"sha": "05d71902904b46b5ee3b9eecf92d3e9595a70b0c", "filename": "src/etc/lldb_rust_formatters.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22cae7e034254d4c21438f464741d8ede236a23f/src%2Fetc%2Flldb_rust_formatters.py", "raw_url": "https://github.com/rust-lang/rust/raw/22cae7e034254d4c21438f464741d8ede236a23f/src%2Fetc%2Flldb_rust_formatters.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_rust_formatters.py?ref=22cae7e034254d4c21438f464741d8ede236a23f", "patch": "@@ -131,19 +131,19 @@ def print_enum_val(val, internal_dict):\n       try:\n         disr_field_indices = first_variant_name[start_index :\n                                               last_separator_index].split(\"$\")\n-        disr_field_indices = [int(index) for index in dis_field_indices]\n+        disr_field_indices = [int(index) for index in disr_field_indices]\n       except:\n         return \"<invalid enum encoding: %s>\" % first_variant_name\n \n       # Read the discriminant\n       disr_val = val.GetChildAtIndex(0)\n       for index in disr_field_indices:\n-        disr_val = disr_val.GetChildAtIndex(disr_field_index)\n+        disr_val = disr_val.GetChildAtIndex(index)\n \n       # If the discriminant field is a fat pointer we have to consider the\n       # first word as the true discriminant\n       if disr_val.GetType().GetTypeClass() == lldb.eTypeClassStruct:\n-          disr_val = disr_val.GetChildAtIndex(0)\n+        disr_val = disr_val.GetChildAtIndex(0)\n \n       if disr_val.GetValueAsUnsigned() == 0:\n         # Null case: Print the name of the null-variant"}]}