{"sha": "351acc87f57d05847e95b1863a9c5c7e953e162c", "node_id": "C_kwDOAAsO6NoAKDM1MWFjYzg3ZjU3ZDA1ODQ3ZTk1YjE4NjNhOWM1YzdlOTUzZTE2MmM", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-08-23T09:02:40Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-08-23T09:02:40Z"}, "message": "parser will not give wrong help message for 'public'", "tree": {"sha": "e778ab44ad85c2692465c8cf47b92d7849c2d7a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e778ab44ad85c2692465c8cf47b92d7849c2d7a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/351acc87f57d05847e95b1863a9c5c7e953e162c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/351acc87f57d05847e95b1863a9c5c7e953e162c", "html_url": "https://github.com/rust-lang/rust/commit/351acc87f57d05847e95b1863a9c5c7e953e162c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/351acc87f57d05847e95b1863a9c5c7e953e162c/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38528d4dc0a0c079069764f23f11ef9f4fba2f95", "url": "https://api.github.com/repos/rust-lang/rust/commits/38528d4dc0a0c079069764f23f11ef9f4fba2f95", "html_url": "https://github.com/rust-lang/rust/commit/38528d4dc0a0c079069764f23f11ef9f4fba2f95"}], "stats": {"total": 75, "additions": 65, "deletions": 10}, "files": [{"sha": "f2d79ce756c27bc89b2a3147fb73b161fed94434", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/351acc87f57d05847e95b1863a9c5c7e953e162c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351acc87f57d05847e95b1863a9c5c7e953e162c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=351acc87f57d05847e95b1863a9c5c7e953e162c", "patch": "@@ -22,7 +22,7 @@ use rustc_errors::{\n use rustc_errors::{pluralize, struct_span_err, Diagnostic, ErrorGuaranteed};\n use rustc_macros::{SessionDiagnostic, SessionSubdiagnostic};\n use rustc_span::source_map::Spanned;\n-use rustc_span::symbol::{kw, Ident};\n+use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::{Span, SpanSnippetError, DUMMY_SP};\n use std::ops::{Deref, DerefMut};\n \n@@ -977,15 +977,6 @@ impl<'a> Parser<'a> {\n         let mut err = self.struct_span_err(self.token.span, &msg_exp);\n \n         if let TokenKind::Ident(symbol, _) = &self.prev_token.kind {\n-            if symbol.as_str() == \"public\" {\n-                err.span_suggestion_short(\n-                    self.prev_token.span,\n-                    \"write `pub` instead of `public` to make the item public\",\n-                    \"pub\",\n-                    appl,\n-                );\n-            }\n-\n             if [\"def\", \"fun\", \"func\", \"function\"].contains(&symbol.as_str()) {\n                 err.span_suggestion_short(\n                     self.prev_token.span,\n@@ -996,6 +987,19 @@ impl<'a> Parser<'a> {\n             }\n         }\n \n+        // `pub` may be used for an item or `pub(crate)`\n+        if self.prev_token.is_ident_named(sym::public)\n+            && (self.token.can_begin_item()\n+                || self.token.kind == TokenKind::OpenDelim(Delimiter::Parenthesis))\n+        {\n+            err.span_suggestion_short(\n+                self.prev_token.span,\n+                \"write `pub` instead of `public` to make the item public\",\n+                \"pub\",\n+                appl,\n+            );\n+        }\n+\n         // Add suggestion for a missing closing angle bracket if '>' is included in expected_tokens\n         // there are unclosed angle brackets\n         if self.unmatched_angle_bracket_count > 0"}, {"sha": "4fac74278de5bfb1ccc336235a9fa67a2d3cb9d5", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/351acc87f57d05847e95b1863a9c5c7e953e162c/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351acc87f57d05847e95b1863a9c5c7e953e162c/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=351acc87f57d05847e95b1863a9c5c7e953e162c", "patch": "@@ -1118,6 +1118,7 @@ symbols! {\n         ptr_offset_from_unsigned,\n         pub_macro_rules,\n         pub_restricted,\n+        public,\n         pure,\n         pushpop_unsafe,\n         qreg,"}, {"sha": "a4fa68ba5cc2f3c65f317f4826c1af261a03cc21", "filename": "src/test/ui/parser/public-instead-of-pub-1.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.fixed?ref=351acc87f57d05847e95b1863a9c5c7e953e162c", "patch": "@@ -0,0 +1,11 @@\n+// Checks what happens when `public` is used instead of the correct, `pub`\n+// run-rustfix\n+\n+pub enum Test {\n+    //~^ ERROR expected one of `!` or `::`, found keyword `enum`\n+    //~^^ HELP write `pub` instead of `public` to make the item public\n+    A,\n+    B,\n+}\n+\n+fn main() { }"}, {"sha": "43565c9b1d25fd46d9934142f863b6a0702937ec", "filename": "src/test/ui/parser/public-instead-of-pub-1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.rs?ref=351acc87f57d05847e95b1863a9c5c7e953e162c", "patch": "@@ -0,0 +1,11 @@\n+// Checks what happens when `public` is used instead of the correct, `pub`\n+// run-rustfix\n+\n+public enum Test {\n+    //~^ ERROR expected one of `!` or `::`, found keyword `enum`\n+    //~^^ HELP write `pub` instead of `public` to make the item public\n+    A,\n+    B,\n+}\n+\n+fn main() { }"}, {"sha": "795a5bcf5dfa6def88057235001ddcce7b30743e", "filename": "src/test/ui/parser/public-instead-of-pub-1.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-1.stderr?ref=351acc87f57d05847e95b1863a9c5c7e953e162c", "patch": "@@ -0,0 +1,13 @@\n+error: expected one of `!` or `::`, found keyword `enum`\n+  --> $DIR/public-instead-of-pub-1.rs:4:8\n+   |\n+LL | public enum Test {\n+   |        ^^^^ expected one of `!` or `::`\n+   |\n+help: write `pub` instead of `public` to make the item public\n+   |\n+LL | pub enum Test {\n+   | ~~~\n+\n+error: aborting due to previous error\n+"}, {"sha": "8a43c361e0510d85efd735a4503250e20c84d536", "filename": "src/test/ui/parser/public-instead-of-pub-2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-2.rs?ref=351acc87f57d05847e95b1863a9c5c7e953e162c", "patch": "@@ -0,0 +1,7 @@\n+// Checks what happens when `public` is used instead of the correct, `pub`\n+// Won't give help message for this case\n+\n+public let x = 1;\n+//~^ ERROR expected one of `!` or `::`, found keyword `let`\n+\n+fn main() { }"}, {"sha": "efe225656fd7f02e491162989075e21ecfe5592b", "filename": "src/test/ui/parser/public-instead-of-pub-2.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/351acc87f57d05847e95b1863a9c5c7e953e162c/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fpublic-instead-of-pub-2.stderr?ref=351acc87f57d05847e95b1863a9c5c7e953e162c", "patch": "@@ -0,0 +1,8 @@\n+error: expected one of `!` or `::`, found keyword `let`\n+  --> $DIR/public-instead-of-pub-2.rs:4:8\n+   |\n+LL | public let x = 1;\n+   |        ^^^ expected one of `!` or `::`\n+\n+error: aborting due to previous error\n+"}]}