{"sha": "acb9f9ba385a9207a5f60448a1c374f2eceff13d", "node_id": "C_kwDOAAsO6NoAKGFjYjlmOWJhMzg1YTkyMDdhNWY2MDQ0OGExYzM3NGYyZWNlZmYxM2Q", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-11-02T16:44:01Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-11-02T16:44:01Z"}, "message": "add a suggestion about undeclared `alloc` module", "tree": {"sha": "849fc44ae916e19f9250f92005251e47bda52b60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/849fc44ae916e19f9250f92005251e47bda52b60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acb9f9ba385a9207a5f60448a1c374f2eceff13d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acb9f9ba385a9207a5f60448a1c374f2eceff13d", "html_url": "https://github.com/rust-lang/rust/commit/acb9f9ba385a9207a5f60448a1c374f2eceff13d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acb9f9ba385a9207a5f60448a1c374f2eceff13d/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff0e14829e1806ca0d4226595f7fdf3e8658758f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff0e14829e1806ca0d4226595f7fdf3e8658758f", "html_url": "https://github.com/rust-lang/rust/commit/ff0e14829e1806ca0d4226595f7fdf3e8658758f"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "ff0d76e94fdf5c231a8b8f193e034c4a0d4201f1", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acb9f9ba385a9207a5f60448a1c374f2eceff13d/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb9f9ba385a9207a5f60448a1c374f2eceff13d/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=acb9f9ba385a9207a5f60448a1c374f2eceff13d", "patch": "@@ -420,6 +420,10 @@ impl<'a> Resolver<'a> {\n                 err.span_label(span, label);\n \n                 if let Some((suggestions, msg, applicability)) = suggestion {\n+                    if suggestions.is_empty() {\n+                        err.help(&msg);\n+                        return err;\n+                    }\n                     err.multipart_suggestion(&msg, suggestions, applicability);\n                 }\n "}, {"sha": "55de096d1a4587fb3fef23110606c3e065d85d12", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/acb9f9ba385a9207a5f60448a1c374f2eceff13d/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb9f9ba385a9207a5f60448a1c374f2eceff13d/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=acb9f9ba385a9207a5f60448a1c374f2eceff13d", "patch": "@@ -2523,19 +2523,29 @@ impl<'a> Resolver<'a> {\n                         } else {\n                             (\n                                 format!(\"use of undeclared crate or module `{}`\", ident),\n-                                self.find_similarly_named_module_or_crate(\n-                                    ident.name,\n-                                    &parent_scope.module,\n-                                )\n-                                .map(|sugg| {\n-                                    (\n-                                        vec![(ident.span, sugg.to_string())],\n+                                if ident.name == sym::alloc {\n+                                    Some((\n+                                        vec![],\n                                         String::from(\n-                                            \"there is a crate or module with a similar name\",\n+                                            \"add `extern crate alloc` to use the builtin `alloc` module\",\n                                         ),\n                                         Applicability::MaybeIncorrect,\n+                                    ))\n+                                } else {\n+                                    self.find_similarly_named_module_or_crate(\n+                                        ident.name,\n+                                        &parent_scope.module,\n                                     )\n-                                }),\n+                                    .map(|sugg| {\n+                                        (\n+                                            vec![(ident.span, sugg.to_string())],\n+                                            String::from(\n+                                                \"there is a crate or module with a similar name\",\n+                                            ),\n+                                            Applicability::MaybeIncorrect,\n+                                        )\n+                                    })\n+                                },\n                             )\n                         }\n                     } else {"}, {"sha": "1defa1cef286353c0d359aa6c76756d5a12f3807", "filename": "src/test/ui/suggestions/undeclared-module-alloc.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/acb9f9ba385a9207a5f60448a1c374f2eceff13d/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb9f9ba385a9207a5f60448a1c374f2eceff13d/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.rs?ref=acb9f9ba385a9207a5f60448a1c374f2eceff13d", "patch": "@@ -0,0 +1,5 @@\n+// edition:2018\n+\n+use alloc::rc::Rc; //~ ERROR failed to resolve: use of undeclared crate or module `alloc`\n+\n+fn main() {}"}, {"sha": "4da0619af9879c495356450529689afa57667c87", "filename": "src/test/ui/suggestions/undeclared-module-alloc.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/acb9f9ba385a9207a5f60448a1c374f2eceff13d/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acb9f9ba385a9207a5f60448a1c374f2eceff13d/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fundeclared-module-alloc.stderr?ref=acb9f9ba385a9207a5f60448a1c374f2eceff13d", "patch": "@@ -0,0 +1,11 @@\n+error[E0433]: failed to resolve: use of undeclared crate or module `alloc`\n+  --> $DIR/undeclared-module-alloc.rs:3:5\n+   |\n+LL | use alloc::rc::Rc;\n+   |     ^^^^^ use of undeclared crate or module `alloc`\n+   |\n+   = help: add `extern crate alloc` to use the builtin `alloc` module\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0433`."}]}