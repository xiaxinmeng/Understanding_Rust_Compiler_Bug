{"sha": "35fc983dd9e904ad4961b9c10be3397bad33da0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZmM5ODNkZDllOTA0YWQ0OTYxYjljMTBiZTMzOTdiYWQzM2RhMGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-07T10:56:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-07T10:56:50Z"}, "message": "Merge #2490\n\n2490: Get rid of unwraps in add_new r=matklad a=flodiebold\n\nProbably fixes #2464.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "f46baf6b44f24cb80eac113ca2f1e1737cd5e085", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f46baf6b44f24cb80eac113ca2f1e1737cd5e085"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35fc983dd9e904ad4961b9c10be3397bad33da0c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd64VyCRBK7hj4Ov3rIwAAdHIIABMgRVvIPvWm/ReOWpxaTNAE\ntM0MBMtWCz7vYoddM9+7uuIrlERk5EF4hwHcUg7a9GBTjxUf+1u9RHzQVBzLEpbL\nAEtxV8WmQvnF3MCcmdia23uqhmaPCIi4EJJJNaPRHBRRvsxeVOZp+FLRVhLb127s\nZ9POyte3x79gXjUYHqOBQpNxr1scNDJuG+u0lun9sxFZ/SBERsCsoCKDIpLBJg4o\n1fIc9hHszFmpL+iuascWIJP2faeLT2y/MzToXIgxytLFrSatT74dgCxQKBv6MQYC\nI+5F8YS77E1SLMLQRWWORNfkM6ppTSCMnLy30YvDpdU11O7gtGqbCXkCoyR9Jw4=\n=94VV\n-----END PGP SIGNATURE-----\n", "payload": "tree f46baf6b44f24cb80eac113ca2f1e1737cd5e085\nparent 431836f4a01dda39d10f6275915f9c8e99a28028\nparent de08d30b80f80ee0eaecf4dddb72e6fb829a46b6\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1575716210 +0000\ncommitter GitHub <noreply@github.com> 1575716210 +0000\n\nMerge #2490\n\n2490: Get rid of unwraps in add_new r=matklad a=flodiebold\n\nProbably fixes #2464.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35fc983dd9e904ad4961b9c10be3397bad33da0c", "html_url": "https://github.com/rust-lang/rust/commit/35fc983dd9e904ad4961b9c10be3397bad33da0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35fc983dd9e904ad4961b9c10be3397bad33da0c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "431836f4a01dda39d10f6275915f9c8e99a28028", "url": "https://api.github.com/repos/rust-lang/rust/commits/431836f4a01dda39d10f6275915f9c8e99a28028", "html_url": "https://github.com/rust-lang/rust/commit/431836f4a01dda39d10f6275915f9c8e99a28028"}, {"sha": "de08d30b80f80ee0eaecf4dddb72e6fb829a46b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/de08d30b80f80ee0eaecf4dddb72e6fb829a46b6", "html_url": "https://github.com/rust-lang/rust/commit/de08d30b80f80ee0eaecf4dddb72e6fb829a46b6"}], "stats": {"total": 45, "additions": 21, "deletions": 24}, "files": [{"sha": "d340cac8fdf6fe648553515f0d9aa52c58e9e24d", "filename": "crates/ra_assists/src/assists/add_new.rs", "status": "modified", "additions": 21, "deletions": 24, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/35fc983dd9e904ad4961b9c10be3397bad33da0c/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35fc983dd9e904ad4961b9c10be3397bad33da0c/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_new.rs?ref=35fc983dd9e904ad4961b9c10be3397bad33da0c", "patch": "@@ -56,42 +56,39 @@ pub(crate) fn add_new(ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n         let vis = vis.as_ref().map(String::as_str).unwrap_or(\"\");\n         write!(&mut buf, \"    {}fn new(\", vis).unwrap();\n \n-        join(field_list.fields().map(|f| {\n-            format!(\n-                \"{}: {}\",\n-                f.name().unwrap().syntax().text(),\n-                f.ascribed_type().unwrap().syntax().text()\n-            )\n+        join(field_list.fields().filter_map(|f| {\n+            Some(format!(\"{}: {}\", f.name()?.syntax().text(), f.ascribed_type()?.syntax().text()))\n         }))\n         .separator(\", \")\n         .to_buf(&mut buf);\n \n         buf.push_str(\") -> Self { Self {\");\n \n-        join(field_list.fields().map(|f| f.name().unwrap().syntax().text()))\n+        join(field_list.fields().filter_map(|f| Some(f.name()?.syntax().text())))\n             .separator(\", \")\n             .surround_with(\" \", \" \")\n             .to_buf(&mut buf);\n \n         buf.push_str(\"} }\");\n \n-        let (start_offset, end_offset) = if let Some(impl_block) = impl_block {\n-            buf.push('\\n');\n-            let start = impl_block\n-                .syntax()\n-                .descendants_with_tokens()\n-                .find(|t| t.kind() == T!['{'])\n-                .unwrap()\n-                .text_range()\n-                .end();\n-\n-            (start, TextUnit::from_usize(1))\n-        } else {\n-            buf = generate_impl_text(&strukt, &buf);\n-            let start = strukt.syntax().text_range().end();\n-\n-            (start, TextUnit::from_usize(3))\n-        };\n+        let (start_offset, end_offset) = impl_block\n+            .and_then(|impl_block| {\n+                buf.push('\\n');\n+                let start = impl_block\n+                    .syntax()\n+                    .descendants_with_tokens()\n+                    .find(|t| t.kind() == T!['{'])?\n+                    .text_range()\n+                    .end();\n+\n+                Some((start, TextUnit::from_usize(1)))\n+            })\n+            .unwrap_or_else(|| {\n+                buf = generate_impl_text(&strukt, &buf);\n+                let start = strukt.syntax().text_range().end();\n+\n+                (start, TextUnit::from_usize(3))\n+            });\n \n         edit.set_cursor(start_offset + TextUnit::of_str(&buf) - end_offset);\n         edit.insert(start_offset, buf);"}]}