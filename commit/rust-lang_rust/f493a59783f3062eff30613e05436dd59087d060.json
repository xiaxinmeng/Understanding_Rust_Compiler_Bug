{"sha": "f493a59783f3062eff30613e05436dd59087d060", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0OTNhNTk3ODNmMzA2MmVmZjMwNjEzZTA1NDM2ZGQ1OTA4N2QwNjA=", "commit": {"author": {"name": "rchaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-03-16T14:33:26Z"}, "committer": {"name": "rchaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-03-20T15:19:52Z"}, "message": "use RefCell and Rc", "tree": {"sha": "1ee036fc385d578d93a2cf71f8e38eb38d81166b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ee036fc385d578d93a2cf71f8e38eb38d81166b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f493a59783f3062eff30613e05436dd59087d060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f493a59783f3062eff30613e05436dd59087d060", "html_url": "https://github.com/rust-lang/rust/commit/f493a59783f3062eff30613e05436dd59087d060", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f493a59783f3062eff30613e05436dd59087d060/comments", "author": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f8553d66ff8aa25e54bc5a5be8550cdfe1ee476", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8553d66ff8aa25e54bc5a5be8550cdfe1ee476", "html_url": "https://github.com/rust-lang/rust/commit/1f8553d66ff8aa25e54bc5a5be8550cdfe1ee476"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "247ec298b00e204e493bff06309720a51e27891b", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f493a59783f3062eff30613e05436dd59087d060/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f493a59783f3062eff30613e05436dd59087d060/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=f493a59783f3062eff30613e05436dd59087d060", "patch": "@@ -192,6 +192,7 @@ pub fn format_expr(\n         ast::ExprKind::Mac(ref mac) => {\n             let should_skip = context\n                 .skip_macro_names\n+                .borrow()\n                 .contains(&context.snippet(mac.node.path.span).to_owned());\n             if should_skip {\n                 None"}, {"sha": "406dc64dccfd2a199de59c931e31dddeaf0a99e9", "filename": "src/rewrite.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f493a59783f3062eff30613e05436dd59087d060/src%2Frewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f493a59783f3062eff30613e05436dd59087d060/src%2Frewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frewrite.rs?ref=f493a59783f3062eff30613e05436dd59087d060", "patch": "@@ -1,6 +1,7 @@\n // A generic trait to abstract the rewriting of an element (of the AST).\n \n use std::cell::RefCell;\n+use std::rc::Rc;\n \n use syntax::parse::ParseSess;\n use syntax::ptr;\n@@ -39,7 +40,7 @@ pub struct RewriteContext<'a> {\n     // Used for `format_snippet`\n     pub(crate) macro_rewrite_failure: RefCell<bool>,\n     pub(crate) report: FormatReport,\n-    pub skip_macro_names: Vec<String>,\n+    pub skip_macro_names: Rc<RefCell<Vec<String>>>,\n }\n \n impl<'a> RewriteContext<'a> {"}, {"sha": "4b1bd5bc55ec60d9bd179b279ac1b9a07c9f25ac", "filename": "src/visitor.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f493a59783f3062eff30613e05436dd59087d060/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f493a59783f3062eff30613e05436dd59087d060/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=f493a59783f3062eff30613e05436dd59087d060", "patch": "@@ -1,4 +1,5 @@\n use std::cell::RefCell;\n+use std::rc::Rc;\n \n use syntax::parse::{token, ParseSess};\n use syntax::source_map::{self, BytePos, Pos, SourceMap, Span};\n@@ -67,7 +68,7 @@ pub struct FmtVisitor<'a> {\n     pub skipped_range: Vec<(usize, usize)>,\n     pub macro_rewrite_failure: bool,\n     pub(crate) report: FormatReport,\n-    pub skip_macro_names: Vec<String>,\n+    pub skip_macro_names: Rc<RefCell<Vec<String>>>,\n }\n \n impl<'a> Drop for FmtVisitor<'a> {\n@@ -441,7 +442,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                 self.push_rewrite(item.span, rewrite);\n             }\n         };\n-        self.skip_macro_names.clear();\n+        self.skip_macro_names.borrow_mut().clear();\n     }\n \n     pub fn visit_trait_item(&mut self, ti: &ast::TraitItem) {\n@@ -620,7 +621,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             skipped_range: vec![],\n             macro_rewrite_failure: false,\n             report,\n-            skip_macro_names: vec![],\n+            skip_macro_names: Rc::new(RefCell::new(vec![])),\n         }\n     }\n \n@@ -846,7 +847,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                             if let token::Token::Ident(_, _) = token {\n                                 // FIXME ident.span.lo() and ident.span.hi() are 0\n                                 let macro_name = self.get_context().snippet(span).to_owned();\n-                                self.skip_macro_names.push(macro_name);\n+                                self.skip_macro_names.borrow_mut().push(macro_name);\n                             }\n                         }\n                     }"}]}