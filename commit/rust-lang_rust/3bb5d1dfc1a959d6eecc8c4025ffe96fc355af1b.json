{"sha": "3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "node_id": "C_kwDOAAsO6NoAKDNiYjVkMWRmYzFhOTU5ZDZlZWNjOGM0MDI1ZmZlOTZmYzM1NWFmMWI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-29T11:01:51Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-17T20:42:03Z"}, "message": "Delay a bug when overwriting fed value.", "tree": {"sha": "6ecb8a485ea30961dc55d67e892ebf3594e5a52c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ecb8a485ea30961dc55d67e892ebf3594e5a52c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "html_url": "https://github.com/rust-lang/rust/commit/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "222acaa23e2c0e09687b04e3243fad18f4909f30", "url": "https://api.github.com/repos/rust-lang/rust/commits/222acaa23e2c0e09687b04e3243fad18f4909f30", "html_url": "https://github.com/rust-lang/rust/commit/222acaa23e2c0e09687b04e3243fad18f4909f30"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "17984bf7c4c9f1a21aee3e70714bfb0ae3c5885e", "filename": "compiler/rustc_middle/src/query/plumbing.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs?ref=3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "patch": "@@ -533,12 +533,20 @@ macro_rules! define_feedable {\n                             let (value_hash, old_hash): (Fingerprint, Fingerprint) = tcx.with_stable_hashing_context(|mut hcx|\n                                 (hasher(&mut hcx, &value), hasher(&mut hcx, &old))\n                             );\n-                            assert_eq!(\n-                                old_hash, value_hash,\n-                                \"Trying to feed an already recorded value for query {} key={key:?}:\\nold value: {old:?}\\nnew value: {value:?}\",\n-                                stringify!($name),\n-                            )\n+                            if old_hash != value_hash {\n+                                // We have an inconsistency. This can happen if one of the two\n+                                // results is tainted by errors. In this case, delay a bug to\n+                                // ensure compilation is doomed, and keep the `old` value.\n+                                tcx.sess.delay_span_bug(DUMMY_SP, format!(\n+                                    \"Trying to feed an already recorded value for query {} key={key:?}:\\n\\\n+                                    old value: {old:?}\\nnew value: {value:?}\",\n+                                    stringify!($name),\n+                                ));\n+                            }\n                         } else {\n+                            // The query is `no_hash`, so we have no way to perform a sanity check.\n+                            // If feeding the same value multiple times needs to be supported,\n+                            // the query should not be marked `no_hash`.\n                             bug!(\n                                 \"Trying to feed an already recorded value for query {} key={key:?}:\\nold value: {old:?}\\nnew value: {value:?}\",\n                                 stringify!($name),"}, {"sha": "730e4c8d30db35ec1d2d6182fdf27ae067c6c1e6", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "patch": "@@ -433,16 +433,22 @@ where\n                 (hasher(&mut hcx, &cached_result), hasher(&mut hcx, &result))\n             });\n             let formatter = query.format_value();\n-            debug_assert_eq!(\n-                old_hash,\n-                new_hash,\n-                \"Computed query value for {:?}({:?}) is inconsistent with fed value,\\n\\\n-                computed={:#?}\\nfed={:#?}\",\n-                query.dep_kind(),\n-                key,\n-                formatter(&result),\n-                formatter(&cached_result),\n-            );\n+            if old_hash != new_hash {\n+                // We have an inconsistency. This can happen if one of the two\n+                // results is tainted by errors. In this case, delay a bug to\n+                // ensure compilation is doomed.\n+                qcx.dep_context().sess().delay_span_bug(\n+                    DUMMY_SP,\n+                    format!(\n+                        \"Computed query value for {:?}({:?}) is inconsistent with fed value,\\n\\\n+                        computed={:#?}\\nfed={:#?}\",\n+                        query.dep_kind(),\n+                        key,\n+                        formatter(&result),\n+                        formatter(&cached_result),\n+                    ),\n+                );\n+            }\n         }\n     }\n     job_owner.complete(cache, result, dep_node_index);"}, {"sha": "ca7b12e9e627b89b686065098e7cdc7361e81015", "filename": "tests/incremental/const-generic-type-cycle.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b/tests%2Fincremental%2Fconst-generic-type-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b/tests%2Fincremental%2Fconst-generic-type-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fincremental%2Fconst-generic-type-cycle.rs?ref=3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "patch": "@@ -3,6 +3,7 @@\n //\n // compile-flags: -Zincremental-ignore-spans\n // revisions: cpass cfail\n+// error-pattern: cycle detected when computing type of `Bar::N`\n \n #![feature(trait_alias)]\n #![crate_type=\"lib\"]"}]}