{"sha": "43502adf071392df3dd74f019f6973d4b757e7d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNTAyYWRmMDcxMzkyZGYzZGQ3NGYwMTlmNjk3M2Q0Yjc1N2U3ZDc=", "commit": {"author": {"name": "econoplas", "email": "econoplas@gmail.com", "date": "2015-05-25T13:42:16Z"}, "committer": {"name": "econoplas", "email": "econoplas@gmail.com", "date": "2015-05-25T13:42:16Z"}, "message": "- Fix regression of literal out of range check for negative i64 values which was introduced by commit 7b1916d25347913fce3e336517ef22025ccd875f.\n- Add missing test cases to test/compile-fail/lint-type-overflow.rs which would have detected the regression.", "tree": {"sha": "d7bf12485591f2e6de6fa5ac7f276b6052a2ef36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7bf12485591f2e6de6fa5ac7f276b6052a2ef36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43502adf071392df3dd74f019f6973d4b757e7d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43502adf071392df3dd74f019f6973d4b757e7d7", "html_url": "https://github.com/rust-lang/rust/commit/43502adf071392df3dd74f019f6973d4b757e7d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43502adf071392df3dd74f019f6973d4b757e7d7/comments", "author": {"login": "econoplas", "id": 146786, "node_id": "MDQ6VXNlcjE0Njc4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/146786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/econoplas", "html_url": "https://github.com/econoplas", "followers_url": "https://api.github.com/users/econoplas/followers", "following_url": "https://api.github.com/users/econoplas/following{/other_user}", "gists_url": "https://api.github.com/users/econoplas/gists{/gist_id}", "starred_url": "https://api.github.com/users/econoplas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/econoplas/subscriptions", "organizations_url": "https://api.github.com/users/econoplas/orgs", "repos_url": "https://api.github.com/users/econoplas/repos", "events_url": "https://api.github.com/users/econoplas/events{/privacy}", "received_events_url": "https://api.github.com/users/econoplas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "econoplas", "id": 146786, "node_id": "MDQ6VXNlcjE0Njc4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/146786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/econoplas", "html_url": "https://github.com/econoplas", "followers_url": "https://api.github.com/users/econoplas/followers", "following_url": "https://api.github.com/users/econoplas/following{/other_user}", "gists_url": "https://api.github.com/users/econoplas/gists{/gist_id}", "starred_url": "https://api.github.com/users/econoplas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/econoplas/subscriptions", "organizations_url": "https://api.github.com/users/econoplas/orgs", "repos_url": "https://api.github.com/users/econoplas/repos", "events_url": "https://api.github.com/users/econoplas/events{/privacy}", "received_events_url": "https://api.github.com/users/econoplas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bc0bf2586952350128b5abf94ae52a80c61efb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bc0bf2586952350128b5abf94ae52a80c61efb2", "html_url": "https://github.com/rust-lang/rust/commit/2bc0bf2586952350128b5abf94ae52a80c61efb2"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "50fdeb391056f7004d3cd3af2afccd794011f33f", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/43502adf071392df3dd74f019f6973d4b757e7d7/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43502adf071392df3dd74f019f6973d4b757e7d7/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=43502adf071392df3dd74f019f6973d4b757e7d7", "patch": "@@ -203,10 +203,12 @@ impl LintPass for TypeLimits {\n                                 } else {\n                                     t\n                                 };\n-                                let (min, max) = int_ty_range(int_type);\n+                                let (_, max) = int_ty_range(int_type);\n                                 let negative = self.negated_expr_id == e.id;\n \n-                                if (negative && min != i64::MIN && v > -min as u64) ||\n+                                // Detect literal value out of range [min, max] inclusive\n+                                // avoiding use of -min to prevent overflow/panic\n+                                if (negative && v > max as u64 + 1) ||\n                                    (!negative && v > max as u64) {\n                                     cx.span_lint(OVERFLOWING_LITERALS, e.span,\n                                                  &*format!(\"literal out of range for {:?}\", t));"}, {"sha": "eb5b77f7a45a352a3d7fa6a0287e26e7ff188cf0", "filename": "src/test/compile-fail/lint-type-overflow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43502adf071392df3dd74f019f6973d4b757e7d7/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43502adf071392df3dd74f019f6973d4b757e7d7/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs?ref=43502adf071392df3dd74f019f6973d4b757e7d7", "patch": "@@ -52,6 +52,8 @@ fn main() {\n     let x = 9223372036854775808_i64; //~ error: literal out of range for i64\n     let x = -9223372036854775808_i64; // should be OK\n     let x = 18446744073709551615_i64; //~ error: literal out of range for i64\n+    let x: i64 = -9223372036854775809; //~ error: literal out of range for i64\n+    let x = -9223372036854775809_i64; //~ error: literal out of range for i64\n \n     let x = -3.40282348e+38_f32; //~ error: literal out of range for f32\n     let x =  3.40282348e+38_f32; //~ error: literal out of range for f32"}]}