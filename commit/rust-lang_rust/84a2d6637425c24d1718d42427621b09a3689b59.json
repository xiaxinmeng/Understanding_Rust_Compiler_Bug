{"sha": "84a2d6637425c24d1718d42427621b09a3689b59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YTJkNjYzNzQyNWMyNGQxNzE4ZDQyNDI3NjIxYjA5YTM2ODliNTk=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-11-26T23:56:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-26T23:56:22Z"}, "message": "Rollup merge of #66779 - guanqun:reorder-funcs, r=Dylan-DPC\n\nfollow the same function order in the trait\n\nWith this change, the function order in both traits and implementation matches.\n\nAnd this fix removes several warnings in IDE.", "tree": {"sha": "7a3ca98a5b4355c55c3e6644fcf54a7eba5d10b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a3ca98a5b4355c55c3e6644fcf54a7eba5d10b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84a2d6637425c24d1718d42427621b09a3689b59", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd3bumCRBK7hj4Ov3rIwAAdHIIAAx3aY/XN/s6QxydNVCMmBKh\nBq2IHLeRoBQNymqeKnqQ4imLd5/rJafg8VEsWmFhcTqVaET4S3AsfNL5D87smBXB\nISZb6IPYFeXzFXmlxDVVDkpMLSwrW2ihzLXF3yZzu3tlfGET919Uf7RtBeHnJwo1\n93nwhXznQ60OTII8wDJVHqG9P+P/fjRb1RaHbExU5xMqThQOu/LAzPl6+adNCAEU\n96herr4adDTeBJLIIRrJkJ2iQhFJk/PtIzJyb8dqTw30xE3/FvJj3ocOJn/pISz4\n8vxSGo7W8+fjhOiD3exTBHjTDPZjQKbcUEJOnuLTcWa23QdY/KvbL+JNhex4OFw=\n=ijs/\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a3ca98a5b4355c55c3e6644fcf54a7eba5d10b3\nparent 339d717776e43a7c03899172cb0accf58e4457bf\nparent 55d725884b1fb62cbec038d8633bd40c39cc896f\nauthor Tyler Mandry <tmandry@gmail.com> 1574812582 -0600\ncommitter GitHub <noreply@github.com> 1574812582 -0600\n\nRollup merge of #66779 - guanqun:reorder-funcs, r=Dylan-DPC\n\nfollow the same function order in the trait\n\nWith this change, the function order in both traits and implementation matches.\n\nAnd this fix removes several warnings in IDE.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84a2d6637425c24d1718d42427621b09a3689b59", "html_url": "https://github.com/rust-lang/rust/commit/84a2d6637425c24d1718d42427621b09a3689b59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84a2d6637425c24d1718d42427621b09a3689b59/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "339d717776e43a7c03899172cb0accf58e4457bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/339d717776e43a7c03899172cb0accf58e4457bf", "html_url": "https://github.com/rust-lang/rust/commit/339d717776e43a7c03899172cb0accf58e4457bf"}, {"sha": "55d725884b1fb62cbec038d8633bd40c39cc896f", "url": "https://api.github.com/repos/rust-lang/rust/commits/55d725884b1fb62cbec038d8633bd40c39cc896f", "html_url": "https://github.com/rust-lang/rust/commit/55d725884b1fb62cbec038d8633bd40c39cc896f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "eea3dc39d345ea3ea6aa8c35b5aad8e2b5cd747b", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/84a2d6637425c24d1718d42427621b09a3689b59/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a2d6637425c24d1718d42427621b09a3689b59/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=84a2d6637425c24d1718d42427621b09a3689b59", "patch": "@@ -464,9 +464,9 @@ impl<T: PartialOrd> PartialOrd for Reverse<T> {\n     #[inline]\n     fn le(&self, other: &Self) -> bool { other.0 <= self.0 }\n     #[inline]\n-    fn ge(&self, other: &Self) -> bool { other.0 >= self.0 }\n-    #[inline]\n     fn gt(&self, other: &Self) -> bool { other.0 > self.0 }\n+    #[inline]\n+    fn ge(&self, other: &Self) -> bool { other.0 >= self.0 }\n }\n \n #[stable(feature = \"reverse_cmp_key\", since = \"1.19.0\")]\n@@ -1176,9 +1176,9 @@ mod impls {\n         #[inline]\n         fn le(&self, other: & &B) -> bool { PartialOrd::le(*self, *other) }\n         #[inline]\n-        fn ge(&self, other: & &B) -> bool { PartialOrd::ge(*self, *other) }\n-        #[inline]\n         fn gt(&self, other: & &B) -> bool { PartialOrd::gt(*self, *other) }\n+        #[inline]\n+        fn ge(&self, other: & &B) -> bool { PartialOrd::ge(*self, *other) }\n     }\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     impl<A: ?Sized> Ord for &A where A: Ord {\n@@ -1208,9 +1208,9 @@ mod impls {\n         #[inline]\n         fn le(&self, other: &&mut B) -> bool { PartialOrd::le(*self, *other) }\n         #[inline]\n-        fn ge(&self, other: &&mut B) -> bool { PartialOrd::ge(*self, *other) }\n-        #[inline]\n         fn gt(&self, other: &&mut B) -> bool { PartialOrd::gt(*self, *other) }\n+        #[inline]\n+        fn ge(&self, other: &&mut B) -> bool { PartialOrd::ge(*self, *other) }\n     }\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     impl<A: ?Sized> Ord for &mut A where A: Ord {"}]}