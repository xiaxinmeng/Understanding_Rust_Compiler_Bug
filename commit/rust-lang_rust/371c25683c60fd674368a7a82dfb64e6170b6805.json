{"sha": "371c25683c60fd674368a7a82dfb64e6170b6805", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MWMyNTY4M2M2MGZkNjc0MzY4YTdhODJkZmI2NGU2MTcwYjY4MDU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-31T00:44:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-31T18:00:47Z"}, "message": "Break methods in obj types.", "tree": {"sha": "1b43e35069161e8d681b61c43447bf1319f46610", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b43e35069161e8d681b61c43447bf1319f46610"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/371c25683c60fd674368a7a82dfb64e6170b6805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/371c25683c60fd674368a7a82dfb64e6170b6805", "html_url": "https://github.com/rust-lang/rust/commit/371c25683c60fd674368a7a82dfb64e6170b6805", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/371c25683c60fd674368a7a82dfb64e6170b6805/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1676c6744643cf7169250fbba242d65eb73edd8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1676c6744643cf7169250fbba242d65eb73edd8a", "html_url": "https://github.com/rust-lang/rust/commit/1676c6744643cf7169250fbba242d65eb73edd8a"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "a3592b094cb32f0fe8cc30eab80401272ae18163", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/371c25683c60fd674368a7a82dfb64e6170b6805/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/371c25683c60fd674368a7a82dfb64e6170b6805/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=371c25683c60fd674368a7a82dfb64e6170b6805", "patch": "@@ -235,6 +235,7 @@ fn print_type(ps s, &@ast::ty ty) {\n             head(s, \"obj\");\n             bopen(s);\n             for (ast::ty_method m in methods) {\n+                hardbreak(s.s);\n                 cbox(s.s, indent_unit);\n                 print_ty_fn(s, m.proto, option::some[str](m.ident),\n                             m.inputs, m.output, m.cf);\n@@ -1045,6 +1046,7 @@ fn print_string(ps s, str st) {\n fn print_ty_fn(ps s, ast::proto proto, option::t[str] id,\n                vec[ast::ty_arg] inputs, @ast::ty output,\n                ast::controlflow cf) {\n+    ibox(s.s, indent_unit);\n     if (proto == ast::proto_fn) {word(s.s, \"fn\");}\n     else {word(s.s, \"iter\");}\n     alt (id) {\n@@ -1074,6 +1076,7 @@ fn print_ty_fn(ps s, ast::proto proto, option::t[str] id,\n         }\n         end(s.s);\n     }\n+    end(s.s);\n }\n \n fn next_comment(ps s) -> option::t[lexer::cmnt] {"}]}