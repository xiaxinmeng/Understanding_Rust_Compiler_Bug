{"sha": "d751bd08bfa36bd8abdcbb4fa466022720094b7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NTFiZDA4YmZhMzZiZDhhYmRjYmI0ZmE0NjYwMjI3MjAwOTRiN2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-06T08:54:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-06T08:57:16Z"}, "message": "cleanup", "tree": {"sha": "f514f0f74b4da150dc6086438879731a13ef74e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f514f0f74b4da150dc6086438879731a13ef74e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d751bd08bfa36bd8abdcbb4fa466022720094b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d751bd08bfa36bd8abdcbb4fa466022720094b7d", "html_url": "https://github.com/rust-lang/rust/commit/d751bd08bfa36bd8abdcbb4fa466022720094b7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d751bd08bfa36bd8abdcbb4fa466022720094b7d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e4a542cfb366898a4d53701c50ae4d1732d7c53", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4a542cfb366898a4d53701c50ae4d1732d7c53", "html_url": "https://github.com/rust-lang/rust/commit/0e4a542cfb366898a4d53701c50ae4d1732d7c53"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "3ec8d3b60b646b13227a02ff7870bafa379a35b8", "filename": "crates/ra_arena/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_arena%2Fsrc%2Flib.rs?ref=d751bd08bfa36bd8abdcbb4fa466022720094b7d", "patch": "@@ -79,7 +79,7 @@ impl<ID: ArenaId, T> Arena<ID, T> {\n         self.data.push(value);\n         ID::from_raw(id)\n     }\n-    pub fn iter(&self) -> impl Iterator<Item = (ID, &T)> {\n+    pub fn iter(&self) -> impl Iterator<Item = (ID, &T)> + ExactSizeIterator {\n         self.data.iter().enumerate().map(|(idx, value)| (ID::from_raw(RawId(idx as u32)), value))\n     }\n }"}, {"sha": "9a38d43d2aea6cbd258dc63e8dde1e9d9bc26557", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=d751bd08bfa36bd8abdcbb4fa466022720094b7d", "patch": "@@ -269,7 +269,7 @@ fn main_loop_inner(\n             && pending_libraries.is_empty()\n             && in_flight_libraries == 0\n         {\n-            let n_packages: usize = state.workspaces.iter().map(|it| it.count()).sum();\n+            let n_packages: usize = state.workspaces.iter().map(|it| it.n_packages()).sum();\n             if state.options.show_workspace_loaded {\n                 let msg = format!(\"workspace loaded, {} rust packages\", n_packages);\n                 show_message(req::MessageType::Info, msg, msg_sender);"}, {"sha": "b57cdf925a74694c209065c7d4700dd72d2ef555", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=d751bd08bfa36bd8abdcbb4fa466022720094b7d", "patch": "@@ -211,7 +211,7 @@ impl WorldSnapshot {\n         } else {\n             res.push_str(\"workspaces:\\n\");\n             for w in self.workspaces.iter() {\n-                res += &format!(\"{} packages loaded\\n\", w.count());\n+                res += &format!(\"{} packages loaded\\n\", w.n_packages());\n             }\n         }\n         res.push_str(\"\\nanalysis:\\n\");"}, {"sha": "712d8818f8a61262ecb5ff313214c8708351f807", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=d751bd08bfa36bd8abdcbb4fa466022720094b7d", "patch": "@@ -167,7 +167,7 @@ impl CargoWorkspace {\n         Ok(CargoWorkspace { packages, targets, workspace_root: meta.workspace_root })\n     }\n \n-    pub fn packages<'a>(&'a self) -> impl Iterator<Item = Package> + 'a {\n+    pub fn packages<'a>(&'a self) -> impl Iterator<Item = Package> + ExactSizeIterator + 'a {\n         self.packages.iter().map(|(id, _pkg)| id)\n     }\n "}, {"sha": "8e81396d445ac7d62fcffe41accd28aca96e11e1", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=d751bd08bfa36bd8abdcbb4fa466022720094b7d", "patch": "@@ -112,8 +112,7 @@ impl ProjectWorkspace {\n                 roots\n             }\n             ProjectWorkspace::Cargo { cargo, sysroot } => {\n-                let mut roots =\n-                    Vec::with_capacity(cargo.packages().count() + sysroot.crates().count());\n+                let mut roots = Vec::with_capacity(cargo.packages().len() + sysroot.crates().len());\n                 for pkg in cargo.packages() {\n                     let root = pkg.root(&cargo).to_path_buf();\n                     let member = pkg.is_member(&cargo);\n@@ -127,10 +126,12 @@ impl ProjectWorkspace {\n         }\n     }\n \n-    pub fn count(&self) -> usize {\n+    pub fn n_packages(&self) -> usize {\n         match self {\n             ProjectWorkspace::Json { project } => project.crates.len(),\n-            ProjectWorkspace::Cargo { cargo, .. } => cargo.packages().count(),\n+            ProjectWorkspace::Cargo { cargo, sysroot } => {\n+                cargo.packages().len() + sysroot.crates().len()\n+            }\n         }\n     }\n "}, {"sha": "3f34d51ccb9b8df58706297094fad369c1008ef1", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d751bd08bfa36bd8abdcbb4fa466022720094b7d/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=d751bd08bfa36bd8abdcbb4fa466022720094b7d", "patch": "@@ -28,7 +28,7 @@ impl Sysroot {\n         self.by_name(\"std\")\n     }\n \n-    pub fn crates<'a>(&'a self) -> impl Iterator<Item = SysrootCrate> + 'a {\n+    pub fn crates<'a>(&'a self) -> impl Iterator<Item = SysrootCrate> + ExactSizeIterator + 'a {\n         self.crates.iter().map(|(id, _data)| id)\n     }\n "}]}