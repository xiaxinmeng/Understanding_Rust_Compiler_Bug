{"sha": "2431540b62e87ec03aaf9e61c139cd1931546283", "node_id": "C_kwDOAAsO6NoAKDI0MzE1NDBiNjJlODdlYzAzYWFmOWU2MWMxMzljZDE5MzE1NDYyODM", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-09-25T12:06:29Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-10-18T15:50:56Z"}, "message": "Remove unused enum variant", "tree": {"sha": "b35d6a15833ef9480fc043ad9662f28cac1dcf5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b35d6a15833ef9480fc043ad9662f28cac1dcf5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2431540b62e87ec03aaf9e61c139cd1931546283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2431540b62e87ec03aaf9e61c139cd1931546283", "html_url": "https://github.com/rust-lang/rust/commit/2431540b62e87ec03aaf9e61c139cd1931546283", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2431540b62e87ec03aaf9e61c139cd1931546283/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b02f2982e72ceca83965ac0bd19ffed196110758", "url": "https://api.github.com/repos/rust-lang/rust/commits/b02f2982e72ceca83965ac0bd19ffed196110758", "html_url": "https://github.com/rust-lang/rust/commit/b02f2982e72ceca83965ac0bd19ffed196110758"}], "stats": {"total": 25, "additions": 1, "deletions": 24}, "files": [{"sha": "2173ff1f9ab035823c013e08abc3d757ea9602d3", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2431540b62e87ec03aaf9e61c139cd1931546283/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2431540b62e87ec03aaf9e61c139cd1931546283/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=2431540b62e87ec03aaf9e61c139cd1931546283", "patch": "@@ -386,21 +386,6 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n \n                         self.report_placeholder_failure(sup_origin, sub_r, sup_r).emit();\n                     }\n-\n-                    RegionResolutionError::MemberConstraintFailure {\n-                        hidden_ty,\n-                        member_region,\n-                        span,\n-                    } => {\n-                        let hidden_ty = self.resolve_vars_if_possible(hidden_ty);\n-                        unexpected_hidden_region_diagnostic(\n-                            self.tcx,\n-                            span,\n-                            hidden_ty,\n-                            member_region,\n-                        )\n-                        .emit();\n-                    }\n                 }\n             }\n         }\n@@ -438,8 +423,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             RegionResolutionError::GenericBoundFailure(..) => true,\n             RegionResolutionError::ConcreteFailure(..)\n             | RegionResolutionError::SubSupConflict(..)\n-            | RegionResolutionError::UpperBoundUniverseConflict(..)\n-            | RegionResolutionError::MemberConstraintFailure { .. } => false,\n+            | RegionResolutionError::UpperBoundUniverseConflict(..) => false,\n         };\n \n         let mut errors = if errors.iter().all(|e| is_bound_failure(e)) {\n@@ -454,7 +438,6 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             RegionResolutionError::GenericBoundFailure(ref sro, _, _) => sro.span(),\n             RegionResolutionError::SubSupConflict(_, ref rvo, _, _, _, _) => rvo.span(),\n             RegionResolutionError::UpperBoundUniverseConflict(_, ref rvo, _, _, _) => rvo.span(),\n-            RegionResolutionError::MemberConstraintFailure { span, .. } => span,\n         });\n         errors\n     }"}, {"sha": "4c9dcab26b14f073e0a7ecf578b5d4b5c13d3ec1", "filename": "compiler/rustc_infer/src/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2431540b62e87ec03aaf9e61c139cd1931546283/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2431540b62e87ec03aaf9e61c139cd1931546283/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=2431540b62e87ec03aaf9e61c139cd1931546283", "patch": "@@ -19,7 +19,6 @@ use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_middle::ty::{ReEarlyBound, ReEmpty, ReErased, ReFree, ReStatic};\n use rustc_middle::ty::{ReLateBound, RePlaceholder, ReVar};\n use rustc_middle::ty::{Region, RegionVid};\n-use rustc_span::Span;\n use std::fmt;\n \n /// This function performs lexical region resolution given a complete\n@@ -108,11 +107,6 @@ pub enum RegionResolutionError<'tcx> {\n         SubregionOrigin<'tcx>, // cause of the constraint\n         Region<'tcx>,          // the placeholder `'b`\n     ),\n-\n-    /// Indicates a failure of a `MemberConstraint`. These arise during\n-    /// impl trait processing explicitly -- basically, the impl trait's hidden type\n-    /// included some region that it was not supposed to.\n-    MemberConstraintFailure { span: Span, hidden_ty: Ty<'tcx>, member_region: Region<'tcx> },\n }\n \n struct RegionAndOrigin<'tcx> {"}]}