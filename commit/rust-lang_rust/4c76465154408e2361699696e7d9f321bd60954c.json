{"sha": "4c76465154408e2361699696e7d9f321bd60954c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNzY0NjUxNTQ0MDhlMjM2MTY5OTY5NmU3ZDlmMzIxYmQ2MDk1NGM=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-06-01T05:44:27Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-06-01T05:44:27Z"}, "message": "Merge pull request #68 from Manishearth/macro_expn\n\nmacro expn detection in mut_mut.rs", "tree": {"sha": "090db2e00d769632cde41f30cab63125d44d3df7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/090db2e00d769632cde41f30cab63125d44d3df7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c76465154408e2361699696e7d9f321bd60954c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c76465154408e2361699696e7d9f321bd60954c", "html_url": "https://github.com/rust-lang/rust/commit/4c76465154408e2361699696e7d9f321bd60954c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c76465154408e2361699696e7d9f321bd60954c/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b99fab8162a13b49b68a2105520ab0645c51897e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b99fab8162a13b49b68a2105520ab0645c51897e", "html_url": "https://github.com/rust-lang/rust/commit/b99fab8162a13b49b68a2105520ab0645c51897e"}, {"sha": "cd2e621c60b897a2f37fab36bc357da30aa9cc54", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2e621c60b897a2f37fab36bc357da30aa9cc54", "html_url": "https://github.com/rust-lang/rust/commit/cd2e621c60b897a2f37fab36bc357da30aa9cc54"}], "stats": {"total": 60, "additions": 54, "deletions": 6}, "files": [{"sha": "e1308fb9cb894a901b5f73ec8e056faa11ccf47e", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c76465154408e2361699696e7d9f321bd60954c/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4c76465154408e2361699696e7d9f321bd60954c/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=4c76465154408e2361699696e7d9f321bd60954c", "patch": "@@ -17,3 +17,6 @@ plugin = true\n \n [dev-dependencies]\n compiletest_rs = \"*\"\n+regex = \"*\"\n+regex_macros = \"*\"\n+lazy_static = \"*\""}, {"sha": "27d097118fce947aa00c2e0988e01893b9dc3386", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c76465154408e2361699696e7d9f321bd60954c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c76465154408e2361699696e7d9f321bd60954c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4c76465154408e2361699696e7d9f321bd60954c", "patch": "@@ -1,6 +1,5 @@\n #![feature(plugin_registrar, box_syntax)]\n #![feature(rustc_private, collections)]\n-\n #![allow(unused_imports)]\n \n #[macro_use]"}, {"sha": "a4c2d3932a3f03b3e7153e2380036b15f7bad8b7", "filename": "src/mut_mut.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c76465154408e2361699696e7d9f321bd60954c/src%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c76465154408e2361699696e7d9f321bd60954c/src%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmut_mut.rs?ref=4c76465154408e2361699696e7d9f321bd60954c", "patch": "@@ -2,7 +2,7 @@ use syntax::ptr::P;\n use syntax::ast::*;\n use rustc::lint::{Context, LintPass, LintArray, Lint};\n use rustc::middle::ty::{expr_ty, sty, ty_ptr, ty_rptr, mt};\n-use syntax::codemap::ExpnInfo;\n+use syntax::codemap::{BytePos, ExpnInfo, MacroFormat, Span};\n \n declare_lint!(pub MUT_MUT, Warn,\n               \"Warn on usage of double-mut refs, e.g. '&mut &mut ...'\");\n@@ -27,7 +27,7 @@ impl LintPass for MutMut {\n }\n \n fn check_expr_expd(cx: &Context, expr: &Expr, info: Option<&ExpnInfo>) {\n-\tif in_external_macro(info) { return; }\n+\tif in_macro(cx, info) { return; }\n \n \tfn unwrap_addr(expr : &Expr) -> Option<&Expr> {\n \t\tmatch expr.node {\n@@ -51,8 +51,14 @@ fn check_expr_expd(cx: &Context, expr: &Expr, info: Option<&ExpnInfo>) {\n \t})\n }\n \n-fn in_external_macro(info: Option<&ExpnInfo>) -> bool {\n-\tinfo.map_or(false, |i| i.callee.span.is_some())\n+fn in_macro(cx: &Context, opt_info: Option<&ExpnInfo>) -> bool {\n+\topt_info.map_or(false, |info| {\n+\t\tinfo.callee.span.map_or(true, |span| {\n+\t\t\tcx.sess().codemap().span_to_snippet(span).ok().map_or(true, |code| \n+\t\t\t\t!code.starts_with(\"macro_rules\")\n+\t\t\t)\n+\t\t})\n+\t})\n }\n \n fn unwrap_mut(ty : &Ty) -> Option<&Ty> {"}, {"sha": "d7adc067740f4c7abddf6429e164c18df3309d56", "filename": "tests/compile-fail/mut_mut.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c76465154408e2361699696e7d9f321bd60954c/tests%2Fcompile-fail%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c76465154408e2361699696e7d9f321bd60954c/tests%2Fcompile-fail%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmut_mut.rs?ref=4c76465154408e2361699696e7d9f321bd60954c", "patch": "@@ -1,11 +1,18 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n \n+//#![plugin(regex_macros)]\n+//extern crate regex;\n+\n #[deny(mut_mut)]\n fn fun(x : &mut &mut u32) -> bool { //~ERROR\n \t**x > 0\n }\n \n+macro_rules! mut_ptr {\n+\t($p:expr) => { &mut $p }\n+} \n+\n #[deny(mut_mut)]\n #[allow(unused_mut, unused_variables)]\n fn main() {\n@@ -22,4 +29,6 @@ fn main() {\n \t\t\t\t\t\t\t\t\t   //~^^^^ ERROR\n \t\t***y + **x;\n \t}\n+\t\n+\tlet mut z = mut_ptr!(&mut 3u32); //~ERROR\n }"}, {"sha": "6fcf71d38ad2996efed6ca2a7ecdc5ef4eeb75d1", "filename": "tests/compile-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c76465154408e2361699696e7d9f321bd60954c/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c76465154408e2361699696e7d9f321bd60954c/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=4c76465154408e2361699696e7d9f321bd60954c", "patch": "@@ -5,7 +5,7 @@ use std::path::PathBuf;\n fn run_mode(mode: &'static str) {\n     let mut config = compiletest::default_config();\n     let cfg_mode = mode.parse().ok().expect(\"Invalid mode\");\n-    config.target_rustcflags = Some(\"-L target/debug/\".to_string());\n+    config.target_rustcflags = Some(\"-l regex_macros -L target/debug/\".to_string());\n \n     config.mode = cfg_mode;\n     config.src_base = PathBuf::from(format!(\"tests/{}\", mode));"}, {"sha": "32fdea3a3402f0f6774f1c1f6122760336ac25d2", "filename": "tests/run-pass.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4c76465154408e2361699696e7d9f321bd60954c/tests%2Frun-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c76465154408e2361699696e7d9f321bd60954c/tests%2Frun-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass.rs?ref=4c76465154408e2361699696e7d9f321bd60954c", "patch": "@@ -0,0 +1,31 @@\n+#![feature(plugin)]\n+#![plugin(clippy, regex_macros)]\n+\n+#[macro_use]\n+extern crate lazy_static;\n+extern crate regex;\n+\n+use std::collections::HashMap;\n+\n+#[test]\n+#[deny(mut_mut)]\n+fn test_regex() {\n+\tlet pattern = regex!(r\"^(?P<level>[#]+)\\s(?P<title>.+)$\");\n+\tassert!(pattern.is_match(\"# headline\"));\n+}\n+\n+#[test]\n+#[deny(mut_mut)]\n+#[allow(unused_variables, unused_mut)]\n+fn test_lazy_static() {\n+\tlazy_static! {\n+\t\tstatic ref MUT_MAP : HashMap<usize, &'static str> = {\n+\t\t\tlet mut m = HashMap::new();\n+\t\t\tlet mut zero = &mut &mut \"zero\";\n+\t\t\tm.insert(0, \"zero\");\n+\t\t\tm\n+\t\t};\n+\t\tstatic ref MUT_COUNT : usize = MUT_MAP.len();\n+\t}\n+\tassert!(*MUT_COUNT == 1);\n+}"}]}