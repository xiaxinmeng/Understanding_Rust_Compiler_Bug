{"sha": "00b549ad40e0588be0439b58b7796b530bb691d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwYjU0OWFkNDBlMDU4OGJlMDQzOWI1OGI3Nzk2YjUzMGJiNjkxZDY=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-05-03T22:28:02Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-05-03T22:28:48Z"}, "message": "Fixed build for latest nightly (again)", "tree": {"sha": "1af128b6fc16d800b298d538417874936b71ec52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1af128b6fc16d800b298d538417874936b71ec52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00b549ad40e0588be0439b58b7796b530bb691d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00b549ad40e0588be0439b58b7796b530bb691d6", "html_url": "https://github.com/rust-lang/rust/commit/00b549ad40e0588be0439b58b7796b530bb691d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00b549ad40e0588be0439b58b7796b530bb691d6/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ce6c07b1eea0606be94d607881df87c1c7c13c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ce6c07b1eea0606be94d607881df87c1c7c13c", "html_url": "https://github.com/rust-lang/rust/commit/c7ce6c07b1eea0606be94d607881df87c1c7c13c"}], "stats": {"total": 91, "additions": 42, "deletions": 49}, "files": [{"sha": "bc345347dc6a79b4ed6d21fed39048fd75427711", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 32, "deletions": 34, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -125,14 +125,14 @@ impl LintPass for AttrPass {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n     fn check_attribute(&mut self, cx: &LateContext<'a, 'tcx>, attr: &'tcx Attribute) {\n         if let Some(ref items) = attr.meta_item_list() {\n-            if items.is_empty() || attr.name().map_or(true, |n| n != \"deprecated\") {\n+            if items.is_empty() || attr.name() != \"deprecated\" {\n                 return;\n             }\n             for item in items {\n                 if_chain! {\n                     if let NestedMetaItemKind::MetaItem(ref mi) = item.node;\n                     if let MetaItemKind::NameValue(ref lit) = mi.node;\n-                    if mi.ident.name == \"since\";\n+                    if mi.name() == \"since\";\n                     then {\n                         check_semver(cx, item.span, lit);\n                     }\n@@ -149,40 +149,38 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n             ItemExternCrate(_) | ItemUse(_, _) => {\n                 for attr in &item.attrs {\n                     if let Some(ref lint_list) = attr.meta_item_list() {\n-                        if let Some(name) = attr.name() {\n-                            match &*name.as_str() {\n-                                \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n-                                    // whitelist `unused_imports` and `deprecated`\n-                                    for lint in lint_list {\n-                                        if is_word(lint, \"unused_imports\") || is_word(lint, \"deprecated\") {\n-                                            if let ItemUse(_, _) = item.node {\n-                                                return;\n-                                            }\n+                        match &*attr.name().as_str() {\n+                            \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n+                                // whitelist `unused_imports` and `deprecated`\n+                                for lint in lint_list {\n+                                    if is_word(lint, \"unused_imports\") || is_word(lint, \"deprecated\") {\n+                                        if let ItemUse(_, _) = item.node {\n+                                            return;\n                                         }\n                                     }\n-                                    let line_span = last_line_of_span(cx, attr.span);\n+                                }\n+                                let line_span = last_line_of_span(cx, attr.span);\n \n-                                    if let Some(mut sugg) = snippet_opt(cx, line_span) {\n-                                        if sugg.contains(\"#[\") {\n-                                            span_lint_and_then(\n-                                                cx,\n-                                                USELESS_ATTRIBUTE,\n-                                                line_span,\n-                                                \"useless lint attribute\",\n-                                                |db| {\n-                                                    sugg = sugg.replacen(\"#[\", \"#![\", 1);\n-                                                    db.span_suggestion(\n-                                                        line_span,\n-                                                        \"if you just forgot a `!`, use\",\n-                                                        sugg,\n-                                                    );\n-                                                },\n-                                            );\n-                                        }\n+                                if let Some(mut sugg) = snippet_opt(cx, line_span) {\n+                                    if sugg.contains(\"#[\") {\n+                                        span_lint_and_then(\n+                                            cx,\n+                                            USELESS_ATTRIBUTE,\n+                                            line_span,\n+                                            \"useless lint attribute\",\n+                                            |db| {\n+                                                sugg = sugg.replacen(\"#[\", \"#![\", 1);\n+                                                db.span_suggestion(\n+                                                    line_span,\n+                                                    \"if you just forgot a `!`, use\",\n+                                                    sugg,\n+                                                );\n+                                            },\n+                                        );\n                                     }\n-                                },\n-                                _ => {},\n-                            }\n+                                }\n+                            },\n+                            _ => {},\n                         }\n                     }\n                 }\n@@ -294,7 +292,7 @@ fn check_attrs(cx: &LateContext, span: Span, name: &Name, attrs: &[Attribute]) {\n         }\n \n         if let Some(ref values) = attr.meta_item_list() {\n-            if values.len() != 1 || attr.name().map_or(true, |n| n != \"inline\") {\n+            if values.len() != 1 || attr.name() != \"inline\" {\n                 continue;\n             }\n             if is_word(&values[0], \"always\") {\n@@ -328,7 +326,7 @@ fn check_semver(cx: &LateContext, span: Span, lit: &Lit) {\n \n fn is_word(nmi: &NestedMetaItem, expected: &str) -> bool {\n     if let NestedMetaItemKind::MetaItem(ref mi) = nmi.node {\n-        mi.is_word() && mi.ident.name == expected\n+        mi.is_word() && mi.name() == expected\n     } else {\n         false\n     }"}, {"sha": "840dd4b045f439c01af44c07e0eeb5e92109b33f", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -150,9 +150,9 @@ pub fn check_attrs<'a>(cx: &EarlyContext, valid_idents: &[String], attrs: &'a [a\n                 spans.extend_from_slice(&current_spans);\n                 doc.push_str(&current);\n             }\n-        } else if let Some(name) = attr.name() {\n+        } else {\n             // ignore mix of sugared and non-sugared doc\n-            if name == \"doc\" {\n+            if attr.name() == \"doc\" {\n                 return;\n             }\n         }"}, {"sha": "1679833873b3d534b673a6016cc3a869739dd8ea", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -45,7 +45,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n \n fn check_attrs(cx: &LateContext, name: &Name, attrs: &[Attribute]) {\n     for attr in attrs {\n-        if attr.name().map_or(true, |n| n != \"inline\") {\n+        if attr.name() == \"inline\" {\n             continue;\n         }\n "}, {"sha": "d9a6463641e346e52b805667c55dedf4ae7377b9", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -84,7 +84,7 @@ impl MissingDoc {\n \n         let has_doc = attrs\n             .iter()\n-            .any(|a| a.is_value_str() && a.name().map_or(false, |n| n == \"doc\"));\n+            .any(|a| a.is_value_str() && a.name() == \"doc\");\n         if !has_doc {\n             cx.span_lint(\n                 MISSING_DOCS_IN_PRIVATE_ITEMS,"}, {"sha": "dc78f428ef97c92f43d2c153a9b8bfb2b9503ff1", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -77,13 +77,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                     return;\n                 }\n                 for a in attrs {\n-                    if_chain! {\n-                        if a.meta_item_list().is_some();\n-                        if let Some(name) = a.name();\n-                        if name == \"proc_macro_derive\";\n-                        then {\n-                            return;\n-                        }\n+                    if a.meta_item_list().is_some() && a.name() == \"proc_macro_derive\" {\n+                        return;\n                     }\n                 }\n             },"}, {"sha": "ae77dd7b4a879667db5dfc96750b676e7d2f0b42", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -149,5 +149,5 @@ impl EarlyLintPass for ReturnPass {\n }\n \n fn attr_is_cfg(attr: &ast::Attribute) -> bool {\n-    attr.meta_item_list().is_some() && attr.name().map_or(false, |n| n == \"cfg\")\n+    attr.meta_item_list().is_some() && attr.name() == \"cfg\"\n }"}, {"sha": "fccb47817e0c8bebd2a8afbe0f8e91a1d585cb18", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -463,7 +463,7 @@ fn has_attr(attrs: &[Attribute]) -> bool {\n     attrs.iter().any(|attr| {\n         attr.check_name(\"clippy\") && attr.meta_item_list().map_or(false, |list| {\n             list.len() == 1 && match list[0].node {\n-                ast::NestedMetaItemKind::MetaItem(ref it) => it.ident.name == \"author\",\n+                ast::NestedMetaItemKind::MetaItem(ref it) => it.name() == \"author\",\n                 ast::NestedMetaItemKind::Literal(_) => false,\n             }\n         })"}, {"sha": "58e71705011a29dc36222de48ea50579c0d86c53", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -13,7 +13,7 @@ pub fn file_from_args(\n     args: &[codemap::Spanned<ast::NestedMetaItemKind>],\n ) -> Result<Option<path::PathBuf>, (&'static str, codemap::Span)> {\n     for arg in args.iter().filter_map(|a| a.meta_item()) {\n-        if arg.ident.name == \"conf_file\" {\n+        if arg.name() == \"conf_file\" {\n             return match arg.node {\n                 ast::MetaItemKind::Word | ast::MetaItemKind::List(_) => {\n                     Err((\"`conf_file` must be a named value\", arg.span))"}, {"sha": "65ea11c55f3695401af71342f1dd522e6e9c3dd8", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b549ad40e0588be0439b58b7796b530bb691d6/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=00b549ad40e0588be0439b58b7796b530bb691d6", "patch": "@@ -743,7 +743,7 @@ fn parse_attrs<F: FnMut(u64)>(sess: &Session, attrs: &[ast::Attribute], name: &'\n             continue;\n         }\n         if let Some(ref value) = attr.value_str() {\n-            if attr.name().map_or(false, |n| n == name) {\n+            if attr.name() == name {\n                 if let Ok(value) = FromStr::from_str(&value.as_str()) {\n                     attr::mark_used(attr);\n                     f(value)"}]}