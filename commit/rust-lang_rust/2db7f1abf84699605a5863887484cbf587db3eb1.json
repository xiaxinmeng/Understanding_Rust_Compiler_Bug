{"sha": "2db7f1abf84699605a5863887484cbf587db3eb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYjdmMWFiZjg0Njk5NjA1YTU4NjM4ODc0ODRjYmY1ODdkYjNlYjE=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-05-20T13:46:30Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-05-20T13:46:30Z"}, "message": "Update future-not-send stderr output", "tree": {"sha": "022a619e1ad3ddc2099b631fcf90e36a2f6b83fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/022a619e1ad3ddc2099b631fcf90e36a2f6b83fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2db7f1abf84699605a5863887484cbf587db3eb1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl7FNLYZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf+ljD/49gi9GE7SrtqbfPLDgW8Oj\nno2jAZSknQQTd1UT7+Y0XSyv0qHFoPIB7c9B5qjh3+bSDKnH7pPJ8ybH+X7OVVwJ\nz5Jslk5RsNmQK8wk86z4/ONU5rjn55mH7UW+VuhMHODwIIfEaQu9id8O8JJ9u5bp\n3/FYJDWact3GwJJrAhvoqmzg/6tZtNke6im6UCjfSb+flO6MTKOli4YhtHWB6mvk\nTzSFljtyzGO64sGLBumf49lO7dbs7bnKm6EcO7Qg/bj0HLg0pBLIH5/dvcqDWDe4\nktUgZjdU8WukCA817MDWfi/cChuFUXY5Matn9qHiy1UcDT8TEcGGzaXYF8yWDbmP\njNYfiHy+WEJkAQFIZr6Cd/b9UdCKrivQpUyWoxQ7vLd7YZl3i12JRzn4wN6SED+q\n9mfyiPzbh5+DgmCyT9dpLpzJhRwNDLzKFQKTnWQEJhYoA3VSqw32pcFsx8FFz+JI\n/2TE1R++unIA7gAcgweDz1BATZ72AbUBrJSOboRXYZZLOIIXYWQAfnFa8QwHqy8L\nELC2Q9pf04cgtlpz/qogVGNUguS04ywSnmf/wPiAqwhIuIuaLRRIWYYl2yRdo3Qd\nqTqy0gbPvVduxXvyoROCuB6WWy4qafHXHCCEAbBxr3PGlPpnzxmLwIKs+gR9OXc8\n767PT7Olh/70GZLdlBqc0g==\n=UKtq\n-----END PGP SIGNATURE-----", "payload": "tree 022a619e1ad3ddc2099b631fcf90e36a2f6b83fc\nparent ecd0a67b01e13d7a80d2f64bbfa5da1e568367e5\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1589982390 +0300\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1589982390 +0300\n\nUpdate future-not-send stderr output\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2db7f1abf84699605a5863887484cbf587db3eb1", "html_url": "https://github.com/rust-lang/rust/commit/2db7f1abf84699605a5863887484cbf587db3eb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2db7f1abf84699605a5863887484cbf587db3eb1/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd0a67b01e13d7a80d2f64bbfa5da1e568367e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd0a67b01e13d7a80d2f64bbfa5da1e568367e5", "html_url": "https://github.com/rust-lang/rust/commit/ecd0a67b01e13d7a80d2f64bbfa5da1e568367e5"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "b59dbb3e76c6455ac99d678f4bba6cca14bd7fd6", "filename": "tests/ui/future_not_send.stderr", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2db7f1abf84699605a5863887484cbf587db3eb1/tests%2Fui%2Ffuture_not_send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2db7f1abf84699605a5863887484cbf587db3eb1/tests%2Fui%2Ffuture_not_send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffuture_not_send.stderr?ref=2db7f1abf84699605a5863887484cbf587db3eb1", "patch": "@@ -47,17 +47,32 @@ error: future cannot be sent between threads safely\n   --> $DIR/future_not_send.rs:20:63\n    |\n LL | async fn private_future2(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n-   |                                                               ^^^^\n+   |                                                               ^^^^ future returned by `private_future2` is not `Send`\n    |\n+note: captured value is not `Send`\n+  --> $DIR/future_not_send.rs:20:26\n+   |\n+LL | async fn private_future2(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n+   |                          ^^ has type `std::rc::Rc<[u8]>` which is not `Send`\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n+note: captured value is not `Send`\n+  --> $DIR/future_not_send.rs:20:40\n+   |\n+LL | async fn private_future2(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n+   |                                        ^^^^ has type `&std::cell::Cell<usize>` which is not `Send`\n    = note: `std::cell::Cell<usize>` doesn't implement `std::marker::Sync`\n \n error: future cannot be sent between threads safely\n   --> $DIR/future_not_send.rs:24:43\n    |\n LL | pub async fn public_future2(rc: Rc<[u8]>) {}\n-   |                                           ^\n+   |                                           ^ future returned by `public_future2` is not `Send`\n    |\n+note: captured value is not `Send`\n+  --> $DIR/future_not_send.rs:24:29\n+   |\n+LL | pub async fn public_future2(rc: Rc<[u8]>) {}\n+   |                             ^^ has type `std::rc::Rc<[u8]>` which is not `Send`\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n \n error: future cannot be sent between threads safely\n@@ -117,8 +132,13 @@ error: future cannot be sent between threads safely\n   --> $DIR/future_not_send.rs:66:34\n    |\n LL | async fn unclear_future<T>(t: T) {}\n-   |                                  ^\n+   |                                  ^ future returned by `unclear_future` is not `Send`\n    |\n+note: captured value is not `Send`\n+  --> $DIR/future_not_send.rs:66:28\n+   |\n+LL | async fn unclear_future<T>(t: T) {}\n+   |                            ^ has type `T` which is not `Send`\n    = note: `T` doesn't implement `std::marker::Send`\n \n error: aborting due to 8 previous errors"}]}