{"sha": "0e10e77a7820d08332744d91e44940a2321138c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMTBlNzdhNzgyMGQwODMzMjc0NGQ5MWU0NDk0MGEyMzIxMTM4YzM=", "commit": {"author": {"name": "Han Mertens", "email": "hanmertens@outlook.com", "date": "2020-02-12T20:40:05Z"}, "committer": {"name": "Han Mertens", "email": "hanmertens@outlook.com", "date": "2020-02-12T20:40:05Z"}, "message": "Support unnamed arguments in function pointers\n\nFixes #3089", "tree": {"sha": "b02391e5924309be492197eb21ccf51f5347b9fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b02391e5924309be492197eb21ccf51f5347b9fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e10e77a7820d08332744d91e44940a2321138c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e10e77a7820d08332744d91e44940a2321138c3", "html_url": "https://github.com/rust-lang/rust/commit/0e10e77a7820d08332744d91e44940a2321138c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e10e77a7820d08332744d91e44940a2321138c3/comments", "author": {"login": "hanmertens", "id": 21318961, "node_id": "MDQ6VXNlcjIxMzE4OTYx", "avatar_url": "https://avatars.githubusercontent.com/u/21318961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanmertens", "html_url": "https://github.com/hanmertens", "followers_url": "https://api.github.com/users/hanmertens/followers", "following_url": "https://api.github.com/users/hanmertens/following{/other_user}", "gists_url": "https://api.github.com/users/hanmertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanmertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanmertens/subscriptions", "organizations_url": "https://api.github.com/users/hanmertens/orgs", "repos_url": "https://api.github.com/users/hanmertens/repos", "events_url": "https://api.github.com/users/hanmertens/events{/privacy}", "received_events_url": "https://api.github.com/users/hanmertens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hanmertens", "id": 21318961, "node_id": "MDQ6VXNlcjIxMzE4OTYx", "avatar_url": "https://avatars.githubusercontent.com/u/21318961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanmertens", "html_url": "https://github.com/hanmertens", "followers_url": "https://api.github.com/users/hanmertens/followers", "following_url": "https://api.github.com/users/hanmertens/following{/other_user}", "gists_url": "https://api.github.com/users/hanmertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanmertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanmertens/subscriptions", "organizations_url": "https://api.github.com/users/hanmertens/orgs", "repos_url": "https://api.github.com/users/hanmertens/repos", "events_url": "https://api.github.com/users/hanmertens/events{/privacy}", "received_events_url": "https://api.github.com/users/hanmertens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3da53ab3e75b0486c1b2e4f74babea10992c4747", "url": "https://api.github.com/repos/rust-lang/rust/commits/3da53ab3e75b0486c1b2e4f74babea10992c4747", "html_url": "https://github.com/rust-lang/rust/commit/3da53ab3e75b0486c1b2e4f74babea10992c4747"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4abd61be73e0722c730dd761ff0a132b701b4a9d", "filename": "crates/ra_parser/src/grammar/params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e10e77a7820d08332744d91e44940a2321138c3/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e10e77a7820d08332744d91e44940a2321138c3/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs?ref=0e10e77a7820d08332744d91e44940a2321138c3", "patch": "@@ -115,7 +115,7 @@ fn value_parameter(p: &mut Parser, flavor: Flavor) {\n         // type Foo = fn(Bar::Baz);\n         // type Qux = fn(baz: Bar::Baz);\n         Flavor::FnPointer => {\n-            if p.at(IDENT) && p.nth(1) == T![:] && !p.nth_at(1, T![::]) {\n+            if (p.at(IDENT) || p.at(UNDERSCORE)) && p.nth(1) == T![:] && !p.nth_at(1, T![::]) {\n                 patterns::pattern_single(p);\n                 types::ascription(p);\n             } else {"}]}