{"sha": "483a546e74a55ddae9769475e794ee55d62cfc17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4M2E1NDZlNzRhNTVkZGFlOTc2OTQ3NWU3OTRlZTU1ZDYyY2ZjMTc=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-20T07:34:02Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-20T07:34:02Z"}, "message": "added messages to test error comments", "tree": {"sha": "295f5721d80bbce1407bea90d16af148ad28cc53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/295f5721d80bbce1407bea90d16af148ad28cc53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/483a546e74a55ddae9769475e794ee55d62cfc17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/483a546e74a55ddae9769475e794ee55d62cfc17", "html_url": "https://github.com/rust-lang/rust/commit/483a546e74a55ddae9769475e794ee55d62cfc17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/483a546e74a55ddae9769475e794ee55d62cfc17/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8ca3c6eae160310c310b15002587b1f2579d4e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ca3c6eae160310c310b15002587b1f2579d4e5", "html_url": "https://github.com/rust-lang/rust/commit/e8ca3c6eae160310c310b15002587b1f2579d4e5"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "14f2506ec8b4ad203902523d855bf5fd2be03ec9", "filename": "tests/compile-fail/len_zero.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/483a546e74a55ddae9769475e794ee55d62cfc17/tests%2Fcompile-fail%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/483a546e74a55ddae9769475e794ee55d62cfc17/tests%2Fcompile-fail%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Flen_zero.rs?ref=483a546e74a55ddae9769475e794ee55d62cfc17", "patch": "@@ -5,14 +5,14 @@ struct One;\n \n #[deny(len_without_is_empty)]\n impl One {\n-\tfn len(self: &Self) -> isize { //~ERROR\n+\tfn len(self: &Self) -> isize { //~ERROR Item 'One' has a '.len()' method\n \t\t1\n \t}\n }\n \n #[deny(len_without_is_empty)]\n trait TraitsToo {\n-\tfn len(self: &Self) -> isize; //~ERROR\n+\tfn len(self: &Self) -> isize; //~ERROR Trait 'TraitsToo' has a '.len()' method,\n }\n \n impl TraitsToo for One {\n@@ -39,18 +39,18 @@ impl HasIsEmpty {\n #[deny(len_zero)]\n fn main() {\n \tlet x = [1, 2];\n-\tif x.len() == 0 { //~ERROR\n+\tif x.len() == 0 { //~ERROR Consider replacing the len comparison\n \t\tprintln!(\"This should not happen!\");\n \t}\n \t\n \tlet y = One;\n \t// false positives here\n-\tif y.len()  == 0 { //~ERROR\n+\tif y.len()  == 0 { //~ERROR Consider replacing the len comparison\n \t\tprintln!(\"This should not happen either!\");\n \t}\n \t\n \tlet z : &TraitsToo = &y;\n-\tif z.len() > 0 { //~ERROR\n+\tif z.len() > 0 { //~ERROR Consider replacing the len comparison\n \t\tprintln!(\"Nor should this!\");\n \t}\n }"}]}