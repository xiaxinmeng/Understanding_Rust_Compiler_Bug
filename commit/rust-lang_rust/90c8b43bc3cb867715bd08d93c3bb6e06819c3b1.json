{"sha": "90c8b43bc3cb867715bd08d93c3bb6e06819c3b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYzhiNDNiYzNjYjg2NzcxNWJkMDhkOTNjM2JiNmUwNjgxOWMzYjE=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-09-26T23:10:30Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-10-02T11:13:28Z"}, "message": "BTreeMap: document DrainFilterInner better", "tree": {"sha": "ae2998452de94b4cc58dc52d395f178f1da493b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae2998452de94b4cc58dc52d395f178f1da493b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90c8b43bc3cb867715bd08d93c3bb6e06819c3b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90c8b43bc3cb867715bd08d93c3bb6e06819c3b1", "html_url": "https://github.com/rust-lang/rust/commit/90c8b43bc3cb867715bd08d93c3bb6e06819c3b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90c8b43bc3cb867715bd08d93c3bb6e06819c3b1/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc42fb8e70af6ad63998f4bfbf62451551eda073", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc42fb8e70af6ad63998f4bfbf62451551eda073", "html_url": "https://github.com/rust-lang/rust/commit/fc42fb8e70af6ad63998f4bfbf62451551eda073"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "ee0f525fb15ee957b34f0949e052fc0626278369", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90c8b43bc3cb867715bd08d93c3bb6e06819c3b1/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c8b43bc3cb867715bd08d93c3bb6e06819c3b1/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=90c8b43bc3cb867715bd08d93c3bb6e06819c3b1", "patch": "@@ -1666,10 +1666,14 @@ where\n /// Most of the implementation of DrainFilter, independent of the type\n /// of the predicate, thus also serving for BTreeSet::DrainFilter.\n pub(super) struct DrainFilterInner<'a, K: 'a, V: 'a> {\n+    /// Reference to the length field in the borrowed map, updated live.\n     length: &'a mut usize,\n-    // dormant_root is wrapped in an Option to be able to `take` it.\n+    /// Burried reference to the root field in the borrowed map.\n+    /// Wrapped in `Option` to allow drop handler to `take` it.\n     dormant_root: Option<DormantMutRef<'a, node::Root<K, V>>>,\n-    // cur_leaf_edge is wrapped in an Option because maps without root lack a leaf edge.\n+    /// Contains a leaf edge preceding the next element to be returned, or the last leaf edge.\n+    /// Empty if the map has no root, if iteration went beyond the last leaf edge,\n+    /// or if a panic occurred in the predicate.\n     cur_leaf_edge: Option<Handle<NodeRef<marker::Mut<'a>, K, V, marker::Leaf>, marker::Edge>>,\n }\n "}]}