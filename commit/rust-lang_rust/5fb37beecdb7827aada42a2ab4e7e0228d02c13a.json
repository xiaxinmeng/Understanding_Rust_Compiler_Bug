{"sha": "5fb37beecdb7827aada42a2ab4e7e0228d02c13a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYjM3YmVlY2RiNzgyN2FhZGE0MmEyYWI0ZTdlMDIyOGQwMmMxM2E=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-05-29T11:55:54Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-06-01T05:59:47Z"}, "message": "tests: fix fallout from changing the span of binop errors.", "tree": {"sha": "63f45683a0b5845b7954d5e4d28c496efedd2086", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63f45683a0b5845b7954d5e4d28c496efedd2086"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fb37beecdb7827aada42a2ab4e7e0228d02c13a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb37beecdb7827aada42a2ab4e7e0228d02c13a", "html_url": "https://github.com/rust-lang/rust/commit/5fb37beecdb7827aada42a2ab4e7e0228d02c13a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fb37beecdb7827aada42a2ab4e7e0228d02c13a/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58632f3c1ce2a6a9ff3d92e12d912a073b28414d", "url": "https://api.github.com/repos/rust-lang/rust/commits/58632f3c1ce2a6a9ff3d92e12d912a073b28414d", "html_url": "https://github.com/rust-lang/rust/commit/58632f3c1ce2a6a9ff3d92e12d912a073b28414d"}], "stats": {"total": 43, "additions": 19, "deletions": 24}, "files": [{"sha": "2206234b77744ca670a8cbaa52049cd86172c6b3", "filename": "src/test/ui/impl-trait/equality.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fb37beecdb7827aada42a2ab4e7e0228d02c13a/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5fb37beecdb7827aada42a2ab4e7e0228d02c13a/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr?ref=5fb37beecdb7827aada42a2ab4e7e0228d02c13a", "patch": "@@ -8,10 +8,10 @@ error[E0308]: mismatched types\n               found type `u32`\n \n error[E0277]: the trait bound `u32: std::ops::Add<impl Foo>` is not satisfied\n-  --> $DIR/equality.rs:34:9\n+  --> $DIR/equality.rs:34:11\n    |\n 34 |         n + sum_to(n - 1)\n-   |         ^^^^^^^^^^^^^^^^^ no implementation for `u32 + impl Foo`\n+   |           ^ no implementation for `u32 + impl Foo`\n    |\n    = help: the trait `std::ops::Add<impl Foo>` is not implemented for `u32`\n "}, {"sha": "1faf72cd760b75ebbb01f299320dcde3c907efb3", "filename": "src/test/ui/mismatched_types/binops.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5fb37beecdb7827aada42a2ab4e7e0228d02c13a/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5fb37beecdb7827aada42a2ab4e7e0228d02c13a/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr?ref=5fb37beecdb7827aada42a2ab4e7e0228d02c13a", "patch": "@@ -1,56 +1,56 @@\n error[E0277]: the trait bound `{integer}: std::ops::Add<std::option::Option<{integer}>>` is not satisfied\n-  --> $DIR/binops.rs:12:5\n+  --> $DIR/binops.rs:12:7\n    |\n 12 |     1 + Some(1);\n-   |     ^^^^^^^^^^^ no implementation for `{integer} + std::option::Option<{integer}>`\n+   |       ^ no implementation for `{integer} + std::option::Option<{integer}>`\n    |\n    = help: the trait `std::ops::Add<std::option::Option<{integer}>>` is not implemented for `{integer}`\n \n error[E0277]: the trait bound `usize: std::ops::Sub<std::option::Option<{integer}>>` is not satisfied\n-  --> $DIR/binops.rs:13:5\n+  --> $DIR/binops.rs:13:16\n    |\n 13 |     2 as usize - Some(1);\n-   |     ^^^^^^^^^^^^^^^^^^^^ no implementation for `usize - std::option::Option<{integer}>`\n+   |                ^ no implementation for `usize - std::option::Option<{integer}>`\n    |\n    = help: the trait `std::ops::Sub<std::option::Option<{integer}>>` is not implemented for `usize`\n \n error[E0277]: the trait bound `{integer}: std::ops::Mul<()>` is not satisfied\n-  --> $DIR/binops.rs:14:5\n+  --> $DIR/binops.rs:14:7\n    |\n 14 |     3 * ();\n-   |     ^^^^^^ no implementation for `{integer} * ()`\n+   |       ^ no implementation for `{integer} * ()`\n    |\n    = help: the trait `std::ops::Mul<()>` is not implemented for `{integer}`\n \n error[E0277]: the trait bound `{integer}: std::ops::Div<&str>` is not satisfied\n-  --> $DIR/binops.rs:15:5\n+  --> $DIR/binops.rs:15:7\n    |\n 15 |     4 / \"\";\n-   |     ^^^^^^ no implementation for `{integer} / &str`\n+   |       ^ no implementation for `{integer} / &str`\n    |\n    = help: the trait `std::ops::Div<&str>` is not implemented for `{integer}`\n \n error[E0277]: the trait bound `{integer}: std::cmp::PartialEq<std::string::String>` is not satisfied\n-  --> $DIR/binops.rs:16:5\n+  --> $DIR/binops.rs:16:7\n    |\n 16 |     5 < String::new();\n-   |     ^^^^^^^^^^^^^^^^^ can't compare `{integer}` with `std::string::String`\n+   |       ^ can't compare `{integer}` with `std::string::String`\n    |\n    = help: the trait `std::cmp::PartialEq<std::string::String>` is not implemented for `{integer}`\n \n error[E0277]: the trait bound `{integer}: std::cmp::PartialOrd<std::string::String>` is not satisfied\n-  --> $DIR/binops.rs:16:5\n+  --> $DIR/binops.rs:16:7\n    |\n 16 |     5 < String::new();\n-   |     ^^^^^^^^^^^^^^^^^ can't compare `{integer}` with `std::string::String`\n+   |       ^ can't compare `{integer}` with `std::string::String`\n    |\n    = help: the trait `std::cmp::PartialOrd<std::string::String>` is not implemented for `{integer}`\n \n error[E0277]: the trait bound `{integer}: std::cmp::PartialEq<std::result::Result<{integer}, _>>` is not satisfied\n-  --> $DIR/binops.rs:17:5\n+  --> $DIR/binops.rs:17:7\n    |\n 17 |     6 == Ok(1);\n-   |     ^^^^^^^^^^ can't compare `{integer}` with `std::result::Result<{integer}, _>`\n+   |       ^^ can't compare `{integer}` with `std::result::Result<{integer}, _>`\n    |\n    = help: the trait `std::cmp::PartialEq<std::result::Result<{integer}, _>>` is not implemented for `{integer}`\n "}, {"sha": "0224cef8da123cbc4eaed2ec89cdb5d35414373b", "filename": "src/test/ui/span/multiline-span-simple.stderr", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5fb37beecdb7827aada42a2ab4e7e0228d02c13a/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5fb37beecdb7827aada42a2ab4e7e0228d02c13a/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr?ref=5fb37beecdb7827aada42a2ab4e7e0228d02c13a", "patch": "@@ -1,13 +1,8 @@\n error[E0277]: the trait bound `u32: std::ops::Add<()>` is not satisfied\n-  --> $DIR/multiline-span-simple.rs:23:9\n+  --> $DIR/multiline-span-simple.rs:23:18\n    |\n-23 |       foo(1 as u32 +\n-   |  _________^\n-24 | |\n-25 | |         bar(x,\n-26 | |\n-27 | |             y),\n-   | |______________^ no implementation for `u32 + ()`\n+23 |     foo(1 as u32 +\n+   |                  ^ no implementation for `u32 + ()`\n    |\n    = help: the trait `std::ops::Add<()>` is not implemented for `u32`\n "}]}