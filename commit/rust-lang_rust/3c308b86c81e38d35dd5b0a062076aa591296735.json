{"sha": "3c308b86c81e38d35dd5b0a062076aa591296735", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMzA4Yjg2YzgxZTM4ZDM1ZGQ1YjBhMDYyMDc2YWE1OTEyOTY3MzU=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-22T12:24:17Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-22T12:47:33Z"}, "message": "Remove never_type feature\n\nStablized in rust-lang/rust#65355", "tree": {"sha": "e0db33f6085cda000b323ef6c7f4e4656b9a70b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0db33f6085cda000b323ef6c7f4e4656b9a70b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c308b86c81e38d35dd5b0a062076aa591296735", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl3X2OUACgkQaTCGhp1Q\nZjflMRAAnKsb6A4y0RAThQlc/I3uITpp0FFgUAHqg3rzjTyuwtRAwGoWR6FD4NuO\nHTL7biqDgWvLZsT6doHiYsgBwccj757mqUq3Fcs0mifXH7cEzI+73x6We/gLsVh2\n7dG8Gs1OYHEuIX18HU4d69GJaaYSJW4E+iHispUD0gHXSXVb2i75SuVQsAVg1oHH\n1VQPliN+oUaU8+obTpIyjOzCFw4yHpHVeh6K+YXb866MMe2TuavJuLKsgtSZsaEN\nYabOL3MzoqGWDuUmKff4lciMuqiH5M9v/D3srhQil8xi76zbq4uw7H1G3z4N7dTR\nRsHOMMU8/kAIi63t+IeA4tj0YKooEmNIeYlpfEqQ//MDkm6HfiOntuDhAsBgEnGr\nmcmZTs5u8YdC9M6MKJVNIvklARv5tK4+7lTookeJAGTQNvZKNckFdag+qomQ4Tii\nD2+LrK30Qf41LAchJgD8FKZS9Zh0gYm1RR2WTQHprXNoEHYFeXfqhDl/C4bWgq7L\n/UPwOOiNf6hD4ut7uvy2NGbtmUaQ1cpUiftwk93dSgjjNRJK3l5TS2N949g8gzTX\n2LjME46VTyl39CjfylgU2UiOWk9XbV3qnRrv3PfapWM5zkSzXikkwHNXicf1wb1/\nMvNgNq6f25snUBkLlpphtN9xB1q8znpcKsk3/PxHO4XoD1JOwIE=\n=SHcQ\n-----END PGP SIGNATURE-----", "payload": "tree e0db33f6085cda000b323ef6c7f4e4656b9a70b4\nparent d183bda0be65c3b443f38ea6fc49a15cee579ac4\nauthor flip1995 <hello@philkrones.com> 1574425457 +0100\ncommitter flip1995 <hello@philkrones.com> 1574426853 +0100\n\nRemove never_type feature\n\nStablized in rust-lang/rust#65355\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c308b86c81e38d35dd5b0a062076aa591296735", "html_url": "https://github.com/rust-lang/rust/commit/3c308b86c81e38d35dd5b0a062076aa591296735", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c308b86c81e38d35dd5b0a062076aa591296735/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d183bda0be65c3b443f38ea6fc49a15cee579ac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d183bda0be65c3b443f38ea6fc49a15cee579ac4", "html_url": "https://github.com/rust-lang/rust/commit/d183bda0be65c3b443f38ea6fc49a15cee579ac4"}], "stats": {"total": 75, "additions": 34, "deletions": 41}, "files": [{"sha": "52aca5000c1c3814d232d1d1e101627a913c2b16", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -2,7 +2,6 @@\n \n #![feature(box_syntax)]\n #![feature(box_patterns)]\n-#![feature(never_type)]\n #![feature(rustc_private)]\n #![feature(slice_patterns)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "4df241c9fc39be35b1fe3a00ac017e637ad69e82", "filename": "tests/ui/diverging_sub_expression.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fdiverging_sub_expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fdiverging_sub_expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.rs?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,4 +1,3 @@\n-#![feature(never_type)]\n #![warn(clippy::diverging_sub_expression)]\n #![allow(clippy::match_same_arms, clippy::logic_bug)]\n "}, {"sha": "170e7d92de4acff6b643a1ead8d762e2d61e2d8b", "filename": "tests/ui/diverging_sub_expression.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fdiverging_sub_expression.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fdiverging_sub_expression.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.stderr?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,37 +1,37 @@\n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:21:10\n+  --> $DIR/diverging_sub_expression.rs:20:10\n    |\n LL |     b || diverge();\n    |          ^^^^^^^^^\n    |\n    = note: `-D clippy::diverging-sub-expression` implied by `-D warnings`\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:22:10\n+  --> $DIR/diverging_sub_expression.rs:21:10\n    |\n LL |     b || A.foo();\n    |          ^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:31:26\n+  --> $DIR/diverging_sub_expression.rs:30:26\n    |\n LL |             6 => true || return,\n    |                          ^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:32:26\n+  --> $DIR/diverging_sub_expression.rs:31:26\n    |\n LL |             7 => true || continue,\n    |                          ^^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:35:26\n+  --> $DIR/diverging_sub_expression.rs:34:26\n    |\n LL |             3 => true || diverge(),\n    |                          ^^^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:40:26\n+  --> $DIR/diverging_sub_expression.rs:39:26\n    |\n LL |             _ => true || break,\n    |                          ^^^^^"}, {"sha": "a92063bf80714b92943c8f0771d8840fb63660ed", "filename": "tests/ui/infallible_destructuring_match.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Finfallible_destructuring_match.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Finfallible_destructuring_match.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.fixed?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![feature(exhaustive_patterns, never_type)]\n+#![feature(exhaustive_patterns)]\n #![allow(dead_code, unreachable_code, unused_variables)]\n #![allow(clippy::let_and_return)]\n "}, {"sha": "4dd9e837b6d837cfec4f7f6f5dbe1c9020f0fff4", "filename": "tests/ui/infallible_destructuring_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Finfallible_destructuring_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Finfallible_destructuring_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.rs?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![feature(exhaustive_patterns, never_type)]\n+#![feature(exhaustive_patterns)]\n #![allow(dead_code, unreachable_code, unused_variables)]\n #![allow(clippy::let_and_return)]\n "}, {"sha": "bac05c0931c1563fe6ab350693f1046f1f053cb3", "filename": "tests/ui/must_use_candidates.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fmust_use_candidates.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fmust_use_candidates.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmust_use_candidates.fixed?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-#![feature(never_type)]\n #![allow(unused_mut)]\n #![warn(clippy::must_use_candidate)]\n use std::rc::Rc;"}, {"sha": "df265b6eac9f1fa766d2c28df31949b6dc87e942", "filename": "tests/ui/must_use_candidates.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fmust_use_candidates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fmust_use_candidates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmust_use_candidates.rs?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-#![feature(never_type)]\n #![allow(unused_mut)]\n #![warn(clippy::must_use_candidate)]\n use std::rc::Rc;"}, {"sha": "2f33f5df5f407432b74ca7109b234aa10a12c60c", "filename": "tests/ui/must_use_candidates.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fmust_use_candidates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fmust_use_candidates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmust_use_candidates.stderr?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,31 +1,31 @@\n error: this function could have a `#[must_use]` attribute\n-  --> $DIR/must_use_candidates.rs:12:1\n+  --> $DIR/must_use_candidates.rs:11:1\n    |\n LL | pub fn pure(i: u8) -> u8 {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn pure(i: u8) -> u8`\n    |\n    = note: `-D clippy::must-use-candidate` implied by `-D warnings`\n \n error: this method could have a `#[must_use]` attribute\n-  --> $DIR/must_use_candidates.rs:17:5\n+  --> $DIR/must_use_candidates.rs:16:5\n    |\n LL |     pub fn inherent_pure(&self) -> u8 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn inherent_pure(&self) -> u8`\n \n error: this function could have a `#[must_use]` attribute\n-  --> $DIR/must_use_candidates.rs:48:1\n+  --> $DIR/must_use_candidates.rs:47:1\n    |\n LL | pub fn with_marker(_d: std::marker::PhantomData<&mut u32>) -> bool {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_marker(_d: std::marker::PhantomData<&mut u32>) -> bool`\n \n error: this function could have a `#[must_use]` attribute\n-  --> $DIR/must_use_candidates.rs:60:1\n+  --> $DIR/must_use_candidates.rs:59:1\n    |\n LL | pub fn rcd(_x: Rc<u32>) -> bool {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn rcd(_x: Rc<u32>) -> bool`\n \n error: this function could have a `#[must_use]` attribute\n-  --> $DIR/must_use_candidates.rs:68:1\n+  --> $DIR/must_use_candidates.rs:67:1\n    |\n LL | pub fn arcd(_x: Arc<u32>) -> bool {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn arcd(_x: Arc<u32>) -> bool`"}, {"sha": "1d0a3ecd0ff8df69cee72d525dd6e60646d910b3", "filename": "tests/ui/result_map_unit_fn_fixable.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_fixable.fixed?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(never_type)]\n #![warn(clippy::result_map_unit_fn)]\n #![allow(unused)]\n "}, {"sha": "2fe18f923f08fa1143195d968f01d8cc2bf5590d", "filename": "tests/ui/result_map_unit_fn_fixable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_fixable.rs?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(never_type)]\n #![warn(clippy::result_map_unit_fn)]\n #![allow(unused)]\n "}, {"sha": "5f9bf2020b6efc7861f9932dfb5fc2f9ca9c8d8a", "filename": "tests/ui/result_map_unit_fn_fixable.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,5 +1,5 @@\n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn_fixable.rs:36:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:35:5\n    |\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n@@ -9,127 +9,127 @@ LL |     x.field.map(do_nothing);\n    = note: `-D clippy::result-map-unit-fn` implied by `-D warnings`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn_fixable.rs:38:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:37:5\n    |\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { do_nothing(x_field) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn_fixable.rs:40:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:39:5\n    |\n LL |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { diverge(x_field) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:46:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:45:5\n    |\n LL |     x.field.map(|value| x.do_result_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:48:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:47:5\n    |\n LL |     x.field.map(|value| { x.do_result_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:51:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:50:5\n    |\n LL |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:53:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:52:5\n    |\n LL |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:55:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:54:5\n    |\n LL |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:57:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:56:5\n    |\n LL |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:60:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:59:5\n    |\n LL |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:62:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:61:5\n    |\n LL |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:64:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:63:5\n    |\n LL |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:66:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:65:5\n    |\n LL |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:71:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:70:5\n    |\n LL |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:73:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:72:5\n    |\n LL |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:75:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:74:5\n    |\n LL |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn_fixable.rs:78:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:77:5\n    |\n LL |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-"}, {"sha": "cc01976df9954bee6dcd6710f2af58ecc0ef3cad", "filename": "tests/ui/result_map_unit_fn_unfixable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_unfixable.rs?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,4 +1,3 @@\n-#![feature(never_type)]\n #![warn(clippy::result_map_unit_fn)]\n #![allow(unused)]\n "}, {"sha": "16caac5828afe6ba3b2f5e6ecafd65e2f40ac1b2", "filename": "tests/ui/result_map_unit_fn_unfixable.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c308b86c81e38d35dd5b0a062076aa591296735/tests%2Fui%2Fresult_map_unit_fn_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_unfixable.stderr?ref=3c308b86c81e38d35dd5b0a062076aa591296735", "patch": "@@ -1,23 +1,23 @@\n error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/result_map_unit_fn_unfixable.rs:17:5\n+  --> $DIR/result_map_unit_fn_unfixable.rs:16:5\n    |\n LL |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n    |     ^ not found in this scope\n \n error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/result_map_unit_fn_unfixable.rs:19:5\n+  --> $DIR/result_map_unit_fn_unfixable.rs:18:5\n    |\n LL |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n    |     ^ not found in this scope\n \n error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/result_map_unit_fn_unfixable.rs:23:5\n+  --> $DIR/result_map_unit_fn_unfixable.rs:22:5\n    |\n LL |     x.field.map(|value| {\n    |     ^ not found in this scope\n \n error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/result_map_unit_fn_unfixable.rs:27:5\n+  --> $DIR/result_map_unit_fn_unfixable.rs:26:5\n    |\n LL |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n    |     ^ not found in this scope"}]}