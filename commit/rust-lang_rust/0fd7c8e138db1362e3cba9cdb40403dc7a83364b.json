{"sha": "0fd7c8e138db1362e3cba9cdb40403dc7a83364b", "node_id": "C_kwDOAAsO6NoAKDBmZDdjOGUxMzhkYjEzNjJlM2NiYTljZGI0MDQwM2RjN2E4MzM2NGI", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2023-02-19T17:21:27Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2023-02-19T17:33:40Z"}, "message": "Add copy_to_slice", "tree": {"sha": "9059235e344c5c95f936496442872fb199144654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9059235e344c5c95f936496442872fb199144654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fd7c8e138db1362e3cba9cdb40403dc7a83364b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fd7c8e138db1362e3cba9cdb40403dc7a83364b", "html_url": "https://github.com/rust-lang/rust/commit/0fd7c8e138db1362e3cba9cdb40403dc7a83364b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fd7c8e138db1362e3cba9cdb40403dc7a83364b/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bd30e77b3a3c699af102ebb3df0f6110f8aa02e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bd30e77b3a3c699af102ebb3df0f6110f8aa02e", "html_url": "https://github.com/rust-lang/rust/commit/9bd30e77b3a3c699af102ebb3df0f6110f8aa02e"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "870c2eefee153d3a341583eea1211d1bdec3a580", "filename": "crates/core_simd/src/vector.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0fd7c8e138db1362e3cba9cdb40403dc7a83364b/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fd7c8e138db1362e3cba9cdb40403dc7a83364b/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector.rs?ref=0fd7c8e138db1362e3cba9cdb40403dc7a83364b", "patch": "@@ -159,7 +159,7 @@ where\n     ///\n     /// Panics if the slice's length is less than the vector's `Simd::LANES`.\n     ///\n-    /// # Examples\n+    /// # Example\n     ///\n     /// ```\n     /// # #![feature(portable_simd)]\n@@ -180,6 +180,35 @@ where\n         unsafe { slice.as_ptr().cast::<Self>().read_unaligned() }\n     }\n \n+    /// Writes a SIMD vector to the first `LANES` elements of a slice.\n+    ///\n+    /// # Panics\n+    ///\n+    /// Panics if the slice's length is less than the vector's `Simd::LANES`.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// # #![feature(portable_simd)]\n+    /// # #[cfg(feature = \"as_crate\")] use core_simd::simd;\n+    /// # #[cfg(not(feature = \"as_crate\"))] use core::simd;\n+    /// # use simd::u32x4;\n+    /// let mut dest = vec![0; 6];\n+    /// let v = u32x4::from_array([1, 2, 3, 4]);\n+    /// v.copy_to_slice(&mut dest);\n+    /// assert_eq!(&dest, &[1, 2, 3, 4, 0, 0]);\n+    /// ```\n+    pub fn copy_to_slice(self, slice: &mut [T]) {\n+        assert!(\n+            slice.len() >= LANES,\n+            \"slice length must be at least the number of lanes\"\n+        );\n+        // Safety:\n+        // - We've checked the length is sufficient\n+        // - `T` and `Simd<T, N>` are Copy types.\n+        unsafe { slice.as_mut_ptr().cast::<Self>().write_unaligned(self) }\n+    }\n+\n     /// Performs lanewise conversion of a SIMD vector's elements to another SIMD-valid type.\n     ///\n     /// This follows the semantics of Rust's `as` conversion for casting"}]}