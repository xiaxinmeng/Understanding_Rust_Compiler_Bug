{"sha": "b94bcbcdcf89b03a879f9f16f642914d1b55243f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NGJjYmNkY2Y4OWIwM2E4NzlmOWYxNmY2NDI5MTRkMWI1NTI0M2Y=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-03-15T17:30:43Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-03-15T17:34:18Z"}, "message": "unbreak freebsd/openbsd/bitrig build after #23316", "tree": {"sha": "e746bbddd8954766ccd8abe4d76cbc82e04ed23b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e746bbddd8954766ccd8abe4d76cbc82e04ed23b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b94bcbcdcf89b03a879f9f16f642914d1b55243f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b94bcbcdcf89b03a879f9f16f642914d1b55243f", "html_url": "https://github.com/rust-lang/rust/commit/b94bcbcdcf89b03a879f9f16f642914d1b55243f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b94bcbcdcf89b03a879f9f16f642914d1b55243f/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95018eec69679681acdfae8608779c1e2674322d", "url": "https://api.github.com/repos/rust-lang/rust/commits/95018eec69679681acdfae8608779c1e2674322d", "html_url": "https://github.com/rust-lang/rust/commit/95018eec69679681acdfae8608779c1e2674322d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "cf946767b65943d8ef64fcaf1609661a76ae4eb7", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b94bcbcdcf89b03a879f9f16f642914d1b55243f/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b94bcbcdcf89b03a879f9f16f642914d1b55243f/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=b94bcbcdcf89b03a879f9f16f642914d1b55243f", "patch": "@@ -206,7 +206,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n         if err != 0 { return Err(io::Error::last_os_error()); }\n         if sz == 0 { return Err(io::Error::last_os_error()); }\n         v.set_len(sz as uint - 1); // chop off trailing NUL\n-        Ok(PathBuf::new::<OsString>(&OsStringExt::from_vec(v)))\n+        Ok(PathBuf::new::<OsString>(OsStringExt::from_vec(v)))\n     }\n }\n \n@@ -232,7 +232,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n             Err(io::Error::last_os_error())\n         } else {\n             let vec = CStr::from_ptr(v).to_bytes().to_vec();\n-            Ok(PathBuf::new::<OsString>(&OsStringExt::from_vec(vec)))\n+            Ok(PathBuf::new::<OsString>(OsStringExt::from_vec(vec)))\n         }\n     }\n }"}]}