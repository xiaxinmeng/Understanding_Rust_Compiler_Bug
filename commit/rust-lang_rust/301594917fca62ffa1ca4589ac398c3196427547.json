{"sha": "301594917fca62ffa1ca4589ac398c3196427547", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMTU5NDkxN2ZjYTYyZmZhMWNhNDU4OWFjMzk4YzMxOTY0Mjc1NDc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-04-09T01:45:20Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-10T22:21:58Z"}, "message": "std,native,green,rustuv: make readdir return `Vec`.\n\nReplacing `~[]`. This also makes the `walk_dir` iterator use a `Vec`\ninternally.", "tree": {"sha": "086b1edfb43adc5d61a40a98d0e72b1899b523dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/086b1edfb43adc5d61a40a98d0e72b1899b523dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/301594917fca62ffa1ca4589ac398c3196427547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/301594917fca62ffa1ca4589ac398c3196427547", "html_url": "https://github.com/rust-lang/rust/commit/301594917fca62ffa1ca4589ac398c3196427547", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/301594917fca62ffa1ca4589ac398c3196427547/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a65411e4f7b5df78e34dcaf8061d4641f4b56412", "url": "https://api.github.com/repos/rust-lang/rust/commits/a65411e4f7b5df78e34dcaf8061d4641f4b56412", "html_url": "https://github.com/rust-lang/rust/commit/a65411e4f7b5df78e34dcaf8061d4641f4b56412"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "5446ab2950e44bb136787d31f9c3a7886b7eb92a", "filename": "src/libnative/io/file_unix.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibnative%2Fio%2Ffile_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibnative%2Fio%2Ffile_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_unix.rs?ref=301594917fca62ffa1ca4589ac398c3196427547", "patch": "@@ -340,11 +340,11 @@ pub fn mkdir(p: &CString, mode: io::FilePermission) -> IoResult<()> {\n     }))\n }\n \n-pub fn readdir(p: &CString) -> IoResult<~[Path]> {\n+pub fn readdir(p: &CString) -> IoResult<Vec<Path>> {\n     use libc::{dirent_t};\n     use libc::{opendir, readdir_r, closedir};\n \n-    fn prune(root: &CString, dirs: ~[Path]) -> ~[Path] {\n+    fn prune(root: &CString, dirs: Vec<Path>) -> Vec<Path> {\n         let root = unsafe { CString::new(root.with_ref(|p| p), false) };\n         let root = Path::new(root);\n \n@@ -365,7 +365,7 @@ pub fn readdir(p: &CString) -> IoResult<~[Path]> {\n     let dir_ptr = p.with_ref(|buf| unsafe { opendir(buf) });\n \n     if dir_ptr as uint != 0 {\n-        let mut paths = ~[];\n+        let mut paths = vec!();\n         let mut entry_ptr = 0 as *mut dirent_t;\n         while unsafe { readdir_r(dir_ptr, ptr, &mut entry_ptr) == 0 } {\n             if entry_ptr.is_null() { break }\n@@ -571,4 +571,3 @@ mod tests {\n         }\n     }\n }\n-"}, {"sha": "8090042f090c9aa7e53f616660bc68a8c65917b0", "filename": "src/libnative/io/file_win32.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibnative%2Fio%2Ffile_win32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibnative%2Fio%2Ffile_win32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_win32.rs?ref=301594917fca62ffa1ca4589ac398c3196427547", "patch": "@@ -323,10 +323,10 @@ pub fn mkdir(p: &CString, _mode: io::FilePermission) -> IoResult<()> {\n     })\n }\n \n-pub fn readdir(p: &CString) -> IoResult<~[Path]> {\n+pub fn readdir(p: &CString) -> IoResult<Vec<Path>> {\n     use rt::global_heap::malloc_raw;\n \n-    fn prune(root: &CString, dirs: ~[Path]) -> ~[Path] {\n+    fn prune(root: &CString, dirs: Vec<Path>) -> Vec<Path> {\n         let root = unsafe { CString::new(root.with_ref(|p| p), false) };\n         let root = Path::new(root);\n \n@@ -346,7 +346,7 @@ pub fn readdir(p: &CString) -> IoResult<~[Path]> {\n         let wfd_ptr = malloc_raw(rust_list_dir_wfd_size() as uint);\n         let find_handle = libc::FindFirstFileW(path_ptr, wfd_ptr as libc::HANDLE);\n         if find_handle as libc::c_int != libc::INVALID_HANDLE_VALUE {\n-            let mut paths = ~[];\n+            let mut paths = vec!();\n             let mut more_files = 1 as libc::c_int;\n             while more_files != 0 {\n                 let fp_buf = rust_list_dir_wfd_fp_buf(wfd_ptr as *c_void);"}, {"sha": "cc432555abb92923213bcb4e6510e6b33d8a1505", "filename": "src/libnative/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibnative%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibnative%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fmod.rs?ref=301594917fca62ffa1ca4589ac398c3196427547", "patch": "@@ -217,7 +217,7 @@ impl rtio::IoFactory for IoFactory {\n     fn fs_rename(&mut self, path: &CString, to: &CString) -> IoResult<()> {\n         file::rename(path, to)\n     }\n-    fn fs_readdir(&mut self, path: &CString, _flags: c_int) -> IoResult<~[Path]> {\n+    fn fs_readdir(&mut self, path: &CString, _flags: c_int) -> IoResult<Vec<Path>> {\n         file::readdir(path)\n     }\n     fn fs_lstat(&mut self, path: &CString) -> IoResult<io::FileStat> {"}, {"sha": "69be32a60211d5812e7a6ae13aad756a407922fb", "filename": "src/librustuv/file.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibrustuv%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibrustuv%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Ffile.rs?ref=301594917fca62ffa1ca4589ac398c3196427547", "patch": "@@ -152,13 +152,13 @@ impl FsRequest {\n     }\n \n     pub fn readdir(loop_: &Loop, path: &CString, flags: c_int)\n-        -> Result<~[Path], UvError>\n+        -> Result<Vec<Path>, UvError>\n     {\n         execute(|req, cb| unsafe {\n             uvll::uv_fs_readdir(loop_.handle,\n                                 req, path.with_ref(|p| p), flags, cb)\n         }).map(|req| unsafe {\n-            let mut paths = ~[];\n+            let mut paths = vec!();\n             let path = CString::new(path.with_ref(|p| p), false);\n             let parent = Path::new(path);\n             let _ = c_str::from_c_multistring(req.get_ptr() as *libc::c_char,"}, {"sha": "55456bb548e91ec480d1814cfce5c75f0bf8dc06", "filename": "src/librustuv/uvio.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibrustuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibrustuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvio.rs?ref=301594917fca62ffa1ca4589ac398c3196427547", "patch": "@@ -234,7 +234,7 @@ impl IoFactory for UvIoFactory {\n         r.map_err(uv_error_to_io_error)\n     }\n     fn fs_readdir(&mut self, path: &CString, flags: c_int)\n-        -> Result<~[Path], IoError>\n+        -> Result<Vec<Path>, IoError>\n     {\n         let r = FsRequest::readdir(&self.loop_, path, flags);\n         r.map_err(uv_error_to_io_error)"}, {"sha": "b8a58c5cf1040e99e9e4cef99292d1963a405279", "filename": "src/libstd/io/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibstd%2Fio%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibstd%2Fio%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ffs.rs?ref=301594917fca62ffa1ca4589ac398c3196427547", "patch": "@@ -483,7 +483,7 @@ pub fn rmdir(path: &Path) -> IoResult<()> {\n /// Will return an error if the provided `from` doesn't exist, the process lacks\n /// permissions to view the contents or if the `path` points at a non-directory\n /// file\n-pub fn readdir(path: &Path) -> IoResult<~[Path]> {\n+pub fn readdir(path: &Path) -> IoResult<Vec<Path>> {\n     LocalIo::maybe_raise(|io| {\n         io.fs_readdir(&path.to_c_str(), 0)\n     })\n@@ -498,7 +498,7 @@ pub fn walk_dir(path: &Path) -> IoResult<Directories> {\n \n /// An iterator which walks over a directory\n pub struct Directories {\n-    stack: ~[Path],\n+    stack: Vec<Path>,\n }\n \n impl Iterator<Path> for Directories {"}, {"sha": "cc8356d2b9a04bcaefe5335cf3983dfd23b63945", "filename": "src/libstd/rt/rtio.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibstd%2Frt%2Frtio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301594917fca62ffa1ca4589ac398c3196427547/src%2Flibstd%2Frt%2Frtio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frtio.rs?ref=301594917fca62ffa1ca4589ac398c3196427547", "patch": "@@ -20,6 +20,7 @@ use path::Path;\n use result::Err;\n use rt::local::Local;\n use rt::task::Task;\n+use vec::Vec;\n \n use ai = io::net::addrinfo;\n use io;\n@@ -168,7 +169,7 @@ pub trait IoFactory {\n     fn fs_rmdir(&mut self, path: &CString) -> IoResult<()>;\n     fn fs_rename(&mut self, path: &CString, to: &CString) -> IoResult<()>;\n     fn fs_readdir(&mut self, path: &CString, flags: c_int) ->\n-        IoResult<~[Path]>;\n+        IoResult<Vec<Path>>;\n     fn fs_lstat(&mut self, path: &CString) -> IoResult<FileStat>;\n     fn fs_chown(&mut self, path: &CString, uid: int, gid: int) ->\n         IoResult<()>;"}]}