{"sha": "d510ba3bc3b6d41e36cb40b64af65637de39ff8b", "node_id": "C_kwDOAAsO6NoAKGQ1MTBiYTNiYzNiNmQ0MWUzNmNiNDBiNjRhZjY1NjM3ZGUzOWZmOGI", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2022-09-16T11:54:41Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2022-09-18T04:10:56Z"}, "message": "add mir-opt test", "tree": {"sha": "25fed13f9896f14da40b673037ee91a5b9be1057", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25fed13f9896f14da40b673037ee91a5b9be1057"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d510ba3bc3b6d41e36cb40b64af65637de39ff8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAmMmmlAACgkQPNdIZH7v\nY1mj6w//daVdvrzN/q6/RF8/ZPKFaz/Cr3l/jyifPQTGoUAXYNL/u+met4UxGEBm\ng1BF7iWYZbZO7rCil0tnqQdDsDPkG1QcVchoLs0KNc+YLR11fv89mqQh76jsUG6O\nK9zAVgXMPSCNcY66fmA3mRVYyQw0vhS+q0yECFqKf7RiMsZ9nrrV93D+jIwJpvO8\nPu6yHVaje42GMbocQ0/c3405kFQaDp4/Gz/oIL3uWkmIiDn3MCdzWm3mx/DIz0k8\nZjeTox8ScxgSCDwc+iLni0VS9k+2EimGY7Mb3v8pK4/KesGIW4Dpj5979T0Vac1l\n8lQDN17Klew3yyWh0GTJn7daC9chYBlV6ObDeAVBn4uIM4Bop5wodke2lgZcxiIa\necdtS211Ui1WZbhy/LF218xC9v8vpYMb8ug5GuSSYLi3/ZcolgchWtI9CPrRhwnR\n35xHJi4g68XcUik3jG1ePvmD/avB0Zhj8s7ZK8RIkL6+gJTmNvjfzi7BJnOD2b8b\nOdNA2AMdQu5L/Njef8kBjPGgxl6YSYYQE0eBiG3a+ZbXezaRnAKYurKjELZ2Ef6Y\nYGdKpwGq7hq74Mu3yUd/7NuUqzaBlSPygfyKlhUiWS1ffcqmzMleckfpebjKm6Uw\nVYcHWOUoozUnTG4ov34opryj/Gm5/tnJAz8Bo7MTz/0GxVF1wWY=\n=SvDB\n-----END PGP SIGNATURE-----", "payload": "tree 25fed13f9896f14da40b673037ee91a5b9be1057\nparent 48c1c1d19043120e9e89b3186d5d5286142f3066\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1663329281 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1663474256 +0800\n\nadd mir-opt test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d510ba3bc3b6d41e36cb40b64af65637de39ff8b", "html_url": "https://github.com/rust-lang/rust/commit/d510ba3bc3b6d41e36cb40b64af65637de39ff8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d510ba3bc3b6d41e36cb40b64af65637de39ff8b/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48c1c1d19043120e9e89b3186d5d5286142f3066", "url": "https://api.github.com/repos/rust-lang/rust/commits/48c1c1d19043120e9e89b3186d5d5286142f3066", "html_url": "https://github.com/rust-lang/rust/commit/48c1c1d19043120e9e89b3186d5d5286142f3066"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "98f9aa6ef40acaf0cdd59dc7bf8d3206e717f1c5", "filename": "src/test/mir-opt/issue-101867.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d510ba3bc3b6d41e36cb40b64af65637de39ff8b/src%2Ftest%2Fmir-opt%2Fissue-101867.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d510ba3bc3b6d41e36cb40b64af65637de39ff8b/src%2Ftest%2Fmir-opt%2Fissue-101867.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-101867.rs?ref=d510ba3bc3b6d41e36cb40b64af65637de39ff8b", "patch": "@@ -0,0 +1,9 @@\n+#![feature(let_else)]\n+\n+// EMIT_MIR issue_101867.main.mir_map.0.mir\n+fn main() {\n+    let x: Option<u8> = Some(1);\n+    let Some(y) = x else {\n+        panic!();\n+    };\n+}"}, {"sha": "98501ac8c9d840e25929d2e5b84618385a0c3ead", "filename": "src/test/mir-opt/issue_101867.main.mir_map.0.mir", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/d510ba3bc3b6d41e36cb40b64af65637de39ff8b/src%2Ftest%2Fmir-opt%2Fissue_101867.main.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d510ba3bc3b6d41e36cb40b64af65637de39ff8b/src%2Ftest%2Fmir-opt%2Fissue_101867.main.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_101867.main.mir_map.0.mir?ref=d510ba3bc3b6d41e36cb40b64af65637de39ff8b", "patch": "@@ -0,0 +1,75 @@\n+// MIR for `main` 0 mir_map\n+\n+| User Type Annotations\n+| 0: user_ty: Canonical { max_universe: U0, variables: [], value: Ty(std::option::Option<u8>) }, span: $DIR/issue-101867.rs:5:12: 5:22, inferred_ty: std::option::Option<u8>\n+| 1: user_ty: Canonical { max_universe: U0, variables: [], value: Ty(std::option::Option<u8>) }, span: $DIR/issue-101867.rs:5:12: 5:22, inferred_ty: std::option::Option<u8>\n+|\n+fn main() -> () {\n+    let mut _0: ();                      // return place in scope 0 at $DIR/issue-101867.rs:+0:11: +0:11\n+    let _1: std::option::Option<u8> as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/issue-101867.rs:+1:9: +1:10\n+    let mut _2: !;                       // in scope 0 at $DIR/issue-101867.rs:+2:26: +4:6\n+    let _3: ();                          // in scope 0 at $SRC_DIR/std/src/panic.rs:LL:COL\n+    let mut _4: !;                       // in scope 0 at $SRC_DIR/std/src/panic.rs:LL:COL\n+    let mut _6: isize;                   // in scope 0 at $DIR/issue-101867.rs:+2:9: +2:16\n+    scope 1 {\n+        debug x => _1;                   // in scope 1 at $DIR/issue-101867.rs:+1:9: +1:10\n+        let _5: u8;                      // in scope 1 at $DIR/issue-101867.rs:+2:14: +2:15\n+        scope 2 {\n+            debug y => _5;               // in scope 2 at $DIR/issue-101867.rs:+2:14: +2:15\n+        }\n+    }\n+\n+    bb0: {\n+        StorageLive(_1);                 // scope 0 at $DIR/issue-101867.rs:+1:9: +1:10\n+        _1 = Option::<u8>::Some(const 1_u8); // scope 0 at $DIR/issue-101867.rs:+1:25: +1:32\n+        FakeRead(ForLet(None), _1);      // scope 0 at $DIR/issue-101867.rs:+1:9: +1:10\n+        AscribeUserType(_1, o, UserTypeProjection { base: UserType(1), projs: [] }); // scope 0 at $DIR/issue-101867.rs:+1:12: +1:22\n+        StorageLive(_5);                 // scope 1 at $DIR/issue-101867.rs:+2:14: +2:15\n+        FakeRead(ForMatchedPlace(None), _1); // scope 1 at $DIR/issue-101867.rs:+2:19: +2:20\n+        _6 = discriminant(_1);           // scope 1 at $DIR/issue-101867.rs:+2:19: +2:20\n+        switchInt(move _6) -> [1_isize: bb4, otherwise: bb3]; // scope 1 at $DIR/issue-101867.rs:+2:9: +2:16\n+    }\n+\n+    bb1: {\n+        StorageLive(_3);                 // scope 1 at $SRC_DIR/std/src/panic.rs:LL:COL\n+        StorageLive(_4);                 // scope 1 at $SRC_DIR/std/src/panic.rs:LL:COL\n+        _4 = begin_panic::<&str>(const \"explicit panic\") -> bb7; // scope 1 at $SRC_DIR/std/src/panic.rs:LL:COL\n+                                         // mir::Constant\n+                                         // + span: $SRC_DIR/std/src/panic.rs:LL:COL\n+                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }\n+                                         // mir::Constant\n+                                         // + span: $SRC_DIR/std/src/panic.rs:LL:COL\n+                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }\n+    }\n+\n+    bb2: {\n+        StorageDead(_4);                 // scope 1 at $SRC_DIR/std/src/panic.rs:LL:COL\n+        StorageDead(_3);                 // scope 1 at $DIR/issue-101867.rs:+3:16: +3:17\n+        unreachable;                     // scope 1 at $DIR/issue-101867.rs:+2:26: +4:6\n+    }\n+\n+    bb3: {\n+        goto -> bb6;                     // scope 1 at $DIR/issue-101867.rs:+2:19: +2:20\n+    }\n+\n+    bb4: {\n+        falseEdge -> [real: bb5, imaginary: bb3]; // scope 1 at $DIR/issue-101867.rs:+2:9: +2:16\n+    }\n+\n+    bb5: {\n+        _5 = ((_1 as Some).0: u8);       // scope 1 at $DIR/issue-101867.rs:+2:14: +2:15\n+        _0 = const ();                   // scope 0 at $DIR/issue-101867.rs:+0:11: +5:2\n+        StorageDead(_5);                 // scope 1 at $DIR/issue-101867.rs:+5:1: +5:2\n+        StorageDead(_1);                 // scope 0 at $DIR/issue-101867.rs:+5:1: +5:2\n+        return;                          // scope 0 at $DIR/issue-101867.rs:+5:2: +5:2\n+    }\n+\n+    bb6: {\n+        StorageDead(_5);                 // scope 1 at $DIR/issue-101867.rs:+5:1: +5:2\n+        goto -> bb1;                     // scope 0 at $DIR/issue-101867.rs:+0:11: +5:2\n+    }\n+\n+    bb7 (cleanup): {\n+        resume;                          // scope 0 at $DIR/issue-101867.rs:+0:1: +5:2\n+    }\n+}"}]}