{"sha": "690a0b249eee6537953350be28a0ca11fa96b12a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MGEwYjI0OWVlZTY1Mzc5NTMzNTBiZTI4YTBjYTExZmE5NmIxMmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-17T16:05:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-17T16:05:58Z"}, "message": "Merge #4016\n\n4016: Don't use SyntaxNodePtr::range when determining scope for offset r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "f1b5236e5b3b5eed1e98ecb05eff956dac13b0ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1b5236e5b3b5eed1e98ecb05eff956dac13b0ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/690a0b249eee6537953350be28a0ca11fa96b12a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJemdPmCRBK7hj4Ov3rIwAAdHIIAD/dJWbp6PbW1K3fpLaxwwmp\nnNPavxnmDHH/3goIQLo9+awUa4I03Da4H7I7V2gt/xRsiTN7GztUsG7CHYk96muy\nUSOvwgpBKnfGVmM2ybYxImWPu6atvcevGB2NlNSIgQkeVc7PT4p9DWQSuGuUEwRj\npz4eeyDbT4WXRjceRHNvxOWUkhWK/csu2WV14hyw4mmMoBipKRE78EEcA7r25XXY\nH/BmQpf2CkAzJq1U3hohNTwzU3+7ZUY9M8lE85QSPD5TkXemAF3njMVJTMs/spmA\nfCHMMOCntuZq+xsCv+pS4L0MjrVXmwprqE3Wm7xJOAQZEImbV0r0rS1q4CLwD8s=\n=++ZE\n-----END PGP SIGNATURE-----\n", "payload": "tree f1b5236e5b3b5eed1e98ecb05eff956dac13b0ef\nparent 179d9835351f3abab03634b50bcee94723cce148\nparent f178df1a5e23d584f84658a4af426b8aeb832ea4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587139558 +0000\ncommitter GitHub <noreply@github.com> 1587139558 +0000\n\nMerge #4016\n\n4016: Don't use SyntaxNodePtr::range when determining scope for offset r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/690a0b249eee6537953350be28a0ca11fa96b12a", "html_url": "https://github.com/rust-lang/rust/commit/690a0b249eee6537953350be28a0ca11fa96b12a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/690a0b249eee6537953350be28a0ca11fa96b12a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "179d9835351f3abab03634b50bcee94723cce148", "url": "https://api.github.com/repos/rust-lang/rust/commits/179d9835351f3abab03634b50bcee94723cce148", "html_url": "https://github.com/rust-lang/rust/commit/179d9835351f3abab03634b50bcee94723cce148"}, {"sha": "f178df1a5e23d584f84658a4af426b8aeb832ea4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f178df1a5e23d584f84658a4af426b8aeb832ea4", "html_url": "https://github.com/rust-lang/rust/commit/f178df1a5e23d584f84658a4af426b8aeb832ea4"}], "stats": {"total": 99, "additions": 52, "deletions": 47}, "files": [{"sha": "23af400b8bc6bf6dc61c4fd49604146564dc06be", "filename": "crates/ra_hir/src/source_analyzer.rs", "status": "modified", "additions": 52, "deletions": 47, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/690a0b249eee6537953350be28a0ca11fa96b12a/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690a0b249eee6537953350be28a0ca11fa96b12a/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs?ref=690a0b249eee6537953350be28a0ca11fa96b12a", "patch": "@@ -23,7 +23,7 @@ use hir_ty::{\n };\n use ra_syntax::{\n     ast::{self, AstNode},\n-    SyntaxNode, SyntaxNodePtr, TextUnit,\n+    SyntaxNode, TextRange, TextUnit,\n };\n \n use crate::{\n@@ -56,7 +56,7 @@ impl SourceAnalyzer {\n         let scopes = db.expr_scopes(def);\n         let scope = match offset {\n             None => scope_for(&scopes, &source_map, node),\n-            Some(offset) => scope_for_offset(&scopes, &source_map, node.with_value(offset)),\n+            Some(offset) => scope_for_offset(db, &scopes, &source_map, node.with_value(offset)),\n         };\n         let resolver = resolver_for_scope(db.upcast(), def, scope);\n         SourceAnalyzer {\n@@ -304,6 +304,7 @@ fn scope_for(\n }\n \n fn scope_for_offset(\n+    db: &dyn HirDatabase,\n     scopes: &ExprScopes,\n     source_map: &BodySourceMap,\n     offset: InFile<TextUnit>,\n@@ -317,21 +318,63 @@ fn scope_for_offset(\n             if source.file_id != offset.file_id {\n                 return None;\n             }\n-            let syntax_node_ptr = source.value.syntax_node_ptr();\n-            Some((syntax_node_ptr, scope))\n+            let root = source.file_syntax(db.upcast());\n+            let node = source.value.to_node(&root);\n+            Some((node.syntax().text_range(), scope))\n         })\n         // find containing scope\n-        .min_by_key(|(ptr, _scope)| {\n+        .min_by_key(|(expr_range, _scope)| {\n             (\n-                !(ptr.range().start() <= offset.value && offset.value <= ptr.range().end()),\n-                ptr.range().len(),\n+                !(expr_range.start() <= offset.value && offset.value <= expr_range.end()),\n+                expr_range.len(),\n             )\n         })\n-        .map(|(ptr, scope)| {\n-            adjust(scopes, source_map, ptr, offset.file_id, offset.value).unwrap_or(*scope)\n+        .map(|(expr_range, scope)| {\n+            adjust(db, scopes, source_map, expr_range, offset.file_id, offset.value)\n+                .unwrap_or(*scope)\n         })\n }\n \n+// XXX: during completion, cursor might be outside of any particular\n+// expression. Try to figure out the correct scope...\n+fn adjust(\n+    db: &dyn HirDatabase,\n+    scopes: &ExprScopes,\n+    source_map: &BodySourceMap,\n+    expr_range: TextRange,\n+    file_id: HirFileId,\n+    offset: TextUnit,\n+) -> Option<ScopeId> {\n+    let child_scopes = scopes\n+        .scope_by_expr()\n+        .iter()\n+        .filter_map(|(id, scope)| {\n+            let source = source_map.expr_syntax(*id).ok()?;\n+            // FIXME: correctly handle macro expansion\n+            if source.file_id != file_id {\n+                return None;\n+            }\n+            let root = source.file_syntax(db.upcast());\n+            let node = source.value.to_node(&root);\n+            Some((node.syntax().text_range(), scope))\n+        })\n+        .filter(|(range, _)| {\n+            range.start() <= offset && range.is_subrange(&expr_range) && *range != expr_range\n+        });\n+\n+    child_scopes\n+        .max_by(|(r1, _), (r2, _)| {\n+            if r2.is_subrange(&r1) {\n+                std::cmp::Ordering::Greater\n+            } else if r1.is_subrange(&r2) {\n+                std::cmp::Ordering::Less\n+            } else {\n+                r1.start().cmp(&r2.start())\n+            }\n+        })\n+        .map(|(_ptr, scope)| *scope)\n+}\n+\n pub(crate) fn resolve_hir_path(\n     db: &dyn HirDatabase,\n     resolver: &Resolver,\n@@ -376,41 +419,3 @@ pub(crate) fn resolve_hir_path(\n             .map(|def| PathResolution::Macro(def.into()))\n     })\n }\n-\n-// XXX: during completion, cursor might be outside of any particular\n-// expression. Try to figure out the correct scope...\n-fn adjust(\n-    scopes: &ExprScopes,\n-    source_map: &BodySourceMap,\n-    ptr: SyntaxNodePtr,\n-    file_id: HirFileId,\n-    offset: TextUnit,\n-) -> Option<ScopeId> {\n-    let r = ptr.range();\n-    let child_scopes = scopes\n-        .scope_by_expr()\n-        .iter()\n-        .filter_map(|(id, scope)| {\n-            let source = source_map.expr_syntax(*id).ok()?;\n-            // FIXME: correctly handle macro expansion\n-            if source.file_id != file_id {\n-                return None;\n-            }\n-            let syntax_node_ptr = source.value.syntax_node_ptr();\n-            Some((syntax_node_ptr, scope))\n-        })\n-        .map(|(ptr, scope)| (ptr.range(), scope))\n-        .filter(|(range, _)| range.start() <= offset && range.is_subrange(&r) && *range != r);\n-\n-    child_scopes\n-        .max_by(|(r1, _), (r2, _)| {\n-            if r2.is_subrange(&r1) {\n-                std::cmp::Ordering::Greater\n-            } else if r1.is_subrange(&r2) {\n-                std::cmp::Ordering::Less\n-            } else {\n-                r1.start().cmp(&r2.start())\n-            }\n-        })\n-        .map(|(_ptr, scope)| *scope)\n-}"}]}