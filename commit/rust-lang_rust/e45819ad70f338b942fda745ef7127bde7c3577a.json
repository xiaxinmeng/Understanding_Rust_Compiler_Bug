{"sha": "e45819ad70f338b942fda745ef7127bde7c3577a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NTgxOWFkNzBmMzM4Yjk0MmZkYTc0NWVmNzEyN2JkZTdjMzU3N2E=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-12T00:21:02Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-12T00:46:24Z"}, "message": "Add parser::parse_crate_from_source_str\n\nThe fuzzer wants to be able to do stuff like this", "tree": {"sha": "58bc1a5614c4514d17b307af35ce600992b9d075", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58bc1a5614c4514d17b307af35ce600992b9d075"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e45819ad70f338b942fda745ef7127bde7c3577a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e45819ad70f338b942fda745ef7127bde7c3577a", "html_url": "https://github.com/rust-lang/rust/commit/e45819ad70f338b942fda745ef7127bde7c3577a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e45819ad70f338b942fda745ef7127bde7c3577a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67ecda63420a815cb89522be8e83690c38bef118", "url": "https://api.github.com/repos/rust-lang/rust/commits/67ecda63420a815cb89522be8e83690c38bef118", "html_url": "https://github.com/rust-lang/rust/commit/67ecda63420a815cb89522be8e83690c38bef118"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "59b0884704c9ff403ff498d70288a275e4cd8e2a", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e45819ad70f338b942fda745ef7127bde7c3577a/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e45819ad70f338b942fda745ef7127bde7c3577a/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=e45819ad70f338b942fda745ef7127bde7c3577a", "patch": "@@ -2432,6 +2432,24 @@ fn parse_crate_from_source_file(&str input, &ast::crate_cfg cfg,\n                                 &codemap::codemap cm) -> @ast::crate {\n     auto sess = @rec(cm=cm, mutable next_id=0);\n     auto p = new_parser_from_file(sess, cfg, input, 0u);\n+    ret parse_crate_mod(p, cfg);\n+}\n+\n+fn parse_crate_from_source_str(&str name, &str source, &ast::crate_cfg cfg,\n+                               &codemap::codemap cm) -> @ast::crate {\n+    auto sess = @rec(cm=cm, mutable next_id=0);\n+    auto ftype = SOURCE_FILE;\n+    auto filemap = codemap::new_filemap(name, 0u);\n+    sess.cm.files += [filemap];\n+    auto itr = @interner::mk(str::hash, str::eq);\n+    auto rdr = lexer::new_reader(sess.cm, source, filemap, itr);\n+    auto p = new_parser(sess, cfg, rdr, ftype);\n+    ret parse_crate_mod(p, cfg);\n+}\n+\n+// Parses a source module as a crate\n+fn parse_crate_mod(&parser p, &ast::crate_cfg cfg) -> @ast::crate {\n+\n     auto lo = p.get_lo_pos();\n     auto crate_attrs = parse_inner_attrs_and_next(p);\n     auto first_item_outer_attrs = crate_attrs._1;"}]}