{"sha": "e6fe5232df75246921f8b89d0161e4508f1cc535", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZmU1MjMyZGY3NTI0NjkyMWY4Yjg5ZDAxNjFlNDUwOGYxY2M1MzU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-19T06:54:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-19T06:54:35Z"}, "message": "Rollup merge of #75658 - tgnottingham:issue-75599, r=estebank\n\nDon't emit \"is not a logical operator\" error outside of associative expressions\n\nAvoid showing this error where it doesn't make sense by not assuming\n\"and\" and \"or\" were intended to mean \"&&\" and \"||\" until after we decide\nto continue parsing input as an associative expression.\n\nNote that the decision of whether or not to continue parsing input as an\nassociative expression doesn't actually depend on this assumption.\n\nFixes #75599\n\n---\n\nFirst time contributor! Let me know if there are any conventions or policies I should be following that I missed here. Thanks :)", "tree": {"sha": "0c51d099c985a6fd00afc12599d7f850d992f553", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c51d099c985a6fd00afc12599d7f850d992f553"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6fe5232df75246921f8b89d0161e4508f1cc535", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfPMysCRBK7hj4Ov3rIwAAdHIIACV3tdnA98AUxyJfgzcmBfBt\nL5GYEIORHXrViYRGTxEzMLjY2zr6l8WHoE4B6OHdxA4A53L763WmvoIF54enwCji\n8l6dI4f43NP6gDdETMKIWyixfos9b2FGWz0s+32c1QtoqQ9zRzk4DAA4gFDN8xob\nQlufl3Wh3J/31ik7n4vxT1tjRZeKROOmkZ/kMSOWhTVZtrTRPP73ZitR7hNQRnta\nZzKPq0oGeBRovklx8ojnX47Cq8X7sWFipoEBeTsPTestTLLvxZ+RIW/nYumJKuLz\nke1iCQCddsDnyg5L6MAG3uO9BKBPc9KrTvCyW12d9FgYMQq2LEJ0ooAn+qXzW4k=\n=LOUw\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c51d099c985a6fd00afc12599d7f850d992f553\nparent e6e917e12df1fc5b1866063ff8952a3b57b14fba\nparent ff73a409957d704aba735fb29ab4be2d77efe958\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1597820075 +0900\ncommitter GitHub <noreply@github.com> 1597820075 +0900\n\nRollup merge of #75658 - tgnottingham:issue-75599, r=estebank\n\nDon't emit \"is not a logical operator\" error outside of associative expressions\n\nAvoid showing this error where it doesn't make sense by not assuming\n\"and\" and \"or\" were intended to mean \"&&\" and \"||\" until after we decide\nto continue parsing input as an associative expression.\n\nNote that the decision of whether or not to continue parsing input as an\nassociative expression doesn't actually depend on this assumption.\n\nFixes #75599\n\n---\n\nFirst time contributor! Let me know if there are any conventions or policies I should be following that I missed here. Thanks :)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6fe5232df75246921f8b89d0161e4508f1cc535", "html_url": "https://github.com/rust-lang/rust/commit/e6fe5232df75246921f8b89d0161e4508f1cc535", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6fe5232df75246921f8b89d0161e4508f1cc535/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6e917e12df1fc5b1866063ff8952a3b57b14fba", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e917e12df1fc5b1866063ff8952a3b57b14fba", "html_url": "https://github.com/rust-lang/rust/commit/e6e917e12df1fc5b1866063ff8952a3b57b14fba"}, {"sha": "ff73a409957d704aba735fb29ab4be2d77efe958", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff73a409957d704aba735fb29ab4be2d77efe958", "html_url": "https://github.com/rust-lang/rust/commit/ff73a409957d704aba735fb29ab4be2d77efe958"}], "stats": {"total": 212, "additions": 42, "deletions": 170}, "files": [{"sha": "62aec66a255d5f2d5973983e6b5b7de6370b99f7", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=e6fe5232df75246921f8b89d0161e4508f1cc535", "patch": "@@ -308,7 +308,7 @@ impl<'a> Parser<'a> {\n     }\n \n     fn should_continue_as_assoc_expr(&mut self, lhs: &Expr) -> bool {\n-        match (self.expr_is_complete(lhs), self.check_assoc_op().map(|op| op.node)) {\n+        match (self.expr_is_complete(lhs), AssocOp::from_token(&self.token)) {\n             // Semi-statement forms are odd:\n             // See https://github.com/rust-lang/rust/issues/29071\n             (true, None) => false,"}, {"sha": "44421b077fa26eb2c0e75f664c07be4d45cbd76f", "filename": "src/test/ui/did_you_mean/issue-54109-and_instead_of_ampersands.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.rs?ref=e6fe5232df75246921f8b89d0161e4508f1cc535", "patch": "@@ -5,10 +5,8 @@ fn test_and() {\n     let b = false;\n \n     let _ = a and b; //~ ERROR `and` is not a logical operator\n-                     //~| ERROR `and` is not a logical operator\n \n     if a and b { //~ ERROR `and` is not a logical operator\n-                 //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n \n@@ -20,10 +18,8 @@ fn test_or() {\n     let b = false;\n \n     let _ = a or b; //~ ERROR `or` is not a logical operator\n-                    //~| ERROR `or` is not a logical operator\n \n     if a or b { //~ ERROR `or` is not a logical operator\n-                //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -32,7 +28,6 @@ fn test_and_par() {\n     let a = true;\n     let b = false;\n     if (a and b) {  //~ ERROR `and` is not a logical operator\n-                    //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -41,7 +36,6 @@ fn test_or_par() {\n     let a = true;\n     let b = false;\n     if (a or b) {  //~ ERROR `or` is not a logical operator\n-                   //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -50,7 +44,6 @@ fn test_while_and() {\n     let a = true;\n     let b = false;\n     while a and b {  //~ ERROR `and` is not a logical operator\n-                     //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -59,7 +52,6 @@ fn test_while_or() {\n     let a = true;\n     let b = false;\n     while a or b { //~ ERROR `or` is not a logical operator\n-                   //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }"}, {"sha": "528c62f501e0d1bf65bcad255050b235f1255559", "filename": "src/test/ui/did_you_mean/issue-54109-and_instead_of_ampersands.stderr", "status": "modified", "additions": 9, "deletions": 73, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.stderr?ref=e6fe5232df75246921f8b89d0161e4508f1cc535", "patch": "@@ -7,133 +7,69 @@ LL |     let _ = a and b;\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:7:15\n-   |\n-LL |     let _ = a and b;\n-   |               ^^^ help: use `&&` to perform logical conjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `and` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:10:10\n-   |\n-LL |     if a and b {\n-   |          ^^^ help: use `&&` to perform logical conjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `and` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:10:10\n+  --> $DIR/issue-54109-and_instead_of_ampersands.rs:9:10\n    |\n LL |     if a and b {\n    |          ^^^ help: use `&&` to perform logical conjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:22:15\n+  --> $DIR/issue-54109-and_instead_of_ampersands.rs:20:15\n    |\n LL |     let _ = a or b;\n    |               ^^ help: use `||` to perform logical disjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:22:15\n-   |\n-LL |     let _ = a or b;\n-   |               ^^ help: use `||` to perform logical disjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `or` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:25:10\n-   |\n-LL |     if a or b {\n-   |          ^^ help: use `||` to perform logical disjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `or` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:25:10\n+  --> $DIR/issue-54109-and_instead_of_ampersands.rs:22:10\n    |\n LL |     if a or b {\n    |          ^^ help: use `||` to perform logical disjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:34:11\n+  --> $DIR/issue-54109-and_instead_of_ampersands.rs:30:11\n    |\n LL |     if (a and b) {\n    |           ^^^ help: use `&&` to perform logical conjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n-error: `and` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:34:11\n-   |\n-LL |     if (a and b) {\n-   |           ^^^ help: use `&&` to perform logical conjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `or` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:43:11\n-   |\n-LL |     if (a or b) {\n-   |           ^^ help: use `||` to perform logical disjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n error: `or` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:43:11\n+  --> $DIR/issue-54109-and_instead_of_ampersands.rs:38:11\n    |\n LL |     if (a or b) {\n    |           ^^ help: use `||` to perform logical disjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:52:13\n+  --> $DIR/issue-54109-and_instead_of_ampersands.rs:46:13\n    |\n LL |     while a and b {\n    |             ^^^ help: use `&&` to perform logical conjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n-error: `and` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:52:13\n-   |\n-LL |     while a and b {\n-   |             ^^^ help: use `&&` to perform logical conjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `or` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:61:13\n-   |\n-LL |     while a or b {\n-   |             ^^ help: use `||` to perform logical disjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n error: `or` is not a logical operator\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:61:13\n+  --> $DIR/issue-54109-and_instead_of_ampersands.rs:54:13\n    |\n LL |     while a or b {\n    |             ^^ help: use `||` to perform logical disjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-54109-and_instead_of_ampersands.rs:15:33\n+  --> $DIR/issue-54109-and_instead_of_ampersands.rs:13:33\n    |\n LL |     let _recovery_witness: () = 0;\n    |                            --   ^ expected `()`, found integer\n    |                            |\n    |                            expected due to this\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 9 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "5079a37f4da7f9821ec4d390ece765a06ea69d45", "filename": "src/test/ui/did_you_mean/issue-54109-without-witness.fixed", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.fixed?ref=e6fe5232df75246921f8b89d0161e4508f1cc535", "patch": "@@ -11,10 +11,8 @@ fn test_and() {\n     let b = false;\n \n     let _ = a && b; //~ ERROR `and` is not a logical operator\n-                     //~| ERROR `and` is not a logical operator\n \n     if a && b { //~ ERROR `and` is not a logical operator\n-                 //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -24,10 +22,8 @@ fn test_or() {\n     let b = false;\n \n     let _ = a || b; //~ ERROR `or` is not a logical operator\n-                    //~| ERROR `or` is not a logical operator\n \n     if a || b { //~ ERROR `or` is not a logical operator\n-                //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -36,7 +32,6 @@ fn test_and_par() {\n     let a = true;\n     let b = false;\n     if (a && b) {  //~ ERROR `and` is not a logical operator\n-                    //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -45,7 +40,6 @@ fn test_or_par() {\n     let a = true;\n     let b = false;\n     if (a || b) {  //~ ERROR `or` is not a logical operator\n-                   //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -54,7 +48,6 @@ fn test_while_and() {\n     let a = true;\n     let b = false;\n     while a && b {  //~ ERROR `and` is not a logical operator\n-                     //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -63,7 +56,6 @@ fn test_while_or() {\n     let a = true;\n     let b = false;\n     while a || b { //~ ERROR `or` is not a logical operator\n-                   //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }"}, {"sha": "00660a938d5d625b6e7be016d3f5d6c359698532", "filename": "src/test/ui/did_you_mean/issue-54109-without-witness.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.rs?ref=e6fe5232df75246921f8b89d0161e4508f1cc535", "patch": "@@ -11,10 +11,8 @@ fn test_and() {\n     let b = false;\n \n     let _ = a and b; //~ ERROR `and` is not a logical operator\n-                     //~| ERROR `and` is not a logical operator\n \n     if a and b { //~ ERROR `and` is not a logical operator\n-                 //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -24,10 +22,8 @@ fn test_or() {\n     let b = false;\n \n     let _ = a or b; //~ ERROR `or` is not a logical operator\n-                    //~| ERROR `or` is not a logical operator\n \n     if a or b { //~ ERROR `or` is not a logical operator\n-                //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -36,7 +32,6 @@ fn test_and_par() {\n     let a = true;\n     let b = false;\n     if (a and b) {  //~ ERROR `and` is not a logical operator\n-                    //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -45,7 +40,6 @@ fn test_or_par() {\n     let a = true;\n     let b = false;\n     if (a or b) {  //~ ERROR `or` is not a logical operator\n-                   //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -54,7 +48,6 @@ fn test_while_and() {\n     let a = true;\n     let b = false;\n     while a and b {  //~ ERROR `and` is not a logical operator\n-                     //~| ERROR `and` is not a logical operator\n         println!(\"both\");\n     }\n }\n@@ -63,7 +56,6 @@ fn test_while_or() {\n     let a = true;\n     let b = false;\n     while a or b { //~ ERROR `or` is not a logical operator\n-                   //~| ERROR `or` is not a logical operator\n         println!(\"both\");\n     }\n }"}, {"sha": "0350890c1fde0ca0129a6b42e29301ba0a03ee53", "filename": "src/test/ui/did_you_mean/issue-54109-without-witness.stderr", "status": "modified", "additions": 8, "deletions": 72, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.stderr?ref=e6fe5232df75246921f8b89d0161e4508f1cc535", "patch": "@@ -7,124 +7,60 @@ LL |     let _ = a and b;\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:13:15\n-   |\n-LL |     let _ = a and b;\n-   |               ^^^ help: use `&&` to perform logical conjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `and` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:16:10\n-   |\n-LL |     if a and b {\n-   |          ^^^ help: use `&&` to perform logical conjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `and` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:16:10\n+  --> $DIR/issue-54109-without-witness.rs:15:10\n    |\n LL |     if a and b {\n    |          ^^^ help: use `&&` to perform logical conjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:26:15\n+  --> $DIR/issue-54109-without-witness.rs:24:15\n    |\n LL |     let _ = a or b;\n    |               ^^ help: use `||` to perform logical disjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:26:15\n-   |\n-LL |     let _ = a or b;\n-   |               ^^ help: use `||` to perform logical disjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `or` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:29:10\n-   |\n-LL |     if a or b {\n-   |          ^^ help: use `||` to perform logical disjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `or` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:29:10\n+  --> $DIR/issue-54109-without-witness.rs:26:10\n    |\n LL |     if a or b {\n    |          ^^ help: use `||` to perform logical disjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:38:11\n+  --> $DIR/issue-54109-without-witness.rs:34:11\n    |\n LL |     if (a and b) {\n    |           ^^^ help: use `&&` to perform logical conjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n-error: `and` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:38:11\n-   |\n-LL |     if (a and b) {\n-   |           ^^^ help: use `&&` to perform logical conjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `or` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:47:11\n-   |\n-LL |     if (a or b) {\n-   |           ^^ help: use `||` to perform logical disjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n error: `or` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:47:11\n+  --> $DIR/issue-54109-without-witness.rs:42:11\n    |\n LL |     if (a or b) {\n    |           ^^ help: use `||` to perform logical disjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:56:13\n+  --> $DIR/issue-54109-without-witness.rs:50:13\n    |\n LL |     while a and b {\n    |             ^^^ help: use `&&` to perform logical conjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n-error: `and` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:56:13\n-   |\n-LL |     while a and b {\n-   |             ^^^ help: use `&&` to perform logical conjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n-error: `or` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:65:13\n-   |\n-LL |     while a or b {\n-   |             ^^ help: use `||` to perform logical disjunction\n-   |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n-\n error: `or` is not a logical operator\n-  --> $DIR/issue-54109-without-witness.rs:65:13\n+  --> $DIR/issue-54109-without-witness.rs:58:13\n    |\n LL |     while a or b {\n    |             ^^ help: use `||` to perform logical disjunction\n    |\n    = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n \n-error: aborting due to 16 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "0857676e4ed58c38898d916ff988aad3951a3573", "filename": "src/test/ui/issues/issue-75599.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fissues%2Fissue-75599.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6fe5232df75246921f8b89d0161e4508f1cc535/src%2Ftest%2Fui%2Fissues%2Fissue-75599.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-75599.rs?ref=e6fe5232df75246921f8b89d0161e4508f1cc535", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+#![allow(non_upper_case_globals)]\n+\n+const or: usize = 1;\n+const and: usize = 2;\n+\n+mod or {\n+    pub const X: usize = 3;\n+}\n+\n+mod and {\n+    pub const X: usize = 4;\n+}\n+\n+fn main() {\n+    match 0 {\n+        0 => {}\n+        or => {}\n+        and => {}\n+        or::X => {}\n+        and::X => {}\n+        _ => {}\n+    }\n+}"}]}