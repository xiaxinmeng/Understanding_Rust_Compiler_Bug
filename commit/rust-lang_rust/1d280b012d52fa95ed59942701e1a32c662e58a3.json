{"sha": "1d280b012d52fa95ed59942701e1a32c662e58a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMjgwYjAxMmQ1MmZhOTVlZDU5OTQyNzAxZTFhMzJjNjYyZTU4YTM=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-02-20T15:43:05Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-03-01T22:35:35Z"}, "message": "Don't directly expose coverage::CounterMappingRegion via FFI\n\nThe definition of this struct changes in LLVM 12 due to the addition\nof branch coverage support. To avoid future mismatches, declare our\nown struct and then convert between them.", "tree": {"sha": "e13affc7fd15c93c94c98bab34082a868a40157d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e13affc7fd15c93c94c98bab34082a868a40157d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d280b012d52fa95ed59942701e1a32c662e58a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d280b012d52fa95ed59942701e1a32c662e58a3", "html_url": "https://github.com/rust-lang/rust/commit/1d280b012d52fa95ed59942701e1a32c662e58a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d280b012d52fa95ed59942701e1a32c662e58a3/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b763d9a40c526f5f72c0668d26f69241e7a42511", "url": "https://api.github.com/repos/rust-lang/rust/commits/b763d9a40c526f5f72c0668d26f69241e7a42511", "html_url": "https://github.com/rust-lang/rust/commit/b763d9a40c526f5f72c0668d26f69241e7a42511"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "e47b8fde40fee327a4a1972448c11383877c268d", "filename": "compiler/rustc_codegen_llvm/src/coverageinfo/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d280b012d52fa95ed59942701e1a32c662e58a3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d280b012d52fa95ed59942701e1a32c662e58a3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmod.rs?ref=1d280b012d52fa95ed59942701e1a32c662e58a3", "patch": "@@ -162,7 +162,7 @@ pub(crate) fn write_filenames_section_to_buffer<'a>(\n pub(crate) fn write_mapping_to_buffer(\n     virtual_file_mapping: Vec<u32>,\n     expressions: Vec<CounterExpression>,\n-    mut mapping_regions: Vec<CounterMappingRegion>,\n+    mapping_regions: Vec<CounterMappingRegion>,\n     buffer: &RustString,\n ) {\n     unsafe {\n@@ -171,7 +171,7 @@ pub(crate) fn write_mapping_to_buffer(\n             virtual_file_mapping.len() as c_uint,\n             expressions.as_ptr(),\n             expressions.len() as c_uint,\n-            mapping_regions.as_mut_ptr(),\n+            mapping_regions.as_ptr(),\n             mapping_regions.len() as c_uint,\n             buffer,\n         );"}, {"sha": "7f7575e58c9e6db69618df0eb521c533b289f5e1", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d280b012d52fa95ed59942701e1a32c662e58a3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d280b012d52fa95ed59942701e1a32c662e58a3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=1d280b012d52fa95ed59942701e1a32c662e58a3", "patch": "@@ -676,9 +676,7 @@ pub mod coverageinfo {\n     /// array\", encoded separately), and source location (start and end positions of the represented\n     /// code region).\n     ///\n-    /// Aligns with [llvm::coverage::CounterMappingRegion](https://github.com/rust-lang/llvm-project/blob/rustc/11.0-2020-10-12/llvm/include/llvm/ProfileData/Coverage/CoverageMapping.h#L224-L227)\n-    /// Important: The Rust struct layout (order and types of fields) must match its C++\n-    /// counterpart.\n+    /// Matches LLVMRustCounterMappingRegion.\n     #[derive(Copy, Clone, Debug)]\n     #[repr(C)]\n     pub struct CounterMappingRegion {\n@@ -1796,7 +1794,7 @@ extern \"C\" {\n         NumVirtualFileMappingIDs: c_uint,\n         Expressions: *const coverage_map::CounterExpression,\n         NumExpressions: c_uint,\n-        MappingRegions: *mut coverageinfo::CounterMappingRegion,\n+        MappingRegions: *const coverageinfo::CounterMappingRegion,\n         NumMappingRegions: c_uint,\n         BufferOut: &RustString,\n     );"}, {"sha": "e97d96e3a4eabc01f7b02bef63cf60f84dc47623", "filename": "compiler/rustc_llvm/llvm-wrapper/CoverageMappingWrapper.cpp", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1d280b012d52fa95ed59942701e1a32c662e58a3/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1d280b012d52fa95ed59942701e1a32c662e58a3/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp?ref=1d280b012d52fa95ed59942701e1a32c662e58a3", "patch": "@@ -8,6 +8,17 @@\n \n using namespace llvm;\n \n+struct LLVMRustCounterMappingRegion {\n+  coverage::Counter Count;\n+  uint32_t FileID;\n+  uint32_t ExpandedFileID;\n+  uint32_t LineStart;\n+  uint32_t ColumnStart;\n+  uint32_t LineEnd;\n+  uint32_t ColumnEnd;\n+  coverage::CounterMappingRegion::RegionKind Kind;\n+};\n+\n extern \"C\" void LLVMRustCoverageWriteFilenamesSectionToBuffer(\n     const char* const Filenames[],\n     size_t FilenamesLen,\n@@ -27,13 +38,22 @@ extern \"C\" void LLVMRustCoverageWriteMappingToBuffer(\n     unsigned NumVirtualFileMappingIDs,\n     const coverage::CounterExpression *Expressions,\n     unsigned NumExpressions,\n-    coverage::CounterMappingRegion *MappingRegions,\n+    LLVMRustCounterMappingRegion *RustMappingRegions,\n     unsigned NumMappingRegions,\n     RustStringRef BufferOut) {\n+  // Convert from FFI representation to LLVM representation.\n+  SmallVector<coverage::CounterMappingRegion, 0> MappingRegions;\n+  MappingRegions.reserve(NumMappingRegions);\n+  for (const auto &Region : makeArrayRef(RustMappingRegions, NumMappingRegions)) {\n+    MappingRegions.emplace_back(\n+        Region.Count, Region.FileID, Region.ExpandedFileID,\n+        Region.LineStart, Region.ColumnStart, Region.LineEnd, Region.ColumnEnd,\n+        Region.Kind);\n+  }\n   auto CoverageMappingWriter = coverage::CoverageMappingWriter(\n       makeArrayRef(VirtualFileMappingIDs, NumVirtualFileMappingIDs),\n       makeArrayRef(Expressions, NumExpressions),\n-      makeMutableArrayRef(MappingRegions, NumMappingRegions));\n+      MappingRegions);\n   RawRustStringOstream OS(BufferOut);\n   CoverageMappingWriter.write(OS);\n }"}]}