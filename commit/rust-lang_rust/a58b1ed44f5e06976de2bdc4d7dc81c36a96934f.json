{"sha": "a58b1ed44f5e06976de2bdc4d7dc81c36a96934f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1OGIxZWQ0NGY1ZTA2OTc2ZGUyYmRjNGQ3ZGM4MWMzNmE5NjkzNGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-25T07:26:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-25T07:26:17Z"}, "message": "Auto merge of #71458 - ecstatic-morse:bootstrap-cfg-doc, r=Mark-Simulacrum\n\nSet `--cfg bootstrap` for stage0 rustdoc\n\nResolves #71455.\n\nWith this patch, running `./x.py doc --stage 0 src/libstd` with a clean `build` dir successfully outputs docs for `core`, `alloc` and `std` in under a minute. This kind of turnaround for viewing small changes to the standard library documentation is quite nice, and I think we should endeavour to keep it working. I'm not sure how involved that would be though.\n\nr? @Mark-Simulacrum", "tree": {"sha": "54f1164cd3503ffbd0b9dc2b5775b23609b77673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54f1164cd3503ffbd0b9dc2b5775b23609b77673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a58b1ed44f5e06976de2bdc4d7dc81c36a96934f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a58b1ed44f5e06976de2bdc4d7dc81c36a96934f", "html_url": "https://github.com/rust-lang/rust/commit/a58b1ed44f5e06976de2bdc4d7dc81c36a96934f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a58b1ed44f5e06976de2bdc4d7dc81c36a96934f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40008dcb494a00571123b7d59115068a200ebe34", "url": "https://api.github.com/repos/rust-lang/rust/commits/40008dcb494a00571123b7d59115068a200ebe34", "html_url": "https://github.com/rust-lang/rust/commit/40008dcb494a00571123b7d59115068a200ebe34"}, {"sha": "08c8996ff6f152e2ac580fbabce46e97457185e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/08c8996ff6f152e2ac580fbabce46e97457185e3", "html_url": "https://github.com/rust-lang/rust/commit/08c8996ff6f152e2ac580fbabce46e97457185e3"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "4a664205bff0b6afeb32da99512e8cde177be96c", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a58b1ed44f5e06976de2bdc4d7dc81c36a96934f/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a58b1ed44f5e06976de2bdc4d7dc81c36a96934f/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=a58b1ed44f5e06976de2bdc4d7dc81c36a96934f", "patch": "@@ -791,6 +791,11 @@ impl<'a> Builder<'a> {\n             rustflags.arg(\"--cfg=bootstrap\");\n         }\n \n+        // FIXME: It might be better to use the same value for both `RUSTFLAGS` and `RUSTDOCFLAGS`,\n+        // but this breaks CI. At the very least, stage0 `rustdoc` needs `--cfg bootstrap`. See\n+        // #71458.\n+        let rustdocflags = rustflags.clone();\n+\n         if let Ok(s) = env::var(\"CARGOFLAGS\") {\n             cargo.args(s.split_whitespace());\n         }\n@@ -1269,7 +1274,7 @@ impl<'a> Builder<'a> {\n             }\n         }\n \n-        Cargo { command: cargo, rustflags }\n+        Cargo { command: cargo, rustflags, rustdocflags }\n     }\n \n     /// Ensure that a given step is built, returning its output. This will\n@@ -1327,7 +1332,7 @@ impl<'a> Builder<'a> {\n #[cfg(test)]\n mod tests;\n \n-#[derive(Debug)]\n+#[derive(Debug, Clone)]\n struct Rustflags(String);\n \n impl Rustflags {\n@@ -1367,6 +1372,7 @@ impl Rustflags {\n pub struct Cargo {\n     command: Command,\n     rustflags: Rustflags,\n+    rustdocflags: Rustflags,\n }\n \n impl Cargo {\n@@ -1399,7 +1405,16 @@ impl Cargo {\n \n impl From<Cargo> for Command {\n     fn from(mut cargo: Cargo) -> Command {\n-        cargo.command.env(\"RUSTFLAGS\", &cargo.rustflags.0);\n+        let rustflags = &cargo.rustflags.0;\n+        if !rustflags.is_empty() {\n+            cargo.command.env(\"RUSTFLAGS\", rustflags);\n+        }\n+\n+        let rustdocflags = &cargo.rustdocflags.0;\n+        if !rustdocflags.is_empty() {\n+            cargo.command.env(\"RUSTDOCFLAGS\", rustdocflags);\n+        }\n+\n         cargo.command\n     }\n }"}]}