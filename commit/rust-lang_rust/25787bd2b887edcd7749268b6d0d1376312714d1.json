{"sha": "25787bd2b887edcd7749268b6d0d1376312714d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1Nzg3YmQyYjg4N2VkY2Q3NzQ5MjY4YjZkMGQxMzc2MzEyNzE0ZDE=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T12:08:54Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T12:08:54Z"}, "message": "Forbid assignment to by-reference bindings\n\nIssue #918", "tree": {"sha": "0f4cc93b6c72f05dbc1854b9351a4011427c823b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f4cc93b6c72f05dbc1854b9351a4011427c823b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25787bd2b887edcd7749268b6d0d1376312714d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25787bd2b887edcd7749268b6d0d1376312714d1", "html_url": "https://github.com/rust-lang/rust/commit/25787bd2b887edcd7749268b6d0d1376312714d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25787bd2b887edcd7749268b6d0d1376312714d1/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7a1d6a1cb2fbfde899cdb72070ce42c2e2b49ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7a1d6a1cb2fbfde899cdb72070ce42c2e2b49ab", "html_url": "https://github.com/rust-lang/rust/commit/d7a1d6a1cb2fbfde899cdb72070ce42c2e2b49ab"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "8ad3a4ca934249ab16395fdc86503d2171e3e262", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -324,7 +324,7 @@ fn check_ret_ref(cx: ctx, sc: scope, mut: bool, expr: @ast::expr) {\n     let mut_field = mut_field(root.ds);\n     alt path_def(cx, root.ex) {\n       none. { bad = some(\"temporary\"); }\n-      some(ast::def_local(did)) | some(ast::def_binding(did)) |\n+      some(ast::def_local(did, _)) | some(ast::def_binding(did)) |\n       some(ast::def_arg(did, _)) {\n         let cur_node = did.node;\n         while true {\n@@ -590,7 +590,7 @@ fn ty_can_unsafely_include(cx: ctx, needle: ty::t, haystack: ty::t, mut: bool)\n \n fn def_is_local(d: ast::def, objfields_count: bool) -> bool {\n     ret alt d {\n-          ast::def_local(_) | ast::def_arg(_, _) | ast::def_binding(_) |\n+          ast::def_local(_, _) | ast::def_arg(_, _) | ast::def_binding(_) |\n           ast::def_upvar(_, _, _) {\n             true\n           }"}, {"sha": "641d72af16d3ecbdb0ec24375513dbdae244cd58", "filename": "src/comp/middle/mut.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Fmut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Fmut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmut.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -245,6 +245,7 @@ fn is_immutable_def(def: def) -> option::t<str> {\n         if !mut { some(\"upvar\") } else { is_immutable_def(*inner) }\n       }\n       def_binding(_) { some(\"binding\") }\n+      def_local(_, let_ref.) { some(\"by-reference binding\") }\n       _ { none }\n     }\n }"}, {"sha": "b8f10a8f3e765ab6ce53d812d44447e7a0971af3", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -608,7 +608,7 @@ fn scope_closes(sc: scope) -> option::t<bool> {\n \n fn def_is_local(d: def) -> bool {\n     ret alt d {\n-          ast::def_arg(_, _) | ast::def_local(_) | ast::def_binding(_) |\n+          ast::def_arg(_, _) | ast::def_local(_, _) | ast::def_binding(_) |\n           ast::def_upvar(_, _, _) {\n             true\n           }\n@@ -797,10 +797,12 @@ fn lookup_in_block(name: ident, b: ast::blk_, pos: uint, loc_pos: uint,\n                     let j = vec::len(locs);\n                     while j > 0u {\n                         j -= 1u;\n-                        let (_, loc) = locs[j];\n+                        let (style, loc) = locs[j];\n                         if ns == ns_value && (i < pos || j < loc_pos) {\n                             alt lookup_in_pat(name, loc.node.pat) {\n-                              some(did) { ret some(ast::def_local(did)); }\n+                              some(did) {\n+                                ret some(ast::def_local(did, style));\n+                              }\n                               _ { }\n                             }\n                         }\n@@ -1154,7 +1156,7 @@ fn ns_for_def(d: def) -> namespace {\n           ast::def_native_mod(_) { ns_module }\n           ast::def_const(_) { ns_value }\n           ast::def_arg(_, _) { ns_value }\n-          ast::def_local(_) { ns_value }\n+          ast::def_local(_, _) { ns_value }\n           ast::def_upvar(_, _, _) { ns_value }\n           ast::def_variant(_, _) { ns_value }\n           ast::def_ty(_) { ns_type }"}, {"sha": "c341a2a8ee7854aa2b119765ef6599061fe63bb9", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -2871,7 +2871,7 @@ fn trans_local_var(cx: @block_ctxt, def: ast::def) -> lval_result {\n         assert (cx.fcx.llargs.contains_key(did.node));\n         ret lval_mem(cx, cx.fcx.llargs.get(did.node));\n       }\n-      ast::def_local(did) {\n+      ast::def_local(did, _) {\n         assert (cx.fcx.lllocals.contains_key(did.node));\n         ret lval_mem(cx, cx.fcx.lllocals.get(did.node));\n       }\n@@ -4399,7 +4399,7 @@ fn trans_ret(cx: @block_ctxt, e: option::t<@ast::expr>) -> result {\n             let is_local = alt x.node {\n               ast::expr_path(p) {\n                 alt bcx_tcx(bcx).def_map.get(x.id) {\n-                  ast::def_local(_) { true }\n+                  ast::def_local(_, _) { true }\n                   _ { false }\n                 }\n               }"}, {"sha": "99d3252a2dc9b7ce8d40c5df734df0a1826192e2", "filename": "src/comp/middle/tstate/auxiliary.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -575,8 +575,8 @@ fn expr_to_constr_arg(tcx: ty::ctxt, e: @expr) -> @constr_arg_use {\n     alt e.node {\n       expr_path(p) {\n         alt tcx.def_map.find(e.id) {\n-          some(def_local(id)) | some(def_arg(id, _)) | some(def_binding(id)) |\n-          some(def_upvar(id, _, _)) {\n+          some(def_local(id, _)) | some(def_arg(id, _)) |\n+          some(def_binding(id)) | some(def_upvar(id, _, _)) {\n             ret @respan(p.span,\n                         carg_ident({ident: p.node.idents[0], node: id.node}));\n           }\n@@ -790,7 +790,8 @@ tag if_ty { if_check; plain_if; }\n fn local_node_id_to_def_id_strict(fcx: fn_ctxt, sp: span, i: node_id) ->\n    def_id {\n     alt local_node_id_to_def(fcx, i) {\n-      some(def_local(id)) | some(def_arg(id, _)) | some(def_upvar(id, _, _)) {\n+      some(def_local(id, _)) | some(def_arg(id, _)) |\n+      some(def_upvar(id, _, _)) {\n         ret id;\n       }\n       some(_) {\n@@ -813,7 +814,7 @@ fn local_node_id_to_def(fcx: fn_ctxt, i: node_id) -> option::t<def> {\n \n fn local_node_id_to_def_id(fcx: fn_ctxt, i: node_id) -> option::t<def_id> {\n     alt local_node_id_to_def(fcx, i) {\n-      some(def_local(id)) | some(def_arg(id, _)) | some(def_binding(id)) |\n+      some(def_local(id, _)) | some(def_arg(id, _)) | some(def_binding(id)) |\n       some(def_upvar(id, _, _)) {\n         some(id)\n       }"}, {"sha": "bfc698f73117c407b02ec53165e1c11a4d75e1d8", "filename": "src/comp/middle/tstate/bitvectors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -184,7 +184,7 @@ fn clear_in_poststate_expr(fcx: fn_ctxt, e: @expr, t: poststate) {\n         alt vec::last(p.node.idents) {\n           some(i) {\n             alt local_node_id_to_def(fcx, e.id) {\n-              some(def_local(d_id)) {\n+              some(def_local(d_id, _)) {\n                 clear_in_poststate_(bit_num(fcx, ninit(d_id.node, i)), t);\n               }\n               some(_) {/* ignore args (for now...) */ }"}, {"sha": "d7697d476685083d45b99943b4c2ac2a9cb783a9", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -197,7 +197,7 @@ fn gen_if_local(fcx: fn_ctxt, lhs: @expr, rhs: @expr, larger_id: node_id,\n     alt node_id_to_def(fcx.ccx, new_var) {\n       some(d) {\n         alt d {\n-          def_local(d_id) {\n+          def_local(d_id, _) {\n             find_pre_post_expr(fcx, rhs);\n             let p = expr_pp(fcx.ccx, rhs);\n             set_pre_and_post(fcx.ccx, larger_id, p.precondition,\n@@ -235,7 +235,7 @@ fn handle_update(fcx: fn_ctxt, parent: @expr, lhs: @expr, rhs: @expr,\n             // pure and assign_op require the lhs to be init'd\n             let df = node_id_to_def_strict(fcx.ccx.tcx, lhs.id);\n             alt df {\n-              def_local(d_id) {\n+              def_local(d_id, _) {\n                 let i =\n                     bit_num(fcx,\n                             ninit(d_id.node, path_to_ident(fcx.ccx.tcx, p)));\n@@ -281,7 +281,7 @@ fn handle_var(fcx: fn_ctxt, rslt: pre_and_post, id: node_id, name: ident) {\n \n fn handle_var_def(fcx: fn_ctxt, rslt: pre_and_post, def: def, name: ident) {\n     alt def {\n-      def_local(d_id) | def_arg(d_id, _) {\n+      def_local(d_id, _) | def_arg(d_id, _) {\n         use_var(fcx, d_id.node);\n         let i = bit_num(fcx, ninit(d_id.node, name));\n         require_and_preserve(i, rslt);"}, {"sha": "fd227d3042f7431be97490a8c5e54899fb7e8cf0", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -232,7 +232,7 @@ fn gen_if_local(fcx: fn_ctxt, p: poststate, e: @expr) -> bool {\n     alt e.node {\n       expr_path(pth) {\n         alt fcx.ccx.tcx.def_map.find(e.id) {\n-          some(def_local(loc)) {\n+          some(def_local(loc, _)) {\n             ret set_in_poststate_ident(fcx, loc.node,\n                                        path_to_ident(fcx.ccx.tcx, pth), p);\n           }"}, {"sha": "eeea7d4358f0706d98e2757d158ac9767942249c", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -2559,7 +2559,7 @@ fn def_has_ty_params(def: ast::def) -> bool {\n       ast::def_mod(_) { ret false; }\n       ast::def_const(_) { ret false; }\n       ast::def_arg(_, _) { ret false; }\n-      ast::def_local(_) { ret false; }\n+      ast::def_local(_, _) { ret false; }\n       ast::def_upvar(_, _, _) { ret false; }\n       ast::def_variant(_, _) { ret true; }\n       ast::def_ty(_) { ret false; }"}, {"sha": "226d012bf78231aa44e25c866231ea1318600463", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -92,7 +92,7 @@ fn ty_param_kinds_and_ty_for_def(fcx: @fn_ctxt, sp: span, defn: ast::def) ->\n         let typ = ty::mk_var(fcx.ccx.tcx, lookup_local(fcx, sp, id.node));\n         ret {kinds: no_kinds, ty: typ};\n       }\n-      ast::def_local(id) {\n+      ast::def_local(id, _) {\n         assert (fcx.locals.contains_key(id.node));\n         let typ = ty::mk_var(fcx.ccx.tcx, lookup_local(fcx, sp, id.node));\n         ret {kinds: no_kinds, ty: typ};"}, {"sha": "7f64b8de6993bb9b3a73dcdaeca28a153a0702e1", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -32,7 +32,7 @@ tag def {\n     def_native_mod(def_id);\n     def_const(def_id);\n     def_arg(def_id, mode);\n-    def_local(def_id);\n+    def_local(def_id, let_style);\n     def_variant(def_id, /* tag */def_id);\n \n     /* variant */"}, {"sha": "17c8ac2cef15d04eef454abd313d5979d51ad205", "filename": "src/comp/syntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25787bd2b887edcd7749268b6d0d1376312714d1/src%2Fcomp%2Fsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast_util.rs?ref=25787bd2b887edcd7749268b6d0d1376312714d1", "patch": "@@ -30,7 +30,7 @@ fn def_id_of_def(d: def) -> def_id {\n       def_native_mod(id) { ret id; }\n       def_const(id) { ret id; }\n       def_arg(id, _) { ret id; }\n-      def_local(id) { ret id; }\n+      def_local(id, _) { ret id; }\n       def_variant(_, id) { ret id; }\n       def_ty(id) { ret id; }\n       def_ty_arg(_, _) { fail; }"}]}