{"sha": "0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkOWVhNDI1Nzk4ZDZjYjQxMmZjMmQ4NWJiNDA5ZWRkZWUxZDRlZWQ=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-08-18T20:15:33Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-08-18T20:15:33Z"}, "message": "add tests", "tree": {"sha": "c326cf51d922cb22f596159a0dead983090cb0fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c326cf51d922cb22f596159a0dead983090cb0fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "html_url": "https://github.com/rust-lang/rust/commit/0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d0774d0dc98084d25d95cc1909a8051ebbd9cb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1", "html_url": "https://github.com/rust-lang/rust/commit/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1"}], "stats": {"total": 169, "additions": 169, "deletions": 0}, "files": [{"sha": "f98ae59ddfe3c8b60901e7571f456ac384e9c90a", "filename": "src/test/incremental/const-generics/hash-tyvid-regression-1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-1.rs?ref=0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "patch": "@@ -0,0 +1,15 @@\n+// revisions: cfail\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+// regression test for #77650\n+fn c<T, const N: std::num::NonZeroUsize>()\n+where\n+    [T; N.get()]: Sized,\n+{\n+    use std::convert::TryFrom;\n+    <[T; N.get()]>::try_from(())\n+    //~^ error: the trait bound\n+    //~^^ error: mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "cb8ca3abd7f9483793cec7381c14abbf54f1d1d2", "filename": "src/test/incremental/const-generics/hash-tyvid-regression-1.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-1.stderr?ref=0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "patch": "@@ -0,0 +1,35 @@\n+error[E0277]: the trait bound `[T; _]: From<()>` is not satisfied\n+  --> $DIR/hash-tyvid-regression-1.rs:9:5\n+   |\n+LL |     <[T; N.get()]>::try_from(())\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<()>` is not implemented for `[T; _]`\n+   |\n+   = note: required because of the requirements on the impl of `Into<[T; _]>` for `()`\n+   = note: required because of the requirements on the impl of `TryFrom<()>` for `[T; _]`\n+note: required by `try_from`\n+  --> $SRC_DIR/core/src/convert/mod.rs:LL:COL\n+   |\n+LL |     fn try_from(value: T) -> Result<Self, Self::Error>;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/hash-tyvid-regression-1.rs:9:5\n+   |\n+LL |     <[T; N.get()]>::try_from(())\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found enum `Result`\n+   |\n+   = note: expected unit type `()`\n+                   found enum `Result<[T; _], Infallible>`\n+help: consider using a semicolon here\n+   |\n+LL |     <[T; N.get()]>::try_from(());\n+   |                                 +\n+help: try adding a return type\n+   |\n+LL | -> Result<[T; _], Infallible> where\n+   | +++++++++++++++++++++++++++++\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0277, E0308.\n+For more information about an error, try `rustc --explain E0277`."}, {"sha": "22536ff56d7ce91b8e4ad9a4dcf4c8335a8af310", "filename": "src/test/incremental/const-generics/hash-tyvid-regression-2.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-2.rs?ref=0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "patch": "@@ -0,0 +1,18 @@\n+// revisions: cfail\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+// regression test for #77650\n+struct C<T, const N: core::num::NonZeroUsize>([T; N.get()])\n+where\n+    [T; N.get()]: Sized;\n+impl<'a, const N: core::num::NonZeroUsize, A, B: PartialEq<A>> PartialEq<&'a [A]> for C<B, N>\n+where\n+    [B; N.get()]: Sized,\n+{\n+    fn eq(&self, other: &&'a [A]) -> bool {\n+        self.0 == other\n+        //~^ error: can't compare\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "0e6040ef02e7ae23b943f2a9984b8c842a41da02", "filename": "src/test/incremental/const-generics/hash-tyvid-regression-2.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-2.stderr?ref=0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "patch": "@@ -0,0 +1,11 @@\n+error[E0277]: can't compare `[B; _]` with `&&[A]`\n+  --> $DIR/hash-tyvid-regression-2.rs:12:16\n+   |\n+LL |         self.0 == other\n+   |                ^^ no implementation for `[B; _] == &&[A]`\n+   |\n+   = help: the trait `PartialEq<&&[A]>` is not implemented for `[B; _]`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "76b1ae11c7d039c9bf0d2b34fcf904b993db0192", "filename": "src/test/incremental/const-generics/hash-tyvid-regression-3.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-3.rs?ref=0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "patch": "@@ -0,0 +1,26 @@\n+// revisions: cfail\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+// regression test for #79251\n+struct Node<const D: usize>\n+where\n+    SmallVec<{ D * 2 }>: ,\n+{\n+    keys: SmallVec<{ D * 2 }>,\n+}\n+\n+impl<const D: usize> Node<D>\n+where\n+    SmallVec<{ D * 2 }>: ,\n+{\n+    fn new() -> Self {\n+        let mut node = Node::new();\n+        node.keys.some_function();\n+        //~^ error: no method named\n+        node\n+    }\n+}\n+\n+struct SmallVec<const D: usize> {}\n+\n+fn main() {}"}, {"sha": "555d46756dcb926e8be475a6789009e586fcf97c", "filename": "src/test/incremental/const-generics/hash-tyvid-regression-3.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-3.stderr?ref=0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "patch": "@@ -0,0 +1,12 @@\n+error[E0599]: no method named `some_function` found for struct `SmallVec` in the current scope\n+  --> $DIR/hash-tyvid-regression-3.rs:17:19\n+   |\n+LL |         node.keys.some_function();\n+   |                   ^^^^^^^^^^^^^ method not found in `SmallVec<{ D * 2 }>`\n+...\n+LL | struct SmallVec<const D: usize> {}\n+   | ------------------------------- method `some_function` not found for this\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}, {"sha": "35a675a2ab4d26ce7a7a3cf77147ef176d8f5444", "filename": "src/test/incremental/const-generics/hash-tyvid-regression-4.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-4.rs?ref=0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "patch": "@@ -0,0 +1,40 @@\n+// revisions: cfail\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+// regression test for #79251\n+#[derive(Debug)]\n+struct Node<K, const D: usize>\n+where\n+    SmallVec<K, { D * 2 }>: ,\n+{\n+    keys: SmallVec<K, { D * 2 }>,\n+}\n+\n+impl<K, const D: usize> Node<K, D>\n+where\n+    SmallVec<K, { D * 2 }>: ,\n+{\n+    fn new() -> Self {\n+        panic!()\n+    }\n+\n+    #[inline(never)]\n+    fn split(&mut self, i: usize, k: K, right: bool) -> Node<K, D> {\n+        let mut node = Node::new();\n+        node.keys.push(k);\n+        //~^ error: no method named\n+        node\n+    }\n+}\n+\n+#[derive(Debug)]\n+struct SmallVec<T, const D: usize> {\n+    data: [T; D],\n+}\n+impl<T, const D: usize> SmallVec<T, D> {\n+    fn new() -> Self {\n+        panic!()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "c9a6715e571c9f76b88af4a82b84678691757c78", "filename": "src/test/incremental/const-generics/hash-tyvid-regression-4.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d9ea425798d6cb412fc2d85bb409eddee1d4eed/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fhash-tyvid-regression-4.stderr?ref=0d9ea425798d6cb412fc2d85bb409eddee1d4eed", "patch": "@@ -0,0 +1,12 @@\n+error[E0599]: no method named `push` found for struct `SmallVec` in the current scope\n+  --> $DIR/hash-tyvid-regression-4.rs:23:19\n+   |\n+LL |         node.keys.push(k);\n+   |                   ^^^^ method not found in `SmallVec<_, { D * 2 }>`\n+...\n+LL | struct SmallVec<T, const D: usize> {\n+   | ---------------------------------- method `push` not found for this\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}