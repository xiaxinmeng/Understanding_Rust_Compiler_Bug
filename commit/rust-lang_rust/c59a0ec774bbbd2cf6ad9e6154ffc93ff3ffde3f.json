{"sha": "c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1OWEwZWM3NzRiYmJkMmNmNmFkOWU2MTU0ZmZjOTNmZjNmZmRlM2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-15T22:56:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T09:07:41Z"}, "message": "rustdoc: Move parse module to its own file", "tree": {"sha": "b58ebbb331336a35986e8bfeaeb8bf41b5428d48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b58ebbb331336a35986e8bfeaeb8bf41b5428d48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f", "html_url": "https://github.com/rust-lang/rust/commit/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "377316d8f607aeb4dda448abb14c8169adfba770", "url": "https://api.github.com/repos/rust-lang/rust/commits/377316d8f607aeb4dda448abb14c8169adfba770", "html_url": "https://github.com/rust-lang/rust/commit/377316d8f607aeb4dda448abb14c8169adfba770"}], "stats": {"total": 47, "additions": 23, "deletions": 24}, "files": [{"sha": "2969c423b7365378d797fd3d9bd1172ea16039f0", "filename": "src/rustdoc/parse.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f/src%2Frustdoc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f/src%2Frustdoc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fparse.rs?ref=c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f", "patch": "@@ -0,0 +1,21 @@\n+export from_file, from_str;\n+\n+fn new_parse_sess() -> parser::parse_sess {\n+    let cm = codemap::new_codemap();\n+    let sess = @{\n+        cm: cm,\n+        mutable next_id: 0,\n+        diagnostic: diagnostic::mk_handler(cm, none)\n+    };\n+    ret sess;\n+}\n+\n+fn from_file(file: str) -> @ast::crate {\n+    parser::parse_crate_from_source_file(\n+        file, [], new_parse_sess())\n+}\n+\n+fn from_str(source: str) -> @ast::crate {\n+    parser::parse_crate_from_source_str(\n+        \"-\", source, [], new_parse_sess())\n+}"}, {"sha": "668edbe6e331b664fe42020a8cbd121892108988", "filename": "src/rustdoc/rustdoc.rc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f/src%2Frustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f/src%2Frustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rc?ref=c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f", "patch": "@@ -6,3 +6,5 @@\n #[desc = \"The Rust documentation generator\"];\n #[license = \"MIT\"];\n #[crate_type = \"bin\"];\n+\n+mod parse;\n\\ No newline at end of file"}, {"sha": "154d4ff2e4cddd55cac8071ce505abdf2172cf74", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=c59a0ec774bbbd2cf6ad9e6154ffc93ff3ffde3f", "patch": "@@ -177,30 +177,6 @@ fn doc_header(rd: rustdoc, name: str) {\n     rd.w.write_line(\"# Crate \" + name);\n }\n \n-mod parse {\n-    export from_file, from_str;\n-\n-    fn new_parse_sess() -> parser::parse_sess {\n-        let cm = codemap::new_codemap();\n-        let sess = @{\n-            cm: cm,\n-            mutable next_id: 0,\n-            diagnostic: diagnostic::mk_handler(cm, none)\n-        };\n-        ret sess;\n-    }\n-\n-    fn from_file(file: str) -> @ast::crate {\n-        parser::parse_crate_from_source_file(\n-            file, [], new_parse_sess())\n-    }\n-\n-    fn from_str(source: str) -> @ast::crate {\n-        parser::parse_crate_from_source_str(\n-            \"-\", source, [], new_parse_sess())\n-    }\n-}\n-\n #[doc(\n   brief = \"Main function.\",\n   desc = \"Command-line arguments:"}]}