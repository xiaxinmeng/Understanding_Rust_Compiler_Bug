{"sha": "e267fb4edec86c84b6c0e415a647ba9f8b9f0c9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNjdmYjRlZGVjODZjODRiNmMwZTQxNWE2NDdiYTlmOGI5ZjBjOWU=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-27T03:13:36Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-27T03:13:36Z"}, "message": "Review comments", "tree": {"sha": "d4026d7ca489eb1643ec4a0330f2baa69ceac7bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4026d7ca489eb1643ec4a0330f2baa69ceac7bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e267fb4edec86c84b6c0e415a647ba9f8b9f0c9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e267fb4edec86c84b6c0e415a647ba9f8b9f0c9e", "html_url": "https://github.com/rust-lang/rust/commit/e267fb4edec86c84b6c0e415a647ba9f8b9f0c9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e267fb4edec86c84b6c0e415a647ba9f8b9f0c9e/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f92eab3c477f321a55f53b6e04ac8ca2cd04ebf", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f92eab3c477f321a55f53b6e04ac8ca2cd04ebf", "html_url": "https://github.com/rust-lang/rust/commit/7f92eab3c477f321a55f53b6e04ac8ca2cd04ebf"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "114f1d9be3623bdb77d95d582b897398d02811ca", "filename": "src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e267fb4edec86c84b6c0e415a647ba9f8b9f0c9e/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e267fb4edec86c84b6c0e415a647ba9f8b9f0c9e/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=e267fb4edec86c84b6c0e415a647ba9f8b9f0c9e", "patch": "@@ -115,8 +115,9 @@ pub fn report_error<'tcx, 'mir>(\n \n     e.print_backtrace();\n     let msg = e.to_string();\n-    let result = report_msg(ecx, &format!(\"{}: {}\", title, msg), msg, helps, true);\n+    report_msg(ecx, &format!(\"{}: {}\", title, msg), msg, helps, true);\n \n+    // Extra output to help debug specific issues.\n     if let UndefinedBehavior(UndefinedBehaviorInfo::InvalidUndefBytes(Some(ptr))) = e.kind {\n         eprintln!(\n             \"Uninitialized read occurred at offset 0x{:x} into this allocation:\",\n@@ -126,7 +127,7 @@ pub fn report_error<'tcx, 'mir>(\n         eprintln!();\n     }\n \n-    result\n+    None\n }\n \n /// Report an error or note (depending on the `error` argument) at the current frame's current statement.\n@@ -137,7 +138,7 @@ fn report_msg<'tcx, 'mir>(\n     span_msg: String,\n     mut helps: Vec<String>,\n     error: bool,\n-) -> Option<i64> {\n+) {\n     let span = if let Some(frame) = ecx.machine.stack.last() {\n         frame.current_source_info().unwrap().span\n     } else {\n@@ -178,8 +179,6 @@ fn report_msg<'tcx, 'mir>(\n             trace!(\"    local {}: {:?}\", i, local.value);\n         }\n     }\n-    // Let the reported error determine the return code.\n-    return None;\n }\n \n thread_local! {"}]}