{"sha": "34285def872a2a797514fe72308eee383a583cc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0Mjg1ZGVmODcyYTJhNzk3NTE0ZmU3MjMwOGVlZTM4M2E1ODNjYzg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-22T01:20:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-22T01:20:30Z"}, "message": "Rollup merge of #82771 - emilio:iter-mut-as-slice, r=m-ou-se\n\nslice: Stabilize IterMut::as_slice.\n\nMuch like #72584.\n\nAs per #58957 there's no blocker for this, and I wanted to use this\ntoday :-)\n\nCloses #58957", "tree": {"sha": "adc318a774fc6db1ad74d32071906d0eb2610cf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adc318a774fc6db1ad74d32071906d0eb2610cf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34285def872a2a797514fe72308eee383a583cc8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgV/DeCRBK7hj4Ov3rIwAAdHIIAISFVA221k42ALSWDVso3W7c\nt41FO8iByXsBSTrL8+9pwlY2R0bPBI5H6uARbVBiilRebuAgtiAFSl6KJBis4wrU\n5KPSlBdvftrWxrkSdDkCbi09UqOEJdMHhGOIVXTN41YpQRww3hRSObCMpi7Z4hZF\nuRFFoE3Xd3zwCJujW1UVkrLP5zFZs4WAk8LSFGm6Y6dwu4DSXEp2RerLIXvGvgXk\nHtKYkJvJcs2g+uOI4815xnpCtqMtQFo5gNH8aVeIczcPP3GNPg7oMuaDmshebyxg\nxanDRvavMRptWgtDRdGnOBMyCk5wW4NH686OvhoAqriWmRP2wPMajT0xTtydaT0=\n=H1PN\n-----END PGP SIGNATURE-----\n", "payload": "tree adc318a774fc6db1ad74d32071906d0eb2610cf3\nparent c66d66e8d1212b4f2f19a6805e05e24b34f4bdae\nparent 2bd7c1b5de8bdbc7cafa2ee496ef9d80381fb0dd\nauthor Dylan DPC <dylan.dpc@gmail.com> 1616376030 +0100\ncommitter GitHub <noreply@github.com> 1616376030 +0100\n\nRollup merge of #82771 - emilio:iter-mut-as-slice, r=m-ou-se\n\nslice: Stabilize IterMut::as_slice.\n\nMuch like #72584.\n\nAs per #58957 there's no blocker for this, and I wanted to use this\ntoday :-)\n\nCloses #58957\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34285def872a2a797514fe72308eee383a583cc8", "html_url": "https://github.com/rust-lang/rust/commit/34285def872a2a797514fe72308eee383a583cc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34285def872a2a797514fe72308eee383a583cc8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66d66e8d1212b4f2f19a6805e05e24b34f4bdae", "url": "https://api.github.com/repos/rust-lang/rust/commits/c66d66e8d1212b4f2f19a6805e05e24b34f4bdae", "html_url": "https://github.com/rust-lang/rust/commit/c66d66e8d1212b4f2f19a6805e05e24b34f4bdae"}, {"sha": "2bd7c1b5de8bdbc7cafa2ee496ef9d80381fb0dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bd7c1b5de8bdbc7cafa2ee496ef9d80381fb0dd", "html_url": "https://github.com/rust-lang/rust/commit/2bd7c1b5de8bdbc7cafa2ee496ef9d80381fb0dd"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "1ee662c6c8e3cc60938552e7bd71913abe91e833", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/34285def872a2a797514fe72308eee383a583cc8/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34285def872a2a797514fe72308eee383a583cc8/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=34285def872a2a797514fe72308eee383a583cc8", "patch": "@@ -286,7 +286,6 @@ impl<'a, T> IterMut<'a, T> {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// # #![feature(slice_iter_mut_as_slice)]\n     /// let mut slice: &mut [usize] = &mut [1, 2, 3];\n     ///\n     /// // First, we get the iterator:\n@@ -299,12 +298,19 @@ impl<'a, T> IterMut<'a, T> {\n     /// // Now `as_slice` returns \"[2, 3]\":\n     /// assert_eq!(iter.as_slice(), &[2, 3]);\n     /// ```\n-    #[unstable(feature = \"slice_iter_mut_as_slice\", reason = \"recently added\", issue = \"58957\")]\n+    #[stable(feature = \"slice_iter_mut_as_slice\", since = \"1.53.0\")]\n     pub fn as_slice(&self) -> &[T] {\n         self.make_slice()\n     }\n }\n \n+#[stable(feature = \"slice_iter_mut_as_slice\", since = \"1.53.0\")]\n+impl<T> AsRef<[T]> for IterMut<'_, T> {\n+    fn as_ref(&self) -> &[T] {\n+        self.as_slice()\n+    }\n+}\n+\n iterator! {struct IterMut -> *mut T, &'a mut T, mut, {mut}, {}}\n \n /// An internal abstraction over the splitting iterators, so that"}]}