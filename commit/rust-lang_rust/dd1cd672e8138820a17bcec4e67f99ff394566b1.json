{"sha": "dd1cd672e8138820a17bcec4e67f99ff394566b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMWNkNjcyZTgxMzg4MjBhMTdiY2VjNGU2N2Y5OWZmMzk0NTY2YjE=", "commit": {"author": {"name": "DPC", "email": "dylan.dpc@gmail.com", "date": "2020-08-24T22:59:07Z"}, "committer": {"name": "DPC", "email": "dylan.dpc@gmail.com", "date": "2020-08-24T22:59:07Z"}, "message": "removed not-needed conversion", "tree": {"sha": "6e88731bdcf49ba7f164fad96e84370bc5cce606", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e88731bdcf49ba7f164fad96e84370bc5cce606"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd1cd672e8138820a17bcec4e67f99ff394566b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd1cd672e8138820a17bcec4e67f99ff394566b1", "html_url": "https://github.com/rust-lang/rust/commit/dd1cd672e8138820a17bcec4e67f99ff394566b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd1cd672e8138820a17bcec4e67f99ff394566b1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cc2cabee25a2ea74d13720c980bfd0379b9945a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cc2cabee25a2ea74d13720c980bfd0379b9945a", "html_url": "https://github.com/rust-lang/rust/commit/4cc2cabee25a2ea74d13720c980bfd0379b9945a"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "3afe8d229437386a2e60d4ac3990d3a2637358c1", "filename": "src/librustc_mir/util/aggregate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd1cd672e8138820a17bcec4e67f99ff394566b1/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1cd672e8138820a17bcec4e67f99ff394566b1/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Faggregate.rs?ref=dd1cd672e8138820a17bcec4e67f99ff394566b1", "patch": "@@ -52,8 +52,7 @@ pub fn expand_aggregate<'tcx>(\n         .enumerate()\n         .map(move |(i, (op, ty))| {\n             let lhs_field = if let AggregateKind::Array(_) = kind {\n-                let offset = i as u64;\n-                assert_eq!(offset as usize, i);\n+                let offset = u64::try_from(i).unwrap();\n                 tcx.mk_place_elem(\n                     lhs,\n                     ProjectionElem::ConstantIndex {"}]}