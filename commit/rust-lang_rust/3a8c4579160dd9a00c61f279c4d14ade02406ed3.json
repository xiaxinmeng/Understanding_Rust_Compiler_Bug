{"sha": "3a8c4579160dd9a00c61f279c4d14ade02406ed3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhOGM0NTc5MTYwZGQ5YTAwYzYxZjI3OWM0ZDE0YWRlMDI0MDZlZDM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-31T13:22:21Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-02T10:25:26Z"}, "message": "Remove host_hash from CrateLocator", "tree": {"sha": "650b4cee520c62f1650ce5aaa8bd1b942eb76a0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/650b4cee520c62f1650ce5aaa8bd1b942eb76a0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a8c4579160dd9a00c61f279c4d14ade02406ed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8c4579160dd9a00c61f279c4d14ade02406ed3", "html_url": "https://github.com/rust-lang/rust/commit/3a8c4579160dd9a00c61f279c4d14ade02406ed3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a8c4579160dd9a00c61f279c4d14ade02406ed3/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3ada4e68add8972b1e45eecf383d51b62f6b1c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3ada4e68add8972b1e45eecf383d51b62f6b1c7", "html_url": "https://github.com/rust-lang/rust/commit/a3ada4e68add8972b1e45eecf383d51b62f6b1c7"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "0704c9a40e20b2308d88d92fce5117e64c49d096", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a8c4579160dd9a00c61f279c4d14ade02406ed3/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a8c4579160dd9a00c61f279c4d14ade02406ed3/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=3a8c4579160dd9a00c61f279c4d14ade02406ed3", "patch": "@@ -450,6 +450,7 @@ impl<'a> CrateLoader<'a> {\n         &self,\n         locator: &mut CrateLocator<'b>,\n         path_kind: PathKind,\n+        host_hash: Option<Svh>,\n     ) -> Result<Option<(LoadResult, Option<Library>)>, CrateError>\n     where\n         'a: 'b,\n@@ -471,7 +472,7 @@ impl<'a> CrateLoader<'a> {\n                 Some(LoadResult::Loaded(library)) => Some(LoadResult::Loaded(library)),\n                 None => return Ok(None),\n             };\n-            locator.hash = locator.host_hash;\n+            locator.hash = host_hash;\n             // Use the locator when looking for the host proc macro crate, as that is required\n             // so we want it to affect the error message\n             (locator, result)\n@@ -551,7 +552,6 @@ impl<'a> CrateLoader<'a> {\n                 &*self.metadata_loader,\n                 name,\n                 hash,\n-                host_hash,\n                 extra_filename,\n                 false, // is_host\n                 path_kind,\n@@ -562,7 +562,7 @@ impl<'a> CrateLoader<'a> {\n                 Some(res) => (res, None),\n                 None => {\n                     dep_kind = CrateDepKind::MacrosOnly;\n-                    match self.load_proc_macro(&mut locator, path_kind)? {\n+                    match self.load_proc_macro(&mut locator, path_kind, host_hash)? {\n                         Some(res) => res,\n                         None => return Err(locator.into_error()),\n                     }"}, {"sha": "f0996f2fd28a0177ace5963c1672cea8e75e178b", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a8c4579160dd9a00c61f279c4d14ade02406ed3/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a8c4579160dd9a00c61f279c4d14ade02406ed3/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=3a8c4579160dd9a00c61f279c4d14ade02406ed3", "patch": "@@ -248,7 +248,6 @@ crate struct CrateLocator<'a> {\n     crate_name: Symbol,\n     exact_paths: Vec<CanonicalizedPath>,\n     pub hash: Option<Svh>,\n-    pub host_hash: Option<Svh>,\n     extra_filename: Option<&'a str>,\n     pub target: &'a Target,\n     pub triple: TargetTriple,\n@@ -299,7 +298,6 @@ impl<'a> CrateLocator<'a> {\n         metadata_loader: &'a dyn MetadataLoader,\n         crate_name: Symbol,\n         hash: Option<Svh>,\n-        host_hash: Option<Svh>,\n         extra_filename: Option<&'a str>,\n         is_host: bool,\n         path_kind: PathKind,\n@@ -334,7 +332,6 @@ impl<'a> CrateLocator<'a> {\n                 Vec::new()\n             },\n             hash,\n-            host_hash,\n             extra_filename,\n             target: if is_host { &sess.host } else { &sess.target },\n             triple: if is_host {\n@@ -807,7 +804,6 @@ fn find_plugin_registrar_impl<'a>(\n         metadata_loader,\n         name,\n         None, // hash\n-        None, // host_hash\n         None, // extra_filename\n         true, // is_host\n         PathKind::Crate,"}]}