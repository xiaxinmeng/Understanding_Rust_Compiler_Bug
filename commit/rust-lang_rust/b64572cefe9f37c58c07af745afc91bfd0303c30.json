{"sha": "b64572cefe9f37c58c07af745afc91bfd0303c30", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NDU3MmNlZmU5ZjM3YzU4YzA3YWY3NDVhZmM5MWJmZDAzMDNjMzA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-03T19:51:26Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-03T21:00:31Z"}, "message": "Add unmarked_api feature (fixes #21884)", "tree": {"sha": "0d9bc8da1c42b78137e11f726f1cf491b4dfff6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d9bc8da1c42b78137e11f726f1cf491b4dfff6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b64572cefe9f37c58c07af745afc91bfd0303c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b64572cefe9f37c58c07af745afc91bfd0303c30", "html_url": "https://github.com/rust-lang/rust/commit/b64572cefe9f37c58c07af745afc91bfd0303c30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b64572cefe9f37c58c07af745afc91bfd0303c30/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aa661ab3608551edab18584b958d281f8e4c094", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aa661ab3608551edab18584b958d281f8e4c094", "html_url": "https://github.com/rust-lang/rust/commit/4aa661ab3608551edab18584b958d281f8e4c094"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "3a69489df2a4b8d8afda14e93a6514ff33386800", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b64572cefe9f37c58c07af745afc91bfd0303c30/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64572cefe9f37c58c07af745afc91bfd0303c30/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=b64572cefe9f37c58c07af745afc91bfd0303c30", "patch": "@@ -253,10 +253,19 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n             None => {\n                 // This is an 'unmarked' API, which should not exist\n                 // in the standard library.\n-                self.tcx.sess.span_err(span, \"use of unmarked library feature\");\n-                self.tcx.sess.span_note(span, \"this is either a bug in the library you are \\\n-                                               using or a bug in the compiler - there is \\\n-                                               no way to use this feature\");\n+                if self.tcx.sess.features.borrow().unmarked_api {\n+                    self.tcx.sess.span_warn(span, \"use of unmarked library feature\");\n+                    self.tcx.sess.span_note(span, \"this is either a bug in the library you are \\\n+                                                   using and a bug in the compiler - please \\\n+                                                   report it in both places\");\n+                } else {\n+                    self.tcx.sess.span_err(span, \"use of unmarked library feature\");\n+                    self.tcx.sess.span_note(span, \"this is either a bug in the library you are \\\n+                                                   using and a bug in the compiler - please \\\n+                                                   report it in both places\");\n+                    self.tcx.sess.span_note(span, \"use #![feature(unmarked_api)] in the \\\n+                                                   crate attributes to override this\");\n+                }\n             }\n         }\n     }"}, {"sha": "d7a51e1149f30b0931636d3e551a0d9e4410d976", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b64572cefe9f37c58c07af745afc91bfd0303c30/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64572cefe9f37c58c07af745afc91bfd0303c30/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=b64572cefe9f37c58c07af745afc91bfd0303c30", "patch": "@@ -119,6 +119,9 @@ static KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n \n     // Allows use of #[staged_api]\n     (\"staged_api\", \"1.0.0\", Active),\n+\n+    // Allows using items which are missing stability attributes\n+    (\"unmarked_api\", \"1.0.0\", Active)\n ];\n \n enum Status {\n@@ -145,6 +148,7 @@ pub struct Features {\n     pub quote: bool,\n     pub old_orphan_check: bool,\n     pub simd_ffi: bool,\n+    pub unmarked_api: bool,\n     pub lib_features: Vec<(InternedString, Span)>\n }\n \n@@ -157,6 +161,7 @@ impl Features {\n             quote: false,\n             old_orphan_check: false,\n             simd_ffi: false,\n+            unmarked_api: false,\n             lib_features: Vec::new()\n         }\n     }\n@@ -566,6 +571,7 @@ fn check_crate_inner<F>(cm: &CodeMap, span_handler: &SpanHandler, krate: &ast::C\n         quote: cx.has_feature(\"quote\"),\n         old_orphan_check: cx.has_feature(\"old_orphan_check\"),\n         simd_ffi: cx.has_feature(\"simd_ffi\"),\n+        unmarked_api: cx.has_feature(\"unmarked_api\"),\n         lib_features: unknown_features\n     }\n }"}]}