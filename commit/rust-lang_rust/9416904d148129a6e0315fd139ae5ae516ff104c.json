{"sha": "9416904d148129a6e0315fd139ae5ae516ff104c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MTY5MDRkMTQ4MTI5YTZlMDMxNWZkMTM5YWU1YWU1MTZmZjEwNGM=", "commit": {"author": {"name": "WizardOfMenlo", "email": "giacomofenzi@outlook.com", "date": "2019-01-28T14:52:43Z"}, "committer": {"name": "WizardOfMenlo", "email": "giacomofenzi@outlook.com", "date": "2019-01-28T14:52:43Z"}, "message": "Added support for primitive types type inference when using std::ops::Not", "tree": {"sha": "b6a2754810348a9675cd86e4343e4a6bd725111e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6a2754810348a9675cd86e4343e4a6bd725111e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9416904d148129a6e0315fd139ae5ae516ff104c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9416904d148129a6e0315fd139ae5ae516ff104c", "html_url": "https://github.com/rust-lang/rust/commit/9416904d148129a6e0315fd139ae5ae516ff104c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9416904d148129a6e0315fd139ae5ae516ff104c/comments", "author": {"login": "WizardOfMenlo", "id": 9511741, "node_id": "MDQ6VXNlcjk1MTE3NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/9511741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WizardOfMenlo", "html_url": "https://github.com/WizardOfMenlo", "followers_url": "https://api.github.com/users/WizardOfMenlo/followers", "following_url": "https://api.github.com/users/WizardOfMenlo/following{/other_user}", "gists_url": "https://api.github.com/users/WizardOfMenlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WizardOfMenlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WizardOfMenlo/subscriptions", "organizations_url": "https://api.github.com/users/WizardOfMenlo/orgs", "repos_url": "https://api.github.com/users/WizardOfMenlo/repos", "events_url": "https://api.github.com/users/WizardOfMenlo/events{/privacy}", "received_events_url": "https://api.github.com/users/WizardOfMenlo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WizardOfMenlo", "id": 9511741, "node_id": "MDQ6VXNlcjk1MTE3NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/9511741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WizardOfMenlo", "html_url": "https://github.com/WizardOfMenlo", "followers_url": "https://api.github.com/users/WizardOfMenlo/followers", "following_url": "https://api.github.com/users/WizardOfMenlo/following{/other_user}", "gists_url": "https://api.github.com/users/WizardOfMenlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WizardOfMenlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WizardOfMenlo/subscriptions", "organizations_url": "https://api.github.com/users/WizardOfMenlo/orgs", "repos_url": "https://api.github.com/users/WizardOfMenlo/repos", "events_url": "https://api.github.com/users/WizardOfMenlo/events{/privacy}", "received_events_url": "https://api.github.com/users/WizardOfMenlo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebb19bb95c79671d5ef1e21a8fcb4daafc356490", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebb19bb95c79671d5ef1e21a8fcb4daafc356490", "html_url": "https://github.com/rust-lang/rust/commit/ebb19bb95c79671d5ef1e21a8fcb4daafc356490"}], "stats": {"total": 56, "additions": 41, "deletions": 15}, "files": [{"sha": "81cff8c474dce5fd9e998075eddde244686b9aba", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9416904d148129a6e0315fd139ae5ae516ff104c/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9416904d148129a6e0315fd139ae5ae516ff104c/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=9416904d148129a6e0315fd139ae5ae516ff104c", "patch": "@@ -1588,9 +1588,17 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                             _ => Ty::Unknown,\n                         }\n                     }\n-                    UnaryOp::Not if inner_ty == Ty::Bool => Ty::Bool,\n-                    // TODO: resolve ops::Not trait for inner_ty\n-                    UnaryOp::Not => Ty::Unknown,\n+                    UnaryOp::Not => {\n+                        match inner_ty {\n+                            Ty::Bool\n+                            | Ty::Int(primitive::UncertainIntTy::Unknown)\n+                            | Ty::Int(primitive::UncertainIntTy::Signed(..))\n+                            | Ty::Int(primitive::UncertainIntTy::Unsigned(..))\n+                            | Ty::Infer(InferTy::IntVar(..)) => inner_ty,\n+                            // TODO: resolve ops::Not trait for inner_ty\n+                            _ => Ty::Unknown,\n+                        }\n+                    }\n                 }\n             }\n             Expr::BinaryOp { lhs, rhs, op } => match op {"}, {"sha": "5021d0eeba7366553828cc6ba45845f612541406", "filename": "crates/ra_hir/src/ty/snapshots/tests__infer_unary_op.snap", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/9416904d148129a6e0315fd139ae5ae516ff104c/crates%2Fra_hir%2Fsrc%2Fty%2Fsnapshots%2Ftests__infer_unary_op.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9416904d148129a6e0315fd139ae5ae516ff104c/crates%2Fra_hir%2Fsrc%2Fty%2Fsnapshots%2Ftests__infer_unary_op.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fsnapshots%2Ftests__infer_unary_op.snap?ref=9416904d148129a6e0315fd139ae5ae516ff104c", "patch": "@@ -1,11 +1,11 @@\n ---\n-created: \"2019-01-22T14:45:00.059676600+00:00\"\n-creator: insta@0.4.0\n+created: \"2019-01-28T14:51:16.185273502+00:00\"\n+creator: insta@0.5.2\n expression: \"&result\"\n-source: \"crates\\\\ra_hir\\\\src\\\\ty\\\\tests.rs\"\n+source: crates/ra_hir/src/ty/tests.rs\n ---\n [27; 28) 'x': SomeType\n-[40; 197) '{     ...lo\"; }': ()\n+[40; 272) '{     ...lo\"; }': ()\n [50; 51) 'b': bool\n [54; 59) 'false': bool\n [69; 70) 'c': bool\n@@ -24,12 +24,25 @@ source: \"crates\\\\ra_hir\\\\src\\\\ty\\\\tests.rs\"\n [147; 153) '!!true': bool\n [148; 153) '!true': bool\n [149; 153) 'true': bool\n-[159; 164) '-3.14': f64\n-[160; 164) '3.14': f64\n-[170; 172) '-x': [unknown]\n-[171; 172) 'x': SomeType\n-[178; 180) '!x': [unknown]\n-[179; 180) 'x': SomeType\n-[186; 194) '-\"hello\"': [unknown]\n-[187; 194) '\"hello\"': &str\n+[163; 164) 'g': i32\n+[167; 170) '!42': i32\n+[168; 170) '42': i32\n+[180; 181) 'h': u32\n+[184; 190) '!10u32': u32\n+[185; 190) '10u32': u32\n+[200; 201) 'j': i128\n+[204; 206) '!a': i128\n+[205; 206) 'a': i128\n+[212; 217) '-3.14': f64\n+[213; 217) '3.14': f64\n+[223; 225) '!3': i32\n+[224; 225) '3': i32\n+[231; 233) '-x': [unknown]\n+[232; 233) 'x': SomeType\n+[239; 241) '!x': [unknown]\n+[240; 241) 'x': SomeType\n+[247; 255) '-\"hello\"': [unknown]\n+[248; 255) '\"hello\"': &str\n+[261; 269) '!\"hello\"': [unknown]\n+[262; 269) '\"hello\"': &str\n "}, {"sha": "b36e6ec47d0abddb4c1841de209931bb3b589f9a", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9416904d148129a6e0315fd139ae5ae516ff104c/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9416904d148129a6e0315fd139ae5ae516ff104c/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=9416904d148129a6e0315fd139ae5ae516ff104c", "patch": "@@ -166,10 +166,15 @@ fn test(x: SomeType) {\n     let d: i128 = -a;\n     let e = -100;\n     let f = !!!true;\n+    let g = !42;\n+    let h = !10u32;\n+    let j = !a;\n     -3.14;\n+    !3;\n     -x;\n     !x;\n     -\"hello\";\n+    !\"hello\";\n }\n \"#,\n     );"}]}