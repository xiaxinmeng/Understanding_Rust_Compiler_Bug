{"sha": "98dde56eb1b4bc5ef03d84c77d25e094f8d66403", "node_id": "C_kwDOAAsO6NoAKDk4ZGRlNTZlYjFiNGJjNWVmMDNkODRjNzdkMjVlMDk0ZjhkNjY0MDM", "commit": {"author": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2021-10-02T11:40:25Z"}, "committer": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2021-10-02T12:24:30Z"}, "message": "haiku thread affinity build fix", "tree": {"sha": "e1ca802dc6c41712821969f85acf504619fa764c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1ca802dc6c41712821969f85acf504619fa764c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98dde56eb1b4bc5ef03d84c77d25e094f8d66403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98dde56eb1b4bc5ef03d84c77d25e094f8d66403", "html_url": "https://github.com/rust-lang/rust/commit/98dde56eb1b4bc5ef03d84c77d25e094f8d66403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98dde56eb1b4bc5ef03d84c77d25e094f8d66403/comments", "author": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8387aef8c378a771686878062e544af4d5e2245", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8387aef8c378a771686878062e544af4d5e2245", "html_url": "https://github.com/rust-lang/rust/commit/a8387aef8c378a771686878062e544af4d5e2245"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "5631834eca6fe9024020c9b543e9573e836c4900", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/98dde56eb1b4bc5ef03d84c77d25e094f8d66403/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98dde56eb1b4bc5ef03d84c77d25e094f8d66403/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=98dde56eb1b4bc5ef03d84c77d25e094f8d66403", "patch": "@@ -339,14 +339,18 @@ pub fn available_concurrency() -> io::Result<NonZeroUsize> {\n \n             Ok(unsafe { NonZeroUsize::new_unchecked(cpus as usize) })\n         } else if #[cfg(target_os = \"haiku\")] {\n-            let mut sinfo: libc::system_info = crate::mem::zeroed();\n-            let res = libc::get_system_info(&mut sinfo);\n+            // system_info cpu_count field gets the static data set at boot time with `smp_set_num_cpus`\n+            // `get_system_info` calls then `smp_get_num_cpus`\n+            unsafe {\n+                let mut sinfo: libc::system_info = crate::mem::zeroed();\n+                let res = libc::get_system_info(&mut sinfo);\n \n-            if res != libc::B_OK {\n-                return Err(io::Error::last_os_error());\n-            }\n+                if res != libc::B_OK {\n+                    return Err(io::Error::new_const(io::ErrorKind::NotFound, &\"The number of hardware threads is not known for the target platform\"));\n+                }\n \n-            Ok(unsafe { NonZeroUsize::new_unchecked(sinfo.cpu_count as usize) })\n+                Ok(NonZeroUsize::new_unchecked(sinfo.cpu_count as usize))\n+            }\n         } else {\n             // FIXME: implement on vxWorks, Redox, l4re\n             Err(io::Error::new_const(io::ErrorKind::Unsupported, &\"Getting the number of hardware threads is not supported on the target platform\"))"}]}