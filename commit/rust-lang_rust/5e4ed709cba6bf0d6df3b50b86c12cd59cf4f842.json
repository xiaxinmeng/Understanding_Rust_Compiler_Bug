{"sha": "5e4ed709cba6bf0d6df3b50b86c12cd59cf4f842", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNGVkNzA5Y2JhNmJmMGQ2ZGYzYjUwYjg2YzEyY2Q1OWNmNGY4NDI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-11-18T21:56:57Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-11-18T21:56:57Z"}, "message": "Merge pull request #3998 from jesse99/feature/getopts\n\nAdded support for options that take no arguments and may be repeated.", "tree": {"sha": "83163cfae68aa2087429b0f4754745e89a6fd657", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83163cfae68aa2087429b0f4754745e89a6fd657"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e4ed709cba6bf0d6df3b50b86c12cd59cf4f842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e4ed709cba6bf0d6df3b50b86c12cd59cf4f842", "html_url": "https://github.com/rust-lang/rust/commit/5e4ed709cba6bf0d6df3b50b86c12cd59cf4f842", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e4ed709cba6bf0d6df3b50b86c12cd59cf4f842/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2f4f06625ea4d4a98e7bc7c032380a1cba91d18", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f4f06625ea4d4a98e7bc7c032380a1cba91d18", "html_url": "https://github.com/rust-lang/rust/commit/e2f4f06625ea4d4a98e7bc7c032380a1cba91d18"}, {"sha": "340955b3a55c0707e72d64b2ce4cdcf21529fafb", "url": "https://api.github.com/repos/rust-lang/rust/commits/340955b3a55c0707e72d64b2ce4cdcf21529fafb", "html_url": "https://github.com/rust-lang/rust/commit/340955b3a55c0707e72d64b2ce4cdcf21529fafb"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "b7d6dc697762fbbc56090edbcec4d9dfc84a1ffc", "filename": "src/libstd/getopts.rs", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/5e4ed709cba6bf0d6df3b50b86c12cd59cf4f842/src%2Flibstd%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e4ed709cba6bf0d6df3b50b86c12cd59cf4f842/src%2Flibstd%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgetopts.rs?ref=5e4ed709cba6bf0d6df3b50b86c12cd59cf4f842", "patch": "@@ -145,6 +145,11 @@ pub fn optflag(name: &str) -> Opt {\n     return {name: mkname(name), hasarg: No, occur: Optional};\n }\n \n+/// Create an option that is optional and does not take an argument\n+pub fn optflagmulti(name: &str) -> Opt {\n+    return {name: mkname(name), hasarg: No, occur: Multi};\n+}\n+\n /// Create an option that is optional and takes an optional argument\n pub fn optflagopt(name: &str) -> Opt {\n     return {name: mkname(name), hasarg: Maybe, occur: Optional};\n@@ -417,6 +422,11 @@ pub fn opt_present(mm: Matches, nm: &str) -> bool {\n     return vec::len::<Optval>(opt_vals(mm, nm)) > 0u;\n }\n \n+/// Returns the number of times an option was matched\n+pub fn opt_count(mm: Matches, nm: &str) -> uint {\n+    return vec::len::<Optval>(opt_vals(mm, nm));\n+}\n+\n /// Returns true if any of several options were matched\n pub fn opts_present(mm: Matches, names: &[~str]) -> bool {\n     for vec::each(names) |nm| {\n@@ -1003,6 +1013,71 @@ mod tests {\n         }\n     }\n \n+    // Tests for optflagmulti\n+    #[test]\n+    fn test_optflagmulti_short1() {\n+        let args = ~[~\"-v\"];\n+        let opts = ~[optflagmulti(~\"v\")];\n+        let rs = getopts(args, opts);\n+        match rs {\n+          Ok(copy m) => {\n+            assert (opt_count(m, ~\"v\") == 1);\n+          }\n+          _ => fail\n+        }\n+    }\n+\n+    #[test]\n+    fn test_optflagmulti_short2a() { \n+        let args = ~[~\"-v\", ~\"-v\"];\n+        let opts = ~[optflagmulti(~\"v\")];\n+        let rs = getopts(args, opts);\n+        match rs {\n+          Ok(copy m) => {\n+            assert (opt_count(m, ~\"v\") == 2);\n+          }\n+          _ => fail\n+        }\n+    }\n+\n+    #[test]\n+    fn test_optflagmulti_short2b() {\n+        let args = ~[~\"-vv\"];\n+        let opts = ~[optflagmulti(~\"v\")];\n+        let rs = getopts(args, opts);\n+        match rs {\n+          Ok(copy m) => {\n+            assert (opt_count(m, ~\"v\") == 2);\n+          }\n+          _ => fail\n+        }\n+    }\n+\n+    #[test]\n+    fn test_optflagmulti_long1() {\n+        let args = ~[~\"--verbose\"];\n+        let opts = ~[optflagmulti(~\"verbose\")];\n+        let rs = getopts(args, opts);\n+        match rs {\n+          Ok(copy m) => {\n+            assert (opt_count(m, ~\"verbose\") == 1);\n+          }\n+          _ => fail\n+        }\n+    }\n+\n+    #[test]\n+    fn test_optflagmulti_long2() {\n+        let args = ~[~\"--verbose\", ~\"--verbose\"];\n+        let opts = ~[optflagmulti(~\"verbose\")];\n+        let rs = getopts(args, opts);\n+        match rs {\n+          Ok(copy m) => {\n+            assert (opt_count(m, ~\"verbose\") == 2);\n+          }\n+          _ => fail\n+        }\n+    }\n \n     // Tests for optmulti\n     #[test]"}]}