{"sha": "2a97c690bc56e7e20768d0ce632f0b719bf5ff37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhOTdjNjkwYmM1NmU3ZTIwNzY4ZDBjZTYzMmYwYjcxOWJmNWZmMzc=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-04-21T19:13:55Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-04-21T20:04:59Z"}, "message": "Note array.into_iter() specifically in method probing", "tree": {"sha": "77a1b7e09b6db2c2f733c6a8fd04654e167d996d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77a1b7e09b6db2c2f733c6a8fd04654e167d996d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a97c690bc56e7e20768d0ce632f0b719bf5ff37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a97c690bc56e7e20768d0ce632f0b719bf5ff37", "html_url": "https://github.com/rust-lang/rust/commit/2a97c690bc56e7e20768d0ce632f0b719bf5ff37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a97c690bc56e7e20768d0ce632f0b719bf5ff37/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c020367b820b982a3c0ac86cedc5be6ed732b2fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/c020367b820b982a3c0ac86cedc5be6ed732b2fe", "html_url": "https://github.com/rust-lang/rust/commit/c020367b820b982a3c0ac86cedc5be6ed732b2fe"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "e65e66c32f6d8adfb8a29fffd3f69f559ac20e71", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2a97c690bc56e7e20768d0ce632f0b719bf5ff37/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a97c690bc56e7e20768d0ce632f0b719bf5ff37/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=2a97c690bc56e7e20768d0ce632f0b719bf5ff37", "patch": "@@ -1463,6 +1463,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n                 TraitCandidate(trait_ref) => {\n                     if let Some(method_name) = self.method_name {\n                         // Some trait methods are excluded for arrays before 2021.\n+                        // (`array.into_iter()` wants a slice iterator for compatibility.)\n                         if self_ty.is_array() && !method_name.span.rust_2021() {\n                             let trait_def = self.tcx.trait_def(trait_ref.def_id);\n                             if trait_def.skip_array_during_method_dispatch {"}]}