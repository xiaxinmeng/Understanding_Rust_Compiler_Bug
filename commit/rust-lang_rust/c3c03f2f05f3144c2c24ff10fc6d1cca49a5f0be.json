{"sha": "c3c03f2f05f3144c2c24ff10fc6d1cca49a5f0be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzYzAzZjJmMDVmMzE0NGMyYzI0ZmYxMGZjNmQxY2NhNDlhNWYwYmU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-23T12:54:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-23T12:54:15Z"}, "message": "Rollup merge of #77055 - est31:more_track_caller, r=Mark-Simulacrum\n\nAdd #[track_caller] to more panicking Cell functions\n\nContinuation of #74526\n\nAdds the #[track_caller] attribute to almost all panicking Cell\nfunctions. The ones that borrow two Cells in their function\nbody are spared, because the panic location helps pinpoint\nwhich of the two borrows failed. You'd need to have\nfull debuginfo and backtraces enabled together with column\ninfo in order to be able to discern the cases.\nColumn info in debuginfo is only available on non-Windows platforms.", "tree": {"sha": "68298355fa38099e25ffb0010a8bfade4c8830ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68298355fa38099e25ffb0010a8bfade4c8830ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3c03f2f05f3144c2c24ff10fc6d1cca49a5f0be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfa0V3CRBK7hj4Ov3rIwAAdHIIAGJlMUd/Q72HJlxH/ykoF7+B\ncBysRSlcu0RePXYyDmoIWiRDoRzo2x3Jfx1Cr+6W1cXMzpCs6db40IS0tPPQmvvY\n/xZEpmLt88LXYDMUHAOkkvd0bKqXyOGc8O95fsxoDVNCUNas5gG5Bt33JpqILivs\nmzJ0TqbJxwy9swf+OBcBoNqiVw4zmEmWV9M8hMpsVn+g3GP5D2O5egaX8bFEuKqI\n7y5uvSBg2zK3dbGgf27E56nmSb1x59sYf6fRumfx6+EsD7A7HY6Xed7bZBAz+EgA\nas2jomoudM9NiQkB92qcdH+eKTsS7UtbyZE51HSHnTnC/Ek/xOpTDEb7HpUSRv4=\n=tCHX\n-----END PGP SIGNATURE-----\n", "payload": "tree 68298355fa38099e25ffb0010a8bfade4c8830ea\nparent f8dec3d0549beddcae22bc14c49a0778b50334ea\nparent 05c3a2b07dc66fabc874181ce1eebea192cb4b56\nauthor Dylan DPC <dylan.dpc@gmail.com> 1600865655 +0200\ncommitter GitHub <noreply@github.com> 1600865655 +0200\n\nRollup merge of #77055 - est31:more_track_caller, r=Mark-Simulacrum\n\nAdd #[track_caller] to more panicking Cell functions\n\nContinuation of #74526\n\nAdds the #[track_caller] attribute to almost all panicking Cell\nfunctions. The ones that borrow two Cells in their function\nbody are spared, because the panic location helps pinpoint\nwhich of the two borrows failed. You'd need to have\nfull debuginfo and backtraces enabled together with column\ninfo in order to be able to discern the cases.\nColumn info in debuginfo is only available on non-Windows platforms.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c03f2f05f3144c2c24ff10fc6d1cca49a5f0be", "html_url": "https://github.com/rust-lang/rust/commit/c3c03f2f05f3144c2c24ff10fc6d1cca49a5f0be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3c03f2f05f3144c2c24ff10fc6d1cca49a5f0be/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8dec3d0549beddcae22bc14c49a0778b50334ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8dec3d0549beddcae22bc14c49a0778b50334ea", "html_url": "https://github.com/rust-lang/rust/commit/f8dec3d0549beddcae22bc14c49a0778b50334ea"}, {"sha": "05c3a2b07dc66fabc874181ce1eebea192cb4b56", "url": "https://api.github.com/repos/rust-lang/rust/commits/05c3a2b07dc66fabc874181ce1eebea192cb4b56", "html_url": "https://github.com/rust-lang/rust/commit/05c3a2b07dc66fabc874181ce1eebea192cb4b56"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "15ec13ca65a18db729a174cc04bfaf770de69f4f", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3c03f2f05f3144c2c24ff10fc6d1cca49a5f0be/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3c03f2f05f3144c2c24ff10fc6d1cca49a5f0be/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=c3c03f2f05f3144c2c24ff10fc6d1cca49a5f0be", "patch": "@@ -697,6 +697,7 @@ impl<T> RefCell<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"refcell_replace\", since = \"1.24.0\")]\n+    #[track_caller]\n     pub fn replace(&self, t: T) -> T {\n         mem::replace(&mut *self.borrow_mut(), t)\n     }\n@@ -719,6 +720,7 @@ impl<T> RefCell<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"refcell_replace_swap\", since = \"1.35.0\")]\n+    #[track_caller]\n     pub fn replace_with<F: FnOnce(&mut T) -> T>(&self, f: F) -> T {\n         let mut_borrow = &mut *self.borrow_mut();\n         let replacement = f(mut_borrow);\n@@ -1052,6 +1054,7 @@ impl<T: Clone> Clone for RefCell<T> {\n     ///\n     /// Panics if the value is currently mutably borrowed.\n     #[inline]\n+    #[track_caller]\n     fn clone(&self) -> RefCell<T> {\n         RefCell::new(self.borrow().clone())\n     }"}]}