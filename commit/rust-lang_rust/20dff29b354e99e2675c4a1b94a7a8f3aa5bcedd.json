{"sha": "20dff29b354e99e2675c4a1b94a7a8f3aa5bcedd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZGZmMjliMzU0ZTk5ZTI2NzVjNGExYjk0YTdhOGYzYWE1YmNlZGQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-10T18:31:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-10T18:31:07Z"}, "message": "Rollup merge of #60620 - mark-i-m:transcribe-2, r=petrochenkov\n\nFix a couple of FIXMEs in ext::tt::transcribe\n\n_Blocked on #60618_\n\nA crater run would be nice to make sure my understanding is correct. A quick google search seems to indicate these are extremely rare errors if they are possible (which I don't believe they are).\n\nr? @petrochenkov\n\ncc #2887 (there is only one FIXME left and it is hygiene-related)", "tree": {"sha": "9e5b6e8bac55e26fdd523bb2762aa93343dfdb5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e5b6e8bac55e26fdd523bb2762aa93343dfdb5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20dff29b354e99e2675c4a1b94a7a8f3aa5bcedd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc1cNrCRBK7hj4Ov3rIwAAdHIIAFQz1fPbnMAkXE97vUP8ON4x\nqFwKf6/X/Jn0/B/IBRfXmXQEoMTp9rpwZl5PrND0uayv8JBLr+EesZ72nRNRZcGx\nwwdX31ZK70JHIiUfo/BiiAE4XXjC4yqOKZvchu6Q3XbdlXatYalAeaLKEvvgrGA0\nc+hBxygMlr55cx+pEeY0rSPqZPtMvX9RUKcd8xJGoDOTvqTYgHlOEQlEwbGngnKp\nCcfnd+R8hCJzMlTz5JstS0k551p9w7uQbujVAIimowoaUVBCnG7B48JHD1fKFTaz\nKmmw8d2knElAQXD6OUrheRStStCtFYE7096M/ESg2kl4CzM1Ze21l5cwMNWe2lo=\n=emzE\n-----END PGP SIGNATURE-----\n", "payload": "tree 9e5b6e8bac55e26fdd523bb2762aa93343dfdb5a\nparent d94cb9f2ea86a088a970c6cf741efaef6fb6ed16\nparent 5b6bda33543a8db601690350c585515a5273975d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1557513067 +0200\ncommitter GitHub <noreply@github.com> 1557513067 +0200\n\nRollup merge of #60620 - mark-i-m:transcribe-2, r=petrochenkov\n\nFix a couple of FIXMEs in ext::tt::transcribe\n\n_Blocked on #60618_\n\nA crater run would be nice to make sure my understanding is correct. A quick google search seems to indicate these are extremely rare errors if they are possible (which I don't believe they are).\n\nr? @petrochenkov\n\ncc #2887 (there is only one FIXME left and it is hygiene-related)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20dff29b354e99e2675c4a1b94a7a8f3aa5bcedd", "html_url": "https://github.com/rust-lang/rust/commit/20dff29b354e99e2675c4a1b94a7a8f3aa5bcedd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20dff29b354e99e2675c4a1b94a7a8f3aa5bcedd/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d94cb9f2ea86a088a970c6cf741efaef6fb6ed16", "url": "https://api.github.com/repos/rust-lang/rust/commits/d94cb9f2ea86a088a970c6cf741efaef6fb6ed16", "html_url": "https://github.com/rust-lang/rust/commit/d94cb9f2ea86a088a970c6cf741efaef6fb6ed16"}, {"sha": "5b6bda33543a8db601690350c585515a5273975d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6bda33543a8db601690350c585515a5273975d", "html_url": "https://github.com/rust-lang/rust/commit/5b6bda33543a8db601690350c585515a5273975d"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "e3586c1854c1775b083dea9015106be62b7c7506", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/20dff29b354e99e2675c4a1b94a7a8f3aa5bcedd/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dff29b354e99e2675c4a1b94a7a8f3aa5bcedd/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=20dff29b354e99e2675c4a1b94a7a8f3aa5bcedd", "patch": "@@ -170,10 +170,9 @@ pub fn transcribe(\n                     }\n \n                     LockstepIterSize::Contradiction(ref msg) => {\n-                        // FIXME: this should be impossible. I (mark-i-m) believe it would\n-                        // represent a bug in the macro_parser.\n-                        // FIXME #2887 blame macro invoker instead\n-                        cx.span_fatal(seq.span(), &msg[..]);\n+                        // This should never happen because the macro parser should generate\n+                        // properly-sized matches for all meta-vars.\n+                        cx.span_bug(seq.span(), &msg[..]);\n                     }\n \n                     LockstepIterSize::Constraint(len, _) => {\n@@ -188,14 +187,13 @@ pub fn transcribe(\n                         // Is the repetition empty?\n                         if len == 0 {\n                             if seq.op == quoted::KleeneOp::OneOrMore {\n-                                // FIXME: this should be impossible because we check for this in\n-                                // macro_parser.rs\n-                                // FIXME #2887 blame invoker\n-                                cx.span_fatal(sp.entire(), \"this must repeat at least once\");\n+                                // This should be impossible because the macro parser would not\n+                                // match the given macro arm.\n+                                cx.span_bug(sp.entire(), \"this must repeat at least once\");\n                             }\n                         } else {\n                             // 0 is the initial counter (we have done 0 repretitions so far). `len`\n-                            //   is the total number of reptitions we should generate.\n+                            // is the total number of reptitions we should generate.\n                             repeats.push((0, len));\n \n                             // The first time we encounter the sequence we push it to the stack. It"}]}