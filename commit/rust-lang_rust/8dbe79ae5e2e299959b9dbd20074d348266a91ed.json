{"sha": "8dbe79ae5e2e299959b9dbd20074d348266a91ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYmU3OWFlNWUyZTI5OTk1OWI5ZGJkMjAwNzRkMzQ4MjY2YTkxZWQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-12-07T02:30:20Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-12-12T21:15:03Z"}, "message": "Fix fallout in tests.", "tree": {"sha": "723291aec2ac8f27e6eea87fb1ce326ce74e735d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/723291aec2ac8f27e6eea87fb1ce326ce74e735d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dbe79ae5e2e299959b9dbd20074d348266a91ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dbe79ae5e2e299959b9dbd20074d348266a91ed", "html_url": "https://github.com/rust-lang/rust/commit/8dbe79ae5e2e299959b9dbd20074d348266a91ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dbe79ae5e2e299959b9dbd20074d348266a91ed/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c7969d3df6ce1cd5370eea32f18a08dc1f0850d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c7969d3df6ce1cd5370eea32f18a08dc1f0850d", "html_url": "https://github.com/rust-lang/rust/commit/9c7969d3df6ce1cd5370eea32f18a08dc1f0850d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "81518b0b87271c85d5168bc4ec076240a604ea35", "filename": "src/test/pretty/issue-4264.pp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Fpretty%2Fissue-4264.pp", "raw_url": "https://github.com/rust-lang/rust/raw/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Fpretty%2Fissue-4264.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-4264.pp?ref=8dbe79ae5e2e299959b9dbd20074d348266a91ed", "patch": "@@ -40,7 +40,7 @@\n \n \n                   ((::fmt::format as\n-                       for<'r> fn(std::fmt::Arguments<'r>) -> std::string::String {std::fmt::format})(((<::std::fmt::Arguments>::new_v1\n+                       for<'r> fn(std::fmt::Arguments<'r>) -> std::string::String {std::fmt::format})(((<::fmt::Arguments>::new_v1\n                                                                                                            as\n                                                                                                            fn(&[&str], &[std::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments<'_>::new_v1})((&([(\"test\"\n                                                                                                                                                                                                                           as"}, {"sha": "f485982e2d3bc2c1b6eed767e972661e33c88ba6", "filename": "src/test/run-pass-fulldeps/auxiliary/custom_derive_partial_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs?ref=8dbe79ae5e2e299959b9dbd20074d348266a91ed", "patch": "@@ -69,7 +69,7 @@ fn expand_deriving_partial_eq(cx: &mut ExtCtxt, span: Span, mitem: &MetaItem, it\n     let trait_def = TraitDef {\n         span: span,\n         attributes: Vec::new(),\n-        path: deriving::generic::ty::Path::new(vec![\"std\", \"cmp\", \"PartialEq\"]),\n+        path: deriving::generic::ty::Path::new(vec![\"cmp\", \"PartialEq\"]),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,"}, {"sha": "449cd29ada3e0b9bf2ea6838876b2617830080af", "filename": "src/test/run-pass-fulldeps/auxiliary/custom_derive_plugin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs?ref=8dbe79ae5e2e299959b9dbd20074d348266a91ed", "patch": "@@ -50,7 +50,7 @@ fn expand(cx: &mut ExtCtxt,\n     let trait_def = TraitDef {\n         span: span,\n         attributes: vec![],\n-        path: Path::new(vec![\"TotalSum\"]),\n+        path: Path::new_local(\"TotalSum\"),\n         additional_bounds: vec![],\n         generics: LifetimeBounds::empty(),\n         associated_types: vec![],"}, {"sha": "1a9358f22bfce683852781886e16ff18ea7e5e73", "filename": "src/test/run-pass-fulldeps/auxiliary/custom_derive_plugin_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin_attr.rs?ref=8dbe79ae5e2e299959b9dbd20074d348266a91ed", "patch": "@@ -46,7 +46,7 @@ fn expand(cx: &mut ExtCtxt,\n     let trait_def = TraitDef {\n         span: span,\n         attributes: vec![],\n-        path: Path::new(vec![\"TotalSum\"]),\n+        path: Path::new_local(\"TotalSum\"),\n         additional_bounds: vec![],\n         generics: LifetimeBounds::empty(),\n         associated_types: vec![],"}, {"sha": "a0747e0fbf59f9d94081d7173fdcf2ef212899fb", "filename": "src/test/run-pass-fulldeps/derive-no-std-not-supported.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Frun-pass-fulldeps%2Fderive-no-std-not-supported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dbe79ae5e2e299959b9dbd20074d348266a91ed/src%2Ftest%2Frun-pass-fulldeps%2Fderive-no-std-not-supported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderive-no-std-not-supported.rs?ref=8dbe79ae5e2e299959b9dbd20074d348266a91ed", "patch": "@@ -8,22 +8,22 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(rustc_private)]\n #![no_std]\n \n extern crate serialize as rustc_serialize;\n \n-#[derive(RustcEncodable)]  //~ ERROR this trait cannot be derived\n+#[derive(RustcEncodable)]\n struct Bar {\n     x: u32,\n }\n \n-#[derive(RustcDecodable)]  //~ ERROR this trait cannot be derived\n+#[derive(RustcDecodable)]\n struct Baz {\n     x: u32,\n }\n \n fn main() {\n-    Foo { x: 0 };\n     Bar { x: 0 };\n     Baz { x: 0 };\n }", "previous_filename": "src/test/compile-fail-fulldeps/derive-no-std-not-supported.rs"}]}