{"sha": "9b18b4440a8d8b052ef454dba9fdb95be99485e7", "node_id": "C_kwDOAAsO6NoAKDliMThiNDQ0MGE4ZDhiMDUyZWY0NTRkYmE5ZmRiOTViZTk5NDg1ZTc", "commit": {"author": {"name": "Chris Denton", "email": "chris@chrisdenton.dev", "date": "2023-02-19T09:48:50Z"}, "committer": {"name": "Chris Denton", "email": "chris@chrisdenton.dev", "date": "2023-02-21T18:33:19Z"}, "message": "Make `create_dir_all_bare` an std integration test\n\nMoving `create_dir_all` out of `ui-fulldeps` is complicated by the fact it sets the current directory. This means it can't be a unit test. Instead, move it to its own integration test.", "tree": {"sha": "ba15c08243893d0a772c3b9823d4d72b1db32aca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba15c08243893d0a772c3b9823d4d72b1db32aca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b18b4440a8d8b052ef454dba9fdb95be99485e7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmP1Dm8ACgkQcTRy8vRW\nJ94V6Q//Y2/IMATCBSiOs5qvtyKHCpfjXx5E+f8JqoRN0lUh+A8m6BvJ4TleIPik\nhGZBHNFlJSXLk8xmOb+oqjrAsajvQwTf0dbC6os08s95ubKUaiKgmvsEAbmmJfYM\nv+0uOVroaoSFXDh245DChEzGuGAkHvPRBHv9a3c6D/cfsZ6G99kAvAkw87KToOG9\nZwVKtzMN3/d+wNrF0zZ8RPDUE63AkNI+f6KTEH3FnEVXnBhBZ+o0Tu6RpfC5Bg/p\ngw9dziRvCkQUwNcLqN38+UCjRjg2H45AU7aM/LEIHfvzlIjLW59hdN2eNZE6X/Rm\nHg1qpB3iG+3ClM5zFeAeV7LFGhX4W+yEUK9DFA+dUi/mCeIn1YQ7c3IGUGcxsnyK\nrv5IO6y/5yVDILZHi3318GzbBJJYsEq9Jm0/oQfy7mNpbYopFPQCqlI58q3LtnsG\nSKlARY6l81zkx5m6hMZxseBaiu6fa4rW8NAGCewRv/9b7cBhcoK9HRddKcD0AsNF\n/xITCc5d8f7VTJqRzZ7PZ/I4aox5hDSO1KEEsj8qLSqHpFU+FAWeha94dWFblUNY\nncD3id2bH3lTDAATssCbrubU2Jfcz6u4COjJqztLfFFzHY7bujsCLLatbxnhO9Xg\nmfgdDArbpPI3NGNjaBx1X32bT26iMeGzECjVVFAR4w2F3GN4lsQ=\n=bDq6\n-----END PGP SIGNATURE-----", "payload": "tree ba15c08243893d0a772c3b9823d4d72b1db32aca\nparent f7a132f4280cb8b01ba78126acc0cbea91951634\nauthor Chris Denton <chris@chrisdenton.dev> 1676800130 +0000\ncommitter Chris Denton <chris@chrisdenton.dev> 1677004399 +0000\n\nMake `create_dir_all_bare` an std integration test\n\nMoving `create_dir_all` out of `ui-fulldeps` is complicated by the fact it sets the current directory. This means it can't be a unit test. Instead, move it to its own integration test.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b18b4440a8d8b052ef454dba9fdb95be99485e7", "html_url": "https://github.com/rust-lang/rust/commit/9b18b4440a8d8b052ef454dba9fdb95be99485e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b18b4440a8d8b052ef454dba9fdb95be99485e7/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7a132f4280cb8b01ba78126acc0cbea91951634", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a132f4280cb8b01ba78126acc0cbea91951634", "html_url": "https://github.com/rust-lang/rust/commit/f7a132f4280cb8b01ba78126acc0cbea91951634"}], "stats": {"total": 120, "additions": 97, "deletions": 23}, "files": [{"sha": "fce220223a055dd3d18c9b35a42866a25fff0317", "filename": "library/std/tests/common/mod.rs", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/9b18b4440a8d8b052ef454dba9fdb95be99485e7/library%2Fstd%2Ftests%2Fcommon%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b18b4440a8d8b052ef454dba9fdb95be99485e7/library%2Fstd%2Ftests%2Fcommon%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Ftests%2Fcommon%2Fmod.rs?ref=9b18b4440a8d8b052ef454dba9fdb95be99485e7", "patch": "@@ -0,0 +1,58 @@\n+#![allow(unused)]\n+\n+use std::env;\n+use std::fs;\n+use std::path::{Path, PathBuf};\n+use std::thread;\n+use rand::RngCore;\n+\n+/// Copied from `std::test_helpers::test_rng`, since these tests rely on the\n+/// seed not being the same for every RNG invocation too.\n+#[track_caller]\n+pub(crate) fn test_rng() -> rand_xorshift::XorShiftRng {\n+    use core::hash::{BuildHasher, Hash, Hasher};\n+    let mut hasher = std::collections::hash_map::RandomState::new().build_hasher();\n+    core::panic::Location::caller().hash(&mut hasher);\n+    let hc64 = hasher.finish();\n+    let seed_vec = hc64.to_le_bytes().into_iter().chain(0u8..8).collect::<Vec<u8>>();\n+    let seed: [u8; 16] = seed_vec.as_slice().try_into().unwrap();\n+    rand::SeedableRng::from_seed(seed)\n+}\n+\n+// Copied from std::sys_common::io\n+pub struct TempDir(PathBuf);\n+\n+impl TempDir {\n+    pub fn join(&self, path: &str) -> PathBuf {\n+        let TempDir(ref p) = *self;\n+        p.join(path)\n+    }\n+\n+    pub fn path(&self) -> &Path {\n+        let TempDir(ref p) = *self;\n+        p\n+    }\n+}\n+\n+impl Drop for TempDir {\n+    fn drop(&mut self) {\n+        // Gee, seeing how we're testing the fs module I sure hope that we\n+        // at least implement this correctly!\n+        let TempDir(ref p) = *self;\n+        let result = fs::remove_dir_all(p);\n+        // Avoid panicking while panicking as this causes the process to\n+        // immediately abort, without displaying test results.\n+        if !thread::panicking() {\n+            result.unwrap();\n+        }\n+    }\n+}\n+\n+#[track_caller] // for `test_rng`\n+pub fn tmpdir() -> TempDir {\n+    let p = env::temp_dir();\n+    let mut r = test_rng();\n+    let ret = p.join(&format!(\"rust-{}\", r.next_u32()));\n+    fs::create_dir(&ret).unwrap();\n+    TempDir(ret)\n+}"}, {"sha": "905a62f920af6ce2b0b32f5ea17421f70e7ed960", "filename": "library/std/tests/create_dir_all_bare.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/9b18b4440a8d8b052ef454dba9fdb95be99485e7/library%2Fstd%2Ftests%2Fcreate_dir_all_bare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b18b4440a8d8b052ef454dba9fdb95be99485e7/library%2Fstd%2Ftests%2Fcreate_dir_all_bare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Ftests%2Fcreate_dir_all_bare.rs?ref=9b18b4440a8d8b052ef454dba9fdb95be99485e7", "patch": "@@ -0,0 +1,37 @@\n+//! Note that this test changes the current directory so\n+//! should not be in the same process as other tests.\n+use std::env;\n+use std::fs;\n+use std::path::{Path, PathBuf};\n+\n+mod common;\n+\n+// On some platforms, setting the current directory will prevent deleting it.\n+// So this helper ensures the current directory is reset.\n+struct CurrentDir(PathBuf);\n+impl CurrentDir {\n+    fn new() -> Self {\n+        Self(env::current_dir().unwrap())\n+    }\n+    fn set(&self, path: &Path) {\n+        env::set_current_dir(path).unwrap();\n+    }\n+    fn with(path: &Path, f: impl FnOnce()) {\n+        let current_dir = Self::new();\n+        current_dir.set(path);\n+        f();\n+    }\n+}\n+impl Drop for CurrentDir {\n+    fn drop(&mut self) {\n+        env::set_current_dir(&self.0).unwrap();\n+    }\n+}\n+\n+#[test]\n+fn create_dir_all_bare() {\n+    let tmpdir = common::tmpdir();\n+    CurrentDir::with(tmpdir.path(), || {\n+        fs::create_dir_all(\"create-dir-all-bare\").unwrap();\n+    });\n+}"}, {"sha": "96b4f372b8b1094eaed922d7caea33a47350968b", "filename": "library/std/tests/env.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9b18b4440a8d8b052ef454dba9fdb95be99485e7/library%2Fstd%2Ftests%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b18b4440a8d8b052ef454dba9fdb95be99485e7/library%2Fstd%2Ftests%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Ftests%2Fenv.rs?ref=9b18b4440a8d8b052ef454dba9fdb95be99485e7", "patch": "@@ -3,18 +3,8 @@ use std::ffi::{OsStr, OsString};\n \n use rand::distributions::{Alphanumeric, DistString};\n \n-/// Copied from `std::test_helpers::test_rng`, since these tests rely on the\n-/// seed not being the same for every RNG invocation too.\n-#[track_caller]\n-pub(crate) fn test_rng() -> rand_xorshift::XorShiftRng {\n-    use core::hash::{BuildHasher, Hash, Hasher};\n-    let mut hasher = std::collections::hash_map::RandomState::new().build_hasher();\n-    core::panic::Location::caller().hash(&mut hasher);\n-    let hc64 = hasher.finish();\n-    let seed_vec = hc64.to_le_bytes().into_iter().chain(0u8..8).collect::<Vec<u8>>();\n-    let seed: [u8; 16] = seed_vec.as_slice().try_into().unwrap();\n-    rand::SeedableRng::from_seed(seed)\n-}\n+mod common;\n+use common::test_rng;\n \n #[track_caller]\n fn make_rand_name() -> OsString {"}, {"sha": "4554680ec2470adcde055d03b783e55efa1aeb4f", "filename": "tests/ui-fulldeps/std/create-dir-all-bare.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f7a132f4280cb8b01ba78126acc0cbea91951634/tests%2Fui-fulldeps%2Fstd%2Fcreate-dir-all-bare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7a132f4280cb8b01ba78126acc0cbea91951634/tests%2Fui-fulldeps%2Fstd%2Fcreate-dir-all-bare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fstd%2Fcreate-dir-all-bare.rs?ref=f7a132f4280cb8b01ba78126acc0cbea91951634", "patch": "@@ -1,11 +0,0 @@\n-// run-pass\n-\n-use std::env;\n-use std::fs;\n-use std::path::PathBuf;\n-\n-fn main() {\n-    let path = PathBuf::from(env::var_os(\"RUST_TEST_TMPDIR\").unwrap());\n-    env::set_current_dir(&path).unwrap();\n-    fs::create_dir_all(\"create-dir-all-bare\").unwrap();\n-}"}]}