{"sha": "ef46e38c2bc9c86dcc48b511885630ed9f842a55", "node_id": "C_kwDOAAsO6NoAKGVmNDZlMzhjMmJjOWM4NmRjYzQ4YjUxMTg4NTYzMGVkOWY4NDJhNTU", "commit": {"author": {"name": "threadexception", "email": "hannes.gaumann@outlook.de", "date": "2022-01-14T15:03:46Z"}, "committer": {"name": "threadexception", "email": "hannes.gaumann@outlook.de", "date": "2022-01-18T14:22:35Z"}, "message": "Implement tuple array diagnostic\n\nCo-authored-by: David Wood <Q0KPU0H1YOEPHRY1R2SN5B5RL@david.davidtw.co>", "tree": {"sha": "81b3f0d1fe1b001502adfb28d7abd6b3d9bf2488", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81b3f0d1fe1b001502adfb28d7abd6b3d9bf2488"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef46e38c2bc9c86dcc48b511885630ed9f842a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef46e38c2bc9c86dcc48b511885630ed9f842a55", "html_url": "https://github.com/rust-lang/rust/commit/ef46e38c2bc9c86dcc48b511885630ed9f842a55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef46e38c2bc9c86dcc48b511885630ed9f842a55/comments", "author": {"login": "terrarier2111", "id": 58695553, "node_id": "MDQ6VXNlcjU4Njk1NTUz", "avatar_url": "https://avatars.githubusercontent.com/u/58695553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrarier2111", "html_url": "https://github.com/terrarier2111", "followers_url": "https://api.github.com/users/terrarier2111/followers", "following_url": "https://api.github.com/users/terrarier2111/following{/other_user}", "gists_url": "https://api.github.com/users/terrarier2111/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrarier2111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrarier2111/subscriptions", "organizations_url": "https://api.github.com/users/terrarier2111/orgs", "repos_url": "https://api.github.com/users/terrarier2111/repos", "events_url": "https://api.github.com/users/terrarier2111/events{/privacy}", "received_events_url": "https://api.github.com/users/terrarier2111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrarier2111", "id": 58695553, "node_id": "MDQ6VXNlcjU4Njk1NTUz", "avatar_url": "https://avatars.githubusercontent.com/u/58695553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrarier2111", "html_url": "https://github.com/terrarier2111", "followers_url": "https://api.github.com/users/terrarier2111/followers", "following_url": "https://api.github.com/users/terrarier2111/following{/other_user}", "gists_url": "https://api.github.com/users/terrarier2111/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrarier2111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrarier2111/subscriptions", "organizations_url": "https://api.github.com/users/terrarier2111/orgs", "repos_url": "https://api.github.com/users/terrarier2111/repos", "events_url": "https://api.github.com/users/terrarier2111/events{/privacy}", "received_events_url": "https://api.github.com/users/terrarier2111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86f7f78f05ff8295aad2ad2a31770ce4408cc849", "url": "https://api.github.com/repos/rust-lang/rust/commits/86f7f78f05ff8295aad2ad2a31770ce4408cc849", "html_url": "https://github.com/rust-lang/rust/commit/86f7f78f05ff8295aad2ad2a31770ce4408cc849"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "0fea0afb572c9368f41cda8b8ccd6d1427c44b16", "filename": "compiler/rustc_typeck/src/check/callee.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ef46e38c2bc9c86dcc48b511885630ed9f842a55/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef46e38c2bc9c86dcc48b511885630ed9f842a55/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs?ref=ef46e38c2bc9c86dcc48b511885630ed9f842a55", "patch": "@@ -307,6 +307,36 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n+    /// Give appropriate suggestion when encountering `[(\"a\", 0) (\"b\", 1)]`, where the\n+    /// likely intention is to create an array containing tuples.\n+    fn maybe_suggest_bad_array_definition(\n+        &self,\n+        err: &mut DiagnosticBuilder<'a>,\n+        call_expr: &'tcx hir::Expr<'tcx>,\n+        callee_expr: &'tcx hir::Expr<'tcx>,\n+    ) -> bool {\n+        let hir_id = self.tcx.hir().get_parent_node(call_expr.hir_id);\n+        let parent_node = self.tcx.hir().get(hir_id);\n+        if let (\n+            hir::Node::Expr(hir::Expr { kind: hir::ExprKind::Array(_), .. }),\n+            hir::ExprKind::Tup(exp),\n+            hir::ExprKind::Call(_, args),\n+        ) = (parent_node, &callee_expr.kind, &call_expr.kind)\n+        {\n+            if args.len() == exp.len() {\n+                let start = callee_expr.span.shrink_to_hi();\n+                err.span_suggestion(\n+                    start,\n+                    \"consider separating array elements with a comma\",\n+                    \",\".to_string(),\n+                    Applicability::MaybeIncorrect,\n+                );\n+                return true;\n+            }\n+        }\n+        false\n+    }\n+\n     fn confirm_builtin_call(\n         &self,\n         call_expr: &'tcx hir::Expr<'tcx>,\n@@ -422,7 +452,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     _ => Res::Err,\n                 };\n \n-                err.span_label(call_expr.span, \"call expression requires function\");\n+                if !self.maybe_suggest_bad_array_definition(&mut err, call_expr, callee_expr) {\n+                    err.span_label(call_expr.span, \"call expression requires function\");\n+                }\n \n                 if let Some(span) = self.tcx.hir().res_span(def) {\n                     let callee_ty = callee_ty.to_string();"}, {"sha": "c87a3e348a2e97f83cf094fd29b7e4bfd5ffae02", "filename": "src/test/ui/issues/issue-5100.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef46e38c2bc9c86dcc48b511885630ed9f842a55/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef46e38c2bc9c86dcc48b511885630ed9f842a55/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr?ref=ef46e38c2bc9c86dcc48b511885630ed9f842a55", "patch": "@@ -59,10 +59,8 @@ LL |         &(true, false) => ()\n error[E0618]: expected function, found `(char, char)`\n   --> $DIR/issue-5100.rs:48:14\n    |\n-LL |       let v = [('a', 'b')\n-   |  ______________-^^^^^^^^^\n-LL | |              ('c', 'd'),\n-   | |_______________________- call expression requires function\n+LL |     let v = [('a', 'b')\n+   |              ^^^^^^^^^^- help: consider separating array elements with a comma: `,`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-5100.rs:55:19"}, {"sha": "1929dab073169fcb6216b280d397af156d8d5c44", "filename": "src/test/ui/tuple/array-diagnostics.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef46e38c2bc9c86dcc48b511885630ed9f842a55/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef46e38c2bc9c86dcc48b511885630ed9f842a55/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.rs?ref=ef46e38c2bc9c86dcc48b511885630ed9f842a55", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    let _tmp = [\n+        (\"C200B40A82\", 3),\n+        (\"C200B40A83\", 4) //~ ERROR: expected function, found `(&'static str, {integer})` [E0618]\n+        (\"C200B40A8537\", 5),\n+    ];\n+}"}, {"sha": "a10d7af470c7ce6eb10a2989ea3e4766d69c5c17", "filename": "src/test/ui/tuple/array-diagnostics.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ef46e38c2bc9c86dcc48b511885630ed9f842a55/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef46e38c2bc9c86dcc48b511885630ed9f842a55/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.stderr?ref=ef46e38c2bc9c86dcc48b511885630ed9f842a55", "patch": "@@ -0,0 +1,9 @@\n+error[E0618]: expected function, found `(&'static str, {integer})`\n+  --> $DIR/array-diagnostics.rs:4:9\n+   |\n+LL |         (\"C200B40A83\", 4)\n+   |         ^^^^^^^^^^^^^^^^^- help: consider separating array elements with a comma: `,`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0618`."}]}