{"sha": "e3fa2d5803993319c3122bd8230e1cab8595cdd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZmEyZDU4MDM5OTMzMTljMzEyMmJkODIzMGUxY2FiODU5NWNkZDQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-21T20:21:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-21T20:38:35Z"}, "message": "tolerate existential types whose concrete expansion is not known", "tree": {"sha": "949eb500df64ee3858e1d9b2e73e3f50b860f2c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/949eb500df64ee3858e1d9b2e73e3f50b860f2c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3fa2d5803993319c3122bd8230e1cab8595cdd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3fa2d5803993319c3122bd8230e1cab8595cdd4", "html_url": "https://github.com/rust-lang/rust/commit/e3fa2d5803993319c3122bd8230e1cab8595cdd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3fa2d5803993319c3122bd8230e1cab8595cdd4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2a019a28a6b5e78fd696261f1906cfbcabedb01", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a019a28a6b5e78fd696261f1906cfbcabedb01", "html_url": "https://github.com/rust-lang/rust/commit/a2a019a28a6b5e78fd696261f1906cfbcabedb01"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "5487da97d5b2a137348e04041e0e11af62ebf484", "filename": "src/librustc/infer/anon_types/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3fa2d5803993319c3122bd8230e1cab8595cdd4/src%2Flibrustc%2Finfer%2Fanon_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3fa2d5803993319c3122bd8230e1cab8595cdd4/src%2Flibrustc%2Finfer%2Fanon_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fanon_types%2Fmod.rs?ref=e3fa2d5803993319c3122bd8230e1cab8595cdd4", "patch": "@@ -434,8 +434,8 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n         instantiated_ty: Ty<'gcx>,\n     ) -> Ty<'gcx> {\n         debug!(\n-            \"infer_anon_definition_from_instantiation(instantiated_ty={:?})\",\n-            instantiated_ty\n+            \"infer_anon_definition_from_instantiation(def_id={:?}, instantiated_ty={:?})\",\n+            def_id, instantiated_ty\n         );\n \n         let gcx = self.tcx.global_tcx();"}, {"sha": "51727b5b8978aca3f75fb76fd4a5bbd2498a3ab8", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e3fa2d5803993319c3122bd8230e1cab8595cdd4/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3fa2d5803993319c3122bd8230e1cab8595cdd4/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=e3fa2d5803993319c3122bd8230e1cab8595cdd4", "patch": "@@ -1047,7 +1047,24 @@ fn type_of<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                 ItemExistential(hir::ExistTy { impl_trait_fn: None, .. }) => unimplemented!(),\n                 // existential types desugared from impl Trait\n                 ItemExistential(hir::ExistTy { impl_trait_fn: Some(owner), .. }) => {\n-                    tcx.typeck_tables_of(owner).concrete_existential_types[&def_id]\n+                    tcx.typeck_tables_of(owner).concrete_existential_types\n+                        .get(&def_id)\n+                        .cloned()\n+                        .unwrap_or_else(|| {\n+                            // This can occur if some error in the\n+                            // owner fn prevented us from populating\n+                            // the `concrete_existential_types` table.\n+                            tcx.sess.delay_span_bug(\n+                                DUMMY_SP,\n+                                &format!(\n+                                    \"owner {:?} has no existential type for {:?} in its tables\",\n+                                    owner,\n+                                    def_id,\n+                                ),\n+                            );\n+\n+                            tcx.types.err\n+                        })\n                 },\n                 ItemTrait(..) | ItemTraitAlias(..) |\n                 ItemMod(..) |"}, {"sha": "b64caccd98abef8311b646deb96affdb375a3aeb", "filename": "src/test/ui/impl_trait_projections.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e3fa2d5803993319c3122bd8230e1cab8595cdd4/src%2Ftest%2Fui%2Fimpl_trait_projections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3fa2d5803993319c3122bd8230e1cab8595cdd4/src%2Ftest%2Fui%2Fimpl_trait_projections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl_trait_projections.rs?ref=e3fa2d5803993319c3122bd8230e1cab8595cdd4", "patch": "@@ -34,8 +34,9 @@ fn projection_with_named_trait_is_disallowed(x: impl Iterator)\n fn projection_with_named_trait_inside_path_is_disallowed()\n     -> <::std::ops::Range<impl Debug> as Iterator>::Item\n //~^ ERROR `impl Trait` is not allowed in path parameters\n-{\n-    (1i32..100).next().unwrap()\n+//~| ERROR trait bound `impl std::fmt::Debug: std::iter::Step` is not satisfied\n+{ //~ ERROR trait bound `impl std::fmt::Debug: std::iter::Step` is not satisfied\n+    (1i32..100).next().unwrap() //~ ERROR mismatched types\n }\n \n fn projection_from_impl_trait_inside_dyn_trait_is_disallowed()"}, {"sha": "b495d4b4b010b82890183f7631cea963eedc3ab4", "filename": "src/test/ui/impl_trait_projections.stderr", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e3fa2d5803993319c3122bd8230e1cab8595cdd4/src%2Ftest%2Fui%2Fimpl_trait_projections.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3fa2d5803993319c3122bd8230e1cab8595cdd4/src%2Ftest%2Fui%2Fimpl_trait_projections.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl_trait_projections.stderr?ref=e3fa2d5803993319c3122bd8230e1cab8595cdd4", "patch": "@@ -17,7 +17,7 @@ LL |     -> <::std::ops::Range<impl Debug> as Iterator>::Item\n    |                           ^^^^^^^^^^\n \n error[E0667]: `impl Trait` is not allowed in path parameters\n-  --> $DIR/impl_trait_projections.rs:42:29\n+  --> $DIR/impl_trait_projections.rs:43:29\n    |\n LL |     -> <dyn Iterator<Item = impl Debug> as Iterator>::Item\n    |                             ^^^^^^^^^^\n@@ -30,7 +30,34 @@ LL | fn projection_is_disallowed(x: impl Iterator) -> <impl Iterator>::Item {\n    |\n    = note: specify the type using the syntax `<impl std::iter::Iterator as Trait>::Item`\n \n-error: aborting due to 5 previous errors\n+error[E0277]: the trait bound `impl std::fmt::Debug: std::iter::Step` is not satisfied\n+  --> $DIR/impl_trait_projections.rs:38:1\n+   |\n+LL | / { //~ ERROR trait bound `impl std::fmt::Debug: std::iter::Step` is not satisfied\n+LL | |     (1i32..100).next().unwrap() //~ ERROR mismatched types\n+LL | | }\n+   | |_^ the trait `std::iter::Step` is not implemented for `impl std::fmt::Debug`\n+   |\n+   = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::ops::Range<impl std::fmt::Debug>`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/impl_trait_projections.rs:39:5\n+   |\n+LL |     (1i32..100).next().unwrap() //~ ERROR mismatched types\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected anonymized type, found i32\n+   |\n+   = note: expected type `impl std::fmt::Debug`\n+              found type `i32`\n+\n+error[E0277]: the trait bound `impl std::fmt::Debug: std::iter::Step` is not satisfied\n+  --> $DIR/impl_trait_projections.rs:35:8\n+   |\n+LL |     -> <::std::ops::Range<impl Debug> as Iterator>::Item\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::iter::Step` is not implemented for `impl std::fmt::Debug`\n+   |\n+   = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::ops::Range<impl std::fmt::Debug>`\n+\n+error: aborting due to 8 previous errors\n \n-Some errors occurred: E0223, E0667.\n+Some errors occurred: E0223, E0277, E0308, E0667.\n For more information about an error, try `rustc --explain E0223`."}]}