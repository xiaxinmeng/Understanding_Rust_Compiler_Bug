{"sha": "f87a8f88e3d923db41f01f8c386767c4075b39e4", "node_id": "C_kwDOAAsO6NoAKGY4N2E4Zjg4ZTNkOTIzZGI0MWYwMWY4YzM4Njc2N2M0MDc1YjM5ZTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-15T00:28:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-15T00:28:06Z"}, "message": "Rollup merge of #91868 - tmiasko:llvm-time-trace-out, r=oli-obk\n\nUse `OutputFilenames` to generate output file for `-Zllvm-time-trace`\n\nThe resulting profile will include the crate name and will be stored in\nthe `--out-dir` directory.\n\nThis implementation makes it convenient to use LLVM time trace together\nwith cargo, in the contrast to the previous implementation which would\noverwrite profiles or store them in `.cargo/registry/..`.", "tree": {"sha": "a379e8711eb670da2d198efd11a11c5006e0dedd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a379e8711eb670da2d198efd11a11c5006e0dedd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f87a8f88e3d923db41f01f8c386767c4075b39e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f87a8f88e3d923db41f01f8c386767c4075b39e4", "html_url": "https://github.com/rust-lang/rust/commit/f87a8f88e3d923db41f01f8c386767c4075b39e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f87a8f88e3d923db41f01f8c386767c4075b39e4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eec5f919e78d11a314d87e7c178743597749de9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eec5f919e78d11a314d87e7c178743597749de9a", "html_url": "https://github.com/rust-lang/rust/commit/eec5f919e78d11a314d87e7c178743597749de9a"}, {"sha": "379fb40277b18d2d123f6eae215f662bf582a5e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/379fb40277b18d2d123f6eae215f662bf582a5e3", "html_url": "https://github.com/rust-lang/rust/commit/379fb40277b18d2d123f6eae215f662bf582a5e3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "30a33b99e5053f4dac1d5422eb473502811bfce1", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f87a8f88e3d923db41f01f8c386767c4075b39e4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f87a8f88e3d923db41f01f8c386767c4075b39e4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=f87a8f88e3d923db41f01f8c386767c4075b39e4", "patch": "@@ -96,7 +96,7 @@ impl CodegenBackend for GccCodegenBackend {\n         Box::new(res)\n     }\n \n-    fn join_codegen(&self, ongoing_codegen: Box<dyn Any>, sess: &Session) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported> {\n+    fn join_codegen(&self, ongoing_codegen: Box<dyn Any>, sess: &Session, _outputs: &OutputFilenames) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported> {\n         let (codegen_results, work_products) = ongoing_codegen\n             .downcast::<rustc_codegen_ssa::back::write::OngoingCodegen<GccCodegenBackend>>()\n             .expect(\"Expected GccCodegenBackend's OngoingCodegen, found Box<Any>\")"}]}