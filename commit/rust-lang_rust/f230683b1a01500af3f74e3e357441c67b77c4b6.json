{"sha": "f230683b1a01500af3f74e3e357441c67b77c4b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMzA2ODNiMWEwMTUwMGFmM2Y3NGUzZTM1NzQ0MWM2N2I3N2M0YjY=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-01-27T08:09:13Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-01-27T09:09:38Z"}, "message": "Fix PEP8 in get-snapshot", "tree": {"sha": "055655cb0981723de60cf8391cbded736db32984", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/055655cb0981723de60cf8391cbded736db32984"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f230683b1a01500af3f74e3e357441c67b77c4b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f230683b1a01500af3f74e3e357441c67b77c4b6", "html_url": "https://github.com/rust-lang/rust/commit/f230683b1a01500af3f74e3e357441c67b77c4b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f230683b1a01500af3f74e3e357441c67b77c4b6/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6af36031e2f286e6cca37f14ede514fff46b6e6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6af36031e2f286e6cca37f14ede514fff46b6e6f", "html_url": "https://github.com/rust-lang/rust/commit/6af36031e2f286e6cca37f14ede514fff46b6e6f"}], "stats": {"total": 68, "additions": 34, "deletions": 34}, "files": [{"sha": "442c50ed7731722a946d41061a52aa0833b388ea", "filename": "src/etc/get-snapshot.py", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/f230683b1a01500af3f74e3e357441c67b77c4b6/src%2Fetc%2Fget-snapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/f230683b1a01500af3f74e3e357441c67b77c4b6/src%2Fetc%2Fget-snapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fget-snapshot.py?ref=f230683b1a01500af3f74e3e357441c67b77c4b6", "patch": "@@ -14,32 +14,32 @@\n from snapshot import *\n \n def unpack_snapshot(triple, dl_path):\n-  print(\"opening snapshot \" + dl_path)\n-  tar = tarfile.open(dl_path)\n-  kernel = get_kernel(triple)\n+    print(\"opening snapshot \" + dl_path)\n+    tar = tarfile.open(dl_path)\n+    kernel = get_kernel(triple)\n \n-  stagep = os.path.join(triple, \"stage0\")\n+    stagep = os.path.join(triple, \"stage0\")\n \n-  # Remove files from prior unpackings, since snapshot rustc may not\n-  # be able to disambiguate between multiple candidate libraries.\n-  # (Leave dirs in place since extracting step still needs them.)\n-  for root, _, files in os.walk(stagep):\n-    for f in files:\n-      print(\"removing \" + os.path.join(root, f))\n-      os.unlink(os.path.join(root, f))\n+    # Remove files from prior unpackings, since snapshot rustc may not\n+    # be able to disambiguate between multiple candidate libraries.\n+    # (Leave dirs in place since extracting step still needs them.)\n+    for root, _, files in os.walk(stagep):\n+        for f in files:\n+            print(\"removing \" + os.path.join(root, f))\n+            os.unlink(os.path.join(root, f))\n \n-  for p in tar.getnames():\n-    name = p.replace(\"rust-stage0/\", \"\", 1);\n+    for p in tar.getnames():\n+        name = p.replace(\"rust-stage0/\", \"\", 1);\n \n-    fp = os.path.join(stagep, name)\n-    print(\"extracting \" + p)\n-    tar.extract(p, download_unpack_base)\n-    tp = os.path.join(download_unpack_base, p)\n-    if os.path.isdir(tp) and os.path.exists(fp):\n-        continue\n-    shutil.move(tp, fp)\n-  tar.close()\n-  shutil.rmtree(download_unpack_base)\n+        fp = os.path.join(stagep, name)\n+        print(\"extracting \" + p)\n+        tar.extract(p, download_unpack_base)\n+        tp = os.path.join(download_unpack_base, p)\n+        if os.path.isdir(tp) and os.path.exists(fp):\n+                continue\n+        shutil.move(tp, fp)\n+    tar.close()\n+    shutil.rmtree(download_unpack_base)\n \n \n # Main\n@@ -50,21 +50,21 @@ def unpack_snapshot(triple, dl_path):\n \n triple = sys.argv[1]\n if len(sys.argv) == 3:\n-  dl_path = sys.argv[2]\n+    dl_path = sys.argv[2]\n else:\n-  snap = determine_curr_snapshot(triple)\n-  dl = os.path.join(download_dir_base, snap)\n-  url = download_url_base + \"/\" + snap\n-  print(\"determined most recent snapshot: \" + snap)\n+    snap = determine_curr_snapshot(triple)\n+    dl = os.path.join(download_dir_base, snap)\n+    url = download_url_base + \"/\" + snap\n+    print(\"determined most recent snapshot: \" + snap)\n \n-  if (not os.path.exists(dl)):\n-    get_url_to_file(url, dl)\n+    if (not os.path.exists(dl)):\n+        get_url_to_file(url, dl)\n \n-  if (snap_filename_hash_part(snap) == hash_file(dl)):\n-    print(\"got download with ok hash\")\n-  else:\n-    raise Exception(\"bad hash on download\")\n+    if (snap_filename_hash_part(snap) == hash_file(dl)):\n+        print(\"got download with ok hash\")\n+    else:\n+        raise Exception(\"bad hash on download\")\n \n-  dl_path = os.path.join(download_dir_base, snap)\n+    dl_path = os.path.join(download_dir_base, snap)\n \n unpack_snapshot(triple, dl_path)"}]}