{"sha": "5db5f5cc1dc5dfbded866b59570afc50538b9091", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYjVmNWNjMWRjNWRmYmRlZDg2NmI1OTU3MGFmYzUwNTM4YjkwOTE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-12T20:51:56Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-12T20:51:56Z"}, "message": "Small improvements from review comments", "tree": {"sha": "c03c3d5224eeb9c9a4c99e78851e209f5ffe2cd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c03c3d5224eeb9c9a4c99e78851e209f5ffe2cd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5db5f5cc1dc5dfbded866b59570afc50538b9091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5db5f5cc1dc5dfbded866b59570afc50538b9091", "html_url": "https://github.com/rust-lang/rust/commit/5db5f5cc1dc5dfbded866b59570afc50538b9091", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5db5f5cc1dc5dfbded866b59570afc50538b9091/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0bdaa6c00faa503db58f2a7987d1252086b4441", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bdaa6c00faa503db58f2a7987d1252086b4441", "html_url": "https://github.com/rust-lang/rust/commit/d0bdaa6c00faa503db58f2a7987d1252086b4441"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "fd6336dd8c9788c2f20477d3d33e52d73209641b", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5db5f5cc1dc5dfbded866b59570afc50538b9091/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db5f5cc1dc5dfbded866b59570afc50538b9091/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=5db5f5cc1dc5dfbded866b59570afc50538b9091", "patch": "@@ -104,7 +104,7 @@ pub trait HirDatabase: SyntaxDatabase\n \n     fn impls_in_crate(krate: Crate) -> Cancelable<Arc<CrateImplBlocks>> {\n         type ImplsInCrateQuery;\n-        use fn crate::ty::method_resolution::impls_in_crate;\n+        use fn crate::ty::method_resolution::CrateImplBlocks::impls_in_crate_query;\n     }\n \n     fn body_hir(def_id: DefId) -> Cancelable<Arc<crate::expr::Body>> {"}, {"sha": "d0b08630810eaa9b7591e3b9abf1505279bdda7e", "filename": "crates/ra_hir/src/impl_block.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5db5f5cc1dc5dfbded866b59570afc50538b9091/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db5f5cc1dc5dfbded866b59570afc50538b9091/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs?ref=5db5f5cc1dc5dfbded866b59570afc50538b9091", "patch": "@@ -170,10 +170,10 @@ impl ModuleImplBlocks {\n         let (file_id, module_source) = module.definition_source(db)?;\n         let node = match &module_source {\n             ModuleSource::SourceFile(node) => node.syntax(),\n-            ModuleSource::Module(node) => match node.item_list() {\n-                Some(item_list) => item_list.syntax(),\n-                None => return Ok(()),\n-            },\n+            ModuleSource::Module(node) => node\n+                .item_list()\n+                .expect(\"inline module should have item list\")\n+                .syntax(),\n         };\n \n         let source_file_items = db.file_items(file_id.into());"}, {"sha": "1330d03a809e4e1cf0979fef233ca55cc49eb608", "filename": "crates/ra_hir/src/ty/method_resolution.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5db5f5cc1dc5dfbded866b59570afc50538b9091/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db5f5cc1dc5dfbded866b59570afc50538b9091/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs?ref=5db5f5cc1dc5dfbded866b59570afc50538b9091", "patch": "@@ -81,23 +81,23 @@ impl CrateImplBlocks {\n \n         Ok(())\n     }\n-}\n \n-pub(crate) fn impls_in_crate(\n-    db: &impl HirDatabase,\n-    krate: Crate,\n-) -> Cancelable<Arc<CrateImplBlocks>> {\n-    let crate_graph = db.crate_graph();\n-    let file_id = crate_graph.crate_root(krate.crate_id);\n-    let source_root_id = db.file_source_root(file_id);\n-    let mut crate_impl_blocks = CrateImplBlocks {\n-        source_root_id,\n-        impls: FxHashMap::default(),\n-    };\n-    if let Some(module) = krate.root_module(db)? {\n-        crate_impl_blocks.collect_recursive(db, module)?;\n+    pub(crate) fn impls_in_crate_query(\n+        db: &impl HirDatabase,\n+        krate: Crate,\n+    ) -> Cancelable<Arc<CrateImplBlocks>> {\n+        let crate_graph = db.crate_graph();\n+        let file_id = crate_graph.crate_root(krate.crate_id);\n+        let source_root_id = db.file_source_root(file_id);\n+        let mut crate_impl_blocks = CrateImplBlocks {\n+            source_root_id,\n+            impls: FxHashMap::default(),\n+        };\n+        if let Some(module) = krate.root_module(db)? {\n+            crate_impl_blocks.collect_recursive(db, module)?;\n+        }\n+        Ok(Arc::new(crate_impl_blocks))\n     }\n-    Ok(Arc::new(crate_impl_blocks))\n }\n \n fn def_crate(db: &impl HirDatabase, ty: &Ty) -> Cancelable<Option<Crate>> {"}]}