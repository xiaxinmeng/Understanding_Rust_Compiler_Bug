{"sha": "b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZmVjNmIxN2YxZjRjYmUyMjhjOTY0Y2ZiOGEwZjc2YjQ2Zjc0OWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T16:38:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T16:38:38Z"}, "message": "use ptr_null where appropriate", "tree": {"sha": "18be2f20c47236f0dec00e1a743a2c62b65ced01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18be2f20c47236f0dec00e1a743a2c62b65ced01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "html_url": "https://github.com/rust-lang/rust/commit/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbbca59de7873ebad6452c576fe7f9e7011c466d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbbca59de7873ebad6452c576fe7f9e7011c466d", "html_url": "https://github.com/rust-lang/rust/commit/fbbca59de7873ebad6452c576fe7f9e7011c466d"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "84329b8fd3cd6a5c10a15db89b16f8f9b9e060f4", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "patch": "@@ -130,7 +130,7 @@ impl MemoryExtra {\n                 // This should be all-zero, pointer-sized.\n                 let layout = this.layout_of(this.tcx.types.usize)?;\n                 let place = this.allocate(layout, MiriMemoryKind::Machine.into());\n-                this.write_scalar(Scalar::from_machine_usize(0, &*this.tcx), place.into())?;\n+                this.write_scalar(Scalar::from_machine_usize(0, this), place.into())?;\n                 Self::add_extern_static(this, \"__cxa_thread_atexit_impl\", place.ptr);\n                 // \"environ\"\n                 Self::add_extern_static(this, \"environ\", this.machine.env_vars.environ.unwrap().ptr);"}, {"sha": "98f1e7e3cfa32040dd7089c9f78b72cc96b7c967", "filename": "src/shims/env.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "patch": "@@ -337,14 +337,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // This is memory backing an extern static, hence `Machine`, not `Env`.\n             let layout = this.layout_of(this.tcx.types.usize)?;\n             let place = this.allocate(layout, MiriMemoryKind::Machine.into());\n-            this.write_scalar(Scalar::from_machine_usize(0, &*this.tcx), place.into())?;\n             this.machine.env_vars.environ = Some(place);\n         }\n \n         // Collect all the pointers to each variable in a vector.\n         let mut vars: Vec<Scalar<Tag>> = this.machine.env_vars.map.values().map(|&ptr| ptr.into()).collect();\n         // Add the trailing null pointer.\n-        vars.push(Scalar::from_machine_usize(0, this));\n+        vars.push(Scalar::ptr_null(this));\n         // Make an array with all these pointers inside Miri.\n         let tcx = this.tcx;\n         let vars_layout ="}, {"sha": "debf412bdd413bbad2854e53f66c3e20bb4c268b", "filename": "src/shims/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "patch": "@@ -860,7 +860,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n             Err(e) => {\n                 this.set_last_error_from_io_error(e)?;\n-                Ok(Scalar::from_machine_usize(0, this))\n+                Ok(Scalar::ptr_null(this))\n             }\n         }\n     }"}, {"sha": "fda52429e515a46163666460f0eec8b11163f3ef", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "patch": "@@ -2,7 +2,6 @@ use std::iter;\n use std::convert::TryFrom;\n \n use rustc::mir;\n-use rustc::mir::interpret::{InterpResult, PointerArithmetic};\n use rustc::ty;\n use rustc::ty::layout::{Align, LayoutOf};\n use rustc_apfloat::Float;"}]}