{"sha": "9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMmM1MGYzZDZiNzRmNGVkYmZmODBjYjNkMWRlNWYzNDg1NDI4YzA=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-01-19T11:07:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-19T11:07:00Z"}, "message": "Merge pull request #2364 from flip1995/precedence\n\nAdd macro check to precedence lint", "tree": {"sha": "72b039fa99f744fde6809e821b6d571a0b6a8e5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72b039fa99f744fde6809e821b6d571a0b6a8e5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaYdFUCRBK7hj4Ov3rIwAAdHIIACKOcMqyKPpzENfoizKKVOMx\nlJ6lJJpPhu063/Z0FVkgM1xCcNgOISUJXC5J/djE8Ua1E4VPYGQYhZtuY071ezIk\nGMa5DTmomF02YSFpVRYHLKcm9+LjPBayErz6V4rQcyDXEy8VXyAVb1leCiFReFfl\nzxAz4+mUVUT20YYDMIGFVEFj/yPpVzXJb6TNoP7MifIQb/1GPnOP/JaivAgBKqvU\nQqAyZigYaGnwQ8pLSPO9gNqHRHS/dOxxsTpSwzhjU8Y+v9aVRbB3GP5geDqw19m7\nFqkyP10QPPxBmYGwvCYLlf02uMIy50xjef0njTOCgfYmiMoGJMlmt17qrkgq9hk=\n=7gYW\n-----END PGP SIGNATURE-----\n", "payload": "tree 72b039fa99f744fde6809e821b6d571a0b6a8e5c\nparent 4bd7ed234e0cc656a9832a5957c013f8f2db02b4\nparent 877321ba328918a09bec8f13b4695f0c423ab212\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1516360020 +0100\ncommitter GitHub <noreply@github.com> 1516360020 +0100\n\nMerge pull request #2364 from flip1995/precedence\n\nAdd macro check to precedence lint"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0", "html_url": "https://github.com/rust-lang/rust/commit/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bd7ed234e0cc656a9832a5957c013f8f2db02b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd7ed234e0cc656a9832a5957c013f8f2db02b4", "html_url": "https://github.com/rust-lang/rust/commit/4bd7ed234e0cc656a9832a5957c013f8f2db02b4"}, {"sha": "877321ba328918a09bec8f13b4695f0c423ab212", "url": "https://api.github.com/repos/rust-lang/rust/commits/877321ba328918a09bec8f13b4695f0c423ab212", "html_url": "https://github.com/rust-lang/rust/commit/877321ba328918a09bec8f13b4695f0c423ab212"}], "stats": {"total": 67, "additions": 42, "deletions": 25}, "files": [{"sha": "5d56a927bc0f7ed2e14d755be85d6e41ad719237", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::*;\n use syntax::ast::*;\n use syntax::codemap::Spanned;\n-use utils::{snippet, span_lint_and_sugg};\n+use utils::{in_macro, snippet, span_lint_and_sugg};\n \n /// **What it does:** Checks for operations where precedence may be unclear\n /// and suggests to add parentheses. Currently it catches the following:\n@@ -37,6 +37,10 @@ impl LintPass for Precedence {\n \n impl EarlyLintPass for Precedence {\n     fn check_expr(&mut self, cx: &EarlyContext, expr: &Expr) {\n+        if in_macro(expr.span) {\n+            return;\n+        }\n+\n         if let ExprKind::Binary(Spanned { node: op, .. }, ref left, ref right) = expr.node {\n             let span_sugg = |expr: &Expr, sugg| {\n                 span_lint_and_sugg("}, {"sha": "aacd90cdf92b73e0bd8a6a8cc67c6935523ce76d", "filename": "tests/ui/precedence.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0/tests%2Fui%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0/tests%2Fui%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.rs?ref=9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0", "patch": "@@ -4,6 +4,16 @@\n #[warn(precedence)]\n #[allow(identity_op)]\n #[allow(eq_op)]\n+\n+macro_rules! trip {\n+   ($a:expr) => {\n+    match $a & 0b1111_1111i8 {\n+        0 => println!(\"a is zero ({})\", $a),\n+        _ => println!(\"a is {}\", $a),\n+    }\n+   };\n+}\n+\n fn main() {\n     1 << 2 + 3;\n     1 + 2 << 3;\n@@ -22,4 +32,7 @@ fn main() {\n     let _ = -(1f32).abs();\n     let _ = -(1i32.abs());\n     let _ = -(1f32.abs());\n+\n+    let b = 3;\n+    trip!(b * 8);\n }"}, {"sha": "92c1364746e8fe4d8f848685341f2c154253f519", "filename": "tests/ui/precedence.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0/tests%2Fui%2Fprecedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0/tests%2Fui%2Fprecedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.stderr?ref=9a2c50f3d6b74f4edbff80cb3d1de5f3485428c0", "patch": "@@ -1,57 +1,57 @@\n error: operator precedence can trip the unwary\n- --> $DIR/precedence.rs:8:5\n-  |\n-8 |     1 << 2 + 3;\n-  |     ^^^^^^^^^^ help: consider parenthesizing your expression: `1 << (2 + 3)`\n-  |\n-  = note: `-D precedence` implied by `-D warnings`\n+  --> $DIR/precedence.rs:18:5\n+   |\n+18 |     1 << 2 + 3;\n+   |     ^^^^^^^^^^ help: consider parenthesizing your expression: `1 << (2 + 3)`\n+   |\n+   = note: `-D precedence` implied by `-D warnings`\n \n error: operator precedence can trip the unwary\n- --> $DIR/precedence.rs:9:5\n-  |\n-9 |     1 + 2 << 3;\n-  |     ^^^^^^^^^^ help: consider parenthesizing your expression: `(1 + 2) << 3`\n+  --> $DIR/precedence.rs:19:5\n+   |\n+19 |     1 + 2 << 3;\n+   |     ^^^^^^^^^^ help: consider parenthesizing your expression: `(1 + 2) << 3`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:10:5\n+  --> $DIR/precedence.rs:20:5\n    |\n-10 |     4 >> 1 + 1;\n+20 |     4 >> 1 + 1;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression: `4 >> (1 + 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:11:5\n+  --> $DIR/precedence.rs:21:5\n    |\n-11 |     1 + 3 >> 2;\n+21 |     1 + 3 >> 2;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression: `(1 + 3) >> 2`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:12:5\n+  --> $DIR/precedence.rs:22:5\n    |\n-12 |     1 ^ 1 - 1;\n+22 |     1 ^ 1 - 1;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression: `1 ^ (1 - 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:13:5\n+  --> $DIR/precedence.rs:23:5\n    |\n-13 |     3 | 2 - 1;\n+23 |     3 | 2 - 1;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression: `3 | (2 - 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:14:5\n+  --> $DIR/precedence.rs:24:5\n    |\n-14 |     3 & 5 - 2;\n+24 |     3 & 5 - 2;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression: `3 & (5 - 2)`\n \n error: unary minus has lower precedence than method call\n-  --> $DIR/precedence.rs:15:5\n+  --> $DIR/precedence.rs:25:5\n    |\n-15 |     -1i32.abs();\n+25 |     -1i32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent: `-(1i32.abs())`\n \n error: unary minus has lower precedence than method call\n-  --> $DIR/precedence.rs:16:5\n+  --> $DIR/precedence.rs:26:5\n    |\n-16 |     -1f32.abs();\n+26 |     -1f32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent: `-(1f32.abs())`\n \n error: aborting due to 9 previous errors"}]}