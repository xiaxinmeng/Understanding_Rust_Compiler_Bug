{"sha": "1a25f22c801ffb277385f76c494634f388343fb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMjVmMjJjODAxZmZiMjc3Mzg1Zjc2YzQ5NDYzNGYzODgzNDNmYjA=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-01T14:56:12Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-01T14:56:12Z"}, "message": "Rollup merge of #55561 - smaeul:test-fixes, r=alexcrichton\n\nFix double_check tests on big-endian targets\n\nSince the enums get optimized down to 1 byte long, the bits set in the `usize` member don't align with the `enum` values on big-endian machines. Avoid this issue by shrinking the integer member to the\nsame size as the enums.", "tree": {"sha": "0c2ab4b0a5225a103b6f57ca21eed6884afa592a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c2ab4b0a5225a103b6f57ca21eed6884afa592a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a25f22c801ffb277385f76c494634f388343fb0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvbFAwACgkQ/vbIBR0O\nATycCQ/9GZ/moyYDeKVPudobaElTbO5rCb3g24lgf61K9MSfKbm19Zh+o6aLHgDi\nkhz3/9M6Vw43fjS7XQZmrSXGBOde8Jlhj41lhOTNnj2iCjJ+FKn1PA22c+QRlsDM\nUv/Bk6252PacmoiMk8Ql6SDiF51ZmtHKW6zT3zykbaCvFo9nyYx3alYWKUxGzIOy\n5mdhZKptATScaEuXRBnwmjuRnDsunCxiF++TUqpp7kZejDJ+q5a/8aI53qB+cwaZ\nHJJQ1Nob1Trf2+gq0crzOMU0sWgtULbhdgEmZ3jlw3M7QKPr3Hd4uxlATr6QZy9A\ndU4MLtNQaayd5VsbgXn4/Cs4pzwlMem70oa0VMP6H1uYHb+HpQcGCtTBAeMLUCTn\npaaiX5Vs8EVDZmgFM2zS/95UHygfqC1vKzkZ5DnNXihoflwJW8mwf49KcfZgPDRS\nDT3k+e7H2/bdP4ddRSgXSrf+ZM9qIIybQgaU08nENHHRsjVNYKWeJHptgA4KdCpG\nA48/ChqFVpQZE5QJqA7hCuFJd5c94A3quVzxRPH3bsEjMp6Q3NElP2UJQ8zVliA6\nOjcGXpTqm/cErf1yeOL/zja+VR2Ecu33fmOdt9sDTfAROWZbcZwvDt39aVVYUaRC\nUFOq9tbaXdpS1KBticOOiDf+ZMTltJ/VR0O4wKkwGGOd9YUff3Y=\n=U6a8\n-----END PGP SIGNATURE-----", "payload": "tree 0c2ab4b0a5225a103b6f57ca21eed6884afa592a\nparent 9550bc06dc984f31d61e78aaa09ca93dbcc5e076\nparent 283f2be1421eca11b1a3abbaac40ca946e806037\nauthor kennytm <kennytm@gmail.com> 1541084172 +0800\ncommitter kennytm <kennytm@gmail.com> 1541084172 +0800\n\nRollup merge of #55561 - smaeul:test-fixes, r=alexcrichton\n\nFix double_check tests on big-endian targets\n\nSince the enums get optimized down to 1 byte long, the bits set in the `usize` member don't align with the `enum` values on big-endian machines. Avoid this issue by shrinking the integer member to the\nsame size as the enums.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a25f22c801ffb277385f76c494634f388343fb0", "html_url": "https://github.com/rust-lang/rust/commit/1a25f22c801ffb277385f76c494634f388343fb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a25f22c801ffb277385f76c494634f388343fb0/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9550bc06dc984f31d61e78aaa09ca93dbcc5e076", "url": "https://api.github.com/repos/rust-lang/rust/commits/9550bc06dc984f31d61e78aaa09ca93dbcc5e076", "html_url": "https://github.com/rust-lang/rust/commit/9550bc06dc984f31d61e78aaa09ca93dbcc5e076"}, {"sha": "283f2be1421eca11b1a3abbaac40ca946e806037", "url": "https://api.github.com/repos/rust-lang/rust/commits/283f2be1421eca11b1a3abbaac40ca946e806037", "html_url": "https://github.com/rust-lang/rust/commit/283f2be1421eca11b1a3abbaac40ca946e806037"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "76f9276c05807cf2a0131dcfe84501916fb61430", "filename": "src/test/ui/consts/const-eval/double_check.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1a25f22c801ffb277385f76c494634f388343fb0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a25f22c801ffb277385f76c494634f388343fb0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check.rs?ref=1a25f22c801ffb277385f76c494634f388343fb0", "patch": "@@ -21,12 +21,12 @@ enum Bar {\n union Union {\n     foo: &'static Foo,\n     bar: &'static Bar,\n-    usize: &'static usize,\n+    u8: &'static u8,\n }\n-static BAR: usize = 42;\n+static BAR: u8 = 42;\n static FOO: (&Foo, &Bar) = unsafe {(\n-    Union { usize: &BAR }.foo,\n-    Union { usize: &BAR }.bar,\n+    Union { u8: &BAR }.foo,\n+    Union { u8: &BAR }.bar,\n )};\n \n fn main() {}"}, {"sha": "701632362ce7afa4b9ba5fc8e6a64be4d0fe6dfd", "filename": "src/test/ui/consts/const-eval/double_check2.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1a25f22c801ffb277385f76c494634f388343fb0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a25f22c801ffb277385f76c494634f388343fb0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check2.rs?ref=1a25f22c801ffb277385f76c494634f388343fb0", "patch": "@@ -19,12 +19,12 @@ enum Bar {\n union Union {\n     foo: &'static Foo,\n     bar: &'static Bar,\n-    usize: &'static usize,\n+    u8: &'static u8,\n }\n-static BAR: usize = 5;\n+static BAR: u8 = 5;\n static FOO: (&Foo, &Bar) = unsafe {( //~ undefined behavior\n-    Union { usize: &BAR }.foo,\n-    Union { usize: &BAR }.bar,\n+    Union { u8: &BAR }.foo,\n+    Union { u8: &BAR }.bar,\n )};\n \n fn main() {}"}, {"sha": "28825477c810276f25c5b30876d49a5aab3eb839", "filename": "src/test/ui/consts/const-eval/double_check2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a25f22c801ffb277385f76c494634f388343fb0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a25f22c801ffb277385f76c494634f388343fb0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdouble_check2.stderr?ref=1a25f22c801ffb277385f76c494634f388343fb0", "patch": "@@ -2,8 +2,8 @@ error[E0080]: it is undefined behavior to use this value\n   --> $DIR/double_check2.rs:25:1\n    |\n LL | / static FOO: (&Foo, &Bar) = unsafe {( //~ undefined behavior\n-LL | |     Union { usize: &BAR }.foo,\n-LL | |     Union { usize: &BAR }.bar,\n+LL | |     Union { u8: &BAR }.foo,\n+LL | |     Union { u8: &BAR }.bar,\n LL | | )};\n    | |___^ type validation failed: encountered invalid enum discriminant 5 at .1.<deref>\n    |"}]}