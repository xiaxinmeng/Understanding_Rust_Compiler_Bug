{"sha": "a909144b1c5cc5ae5d32aaba63a4ee6bce5fc1e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MDkxNDRiMWM1Y2M1YWU1ZDMyYWFiYTYzYTRlZTZiY2U1ZmMxZTI=", "commit": {"author": {"name": "Eric Reed", "email": "ecreed@cs.washington.edu", "date": "2013-08-20T16:53:02Z"}, "committer": {"name": "Eric Reed", "email": "ecreed@cs.washington.edu", "date": "2013-08-20T16:53:02Z"}, "message": "Moved .sleep() to Timer.", "tree": {"sha": "e6039452587487239f228e7a7cc36c49ab7f1f0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6039452587487239f228e7a7cc36c49ab7f1f0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a909144b1c5cc5ae5d32aaba63a4ee6bce5fc1e2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a909144b1c5cc5ae5d32aaba63a4ee6bce5fc1e2", "html_url": "https://github.com/rust-lang/rust/commit/a909144b1c5cc5ae5d32aaba63a4ee6bce5fc1e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a909144b1c5cc5ae5d32aaba63a4ee6bce5fc1e2/comments", "author": {"login": "anasazi", "id": 591682, "node_id": "MDQ6VXNlcjU5MTY4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/591682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anasazi", "html_url": "https://github.com/anasazi", "followers_url": "https://api.github.com/users/anasazi/followers", "following_url": "https://api.github.com/users/anasazi/following{/other_user}", "gists_url": "https://api.github.com/users/anasazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/anasazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anasazi/subscriptions", "organizations_url": "https://api.github.com/users/anasazi/orgs", "repos_url": "https://api.github.com/users/anasazi/repos", "events_url": "https://api.github.com/users/anasazi/events{/privacy}", "received_events_url": "https://api.github.com/users/anasazi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anasazi", "id": 591682, "node_id": "MDQ6VXNlcjU5MTY4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/591682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anasazi", "html_url": "https://github.com/anasazi", "followers_url": "https://api.github.com/users/anasazi/followers", "following_url": "https://api.github.com/users/anasazi/following{/other_user}", "gists_url": "https://api.github.com/users/anasazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/anasazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anasazi/subscriptions", "organizations_url": "https://api.github.com/users/anasazi/orgs", "repos_url": "https://api.github.com/users/anasazi/repos", "events_url": "https://api.github.com/users/anasazi/events{/privacy}", "received_events_url": "https://api.github.com/users/anasazi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "063a005459a3ece4022e1fdb6400548c7ad2358e", "url": "https://api.github.com/repos/rust-lang/rust/commits/063a005459a3ece4022e1fdb6400548c7ad2358e", "html_url": "https://github.com/rust-lang/rust/commit/063a005459a3ece4022e1fdb6400548c7ad2358e"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "b0ec747800d23287b55453c1e1a2069f69fb796f", "filename": "src/libstd/rt/io/timer.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a909144b1c5cc5ae5d32aaba63a4ee6bce5fc1e2/src%2Flibstd%2Frt%2Fio%2Ftimer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a909144b1c5cc5ae5d32aaba63a4ee6bce5fc1e2/src%2Flibstd%2Frt%2Fio%2Ftimer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Ftimer.rs?ref=a909144b1c5cc5ae5d32aaba63a4ee6bce5fc1e2", "patch": "@@ -18,9 +18,6 @@ use rt::local::Local;\n pub struct Timer(~RtioTimerObject);\n \n impl Timer {\n-    fn new_on_rt(i: ~RtioTimerObject) -> Timer {\n-        Timer(i)\n-    }\n \n     pub fn new() -> Option<Timer> {\n         let timer = unsafe {\n@@ -30,18 +27,16 @@ impl Timer {\n             (*io).timer_init()\n         };\n         match timer {\n-            Ok(t) => Some(Timer::new_on_rt(t)),\n+            Ok(t) => Some(Timer(t)),\n             Err(ioerr) => {\n                 rtdebug!(\"Timer::init: failed to init: %?\", ioerr);\n                 io_error::cond.raise(ioerr);\n                 None\n             }\n         }\n     }\n-}\n \n-impl RtioTimer for Timer {\n-    fn sleep(&mut self, msecs: u64) {\n+    pub fn sleep(&mut self, msecs: u64) {\n         (**self).sleep(msecs);\n     }\n }"}]}