{"sha": "2141888782a74de4a655fee585c99163a3e75e5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNDE4ODg3ODJhNzRkZTRhNjU1ZmVlNTg1Yzk5MTYzYTNlNzVlNWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-28T11:33:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-28T11:33:10Z"}, "message": "Rename raw_lookahead -> nth", "tree": {"sha": "044832f0c569f54ca92bdf618c6cc4b3b68940e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/044832f0c569f54ca92bdf618c6cc4b3b68940e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2141888782a74de4a655fee585c99163a3e75e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2141888782a74de4a655fee585c99163a3e75e5c", "html_url": "https://github.com/rust-lang/rust/commit/2141888782a74de4a655fee585c99163a3e75e5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2141888782a74de4a655fee585c99163a3e75e5c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60725def49834bb7dfd46c1a7b84d86f810e1d03", "url": "https://api.github.com/repos/rust-lang/rust/commits/60725def49834bb7dfd46c1a7b84d86f810e1d03", "html_url": "https://github.com/rust-lang/rust/commit/60725def49834bb7dfd46c1a7b84d86f810e1d03"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "7fed5e83b09948dc90da216ef872fc29b1da46d3", "filename": "src/parser/event_parser/grammar/items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2141888782a74de4a655fee585c99163a3e75e5c/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2141888782a74de4a655fee585c99163a3e75e5c/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs?ref=2141888782a74de4a655fee585c99163a3e75e5c", "patch": "@@ -14,7 +14,7 @@ fn item(p: &mut Parser) {\n     let item = p.start();\n     attributes::outer_attributes(p);\n     visibility(p);\n-    let la = p.raw_lookahead(1);\n+    let la = p.nth(1);\n     let item_kind = match p.current() {\n         EXTERN_KW if la == CRATE_KW => {\n             extern_crate_item(p);\n@@ -171,7 +171,7 @@ fn use_item(p: &mut Parser) {\n     p.expect(SEMI);\n \n     fn use_tree(p: &mut Parser) {\n-        let la = p.raw_lookahead(1);\n+        let la = p.nth(1);\n         let m = p.start();\n         match (p.current(), la) {\n             (STAR, _) => {"}, {"sha": "931193b5fd8497ae21c6ea966a6ea220a9b71e26", "filename": "src/parser/event_parser/grammar/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2141888782a74de4a655fee585c99163a3e75e5c/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2141888782a74de4a655fee585c99163a3e75e5c/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs?ref=2141888782a74de4a655fee585c99163a3e75e5c", "patch": "@@ -20,7 +20,7 @@ fn visibility(p: &mut Parser) {\n         let vis = p.start();\n         p.bump();\n         if p.at(L_PAREN) {\n-            match p.raw_lookahead(1) {\n+            match p.nth(1) {\n                 CRATE_KW | SELF_KW | SUPER_KW | IN_KW => {\n                     p.bump();\n                     if p.bump() == IN_KW {\n@@ -87,13 +87,13 @@ impl Lookahead for SyntaxKind {\n \n impl Lookahead for [SyntaxKind; 2] {\n     fn is_ahead(self, p: &Parser) -> bool {\n-        p.current() == self[0] && p.raw_lookahead(1) == self[1]\n+        p.current() == self[0] && p.nth(1) == self[1]\n     }\n }\n \n impl Lookahead for [SyntaxKind; 3] {\n     fn is_ahead(self, p: &Parser) -> bool {\n-        p.current() == self[0] && p.raw_lookahead(1) == self[1] && p.raw_lookahead(2) == self[2]\n+        p.current() == self[0] && p.nth(1) == self[1] && p.nth(2) == self[2]\n     }\n }\n "}, {"sha": "6c8a89f6c6f55db41e61dfd3593fb026381522b1", "filename": "src/parser/event_parser/grammar/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2141888782a74de4a655fee585c99163a3e75e5c/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2141888782a74de4a655fee585c99163a3e75e5c/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs?ref=2141888782a74de4a655fee585c99163a3e75e5c", "patch": "@@ -12,7 +12,7 @@ pub(crate) fn use_path(p: &mut Parser) {\n     path_segment(p, true);\n     let mut qual = path.complete(p, PATH);\n     loop {\n-        if p.at(COLONCOLON) && !items::is_use_tree_start(p.raw_lookahead(1)) {\n+        if p.at(COLONCOLON) && !items::is_use_tree_start(p.nth(1)) {\n             let path = qual.precede(p);\n             p.bump();\n             path_segment(p, false);"}, {"sha": "a15d0b6335d2a562c2ebdff9faed7134bd1436c9", "filename": "src/parser/event_parser/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2141888782a74de4a655fee585c99163a3e75e5c/src%2Fparser%2Fevent_parser%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2141888782a74de4a655fee585c99163a3e75e5c/src%2Fparser%2Fevent_parser%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fparser.rs?ref=2141888782a74de4a655fee585c99163a3e75e5c", "patch": "@@ -164,12 +164,12 @@ impl<'t> Parser<'t> {\n         kind\n     }\n \n-    pub(crate) fn raw_lookahead(&self, n: usize) -> SyntaxKind {\n+    pub(crate) fn nth(&self, n: usize) -> SyntaxKind {\n         self.tokens.get(self.pos + n).map(|t| t.kind).unwrap_or(EOF)\n     }\n \n     pub(crate) fn current(&self) -> SyntaxKind {\n-        self.raw_lookahead(0)\n+        self.nth(0)\n     }\n \n     fn event(&mut self, event: Event) {"}]}