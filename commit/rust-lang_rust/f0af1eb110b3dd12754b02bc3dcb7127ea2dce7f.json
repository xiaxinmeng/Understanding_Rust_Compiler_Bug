{"sha": "f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYWYxZWIxMTBiM2RkMTI3NTRiMDJiYzNkY2I3MTI3ZWEyZGNlN2Y=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-10-22T19:53:01Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-10-22T22:12:16Z"}, "message": "Warn when creating a module and a struct that both have the same name.\n\nCurrently it is possible to do the following:\n\n - define a module named `Foo` and then a unit or tuple struct also named `Foo`\n - define any struct named `Foo` and then a module named `Foo`\n\nThis commit introduces a warning for both of these cases.", "tree": {"sha": "55c04afff812ba379cdc9fbc69236cd6a9ef1691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55c04afff812ba379cdc9fbc69236cd6a9ef1691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f", "html_url": "https://github.com/rust-lang/rust/commit/f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f/comments", "author": null, "committer": null, "parents": [{"sha": "5692e16270ad844e89aa56859d5f8311159e2eea", "url": "https://api.github.com/repos/rust-lang/rust/commits/5692e16270ad844e89aa56859d5f8311159e2eea", "html_url": "https://github.com/rust-lang/rust/commit/5692e16270ad844e89aa56859d5f8311159e2eea"}], "stats": {"total": 125, "additions": 110, "deletions": 15}, "files": [{"sha": "52ec3a0dbf926d1e28feb160f21d6fd53d935264", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f", "patch": "@@ -404,6 +404,29 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n             }\n \n             ItemMod(..) => {\n+                let child = parent.children.borrow().get(&name).cloned();\n+                if let Some(child) = child {\n+                    // check if there's struct of the same name already defined\n+                    if child.defined_in_namespace(TypeNS)\n+                        && child.get_module_if_available().is_none() {\n+                        self.session.span_warn(sp, &format!(\n+                                                    \"duplicate definition of {} `{}`. \\\n+                                                     Defining a module and a struct with \\\n+                                                     the same name will be disallowed \\\n+                                                     soon.\",\n+                                               namespace_error_to_string(TypeError),\n+                                               name));\n+                        {\n+                            let r = child.span_for_namespace(TypeNS);\n+                            if let Some(sp) = r {\n+                                self.session.span_note(sp,\n+                                     &format!(\"first definition of {} `{}` here\",\n+                                          namespace_error_to_string(TypeError),\n+                                          name));\n+                            }\n+                        }\n+                    }\n+                }\n                 let name_bindings = self.add_child(name, parent, ForbidDuplicateModules, sp);\n \n                 let parent_link = self.get_parent_link(parent, name);\n@@ -495,6 +518,28 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n                 let (forbid, ctor_id) = if struct_def.is_struct() {\n                     (ForbidDuplicateTypesAndModules, None)\n                 } else {\n+                    let child = parent.children.borrow().get(&name).cloned();\n+                    if let Some(child) = child {\n+                        // check if theres a DefMod\n+                        if let Some(DefMod(_)) = child.def_for_namespace(TypeNS) {\n+                            self.session.span_warn(sp, &format!(\n+                                                        \"duplicate definition of {} `{}`. \\\n+                                                         Defining a module and a struct with \\\n+                                                         the same name will be disallowed \\\n+                                                         soon.\",\n+                                                   namespace_error_to_string(TypeError),\n+                                                   name));\n+                            {\n+                                let r = child.span_for_namespace(TypeNS);\n+                                if let Some(sp) = r {\n+                                    self.session.span_note(sp,\n+                                         &format!(\"first definition of {} `{}` here\",\n+                                              namespace_error_to_string(TypeError),\n+                                              name));\n+                                }\n+                            }\n+                        }\n+                    }\n                     (ForbidDuplicateTypesAndValues, Some(struct_def.id()))\n                 };\n "}, {"sha": "bb1bcd4e8717d6c2e921fa3df89a6df7c7b2ab64", "filename": "src/test/compile-fail/issue-21546.rs", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs?ref=f0af1eb110b3dd12754b02bc3dcb7127ea2dce7f", "patch": "@@ -0,0 +1,65 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Also works as a test for #14564\n+\n+#[allow(non_snake_case)]\n+mod Foo { }\n+//~^ NOTE first definition of type or module `Foo`\n+\n+#[allow(dead_code)]\n+struct Foo;\n+//~^ WARNING duplicate definition of type or module `Foo`\n+\n+\n+#[allow(non_snake_case)]\n+mod Bar { }\n+//~^ NOTE first definition of type or module `Bar`\n+\n+#[allow(dead_code)]\n+struct Bar(i32);\n+//~^ WARNING duplicate definition of type or module `Bar`\n+\n+\n+#[allow(dead_code)]\n+struct Baz(i32);\n+//~^ NOTE first definition of type or module\n+\n+#[allow(non_snake_case)]\n+mod Baz { }\n+//~^ WARNING duplicate definition of type or module `Baz`\n+\n+\n+#[allow(dead_code)]\n+struct Qux { x: bool }\n+//~^ NOTE first definition of type or module\n+\n+#[allow(non_snake_case)]\n+mod Qux { }\n+//~^ WARNING duplicate definition of type or module `Qux`\n+\n+\n+#[allow(dead_code)]\n+struct Quux;\n+//~^ NOTE first definition of type or module\n+\n+#[allow(non_snake_case)]\n+mod Quux { }\n+//~^ WARNING duplicate definition of type or module `Quux`\n+\n+\n+#[allow(dead_code)]\n+enum Corge { A, B }\n+\n+#[allow(non_snake_case)]\n+mod Corge { }\n+//~^ ERROR duplicate definition of type or module `Corge`\n+\n+fn main() { }"}, {"sha": "a661437a44ccff63f5f2f7fee243b6ff80b11735", "filename": "src/test/run-pass/issue-14564.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5692e16270ad844e89aa56859d5f8311159e2eea/src%2Ftest%2Frun-pass%2Fissue-14564.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5692e16270ad844e89aa56859d5f8311159e2eea/src%2Ftest%2Frun-pass%2Fissue-14564.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14564.rs?ref=5692e16270ad844e89aa56859d5f8311159e2eea", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-mod Foo { }\n-struct Foo;\n-impl Foo { }\n-\n-fn main() { }"}]}