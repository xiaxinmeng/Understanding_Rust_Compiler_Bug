{"sha": "886456deab17dd8cb49c4ade7dfcb0cc036b024b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NjQ1NmRlYWIxN2RkOGNiNDljNGFkZTdkZmNiMGNjMDM2YjAyNGI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-04T13:08:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-04T13:08:59Z"}, "message": "Rollup merge of #59470 - czipperz:document-fs-file-close, r=dtolnay\n\nDocument std::fs::File close behavior ignoring errors\n\nResolves #52685", "tree": {"sha": "5d7bfb5e6ce516bc6be12ba7e472fff38592ed91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d7bfb5e6ce516bc6be12ba7e472fff38592ed91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/886456deab17dd8cb49c4ade7dfcb0cc036b024b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcpgHrCRBK7hj4Ov3rIwAAdHIIAH6mfnliyXMKxL8sB3VFp7S1\nUGVjsBgQZK3ppiLCBzvAXYBFqusx9eQqK6oKsbbH8YmLR/XPTQmSL5z4OYNQ3qq+\nDI8rO/x3h05OtMYNiKFU61TOGlkafpinVSpfTdgdKImjCZFvdJmsgcqSiD+z1Vq6\ndaNnHYIl/7y53HvhVthXNAMHIDydPhe84GTByRnRrR06uTeJj2yJB9gYXZfN4PUp\n0s0bU2Byq2ViQv3AXTquV88ZdKkXgIlHx/MEbNyx2uvfzL1FDDqhr3JKqyKZoIKB\nHlkLMii0XLFC7miSCSsW1LgqDPwRIP6X94fzW9oOknnvMMdG9g4StMWeSjilGS4=\n=fer+\n-----END PGP SIGNATURE-----\n", "payload": "tree 5d7bfb5e6ce516bc6be12ba7e472fff38592ed91\nparent e43f99ce576152d4b2f7315d491c4210211228d6\nparent a969d409874f91e197a1cd336a368f02d8a3ce47\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554383339 +0200\ncommitter GitHub <noreply@github.com> 1554383339 +0200\n\nRollup merge of #59470 - czipperz:document-fs-file-close, r=dtolnay\n\nDocument std::fs::File close behavior ignoring errors\n\nResolves #52685\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/886456deab17dd8cb49c4ade7dfcb0cc036b024b", "html_url": "https://github.com/rust-lang/rust/commit/886456deab17dd8cb49c4ade7dfcb0cc036b024b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/886456deab17dd8cb49c4ade7dfcb0cc036b024b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e43f99ce576152d4b2f7315d491c4210211228d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e43f99ce576152d4b2f7315d491c4210211228d6", "html_url": "https://github.com/rust-lang/rust/commit/e43f99ce576152d4b2f7315d491c4210211228d6"}, {"sha": "a969d409874f91e197a1cd336a368f02d8a3ce47", "url": "https://api.github.com/repos/rust-lang/rust/commits/a969d409874f91e197a1cd336a368f02d8a3ce47", "html_url": "https://github.com/rust-lang/rust/commit/a969d409874f91e197a1cd336a368f02d8a3ce47"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "90369f9771feafca9911e84dd7e452da22e70dc8", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/886456deab17dd8cb49c4ade7dfcb0cc036b024b/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/886456deab17dd8cb49c4ade7dfcb0cc036b024b/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=886456deab17dd8cb49c4ade7dfcb0cc036b024b", "patch": "@@ -21,7 +21,9 @@ use crate::time::SystemTime;\n /// it was opened with. Files also implement [`Seek`] to alter the logical cursor\n /// that the file contains internally.\n ///\n-/// Files are automatically closed when they go out of scope.\n+/// Files are automatically closed when they go out of scope.  Errors detected\n+/// on closing are ignored by the implementation of `Drop`.  Use the method\n+/// [`sync_all`] if these errors must be manually handled.\n ///\n /// # Examples\n ///\n@@ -84,6 +86,7 @@ use crate::time::SystemTime;\n /// [`Read`]: ../io/trait.Read.html\n /// [`Write`]: ../io/trait.Write.html\n /// [`BufReader<R>`]: ../io/struct.BufReader.html\n+/// [`sync_all`]: struct.File.html#method.sync_all\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct File {\n     inner: fs_imp::File,\n@@ -391,9 +394,13 @@ impl File {\n \n     /// Attempts to sync all OS-internal metadata to disk.\n     ///\n-    /// This function will attempt to ensure that all in-core data reaches the\n+    /// This function will attempt to ensure that all in-memory data reaches the\n     /// filesystem before returning.\n     ///\n+    /// This can be used to handle errors that would otherwise only be caught\n+    /// when the `File` is closed.  Dropping a file will ignore errors in\n+    /// synchronizing this in-memory data.\n+    ///\n     /// # Examples\n     ///\n     /// ```no_run"}]}