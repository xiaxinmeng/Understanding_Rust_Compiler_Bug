{"sha": "0265a3e93bf1b89d97cae113ed214954d5c35e22", "node_id": "C_kwDOAAsO6NoAKDAyNjVhM2U5M2JmMWI4OWQ5N2NhZTExM2VkMjE0OTU0ZDVjMzVlMjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-10T12:09:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-10T12:09:21Z"}, "message": "Auto merge of #96711 - emilio:inline-slice-clone, r=nikic\n\nslice: #[inline] a couple iterator methods.\n\nThe one I care about and actually saw in the wild not getting inlined is\nclone(). We ended up doing a whole function call for something that just\ncopies two pointers.\n\nI ended up marking as_slice / as_ref as well because make_slice is\ninline(always) itself, and is also the kind of think that can kill\nperformance in hot loops if you expect it to get inlined. But happy to\nundo those.", "tree": {"sha": "d0d9a4d7dd010de2f14cf0dd38e95c917324bf40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0d9a4d7dd010de2f14cf0dd38e95c917324bf40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0265a3e93bf1b89d97cae113ed214954d5c35e22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0265a3e93bf1b89d97cae113ed214954d5c35e22", "html_url": "https://github.com/rust-lang/rust/commit/0265a3e93bf1b89d97cae113ed214954d5c35e22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0265a3e93bf1b89d97cae113ed214954d5c35e22/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "691aeaad6c9ee3483f2851695379b348b8a92a43", "url": "https://api.github.com/repos/rust-lang/rust/commits/691aeaad6c9ee3483f2851695379b348b8a92a43", "html_url": "https://github.com/rust-lang/rust/commit/691aeaad6c9ee3483f2851695379b348b8a92a43"}, {"sha": "93e587b81791bdd943117b19ade708c9f7193325", "url": "https://api.github.com/repos/rust-lang/rust/commits/93e587b81791bdd943117b19ade708c9f7193325", "html_url": "https://github.com/rust-lang/rust/commit/93e587b81791bdd943117b19ade708c9f7193325"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "8a8962828e9801d0209082f466301217446530e0", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0265a3e93bf1b89d97cae113ed214954d5c35e22/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0265a3e93bf1b89d97cae113ed214954d5c35e22/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=0265a3e93bf1b89d97cae113ed214954d5c35e22", "patch": "@@ -124,6 +124,7 @@ impl<'a, T> Iter<'a, T> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"iter_to_slice\", since = \"1.4.0\")]\n+    #[inline]\n     pub fn as_slice(&self) -> &'a [T] {\n         self.make_slice()\n     }\n@@ -143,13 +144,15 @@ iterator! {struct Iter -> *const T, &'a T, const, {/* no mut */}, {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> Clone for Iter<'_, T> {\n+    #[inline]\n     fn clone(&self) -> Self {\n         Iter { ptr: self.ptr, end: self.end, _marker: self._marker }\n     }\n }\n \n #[stable(feature = \"slice_iter_as_ref\", since = \"1.13.0\")]\n impl<T> AsRef<[T]> for Iter<'_, T> {\n+    #[inline]\n     fn as_ref(&self) -> &[T] {\n         self.as_slice()\n     }\n@@ -297,6 +300,7 @@ impl<'a, T> IterMut<'a, T> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"slice_iter_mut_as_slice\", since = \"1.53.0\")]\n+    #[inline]\n     pub fn as_slice(&self) -> &[T] {\n         self.make_slice()\n     }\n@@ -345,6 +349,7 @@ impl<'a, T> IterMut<'a, T> {\n \n #[stable(feature = \"slice_iter_mut_as_slice\", since = \"1.53.0\")]\n impl<T> AsRef<[T]> for IterMut<'_, T> {\n+    #[inline]\n     fn as_ref(&self) -> &[T] {\n         self.as_slice()\n     }"}]}