{"sha": "f6247ffa5afb29fd86d54db8062ff031daa10555", "node_id": "C_kwDOAAsO6NoAKGY2MjQ3ZmZhNWFmYjI5ZmQ4NmQ1NGRiODA2MmZmMDMxZGFhMTA1NTU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-09T13:38:07Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-09T13:38:07Z"}, "message": "clarify how write_bytes can lead to UB due to invalid values", "tree": {"sha": "2076a9db9182201eb1fcf7d97c8eb55c4077f6a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2076a9db9182201eb1fcf7d97c8eb55c4077f6a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6247ffa5afb29fd86d54db8062ff031daa10555", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6247ffa5afb29fd86d54db8062ff031daa10555", "html_url": "https://github.com/rust-lang/rust/commit/f6247ffa5afb29fd86d54db8062ff031daa10555", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6247ffa5afb29fd86d54db8062ff031daa10555/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4693bc946729393c087fb120af566395915d19d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4693bc946729393c087fb120af566395915d19d", "html_url": "https://github.com/rust-lang/rust/commit/c4693bc946729393c087fb120af566395915d19d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4c8619f313540d5148fae9a604c9cc243a9653ae", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6247ffa5afb29fd86d54db8062ff031daa10555/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6247ffa5afb29fd86d54db8062ff031daa10555/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=f6247ffa5afb29fd86d54db8062ff031daa10555", "patch": "@@ -2550,10 +2550,10 @@ pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n ///\n /// * `dst` must be properly aligned.\n ///\n-/// Additionally, the caller must ensure that writing `count *\n-/// size_of::<T>()` bytes to the given region of memory results in a valid\n-/// value of `T`. Using a region of memory typed as a `T` that contains an\n-/// invalid value of `T` is undefined behavior.\n+/// Additionally, note that changing `*dst` in this way can lead to undefined behavior later if the\n+/// written bytes are not a valid representation of some `T`. For instance, if `dst: *mut bool`, a\n+/// `dst.write_bytes(0xFFu8, 1)` followed by `dst.read()` is undefined behavior since the `read`\n+/// tries to construct a `bool` value from `0xFF` which does not represent any `bool`.\n ///\n /// Note that even if the effectively copied size (`count * size_of::<T>()`) is\n /// `0`, the pointer must be non-null and properly aligned."}]}