{"sha": "60cf06a03fa06bc1c5e2981d4ad7f5496b06c62f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwY2YwNmEwM2ZhMDZiYzFjNWUyOTgxZDRhZDdmNTQ5NmIwNmM2MmY=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-11T09:20:18Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-11T09:20:18Z"}, "message": "Use existing tcx instead", "tree": {"sha": "8726eb845520edb4e72fe6fc9d291d90b7eecb6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8726eb845520edb4e72fe6fc9d291d90b7eecb6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60cf06a03fa06bc1c5e2981d4ad7f5496b06c62f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60cf06a03fa06bc1c5e2981d4ad7f5496b06c62f", "html_url": "https://github.com/rust-lang/rust/commit/60cf06a03fa06bc1c5e2981d4ad7f5496b06c62f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60cf06a03fa06bc1c5e2981d4ad7f5496b06c62f/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67ea4546472edace0ae1d8fc97ae85bf5953e8a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/67ea4546472edace0ae1d8fc97ae85bf5953e8a5", "html_url": "https://github.com/rust-lang/rust/commit/67ea4546472edace0ae1d8fc97ae85bf5953e8a5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8c1645cde738e3ba38c5119ba17469deab3274c8", "filename": "src/shims/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60cf06a03fa06bc1c5e2981d4ad7f5496b06c62f/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60cf06a03fa06bc1c5e2981d4ad7f5496b06c62f/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=60cf06a03fa06bc1c5e2981d4ad7f5496b06c62f", "patch": "@@ -127,7 +127,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let tcx = &{ this.tcx.tcx };\n \n         let buf = this.force_ptr(this.read_scalar(buf_op)?.not_undef()?)?;\n-        let size = this.read_scalar(size_op)?.to_usize(&*this.tcx)?;\n+        let size = this.read_scalar(size_op)?.to_usize(&*tcx)?;\n         // If we cannot get the current directory, we return null\n         match env::current_dir() {\n             Ok(cwd) => {\n@@ -152,7 +152,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n             Err(e) => this.consume_io_error(e)?,\n         }\n-        Ok(Scalar::ptr_null(&*this.tcx))\n+        Ok(Scalar::ptr_null(&*tcx))\n     }\n \n     fn chdir(&mut self, path_op: OpTy<'tcx, Tag>) -> InterpResult<'tcx, i32> {"}]}