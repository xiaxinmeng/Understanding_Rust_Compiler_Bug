{"sha": "3c738b22869c50120eb8b7806311110ebf8fa870", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNzM4YjIyODY5YzUwMTIwZWI4Yjc4MDYzMTExMTBlYmY4ZmE4NzA=", "commit": {"author": {"name": "Marcin Serwin", "email": "toxyxer@gmail.com", "date": "2020-03-20T10:42:39Z"}, "committer": {"name": "Marcin Serwin", "email": "toxyxer@gmail.com", "date": "2020-04-09T06:08:36Z"}, "message": "Add float cmp tests for arrays", "tree": {"sha": "fa124212833c5a0102ee1c0b00943b2b90066887", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa124212833c5a0102ee1c0b00943b2b90066887"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c738b22869c50120eb8b7806311110ebf8fa870", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c738b22869c50120eb8b7806311110ebf8fa870", "html_url": "https://github.com/rust-lang/rust/commit/3c738b22869c50120eb8b7806311110ebf8fa870", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c738b22869c50120eb8b7806311110ebf8fa870/comments", "author": {"login": "marcin-serwin", "id": 12128106, "node_id": "MDQ6VXNlcjEyMTI4MTA2", "avatar_url": "https://avatars.githubusercontent.com/u/12128106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcin-serwin", "html_url": "https://github.com/marcin-serwin", "followers_url": "https://api.github.com/users/marcin-serwin/followers", "following_url": "https://api.github.com/users/marcin-serwin/following{/other_user}", "gists_url": "https://api.github.com/users/marcin-serwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcin-serwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcin-serwin/subscriptions", "organizations_url": "https://api.github.com/users/marcin-serwin/orgs", "repos_url": "https://api.github.com/users/marcin-serwin/repos", "events_url": "https://api.github.com/users/marcin-serwin/events{/privacy}", "received_events_url": "https://api.github.com/users/marcin-serwin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcin-serwin", "id": 12128106, "node_id": "MDQ6VXNlcjEyMTI4MTA2", "avatar_url": "https://avatars.githubusercontent.com/u/12128106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcin-serwin", "html_url": "https://github.com/marcin-serwin", "followers_url": "https://api.github.com/users/marcin-serwin/followers", "following_url": "https://api.github.com/users/marcin-serwin/following{/other_user}", "gists_url": "https://api.github.com/users/marcin-serwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcin-serwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcin-serwin/subscriptions", "organizations_url": "https://api.github.com/users/marcin-serwin/orgs", "repos_url": "https://api.github.com/users/marcin-serwin/repos", "events_url": "https://api.github.com/users/marcin-serwin/events{/privacy}", "received_events_url": "https://api.github.com/users/marcin-serwin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3167c63f84fcf34e81eb78c44c8f70ada07080b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3167c63f84fcf34e81eb78c44c8f70ada07080b", "html_url": "https://github.com/rust-lang/rust/commit/d3167c63f84fcf34e81eb78c44c8f70ada07080b"}], "stats": {"total": 78, "additions": 51, "deletions": 27}, "files": [{"sha": "9fa0e5f5c079b5e8bf2b8a0e3f2929f87b45d809", "filename": "tests/ui/float_cmp.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3c738b22869c50120eb8b7806311110ebf8fa870/tests%2Fui%2Ffloat_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c738b22869c50120eb8b7806311110ebf8fa870/tests%2Fui%2Ffloat_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.rs?ref=3c738b22869c50120eb8b7806311110ebf8fa870", "patch": "@@ -1,5 +1,11 @@\n #![warn(clippy::float_cmp)]\n-#![allow(unused, clippy::no_effect, clippy::unnecessary_operation, clippy::cast_lossless)]\n+#![allow(\n+    unused,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::cast_lossless,\n+    clippy::many_single_char_names\n+)]\n \n use std::ops::Add;\n \n@@ -77,12 +83,20 @@ fn main() {\n \n     assert_eq!(a, b); // no errors\n \n+    const ZERO_ARRAY: [f32; 2] = [0.0, 0.0];\n+    const NON_ZERO_ARRAY: [f32; 2] = [0.0, 0.1];\n+\n+    let i = 0;\n+    let j = 1;\n+\n+    ZERO_ARRAY[i] == NON_ZERO_ARRAY[j]; // ok, because lhs is zero regardless of i\n+    NON_ZERO_ARRAY[i] == NON_ZERO_ARRAY[j];\n+\n     let a1: [f32; 1] = [0.0];\n     let a2: [f32; 1] = [1.1];\n \n-    assert_eq!(a1[0], a2[0]);\n-\n-    assert_eq!(&a1[0], &a2[0]);\n+    a1 == a2;\n+    a1[0] == a2[0];\n \n     // no errors - comparing signums is ok\n     let x32 = 3.21f32;"}, {"sha": "b0d8dd7c3f31da9028b012a51c89bc81ab89c9ee", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 33, "deletions": 23, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/3c738b22869c50120eb8b7806311110ebf8fa870/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c738b22869c50120eb8b7806311110ebf8fa870/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=3c738b22869c50120eb8b7806311110ebf8fa870", "patch": "@@ -1,65 +1,75 @@\n error: strict comparison of `f32` or `f64`\n-  --> $DIR/float_cmp.rs:59:5\n+  --> $DIR/float_cmp.rs:65:5\n    |\n LL |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE as f64 - 2.0).abs() > error`\n    |\n    = note: `-D clippy::float-cmp` implied by `-D warnings`\n note: `f32::EPSILON` and `f64::EPSILON` are available.\n-  --> $DIR/float_cmp.rs:59:5\n+  --> $DIR/float_cmp.rs:65:5\n    |\n LL |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: strict comparison of `f32` or `f64`\n-  --> $DIR/float_cmp.rs:64:5\n+  --> $DIR/float_cmp.rs:70:5\n    |\n LL |     x == 1.0;\n    |     ^^^^^^^^ help: consider comparing them within some error: `(x - 1.0).abs() < error`\n    |\n note: `f32::EPSILON` and `f64::EPSILON` are available.\n-  --> $DIR/float_cmp.rs:64:5\n+  --> $DIR/float_cmp.rs:70:5\n    |\n LL |     x == 1.0;\n    |     ^^^^^^^^\n \n error: strict comparison of `f32` or `f64`\n-  --> $DIR/float_cmp.rs:67:5\n+  --> $DIR/float_cmp.rs:73:5\n    |\n LL |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(twice(x) - twice(ONE as f64)).abs() > error`\n    |\n note: `f32::EPSILON` and `f64::EPSILON` are available.\n-  --> $DIR/float_cmp.rs:67:5\n+  --> $DIR/float_cmp.rs:73:5\n    |\n LL |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: strict comparison of `f32` or `f64`\n-  --> $DIR/float_cmp.rs:83:5\n+  --> $DIR/float_cmp.rs:93:5\n    |\n-LL |     assert_eq!(a1[0], a2[0]);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     NON_ZERO_ARRAY[i] == NON_ZERO_ARRAY[j];\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(NON_ZERO_ARRAY[i] - NON_ZERO_ARRAY[j]).abs() < error`\n    |\n-note: `std::f32::EPSILON` and `std::f64::EPSILON` are available.\n-  --> $DIR/float_cmp.rs:83:5\n+note: `f32::EPSILON` and `f64::EPSILON` are available.\n+  --> $DIR/float_cmp.rs:93:5\n+   |\n+LL |     NON_ZERO_ARRAY[i] == NON_ZERO_ARRAY[j];\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: strict comparison of `f32` or `f64`\n+  --> $DIR/float_cmp.rs:98:5\n+   |\n+LL |     a1 == a2;\n+   |     ^^^^^^^^\n+   |\n+note: `f32::EPSILON` and `f64::EPSILON` are available.\n+  --> $DIR/float_cmp.rs:98:5\n    |\n-LL |     assert_eq!(a1[0], a2[0]);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+LL |     a1 == a2;\n+   |     ^^^^^^^^\n \n error: strict comparison of `f32` or `f64`\n-  --> $DIR/float_cmp.rs:85:5\n+  --> $DIR/float_cmp.rs:99:5\n    |\n-LL |     assert_eq!(&a1[0], &a2[0]);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     a1[0] == a2[0];\n+   |     ^^^^^^^^^^^^^^ help: consider comparing them within some error: `(a1[0] - a2[0]).abs() < error`\n    |\n-note: `std::f32::EPSILON` and `std::f64::EPSILON` are available.\n-  --> $DIR/float_cmp.rs:85:5\n+note: `f32::EPSILON` and `f64::EPSILON` are available.\n+  --> $DIR/float_cmp.rs:99:5\n    |\n-LL |     assert_eq!(&a1[0], &a2[0]);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+LL |     a1[0] == a2[0];\n+   |     ^^^^^^^^^^^^^^\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n "}]}