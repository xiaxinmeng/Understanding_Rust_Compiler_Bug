{"sha": "d0d7c5e92271c40b74e796bcf71758348a748553", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZDdjNWU5MjI3MWM0MGI3NGU3OTZiY2Y3MTc1ODM0OGE3NDg1NTM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-23T06:32:58Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-29T18:56:19Z"}, "message": "cargo fmt", "tree": {"sha": "c321f6506c278f7972d39bb5f96217647d593a7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c321f6506c278f7972d39bb5f96217647d593a7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0d7c5e92271c40b74e796bcf71758348a748553", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlxQodQACgkQtvoGpuDi\nZltSpw//RXljyIERzADQDL9VVuXAkbFWwK05+1Ro+9zWrzOpJluP/qyobDxPi37Z\nZhCisEuFFDDrEjmsc/gYTVe1tvw76yiwvEoVretpmYPv0cocFQJkIrPnLo0137aE\nIZ6919gtRMzAH4jqQGhDHz5/Oct/FpufWZ1zN67M3KWjA/a08kbFArlb0+kVY+G2\np7XrSLf5KBWXUW0JN9nbqmnt6/ca+4DXVMS2Htt4STa4xhUP7M2hIC62AE46FLVk\nVW1+7DTeVU+isUFrXmiVq1iu3/Wv4etdpZ9O5Bx2RaA2unp4LUyzkqomrnerf1kl\nHVjT0M0nn89VzVQItrh9u9wVlmP7RUXZlwwNgXM5dVFWm4v5HrkKytGc8xAyIkWW\nMuJF4t9F9TbtK1lt4003xFGMehHINcQ+SLj/kLBsfkt0PScASXUOUSseKeUqSjNs\nQsn1zI7sW+DvBXoNaYPjI9w/xuvmzgx3gCSdpeF1m0SH3tFuu2OYf854zFmMI+UE\nRdG9laPa7YPsajI4vV28KQQ63cWz4pUi/A888daUdSP7K6OKTi855gI7xn2f/BAv\nkBpvM/ZEe2rf7u2Z/NWr1fYcEFWHpuF8ZAsfhw2NSD7OldIP/VCE4KUsfTbJtL5+\nHXUSJDI5/FL68yGddrfawvDyqoGeiAnsl6y+0pHVlKVpovAR4PU=\n=G1qf\n-----END PGP SIGNATURE-----", "payload": "tree c321f6506c278f7972d39bb5f96217647d593a7a\nparent aed001b8d4b318dab34882dafa27511e21bfa58a\nauthor Philipp Hansch <dev@phansch.net> 1548225178 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1548788179 +0100\n\ncargo fmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0d7c5e92271c40b74e796bcf71758348a748553", "html_url": "https://github.com/rust-lang/rust/commit/d0d7c5e92271c40b74e796bcf71758348a748553", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0d7c5e92271c40b74e796bcf71758348a748553/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aed001b8d4b318dab34882dafa27511e21bfa58a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aed001b8d4b318dab34882dafa27511e21bfa58a", "html_url": "https://github.com/rust-lang/rust/commit/aed001b8d4b318dab34882dafa27511e21bfa58a"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "9228c586bbfd57657cd91efeab890ea88d161f91", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d0d7c5e92271c40b74e796bcf71758348a748553/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d7c5e92271c40b74e796bcf71758348a748553/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=d0d7c5e92271c40b74e796bcf71758348a748553", "patch": "@@ -1,8 +1,7 @@\n+use crate::utils::{is_entrypoint_fn, span_lint};\n use rustc::hir;\n use rustc::hir::intravisit::FnKind;\n use rustc::hir::{Body, Constness, FnDecl};\n-// use rustc::mir::*;\n-use crate::utils::{is_entrypoint_fn, span_lint};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n use rustc_mir::transform::qualify_min_const_fn::is_min_const_fn;"}, {"sha": "ee3356fdc82346fddd8d35be135a2683d976be8e", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0d7c5e92271c40b74e796bcf71758348a748553/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d7c5e92271c40b74e796bcf71758348a748553/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=d0d7c5e92271c40b74e796bcf71758348a748553", "patch": "@@ -3,7 +3,7 @@ use if_chain::if_chain;\n use matches::matches;\n use rustc::hir;\n use rustc::hir::def::Def;\n-use rustc::hir::def_id::{DefId, LOCAL_CRATE, CRATE_DEF_INDEX};\n+use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc::hir::Node;\n use rustc::hir::*;\n@@ -353,7 +353,7 @@ pub fn method_chain_args<'a>(expr: &'a Expr, methods: &[&str]) -> Option<Vec<&'a\n /// Returns true if the provided `def_id` is an entrypoint to a program\n pub fn is_entrypoint_fn(cx: &LateContext<'_, '_>, def_id: DefId) -> bool {\n     if let Some((entry_fn_def_id, _)) = cx.tcx.entry_fn(LOCAL_CRATE) {\n-        return def_id == entry_fn_def_id\n+        return def_id == entry_fn_def_id;\n     }\n     false\n }"}]}