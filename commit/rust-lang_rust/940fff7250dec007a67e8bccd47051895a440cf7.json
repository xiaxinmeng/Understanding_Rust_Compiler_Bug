{"sha": "940fff7250dec007a67e8bccd47051895a440cf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MGZmZjcyNTBkZWMwMDdhNjdlOGJjY2Q0NzA1MTg5NWE0NDBjZjc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-14T22:17:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-14T22:17:50Z"}, "message": "Rollup merge of #69128 - Centril:fix-69103, r=davidtwco\n\nFix extra subslice lowering\n\nWe are currently ICEing on e.g.\n```rust\nfn main() {\n    let [.., b @ ..] = [1, 2];\n    b;\n}\n```\nThis happens because `b @ ..` registers a binding such that `b;` is OK, but then we forget to lower that binding in `rustc_ast_lowering`.\n\nFixes #69103.\n\nr? @davidtwco", "tree": {"sha": "37eb0f885a005e75ad1aedd1d6a60b653ff12330", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37eb0f885a005e75ad1aedd1d6a60b653ff12330"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/940fff7250dec007a67e8bccd47051895a440cf7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeRxyPCRBK7hj4Ov3rIwAAdHIIAJt0e8lkzvzKmSv4+wMuvs0+\negtYdGiuERxu6XjicUf4w9Rzo57ZiDFD2qUBXHl2rtHE6oKKoJyhhmu5U+LaXLA6\nP6OI9FG4n1jRf9P7b68MEUOTrysBxjj+AdkA4iqDHlu4KX3tQLLfmNRELgNA+Up9\nnCqN63JU6k03OPjB5dItuI2GytB1edWsOIshY1gGJRN2FZw+NszD+uLif/sPGL1N\nakiR5dSItQq4Ci7XsW1RVftm5tIs6hV//K3sZwlIvjCqyRdrlL5cwsSq/sSzGTe1\n64XuypkkJRfUGZgus+BkrIOeMM3qlThCAR6fU/gaA+8ZTLX73OlEFONxMS0n990=\n=HQxg\n-----END PGP SIGNATURE-----\n", "payload": "tree 37eb0f885a005e75ad1aedd1d6a60b653ff12330\nparent e0ea1e759f76b96a8a609b9690ecc3ddadbbcbb5\nparent f5bd9646be31d865a083193c21c7448d546ce07c\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1581718670 +0900\ncommitter GitHub <noreply@github.com> 1581718670 +0900\n\nRollup merge of #69128 - Centril:fix-69103, r=davidtwco\n\nFix extra subslice lowering\n\nWe are currently ICEing on e.g.\n```rust\nfn main() {\n    let [.., b @ ..] = [1, 2];\n    b;\n}\n```\nThis happens because `b @ ..` registers a binding such that `b;` is OK, but then we forget to lower that binding in `rustc_ast_lowering`.\n\nFixes #69103.\n\nr? @davidtwco\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/940fff7250dec007a67e8bccd47051895a440cf7", "html_url": "https://github.com/rust-lang/rust/commit/940fff7250dec007a67e8bccd47051895a440cf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/940fff7250dec007a67e8bccd47051895a440cf7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0ea1e759f76b96a8a609b9690ecc3ddadbbcbb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0ea1e759f76b96a8a609b9690ecc3ddadbbcbb5", "html_url": "https://github.com/rust-lang/rust/commit/e0ea1e759f76b96a8a609b9690ecc3ddadbbcbb5"}, {"sha": "f5bd9646be31d865a083193c21c7448d546ce07c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5bd9646be31d865a083193c21c7448d546ce07c", "html_url": "https://github.com/rust-lang/rust/commit/f5bd9646be31d865a083193c21c7448d546ce07c"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "b42b12c4dd8513a1e610f314a1d5b3eea13b58a4", "filename": "src/librustc_ast_lowering/pat.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/940fff7250dec007a67e8bccd47051895a440cf7/src%2Flibrustc_ast_lowering%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940fff7250dec007a67e8bccd47051895a440cf7/src%2Flibrustc_ast_lowering%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpat.rs?ref=940fff7250dec007a67e8bccd47051895a440cf7", "patch": "@@ -128,6 +128,13 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         let mut slice = None;\n         let mut prev_rest_span = None;\n \n+        // Lowers `$bm $ident @ ..` to `$bm $ident @ _`.\n+        let lower_rest_sub = |this: &mut Self, pat, bm, ident, sub| {\n+            let lower_sub = |this: &mut Self| Some(this.pat_wild_with_node_id_of(sub));\n+            let node = this.lower_pat_ident(pat, bm, ident, lower_sub);\n+            this.pat_with_node_id_of(pat, node)\n+        };\n+\n         let mut iter = pats.iter();\n         // Lower all the patterns until the first occurrence of a sub-slice pattern.\n         for pat in iter.by_ref() {\n@@ -142,9 +149,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 // Record, lower it to `$binding_mode $ident @ _`, and stop here.\n                 PatKind::Ident(ref bm, ident, Some(ref sub)) if sub.is_rest() => {\n                     prev_rest_span = Some(sub.span);\n-                    let lower_sub = |this: &mut Self| Some(this.pat_wild_with_node_id_of(sub));\n-                    let node = self.lower_pat_ident(pat, bm, ident, lower_sub);\n-                    slice = Some(self.pat_with_node_id_of(pat, node));\n+                    slice = Some(lower_rest_sub(self, pat, bm, ident, sub));\n                     break;\n                 }\n                 // It was not a subslice pattern so lower it normally.\n@@ -157,9 +162,9 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             // There was a previous subslice pattern; make sure we don't allow more.\n             let rest_span = match pat.kind {\n                 PatKind::Rest => Some(pat.span),\n-                PatKind::Ident(.., Some(ref sub)) if sub.is_rest() => {\n-                    // The `HirValidator` is merciless; add a `_` pattern to avoid ICEs.\n-                    after.push(self.pat_wild_with_node_id_of(pat));\n+                PatKind::Ident(ref bm, ident, Some(ref sub)) if sub.is_rest() => {\n+                    // #69103: Lower into `binding @ _` as above to avoid ICEs.\n+                    after.push(lower_rest_sub(self, pat, bm, ident, sub));\n                     Some(sub.span)\n                 }\n                 _ => None,"}, {"sha": "061b0d675b31f2c98c0e1864de6edaf6c54ddb11", "filename": "src/test/ui/array-slice-vec/issue-69103-extra-binding-subslice.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/940fff7250dec007a67e8bccd47051895a440cf7/src%2Ftest%2Fui%2Farray-slice-vec%2Fissue-69103-extra-binding-subslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940fff7250dec007a67e8bccd47051895a440cf7/src%2Ftest%2Fui%2Farray-slice-vec%2Fissue-69103-extra-binding-subslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fissue-69103-extra-binding-subslice.rs?ref=940fff7250dec007a67e8bccd47051895a440cf7", "patch": "@@ -0,0 +1,18 @@\n+// We used to not lower the extra `b @ ..` into `b @ _` which meant that no type\n+// was registered for the binding `b` although it passed through resolve.\n+// This resulted in an ICE (#69103).\n+\n+fn main() {\n+    let [a @ .., b @ ..] = &mut [1, 2];\n+    //~^ ERROR `..` can only be used once per slice pattern\n+    b;\n+\n+    let [.., c @ ..] = [1, 2];\n+    //~^ ERROR `..` can only be used once per slice pattern\n+    c;\n+\n+    // This never ICEd, but let's make sure it won't regress either.\n+    let (.., d @ ..) = (1, 2);\n+    //~^ ERROR `..` patterns are not allowed here\n+    d;\n+}"}, {"sha": "9432e2f0c9d34fbf200fdbdd4815e01484d8e369", "filename": "src/test/ui/array-slice-vec/issue-69103-extra-binding-subslice.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/940fff7250dec007a67e8bccd47051895a440cf7/src%2Ftest%2Fui%2Farray-slice-vec%2Fissue-69103-extra-binding-subslice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/940fff7250dec007a67e8bccd47051895a440cf7/src%2Ftest%2Fui%2Farray-slice-vec%2Fissue-69103-extra-binding-subslice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fissue-69103-extra-binding-subslice.stderr?ref=940fff7250dec007a67e8bccd47051895a440cf7", "patch": "@@ -0,0 +1,26 @@\n+error: `..` can only be used once per slice pattern\n+  --> $DIR/issue-69103-extra-binding-subslice.rs:6:22\n+   |\n+LL |     let [a @ .., b @ ..] = &mut [1, 2];\n+   |              --      ^^ can only be used once per slice pattern\n+   |              |\n+   |              previously used here\n+\n+error: `..` can only be used once per slice pattern\n+  --> $DIR/issue-69103-extra-binding-subslice.rs:10:18\n+   |\n+LL |     let [.., c @ ..] = [1, 2];\n+   |          --      ^^ can only be used once per slice pattern\n+   |          |\n+   |          previously used here\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/issue-69103-extra-binding-subslice.rs:15:18\n+   |\n+LL |     let (.., d @ ..) = (1, 2);\n+   |                  ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: aborting due to 3 previous errors\n+"}]}