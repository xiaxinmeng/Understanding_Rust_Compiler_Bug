{"sha": "70239484001f91fcf847a0df6aff79d94991952a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMjM5NDg0MDAxZjkxZmNmODQ3YTBkZjZhZmY3OWQ5NDk5MTk1MmE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-02-11T20:52:59Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-03-23T00:36:35Z"}, "message": "rustc_codegen_llvm: don't generate \"lexical block\" scopes for -Cdebuginfo=1.", "tree": {"sha": "749d9d8d5d5d9371e359421ebe431d4558217377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/749d9d8d5d5d9371e359421ebe431d4558217377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70239484001f91fcf847a0df6aff79d94991952a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70239484001f91fcf847a0df6aff79d94991952a", "html_url": "https://github.com/rust-lang/rust/commit/70239484001f91fcf847a0df6aff79d94991952a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70239484001f91fcf847a0df6aff79d94991952a/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1e81ef234ff5c2e0e3a69cb4e8e5f5b0fe1fd83", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e81ef234ff5c2e0e3a69cb4e8e5f5b0fe1fd83", "html_url": "https://github.com/rust-lang/rust/commit/d1e81ef234ff5c2e0e3a69cb4e8e5f5b0fe1fd83"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "13a36c36a309ae5c8954c6dc65130a3d5fe1f4bd", "filename": "src/librustc_codegen_llvm/debuginfo/create_scope_map.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/70239484001f91fcf847a0df6aff79d94991952a/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70239484001f91fcf847a0df6aff79d94991952a/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs?ref=70239484001f91fcf847a0df6aff79d94991952a", "patch": "@@ -1,11 +1,13 @@\n use super::metadata::{file_metadata, UNKNOWN_COLUMN_NUMBER, UNKNOWN_LINE_NUMBER};\n use super::utils::DIB;\n use rustc_codegen_ssa::mir::debuginfo::{DebugScope, FunctionDebugContext};\n+use rustc_codegen_ssa::traits::*;\n \n use crate::common::CodegenCx;\n use crate::llvm;\n use crate::llvm::debuginfo::{DIScope, DISubprogram};\n use rustc::mir::{Body, SourceScope};\n+use rustc_session::config::DebugInfo;\n \n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::Idx;\n@@ -19,10 +21,17 @@ pub fn compute_mir_scopes(\n ) {\n     // Find all the scopes with variables defined in them.\n     let mut has_variables = BitSet::new_empty(mir.source_scopes.len());\n-    // FIXME(eddyb) take into account that arguments always have debuginfo,\n-    // irrespective of their name (assuming full debuginfo is enabled).\n-    for var_debug_info in &mir.var_debug_info {\n-        has_variables.insert(var_debug_info.source_info.scope);\n+\n+    // Only consider variables when they're going to be emitted.\n+    // FIXME(eddyb) don't even allocate `has_variables` otherwise.\n+    if cx.sess().opts.debuginfo == DebugInfo::Full {\n+        // FIXME(eddyb) take into account that arguments always have debuginfo,\n+        // irrespective of their name (assuming full debuginfo is enabled).\n+        // NOTE(eddyb) actually, on second thought, those are always in the\n+        // function scope, which always exists.\n+        for var_debug_info in &mir.var_debug_info {\n+            has_variables.insert(var_debug_info.source_info.scope);\n+        }\n     }\n \n     // Instantiate all scopes."}]}