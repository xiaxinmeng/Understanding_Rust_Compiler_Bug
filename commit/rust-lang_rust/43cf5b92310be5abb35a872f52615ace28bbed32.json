{"sha": "43cf5b92310be5abb35a872f52615ace28bbed32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzY2Y1YjkyMzEwYmU1YWJiMzVhODcyZjUyNjE1YWNlMjhiYmVkMzI=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2017-01-07T18:06:28Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-01-13T23:47:22Z"}, "message": "Avoid using load/stores on first class aggregates\n\nLLVM usually prefers using memcpys over direct loads/store of first\nclass aggregates. The check in type_is_immediate to mark certain small\nstructs was originally part of the code to handle such immediates in\nfunction arguments, and it had a counterpart in load_ty/store_ty to\nactually convert small aggregates to integers.\n\nBut since then, the ABI handling has been refactored and takes care of\nconverting small aggregates to integers. During that refactoring, the\ncode to handle small aggregates in load_ty/store_ty has been removed,\nand so we accidentally started using loads/stores on FCA values.\n\nSince type_is_immediate() is no longer responsible for ABI-related\nconversions, and using a memcpy even for small aggregates is usually\nbetter than performing a FCA load/store, we can remove that code part\nand only handle simple types as immediates there.\n\nThis integrates PR #38906 onto this branch.\n\nFixes #38906.", "tree": {"sha": "79aed854a0e072cb79455a5bf4ebe85daabd2283", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79aed854a0e072cb79455a5bf4ebe85daabd2283"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43cf5b92310be5abb35a872f52615ace28bbed32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43cf5b92310be5abb35a872f52615ace28bbed32", "html_url": "https://github.com/rust-lang/rust/commit/43cf5b92310be5abb35a872f52615ace28bbed32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43cf5b92310be5abb35a872f52615ace28bbed32/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3930463801cfcc4c98974d627e8bbe8c9880fa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3930463801cfcc4c98974d627e8bbe8c9880fa0", "html_url": "https://github.com/rust-lang/rust/commit/e3930463801cfcc4c98974d627e8bbe8c9880fa0"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "419267cb269c98e68159bf45ae8a2a81da995334", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43cf5b92310be5abb35a872f52615ace28bbed32/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43cf5b92310be5abb35a872f52615ace28bbed32/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=43cf5b92310be5abb35a872f52615ace28bbed32", "patch": "@@ -67,8 +67,7 @@ pub fn type_is_immediate<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, ty: Ty<'tcx>) -\n         Layout::UntaggedUnion { .. } |\n         Layout::RawNullablePointer { .. } |\n         Layout::StructWrappedNullablePointer { .. } => {\n-            let dl = &ccx.tcx().data_layout;\n-            !layout.is_unsized() && layout.size(dl) <= dl.pointer_size\n+            !layout.is_unsized() && layout.size(&ccx.tcx().data_layout).bytes() == 0\n         }\n     }\n }"}]}