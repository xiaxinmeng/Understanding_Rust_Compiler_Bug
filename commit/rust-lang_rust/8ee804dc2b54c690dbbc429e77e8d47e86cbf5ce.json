{"sha": "8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZTgwNGRjMmI1NGM2OTBkYmJjNDI5ZTc3ZThkNDdlODZjYmY1Y2U=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2021-01-05T01:13:27Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2021-01-06T13:34:20Z"}, "message": "Change related spec files to use the new enum", "tree": {"sha": "b8bb2bc1f9daa368fd2e18dd8e060aad6ca88d7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8bb2bc1f9daa368fd2e18dd8e060aad6ca88d7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "html_url": "https://github.com/rust-lang/rust/commit/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa4d8bc878f80ae22d350e998508861426749664", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4d8bc878f80ae22d350e998508861426749664", "html_url": "https://github.com/rust-lang/rust/commit/fa4d8bc878f80ae22d350e998508861426749664"}], "stats": {"total": 87, "additions": 50, "deletions": 37}, "files": [{"sha": "255740cb9c045e9293086afc6454dfc7ca875b92", "filename": "compiler/rustc_target/src/spec/armebv7r_none_eabi.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabi.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,5 +1,6 @@\n // Targets the Big endian Cortex-R4/R5 processor (ARMv7-R)\n \n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy, RelocModel};\n use crate::spec::{Target, TargetOptions};\n \n@@ -11,7 +12,7 @@ pub fn target() -> Target {\n         arch: \"arm\".to_string(),\n \n         options: TargetOptions {\n-            endian: \"big\".to_string(),\n+            endian: Endian::Big,\n             linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n             executables: true,\n             linker: Some(\"rust-lld\".to_owned()),"}, {"sha": "eb82e4d17b0ef1ea8cf81a2751715161c4408210", "filename": "compiler/rustc_target/src/spec/armebv7r_none_eabihf.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmebv7r_none_eabihf.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,5 +1,6 @@\n // Targets the Cortex-R4F/R5F processor (ARMv7-R)\n \n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy, RelocModel};\n use crate::spec::{Target, TargetOptions};\n \n@@ -11,7 +12,7 @@ pub fn target() -> Target {\n         arch: \"arm\".to_string(),\n \n         options: TargetOptions {\n-            endian: \"big\".to_string(),\n+            endian: Endian::Big,\n             linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n             executables: true,\n             linker: Some(\"rust-lld\".to_owned()),"}, {"sha": "53398539ac20f86019266c45276a8ebc3a1ef9e9", "filename": "compiler/rustc_target/src/spec/mips64_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -7,7 +8,7 @@ pub fn target() -> Target {\n         data_layout: \"E-m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128\".to_string(),\n         arch: \"mips64\".to_string(),\n         options: TargetOptions {\n-            endian: \"big\".to_string(),\n+            endian: Endian::Big,\n             // NOTE(mips64r2) matches C toolchain\n             cpu: \"mips64r2\".to_string(),\n             features: \"+mips64r2\".to_string(),"}, {"sha": "329fbd22721770d0b62560d7b4f6f0f5167f114d", "filename": "compiler/rustc_target/src/spec/mips64_unknown_linux_muslabi64.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_muslabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_muslabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_muslabi64.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -11,6 +12,6 @@ pub fn target() -> Target {\n         pointer_width: 64,\n         data_layout: \"E-m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128\".to_string(),\n         arch: \"mips64\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), mcount: \"_mcount\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "b41b28cbc87c2d8e896b2bed0c2384912a035869", "filename": "compiler/rustc_target/src/spec/mips_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_gnu.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -7,7 +8,7 @@ pub fn target() -> Target {\n         data_layout: \"E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64\".to_string(),\n         arch: \"mips\".to_string(),\n         options: TargetOptions {\n-            endian: \"big\".to_string(),\n+            endian: Endian::Big,\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+fpxx,+nooddspreg\".to_string(),\n             max_atomic_width: Some(32),"}, {"sha": "3713af43d73607415ade8f8f17d6621d9f90ce88", "filename": "compiler/rustc_target/src/spec/mips_unknown_linux_musl.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_musl.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -11,6 +12,6 @@ pub fn target() -> Target {\n         pointer_width: 32,\n         data_layout: \"E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64\".to_string(),\n         arch: \"mips\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), mcount: \"_mcount\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "042ec9140fac0a31baa85ef1171da235d99c9472", "filename": "compiler/rustc_target/src/spec/mips_unknown_linux_uclibc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_uclibc.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -7,7 +8,7 @@ pub fn target() -> Target {\n         data_layout: \"E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64\".to_string(),\n         arch: \"mips\".to_string(),\n         options: TargetOptions {\n-            endian: \"big\".to_string(),\n+            endian: Endian::Big,\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+soft-float\".to_string(),\n             max_atomic_width: Some(32),"}, {"sha": "a81c90fe0cdecb3578814a85a1d34c248c418417", "filename": "compiler/rustc_target/src/spec/mipsisa32r6_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -7,7 +8,7 @@ pub fn target() -> Target {\n         data_layout: \"E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64\".to_string(),\n         arch: \"mips\".to_string(),\n         options: TargetOptions {\n-            endian: \"big\".to_string(),\n+            endian: Endian::Big,\n             cpu: \"mips32r6\".to_string(),\n             features: \"+mips32r6\".to_string(),\n             max_atomic_width: Some(32),"}, {"sha": "3bf837fbb411eff6e11ba5ad036753b865b72184", "filename": "compiler/rustc_target/src/spec/mipsisa64r6_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -7,7 +8,7 @@ pub fn target() -> Target {\n         data_layout: \"E-m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128\".to_string(),\n         arch: \"mips64\".to_string(),\n         options: TargetOptions {\n-            endian: \"big\".to_string(),\n+            endian: Endian::Big,\n             // NOTE(mips64r6) matches C toolchain\n             cpu: \"mips64r6\".to_string(),\n             features: \"+mips64r6\".to_string(),"}, {"sha": "3dddeb1129cbe04cc24a2dbff8a3007a6a8b7a55", "filename": "compiler/rustc_target/src/spec/powerpc64_unknown_freebsd.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_freebsd.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -11,6 +12,6 @@ pub fn target() -> Target {\n         pointer_width: 64,\n         data_layout: \"E-m:e-i64:64-n32:64\".to_string(),\n         arch: \"powerpc64\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), mcount: \"_mcount\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "751022c124baad93b53c94df545aa32bb37822a5", "filename": "compiler/rustc_target/src/spec/powerpc64_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, RelroLevel, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -15,6 +16,6 @@ pub fn target() -> Target {\n         pointer_width: 64,\n         data_layout: \"E-m:e-i64:64-n32:64\".to_string(),\n         arch: \"powerpc64\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), mcount: \"_mcount\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "546dfbab6c70128b2dde0519a5f08a3332682664", "filename": "compiler/rustc_target/src/spec/powerpc64_unknown_linux_musl.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_musl.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -11,6 +12,6 @@ pub fn target() -> Target {\n         pointer_width: 64,\n         data_layout: \"E-m:e-i64:64-n32:64\".to_string(),\n         arch: \"powerpc64\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), mcount: \"_mcount\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "bb55872109c33573d58f8fbe005a4bd100a1d933", "filename": "compiler/rustc_target/src/spec/powerpc64_wrs_vxworks.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_wrs_vxworks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_wrs_vxworks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_wrs_vxworks.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -11,6 +12,6 @@ pub fn target() -> Target {\n         pointer_width: 64,\n         data_layout: \"E-m:e-i64:64-n32:64\".to_string(),\n         arch: \"powerpc64\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, ..base },\n     }\n }"}, {"sha": "70dd0b2aee6915ead9473e714fe465fb0b9d2fd6", "filename": "compiler/rustc_target/src/spec/powerpc_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnu.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -10,6 +11,6 @@ pub fn target() -> Target {\n         pointer_width: 32,\n         data_layout: \"E-m:e-p:32:32-i64:64-n32\".to_string(),\n         arch: \"powerpc\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), mcount: \"_mcount\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "66118b74955ec805afb0b853abf49e6fe2f884d3", "filename": "compiler/rustc_target/src/spec/powerpc_unknown_linux_gnuspe.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -10,6 +11,6 @@ pub fn target() -> Target {\n         pointer_width: 32,\n         data_layout: \"E-m:e-p:32:32-i64:64-n32\".to_string(),\n         arch: \"powerpc\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), mcount: \"_mcount\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "679a3a2f6aacbf44fd2a0755214773aa330ae446", "filename": "compiler/rustc_target/src/spec/powerpc_unknown_linux_musl.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_musl.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -10,6 +11,6 @@ pub fn target() -> Target {\n         pointer_width: 32,\n         data_layout: \"E-m:e-p:32:32-i64:64-n32\".to_string(),\n         arch: \"powerpc\".to_string(),\n-        options: TargetOptions { endian: \"big\".to_string(), mcount: \"_mcount\".to_string(), ..base },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"_mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "1245098329aee407b05e843d291639fbeb41d993", "filename": "compiler/rustc_target/src/spec/powerpc_unknown_netbsd.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_netbsd.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -10,10 +11,6 @@ pub fn target() -> Target {\n         pointer_width: 32,\n         data_layout: \"E-m:e-p:32:32-i64:64-n32\".to_string(),\n         arch: \"powerpc\".to_string(),\n-        options: TargetOptions {\n-            endian: \"big\".to_string(),\n-            mcount: \"__mcount\".to_string(),\n-            ..base\n-        },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"__mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "bb943a8825c6c794d10a6422c8b205ace60c0709", "filename": "compiler/rustc_target/src/spec/powerpc_wrs_vxworks.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_wrs_vxworks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_wrs_vxworks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_wrs_vxworks.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -11,10 +12,6 @@ pub fn target() -> Target {\n         pointer_width: 32,\n         data_layout: \"E-m:e-p:32:32-i64:64-n32\".to_string(),\n         arch: \"powerpc\".to_string(),\n-        options: TargetOptions {\n-            endian: \"big\".to_string(),\n-            features: \"+secure-plt\".to_string(),\n-            ..base\n-        },\n+        options: TargetOptions { endian: Endian::Big, features: \"+secure-plt\".to_string(), ..base },\n     }\n }"}, {"sha": "4b4f118ba49bd4731f7b89f70460061cf39f11fa", "filename": "compiler/rustc_target/src/spec/powerpc_wrs_vxworks_spe.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_wrs_vxworks_spe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_wrs_vxworks_spe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_wrs_vxworks_spe.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -12,7 +13,7 @@ pub fn target() -> Target {\n         data_layout: \"E-m:e-p:32:32-i64:64-n32\".to_string(),\n         arch: \"powerpc\".to_string(),\n         options: TargetOptions {\n-            endian: \"big\".to_string(),\n+            endian: Endian::Big,\n             // feature msync would disable instruction 'fsync' which is not supported by fsl_p1p2\n             features: \"+secure-plt,+msync\".to_string(),\n             ..base"}, {"sha": "4eeea9bedfb505390c3e9b3c91835fdd9ef09b37", "filename": "compiler/rustc_target/src/spec/s390x_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,8 +1,9 @@\n+use crate::abi::Endian;\n use crate::spec::Target;\n \n pub fn target() -> Target {\n     let mut base = super::linux_gnu_base::opts();\n-    base.endian = \"big\".to_string();\n+    base.endian = Endian::Big;\n     // z10 is the oldest CPU supported by LLVM\n     base.cpu = \"z10\".to_string();\n     // FIXME: The data_layout string below and the ABI implementation in"}, {"sha": "e1aa48872b9065e5c278965bb63d045cb42a9bff", "filename": "compiler/rustc_target/src/spec/sparc64_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_linux_gnu.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,8 +1,9 @@\n+use crate::abi::Endian;\n use crate::spec::Target;\n \n pub fn target() -> Target {\n     let mut base = super::linux_gnu_base::opts();\n-    base.endian = \"big\".to_string();\n+    base.endian = Endian::Big;\n     base.cpu = \"v9\".to_string();\n     base.max_atomic_width = Some(64);\n "}, {"sha": "7d685c83100d3a40d462a19377c257ea94bdcee2", "filename": "compiler/rustc_target/src/spec/sparc64_unknown_netbsd.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_netbsd.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,3 +1,4 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n@@ -11,10 +12,6 @@ pub fn target() -> Target {\n         pointer_width: 64,\n         data_layout: \"E-m:e-i64:64-n32:64-S128\".to_string(),\n         arch: \"sparc64\".to_string(),\n-        options: TargetOptions {\n-            endian: \"big\".to_string(),\n-            mcount: \"__mcount\".to_string(),\n-            ..base\n-        },\n+        options: TargetOptions { endian: Endian::Big, mcount: \"__mcount\".to_string(), ..base },\n     }\n }"}, {"sha": "63b13fad4f7f6c816b72daf69cde9ee6315264ce", "filename": "compiler/rustc_target/src/spec/sparc64_unknown_openbsd.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_openbsd.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,8 +1,9 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target};\n \n pub fn target() -> Target {\n     let mut base = super::openbsd_base::opts();\n-    base.endian = \"big\".to_string();\n+    base.endian = Endian::Big;\n     base.cpu = \"v9\".to_string();\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n     base.max_atomic_width = Some(64);"}, {"sha": "9e8fbff81c5380b979e4903d6ec9047b966b55cc", "filename": "compiler/rustc_target/src/spec/sparc_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc_unknown_linux_gnu.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,8 +1,9 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target};\n \n pub fn target() -> Target {\n     let mut base = super::linux_gnu_base::opts();\n-    base.endian = \"big\".to_string();\n+    base.endian = Endian::Big;\n     base.cpu = \"v9\".to_string();\n     base.max_atomic_width = Some(64);\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-mv8plus\".to_string());"}, {"sha": "9ac56cae9168a2c48ce41664b498d51ea97dfbae", "filename": "compiler/rustc_target/src/spec/sparcv9_sun_solaris.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparcv9_sun_solaris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparcv9_sun_solaris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparcv9_sun_solaris.rs?ref=8ee804dc2b54c690dbbc429e77e8d47e86cbf5ce", "patch": "@@ -1,8 +1,9 @@\n+use crate::abi::Endian;\n use crate::spec::{LinkerFlavor, Target};\n \n pub fn target() -> Target {\n     let mut base = super::solaris_base::opts();\n-    base.endian = \"big\".to_string();\n+    base.endian = Endian::Big;\n     base.pre_link_args.insert(LinkerFlavor::Gcc, vec![\"-m64\".to_string()]);\n     // llvm calls this \"v9\"\n     base.cpu = \"v9\".to_string();"}]}