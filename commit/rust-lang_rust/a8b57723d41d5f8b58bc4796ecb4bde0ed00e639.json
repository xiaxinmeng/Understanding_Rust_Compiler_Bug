{"sha": "a8b57723d41d5f8b58bc4796ecb4bde0ed00e639", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YjU3NzIzZDQxZDVmOGI1OGJjNDc5NmVjYjRiZGUwZWQwMGU2Mzk=", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-26T20:26:26Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-26T20:26:26Z"}, "message": "Use `Option::map()` instead of `if let`", "tree": {"sha": "7d6d585ca8687942ea601d0fce86a25f518d130b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d6d585ca8687942ea601d0fce86a25f518d130b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8b57723d41d5f8b58bc4796ecb4bde0ed00e639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8b57723d41d5f8b58bc4796ecb4bde0ed00e639", "html_url": "https://github.com/rust-lang/rust/commit/a8b57723d41d5f8b58bc4796ecb4bde0ed00e639", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8b57723d41d5f8b58bc4796ecb4bde0ed00e639/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7682e87c6d29520dfdea6a2a772c31150dbfa7d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7682e87c6d29520dfdea6a2a772c31150dbfa7d4", "html_url": "https://github.com/rust-lang/rust/commit/7682e87c6d29520dfdea6a2a772c31150dbfa7d4"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "bf131914b97cfe7d043c702b1453594031148847", "filename": "compiler/rustc_driver/src/pretty.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a8b57723d41d5f8b58bc4796ecb4bde0ed00e639/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8b57723d41d5f8b58bc4796ecb4bde0ed00e639/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs?ref=a8b57723d41d5f8b58bc4796ecb4bde0ed00e639", "patch": "@@ -324,16 +324,12 @@ impl<'tcx> pprust_hir::PpAnn for TypedAnnotation<'tcx> {\n     }\n     fn post(&self, s: &mut pprust_hir::State<'_>, node: pprust_hir::AnnNode<'_>) {\n         if let pprust_hir::AnnNode::Expr(expr) = node {\n-            let typeck_results =\n-                self.maybe_typeck_results.get().or_else(|| {\n-                    if let Some(body_id) = self.tcx.hir().maybe_body_owned_by(\n-                        self.tcx.hir().local_def_id_to_hir_id(expr.hir_id.owner),\n-                    ) {\n-                        Some(self.tcx.typeck_body(body_id))\n-                    } else {\n-                        None\n-                    }\n-                });\n+            let typeck_results = self.maybe_typeck_results.get().or_else(|| {\n+                self.tcx\n+                    .hir()\n+                    .maybe_body_owned_by(self.tcx.hir().local_def_id_to_hir_id(expr.hir_id.owner))\n+                    .map(|body_id| self.tcx.typeck_body(body_id))\n+            });\n \n             if let Some(typeck_results) = typeck_results {\n                 s.s.space();"}]}