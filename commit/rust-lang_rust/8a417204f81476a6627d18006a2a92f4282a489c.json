{"sha": "8a417204f81476a6627d18006a2a92f4282a489c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNDE3MjA0ZjgxNDc2YTY2MjdkMTgwMDZhMmE5MmY0MjgyYTQ4OWM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-28T09:17:04Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-28T09:17:04Z"}, "message": "Remove tests for deprecated items", "tree": {"sha": "8f60e53c9a52cca29f425390526bf73a944c9c2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f60e53c9a52cca29f425390526bf73a944c9c2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a417204f81476a6627d18006a2a92f4282a489c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a417204f81476a6627d18006a2a92f4282a489c", "html_url": "https://github.com/rust-lang/rust/commit/8a417204f81476a6627d18006a2a92f4282a489c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a417204f81476a6627d18006a2a92f4282a489c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b90cb529a2c11f69a29427da50379722f5e332e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b90cb529a2c11f69a29427da50379722f5e332e", "html_url": "https://github.com/rust-lang/rust/commit/7b90cb529a2c11f69a29427da50379722f5e332e"}], "stats": {"total": 51, "additions": 16, "deletions": 35}, "files": [{"sha": "00cbcaeacb9f7d56af93b2f8b675d1997ee3a05e", "filename": "tests/ui/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8a417204f81476a6627d18006a2a92f4282a489c/tests%2Fui%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a417204f81476a6627d18006a2a92f4282a489c/tests%2Fui%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_copy_const.rs?ref=8a417204f81476a6627d18006a2a92f4282a489c", "patch": "@@ -4,7 +4,7 @@\n use std::borrow::Cow;\n use std::cell::Cell;\n use std::fmt::Display;\n-use std::sync::atomic::{AtomicUsize, Ordering, ATOMIC_USIZE_INIT};\n+use std::sync::atomic::{AtomicUsize, Ordering};\n use std::sync::Once;\n \n const ATOMIC: AtomicUsize = AtomicUsize::new(5); //~ ERROR interior mutable\n@@ -95,9 +95,6 @@ fn main() {\n     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n     assert_eq!(ATOMIC.load(Ordering::SeqCst), 5); //~ ERROR interior mutability\n \n-    ATOMIC_USIZE_INIT.store(2, Ordering::SeqCst); //~ ERROR interior mutability\n-    assert_eq!(ATOMIC_USIZE_INIT.load(Ordering::SeqCst), 0); //~ ERROR interior mutability\n-\n     let _once = ONCE_INIT;\n     let _once_ref = &ONCE_INIT; //~ ERROR interior mutability\n     let _once_ref_2 = &&ONCE_INIT; //~ ERROR interior mutability"}, {"sha": "1276491127ad70ea22c542fab251da1202da3038", "filename": "tests/ui/non_copy_const.stderr", "status": "modified", "additions": 15, "deletions": 31, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/8a417204f81476a6627d18006a2a92f4282a489c/tests%2Fui%2Fnon_copy_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a417204f81476a6627d18006a2a92f4282a489c/tests%2Fui%2Fnon_copy_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_copy_const.stderr?ref=8a417204f81476a6627d18006a2a92f4282a489c", "patch": "@@ -144,132 +144,116 @@ LL |     assert_eq!(ATOMIC.load(Ordering::SeqCst), 5); //~ ERROR interior mutabi\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:98:5\n-   |\n-LL |     ATOMIC_USIZE_INIT.store(2, Ordering::SeqCst); //~ ERROR interior mutability\n-   |     ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: assign this const to a local or static variable, and use the variable here\n-\n-error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:99:16\n-   |\n-LL |     assert_eq!(ATOMIC_USIZE_INIT.load(Ordering::SeqCst), 0); //~ ERROR interior mutability\n-   |                ^^^^^^^^^^^^^^^^^\n-   |\n-   = help: assign this const to a local or static variable, and use the variable here\n-\n-error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:102:22\n+  --> $DIR/non_copy_const.rs:99:22\n    |\n LL |     let _once_ref = &ONCE_INIT; //~ ERROR interior mutability\n    |                      ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:103:25\n+  --> $DIR/non_copy_const.rs:100:25\n    |\n LL |     let _once_ref_2 = &&ONCE_INIT; //~ ERROR interior mutability\n    |                         ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:104:27\n+  --> $DIR/non_copy_const.rs:101:27\n    |\n LL |     let _once_ref_4 = &&&&ONCE_INIT; //~ ERROR interior mutability\n    |                           ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:105:26\n+  --> $DIR/non_copy_const.rs:102:26\n    |\n LL |     let _once_mut = &mut ONCE_INIT; //~ ERROR interior mutability\n    |                          ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:116:14\n+  --> $DIR/non_copy_const.rs:113:14\n    |\n LL |     let _ = &ATOMIC_TUPLE; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:117:14\n+  --> $DIR/non_copy_const.rs:114:14\n    |\n LL |     let _ = &ATOMIC_TUPLE.0; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:118:19\n+  --> $DIR/non_copy_const.rs:115:19\n    |\n LL |     let _ = &(&&&&ATOMIC_TUPLE).0; //~ ERROR interior mutability\n    |                   ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:119:14\n+  --> $DIR/non_copy_const.rs:116:14\n    |\n LL |     let _ = &ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:120:13\n+  --> $DIR/non_copy_const.rs:117:13\n    |\n LL |     let _ = ATOMIC_TUPLE.0[0].load(Ordering::SeqCst); //~ ERROR interior mutability\n    |             ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:126:13\n+  --> $DIR/non_copy_const.rs:123:13\n    |\n LL |     let _ = ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n    |             ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:131:5\n+  --> $DIR/non_copy_const.rs:128:5\n    |\n LL |     CELL.set(2); //~ ERROR interior mutability\n    |     ^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:132:16\n+  --> $DIR/non_copy_const.rs:129:16\n    |\n LL |     assert_eq!(CELL.get(), 6); //~ ERROR interior mutability\n    |                ^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:145:5\n+  --> $DIR/non_copy_const.rs:142:5\n    |\n LL |     u64::ATOMIC.store(5, Ordering::SeqCst); //~ ERROR interior mutability\n    |     ^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:146:16\n+  --> $DIR/non_copy_const.rs:143:16\n    |\n LL |     assert_eq!(u64::ATOMIC.load(Ordering::SeqCst), 9); //~ ERROR interior mutability\n    |                ^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n-error: aborting due to 31 previous errors\n+error: aborting due to 29 previous errors\n "}]}