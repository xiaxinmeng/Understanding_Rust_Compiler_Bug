{"sha": "3cb3d754a5bb1a6b22ab3a30d01a7f950127fe61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYjNkNzU0YTViYjFhNmIyMmFiM2EzMGQwMWE3Zjk1MDEyN2ZlNjE=", "commit": {"author": {"name": "korenchkin", "email": "korenchkin2@gmail.com", "date": "2013-07-10T13:30:14Z"}, "committer": {"name": "korenchkin", "email": "korenchkin2@gmail.com", "date": "2013-07-10T13:49:39Z"}, "message": "Fixed examples\n\nThe examples were still using `core::` instead of `std::`\nAll of the examples needed a `use std::rand;` at the top to compile\nMost of the examples had\n    `rng = rand::rng();`\ninstead of\n    `let mut rng = rand::rng();`", "tree": {"sha": "3e7cac39a0c634d1925b2c89be7de09a980b3047", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e7cac39a0c634d1925b2c89be7de09a980b3047"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cb3d754a5bb1a6b22ab3a30d01a7f950127fe61", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb3d754a5bb1a6b22ab3a30d01a7f950127fe61", "html_url": "https://github.com/rust-lang/rust/commit/3cb3d754a5bb1a6b22ab3a30d01a7f950127fe61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cb3d754a5bb1a6b22ab3a30d01a7f950127fe61/comments", "author": null, "committer": null, "parents": [{"sha": "8fa09736efcd100ec675a2fe0e29906607996485", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fa09736efcd100ec675a2fe0e29906607996485", "html_url": "https://github.com/rust-lang/rust/commit/8fa09736efcd100ec675a2fe0e29906607996485"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "666bf54fa3bdcecc3f17fea5ea8113e4423b253e", "filename": "src/libstd/rand.rs", "status": "modified", "additions": 31, "deletions": 19, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/3cb3d754a5bb1a6b22ab3a30d01a7f950127fe61/src%2Flibstd%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb3d754a5bb1a6b22ab3a30d01a7f950127fe61/src%2Flibstd%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand.rs?ref=3cb3d754a5bb1a6b22ab3a30d01a7f950127fe61", "patch": "@@ -22,7 +22,8 @@ distributions like normal and exponential.\n # Examples\n \n ~~~ {.rust}\n-use core::rand::RngUtil;\n+use std::rand;\n+use std::rand::RngUtil;\n \n fn main() {\n     let mut rng = rand::rng();\n@@ -33,6 +34,8 @@ fn main() {\n ~~~\n \n ~~~ {.rust}\n+use std::rand;\n+\n fn main () {\n     let tuple_ptr = rand::random::<~(f64, char)>();\n     println(fmt!(\"%?\", tuple_ptr))\n@@ -292,10 +295,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     println(fmt!(\"%b\",rng.gen_weighted_bool(3)));\n      * }\n      * ~~~\n@@ -308,10 +312,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     println(rng.gen_str(8));\n      * }\n      * ~~~\n@@ -324,10 +329,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     println(fmt!(\"%?\",rng.gen_bytes(8)));\n      * }\n      * ~~~\n@@ -340,10 +346,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     println(fmt!(\"%d\",rng.choose([1,2,4,8,16,32])));\n      * }\n      * ~~~\n@@ -359,10 +366,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     let x = [rand::Weighted {weight: 4, item: 'a'},\n      *              rand::Weighted {weight: 2, item: 'b'},\n      *              rand::Weighted {weight: 2, item: 'c'}];\n@@ -379,10 +387,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     let x = [rand::Weighted {weight: 4, item: 'a'},\n      *              rand::Weighted {weight: 2, item: 'b'},\n      *              rand::Weighted {weight: 2, item: 'c'}];\n@@ -400,10 +409,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     let x = [rand::Weighted {weight: 4, item: 'a'},\n      *              rand::Weighted {weight: 2, item: 'b'},\n      *              rand::Weighted {weight: 2, item: 'c'}];\n@@ -419,10 +429,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     println(fmt!(\"%?\",rng.shuffle([1,2,3])));\n      * }\n      * ~~~\n@@ -435,10 +446,11 @@ pub trait RngUtil {\n      *\n      * ~~~ {.rust}\n      *\n-     * use core::rand::RngUtil;\n+     * use std::rand;\n+     * use std::rand::RngUtil;\n      *\n      * fn main() {\n-     *     rng = rand::rng();\n+     *     let mut rng = rand::rng();\n      *     let mut y = [1,2,3];\n      *     rng.shuffle_mut(y);\n      *     println(fmt!(\"%?\",y));"}]}