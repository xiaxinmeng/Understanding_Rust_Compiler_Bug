{"sha": "1607871dc2a5240177865210822238f66c1dfb2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MDc4NzFkYzJhNTI0MDE3Nzg2NTIxMDgyMjIzOGY2NmMxZGZiMmU=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-03-18T14:42:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-18T20:47:42Z"}, "message": "rustc: disallow duplicate methods in trait impls\n\nCloses #8153", "tree": {"sha": "8a28a973dcbbb1b5c30621a8100a7eea4b9e6ee3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a28a973dcbbb1b5c30621a8100a7eea4b9e6ee3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1607871dc2a5240177865210822238f66c1dfb2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1607871dc2a5240177865210822238f66c1dfb2e", "html_url": "https://github.com/rust-lang/rust/commit/1607871dc2a5240177865210822238f66c1dfb2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1607871dc2a5240177865210822238f66c1dfb2e/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f4c63049ed2e323ba2961c19dc067f86dd61861", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4c63049ed2e323ba2961c19dc067f86dd61861", "html_url": "https://github.com/rust-lang/rust/commit/1f4c63049ed2e323ba2961c19dc067f86dd61861"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "f65c168f3829543d9099ccffbf8fe2ed144569dc", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1607871dc2a5240177865210822238f66c1dfb2e/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1607871dc2a5240177865210822238f66c1dfb2e/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=1607871dc2a5240177865210822238f66c1dfb2e", "patch": "@@ -48,6 +48,8 @@ use util::ppaux::Repr;\n use std::rc::Rc;\n use std::vec_ng::Vec;\n use std::vec_ng;\n+use collections::HashSet;\n+\n use syntax::abi::AbiSet;\n use syntax::ast::{RegionTyParamBound, TraitTyParamBound};\n use syntax::ast;\n@@ -478,7 +480,12 @@ fn convert_methods(ccx: &CrateCtxt,\n                    rcvr_visibility: ast::Visibility)\n {\n     let tcx = ccx.tcx;\n+    let mut seen_methods = HashSet::new();\n     for m in ms.iter() {\n+        if !seen_methods.insert(m.ident.repr(ccx.tcx)) {\n+            tcx.sess.span_err(m.span, \"duplicate method in trait impl\");\n+        }\n+\n         let num_rcvr_ty_params = rcvr_ty_generics.type_param_defs().len();\n         let m_ty_generics = ty_generics_for_fn_or_method(ccx, &m.generics,\n                                                          num_rcvr_ty_params);"}, {"sha": "2af531135eca3915c474192526fb66544f379a20", "filename": "src/test/compile-fail/issue-8153.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1607871dc2a5240177865210822238f66c1dfb2e/src%2Ftest%2Fcompile-fail%2Fissue-8153.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1607871dc2a5240177865210822238f66c1dfb2e/src%2Ftest%2Fcompile-fail%2Fissue-8153.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8153.rs?ref=1607871dc2a5240177865210822238f66c1dfb2e", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that duplicate methods in impls are not allowed\n+\n+struct Foo;\n+\n+trait Bar {\n+    fn bar(&self) -> int;\n+}\n+\n+impl Bar for Foo {\n+    fn bar(&self) -> int {1}\n+    fn bar(&self) -> int {2} //~ ERROR duplicate method\n+}\n+\n+fn main() {\n+    println!(\"{}\", Foo.bar());\n+}"}]}