{"sha": "8dad2bb2814fec7f8593f54b5d95e892a09596ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYWQyYmIyODE0ZmVjN2Y4NTkzZjU0YjVkOTVlODkyYTA5NTk2YWI=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-06-04T18:09:18Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-06-05T19:01:39Z"}, "message": "removed unused imports (and one unused argument)", "tree": {"sha": "5bf6f3efca9a795f089f111d1382fa9dfb022f81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bf6f3efca9a795f089f111d1382fa9dfb022f81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dad2bb2814fec7f8593f54b5d95e892a09596ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dad2bb2814fec7f8593f54b5d95e892a09596ab", "html_url": "https://github.com/rust-lang/rust/commit/8dad2bb2814fec7f8593f54b5d95e892a09596ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dad2bb2814fec7f8593f54b5d95e892a09596ab/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "367eddf5b1777928ca0119932a877aaec757293a", "url": "https://api.github.com/repos/rust-lang/rust/commits/367eddf5b1777928ca0119932a877aaec757293a", "html_url": "https://github.com/rust-lang/rust/commit/367eddf5b1777928ca0119932a877aaec757293a"}], "stats": {"total": 40, "additions": 14, "deletions": 26}, "files": [{"sha": "cda7d1fa93702659233f5b65b8433203dc3faf02", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -144,7 +144,7 @@ fn fold_item(cx: @mut TestCtxt, i: @ast::item, fld: @fold::ast_fold)\n           -> Option<@ast::item> {\n     cx.path.push(i.ident);\n     debug!(\"current path: %s\",\n-           ast_util::path_name_i(copy cx.path, token::get_ident_interner()));\n+           ast_util::path_name_i(copy cx.path));\n \n     if is_test_fn(cx, i) || is_bench_fn(i) {\n         match i.node {\n@@ -412,13 +412,10 @@ fn mk_test_desc_and_fn_rec(cx: &TestCtxt, test: &Test) -> @ast::expr {\n \n     let ext_cx = cx.ext_cx;\n \n-    debug!(\"encoding %s\", ast_util::path_name_i(path,\n-                                                token::get_ident_interner()));\n+    debug!(\"encoding %s\", ast_util::path_name_i(path));\n \n     let name_lit: ast::lit =\n-        nospan(ast::lit_str(@ast_util::path_name_i(\n-            path,\n-            token::get_ident_interner())));\n+        nospan(ast::lit_str(@ast_util::path_name_i(path)));\n \n     let name_expr = @ast::expr {\n           id: cx.sess.next_node_id(),"}, {"sha": "2365897c4d7c94379d910e20aa85914327a201c4", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -142,8 +142,7 @@ fn add_to_index(ecx: @EncodeContext,\n     full_path.push(name);\n     index.push(\n         entry {\n-            val: ast_util::path_name_i(full_path,\n-                                       token::get_ident_interner()),\n+            val: ast_util::path_name_i(full_path),\n             pos: ebml_w.writer.tell()\n         });\n }"}, {"sha": "5bbc5d4e819e0c8526d49ec850117bd9b17a725a", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -15,7 +15,7 @@ use core::prelude::*;\n use codemap::{span, spanned};\n use abi::AbiSet;\n use opt_vec::OptVec;\n-use parse::token::{get_ident_interner, ident_to_str, interner_get, str_to_ident};\n+use parse::token::{ident_to_str, interner_get, str_to_ident};\n \n use core::hashmap::HashMap;\n use core::option::Option;"}, {"sha": "588968365b1aae98f49cd8377014e4f215962152", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -24,12 +24,11 @@ use core::option;\n use core::str;\n use core::to_bytes;\n \n-pub fn path_name_i(idents: &[ident], intr: @token::ident_interner) -> ~str {\n+pub fn path_name_i(idents: &[ident]) -> ~str {\n     // FIXME: Bad copies (#2543 -- same for everything else that says \"bad\")\n     str::connect(idents.map(|i| copy *token::interner_get(i.name)), \"::\")\n }\n \n-\n pub fn path_to_ident(p: @Path) -> ident { copy *p.idents.last() }\n \n pub fn local_def(id: node_id) -> def_id {"}, {"sha": "bfb234106b8b1256cfe14423cdaa0618f76d21e4", "filename": "src/libsyntax/ext/concat_idents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fconcat_idents.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -15,7 +15,7 @@ use codemap::span;\n use ext::base::*;\n use ext::base;\n use parse::token;\n-use parse::token::{get_ident_interner, str_to_ident};\n+use parse::token::{str_to_ident};\n \n pub fn expand_syntax_ext(cx: @ExtCtxt, sp: span, tts: &[ast::token_tree])\n     -> base::MacResult {"}, {"sha": "67d3f84d1ff3e7b7e3956456f560aa2bf3297979", "filename": "src/libsyntax/ext/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ffmt.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -25,7 +25,7 @@ use ext::build::AstBuilder;\n use core::option;\n use core::unstable::extfmt::ct::*;\n use core::vec;\n-use parse::token::{get_ident_interner, str_to_ident};\n+use parse::token::{str_to_ident};\n \n pub fn expand_syntax_ext(cx: @ExtCtxt, sp: span, tts: &[ast::token_tree])\n     -> base::MacResult {"}, {"sha": "3f4b5ee54f1936e0bbeb14f328f65f940c7212f1", "filename": "src/libsyntax/ext/pipes/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Fpipes%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Fpipes%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fmod.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -52,7 +52,6 @@ use ext::pipes::pipec::gen_init;\n use ext::pipes::proto::visit;\n use parse::lexer::{new_tt_reader, reader};\n use parse::parser::Parser;\n-use parse::token::{get_ident_interner};\n use core::option::None;\n \n pub mod ast_builder;"}, {"sha": "a89fd26df4c8b07844d1fa1da8ec2480e4e5ab6f", "filename": "src/libsyntax/ext/pipes/parse_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Fpipes%2Fparse_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Fpipes%2Fparse_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fparse_proto.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -17,7 +17,7 @@ use ext::pipes::proto::*;\n use parse::common::SeqSep;\n use parse::parser;\n use parse::token;\n-use parse::token::{get_ident_interner, interner_get};\n+use parse::token::{interner_get};\n \n pub trait proto_parser {\n     fn parse_proto(&self, id: ~str) -> protocol;"}, {"sha": "3baf432f24d6590795de1dce9461c86ca9fc67da", "filename": "src/libsyntax/ext/trace_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftrace_macros.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -17,7 +17,6 @@ use ext::base;\n use parse::lexer::{new_tt_reader, reader};\n use parse::parser::Parser;\n use parse::token::keywords;\n-use parse::token::{get_ident_interner};\n \n use core::vec;\n "}, {"sha": "1822117507d7fffcc75b7c56f9886c6754946c7e", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -93,7 +93,6 @@ pub fn add_new_extension(cx: @ExtCtxt,\n         let mut best_fail_msg = ~\"internal error: ran no matchers\";\n \n         let s_d = cx.parse_sess().span_diagnostic;\n-        let itr = get_ident_interner();\n \n         for lhses.eachi |i, lhs| { // try each arm's matchers\n             match *lhs {"}, {"sha": "f0b078603dbd09b526b4d1bf89fb9996f244a203", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -15,8 +15,8 @@ use ast::{token_tree, tt_delim, tt_tok, tt_seq, tt_nonterminal,ident};\n use codemap::{span, dummy_sp};\n use diagnostic::span_handler;\n use ext::tt::macro_parser::{named_match, matched_seq, matched_nonterminal};\n-use parse::token::{EOF, INTERPOLATED, IDENT, Token, nt_ident, ident_interner};\n-use parse::token::{ident_to_str, get_ident_interner};\n+use parse::token::{EOF, INTERPOLATED, IDENT, Token, nt_ident};\n+use parse::token::{ident_to_str};\n use parse::lexer::TokenAndSpan;\n \n use core::hashmap::HashMap;"}, {"sha": "dab8dd3b4b6a3d20ca7701bdc5b297596e41c594", "filename": "src/libsyntax/parse/comments.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fparse%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fparse%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcomments.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -324,7 +324,6 @@ pub fn gather_comments_and_literals(span_diagnostic:\n                                     srdr: @io::Reader)\n                                  -> (~[cmnt], ~[lit]) {\n     let src = @str::from_bytes(srdr.read_whole_stream());\n-    let itr = parse::token::mk_fake_ident_interner();\n     let cm = CodeMap::new();\n     let filemap = cm.new_filemap(path, src);\n     let rdr = lexer::new_low_level_string_reader(span_diagnostic, filemap);"}, {"sha": "84700f052c9c4bf13f871dbb6cbb0a551680effd", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -17,7 +17,7 @@ use diagnostic::span_handler;\n use ext::tt::transcribe::{tt_next_token};\n use ext::tt::transcribe::{dup_tt_reader};\n use parse::token;\n-use parse::token::{get_ident_interner, str_to_ident};\n+use parse::token::{str_to_ident};\n \n use core::char;\n use core::either;\n@@ -779,7 +779,7 @@ mod test {\n     use core::option::None;\n     use diagnostic;\n     use parse::token;\n-    use parse::token::{get_ident_interner, str_to_ident};\n+    use parse::token::{str_to_ident};\n \n     // represents a testing reader (incl. both reader and interner)\n     struct Env {"}, {"sha": "2e00e71926949ab15d79f54169074b236af20e3b", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -19,7 +19,6 @@ use diagnostic::{span_handler, mk_span_handler, mk_handler, Emitter};\n use parse::attr::parser_attr;\n use parse::lexer::reader;\n use parse::parser::Parser;\n-use parse::token::{ident_interner, get_ident_interner};\n \n use core::io;\n use core::option::{None, Option, Some};\n@@ -342,10 +341,9 @@ mod test {\n     use codemap::{span, BytePos, spanned};\n     use opt_vec;\n     use ast;\n-    use ast_util::new_ident;\n     use abi;\n     use parse::parser::Parser;\n-    use parse::token::{intern, str_to_ident};\n+    use parse::token::{str_to_ident};\n     use util::parser_testing::{string_to_tts_and_sess, string_to_parser};\n     use util::parser_testing::{string_to_expr, string_to_item};\n     use util::parser_testing::{string_to_stmt};"}, {"sha": "57e78d3ad8409701f3664b2cb89fcfd04f6ad1a1", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2bb2814fec7f8593f54b5d95e892a09596ab/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=8dad2bb2814fec7f8593f54b5d95e892a09596ab", "patch": "@@ -2236,7 +2236,6 @@ mod test {\n     use codemap;\n     use core::cmp::Eq;\n     use core::option::None;\n-    use parse;\n     use parse::token;\n \n     fn string_check<T:Eq> (given : &T, expected: &T) {"}]}