{"sha": "ca0806c70320093a37dbe52ba2442d1e047c9c8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMDgwNmM3MDMyMDA5M2EzN2RiZTUyYmEyNDQyZDFlMDQ3YzljOGQ=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-11-30T15:36:20Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-11-30T15:36:20Z"}, "message": "arena: speed up TypedArena::clear", "tree": {"sha": "a718157db8c67c7269ffe95e478bcec77a042f55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a718157db8c67c7269ffe95e478bcec77a042f55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca0806c70320093a37dbe52ba2442d1e047c9c8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0806c70320093a37dbe52ba2442d1e047c9c8d", "html_url": "https://github.com/rust-lang/rust/commit/ca0806c70320093a37dbe52ba2442d1e047c9c8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca0806c70320093a37dbe52ba2442d1e047c9c8d/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d48ab693d1ce99f30c0cf9abdf45c209824fe825", "url": "https://api.github.com/repos/rust-lang/rust/commits/d48ab693d1ce99f30c0cf9abdf45c209824fe825", "html_url": "https://github.com/rust-lang/rust/commit/d48ab693d1ce99f30c0cf9abdf45c209824fe825"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "ed83eddc479676a703150e45578c95061a88f24b", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ca0806c70320093a37dbe52ba2442d1e047c9c8d/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0806c70320093a37dbe52ba2442d1e047c9c8d/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=ca0806c70320093a37dbe52ba2442d1e047c9c8d", "patch": "@@ -224,14 +224,14 @@ impl<T> TypedArena<T> {\n         unsafe {\n             // Clear the last chunk, which is partially filled.\n             let mut chunks_borrow = self.chunks.borrow_mut();\n-            if let Some(mut last_chunk) = chunks_borrow.pop() {\n+            if let Some(mut last_chunk) = chunks_borrow.last_mut() {\n                 self.clear_last_chunk(&mut last_chunk);\n+                let len = chunks_borrow.len();\n                 // If `T` is ZST, code below has no effect.\n-                for mut chunk in chunks_borrow.drain(..) {\n+                for mut chunk in chunks_borrow.drain(..len-1) {\n                     let cap = chunk.storage.cap();\n                     chunk.destroy(cap);\n                 }\n-                chunks_borrow.push(last_chunk);\n             }\n         }\n     }\n@@ -604,6 +604,15 @@ mod tests {\n         }\n     }\n \n+    #[bench]\n+    pub fn bench_typed_arena_clear(b: &mut Bencher) {\n+        let mut arena = TypedArena::default();\n+        b.iter(|| {\n+            arena.alloc(Point { x: 1, y: 2, z: 3 });\n+            arena.clear();\n+        })\n+    }\n+\n     // Drop tests\n \n     struct DropCounter<'a> {"}]}