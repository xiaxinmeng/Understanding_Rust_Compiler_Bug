{"sha": "cfaf186d0231b91ecc613e0b905a658e9ac57b99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYWYxODZkMDIzMWI5MWVjYzYxM2UwYjkwNWE2NThlOWFjNTdiOTk=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-07-12T19:09:01Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-07-13T06:10:25Z"}, "message": "Rename the old server before update", "tree": {"sha": "8f21fc43f93cd1e019524c034f7c4ddc14ec4e26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f21fc43f93cd1e019524c034f7c4ddc14ec4e26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfaf186d0231b91ecc613e0b905a658e9ac57b99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfaf186d0231b91ecc613e0b905a658e9ac57b99", "html_url": "https://github.com/rust-lang/rust/commit/cfaf186d0231b91ecc613e0b905a658e9ac57b99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfaf186d0231b91ecc613e0b905a658e9ac57b99/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7988c80dd5c77970986081a6405ce742570ba8db", "url": "https://api.github.com/repos/rust-lang/rust/commits/7988c80dd5c77970986081a6405ce742570ba8db", "html_url": "https://github.com/rust-lang/rust/commit/7988c80dd5c77970986081a6405ce742570ba8db"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "b8defe92cd337bb71924a5b04555985ccee7efa2", "filename": "editors/code/src/net.ts", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/cfaf186d0231b91ecc613e0b905a658e9ac57b99/editors%2Fcode%2Fsrc%2Fnet.ts", "raw_url": "https://github.com/rust-lang/rust/raw/cfaf186d0231b91ecc613e0b905a658e9ac57b99/editors%2Fcode%2Fsrc%2Fnet.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnet.ts?ref=cfaf186d0231b91ecc613e0b905a658e9ac57b99", "patch": "@@ -92,6 +92,7 @@ export async function download(opts: DownloadOpts) {\n     // This also avoids overwriting running executables\n     const randomHex = crypto.randomBytes(5).toString(\"hex\");\n     const rawDest = path.parse(opts.dest.fsPath);\n+    const oldServerPath = vscode.Uri.joinPath(vscode.Uri.file(rawDest.dir), `${rawDest.name}-stale-${randomHex}${rawDest.ext}`);\n     const tempFilePath = vscode.Uri.joinPath(vscode.Uri.file(rawDest.dir), `${rawDest.name}${randomHex}`);\n \n     await vscode.window.withProgress(\n@@ -116,7 +117,46 @@ export async function download(opts: DownloadOpts) {\n         }\n     );\n \n-    await vscode.workspace.fs.rename(tempFilePath, opts.dest, { overwrite: true });\n+    // Try to rename a running server to avoid EPERM on Windows\n+    // NB: this can lead to issues if a running Code instance tries to restart the server.\n+    try {\n+        await vscode.workspace.fs.rename(opts.dest, oldServerPath, { overwrite: true });\n+        log.info(`Renamed old server binary ${opts.dest.fsPath} to ${oldServerPath.fsPath}`);\n+    } catch (err) {\n+        const fsErr = err as vscode.FileSystemError;\n+        // This is supposed to return `FileNotFound`, alas...\n+        if (!fsErr.code || fsErr.code !== \"FileNotFound\" && fsErr.code !== \"EntryNotFound\") {\n+            log.error(`Cannot rename existing server instance: ${err}`);\n+        }\n+    }\n+    try {\n+        await vscode.workspace.fs.rename(tempFilePath, opts.dest, { overwrite: true });\n+    } catch (err) {\n+        log.error(`Cannot update server binary: ${err}`);\n+    }\n+\n+    // Now try to remove any stale server binaries\n+    const serverDir = vscode.Uri.file(rawDest.dir);\n+    try {\n+        const entries = await vscode.workspace.fs.readDirectory(serverDir);\n+        for (const [entry, _] of entries) {\n+            try {\n+                if (entry.includes(`${rawDest.name}-stale-`)) {\n+                    const uri = vscode.Uri.joinPath(serverDir, entry);\n+                    try {\n+                        await vscode.workspace.fs.delete(uri);\n+                        log.info(`Removed old server binary ${uri.fsPath}`);\n+                    } catch (err) {\n+                        log.error(`Unable to remove old server binary ${uri.fsPath}`);\n+                    }\n+                }\n+            } catch (err) {\n+                log.error(`Unable to parse ${entry}`);\n+            }\n+        }\n+    } catch (err) {\n+        log.error(`Unable to enumerate contents of ${serverDir.fsPath}`);\n+    }\n }\n \n async function downloadFile("}]}