{"sha": "2a984c92a852bb9c35d085c5c3188fd18b42917c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhOTg0YzkyYTg1MmJiOWMzNWQwODVjNWMzMTg4ZmQxOGI0MjkxN2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-19T01:46:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-19T01:46:32Z"}, "message": "auto merge of #10440 : brson/rust/cnamespace, r=bstrie", "tree": {"sha": "b225c3ac86a2b17e2500cdabb5bdb4bbad04a951", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b225c3ac86a2b17e2500cdabb5bdb4bbad04a951"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a984c92a852bb9c35d085c5c3188fd18b42917c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a984c92a852bb9c35d085c5c3188fd18b42917c", "html_url": "https://github.com/rust-lang/rust/commit/2a984c92a852bb9c35d085c5c3188fd18b42917c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a984c92a852bb9c35d085c5c3188fd18b42917c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fc3e82aaeb15c067a1eed914032ba21a7763557", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fc3e82aaeb15c067a1eed914032ba21a7763557", "html_url": "https://github.com/rust-lang/rust/commit/7fc3e82aaeb15c067a1eed914032ba21a7763557"}, {"sha": "f4c222f7a3f21fd3fdc5df28f344988c103d17fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c222f7a3f21fd3fdc5df28f344988c103d17fa", "html_url": "https://github.com/rust-lang/rust/commit/f4c222f7a3f21fd3fdc5df28f344988c103d17fa"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "1bef864d1148f6889586701e0745e6b9f6969bba", "filename": "src/libextra/time.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Flibextra%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Flibextra%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftime.rs?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -21,8 +21,8 @@ pub mod rustrt {\n     use super::Tm;\n \n     extern {\n-        pub fn get_time(sec: &mut i64, nsec: &mut i32);\n-        pub fn precise_time_ns(ns: &mut u64);\n+        pub fn rust_get_time(sec: &mut i64, nsec: &mut i32);\n+        pub fn rust_precise_time_ns(ns: &mut u64);\n         pub fn rust_tzset();\n         pub fn rust_gmtime(sec: i64, nsec: i32, result: &mut Tm);\n         pub fn rust_localtime(sec: i64, nsec: i32, result: &mut Tm);\n@@ -66,7 +66,7 @@ pub fn get_time() -> Timespec {\n     unsafe {\n         let mut sec = 0i64;\n         let mut nsec = 0i32;\n-        rustrt::get_time(&mut sec, &mut nsec);\n+        rustrt::rust_get_time(&mut sec, &mut nsec);\n         return Timespec::new(sec, nsec);\n     }\n }\n@@ -79,7 +79,7 @@ pub fn get_time() -> Timespec {\n pub fn precise_time_ns() -> u64 {\n     unsafe {\n         let mut ns = 0u64;\n-        rustrt::precise_time_ns(&mut ns);\n+        rustrt::rust_precise_time_ns(&mut ns);\n         ns\n     }\n }"}, {"sha": "e8f6c4055a022095cbac119091dd045c14e573ff", "filename": "src/libstd/rt/basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Flibstd%2Frt%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Flibstd%2Frt%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fbasic.rs?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -241,11 +241,11 @@ impl Drop for BasicPausible {\n \n fn time() -> Time {\n     extern {\n-        fn get_time(sec: &mut i64, nsec: &mut i32);\n+        fn rust_get_time(sec: &mut i64, nsec: &mut i32);\n     }\n     let mut sec = 0;\n     let mut nsec = 0;\n-    unsafe { get_time(&mut sec, &mut nsec) }\n+    unsafe { rust_get_time(&mut sec, &mut nsec) }\n \n     Time { sec: sec as u64, nsec: nsec as u64 }\n }"}, {"sha": "6fcc8e321117548ebde2dd774b9b37f9376276a5", "filename": "src/libstd/rt/context.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Flibstd%2Frt%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Flibstd%2Frt%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcontext.rs?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -59,7 +59,7 @@ impl Context {\n         // which we will then modify to call the given function when restored\n         let mut regs = new_regs();\n         unsafe {\n-            swap_registers(transmute_mut_region(&mut *regs), transmute_region(&*regs));\n+            rust_swap_registers(transmute_mut_region(&mut *regs), transmute_region(&*regs));\n         };\n \n         initialize_call_frame(&mut *regs, fp, argp, sp);\n@@ -104,22 +104,22 @@ impl Context {\n             // stack limit in the OS-specified TLS slot. This also  means that\n             // we cannot call any more rust functions after record_stack_bounds\n             // returns because they would all likely fail due to the limit being\n-            // invalid for the current task. Lucky for us `swap_registers` is a\n-            // C function so we don't have to worry about that!\n+            // invalid for the current task. Lucky for us `rust_swap_registers`\n+            // is a C function so we don't have to worry about that!\n             match in_context.stack_bounds {\n                 Some((lo, hi)) => record_stack_bounds(lo, hi),\n                 // If we're going back to one of the original contexts or\n                 // something that's possibly not a \"normal task\", then reset\n                 // the stack limit to 0 to make morestack never fail\n                 None => record_stack_bounds(0, uint::max_value),\n             }\n-            swap_registers(out_regs, in_regs)\n+            rust_swap_registers(out_regs, in_regs)\n         }\n     }\n }\n \n extern {\n-    fn swap_registers(out_regs: *mut Registers, in_regs: *Registers);\n+    fn rust_swap_registers(out_regs: *mut Registers, in_regs: *Registers);\n }\n \n // Register contexts used in various architectures\n@@ -142,7 +142,7 @@ extern {\n //\n // These structures/functions are roughly in-sync with the source files inside\n // of src/rt/arch/$arch. The only currently used function from those folders is\n-// the `swap_registers` function, but that's only because for now segmented\n+// the `rust_swap_registers` function, but that's only because for now segmented\n // stacks are disabled.\n \n #[cfg(target_arch = \"x86\")]"}, {"sha": "4ab463d968ec61f8670bd6366a9a01c79831be58", "filename": "src/rt/arch/arm/_context.S", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Farch%2Farm%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Farch%2Farm%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2F_context.S?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -12,8 +12,8 @@\n .align\n #endif\n \n-.globl swap_registers\n-swap_registers:\n+.globl rust_swap_registers\n+rust_swap_registers:\n \tstr r0, [r0, #0]\n \tstr r3, [r0, #12]\n \tstr r4, [r0, #16]"}, {"sha": "6b79a82e4acafdbab2ba7426c7585faaf85ca4af", "filename": "src/rt/arch/i386/_context.S", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Farch%2Fi386%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Farch%2Fi386%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2F_context.S?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -21,9 +21,9 @@ The registers_t variable is in (%esp)\n */\n \n #if defined(__APPLE__) || defined(_WIN32)\n-#define SWAP_REGISTERS _swap_registers\n+#define SWAP_REGISTERS _rust_swap_registers\n #else\n-#define SWAP_REGISTERS swap_registers\n+#define SWAP_REGISTERS rust_swap_registers\n #endif\n \n // swap_registers(registers_t *oregs, registers_t *regs)"}, {"sha": "cfe77cc30456b1bacd67918aceab9948aa817af2", "filename": "src/rt/arch/mips/_context.S", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Farch%2Fmips%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Farch%2Fmips%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fmips%2F_context.S?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -4,11 +4,11 @@\n #endif\n \n .text\n-.globl swap_registers\n+.globl rust_swap_registers\n .align 2\n .set nomips16\n-.ent swap_registers\n-swap_registers:\n+.ent rust_swap_registers\n+rust_swap_registers:\n         .set noreorder\n         .set nomacro\n         .set noat\n@@ -85,4 +85,4 @@ swap_registers:\n \n         jr $31\n         nop\n-.end swap_registers\n+.end rust_swap_registers"}, {"sha": "74f20650f304b5c5f7597dbb0521202c8b84c40c", "filename": "src/rt/arch/x86_64/_context.S", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Farch%2Fx86_64%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Farch%2Fx86_64%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2F_context.S?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -55,9 +55,9 @@ First four arguments:\n */\n \n #if defined(__APPLE__)\n-#define SWAP_REGISTERS _swap_registers\n+#define SWAP_REGISTERS _rust_swap_registers\n #else\n-#define SWAP_REGISTERS swap_registers\n+#define SWAP_REGISTERS rust_swap_registers\n #endif\n \n // swap_registers(registers_t *oregs, registers_t *regs)"}, {"sha": "7d75d557bf76786237a182a5a382b5e246649a56", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -168,7 +168,7 @@ extern \"C\" CDECL FILE* rust_get_stderr() {return stderr;}\n \n #if defined(__WIN32__)\n extern \"C\" CDECL void\n-get_time(int64_t *sec, int32_t *nsec) {\n+rust_get_time(int64_t *sec, int32_t *nsec) {\n     FILETIME fileTime;\n     GetSystemTimeAsFileTime(&fileTime);\n \n@@ -187,7 +187,7 @@ get_time(int64_t *sec, int32_t *nsec) {\n }\n #else\n extern \"C\" CDECL void\n-get_time(int64_t *sec, int32_t *nsec) {\n+rust_get_time(int64_t *sec, int32_t *nsec) {\n #ifdef __APPLE__\n     struct timeval tv;\n     gettimeofday(&tv, NULL);\n@@ -205,7 +205,7 @@ get_time(int64_t *sec, int32_t *nsec) {\n const int64_t ns_per_s = 1000000000LL;\n \n extern \"C\" CDECL void\n-precise_time_ns(uint64_t *ns) {\n+rust_precise_time_ns(uint64_t *ns) {\n \n #ifdef __APPLE__\n     uint64_t time = mach_absolute_time();"}, {"sha": "49b6ebce2840069390ee60a1c645c42ee4c72231", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/2a984c92a852bb9c35d085c5c3188fd18b42917c/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=2a984c92a852bb9c35d085c5c3188fd18b42917c", "patch": "@@ -2,13 +2,13 @@ rust_dbg_abi_1\n rust_dbg_abi_2\n rust_dbg_static_mut\n rust_dbg_static_mut_check_four\n-get_time\n+rust_get_time\n rust_tzset\n rust_gmtime\n rust_localtime\n rust_timegm\n rust_mktime\n-precise_time_ns\n+rust_precise_time_ns\n rust_path_is_dir\n rust_path_is_dir_u16\n rust_path_exists\n@@ -43,7 +43,7 @@ rust_signal_little_lock\n rust_wait_little_lock\n tdefl_compress_mem_to_heap\n tinfl_decompress_mem_to_heap\n-swap_registers\n+rust_swap_registers\n rust_readdir\n rust_opendir\n rust_dbg_extern_identity_u32"}]}