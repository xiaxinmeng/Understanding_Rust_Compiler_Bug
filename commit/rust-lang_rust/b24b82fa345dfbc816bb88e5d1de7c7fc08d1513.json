{"sha": "b24b82fa345dfbc816bb88e5d1de7c7fc08d1513", "node_id": "C_kwDOAAsO6NoAKGIyNGI4MmZhMzQ1ZGZiYzgxNmJiODhlNWQxZGU3YzdmYzA4ZDE1MTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-25T12:35:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-25T12:35:39Z"}, "message": "Auto merge of #12074 - jonas-schievink:deprioritize-flyimport, r=jonas-schievink\n\nReduce priority of flyimport completions\n\nFixes https://github.com/rust-lang/rust-analyzer/issues/12068", "tree": {"sha": "9e1b130e19713f36f3af976e0d035ca16d4cbd33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e1b130e19713f36f3af976e0d035ca16d4cbd33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b24b82fa345dfbc816bb88e5d1de7c7fc08d1513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b24b82fa345dfbc816bb88e5d1de7c7fc08d1513", "html_url": "https://github.com/rust-lang/rust/commit/b24b82fa345dfbc816bb88e5d1de7c7fc08d1513", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b24b82fa345dfbc816bb88e5d1de7c7fc08d1513/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1de78f54c295c2c9c7681b0506e38d5ee695d77", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1de78f54c295c2c9c7681b0506e38d5ee695d77", "html_url": "https://github.com/rust-lang/rust/commit/c1de78f54c295c2c9c7681b0506e38d5ee695d77"}, {"sha": "3a83684a16b3e58b4dfedb23a745228350c8a78c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a83684a16b3e58b4dfedb23a745228350c8a78c", "html_url": "https://github.com/rust-lang/rust/commit/3a83684a16b3e58b4dfedb23a745228350c8a78c"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "29b073cfa52f1a71868071aac93ee8cbde842db0", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b24b82fa345dfbc816bb88e5d1de7c7fc08d1513/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b24b82fa345dfbc816bb88e5d1de7c7fc08d1513/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=b24b82fa345dfbc816bb88e5d1de7c7fc08d1513", "patch": "@@ -141,6 +141,8 @@ pub struct CompletionRelevance {\n     pub is_item_from_trait: bool,\n     /// This is set when an import is suggested whose name is already imported.\n     pub is_name_already_imported: bool,\n+    /// This is set for completions that will insert a `use` item.\n+    pub requires_import: bool,\n     /// Set for method completions of the `core::ops` and `core::cmp` family.\n     pub is_op_method: bool,\n     /// Set for item completions that are private but in the workspace.\n@@ -208,6 +210,7 @@ impl CompletionRelevance {\n             is_local,\n             is_item_from_trait,\n             is_name_already_imported,\n+            requires_import,\n             is_op_method,\n             is_private_editable,\n             postfix_match,\n@@ -226,6 +229,10 @@ impl CompletionRelevance {\n         if !is_name_already_imported {\n             score += 1;\n         }\n+        // lower rank for items that don't need an import\n+        if !requires_import {\n+            score += 1;\n+        }\n         if exact_name_match {\n             score += 10;\n         }"}, {"sha": "836b14bc2cdba3a736dd5e7c014d9d6d9fc0d157", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/b24b82fa345dfbc816bb88e5d1de7c7fc08d1513/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b24b82fa345dfbc816bb88e5d1de7c7fc08d1513/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=b24b82fa345dfbc816bb88e5d1de7c7fc08d1513", "patch": "@@ -58,7 +58,11 @@ impl<'a> RenderContext<'a> {\n     }\n \n     fn completion_relevance(&self) -> CompletionRelevance {\n-        CompletionRelevance { is_private_editable: self.is_private_editable, ..Default::default() }\n+        CompletionRelevance {\n+            is_private_editable: self.is_private_editable,\n+            requires_import: self.import_to_add.is_some(),\n+            ..Default::default()\n+        }\n     }\n \n     fn is_deprecated(&self, def: impl HasAttrs) -> bool {\n@@ -247,6 +251,7 @@ fn render_resolution_simple_(\n \n     let local_name = local_name.to_smol_str();\n     let mut item = CompletionItem::new(kind, ctx.source_range(), local_name.clone());\n+    item.set_relevance(ctx.completion_relevance());\n     if let ScopeDef::Local(local) = resolution {\n         let ty = local.ty(db);\n         if !ty.is_unknown() {\n@@ -446,6 +451,7 @@ mod tests {\n                     \"snippet\",\n                 ),\n                 (relevance.is_op_method, \"op_method\"),\n+                (relevance.requires_import, \"requires_import\"),\n             ]\n             .into_iter()\n             .filter_map(|(cond, desc)| if cond { Some(desc) } else { None })\n@@ -626,6 +632,7 @@ fn main() { let _: m::Spam = S$0 }\n                             is_local: false,\n                             is_item_from_trait: false,\n                             is_name_already_imported: false,\n+                            requires_import: false,\n                             is_op_method: false,\n                             is_private_editable: false,\n                             postfix_match: None,\n@@ -650,6 +657,7 @@ fn main() { let _: m::Spam = S$0 }\n                             is_local: false,\n                             is_item_from_trait: false,\n                             is_name_already_imported: false,\n+                            requires_import: false,\n                             is_op_method: false,\n                             is_private_editable: false,\n                             postfix_match: None,\n@@ -740,6 +748,7 @@ fn foo() { A { the$0 } }\n                             is_local: false,\n                             is_item_from_trait: false,\n                             is_name_already_imported: false,\n+                            requires_import: false,\n                             is_op_method: false,\n                             is_private_editable: false,\n                             postfix_match: None,\n@@ -1579,7 +1588,7 @@ fn main() {\n             &[CompletionItemKind::Snippet, CompletionItemKind::Method],\n             expect![[r#\"\n                 sn not [snippet]\n-                me not() (use ops::Not) [type_could_unify]\n+                me not() (use ops::Not) [type_could_unify+requires_import]\n                 sn if []\n                 sn while []\n                 sn ref []\n@@ -1621,4 +1630,32 @@ fn main() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn flyimport_reduced_relevance() {\n+        check_relevance(\n+            r#\"\n+mod std {\n+    pub mod io {\n+        pub trait BufRead {}\n+        pub struct BufReader;\n+        pub struct BufWriter;\n+    }\n+}\n+struct Buffer;\n+\n+fn f() {\n+    Buf$0\n+}\n+\"#,\n+            expect![[r#\"\n+                md std []\n+                st Buffer []\n+                fn f() []\n+                tt BufRead (use std::io::BufRead) [requires_import]\n+                st BufReader (use std::io::BufReader) [requires_import]\n+                st BufWriter (use std::io::BufWriter) [requires_import]\n+            \"#]],\n+        );\n+    }\n }"}]}