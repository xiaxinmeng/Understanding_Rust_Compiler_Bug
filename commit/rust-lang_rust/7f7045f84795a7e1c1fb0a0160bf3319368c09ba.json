{"sha": "7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNzA0NWY4NDc5NWE3ZTFjMWZiMGEwMTYwYmYzMzE5MzY4YzA5YmE=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-11-28T19:54:08Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-12-10T17:34:46Z"}, "message": "improve diagnostics for invalid external docs", "tree": {"sha": "0a7fb64cdad084d96dbeffd2fcb8b2334760be67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a7fb64cdad084d96dbeffd2fcb8b2334760be67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlwOo7YWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdFTkB/9h6Vu/sjIPJLw/vGsmIAzMaK+x\nzryaiVtN+JYoMgEG8duihi21609XkkFrZGq34ZvBhOW4EQd8r1sIjTYrjflxHesv\npSUhO9MbWFtl89IMJlZrhhrC+Hm125Kx31yQSNfeyPTgLqhw88FgqyeiVhWQsAQV\nQgBvzmvcBMTWNE0df21lNKLBNawsAySzrxlZ37mUWcc+ZfDD6w15JoX+JFyka7WU\nls14EKzPQZzh9JzTywaQp3/Bjh3XyFeIg8pzre5Uj6DSO6LgsWT53ifsik676nw4\n2ti7Ph9/2LjfcFqKPubTn6/dcTCv6J5fAUqyKyO77GTV1zQg9XemcJ6ITUUc\n=YAvV\n-----END PGP SIGNATURE-----", "payload": "tree 0a7fb64cdad084d96dbeffd2fcb8b2334760be67\nparent c3c2de964d8e20f37b696aa2bd3c1b6ae3099a58\nauthor Andy Russell <arussell123@gmail.com> 1543434848 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1544463286 -0500\n\nimprove diagnostics for invalid external docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "html_url": "https://github.com/rust-lang/rust/commit/7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c2de964d8e20f37b696aa2bd3c1b6ae3099a58", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c2de964d8e20f37b696aa2bd3c1b6ae3099a58", "html_url": "https://github.com/rust-lang/rust/commit/c3c2de964d8e20f37b696aa2bd3c1b6ae3099a58"}], "stats": {"total": 69, "additions": 49, "deletions": 20}, "files": [{"sha": "44d5ae6b40d2c012897e4d984e9d61c565d70106", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "patch": "@@ -1535,17 +1535,33 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n                             let item = attr::mk_list_item(DUMMY_SP, include_ident, include_info);\n                             items.push(dummy_spanned(ast::NestedMetaItemKind::MetaItem(item)));\n                         }\n-                        Err(ref e) if e.kind() == ErrorKind::InvalidData => {\n-                            self.cx.span_err(\n-                                at.span,\n-                                &format!(\"{} wasn't a utf-8 file\", filename.display()),\n-                            );\n-                        }\n                         Err(e) => {\n-                            self.cx.span_err(\n-                                at.span,\n-                                &format!(\"couldn't read {}: {}\", filename.display(), e),\n-                            );\n+                            let lit = it\n+                                .meta_item()\n+                                .and_then(|item| item.name_value_literal())\n+                                .unwrap();\n+\n+                            if e.kind() == ErrorKind::InvalidData {\n+                                self.cx\n+                                    .struct_span_err(\n+                                        lit.span,\n+                                        &format!(\"{} wasn't a utf-8 file\", filename.display()),\n+                                    )\n+                                    .span_label(lit.span, \"contains invalid utf-8\")\n+                                    .emit();\n+                            } else {\n+                                let mut err = self.cx.struct_span_err(\n+                                    lit.span,\n+                                    &format!(\"couldn't read {}: {}\", filename.display(), e),\n+                                );\n+                                err.span_label(lit.span, \"couldn't read file\");\n+\n+                                if e.kind() == ErrorKind::NotFound {\n+                                    err.help(\"external doc paths are relative to the crate root\");\n+                                }\n+\n+                                err.emit();\n+                            }\n                         }\n                     }\n                 } else {"}, {"sha": "dc1115b82db40a8a77bfc8509b79dbbee6f7d43a", "filename": "src/test/ui/extern/auxiliary/invalid-utf8.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/src%2Ftest%2Fui%2Fextern%2Fauxiliary%2Finvalid-utf8.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/src%2Ftest%2Fui%2Fextern%2Fauxiliary%2Finvalid-utf8.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fauxiliary%2Finvalid-utf8.txt?ref=7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "patch": "@@ -0,0 +1 @@\n+\ufffd(\n\\ No newline at end of file"}, {"sha": "e17dda65568e9139d6cdcdf190f990f3a103f25b", "filename": "src/test/ui/extern/external-doc-error.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.rs?ref=7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "patch": "@@ -2,8 +2,12 @@\n \n #![feature(external_doc)]\n \n-#[doc(include = \"not-a-file.md\")] //~ ERROR: couldn't read\n-pub struct SomeStruct;\n+#[doc(include = \"not-a-file.md\")]\n+pub struct SomeStruct; //~^ ERROR couldn't read\n+                       //~| HELP external doc paths are relative to the crate root\n+\n+#[doc(include = \"auxiliary/invalid-utf8.txt\")]\n+pub struct InvalidUtf8; //~^ ERROR wasn't a utf-8 file\n \n #[doc(include)]\n pub struct MissingPath; //~^ ERROR expected path"}, {"sha": "a3be3277de5455691be7259c318e267e9262a3c2", "filename": "src/test/ui/extern/external-doc-error.stderr", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f7045f84795a7e1c1fb0a0160bf3319368c09ba/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.stderr?ref=7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "patch": "@@ -1,32 +1,40 @@\n error: couldn't read $DIR/not-a-file.md: $FILE_NOT_FOUND_MSG (os error 2)\n-  --> $DIR/external-doc-error.rs:5:1\n+  --> $DIR/external-doc-error.rs:5:17\n    |\n-LL | #[doc(include = \"not-a-file.md\")] //~ ERROR: couldn't read\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[doc(include = \"not-a-file.md\")]\n+   |                 ^^^^^^^^^^^^^^^ couldn't read file\n+   |\n+   = help: external doc paths are relative to the crate root\n+\n+error: $DIR/auxiliary/invalid-utf8.txt wasn't a utf-8 file\n+  --> $DIR/external-doc-error.rs:9:17\n+   |\n+LL | #[doc(include = \"auxiliary/invalid-utf8.txt\")]\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ contains invalid utf-8\n \n error: expected path to external documentation\n-  --> $DIR/external-doc-error.rs:8:7\n+  --> $DIR/external-doc-error.rs:12:7\n    |\n LL | #[doc(include)]\n    |       ^^^^^^^ help: provide a file path with `=`: `include = \"<path>\"`\n \n error: expected path to external documentation\n-  --> $DIR/external-doc-error.rs:13:7\n+  --> $DIR/external-doc-error.rs:17:7\n    |\n LL | #[doc(include(\"../README.md\"))]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^ help: provide a file path with `=`: `include = \"../README.md\"`\n \n error: expected path to external documentation\n-  --> $DIR/external-doc-error.rs:18:7\n+  --> $DIR/external-doc-error.rs:22:7\n    |\n LL | #[doc(include = 123)]\n    |       ^^^^^^^^^^^^^ help: provide a file path with `=`: `include = \"<path>\"`\n \n error: expected path to external documentation\n-  --> $DIR/external-doc-error.rs:23:7\n+  --> $DIR/external-doc-error.rs:27:7\n    |\n LL | #[doc(include(123))]\n    |       ^^^^^^^^^^^^ help: provide a file path with `=`: `include = \"<path>\"`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n "}]}