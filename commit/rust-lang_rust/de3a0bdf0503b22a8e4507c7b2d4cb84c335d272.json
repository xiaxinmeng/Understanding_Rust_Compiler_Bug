{"sha": "de3a0bdf0503b22a8e4507c7b2d4cb84c335d272", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlM2EwYmRmMDUwM2IyMmE4ZTQ1MDdjN2IyZDRjYjg0YzMzNWQyNzI=", "commit": {"author": {"name": "unknown", "email": "abramlujan@gmail.com", "date": "2020-11-23T21:53:47Z"}, "committer": {"name": "unknown", "email": "abramlujan@gmail.com", "date": "2020-11-29T18:31:45Z"}, "message": "Fixes #79357 unstable or-pat suggestions", "tree": {"sha": "06559c5a08fbb4cd08f95a84cc2385d6458e31db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06559c5a08fbb4cd08f95a84cc2385d6458e31db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de3a0bdf0503b22a8e4507c7b2d4cb84c335d272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de3a0bdf0503b22a8e4507c7b2d4cb84c335d272", "html_url": "https://github.com/rust-lang/rust/commit/de3a0bdf0503b22a8e4507c7b2d4cb84c335d272", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de3a0bdf0503b22a8e4507c7b2d4cb84c335d272/comments", "author": {"login": "nico-abram", "id": 24706838, "node_id": "MDQ6VXNlcjI0NzA2ODM4", "avatar_url": "https://avatars.githubusercontent.com/u/24706838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nico-abram", "html_url": "https://github.com/nico-abram", "followers_url": "https://api.github.com/users/nico-abram/followers", "following_url": "https://api.github.com/users/nico-abram/following{/other_user}", "gists_url": "https://api.github.com/users/nico-abram/gists{/gist_id}", "starred_url": "https://api.github.com/users/nico-abram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nico-abram/subscriptions", "organizations_url": "https://api.github.com/users/nico-abram/orgs", "repos_url": "https://api.github.com/users/nico-abram/repos", "events_url": "https://api.github.com/users/nico-abram/events{/privacy}", "received_events_url": "https://api.github.com/users/nico-abram/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nico-abram", "id": 24706838, "node_id": "MDQ6VXNlcjI0NzA2ODM4", "avatar_url": "https://avatars.githubusercontent.com/u/24706838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nico-abram", "html_url": "https://github.com/nico-abram", "followers_url": "https://api.github.com/users/nico-abram/followers", "following_url": "https://api.github.com/users/nico-abram/following{/other_user}", "gists_url": "https://api.github.com/users/nico-abram/gists{/gist_id}", "starred_url": "https://api.github.com/users/nico-abram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nico-abram/subscriptions", "organizations_url": "https://api.github.com/users/nico-abram/orgs", "repos_url": "https://api.github.com/users/nico-abram/repos", "events_url": "https://api.github.com/users/nico-abram/events{/privacy}", "received_events_url": "https://api.github.com/users/nico-abram/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40624dde6cdfad2576b4d795c97583188a814884", "url": "https://api.github.com/repos/rust-lang/rust/commits/40624dde6cdfad2576b4d795c97583188a814884", "html_url": "https://github.com/rust-lang/rust/commit/40624dde6cdfad2576b4d795c97583188a814884"}], "stats": {"total": 66, "additions": 25, "deletions": 41}, "files": [{"sha": "b62c737380087d2c62fea055da988746b96ff3f7", "filename": "compiler/rustc_parse/src/parser/pat.rs", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/de3a0bdf0503b22a8e4507c7b2d4cb84c335d272/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de3a0bdf0503b22a8e4507c7b2d4cb84c335d272/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs?ref=de3a0bdf0503b22a8e4507c7b2d4cb84c335d272", "patch": "@@ -18,7 +18,7 @@ pub(super) const PARAM_EXPECTED: Expected = Some(\"parameter name\");\n const WHILE_PARSING_OR_MSG: &str = \"while parsing this or-pattern starting here\";\n \n /// Whether or not an or-pattern should be gated when occurring in the current context.\n-#[derive(PartialEq)]\n+#[derive(PartialEq, Clone, Copy)]\n pub(super) enum GateOr {\n     Yes,\n     No,\n@@ -94,7 +94,7 @@ impl<'a> Parser<'a> {\n     ) -> PResult<'a, P<Pat>> {\n         // Parse the first pattern (`p_0`).\n         let first_pat = self.parse_pat(expected)?;\n-        self.maybe_recover_unexpected_comma(first_pat.span, rc)?;\n+        self.maybe_recover_unexpected_comma(first_pat.span, rc, gate_or)?;\n \n         // If the next token is not a `|`,\n         // this is not an or-pattern and we should exit here.\n@@ -110,7 +110,7 @@ impl<'a> Parser<'a> {\n                 err.span_label(lo, WHILE_PARSING_OR_MSG);\n                 err\n             })?;\n-            self.maybe_recover_unexpected_comma(pat.span, rc)?;\n+            self.maybe_recover_unexpected_comma(pat.span, rc, gate_or)?;\n             pats.push(pat);\n         }\n         let or_pattern_span = lo.to(self.prev_token.span);\n@@ -190,7 +190,12 @@ impl<'a> Parser<'a> {\n \n     /// Some special error handling for the \"top-level\" patterns in a match arm,\n     /// `for` loop, `let`, &c. (in contrast to subpatterns within such).\n-    fn maybe_recover_unexpected_comma(&mut self, lo: Span, rc: RecoverComma) -> PResult<'a, ()> {\n+    fn maybe_recover_unexpected_comma(\n+        &mut self,\n+        lo: Span,\n+        rc: RecoverComma,\n+        gate_or: GateOr,\n+    ) -> PResult<'a, ()> {\n         if rc == RecoverComma::No || self.token != token::Comma {\n             return Ok(());\n         }\n@@ -209,18 +214,24 @@ impl<'a> Parser<'a> {\n         let seq_span = lo.to(self.prev_token.span);\n         let mut err = self.struct_span_err(comma_span, \"unexpected `,` in pattern\");\n         if let Ok(seq_snippet) = self.span_to_snippet(seq_span) {\n+            const MSG: &str = \"try adding parentheses to match on a tuple...\";\n+\n+            let or_suggestion =\n+                gate_or == GateOr::No || !self.sess.gated_spans.is_ungated(sym::or_patterns);\n             err.span_suggestion(\n                 seq_span,\n-                \"try adding parentheses to match on a tuple...\",\n+                if or_suggestion { MSG } else { MSG.trim_end_matches('.') },\n                 format!(\"({})\", seq_snippet),\n                 Applicability::MachineApplicable,\n-            )\n-            .span_suggestion(\n-                seq_span,\n-                \"...or a vertical bar to match on multiple alternatives\",\n-                seq_snippet.replace(\",\", \" |\"),\n-                Applicability::MachineApplicable,\n             );\n+            if or_suggestion {\n+                err.span_suggestion(\n+                    seq_span,\n+                    \"...or a vertical bar to match on multiple alternatives\",\n+                    seq_snippet.replace(\",\", \" |\"),\n+                    Applicability::MachineApplicable,\n+                );\n+            }\n         }\n         Err(err)\n     }"}, {"sha": "26c24d7432c4864661b8989c0efb3cf47306402d", "filename": "src/test/ui/did_you_mean/issue-48492-tuple-destructure-missing-parens.stderr", "status": "modified", "additions": 3, "deletions": 30, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/de3a0bdf0503b22a8e4507c7b2d4cb84c335d272/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-48492-tuple-destructure-missing-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de3a0bdf0503b22a8e4507c7b2d4cb84c335d272/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-48492-tuple-destructure-missing-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-48492-tuple-destructure-missing-parens.stderr?ref=de3a0bdf0503b22a8e4507c7b2d4cb84c335d272", "patch": "@@ -47,46 +47,19 @@ error: unexpected `,` in pattern\n   --> $DIR/issue-48492-tuple-destructure-missing-parens.rs:67:10\n    |\n LL |     for x, _barr_body in women.iter().map(|woman| woman.allosomes.clone()) {\n-   |          ^\n-   |\n-help: try adding parentheses to match on a tuple...\n-   |\n-LL |     for (x, _barr_body) in women.iter().map(|woman| woman.allosomes.clone()) {\n-   |         ^^^^^^^^^^^^^^^\n-help: ...or a vertical bar to match on multiple alternatives\n-   |\n-LL |     for x | _barr_body in women.iter().map(|woman| woman.allosomes.clone()) {\n-   |         ^^^^^^^^^^^^^^\n+   |         -^----------- help: try adding parentheses to match on a tuple: `(x, _barr_body)`\n \n error: unexpected `,` in pattern\n   --> $DIR/issue-48492-tuple-destructure-missing-parens.rs:75:10\n    |\n LL |     for x, y @ Allosome::Y(_) in men.iter().map(|man| man.allosomes.clone()) {\n-   |          ^\n-   |\n-help: try adding parentheses to match on a tuple...\n-   |\n-LL |     for (x, y @ Allosome::Y(_)) in men.iter().map(|man| man.allosomes.clone()) {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-help: ...or a vertical bar to match on multiple alternatives\n-   |\n-LL |     for x | y @ Allosome::Y(_) in men.iter().map(|man| man.allosomes.clone()) {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |         -^------------------- help: try adding parentheses to match on a tuple: `(x, y @ Allosome::Y(_))`\n \n error: unexpected `,` in pattern\n   --> $DIR/issue-48492-tuple-destructure-missing-parens.rs:84:14\n    |\n LL |     let women, men: (Vec<Genome>, Vec<Genome>) = genomes.iter().cloned()\n-   |              ^\n-   |\n-help: try adding parentheses to match on a tuple...\n-   |\n-LL |     let (women, men): (Vec<Genome>, Vec<Genome>) = genomes.iter().cloned()\n-   |         ^^^^^^^^^^^^\n-help: ...or a vertical bar to match on multiple alternatives\n-   |\n-LL |     let women | men: (Vec<Genome>, Vec<Genome>) = genomes.iter().cloned()\n-   |         ^^^^^^^^^^^\n+   |         -----^---- help: try adding parentheses to match on a tuple: `(women, men)`\n \n error: aborting due to 6 previous errors\n "}]}