{"sha": "ab0bb0956d1d3cbf67ace0c9c215a1730400b2de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMGJiMDk1NmQxZDNjYmY2N2FjZTBjOWMyMTVhMTczMDQwMGIyZGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-06-11T01:59:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-06-18T20:59:30Z"}, "message": "Update RELEASES.md for 1.1", "tree": {"sha": "da6470f8c1bd49c8a373211ac2f79cb6ec6333b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da6470f8c1bd49c8a373211ac2f79cb6ec6333b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab0bb0956d1d3cbf67ace0c9c215a1730400b2de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab0bb0956d1d3cbf67ace0c9c215a1730400b2de", "html_url": "https://github.com/rust-lang/rust/commit/ab0bb0956d1d3cbf67ace0c9c215a1730400b2de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab0bb0956d1d3cbf67ace0c9c215a1730400b2de/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff207f1c9112f000602962537ed6b258515bd55c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff207f1c9112f000602962537ed6b258515bd55c", "html_url": "https://github.com/rust-lang/rust/commit/ff207f1c9112f000602962537ed6b258515bd55c"}], "stats": {"total": 107, "additions": 101, "deletions": 6}, "files": [{"sha": "9932684a34cc4cede06cdcb96bcd403c68390503", "filename": "RELEASES.md", "status": "modified", "additions": 101, "deletions": 6, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/ab0bb0956d1d3cbf67ace0c9c215a1730400b2de/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/ab0bb0956d1d3cbf67ace0c9c215a1730400b2de/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=ab0bb0956d1d3cbf67ace0c9c215a1730400b2de", "patch": "@@ -1,10 +1,10 @@\n-Version 1.1.0 (July 2015)\n-========================\n+Version 1.1.0 (June 2015)\n+=========================\n \n-* NNNN changes, numerous bugfixes\n+* ~850 changes, numerous bugfixes\n \n-Libraries\n----------\n+Highlights\n+----------\n \n * The [`std::fs` module has been expanded][fs-expand] to expand the set of\n   functionality exposed:\n@@ -13,8 +13,103 @@ Libraries\n   * A `symlink_metadata` function has been added.\n   * The `fs::Metadata` structure now lowers to its OS counterpart, providing\n     access to all underlying information.\n+* The compiler contains extended explanations of many errors.  When it\n+  emits such an error it also suggests using the `--explain` flag to\n+  read the extended explanations, which are also [cataloged on the web\n+  site][err].\n+* Thanks to multiple [improvements][sk] to [type checking][pre], as\n+  well as other work, the time to bootstrap the compiler decreased by\n+  32%.\n+\n+Libraries\n+---------\n+\n+* The `str::split_whitespace` method splits a string on unicode\n+  whitespace boundaries.\n+* On both Windows and Unix, new extension traits provide conversion of\n+  I/O types to and from the underlying system handles. On Unix, these\n+  traits are [`FrowRawFd`] and [`AsRawFd`], on Windows `FromRawHandle`\n+  and `AsRawHandle`. These are implemented for `File`, `TcpStream`,\n+  `TcpListener`, and `UpdSocket`. Further implementations for\n+  `std::process` will be stabilized later.\n+* On Unix, [`std::os::unix::symlink`] creates symlinks. On\n+  Windows, symlinks can be created with\n+  `std::os::windows::symlink_dir` and\n+  `std::os::windows::symlink_file`.\n+* The `mpsc::Receiver` type can now be converted into an iterator with\n+  `into_iter` on the [`IntoIterator`] trait.\n+* `Ipv4Addr` can be created from `u32` with the `From<u32>`\n+  implementation of the [`From`] trait.\n+* The `Debug` implementation for `RangeFull` [creates output that is\n+  more consistent with other implementations][rf].\n+* [`Debug` is implemented for `File`][file].\n+* The `Default` implementation for `Arc` [no longer requires `Sync +\n+  Send`][arc].\n+* [The `Iterator` methods `count`, `nth`, and `last` have been\n+  overridden for slices to have O(1) performance instead of O(n)][si].\n+* Incorrect handling of paths on Windows has been improved in both the\n+  compiler and the standard library.\n+* [`AtomicPtr` gained a `Default` implementation][ap].\n+* In accordance with Rust's policy on arithmetic overflow `abs` now\n+  [panics on overflow when debug assertions are enabled][abs].\n+* The [`Cloned`] iterator, which was accidentally left unstable for\n+  1.0 [has been stabilized][c].\n+* The [`Incoming`] iterator, which iterates over incoming TCP\n+  connections, and which was accidentally unnamable in 1.0, [is now\n+  properly exported][inc].\n+* [`BinaryHeap`] no longer corrupts itself [when functions called by\n+  `sift_up` or `sift_down` panic][bh].\n+* The [`split_off`] method of `LinkedList` [no longer corrupts\n+  the list in certain scenarios][ll].\n+\n+Misc\n+----\n \n-[fs-expand]: https://github.com/rust-lang/rust/pull/25844\n+* Type checking performance [has improved notably][sk] with\n+  [multiple improvements][pre].\n+* The compiler [suggests code changes][ch] for more errors.\n+* rustc and it's build system have experimental support for [building\n+  toolchains against MUSL][m] instead of glibc on Linux.\n+* The compiler defines the `target_env` cfg value, which is used for\n+  distinguishing toolchains that are otherwise for the same\n+  platform. Presently this is set to `gnu` for common GNU Linux\n+  targets and for MinGW targets, and `musl` for MUSL Linux targets.\n+* The [`cargo rustc`][crc] command invokes a build with custom flags\n+  to rustc.\n+* [Android executables are always position independent][pie].\n+* [The `drop_with_repr_extern` lint warns about mixing `repr(C)`\n+  with `Drop`][drop].\n+\n+[`split_whitespace`]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.split_whitespace\n+[`Iterator::cloned`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.cloned\n+[`FromRawFd`]: http://doc.rust-lang.org/nightly/std/os/unix/io/trait.FromRawFd.html\n+[`AsRawFd`]: http://doc.rust-lang.org/nightly/std/os/unix/io/trait.AsRawFd.html\n+[`std::os::unix::symlink`]: http://doc.rust-lang.org/nightly/std/os/unix/fs/fn.symlink.html\n+[`IntoIterator`]: http://doc.rust-lang.org/nightly/std/iter/trait.IntoIterator.html\n+[`From`]: http://doc.rust-lang.org/nightly/std/convert/trait.From.html\n+[rf]: https://github.com/rust-lang/rust/pull/24491\n+[err]: http://doc.rust-lang.org/error-index.html\n+[sk]: https://github.com/rust-lang/rust/pull/24615\n+[pre]: https://github.com/rust-lang/rust/pull/25323\n+[file]: https://github.com/rust-lang/rust/pull/24598\n+[ch]: https://github.com/rust-lang/rust/pull/24683\n+[arc]: https://github.com/rust-lang/rust/pull/24695\n+[si]: https://github.com/rust-lang/rust/pull/24701\n+[ap]: https://github.com/rust-lang/rust/pull/24834\n+[m]: https://github.com/rust-lang/rust/pull/24777\n+[fs]: https://github.com/rust-lang/rfcs/blob/master/text/1044-io-fs-2.1.md\n+[crc]: https://github.com/rust-lang/cargo/pull/1568\n+[pie]: https://github.com/rust-lang/rust/pull/24953\n+[abs]: https://github.com/rust-lang/rust/pull/25441\n+[c]: https://github.com/rust-lang/rust/pull/25496\n+[`Cloned`]: http://doc.rust-lang.org/nightly/std/iter/struct.Cloned.html\n+[`Incoming`]: http://doc.rust-lang.org/nightly/std/net/struct.Incoming.html\n+[inc]: https://github.com/rust-lang/rust/pull/25522\n+[bh]: https://github.com/rust-lang/rust/pull/25856\n+[`BinaryHeap`]: http://doc.rust-lang.org/nightly/std/collections/struct.BinaryHeap.html\n+[ll]: https://github.com/rust-lang/rust/pull/26022\n+[`split_off`]: http://doc.rust-lang.org/nightly/collections/linked_list/struct.LinkedList.html#method.split_off\n+[drop]: https://github.com/rust-lang/rust/pull/24935\n \n Version 1.0.0 (May 2015)\n ========================"}]}