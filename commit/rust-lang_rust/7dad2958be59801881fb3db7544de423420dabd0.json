{"sha": "7dad2958be59801881fb3db7544de423420dabd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYWQyOTU4YmU1OTgwMTg4MWZiM2RiNzU0NGRlNDIzNDIwZGFiZDA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-27T20:34:56Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-27T20:34:56Z"}, "message": "Review comments\n\n- Fix typo\n- Add docstring\n- Remove spurious test output file", "tree": {"sha": "ace1eaa5232386ab2a5fe7532804b1adaee1be89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ace1eaa5232386ab2a5fe7532804b1adaee1be89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dad2958be59801881fb3db7544de423420dabd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dad2958be59801881fb3db7544de423420dabd0", "html_url": "https://github.com/rust-lang/rust/commit/7dad2958be59801881fb3db7544de423420dabd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dad2958be59801881fb3db7544de423420dabd0/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c13a913e5b4136ecb81ec835586e596ecef1a4b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c13a913e5b4136ecb81ec835586e596ecef1a4b3", "html_url": "https://github.com/rust-lang/rust/commit/c13a913e5b4136ecb81ec835586e596ecef1a4b3"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "02a36a372d9ef3354aab83d9e93dcb9afa1039fc", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7dad2958be59801881fb3db7544de423420dabd0/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dad2958be59801881fb3db7544de423420dabd0/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=7dad2958be59801881fb3db7544de423420dabd0", "patch": "@@ -632,6 +632,28 @@ impl<'hir> Map<'hir> {\n         }\n     }\n \n+    /// Retrieve the NodeId for `id`'s enclosing method, unless there's a\n+    /// `while` or `loop` before reacing it, as block tail returns are not\n+    /// available in them.\n+    ///\n+    /// ```\n+    /// fn foo(x: usize) -> bool {\n+    ///     if x == 1 {\n+    ///         true  // `get_return_block` gets passed the `id` corresponding\n+    ///     } else {  // to this, it will return `foo`'s `NodeId`.\n+    ///         false\n+    ///     }\n+    /// }\n+    /// ```\n+    ///\n+    /// ```\n+    /// fn foo(x: usize) -> bool {\n+    ///     loop {\n+    ///         true  // `get_return_block` gets passed the `id` corresponding\n+    ///     }         // to this, it will return `None`.\n+    ///     false\n+    /// }\n+    /// ```\n     pub fn get_return_block(&self, id: NodeId) -> Option<NodeId> {\n         let match_fn = |node: &Node| {\n             match *node {"}, {"sha": "cba930d312f8e8511e2f8298660a9664243800c9", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7dad2958be59801881fb3db7544de423420dabd0/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dad2958be59801881fb3db7544de423420dabd0/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=7dad2958be59801881fb3db7544de423420dabd0", "patch": "@@ -4214,7 +4214,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         ty\n     }\n \n-    /// Given a `NodeId`, return the `FnDecl` of the method it is enclosed by and wether it is\n+    /// Given a `NodeId`, return the `FnDecl` of the method it is enclosed by and whether it is\n     /// `fn main` if it is a method, `None` otherwise.\n     pub fn get_fn_decl(&self, blk_id: ast::NodeId) -> Option<(hir::FnDecl, bool)> {\n         // Get enclosing Fn, if it is a function or a trait method, unless there's a `loop` or\n@@ -4227,7 +4227,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             }) = parent {\n                 decl.clone().and_then(|decl| {\n                     // This is less than ideal, it will not present the return type span on any\n-                    // method called `main`, regardless of wether it is actually the entry point.\n+                    // method called `main`, regardless of whether it is actually the entry point.\n                     Some((decl, name == Symbol::intern(\"main\")))\n                 })\n             } else if let Node::NodeTraitItem(&hir::TraitItem {"}, {"sha": "8a0d7a335d6afb17d238246bb46ae44f6797ed25", "filename": "src/test/ui/block-result/expected-return-on-unit.stderr", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fexpected-return-on-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c13a913e5b4136ecb81ec835586e596ecef1a4b3/src%2Ftest%2Fui%2Fblock-result%2Fexpected-return-on-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fexpected-return-on-unit.stderr?ref=c13a913e5b4136ecb81ec835586e596ecef1a4b3", "patch": "@@ -1,4 +0,0 @@\n-error[E0601]: main function not found\n-\n-error: aborting due to previous error(s)\n-"}]}