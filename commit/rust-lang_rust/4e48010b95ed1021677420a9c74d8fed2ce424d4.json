{"sha": "4e48010b95ed1021677420a9c74d8fed2ce424d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNDgwMTBiOTVlZDEwMjE2Nzc0MjBhOWM3NGQ4ZmVkMmNlNDI0ZDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-13T07:21:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-13T07:21:31Z"}, "message": "Auto merge of #76588 - guswynn:debug_logging, r=jyn514,Mark-Simulacrum\n\nAdd a dedicated debug-logging option to config.toml\n\n`@Mark-Simulacrum` and I were talking in zulip and we found that turning on debug/trace logging in rustc is fairly confusing, as it effectively depends on debug-assertions and is not documented as such. `@Mark-Simulacrum` mentioned that we should probably have a separate option for logging anyways.\n\nthis diff adds that, having the option follow debug-assertions (so everyone's existing config.toml should be fine) and if the option is false\n\nto test I ran ./x.py test <something> twice, once with `debug-logging = false` and once with `debug-logging = true` and made sure i only saw trace's when it was true", "tree": {"sha": "19772ae7c0cc277d07927927b4e806159f361470", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19772ae7c0cc277d07927927b4e806159f361470"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e48010b95ed1021677420a9c74d8fed2ce424d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e48010b95ed1021677420a9c74d8fed2ce424d4", "html_url": "https://github.com/rust-lang/rust/commit/4e48010b95ed1021677420a9c74d8fed2ce424d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e48010b95ed1021677420a9c74d8fed2ce424d4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd33766e4a9a918058c3447d42491e874e21f7cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd33766e4a9a918058c3447d42491e874e21f7cc", "html_url": "https://github.com/rust-lang/rust/commit/dd33766e4a9a918058c3447d42491e874e21f7cc"}, {"sha": "0be66d7f30ba31638e14c00bd2303dd0327964f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0be66d7f30ba31638e14c00bd2303dd0327964f4", "html_url": "https://github.com/rust-lang/rust/commit/0be66d7f30ba31638e14c00bd2303dd0327964f4"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "6e6c0c71a1f3b61c438515ab51e93137f6739289", "filename": "compiler/rustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4e48010b95ed1021677420a9c74d8fed2ce424d4/compiler%2Frustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4e48010b95ed1021677420a9c74d8fed2ce424d4/compiler%2Frustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc%2FCargo.toml?ref=4e48010b95ed1021677420a9c74d8fed2ce424d4", "patch": "@@ -19,3 +19,4 @@ features = ['unprefixed_malloc_on_supported_platforms']\n [features]\n jemalloc = ['jemalloc-sys']\n llvm = ['rustc_driver/llvm']\n+max_level_info = ['rustc_driver/max_level_info']"}, {"sha": "adfce1008e1ed01ea37b37a526d57fd71ef6615e", "filename": "compiler/rustc_driver/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e48010b95ed1021677420a9c74d8fed2ce424d4/compiler%2Frustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4e48010b95ed1021677420a9c74d8fed2ce424d4/compiler%2Frustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2FCargo.toml?ref=4e48010b95ed1021677420a9c74d8fed2ce424d4", "patch": "@@ -9,7 +9,7 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n libc = \"0.2\"\n-tracing = { version = \"0.1.18\", features = [\"release_max_level_info\"]  }\n+tracing = { version = \"0.1.18\" }\n tracing-subscriber = { version = \"0.2.10\", default-features = false, features = [\"fmt\", \"env-filter\", \"smallvec\", \"parking_lot\", \"ansi\"] }\n rustc_middle = { path = \"../rustc_middle\" }\n rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }\n@@ -38,3 +38,4 @@ winapi = { version = \"0.3\", features = [\"consoleapi\", \"debugapi\", \"processenv\"]\n \n [features]\n llvm = ['rustc_interface/llvm']\n+max_level_info = ['tracing/max_level_info']"}, {"sha": "39c94d41e3a7f5f65c82a3e74c1c2d56425adc0b", "filename": "config.toml.example", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4e48010b95ed1021677420a9c74d8fed2ce424d4/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/4e48010b95ed1021677420a9c74d8fed2ce424d4/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=4e48010b95ed1021677420a9c74d8fed2ce424d4", "patch": "@@ -337,13 +337,19 @@\n # binary, otherwise they are omitted.\n #\n # Defaults to rust.debug value\n-#debug-assertions = false\n+#debug-assertions = debug\n \n # Whether or not debug assertions are enabled for the standard library.\n # Overrides the `debug-assertions` option, if defined.\n #\n # Defaults to rust.debug-assertions value\n-#debug-assertions-std = false\n+#debug-assertions-std = debug-assertions\n+\n+# Whether or not to leave debug! and trace! calls in the rust binary.\n+# Overrides the `debug-assertions` option, if defined.\n+# \n+# Defaults to rust.debug-assertions value\n+#debug-logging = debug-assertions\n \n # Debuginfo level for most of Rust code, corresponds to the `-C debuginfo=N` option of `rustc`.\n # `0` - no debug info"}, {"sha": "7c8c729b5bfab56021247432c4dc0a1efd6280e3", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e48010b95ed1021677420a9c74d8fed2ce424d4/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e48010b95ed1021677420a9c74d8fed2ce424d4/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=4e48010b95ed1021677420a9c74d8fed2ce424d4", "patch": "@@ -112,6 +112,7 @@ pub struct Config {\n     pub rust_codegen_units_std: Option<u32>,\n     pub rust_debug_assertions: bool,\n     pub rust_debug_assertions_std: bool,\n+    pub rust_debug_logging: bool,\n     pub rust_debuginfo_level_rustc: u32,\n     pub rust_debuginfo_level_std: u32,\n     pub rust_debuginfo_level_tools: u32,\n@@ -392,6 +393,7 @@ struct Rust {\n     codegen_units_std: Option<u32>,\n     debug_assertions: Option<bool>,\n     debug_assertions_std: Option<bool>,\n+    debug_logging: Option<bool>,\n     debuginfo_level: Option<u32>,\n     debuginfo_level_rustc: Option<u32>,\n     debuginfo_level_std: Option<u32>,\n@@ -600,6 +602,7 @@ impl Config {\n         let mut debug = None;\n         let mut debug_assertions = None;\n         let mut debug_assertions_std = None;\n+        let mut debug_logging = None;\n         let mut debuginfo_level = None;\n         let mut debuginfo_level_rustc = None;\n         let mut debuginfo_level_std = None;\n@@ -680,6 +683,7 @@ impl Config {\n             debug = rust.debug;\n             debug_assertions = rust.debug_assertions;\n             debug_assertions_std = rust.debug_assertions_std;\n+            debug_logging = rust.debug_logging;\n             debuginfo_level = rust.debuginfo_level;\n             debuginfo_level_rustc = rust.debuginfo_level_rustc;\n             debuginfo_level_std = rust.debuginfo_level_std;\n@@ -797,6 +801,8 @@ impl Config {\n         config.rust_debug_assertions_std =\n             debug_assertions_std.unwrap_or(config.rust_debug_assertions);\n \n+        config.rust_debug_logging = debug_logging.unwrap_or(config.rust_debug_assertions);\n+\n         let with_defaults = |debuginfo_level_specific: Option<u32>| {\n             debuginfo_level_specific.or(debuginfo_level).unwrap_or(if debug == Some(true) {\n                 1"}, {"sha": "91b85f5af1d4bd39e64a4b3cb2bb2355cc236bb5", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4e48010b95ed1021677420a9c74d8fed2ce424d4/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e48010b95ed1021677420a9c74d8fed2ce424d4/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=4e48010b95ed1021677420a9c74d8fed2ce424d4", "patch": "@@ -541,6 +541,16 @@ impl Build {\n         if self.config.llvm_enabled() {\n             features.push_str(\" llvm\");\n         }\n+\n+        // If debug logging is on, then we want the default for tracing:\n+        // https://github.com/tokio-rs/tracing/blob/3dd5c03d907afdf2c39444a29931833335171554/tracing/src/level_filters.rs#L26\n+        // which is everything (including debug/trace/etc.)\n+        // if its unset, if debug_assertions is on, then debug_logging will also be on\n+        // as well as tracing *ignoring* this feature when debug_assertions is on\n+        if !self.config.rust_debug_logging {\n+            features.push_str(\" max_level_info\");\n+        }\n+\n         features\n     }\n "}]}