{"sha": "65c36f6e386cd3fad6515e66ddc4721328ae6ef9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YzM2ZjZlMzg2Y2QzZmFkNjUxNWU2NmRkYzQ3MjEzMjhhZTZlZjk=", "commit": {"author": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-05-01T10:07:17Z"}, "committer": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-05-01T11:52:43Z"}, "message": "Wrap try_validation_pat! args in format_args!", "tree": {"sha": "026d6d23e0c6b3abf0a119e5c520c2afe8d8344a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/026d6d23e0c6b3abf0a119e5c520c2afe8d8344a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65c36f6e386cd3fad6515e66ddc4721328ae6ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65c36f6e386cd3fad6515e66ddc4721328ae6ef9", "html_url": "https://github.com/rust-lang/rust/commit/65c36f6e386cd3fad6515e66ddc4721328ae6ef9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65c36f6e386cd3fad6515e66ddc4721328ae6ef9/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "425a99f1eb233659403329fb4f117b1d39c7362c", "url": "https://api.github.com/repos/rust-lang/rust/commits/425a99f1eb233659403329fb4f117b1d39c7362c", "html_url": "https://github.com/rust-lang/rust/commit/425a99f1eb233659403329fb4f117b1d39c7362c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "731f6e6aede3765df57156930d1c94ec79dd4225", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/65c36f6e386cd3fad6515e66ddc4721328ae6ef9/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65c36f6e386cd3fad6515e66ddc4721328ae6ef9/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=65c36f6e386cd3fad6515e66ddc4721328ae6ef9", "patch": "@@ -42,7 +42,7 @@ macro_rules! throw_validation_failure {\n macro_rules! try_validation {\n     ($e:expr, $what:expr, $where:expr $(, $expected:expr )?) => {{\n         try_validation_pat!($e, $where, {\n-            _ => { $what } $( expected { $expected } )?,\n+            _ => { \"{}\", $what } $( expected { $expected } )?,\n         })\n     }};\n }\n@@ -67,12 +67,12 @@ macro_rules! try_validation {\n /// ```\n ///\n macro_rules! try_validation_pat {\n-    ($e:expr, $where:expr, { $( $p:pat )|* => { $what:tt } $( expected { $expected:expr } )? $( , )?}) => {{\n+    ($e:expr, $where:expr, { $( $p:pat )|* => { $( $what_fmt:expr ),* } $( expected { $expected:expr } )? $( , )?}) => {{\n         match $e {\n             Ok(x) => x,\n             // We catch the error and turn it into a validation failure. We are okay with\n             // allocation here as this can only slow down builds that fail anyway.\n-            $( Err(InterpErrorInfo { kind: $p, .. }) )|* => throw_validation_failure!($what, $where $(, $expected)?),\n+            $( Err(InterpErrorInfo { kind: $p, .. }) )|* => throw_validation_failure!(format_args!($( $what_fmt ),*), $where $(, $expected)?),\n             #[allow(unreachable_patterns)]\n             Err(e) => Err::<!, _>(e)?,\n         }"}]}