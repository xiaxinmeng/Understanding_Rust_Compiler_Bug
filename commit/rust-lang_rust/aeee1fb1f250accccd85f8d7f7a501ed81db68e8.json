{"sha": "aeee1fb1f250accccd85f8d7f7a501ed81db68e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZWUxZmIxZjI1MGFjY2NjZDg1ZjhkN2Y3YTUwMWVkODFkYjY4ZTg=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-05-10T13:57:15Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-05-10T14:08:22Z"}, "message": "syntax_pos: Optimize symbol interner pre-filling slightly", "tree": {"sha": "f0c0bcd0b25b948b85e0e5674f4409a8a98270b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0c0bcd0b25b948b85e0e5674f4409a8a98270b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeee1fb1f250accccd85f8d7f7a501ed81db68e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeee1fb1f250accccd85f8d7f7a501ed81db68e8", "html_url": "https://github.com/rust-lang/rust/commit/aeee1fb1f250accccd85f8d7f7a501ed81db68e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeee1fb1f250accccd85f8d7f7a501ed81db68e8/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ac53da03dad79655e2f3e65a58f94a2f3314d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac53da03dad79655e2f3e65a58f94a2f3314d5f", "html_url": "https://github.com/rust-lang/rust/commit/0ac53da03dad79655e2f3e65a58f94a2f3314d5f"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "23ab3e2bf94568b1793835bff71af79b5c016464", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/aeee1fb1f250accccd85f8d7f7a501ed81db68e8/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeee1fb1f250accccd85f8d7f7a501ed81db68e8/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=aeee1fb1f250accccd85f8d7f7a501ed81db68e8", "patch": "@@ -453,15 +453,16 @@ pub struct Interner {\n impl Interner {\n     fn prefill(init: &[&str]) -> Self {\n         let mut this = Interner::default();\n-        for &string in init {\n-            if string == \"\" {\n-                // We can't allocate empty strings in the arena, so handle this here.\n-                let name = Symbol::new(this.strings.len() as u32);\n-                this.names.insert(\"\", name);\n-                this.strings.push(\"\");\n-            } else {\n-                this.intern(string);\n-            }\n+        this.names.reserve(init.len());\n+        this.strings.reserve(init.len());\n+\n+        // We can't allocate empty strings in the arena, so handle this here.\n+        assert!(keywords::Invalid.name().as_u32() == 0 && init[0].is_empty());\n+        this.names.insert(\"\", keywords::Invalid.name());\n+        this.strings.push(\"\");\n+\n+        for string in &init[1..] {\n+            this.intern(string);\n         }\n         this\n     }"}]}