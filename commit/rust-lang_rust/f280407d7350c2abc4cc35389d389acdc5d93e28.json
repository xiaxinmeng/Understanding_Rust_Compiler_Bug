{"sha": "f280407d7350c2abc4cc35389d389acdc5d93e28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyODA0MDdkNzM1MGMyYWJjNGNjMzUzODlkMzg5YWNkYzVkOTNlMjg=", "commit": {"author": {"name": "Jacek Generowicz", "email": "jacg@my-post-office.net", "date": "2020-06-10T18:32:29Z"}, "committer": {"name": "Jacek Generowicz", "email": "jacg@my-post-office.net", "date": "2020-06-10T18:32:29Z"}, "message": "Fix parser test directory name in dev docs", "tree": {"sha": "e993542f8cbcb2036b9c5791f37c206ee24b7e0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e993542f8cbcb2036b9c5791f37c206ee24b7e0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f280407d7350c2abc4cc35389d389acdc5d93e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f280407d7350c2abc4cc35389d389acdc5d93e28", "html_url": "https://github.com/rust-lang/rust/commit/f280407d7350c2abc4cc35389d389acdc5d93e28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f280407d7350c2abc4cc35389d389acdc5d93e28/comments", "author": {"login": "jacg", "id": 2570854, "node_id": "MDQ6VXNlcjI1NzA4NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2570854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacg", "html_url": "https://github.com/jacg", "followers_url": "https://api.github.com/users/jacg/followers", "following_url": "https://api.github.com/users/jacg/following{/other_user}", "gists_url": "https://api.github.com/users/jacg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacg/subscriptions", "organizations_url": "https://api.github.com/users/jacg/orgs", "repos_url": "https://api.github.com/users/jacg/repos", "events_url": "https://api.github.com/users/jacg/events{/privacy}", "received_events_url": "https://api.github.com/users/jacg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jacg", "id": 2570854, "node_id": "MDQ6VXNlcjI1NzA4NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2570854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacg", "html_url": "https://github.com/jacg", "followers_url": "https://api.github.com/users/jacg/followers", "following_url": "https://api.github.com/users/jacg/following{/other_user}", "gists_url": "https://api.github.com/users/jacg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacg/subscriptions", "organizations_url": "https://api.github.com/users/jacg/orgs", "repos_url": "https://api.github.com/users/jacg/repos", "events_url": "https://api.github.com/users/jacg/events{/privacy}", "received_events_url": "https://api.github.com/users/jacg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96309ba4a1bbbffd1c03f50a21bb68526550b925", "url": "https://api.github.com/repos/rust-lang/rust/commits/96309ba4a1bbbffd1c03f50a21bb68526550b925", "html_url": "https://github.com/rust-lang/rust/commit/96309ba4a1bbbffd1c03f50a21bb68526550b925"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ef5ffbf597ae9a9aad9275e7e68809f23a54bc95", "filename": "docs/dev/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f280407d7350c2abc4cc35389d389acdc5d93e28/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/f280407d7350c2abc4cc35389d389acdc5d93e28/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=f280407d7350c2abc4cc35389d389acdc5d93e28", "patch": "@@ -308,7 +308,7 @@ The results are 100% Rust specific though.\n Test for parser (`ra_parser`) live in `ra_syntax` crate (see `test_data` direcotory).\n There are two kinds of tests:\n \n-* Manually written test cases in `parser/ok` and `parser/error`\n+* Manually written test cases in `parser/ok` and `parser/err`\n * \"Inline\" tests in `parser/inline` (these are generated) from comments in `ra_parser` crate.\n \n The purpose of inline tests is not to achieve full coverage by test cases, but to explain to the reader of the code what each particular `if` and `match` is responsible for."}]}