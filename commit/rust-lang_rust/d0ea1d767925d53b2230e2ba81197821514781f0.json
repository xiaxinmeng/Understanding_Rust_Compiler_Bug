{"sha": "d0ea1d767925d53b2230e2ba81197821514781f0", "node_id": "C_kwDOAAsO6NoAKGQwZWExZDc2NzkyNWQ1M2IyMjMwZTJiYTgxMTk3ODIxNTE0NzgxZjA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-22T03:02:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-22T03:02:50Z"}, "message": "Auto merge of #100671 - Xiretza:tidy-fluent-files, r=davidtwco\n\ntidy: check fluent files for style\n\nInspired by https://github.com/rust-lang/rust/pull/100651#discussion_r947600576\n\nThere were a lot of line length violations, so I've excepted that lint - I'm not sure if fluent files can be formatted to avoid long lines at all.", "tree": {"sha": "00c8c6d8dfc3b486297969abb3a3427a8f9889aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00c8c6d8dfc3b486297969abb3a3427a8f9889aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0ea1d767925d53b2230e2ba81197821514781f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0ea1d767925d53b2230e2ba81197821514781f0", "html_url": "https://github.com/rust-lang/rust/commit/d0ea1d767925d53b2230e2ba81197821514781f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0ea1d767925d53b2230e2ba81197821514781f0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ce46b74aa3968b459cff3ce5c0d4f13e220b217", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce46b74aa3968b459cff3ce5c0d4f13e220b217", "html_url": "https://github.com/rust-lang/rust/commit/3ce46b74aa3968b459cff3ce5c0d4f13e220b217"}, {"sha": "295457192d100b62fa2c6148ad6b98b2b619937d", "url": "https://api.github.com/repos/rust-lang/rust/commits/295457192d100b62fa2c6148ad6b98b2b619937d", "html_url": "https://github.com/rust-lang/rust/commit/295457192d100b62fa2c6148ad6b98b2b619937d"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "a96fe7c8a05d58710c3dbe36b4111d3dc3225e8d", "filename": "compiler/rustc_error_messages/locales/en-US/borrowck.ftl", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0ea1d767925d53b2230e2ba81197821514781f0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/d0ea1d767925d53b2230e2ba81197821514781f0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl?ref=d0ea1d767925d53b2230e2ba81197821514781f0", "patch": "@@ -13,6 +13,6 @@ borrowck_could_not_normalize =\n \n borrowck_higher_ranked_subtype_error =\n     higher-ranked subtype error\n-  \n-generic_does_not_live_long_enough =\n-    `{$kind}` does not live long enough\n\\ No newline at end of file\n+\n+borrowck_generic_does_not_live_long_enough =\n+    `{$kind}` does not live long enough"}, {"sha": "5720591154f9914e2ff3f9ada81c45edb4252118", "filename": "compiler/rustc_error_messages/locales/en-US/expand.ftl", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0ea1d767925d53b2230e2ba81197821514781f0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fexpand.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/d0ea1d767925d53b2230e2ba81197821514781f0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fexpand.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fexpand.ftl?ref=d0ea1d767925d53b2230e2ba81197821514781f0", "patch": "@@ -4,10 +4,10 @@ expand_explain_doc_comment_outer =\n expand_explain_doc_comment_inner =\n     inner doc comments expand to `#![doc = \"...\"]`, which is what this macro attempted to match\n \n-expand_expr_repeat_no_syntax_vars = \n+expand_expr_repeat_no_syntax_vars =\n     attempted to repeat an expression containing no syntax variables matched as repeating at this depth\n \n-expand_must_repeat_once = \n+expand_must_repeat_once =\n     this must repeat at least once\n \n expand_count_repetition_misplaced =\n@@ -19,4 +19,4 @@ expand_meta_var_expr_unrecognized_var =\n expand_var_still_repeating =\n     variable '{$ident}' is still repeating at this depth\n \n-expand_meta_var_dif_seq_matchers = {$msg}\n\\ No newline at end of file\n+expand_meta_var_dif_seq_matchers = {$msg}"}, {"sha": "dee58ff2fb510718c4161ec6e649db3a1bbdde98", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d0ea1d767925d53b2230e2ba81197821514781f0/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0ea1d767925d53b2230e2ba81197821514781f0/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=d0ea1d767925d53b2230e2ba81197821514781f0", "patch": "@@ -125,16 +125,13 @@ fn should_ignore(line: &str) -> bool {\n \n /// Returns `true` if `line` is allowed to be longer than the normal limit.\n fn long_line_is_ok(extension: &str, is_error_code: bool, max_columns: usize, line: &str) -> bool {\n-    if extension != \"md\" || is_error_code {\n-        if line_is_url(is_error_code, max_columns, line) || should_ignore(line) {\n-            return true;\n-        }\n-    } else if extension == \"md\" {\n+    match extension {\n+        // fluent files are allowed to be any length\n+        \"ftl\" => true,\n         // non-error code markdown is allowed to be any length\n-        return true;\n+        \"md\" if !is_error_code => true,\n+        _ => line_is_url(is_error_code, max_columns, line) || should_ignore(line),\n     }\n-\n-    false\n }\n \n enum Directive {\n@@ -230,7 +227,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n     super::walk(path, &mut skip, &mut |entry, contents| {\n         let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n-        let extensions = [\".rs\", \".py\", \".js\", \".sh\", \".c\", \".cpp\", \".h\", \".md\", \".css\"];\n+        let extensions = [\".rs\", \".py\", \".js\", \".sh\", \".c\", \".cpp\", \".h\", \".md\", \".css\", \".ftl\"];\n         if extensions.iter().all(|e| !filename.ends_with(e)) || filename.starts_with(\".#\") {\n             return;\n         }"}]}