{"sha": "6b0b41729939c3f7520e9ed86b36fba2524c7970", "node_id": "C_kwDOAAsO6NoAKDZiMGI0MTcyOTkzOWMzZjc1MjBlOWVkODZiMzZmYmEyNTI0Yzc5NzA", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-10-07T00:35:49Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-10-07T00:35:49Z"}, "message": "Let unicode-table-generator fail gracefully for bitsets\n\nThe \"Alphabetic\" property in Unicode 14 grew too big for the bitset\nrepresentation, panicking \"cannot pack 264 into 8 bits\". However, we\nwere already choosing the skiplist for that anyway, so this doesn't need\nto be a hard failure. That panic is now a returned `Err`, and then in\n`emit_codepoints` we automatically defer to skiplist.", "tree": {"sha": "d74feadcac7ebb766d1b7ecb972d15b19235dc31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d74feadcac7ebb766d1b7ecb972d15b19235dc31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b0b41729939c3f7520e9ed86b36fba2524c7970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b0b41729939c3f7520e9ed86b36fba2524c7970", "html_url": "https://github.com/rust-lang/rust/commit/6b0b41729939c3f7520e9ed86b36fba2524c7970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b0b41729939c3f7520e9ed86b36fba2524c7970/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e159d42a9a4747f4b35396d08c7d8d9913cbcf83", "url": "https://api.github.com/repos/rust-lang/rust/commits/e159d42a9a4747f4b35396d08c7d8d9913cbcf83", "html_url": "https://github.com/rust-lang/rust/commit/e159d42a9a4747f4b35396d08c7d8d9913cbcf83"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "ab8eaee9541a2891bd3c163b61b3fd7b147b406c", "filename": "src/tools/unicode-table-generator/src/raw_emitter.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6b0b41729939c3f7520e9ed86b36fba2524c7970/src%2Ftools%2Funicode-table-generator%2Fsrc%2Fraw_emitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b0b41729939c3f7520e9ed86b36fba2524c7970/src%2Ftools%2Funicode-table-generator%2Fsrc%2Fraw_emitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funicode-table-generator%2Fsrc%2Fraw_emitter.rs?ref=6b0b41729939c3f7520e9ed86b36fba2524c7970", "patch": "@@ -23,7 +23,7 @@ impl RawEmitter {\n         writeln!(&mut self.file).unwrap();\n     }\n \n-    fn emit_bitset(&mut self, ranges: &[Range<u32>]) {\n+    fn emit_bitset(&mut self, ranges: &[Range<u32>]) -> Result<(), String> {\n         let last_code_point = ranges.last().unwrap().end;\n         // bitset for every bit in the codepoint range\n         //\n@@ -44,7 +44,7 @@ impl RawEmitter {\n         let unique_words =\n             words.iter().cloned().collect::<BTreeSet<_>>().into_iter().collect::<Vec<_>>();\n         if unique_words.len() > u8::MAX as usize {\n-            panic!(\"cannot pack {} into 8 bits\", unique_words.len());\n+            return Err(format!(\"cannot pack {} into 8 bits\", unique_words.len()));\n         }\n         // needed for the chunk mapping to work\n         assert_eq!(unique_words[0], 0, \"has a zero word\");\n@@ -105,6 +105,8 @@ impl RawEmitter {\n         writeln!(&mut self.file, \"        &BITSET_MAPPING,\").unwrap();\n         writeln!(&mut self.file, \"    )\").unwrap();\n         writeln!(&mut self.file, \"}}\").unwrap();\n+\n+        Ok(())\n     }\n \n     fn emit_chunk_map(&mut self, zero_at: u8, compressed_words: &[u8], chunk_length: usize) {\n@@ -154,12 +156,12 @@ pub fn emit_codepoints(emitter: &mut RawEmitter, ranges: &[Range<u32>]) {\n     emitter.blank_line();\n \n     let mut bitset = emitter.clone();\n-    bitset.emit_bitset(&ranges);\n+    let bitset_ok = bitset.emit_bitset(&ranges).is_ok();\n \n     let mut skiplist = emitter.clone();\n     skiplist.emit_skiplist(&ranges);\n \n-    if bitset.bytes_used <= skiplist.bytes_used {\n+    if bitset_ok && bitset.bytes_used <= skiplist.bytes_used {\n         *emitter = bitset;\n         emitter.desc = String::from(\"bitset\");\n     } else {"}]}