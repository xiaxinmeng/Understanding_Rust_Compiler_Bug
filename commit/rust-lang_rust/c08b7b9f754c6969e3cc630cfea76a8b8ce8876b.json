{"sha": "c08b7b9f754c6969e3cc630cfea76a8b8ce8876b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwOGI3YjlmNzU0YzY5NjllM2NjNjMwY2ZlYTc2YThiOGNlODg3NmI=", "commit": {"author": {"name": "Nikita Baksalyar", "email": "nikita.baksalyar@gmail.com", "date": "2016-08-13T09:09:43Z"}, "committer": {"name": "Nikita Baksalyar", "email": "nikita.baksalyar@gmail.com", "date": "2016-08-20T07:19:07Z"}, "message": "Fix linker on Solaris/Illumos\n\nSolaris linker doesn't support the `--retain-symbols-file` option,\nso this patch provides version scripts as an alternative on that\nplatform.", "tree": {"sha": "5fa4bcf7360005e4b3e39b4e98c768cd04d7b3f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fa4bcf7360005e4b3e39b4e98c768cd04d7b3f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c08b7b9f754c6969e3cc630cfea76a8b8ce8876b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJXuARwAAoJED7qN4oOp1jaXaoIAKA1RvBJ6icxxrvPkBNOa3WQ\nmai9r6xwCA7cydfluUBLS8WWwAClacOPFoVZpkQkdnEOmP1ebJQW+rA33VRadfUE\n7BU/pbLVV9kmMYRBKxW9HY5vbufdR7yC1WtzywwAEpQZ9/TYeOnEY08YJ3l3A1KG\nnRZuN59nMqnIBix3qNvAjmIKi37qDTzQUg3QDa+1kTnhYaz/88pta/7cEit7ox8u\nWeT42fexyywaRCpoiVn7A/zUFiYM/GIx4++8pGavpN5jWrzibDqxqHRWNJEbfM8R\nvqTQoYAz7AnNv7vLiN773uI2keczZlpUI+f5o+ySYj43Chqj0xCmFtTk/7sIgsw=\n=uK1w\n-----END PGP SIGNATURE-----", "payload": "tree 5fa4bcf7360005e4b3e39b4e98c768cd04d7b3f2\nparent 413ada30402f823a86a75578afc63d07179f6a23\nauthor Nikita Baksalyar <nikita.baksalyar@gmail.com> 1471079383 +0500\ncommitter Nikita Baksalyar <nikita.baksalyar@gmail.com> 1471677547 +0500\n\nFix linker on Solaris/Illumos\n\nSolaris linker doesn't support the `--retain-symbols-file` option,\nso this patch provides version scripts as an alternative on that\nplatform.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c08b7b9f754c6969e3cc630cfea76a8b8ce8876b", "html_url": "https://github.com/rust-lang/rust/commit/c08b7b9f754c6969e3cc630cfea76a8b8ce8876b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c08b7b9f754c6969e3cc630cfea76a8b8ce8876b/comments", "author": {"login": "nbaksalyar", "id": 217316, "node_id": "MDQ6VXNlcjIxNzMxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/217316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbaksalyar", "html_url": "https://github.com/nbaksalyar", "followers_url": "https://api.github.com/users/nbaksalyar/followers", "following_url": "https://api.github.com/users/nbaksalyar/following{/other_user}", "gists_url": "https://api.github.com/users/nbaksalyar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbaksalyar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbaksalyar/subscriptions", "organizations_url": "https://api.github.com/users/nbaksalyar/orgs", "repos_url": "https://api.github.com/users/nbaksalyar/repos", "events_url": "https://api.github.com/users/nbaksalyar/events{/privacy}", "received_events_url": "https://api.github.com/users/nbaksalyar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbaksalyar", "id": 217316, "node_id": "MDQ6VXNlcjIxNzMxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/217316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbaksalyar", "html_url": "https://github.com/nbaksalyar", "followers_url": "https://api.github.com/users/nbaksalyar/followers", "following_url": "https://api.github.com/users/nbaksalyar/following{/other_user}", "gists_url": "https://api.github.com/users/nbaksalyar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbaksalyar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbaksalyar/subscriptions", "organizations_url": "https://api.github.com/users/nbaksalyar/orgs", "repos_url": "https://api.github.com/users/nbaksalyar/repos", "events_url": "https://api.github.com/users/nbaksalyar/events{/privacy}", "received_events_url": "https://api.github.com/users/nbaksalyar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "413ada30402f823a86a75578afc63d07179f6a23", "url": "https://api.github.com/repos/rust-lang/rust/commits/413ada30402f823a86a75578afc63d07179f6a23", "html_url": "https://github.com/rust-lang/rust/commit/413ada30402f823a86a75578afc63d07179f6a23"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "f2d5b128d270533ed9ebea7ccf17788d29e367a0", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 39, "deletions": 19, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/c08b7b9f754c6969e3cc630cfea76a8b8ce8876b/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c08b7b9f754c6969e3cc630cfea76a8b8ce8876b/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=c08b7b9f754c6969e3cc630cfea76a8b8ce8876b", "patch": "@@ -247,29 +247,49 @@ impl<'a> Linker for GnuLinker<'a> {\n             return\n         }\n \n+        let mut arg = OsString::new();\n         let path = tmpdir.join(\"list\");\n-        let prefix = if self.sess.target.target.options.is_like_osx {\n-            \"_\"\n-        } else {\n-            \"\"\n-        };\n-        let res = (|| -> io::Result<()> {\n-            let mut f = BufWriter::new(File::create(&path)?);\n-            for sym in &self.info.cdylib_exports {\n-                writeln!(f, \"{}{}\", prefix, sym)?;\n+\n+        if self.sess.target.target.options.is_like_solaris {\n+            let res = (|| -> io::Result<()> {\n+                let mut f = BufWriter::new(File::create(&path)?);\n+                writeln!(f, \"{{\\n  global:\")?;\n+                for sym in &self.info.cdylib_exports {\n+                    writeln!(f, \"    {};\", sym)?;\n+                }\n+                writeln!(f, \"\\n  local:\\n    *;\\n}};\")?;\n+                Ok(())\n+            })();\n+            if let Err(e) = res {\n+                self.sess.fatal(&format!(\"failed to write version script: {}\", e));\n             }\n-            Ok(())\n-        })();\n-        if let Err(e) = res {\n-            self.sess.fatal(&format!(\"failed to write lib.def file: {}\", e));\n-        }\n-        let mut arg = OsString::new();\n-        if self.sess.target.target.options.is_like_osx {\n-            arg.push(\"-Wl,-exported_symbols_list,\");\n+\n+            arg.push(\"-Wl,-M,\");\n+            arg.push(&path);\n         } else {\n-            arg.push(\"-Wl,--retain-symbols-file=\");\n+            let prefix = if self.sess.target.target.options.is_like_osx {\n+                \"_\"\n+            } else {\n+                \"\"\n+            };\n+            let res = (|| -> io::Result<()> {\n+                let mut f = BufWriter::new(File::create(&path)?);\n+                for sym in &self.info.cdylib_exports {\n+                    writeln!(f, \"{}{}\", prefix, sym)?;\n+                }\n+                Ok(())\n+            })();\n+            if let Err(e) = res {\n+                self.sess.fatal(&format!(\"failed to write lib.def file: {}\", e));\n+            }\n+            if self.sess.target.target.options.is_like_osx {\n+                arg.push(\"-Wl,-exported_symbols_list,\");\n+            } else {\n+                arg.push(\"-Wl,--retain-symbols-file=\");\n+            }\n+            arg.push(&path);\n         }\n-        arg.push(&path);\n+\n         self.cmd.arg(arg);\n     }\n }"}]}