{"sha": "db30a2578155472212fa81fd870c2b0506c7ecf0", "node_id": "C_kwDOAAsO6NoAKGRiMzBhMjU3ODE1NTQ3MjIxMmZhODFmZDg3MGMyYjA1MDZjN2VjZjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-16T20:36:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-16T20:36:07Z"}, "message": "Rollup merge of #103120 - petrochenkov:docice, r=GuillaumeGomez\n\nrustdoc: Do not expect `doc(primitive)` modules to always exist\n\nThe second commit fixes one more ICE by processing impls in crates loaded through the \"load all `--extern`s\" hack.\n\nFixes https://github.com/rust-lang/rust/issues/96288\nFixes https://github.com/rust-lang/rust/issues/103028", "tree": {"sha": "bdd03e472d10d1aeef013b6a6514f20054d6d828", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdd03e472d10d1aeef013b6a6514f20054d6d828"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db30a2578155472212fa81fd870c2b0506c7ecf0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjTGs3CRBK7hj4Ov3rIwAAYsIIADXMaprx2AePz6N7VEklxJmf\nLbgY7LdVdfUmx+aaJBijwPRVw3W0jvnUAKAwPS17QcTvrsTqV3LgSoYgZ84D+9+H\nlCASw50eop1WqBLhb8jhzZoGqD2T6mQOw+qOe2KWnbMPQUKxrObvPiRW8TVy9huL\nEe277hjz7xexEd91XXj7RGXf/Hf1pNZ4B+3MxxjxDyvEQzzJ4LivEtLuhbiht3y0\n+KPNlZxdF8n2GpeXfjocwAQwI289Ooevw1heK4CWDsfGTE8jHiJvYSLYnIYHKNB+\nopYiNjXo9cvlRX1xW2IHQ69X3XHB69kN5YJwqv0lRS96CWCJB1P8HpfMaSVzbjU=\n=Trui\n-----END PGP SIGNATURE-----\n", "payload": "tree bdd03e472d10d1aeef013b6a6514f20054d6d828\nparent 0602d6484b32d8a74ebefa324651259f78fc5fda\nparent dd7411d84868e415a88f12e5401abc29c257f3a4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1665952567 +0200\ncommitter GitHub <noreply@github.com> 1665952567 +0200\n\nRollup merge of #103120 - petrochenkov:docice, r=GuillaumeGomez\n\nrustdoc: Do not expect `doc(primitive)` modules to always exist\n\nThe second commit fixes one more ICE by processing impls in crates loaded through the \"load all `--extern`s\" hack.\n\nFixes https://github.com/rust-lang/rust/issues/96288\nFixes https://github.com/rust-lang/rust/issues/103028\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db30a2578155472212fa81fd870c2b0506c7ecf0", "html_url": "https://github.com/rust-lang/rust/commit/db30a2578155472212fa81fd870c2b0506c7ecf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db30a2578155472212fa81fd870c2b0506c7ecf0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0602d6484b32d8a74ebefa324651259f78fc5fda", "url": "https://api.github.com/repos/rust-lang/rust/commits/0602d6484b32d8a74ebefa324651259f78fc5fda", "html_url": "https://github.com/rust-lang/rust/commit/0602d6484b32d8a74ebefa324651259f78fc5fda"}, {"sha": "dd7411d84868e415a88f12e5401abc29c257f3a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd7411d84868e415a88f12e5401abc29c257f3a4", "html_url": "https://github.com/rust-lang/rust/commit/dd7411d84868e415a88f12e5401abc29c257f3a4"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "3513c13d522f1e06bf245ac2eee9b2ad37fdb8a4", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db30a2578155472212fa81fd870c2b0506c7ecf0/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db30a2578155472212fa81fd870c2b0506c7ecf0/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=db30a2578155472212fa81fd870c2b0506c7ecf0", "patch": "@@ -80,10 +80,10 @@ impl Res {\n         }\n     }\n \n-    fn def_id(self, tcx: TyCtxt<'_>) -> DefId {\n+    fn def_id(self, tcx: TyCtxt<'_>) -> Option<DefId> {\n         match self {\n-            Res::Def(_, id) => id,\n-            Res::Primitive(prim) => *PrimitiveType::primitive_locations(tcx).get(&prim).unwrap(),\n+            Res::Def(_, id) => Some(id),\n+            Res::Primitive(prim) => PrimitiveType::primitive_locations(tcx).get(&prim).copied(),\n         }\n     }\n \n@@ -1127,10 +1127,10 @@ impl LinkCollector<'_, '_> {\n                     }\n                 }\n \n-                Some(ItemLink {\n+                res.def_id(self.cx.tcx).map(|page_id| ItemLink {\n                     link: ori_link.link.clone(),\n                     link_text: link_text.clone(),\n-                    page_id: res.def_id(self.cx.tcx),\n+                    page_id,\n                     fragment,\n                 })\n             }"}, {"sha": "50dc26d768cd2e3c8e70535f224979efb05f89b8", "filename": "src/librustdoc/passes/collect_intra_doc_links/early.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db30a2578155472212fa81fd870c2b0506c7ecf0/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db30a2578155472212fa81fd870c2b0506c7ecf0/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs?ref=db30a2578155472212fa81fd870c2b0506c7ecf0", "patch": "@@ -48,7 +48,6 @@ pub(crate) fn early_resolve_intra_doc_links(\n     link_resolver.resolve_doc_links_local(&krate.attrs);\n     link_resolver.process_module_children_or_reexports(CRATE_DEF_ID.to_def_id());\n     visit::walk_crate(&mut link_resolver, krate);\n-    link_resolver.process_extern_impls();\n \n     // FIXME: somehow rustdoc is still missing crates even though we loaded all\n     // the known necessary crates. Load them all unconditionally until we find a way to fix this.\n@@ -58,6 +57,8 @@ pub(crate) fn early_resolve_intra_doc_links(\n         link_resolver.resolver.resolve_rustdoc_path(extern_name, TypeNS, parent_scope);\n     }\n \n+    link_resolver.process_extern_impls();\n+\n     ResolverCaches {\n         markdown_links: Some(link_resolver.markdown_links),\n         doc_link_resolutions: link_resolver.doc_link_resolutions,"}, {"sha": "e5eba1d8d48b41884039aaf2bfcee5a5b69acac3", "filename": "src/test/rustdoc/intra-doc/no-doc-primitive.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/db30a2578155472212fa81fd870c2b0506c7ecf0/src%2Ftest%2Frustdoc%2Fintra-doc%2Fno-doc-primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db30a2578155472212fa81fd870c2b0506c7ecf0/src%2Ftest%2Frustdoc%2Fintra-doc%2Fno-doc-primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fno-doc-primitive.rs?ref=db30a2578155472212fa81fd870c2b0506c7ecf0", "patch": "@@ -0,0 +1,15 @@\n+// Crate tree without a `doc(primitive)` module for primitive type linked to by a doc link.\n+\n+#![deny(rustdoc::broken_intra_doc_links)]\n+#![feature(no_core, lang_items, rustc_attrs)]\n+#![no_core]\n+#![rustc_coherence_is_core]\n+#![crate_type = \"rlib\"]\n+\n+// @has no_doc_primitive/index.html\n+//! A [`char`] and its [`char::len_utf8`].\n+impl char {\n+    pub fn len_utf8(self) -> usize {\n+        42\n+    }\n+}"}]}