{"sha": "28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YzNmNmViNDA5NTk2YmU5YzBjMGE1OWRjMWMyNmUyMTZkOWU1N2E=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-01-12T13:04:03Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-01-16T18:59:11Z"}, "message": "resolve: Point at the private item definitions in privacy errors", "tree": {"sha": "dd96f56468188a07a098129f3c3bdc10d91a05fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd96f56468188a07a098129f3c3bdc10d91a05fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "html_url": "https://github.com/rust-lang/rust/commit/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f70daa9b06882d7fb684a60160e4949d2861136", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f70daa9b06882d7fb684a60160e4949d2861136", "html_url": "https://github.com/rust-lang/rust/commit/0f70daa9b06882d7fb684a60160e4949d2861136"}], "stats": {"total": 1188, "additions": 1034, "deletions": 154}, "files": [{"sha": "20c8f78b1cf0e97e6a4427df9dae51cd36375edc", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -917,15 +917,21 @@ impl<'a> Resolver<'a> {\n         let PrivacyError { ident, binding, .. } = *privacy_error;\n         let session = &self.session;\n         let mk_struct_span_error = |is_constructor| {\n-            struct_span_err!(\n-                session,\n-                ident.span,\n-                E0603,\n-                \"{}{} `{}` is private\",\n-                binding.res().descr(),\n-                if is_constructor { \" constructor\" } else { \"\" },\n-                ident.name,\n-            )\n+            let mut descr = binding.res().descr().to_string();\n+            if is_constructor {\n+                descr += \" constructor\";\n+            }\n+\n+            let mut err =\n+                struct_span_err!(session, ident.span, E0603, \"{} `{}` is private\", descr, ident);\n+\n+            err.span_label(ident.span, &format!(\"this {} is private\", descr));\n+            err.span_note(\n+                session.source_map().def_span(binding.span),\n+                &format!(\"the {} `{}` is defined here\", descr, ident),\n+            );\n+\n+            err\n         };\n \n         let mut err = if let NameBindingKind::Res("}, {"sha": "724d04954a3c7da1a2926c17d78a364691e17172", "filename": "src/test/ui/error-codes/E0603.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: constant `PRIVATE` is private\n   --> $DIR/E0603.rs:6:17\n    |\n LL |     SomeModule::PRIVATE;\n-   |                 ^^^^^^^\n+   |                 ^^^^^^^ this constant is private\n+   |\n+note: the constant `PRIVATE` is defined here\n+  --> $DIR/E0603.rs:2:5\n+   |\n+LL |     const PRIVATE: u32 = 0x_a_bad_1dea_u32;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "9b69b3733642b4aac6d6505073c0b0f164c4e181", "filename": "src/test/ui/error-festival.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Ferror-festival.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Ferror-festival.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-festival.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -8,7 +8,13 @@ error[E0603]: constant `FOO` is private\n   --> $DIR/error-festival.rs:22:10\n    |\n LL |     foo::FOO;\n-   |          ^^^\n+   |          ^^^ this constant is private\n+   |\n+note: the constant `FOO` is defined here\n+  --> $DIR/error-festival.rs:7:5\n+   |\n+LL |     const FOO: u32 = 0;\n+   |     ^^^^^^^^^^^^^^^^^^^\n \n error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`\n   --> $DIR/error-festival.rs:12:5"}, {"sha": "8160775ab589eeebe1e4598a4eb7a5abc1316dfa", "filename": "src/test/ui/export-import.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fexport-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fexport-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-import.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: function `unexported` is private\n   --> $DIR/export-import.rs:1:8\n    |\n LL | use m::unexported;\n-   |        ^^^^^^^^^^\n+   |        ^^^^^^^^^^ this function is private\n+   |\n+note: the function `unexported` is defined here\n+  --> $DIR/export-import.rs:7:5\n+   |\n+LL |     fn unexported() { }\n+   |     ^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "f4537a2fb6fae35648298003403e659b365cf1d4", "filename": "src/test/ui/export-tag-variant.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fexport-tag-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fexport-tag-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-tag-variant.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: enum `Y` is private\n   --> $DIR/export-tag-variant.rs:7:26\n    |\n LL | fn main() { let z = foo::Y::Y1; }\n-   |                          ^\n+   |                          ^ this enum is private\n+   |\n+note: the enum `Y` is defined here\n+  --> $DIR/export-tag-variant.rs:4:5\n+   |\n+LL |     enum Y { Y1 }\n+   |     ^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "107f531c09a3a458d1be7724527578aa61ed5f9e", "filename": "src/test/ui/export.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fexport.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fexport.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -26,7 +26,13 @@ error[E0603]: function `z` is private\n   --> $DIR/export.rs:10:18\n    |\n LL | fn main() { foo::z(10); }\n-   |                  ^\n+   |                  ^ this function is private\n+   |\n+note: the function `z` is defined here\n+  --> $DIR/export.rs:5:5\n+   |\n+LL |     fn z(y: isize) { log(debug, y); }\n+   |     ^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors\n "}, {"sha": "6d38b4d8d66d6fde3ec7604fa24ba757f2f41c32", "filename": "src/test/ui/extern/extern-crate-visibility.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: crate `core` is private\n   --> $DIR/extern-crate-visibility.rs:6:10\n    |\n LL | use foo::core::cell;\n-   |          ^^^^\n+   |          ^^^^ this crate is private\n+   |\n+note: the crate `core` is defined here\n+  --> $DIR/extern-crate-visibility.rs:2:5\n+   |\n+LL |     extern crate core;\n+   |     ^^^^^^^^^^^^^^^^^^\n \n error[E0603]: crate `core` is private\n   --> $DIR/extern-crate-visibility.rs:9:10\n    |\n LL |     foo::core::cell::Cell::new(0);\n-   |          ^^^^\n+   |          ^^^^ this crate is private\n+   |\n+note: the crate `core` is defined here\n+  --> $DIR/extern-crate-visibility.rs:2:5\n+   |\n+LL |     extern crate core;\n+   |     ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0649dc0ec58366f015b782d6cdc1f116ee46d406", "filename": "src/test/ui/hygiene/privacy.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: function `f` is private\n   --> $DIR/privacy.rs:16:14\n    |\n LL |         foo::f()\n-   |              ^\n+   |              ^ this function is private\n+   |\n+note: the function `f` is defined here\n+  --> $DIR/privacy.rs:4:5\n+   |\n+LL |     fn f() {}\n+   |     ^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "c66a4fa7151dca50190bcb96c3a97a7069f0f933", "filename": "src/test/ui/import.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fimport.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fimport.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimport.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -17,7 +17,13 @@ error[E0603]: unresolved item `foo` is private\n   --> $DIR/import.rs:15:10\n    |\n LL |     zed::foo();\n-   |          ^^^\n+   |          ^^^ this unresolved item is private\n+   |\n+note: the unresolved item `foo` is defined here\n+  --> $DIR/import.rs:10:9\n+   |\n+LL |     use foo;\n+   |         ^^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9e77283cd5946d0ab201ed155ad85e2f62d80b5e", "filename": "src/test/ui/imports/issue-55884-2.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: struct `ParseOptions` is private\n   --> $DIR/issue-55884-2.rs:12:17\n    |\n LL | pub use parser::ParseOptions;\n-   |                 ^^^^^^^^^^^^\n+   |                 ^^^^^^^^^^^^ this struct is private\n+   |\n+note: the struct `ParseOptions` is defined here\n+  --> $DIR/issue-55884-2.rs:9:9\n+   |\n+LL |     use ParseOptions;\n+   |         ^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "67c12e0c8d3cabe6e1ef96b7b0daba18a71eb751", "filename": "src/test/ui/imports/reexports.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -14,13 +14,25 @@ error[E0603]: module `foo` is private\n   --> $DIR/reexports.rs:33:15\n    |\n LL |     use b::a::foo::S;\n-   |               ^^^\n+   |               ^^^ this module is private\n+   |\n+note: the module `foo` is defined here\n+  --> $DIR/reexports.rs:21:17\n+   |\n+LL |         pub use super::foo; // This is OK since the value `foo` is visible enough.\n+   |                 ^^^^^^^^^^\n \n error[E0603]: module `foo` is private\n   --> $DIR/reexports.rs:34:15\n    |\n LL |     use b::b::foo::S as T;\n-   |               ^^^\n+   |               ^^^ this module is private\n+   |\n+note: the module `foo` is defined here\n+  --> $DIR/reexports.rs:26:17\n+   |\n+LL |         pub use super::*; // This is also OK since the value `foo` is visible enough.\n+   |                 ^^^^^^^^\n \n warning: glob import doesn't reexport anything because no candidate is public enough\n   --> $DIR/reexports.rs:9:17"}, {"sha": "d7280d2583a7697d0cc7c66c5ba2cee4bcdc9210", "filename": "src/test/ui/imports/unresolved-imports-used.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -38,7 +38,13 @@ error[E0603]: function `quz` is private\n   --> $DIR/unresolved-imports-used.rs:9:10\n    |\n LL | use qux::quz;\n-   |          ^^^\n+   |          ^^^ this function is private\n+   |\n+note: the function `quz` is defined here\n+  --> $DIR/unresolved-imports-used.rs:5:4\n+   |\n+LL |    fn quz() {}\n+   |    ^^^^^^^^\n \n error: unused import: `qux::quy`\n   --> $DIR/unresolved-imports-used.rs:16:5"}, {"sha": "4ed7028c0a06b550c436b25cecf4a51d6863f8b9", "filename": "src/test/ui/issues/issue-10545.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: struct `S` is private\n   --> $DIR/issue-10545.rs:6:14\n    |\n LL | fn foo(_: a::S) {\n-   |              ^\n+   |              ^ this struct is private\n+   |\n+note: the struct `S` is defined here\n+  --> $DIR/issue-10545.rs:2:5\n+   |\n+LL |     struct S;\n+   |     ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "bfb4d31323b13c1ca85653e698ff8bdf6314b958", "filename": "src/test/ui/issues/issue-11593.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: trait `Foo` is private\n   --> $DIR/issue-11593.rs:7:24\n    |\n LL | impl private_trait_xc::Foo for Bar {}\n-   |                        ^^^\n+   |                        ^^^ this trait is private\n+   |\n+note: the trait `Foo` is defined here\n+  --> $DIR/auxiliary/private-trait-xc.rs:1:1\n+   |\n+LL | trait Foo {}\n+   | ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "898ac10f7d9a92587f28812df1247ba695bcb686", "filename": "src/test/ui/issues/issue-11680.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: enum `Foo` is private\n   --> $DIR/issue-11680.rs:6:21\n    |\n LL |     let _b = other::Foo::Bar(1);\n-   |                     ^^^\n+   |                     ^^^ this enum is private\n+   |\n+note: the enum `Foo` is defined here\n+  --> $DIR/auxiliary/issue-11680.rs:1:1\n+   |\n+LL | enum Foo {\n+   | ^^^^^^^^\n \n error[E0603]: enum `Foo` is private\n   --> $DIR/issue-11680.rs:9:27\n    |\n LL |     let _b = other::test::Foo::Bar(1);\n-   |                           ^^^\n+   |                           ^^^ this enum is private\n+   |\n+note: the enum `Foo` is defined here\n+  --> $DIR/auxiliary/issue-11680.rs:6:5\n+   |\n+LL |     enum Foo {\n+   |     ^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f211d623ab12bd4a975c279c392048207740c1b2", "filename": "src/test/ui/issues/issue-13407.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: unit struct `C` is private\n   --> $DIR/issue-13407.rs:6:8\n    |\n LL |     A::C = 1;\n-   |        ^\n+   |        ^ this unit struct is private\n+   |\n+note: the unit struct `C` is defined here\n+  --> $DIR/issue-13407.rs:2:5\n+   |\n+LL |     struct C;\n+   |     ^^^^^^^^^\n \n error[E0308]: mismatched types\n   --> $DIR/issue-13407.rs:6:12"}, {"sha": "f90cb18b6fc9d0d7e91a374369fc0c21b9282732", "filename": "src/test/ui/issues/issue-13641.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: struct `Foo` is private\n   --> $DIR/issue-13641.rs:9:8\n    |\n LL |     a::Foo::new();\n-   |        ^^^\n+   |        ^^^ this struct is private\n+   |\n+note: the struct `Foo` is defined here\n+  --> $DIR/issue-13641.rs:2:5\n+   |\n+LL |     struct Foo;\n+   |     ^^^^^^^^^^^\n \n error[E0603]: enum `Bar` is private\n   --> $DIR/issue-13641.rs:11:8\n    |\n LL |     a::Bar::new();\n-   |        ^^^\n+   |        ^^^ this enum is private\n+   |\n+note: the enum `Bar` is defined here\n+  --> $DIR/issue-13641.rs:4:5\n+   |\n+LL |     enum Bar {}\n+   |     ^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e0a1ca8a5ac319347fcae50dcf6c9b8ff7234449", "filename": "src/test/ui/issues/issue-16725.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: function `bar` is private\n   --> $DIR/issue-16725.rs:6:19\n    |\n LL |     unsafe { foo::bar(); }\n-   |                   ^^^\n+   |                   ^^^ this function is private\n+   |\n+note: the function `bar` is defined here\n+  --> $DIR/auxiliary/issue-16725.rs:2:5\n+   |\n+LL |     fn bar();\n+   |     ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "07d825ba9cb3b2c490b8bee72e5a806f56b7563a", "filename": "src/test/ui/issues/issue-17718-const-privacy.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: constant `B` is private\n   --> $DIR/issue-17718-const-privacy.rs:5:8\n    |\n LL | use a::B;\n-   |        ^\n+   |        ^ this constant is private\n+   |\n+note: the constant `B` is defined here\n+  --> $DIR/issue-17718-const-privacy.rs:13:5\n+   |\n+LL |     const B: usize = 3;\n+   |     ^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: constant `BAR` is private\n   --> $DIR/issue-17718-const-privacy.rs:8:5\n    |\n LL |     BAR,\n-   |     ^^^\n+   |     ^^^ this constant is private\n+   |\n+note: the constant `BAR` is defined here\n+  --> $DIR/auxiliary/issue-17718-const-privacy.rs:4:1\n+   |\n+LL | const BAR: usize = 3;\n+   | ^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "58bd775f295fc61a1e6e9126cade57d32e3e683b", "filename": "src/test/ui/issues/issue-28388-2.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: module `n` is private\n   --> $DIR/issue-28388-2.rs:7:8\n    |\n LL | use m::n::{};\n-   |        ^\n+   |        ^ this module is private\n+   |\n+note: the module `n` is defined here\n+  --> $DIR/issue-28388-2.rs:4:5\n+   |\n+LL |     mod n {}\n+   |     ^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "1bfa211ef796263cda34427c9677ed953b982cf2", "filename": "src/test/ui/issues/issue-29161.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -8,7 +8,13 @@ error[E0603]: struct `A` is private\n   --> $DIR/issue-29161.rs:13:8\n    |\n LL |     a::A::default();\n-   |        ^\n+   |        ^ this struct is private\n+   |\n+note: the struct `A` is defined here\n+  --> $DIR/issue-29161.rs:2:5\n+   |\n+LL |     struct A;\n+   |     ^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "dd7970e014fdb736081cf4ad368f487a20437bd6", "filename": "src/test/ui/issues/issue-38857.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -8,7 +8,13 @@ error[E0603]: module `sys` is private\n   --> $DIR/issue-38857.rs:2:18\n    |\n LL |     let a = std::sys::imp::process::process_common::StdioPipes { ..panic!() };\n-   |                  ^^^\n+   |                  ^^^ this module is private\n+   |\n+note: the module `sys` is defined here\n+  --> $SRC_DIR/libstd/lib.rs:LL:COL\n+   |\n+LL | mod sys;\n+   | ^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3fa8ed4af28fa3b43a8ffdd3256f0f5ee54d033c", "filename": "src/test/ui/issues/issue-3993.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: function `fly` is private\n   --> $DIR/issue-3993.rs:1:10\n    |\n LL | use zoo::fly;\n-   |          ^^^\n+   |          ^^^ this function is private\n+   |\n+note: the function `fly` is defined here\n+  --> $DIR/issue-3993.rs:4:5\n+   |\n+LL |     fn fly() {}\n+   |     ^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "72994d1652cd0d8c702d35ae15825820a5c26ac9", "filename": "src/test/ui/macros/macro-local-data-key-priv.stderr", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,14 @@ error[E0603]: constant `baz` is private\n   --> $DIR/macro-local-data-key-priv.rs:8:10\n    |\n LL |     bar::baz.with(|_| ());\n-   |          ^^^\n+   |          ^^^ this constant is private\n+   |\n+note: the constant `baz` is defined here\n+  --> $DIR/macro-local-data-key-priv.rs:4:5\n+   |\n+LL |     thread_local!(static baz: f64 = 0.0);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "ae981ac4cbee3d578edd41def5c0a0b0e620fb36", "filename": "src/test/ui/parser/macro/pub-item-macro.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -13,7 +13,16 @@ error[E0603]: static `x` is private\n   --> $DIR/pub-item-macro.rs:17:23\n    |\n LL |     let y: u32 = foo::x;\n-   |                       ^\n+   |                       ^ this static is private\n+   |\n+note: the static `x` is defined here\n+  --> $DIR/pub-item-macro.rs:4:5\n+   |\n+LL |     static x: u32 = 0;\n+   |     ^^^^^^^^^^^^^^^^^^\n+...\n+LL |     pub_x!();\n+   |     --------- in this macro invocation\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ae2e1b4b644a384b38348d48d90fd2b43f6cae60", "filename": "src/test/ui/privacy/decl-macro.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fdecl-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fdecl-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fdecl-macro.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: macro `mac` is private\n   --> $DIR/decl-macro.rs:8:8\n    |\n LL |     m::mac!();\n-   |        ^^^\n+   |        ^^^ this macro is private\n+   |\n+note: the macro `mac` is defined here\n+  --> $DIR/decl-macro.rs:4:5\n+   |\n+LL |     macro mac() {}\n+   |     ^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "8860d8f15f7488a2e3e1a5f77db6cdc63e8e51c0", "filename": "src/test/ui/privacy/privacy-in-paths.stderr", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,19 +2,37 @@ error[E0603]: module `bar` is private\n   --> $DIR/privacy-in-paths.rs:24:16\n    |\n LL |         ::foo::bar::baz::f();\n-   |                ^^^\n+   |                ^^^ this module is private\n+   |\n+note: the module `bar` is defined here\n+  --> $DIR/privacy-in-paths.rs:3:5\n+   |\n+LL |     mod bar {\n+   |     ^^^^^^^\n \n error[E0603]: module `bar` is private\n   --> $DIR/privacy-in-paths.rs:25:16\n    |\n LL |         ::foo::bar::S::f();\n-   |                ^^^\n+   |                ^^^ this module is private\n+   |\n+note: the module `bar` is defined here\n+  --> $DIR/privacy-in-paths.rs:3:5\n+   |\n+LL |     mod bar {\n+   |     ^^^^^^^\n \n error[E0603]: trait `T` is private\n   --> $DIR/privacy-in-paths.rs:26:23\n    |\n LL |         <() as ::foo::T>::Assoc::f();\n-   |                       ^\n+   |                       ^ this trait is private\n+   |\n+note: the trait `T` is defined here\n+  --> $DIR/privacy-in-paths.rs:8:5\n+   |\n+LL |     trait T {\n+   |     ^^^^^^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "8b12109b3730747f5ca7c548fd1422ad550072c2", "filename": "src/test/ui/privacy/privacy-ns2.stderr", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -58,19 +58,37 @@ error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ns2.rs:63:15\n    |\n LL |     use foo3::Bar;\n-   |               ^^^\n+   |               ^^^ this trait is private\n+   |\n+note: the trait `Bar` is defined here\n+  --> $DIR/privacy-ns2.rs:55:5\n+   |\n+LL |     trait Bar {\n+   |     ^^^^^^^^^\n \n error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ns2.rs:67:15\n    |\n LL |     use foo3::Bar;\n-   |               ^^^\n+   |               ^^^ this trait is private\n+   |\n+note: the trait `Bar` is defined here\n+  --> $DIR/privacy-ns2.rs:55:5\n+   |\n+LL |     trait Bar {\n+   |     ^^^^^^^^^\n \n error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ns2.rs:74:16\n    |\n LL |     use foo3::{Bar,Baz};\n-   |                ^^^\n+   |                ^^^ this trait is private\n+   |\n+note: the trait `Bar` is defined here\n+  --> $DIR/privacy-ns2.rs:55:5\n+   |\n+LL |     trait Bar {\n+   |     ^^^^^^^^^\n \n error[E0107]: wrong number of const arguments: expected 0, found 1\n   --> $DIR/privacy-ns2.rs:41:18"}, {"sha": "08640b802a244990320ef68fe24cf75d80ed217f", "filename": "src/test/ui/privacy/privacy-ufcs.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ufcs.rs:12:20\n    |\n LL |     <i32 as ::foo::Bar>::baz();\n-   |                    ^^^\n+   |                    ^^^ this trait is private\n+   |\n+note: the trait `Bar` is defined here\n+  --> $DIR/privacy-ufcs.rs:4:5\n+   |\n+LL |     trait Bar {\n+   |     ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "215df0dc754410997470dbc1b78447d5b1b2efd2", "filename": "src/test/ui/privacy/privacy1.stderr", "status": "modified", "additions": 91, "deletions": 13, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,79 +2,157 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:132:18\n    |\n LL |         use bar::baz::{foo, bar};\n-   |                  ^^^\n+   |                  ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:132:18\n    |\n LL |         use bar::baz::{foo, bar};\n-   |                  ^^^\n+   |                  ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:141:18\n    |\n LL |         use bar::baz;\n-   |                  ^^^\n+   |                  ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: module `i` is private\n   --> $DIR/privacy1.rs:165:20\n    |\n LL |     use self::foo::i::A;\n-   |                    ^\n+   |                    ^ this module is private\n+   |\n+note: the module `i` is defined here\n+  --> $DIR/privacy1.rs:170:9\n+   |\n+LL |         mod i {\n+   |         ^^^^^\n \n error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:104:16\n    |\n LL |         ::bar::baz::A::foo();\n-   |                ^^^\n+   |                ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:105:16\n    |\n LL |         ::bar::baz::A::bar();\n-   |                ^^^\n+   |                ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:107:16\n    |\n LL |         ::bar::baz::A.foo2();\n-   |                ^^^\n+   |                ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:108:16\n    |\n LL |         ::bar::baz::A.bar2();\n-   |                ^^^\n+   |                ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: trait `B` is private\n   --> $DIR/privacy1.rs:112:16\n    |\n LL |         ::bar::B::foo();\n-   |                ^\n+   |                ^ this trait is private\n+   |\n+note: the trait `B` is defined here\n+  --> $DIR/privacy1.rs:40:5\n+   |\n+LL |     trait B {\n+   |     ^^^^^^^\n \n error[E0603]: function `epriv` is private\n   --> $DIR/privacy1.rs:118:20\n    |\n LL |             ::bar::epriv();\n-   |                    ^^^^^\n+   |                    ^^^^^ this function is private\n+   |\n+note: the function `epriv` is defined here\n+  --> $DIR/privacy1.rs:65:9\n+   |\n+LL |         fn epriv();\n+   |         ^^^^^^^^^^^\n \n error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:127:16\n    |\n LL |         ::bar::baz::foo();\n-   |                ^^^\n+   |                ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:128:16\n    |\n LL |         ::bar::baz::bar();\n-   |                ^^^\n+   |                ^^^ this module is private\n+   |\n+note: the module `baz` is defined here\n+  --> $DIR/privacy1.rs:50:5\n+   |\n+LL |     mod baz {\n+   |     ^^^^^^^\n \n error[E0603]: trait `B` is private\n   --> $DIR/privacy1.rs:157:17\n    |\n LL |     impl ::bar::B for f32 { fn foo() -> f32 { 1.0 } }\n-   |                 ^\n+   |                 ^ this trait is private\n+   |\n+note: the trait `B` is defined here\n+  --> $DIR/privacy1.rs:40:5\n+   |\n+LL |     trait B {\n+   |     ^^^^^^^\n \n error[E0624]: method `bar` is private\n   --> $DIR/privacy1.rs:77:9"}, {"sha": "d9f003ddae7ac6c167a95682c1c6c07d9b1c2a1e", "filename": "src/test/ui/privacy/privacy2.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -8,7 +8,13 @@ error[E0603]: function `foo` is private\n   --> $DIR/privacy2.rs:23:20\n    |\n LL |     use bar::glob::foo;\n-   |                    ^^^\n+   |                    ^^^ this function is private\n+   |\n+note: the function `foo` is defined here\n+  --> $DIR/privacy2.rs:10:13\n+   |\n+LL |         use foo;\n+   |             ^^^\n \n error: requires `sized` lang_item\n "}, {"sha": "e34b2d5049b9ef960d8315f21cbf30aaaa13e91c", "filename": "src/test/ui/privacy/privacy4.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: module `glob` is private\n   --> $DIR/privacy4.rs:21:14\n    |\n LL |     use bar::glob::gpriv;\n-   |              ^^^^\n+   |              ^^^^ this module is private\n+   |\n+note: the module `glob` is defined here\n+  --> $DIR/privacy4.rs:13:5\n+   |\n+LL |     mod glob {\n+   |     ^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "197a857cc3dc435bbc8d6e033378a769bd0d1430", "filename": "src/test/ui/privacy/privacy5.stderr", "status": "modified", "additions": 336, "deletions": 48, "changes": 384, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -5,7 +5,13 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a = a::A(());\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/privacy5.rs:6:5\n+   |\n+LL |     pub struct A(());\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:52:16\n@@ -14,7 +20,13 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let b = a::B(2);\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/privacy5.rs:7:5\n+   |\n+LL |     pub struct B(isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:53:16\n@@ -23,7 +35,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let c = a::C(2, 3);\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:56:12\n@@ -32,7 +50,13 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a::A(()) = a;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/privacy5.rs:6:5\n+   |\n+LL |     pub struct A(());\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:57:12\n@@ -41,7 +65,13 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a::A(_) = a;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/privacy5.rs:6:5\n+   |\n+LL |     pub struct A(());\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:58:18\n@@ -50,7 +80,13 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     match a { a::A(()) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/privacy5.rs:6:5\n+   |\n+LL |     pub struct A(());\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:59:18\n@@ -59,7 +95,13 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     match a { a::A(_) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/privacy5.rs:6:5\n+   |\n+LL |     pub struct A(());\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:61:12\n@@ -68,7 +110,13 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let a::B(_) = b;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/privacy5.rs:7:5\n+   |\n+LL |     pub struct B(isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:62:12\n@@ -77,7 +125,13 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let a::B(_b) = b;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/privacy5.rs:7:5\n+   |\n+LL |     pub struct B(isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:63:18\n@@ -86,7 +140,13 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(_) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/privacy5.rs:7:5\n+   |\n+LL |     pub struct B(isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:64:18\n@@ -95,7 +155,13 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(_b) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/privacy5.rs:7:5\n+   |\n+LL |     pub struct B(isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:65:18\n@@ -104,7 +170,13 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/privacy5.rs:7:5\n+   |\n+LL |     pub struct B(isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:65:32\n@@ -113,7 +185,13 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n-   |                                ^\n+   |                                ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/privacy5.rs:7:5\n+   |\n+LL |     pub struct B(isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:68:12\n@@ -122,7 +200,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_, _) = c;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:69:12\n@@ -131,7 +215,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_a, _) = c;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:70:12\n@@ -140,7 +230,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_, _b) = c;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:71:12\n@@ -149,7 +245,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_a, _b) = c;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:72:18\n@@ -158,7 +260,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_, _) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:73:18\n@@ -167,7 +275,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_a, _) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:74:18\n@@ -176,7 +290,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_, _b) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:75:18\n@@ -185,7 +305,13 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_a, _b) => {} }\n-   |                  ^\n+   |                  ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:83:17\n@@ -194,7 +320,13 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a2 = a::A;\n-   |                 ^\n+   |                 ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/privacy5.rs:6:5\n+   |\n+LL |     pub struct A(());\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:84:17\n@@ -203,7 +335,13 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let b2 = a::B;\n-   |                 ^\n+   |                 ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/privacy5.rs:7:5\n+   |\n+LL |     pub struct B(isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:85:17\n@@ -212,271 +350,421 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let c2 = a::C;\n-   |                 ^\n+   |                 ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/privacy5.rs:8:5\n+   |\n+LL |     pub struct C(pub isize, isize);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:90:20\n    |\n LL |     let a = other::A(());\n-   |                    ^\n+   |                    ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n    |              -- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:1:1\n+   |\n+LL | pub struct A(());\n+   | ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:91:20\n    |\n LL |     let b = other::B(2);\n-   |                    ^\n+   |                    ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n    |              ----- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:2:1\n+   |\n+LL | pub struct B(isize);\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:92:20\n    |\n LL |     let c = other::C(2, 3);\n-   |                    ^\n+   |                    ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:95:16\n    |\n LL |     let other::A(()) = a;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n    |              -- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:1:1\n+   |\n+LL | pub struct A(());\n+   | ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:96:16\n    |\n LL |     let other::A(_) = a;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n    |              -- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:1:1\n+   |\n+LL | pub struct A(());\n+   | ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:97:22\n    |\n LL |     match a { other::A(()) => {} }\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n    |              -- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:1:1\n+   |\n+LL | pub struct A(());\n+   | ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:98:22\n    |\n LL |     match a { other::A(_) => {} }\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n    |              -- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:1:1\n+   |\n+LL | pub struct A(());\n+   | ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:100:16\n    |\n LL |     let other::B(_) = b;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n    |              ----- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:2:1\n+   |\n+LL | pub struct B(isize);\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:101:16\n    |\n LL |     let other::B(_b) = b;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n    |              ----- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:2:1\n+   |\n+LL | pub struct B(isize);\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:102:22\n    |\n LL |     match b { other::B(_) => {} }\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n    |              ----- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:2:1\n+   |\n+LL | pub struct B(isize);\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:103:22\n    |\n LL |     match b { other::B(_b) => {} }\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n    |              ----- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:2:1\n+   |\n+LL | pub struct B(isize);\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:104:22\n    |\n LL |     match b { other::B(1) => {}\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n    |              ----- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:2:1\n+   |\n+LL | pub struct B(isize);\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:105:16\n    |\n LL |         other::B(_) => {} }\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n    |              ----- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:2:1\n+   |\n+LL | pub struct B(isize);\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:107:16\n    |\n LL |     let other::C(_, _) = c;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:108:16\n    |\n LL |     let other::C(_a, _) = c;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:109:16\n    |\n LL |     let other::C(_, _b) = c;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:110:16\n    |\n LL |     let other::C(_a, _b) = c;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:111:22\n    |\n LL |     match c { other::C(_, _) => {} }\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:112:22\n    |\n LL |     match c { other::C(_a, _) => {} }\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:113:22\n    |\n LL |     match c { other::C(_, _b) => {} }\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:114:22\n    |\n LL |     match c { other::C(_a, _b) => {} }\n-   |                      ^\n+   |                      ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:122:21\n    |\n LL |     let a2 = other::A;\n-   |                     ^\n+   |                     ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n LL | pub struct A(());\n    |              -- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `A` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:1:1\n+   |\n+LL | pub struct A(());\n+   | ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:123:21\n    |\n LL |     let b2 = other::B;\n-   |                     ^\n+   |                     ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n LL | pub struct B(isize);\n    |              ----- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `B` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:2:1\n+   |\n+LL | pub struct B(isize);\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:124:21\n    |\n LL |     let c2 = other::C;\n-   |                     ^\n+   |                     ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n LL | pub struct C(pub isize, isize);\n    |              ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `C` is defined here\n+  --> $DIR/auxiliary/privacy_tuple_struct.rs:3:1\n+   |\n+LL | pub struct C(pub isize, isize);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 48 previous errors\n "}, {"sha": "f51b74f6cb53b343d1f56357537a92f4eca7ff1d", "filename": "src/test/ui/privacy/private-item-simple.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: function `f` is private\n   --> $DIR/private-item-simple.rs:6:8\n    |\n LL |     a::f();\n-   |        ^\n+   |        ^ this function is private\n+   |\n+note: the function `f` is defined here\n+  --> $DIR/private-item-simple.rs:2:5\n+   |\n+LL |     fn f() {}\n+   |     ^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "aac444b8e3c98054f67a1a7dad6f368682ef72d1", "filename": "src/test/ui/privacy/restricted/test.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -26,13 +26,25 @@ error[E0603]: struct `Crate` is private\n   --> $DIR/test.rs:38:25\n    |\n LL |     use pub_restricted::Crate;\n-   |                         ^^^^^\n+   |                         ^^^^^ this struct is private\n+   |\n+note: the struct `Crate` is defined here\n+  --> $DIR/auxiliary/pub_restricted.rs:3:1\n+   |\n+LL | pub(crate) struct Crate;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: function `f` is private\n   --> $DIR/test.rs:30:19\n    |\n LL |     use foo::bar::f;\n-   |                   ^\n+   |                   ^ this function is private\n+   |\n+note: the function `f` is defined here\n+  --> $DIR/test.rs:8:9\n+   |\n+LL |         pub(super) fn f() {}\n+   |         ^^^^^^^^^^^^^^^^^\n \n error[E0616]: field `x` of struct `foo::bar::S` is private\n   --> $DIR/test.rs:31:5"}, {"sha": "d81ab5ebf9bc638054a640c15ddcf6f6013741d7", "filename": "src/test/ui/proc-macro/disappearing-resolution.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -8,7 +8,13 @@ error[E0603]: derive macro `Empty` is private\n   --> $DIR/disappearing-resolution.rs:11:8\n    |\n LL | use m::Empty;\n-   |        ^^^^^\n+   |        ^^^^^ this derive macro is private\n+   |\n+note: the derive macro `Empty` is defined here\n+  --> $DIR/disappearing-resolution.rs:9:9\n+   |\n+LL |     use test_macros::Empty;\n+   |         ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c2e1d774e28ac469a07e02fd8e7428707fbfc08c", "filename": "src/test/ui/reachable/unreachable-variant.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Freachable%2Funreachable-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Freachable%2Funreachable-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-variant.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: module `super_sekrit` is private\n   --> $DIR/unreachable-variant.rs:6:21\n    |\n LL |     let _x = other::super_sekrit::sooper_sekrit::baz;\n-   |                     ^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^ this module is private\n+   |\n+note: the module `super_sekrit` is defined here\n+  --> $DIR/auxiliary/unreachable_variant.rs:1:1\n+   |\n+LL | mod super_sekrit {\n+   | ^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "08a1d790197a6384740304397043239d0d97aa95", "filename": "src/test/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -253,25 +253,49 @@ error[E0603]: enum `Z` is private\n   --> $DIR/privacy-enum-ctor.rs:57:22\n    |\n LL |     let _: Z = m::n::Z;\n-   |                      ^\n+   |                      ^ this enum is private\n+   |\n+note: the enum `Z` is defined here\n+  --> $DIR/privacy-enum-ctor.rs:11:9\n+   |\n+LL |         pub(in m) enum Z {\n+   |         ^^^^^^^^^^^^^^^^\n \n error[E0603]: enum `Z` is private\n   --> $DIR/privacy-enum-ctor.rs:61:22\n    |\n LL |     let _: Z = m::n::Z::Fn;\n-   |                      ^\n+   |                      ^ this enum is private\n+   |\n+note: the enum `Z` is defined here\n+  --> $DIR/privacy-enum-ctor.rs:11:9\n+   |\n+LL |         pub(in m) enum Z {\n+   |         ^^^^^^^^^^^^^^^^\n \n error[E0603]: enum `Z` is private\n   --> $DIR/privacy-enum-ctor.rs:64:22\n    |\n LL |     let _: Z = m::n::Z::Struct;\n-   |                      ^\n+   |                      ^ this enum is private\n+   |\n+note: the enum `Z` is defined here\n+  --> $DIR/privacy-enum-ctor.rs:11:9\n+   |\n+LL |         pub(in m) enum Z {\n+   |         ^^^^^^^^^^^^^^^^\n \n error[E0603]: enum `Z` is private\n   --> $DIR/privacy-enum-ctor.rs:68:22\n    |\n LL |     let _: Z = m::n::Z::Unit {};\n-   |                      ^\n+   |                      ^ this enum is private\n+   |\n+note: the enum `Z` is defined here\n+  --> $DIR/privacy-enum-ctor.rs:11:9\n+   |\n+LL |         pub(in m) enum Z {\n+   |         ^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n   --> $DIR/privacy-enum-ctor.rs:27:20"}, {"sha": "1673ec46ba488c7260acc7468a318e7f14b3874e", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 42, "deletions": 6, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -45,7 +45,13 @@ LL |         pub(in m) struct Z(pub(in m::n) u8);\n    |                            --------------- a constructor is private if any of the fields is private\n ...\n LL |         n::Z;\n-   |            ^\n+   |            ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `Z` is defined here\n+  --> $DIR/privacy-struct-ctor.rs:12:9\n+   |\n+LL |         pub(in m) struct Z(pub(in m::n) u8);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:29:8\n@@ -54,7 +60,13 @@ LL |     pub struct S(u8);\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     m::S;\n-   |        ^\n+   |        ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `S` is defined here\n+  --> $DIR/privacy-struct-ctor.rs:6:5\n+   |\n+LL |     pub struct S(u8);\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:31:19\n@@ -63,7 +75,13 @@ LL |     pub struct S(u8);\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let _: S = m::S(2);\n-   |                   ^\n+   |                   ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `S` is defined here\n+  --> $DIR/privacy-struct-ctor.rs:6:5\n+   |\n+LL |     pub struct S(u8);\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:35:11\n@@ -72,29 +90,47 @@ LL |         pub(in m) struct Z(pub(in m::n) u8);\n    |                            --------------- a constructor is private if any of the fields is private\n ...\n LL |     m::n::Z;\n-   |           ^\n+   |           ^ this tuple struct constructor is private\n+   |\n+note: the tuple struct constructor `Z` is defined here\n+  --> $DIR/privacy-struct-ctor.rs:12:9\n+   |\n+LL |         pub(in m) struct Z(pub(in m::n) u8);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:41:16\n    |\n LL |     xcrate::m::S;\n-   |                ^\n+   |                ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy-struct-ctor.rs:2:18\n    |\n LL |     pub struct S(u8);\n    |                  -- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `S` is defined here\n+  --> $DIR/auxiliary/privacy-struct-ctor.rs:2:5\n+   |\n+LL |     pub struct S(u8);\n+   |     ^^^^^^^^^^^^^^^^^\n \n error[E0603]: tuple struct constructor `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:45:19\n    |\n LL |     xcrate::m::n::Z;\n-   |                   ^\n+   |                   ^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/privacy-struct-ctor.rs:5:28\n    |\n LL |         pub(in m) struct Z(pub(in m::n) u8);\n    |                            --------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `Z` is defined here\n+  --> $DIR/auxiliary/privacy-struct-ctor.rs:5:9\n+   |\n+LL |         pub(in m) struct Z(pub(in m::n) u8);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 10 previous errors\n "}, {"sha": "f992988c93fcc502972030e0adb401823930ba9a", "filename": "src/test/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -14,18 +14,30 @@ error[E0603]: tuple struct constructor `TupleStruct` is private\n   --> $DIR/struct.rs:23:32\n    |\n LL |     let ts_explicit = structs::TupleStruct(640, 480);\n-   |                                ^^^^^^^^^^^\n+   |                                ^^^^^^^^^^^ this tuple struct constructor is private\n    | \n   ::: $DIR/auxiliary/structs.rs:11:24\n    |\n LL | pub struct TupleStruct(pub u16, pub u16);\n    |                        ---------------- a constructor is private if any of the fields is private\n+   |\n+note: the tuple struct constructor `TupleStruct` is defined here\n+  --> $DIR/auxiliary/structs.rs:11:1\n+   |\n+LL | pub struct TupleStruct(pub u16, pub u16);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: unit struct `UnitStruct` is private\n   --> $DIR/struct.rs:32:32\n    |\n LL |     let us_explicit = structs::UnitStruct;\n-   |                                ^^^^^^^^^^\n+   |                                ^^^^^^^^^^ this unit struct is private\n+   |\n+note: the unit struct `UnitStruct` is defined here\n+  --> $DIR/auxiliary/structs.rs:8:1\n+   |\n+LL | pub struct UnitStruct;\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0639]: cannot create non-exhaustive struct using struct expression\n   --> $DIR/struct.rs:7:14"}, {"sha": "2a438753a2c70148ee734037a7b4fb1a1922840a", "filename": "src/test/ui/rfc-2008-non-exhaustive/variant.stderr", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,31 +2,61 @@ error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:11:48\n    |\n LL |     let variant_tuple = NonExhaustiveVariants::Tuple(640);\n-   |                                                ^^^^^\n+   |                                                ^^^^^ this tuple variant is private\n+   |\n+note: the tuple variant `Tuple` is defined here\n+  --> $DIR/auxiliary/variants.rs:5:23\n+   |\n+LL |     #[non_exhaustive] Tuple(u32),\n+   |                       ^^^^^^^^^^\n \n error[E0603]: unit variant `Unit` is private\n   --> $DIR/variant.rs:14:47\n    |\n LL |     let variant_unit = NonExhaustiveVariants::Unit;\n-   |                                               ^^^^\n+   |                                               ^^^^ this unit variant is private\n+   |\n+note: the unit variant `Unit` is defined here\n+  --> $DIR/auxiliary/variants.rs:4:23\n+   |\n+LL |     #[non_exhaustive] Unit,\n+   |                       ^^^^\n \n error[E0603]: unit variant `Unit` is private\n   --> $DIR/variant.rs:18:32\n    |\n LL |         NonExhaustiveVariants::Unit => \"\",\n-   |                                ^^^^\n+   |                                ^^^^ this unit variant is private\n+   |\n+note: the unit variant `Unit` is defined here\n+  --> $DIR/auxiliary/variants.rs:4:23\n+   |\n+LL |     #[non_exhaustive] Unit,\n+   |                       ^^^^\n \n error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:20:32\n    |\n LL |         NonExhaustiveVariants::Tuple(fe_tpl) => \"\",\n-   |                                ^^^^^\n+   |                                ^^^^^ this tuple variant is private\n+   |\n+note: the tuple variant `Tuple` is defined here\n+  --> $DIR/auxiliary/variants.rs:5:23\n+   |\n+LL |     #[non_exhaustive] Tuple(u32),\n+   |                       ^^^^^^^^^^\n \n error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:26:35\n    |\n LL |     if let NonExhaustiveVariants::Tuple(fe_tpl) = variant_struct {\n-   |                                   ^^^^^\n+   |                                   ^^^^^ this tuple variant is private\n+   |\n+note: the tuple variant `Tuple` is defined here\n+  --> $DIR/auxiliary/variants.rs:5:23\n+   |\n+LL |     #[non_exhaustive] Tuple(u32),\n+   |                       ^^^^^^^^^^\n \n error[E0639]: cannot create non-exhaustive variant using struct expression\n   --> $DIR/variant.rs:8:26"}, {"sha": "77bf2abe34555c5996721780426fba0e21aa1490", "filename": "src/test/ui/shadowed/shadowed-use-visibility.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: module `bar` is private\n   --> $DIR/shadowed-use-visibility.rs:9:14\n    |\n LL |     use foo::bar::f as g;\n-   |              ^^^\n+   |              ^^^ this module is private\n+   |\n+note: the module `bar` is defined here\n+  --> $DIR/shadowed-use-visibility.rs:4:9\n+   |\n+LL |     use foo as bar;\n+   |         ^^^^^^^^^^\n \n error[E0603]: module `f` is private\n   --> $DIR/shadowed-use-visibility.rs:15:10\n    |\n LL | use bar::f::f;\n-   |          ^\n+   |          ^ this module is private\n+   |\n+note: the module `f` is defined here\n+  --> $DIR/shadowed-use-visibility.rs:11:9\n+   |\n+LL |     use foo as f;\n+   |         ^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "537a400664aaa16da63783be7bcf8f5ef4f6ebe0", "filename": "src/test/ui/stability-in-private-module.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fstability-in-private-module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fstability-in-private-module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-in-private-module.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,7 +2,13 @@ error[E0603]: module `thread_info` is private\n   --> $DIR/stability-in-private-module.rs:2:26\n    |\n LL |     let _ = std::thread::thread_info::current_thread();\n-   |                          ^^^^^^^^^^^\n+   |                          ^^^^^^^^^^^ this module is private\n+   |\n+note: the module `thread_info` is defined here\n+  --> $SRC_DIR/libstd/thread/mod.rs:LL:COL\n+   |\n+LL | use crate::sys_common::thread_info;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "f6cd40412dd843f635931d69f235f16b241adcca", "filename": "src/test/ui/static/static-priv-by-default2.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: static `private` is private\n   --> $DIR/static-priv-by-default2.rs:15:30\n    |\n LL |     use child::childs_child::private;\n-   |                              ^^^^^^^\n+   |                              ^^^^^^^ this static is private\n+   |\n+note: the static `private` is defined here\n+  --> $DIR/static-priv-by-default2.rs:7:9\n+   |\n+LL |         static private: isize = 0;\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: static `private` is private\n   --> $DIR/static-priv-by-default2.rs:23:33\n    |\n LL |     use static_priv_by_default::private;\n-   |                                 ^^^^^^^\n+   |                                 ^^^^^^^ this static is private\n+   |\n+note: the static `private` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:3:1\n+   |\n+LL | static private: isize = 0;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0203b7b5242e5187f18357ad74343796ec96ee4b", "filename": "src/test/ui/structs/struct-variant-privacy-xc.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: enum `Bar` is private\n   --> $DIR/struct-variant-privacy-xc.rs:4:33\n    |\n LL | fn f(b: struct_variant_privacy::Bar) {\n-   |                                 ^^^\n+   |                                 ^^^ this enum is private\n+   |\n+note: the enum `Bar` is defined here\n+  --> $DIR/auxiliary/struct_variant_privacy.rs:1:1\n+   |\n+LL | enum Bar {\n+   | ^^^^^^^^\n \n error[E0603]: enum `Bar` is private\n   --> $DIR/struct-variant-privacy-xc.rs:6:33\n    |\n LL |         struct_variant_privacy::Bar::Baz { a: _a } => {}\n-   |                                 ^^^\n+   |                                 ^^^ this enum is private\n+   |\n+note: the enum `Bar` is defined here\n+  --> $DIR/auxiliary/struct_variant_privacy.rs:1:1\n+   |\n+LL | enum Bar {\n+   | ^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d1b603f9d46fc027afc9eec22501c0e07d505160", "filename": "src/test/ui/structs/struct-variant-privacy.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: enum `Bar` is private\n   --> $DIR/struct-variant-privacy.rs:7:14\n    |\n LL | fn f(b: foo::Bar) {\n-   |              ^^^\n+   |              ^^^ this enum is private\n+   |\n+note: the enum `Bar` is defined here\n+  --> $DIR/struct-variant-privacy.rs:2:5\n+   |\n+LL |     enum Bar {\n+   |     ^^^^^^^^\n \n error[E0603]: enum `Bar` is private\n   --> $DIR/struct-variant-privacy.rs:9:14\n    |\n LL |         foo::Bar::Baz { a: _a } => {}\n-   |              ^^^\n+   |              ^^^ this enum is private\n+   |\n+note: the enum `Bar` is defined here\n+  --> $DIR/struct-variant-privacy.rs:2:5\n+   |\n+LL |     enum Bar {\n+   |     ^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3f38a6cae7b819055e7ca742b419b2763dc86e31", "filename": "src/test/ui/use/use-from-trait-xc.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -44,13 +44,25 @@ error[E0603]: struct `Foo` is private\n   --> $DIR/use-from-trait-xc.rs:14:24\n    |\n LL | use use_from_trait_xc::Foo::new;\n-   |                        ^^^\n+   |                        ^^^ this struct is private\n+   |\n+note: the struct `Foo` is defined here\n+  --> $DIR/auxiliary/use-from-trait-xc.rs:9:1\n+   |\n+LL | struct Foo;\n+   | ^^^^^^^^^^^\n \n error[E0603]: struct `Foo` is private\n   --> $DIR/use-from-trait-xc.rs:17:24\n    |\n LL | use use_from_trait_xc::Foo::C;\n-   |                        ^^^\n+   |                        ^^^ this struct is private\n+   |\n+note: the struct `Foo` is defined here\n+  --> $DIR/auxiliary/use-from-trait-xc.rs:9:1\n+   |\n+LL | struct Foo;\n+   | ^^^^^^^^^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "4852759286ae632fee1fa9bba6dd25f849c157e3", "filename": "src/test/ui/use/use-mod/use-mod-3.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,13 +2,25 @@ error[E0603]: module `bar` is private\n   --> $DIR/use-mod-3.rs:1:10\n    |\n LL | use foo::bar::{\n-   |          ^^^\n+   |          ^^^ this module is private\n+   |\n+note: the module `bar` is defined here\n+  --> $DIR/use-mod-3.rs:9:5\n+   |\n+LL |     mod bar { pub type Bar = isize; }\n+   |     ^^^^^^^\n \n error[E0603]: module `bar` is private\n   --> $DIR/use-mod-3.rs:4:10\n    |\n LL | use foo::bar::{\n-   |          ^^^\n+   |          ^^^ this module is private\n+   |\n+note: the module `bar` is defined here\n+  --> $DIR/use-mod-3.rs:9:5\n+   |\n+LL |     mod bar { pub type Bar = isize; }\n+   |     ^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "842069d6135cbeba743ebd75c0c94da2fd55b5f9", "filename": "src/test/ui/xcrate/xcrate-private-by-default.stderr", "status": "modified", "additions": 70, "deletions": 10, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr?ref=28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "patch": "@@ -2,61 +2,121 @@ error[E0603]: static `j` is private\n   --> $DIR/xcrate-private-by-default.rs:23:29\n    |\n LL |     static_priv_by_default::j;\n-   |                             ^\n+   |                             ^ this static is private\n+   |\n+note: the static `j` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:47:1\n+   |\n+LL | static j: isize = 0;\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error[E0603]: function `k` is private\n   --> $DIR/xcrate-private-by-default.rs:25:29\n    |\n LL |     static_priv_by_default::k;\n-   |                             ^\n+   |                             ^ this function is private\n+   |\n+note: the function `k` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:48:1\n+   |\n+LL | fn k() {}\n+   | ^^^^^^\n \n error[E0603]: unit struct `l` is private\n   --> $DIR/xcrate-private-by-default.rs:27:29\n    |\n LL |     static_priv_by_default::l;\n-   |                             ^\n+   |                             ^ this unit struct is private\n+   |\n+note: the unit struct `l` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:49:1\n+   |\n+LL | struct l;\n+   | ^^^^^^^^^\n \n error[E0603]: enum `m` is private\n   --> $DIR/xcrate-private-by-default.rs:29:35\n    |\n LL |     foo::<static_priv_by_default::m>();\n-   |                                   ^\n+   |                                   ^ this enum is private\n+   |\n+note: the enum `m` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:50:1\n+   |\n+LL | enum m {}\n+   | ^^^^^^\n \n error[E0603]: type alias `n` is private\n   --> $DIR/xcrate-private-by-default.rs:31:35\n    |\n LL |     foo::<static_priv_by_default::n>();\n-   |                                   ^\n+   |                                   ^ this type alias is private\n+   |\n+note: the type alias `n` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:51:1\n+   |\n+LL | type n = isize;\n+   | ^^^^^^^^^^^^^^^\n \n error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:35:29\n    |\n LL |     static_priv_by_default::foo::a;\n-   |                             ^^^\n+   |                             ^^^ this module is private\n+   |\n+note: the module `foo` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n+   |\n+LL | mod foo {\n+   | ^^^^^^^\n \n error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:37:29\n    |\n LL |     static_priv_by_default::foo::b;\n-   |                             ^^^\n+   |                             ^^^ this module is private\n+   |\n+note: the module `foo` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n+   |\n+LL | mod foo {\n+   | ^^^^^^^\n \n error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:39:29\n    |\n LL |     static_priv_by_default::foo::c;\n-   |                             ^^^\n+   |                             ^^^ this module is private\n+   |\n+note: the module `foo` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n+   |\n+LL | mod foo {\n+   | ^^^^^^^\n \n error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:41:35\n    |\n LL |     foo::<static_priv_by_default::foo::d>();\n-   |                                   ^^^\n+   |                                   ^^^ this module is private\n+   |\n+note: the module `foo` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n+   |\n+LL | mod foo {\n+   | ^^^^^^^\n \n error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:43:35\n    |\n LL |     foo::<static_priv_by_default::foo::e>();\n-   |                                   ^^^\n+   |                                   ^^^ this module is private\n+   |\n+note: the module `foo` is defined here\n+  --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n+   |\n+LL | mod foo {\n+   | ^^^^^^^\n \n error: aborting due to 10 previous errors\n "}]}