{"sha": "abb02d40a49429952270d8f3cf4b368c6e3f1d1f", "node_id": "C_kwDOAAsO6NoAKGFiYjAyZDQwYTQ5NDI5OTUyMjcwZDhmM2NmNGIzNjhjNmUzZjFkMWY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-30T07:10:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-30T07:10:05Z"}, "message": "Rollup merge of #95452 - yaahc:termination-version-correction, r=ehuss\n\nfix since field version for termination stabilization\n\nfixes incorrect version fields in stabilization of https://github.com/rust-lang/rust/pull/93840\n\nr? `@ehuss`", "tree": {"sha": "d666c3573dd9534f4aa1edb6c48a9aa410e07810", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d666c3573dd9534f4aa1edb6c48a9aa410e07810"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abb02d40a49429952270d8f3cf4b368c6e3f1d1f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiRAJOCRBK7hj4Ov3rIwAAbwIIAEWEwvmzF3GO3IE62nyluRAF\nj6B3jfMfnQWhVDP7ZkUiPVMZu0bbN5UV1983LuexLoSezmXJC5/qokHovfwbH8Yf\nDqNUQxK6X35FXULS+sEx2S6BefafWPF5BaWEjoG2P6RpXIUqAZrK+vkNoynHVjNm\nrwwY84J9vJZAQcLxWnPvY4JZfueMV9TJti3yLzMkQ5tDuGXOJ5zQzMg/qgXl1xwi\n7Bu3NcATj4XmMVMfXs/ueE7bNWtZQ1qKTJ1TDWKGRWmxHdDCxzjuuYoA40mopIlw\nV3U5Mt2xA/oMsEGVYs7Ix+jRrif3DP1ekEofMk9KPx1vNBxJ7TX6qjEvCX2bCx0=\n=UPC2\n-----END PGP SIGNATURE-----\n", "payload": "tree d666c3573dd9534f4aa1edb6c48a9aa410e07810\nparent 33730c857fd4706eb9dedba6af1f243d16626e1d\nparent 09e7b0b951b8ede451911fc614eb4b8133499080\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648624205 +0200\ncommitter GitHub <noreply@github.com> 1648624205 +0200\n\nRollup merge of #95452 - yaahc:termination-version-correction, r=ehuss\n\nfix since field version for termination stabilization\n\nfixes incorrect version fields in stabilization of https://github.com/rust-lang/rust/pull/93840\n\nr? `@ehuss`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abb02d40a49429952270d8f3cf4b368c6e3f1d1f", "html_url": "https://github.com/rust-lang/rust/commit/abb02d40a49429952270d8f3cf4b368c6e3f1d1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abb02d40a49429952270d8f3cf4b368c6e3f1d1f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33730c857fd4706eb9dedba6af1f243d16626e1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/33730c857fd4706eb9dedba6af1f243d16626e1d", "html_url": "https://github.com/rust-lang/rust/commit/33730c857fd4706eb9dedba6af1f243d16626e1d"}, {"sha": "09e7b0b951b8ede451911fc614eb4b8133499080", "url": "https://api.github.com/repos/rust-lang/rust/commits/09e7b0b951b8ede451911fc614eb4b8133499080", "html_url": "https://github.com/rust-lang/rust/commit/09e7b0b951b8ede451911fc614eb4b8133499080"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "771461a59089b6d7b3e91de1c1a5f31b66c26e26", "filename": "library/std/src/process.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/abb02d40a49429952270d8f3cf4b368c6e3f1d1f/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abb02d40a49429952270d8f3cf4b368c6e3f1d1f/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=abb02d40a49429952270d8f3cf4b368c6e3f1d1f", "patch": "@@ -1705,25 +1705,25 @@ impl crate::error::Error for ExitStatusError {}\n /// }\n /// ```\n #[derive(Clone, Copy, Debug)]\n-#[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n+#[stable(feature = \"process_exitcode\", since = \"1.61.0\")]\n pub struct ExitCode(imp::ExitCode);\n \n-#[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n+#[stable(feature = \"process_exitcode\", since = \"1.61.0\")]\n impl ExitCode {\n     /// The canonical `ExitCode` for successful termination on this platform.\n     ///\n     /// Note that a `()`-returning `main` implicitly results in a successful\n     /// termination, so there's no need to return this from `main` unless\n     /// you're also returning other possible codes.\n-    #[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n+    #[stable(feature = \"process_exitcode\", since = \"1.61.0\")]\n     pub const SUCCESS: ExitCode = ExitCode(imp::ExitCode::SUCCESS);\n \n     /// The canonical `ExitCode` for unsuccessful termination on this platform.\n     ///\n     /// If you're only returning this and `SUCCESS` from `main`, consider\n     /// instead returning `Err(_)` and `Ok(())` respectively, which will\n     /// return the same codes (but will also `eprintln!` the error).\n-    #[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n+    #[stable(feature = \"process_exitcode\", since = \"1.61.0\")]\n     pub const FAILURE: ExitCode = ExitCode(imp::ExitCode::FAILURE);\n }\n \n@@ -1747,7 +1747,7 @@ impl ExitCode {\n     }\n }\n \n-#[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n+#[stable(feature = \"process_exitcode\", since = \"1.61.0\")]\n impl From<u8> for ExitCode {\n     /// Construct an `ExitCode` from an arbitrary u8 value.\n     fn from(code: u8) -> Self {\n@@ -2092,27 +2092,27 @@ pub fn id() -> u32 {\n /// standard library's runtime for convenience. Other runtimes are not required\n /// to provide similar functionality.\n #[cfg_attr(not(test), lang = \"termination\")]\n-#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]\n #[rustc_on_unimplemented(\n     message = \"`main` has invalid return type `{Self}`\",\n     label = \"`main` can only return types that implement `{Termination}`\"\n )]\n pub trait Termination {\n     /// Is called to get the representation of the value as status code.\n     /// This status code is returned to the operating system.\n-    #[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n+    #[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]\n     fn report(self) -> ExitCode;\n }\n \n-#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]\n impl Termination for () {\n     #[inline]\n     fn report(self) -> ExitCode {\n         ExitCode::SUCCESS.report()\n     }\n }\n \n-#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]\n impl<E: fmt::Debug> Termination for Result<(), E> {\n     fn report(self) -> ExitCode {\n         match self {\n@@ -2122,14 +2122,14 @@ impl<E: fmt::Debug> Termination for Result<(), E> {\n     }\n }\n \n-#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]\n impl Termination for ! {\n     fn report(self) -> ExitCode {\n         self\n     }\n }\n \n-#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]\n impl<E: fmt::Debug> Termination for Result<!, E> {\n     fn report(self) -> ExitCode {\n         let Err(err) = self;\n@@ -2138,15 +2138,15 @@ impl<E: fmt::Debug> Termination for Result<!, E> {\n     }\n }\n \n-#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]\n impl<E: fmt::Debug> Termination for Result<Infallible, E> {\n     fn report(self) -> ExitCode {\n         let Err(err) = self;\n         Err::<!, _>(err).report()\n     }\n }\n \n-#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]\n impl Termination for ExitCode {\n     #[inline]\n     fn report(self) -> ExitCode {"}]}