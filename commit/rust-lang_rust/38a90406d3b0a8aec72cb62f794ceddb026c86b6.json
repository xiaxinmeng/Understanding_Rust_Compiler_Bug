{"sha": "38a90406d3b0a8aec72cb62f794ceddb026c86b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YTkwNDA2ZDNiMGE4YWVjNzJjYjYyZjc5NGNlZGRiMDI2Yzg2YjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-10-25T17:37:52Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-11-10T00:11:06Z"}, "message": "revert some more constification.", "tree": {"sha": "d9158f7b32e4ac2b4543601c19e82a6960dd9bcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9158f7b32e4ac2b4543601c19e82a6960dd9bcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38a90406d3b0a8aec72cb62f794ceddb026c86b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38a90406d3b0a8aec72cb62f794ceddb026c86b6", "html_url": "https://github.com/rust-lang/rust/commit/38a90406d3b0a8aec72cb62f794ceddb026c86b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38a90406d3b0a8aec72cb62f794ceddb026c86b6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e15c62d61fa02fac93992db9297aa4a8a56cef93", "url": "https://api.github.com/repos/rust-lang/rust/commits/e15c62d61fa02fac93992db9297aa4a8a56cef93", "html_url": "https://github.com/rust-lang/rust/commit/e15c62d61fa02fac93992db9297aa4a8a56cef93"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "4b1cbb0d90895ee1ac7a95cc78d0a3ee2a8f2d4e", "filename": "src/liballoc/collections/linked_list.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list.rs?ref=38a90406d3b0a8aec72cb62f794ceddb026c86b6", "patch": "@@ -264,7 +264,7 @@ impl<T> LinkedList<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub const fn new() -> Self {\n+    pub fn new() -> Self {\n         LinkedList {\n             head: None,\n             tail: None,\n@@ -341,7 +341,7 @@ impl<T> LinkedList<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub const fn iter(&self) -> Iter<T> {\n+    pub fn iter(&self) -> Iter<T> {\n         Iter {\n             head: self.head,\n             tail: self.tail,\n@@ -401,7 +401,7 @@ impl<T> LinkedList<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub const fn is_empty(&self) -> bool {\n+    pub fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n \n@@ -427,7 +427,7 @@ impl<T> LinkedList<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub const fn len(&self) -> usize {\n+    pub fn len(&self) -> usize {\n         self.len\n     }\n "}, {"sha": "b89f37fa5ce25eddaad9c5578f3f0e06cd82cba3", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=38a90406d3b0a8aec72cb62f794ceddb026c86b6", "patch": "@@ -139,7 +139,7 @@ pub use intrinsics::transmute;\n /// [ub]: ../../reference/behavior-considered-undefined.html\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub const fn forget<T>(t: T) {\n+pub fn forget<T>(t: T) {\n     ManuallyDrop::new(t);\n }\n "}, {"sha": "14f20151dca861c9ef6e3518392fdac9b4e49ce1", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=38a90406d3b0a8aec72cb62f794ceddb026c86b6", "patch": "@@ -104,7 +104,7 @@ impl<T> Cursor<T> {\n     /// # force_inference(&buff);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub const fn new(inner: T) -> Cursor<T> {\n+    pub fn new(inner: T) -> Cursor<T> {\n         Cursor { pos: 0, inner: inner }\n     }\n \n@@ -138,7 +138,7 @@ impl<T> Cursor<T> {\n     /// let reference = buff.get_ref();\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub const fn get_ref(&self) -> &T { &self.inner }\n+    pub fn get_ref(&self) -> &T { &self.inner }\n \n     /// Gets a mutable reference to the underlying value in this cursor.\n     ///\n@@ -179,7 +179,7 @@ impl<T> Cursor<T> {\n     /// assert_eq!(buff.position(), 1);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub const fn position(&self) -> u64 { self.pos }\n+    pub fn position(&self) -> u64 { self.pos }\n \n     /// Sets the position of this cursor.\n     ///"}, {"sha": "e263db24fc2c80cf9b429c2d4e150e6952bbc3f1", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=38a90406d3b0a8aec72cb62f794ceddb026c86b6", "patch": "@@ -885,7 +885,7 @@ impl Initializer {\n     /// Returns a new `Initializer` which will zero out buffers.\n     #[unstable(feature = \"read_initializer\", issue = \"42788\")]\n     #[inline]\n-    pub const fn zeroing() -> Initializer {\n+    pub fn zeroing() -> Initializer {\n         Initializer(true)\n     }\n \n@@ -906,7 +906,7 @@ impl Initializer {\n     /// Indicates if a buffer should be initialized.\n     #[unstable(feature = \"read_initializer\", issue = \"42788\")]\n     #[inline]\n-    pub const fn should_initialize(&self) -> bool {\n+    pub fn should_initialize(&self) -> bool {\n         self.0\n     }\n "}, {"sha": "12995d08683450175af2c3fe2b5b1377c70ab320", "filename": "src/libstd/io/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Futil.rs?ref=38a90406d3b0a8aec72cb62f794ceddb026c86b6", "patch": "@@ -99,7 +99,7 @@ pub struct Empty { _priv: () }\n /// assert!(buffer.is_empty());\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub const fn empty() -> Empty { Empty { _priv: () } }\n+pub fn empty() -> Empty { Empty { _priv: () } }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Read for Empty {\n@@ -199,7 +199,7 @@ pub struct Sink { _priv: () }\n /// assert_eq!(num_bytes, 5);\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub const fn sink() -> Sink { Sink { _priv: () } }\n+pub fn sink() -> Sink { Sink { _priv: () } }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Write for Sink {"}, {"sha": "a9219f75362db4dddb74cb879b98b305d05d5731", "filename": "src/libstd/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=38a90406d3b0a8aec72cb62f794ceddb026c86b6", "patch": "@@ -926,7 +926,7 @@ impl Stdio {\n     /// assert_eq!(String::from_utf8_lossy(&output.stdout), \"!dlrow ,olleH\\n\");\n     /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n-    pub const fn piped() -> Stdio { Stdio(imp::Stdio::MakePipe) }\n+    pub fn piped() -> Stdio { Stdio(imp::Stdio::MakePipe) }\n \n     /// The child inherits from the corresponding parent descriptor.\n     ///\n@@ -961,7 +961,7 @@ impl Stdio {\n     /// println!(\"You piped in the reverse of: {}\", String::from_utf8_lossy(&output.stdout));\n     /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n-    pub const fn inherit() -> Stdio { Stdio(imp::Stdio::Inherit) }\n+    pub fn inherit() -> Stdio { Stdio(imp::Stdio::Inherit) }\n \n     /// This stream will be ignored. This is the equivalent of attaching the\n     /// stream to `/dev/null`\n@@ -998,7 +998,7 @@ impl Stdio {\n     /// // Ignores any piped-in input\n     /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n-    pub const fn null() -> Stdio { Stdio(imp::Stdio::Null) }\n+    pub fn null() -> Stdio { Stdio(imp::Stdio::Null) }\n }\n \n impl FromInner<imp::Stdio> for Stdio {"}, {"sha": "a57b8dc7237678489baf2476a7350cc6f26e7b09", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a90406d3b0a8aec72cb62f794ceddb026c86b6/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=38a90406d3b0a8aec72cb62f794ceddb026c86b6", "patch": "@@ -286,7 +286,7 @@ impl Builder {\n     /// handler.join().unwrap();\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub const fn new() -> Builder {\n+    pub fn new() -> Builder {\n         Builder {\n             name: None,\n             stack_size: None,"}]}