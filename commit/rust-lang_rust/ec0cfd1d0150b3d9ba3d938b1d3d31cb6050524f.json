{"sha": "ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMGNmZDFkMDE1MGIzZDliYTNkOTM4YjFkM2QzMWNiNjA1MDUyNGY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-11T15:36:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-11T15:36:54Z"}, "message": "Rollup merge of #66498 - bjorn3:less_feature_flags, r=Dylan-DPC\n\nRemove unused feature gates\n\nI think many of the remaining unstable things can be easily be replaced with stable things. I have kept the `#![feature(nll)]` even though it is only necessary in `libstd`, to make regressions of it harder.", "tree": {"sha": "06b301d80abbc994652b957e94f9a59a6a8b95b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06b301d80abbc994652b957e94f9a59a6a8b95b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeQsoWCRBK7hj4Ov3rIwAAdHIIAFQAkzsAkv1FF1VkkXXuY+RR\nWzEV2zZTXiy9tUqWxyPzDU6+0bwUS+gHAG2L/sKGfE4l2zjcDYjItNR7X1AxahlO\n7fPynBUQM2kmONQOFEHaywcNLP8chQfacp9Y+1nsBCARuX1KGFZx/5okW50VHIoy\n1NI9kRyB4MyGEIEo0RX1DR2p41EPxPhVclemYvCpSUMnaGkFekI8462Wx/HBGflP\n2YSDSN6DDerkwRf6IQjYbOlSolzKtAGyYR4zHgXad7eQaCnfzXGxTnuXeULHrBlo\n631ESb0og07aQ7hoxE51YHFGE576NoRwZBIJZ/zAME0o2QiXAIZhSWW6C9SoKLs=\n=8GEB\n-----END PGP SIGNATURE-----\n", "payload": "tree 06b301d80abbc994652b957e94f9a59a6a8b95b5\nparent b6690a8c35e9afa3e0f65140cc69d4ba1b9e78c4\nparent 3e57a0afb57decd347fe9133dd3d37dd0fb5dbec\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581435414 +0100\ncommitter GitHub <noreply@github.com> 1581435414 +0100\n\nRollup merge of #66498 - bjorn3:less_feature_flags, r=Dylan-DPC\n\nRemove unused feature gates\n\nI think many of the remaining unstable things can be easily be replaced with stable things. I have kept the `#![feature(nll)]` even though it is only necessary in `libstd`, to make regressions of it harder.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "html_url": "https://github.com/rust-lang/rust/commit/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6690a8c35e9afa3e0f65140cc69d4ba1b9e78c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6690a8c35e9afa3e0f65140cc69d4ba1b9e78c4", "html_url": "https://github.com/rust-lang/rust/commit/b6690a8c35e9afa3e0f65140cc69d4ba1b9e78c4"}, {"sha": "3e57a0afb57decd347fe9133dd3d37dd0fb5dbec", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e57a0afb57decd347fe9133dd3d37dd0fb5dbec", "html_url": "https://github.com/rust-lang/rust/commit/3e57a0afb57decd347fe9133dd3d37dd0fb5dbec"}], "stats": {"total": 84, "additions": 14, "deletions": 70}, "files": [{"sha": "a476d25f10214116918d3447ea9f60cab8966280", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -103,7 +103,6 @@\n //! More documentation can be found in each respective module below, and you can\n //! also check out the `src/bootstrap/README.md` file for more information.\n \n-#![feature(core_intrinsics)]\n #![feature(drain_filter)]\n \n use std::cell::{Cell, RefCell};"}, {"sha": "ceac68704d2b010c136af2f4466761f779b4560e", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -27,7 +27,6 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n-#![feature(arbitrary_self_types)]\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n@@ -39,21 +38,15 @@\n #![feature(marker_trait_attr)]\n #![feature(extern_types)]\n #![feature(nll)]\n-#![feature(optin_builtin_traits)]\n #![feature(option_expect_none)]\n #![feature(range_is_empty)]\n #![feature(specialization)]\n-#![feature(unboxed_closures)]\n-#![feature(thread_local)]\n-#![feature(trace_macros)]\n #![feature(trusted_len)]\n #![feature(vec_remove_item)]\n #![feature(stmt_expr_attributes)]\n-#![feature(integer_atomics)]\n #![feature(test)]\n #![feature(in_band_lifetimes)]\n #![feature(crate_visibility_modifier)]\n-#![feature(log_syntax)]\n #![feature(associated_type_bounds)]\n #![feature(rustc_attrs)]\n #![feature(hash_raw_entry)]"}, {"sha": "98a3e695fa0797bddf7fa4bcb8fbb554a0ee21a4", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -6,18 +6,11 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(bool_to_option)]\n-#![feature(box_patterns)]\n-#![feature(box_syntax)]\n #![feature(const_cstr_unchecked)]\n #![feature(crate_visibility_modifier)]\n #![feature(extern_types)]\n #![feature(in_band_lifetimes)]\n-#![feature(libc)]\n #![feature(nll)]\n-#![feature(optin_builtin_traits)]\n-#![feature(concat_idents)]\n-#![feature(link_args)]\n-#![feature(static_nobundle)]\n #![feature(trusted_len)]\n #![recursion_limit = \"256\"]\n \n@@ -196,7 +189,7 @@ unsafe impl Sync for LlvmCodegenBackend {}\n \n impl LlvmCodegenBackend {\n     pub fn new() -> Box<dyn CodegenBackend> {\n-        box LlvmCodegenBackend(())\n+        Box::new(LlvmCodegenBackend(()))\n     }\n }\n \n@@ -245,7 +238,7 @@ impl CodegenBackend for LlvmCodegenBackend {\n     }\n \n     fn metadata_loader(&self) -> Box<MetadataLoaderDyn> {\n-        box metadata::LlvmMetadataLoader\n+        Box::new(metadata::LlvmMetadataLoader)\n     }\n \n     fn provide(&self, providers: &mut ty::query::Providers<'_>) {\n@@ -262,12 +255,12 @@ impl CodegenBackend for LlvmCodegenBackend {\n         metadata: EncodedMetadata,\n         need_metadata_module: bool,\n     ) -> Box<dyn Any> {\n-        box rustc_codegen_ssa::base::codegen_crate(\n+        Box::new(rustc_codegen_ssa::base::codegen_crate(\n             LlvmCodegenBackend(()),\n             tcx,\n             metadata,\n             need_metadata_module,\n-        )\n+        ))\n     }\n \n     fn join_codegen("}, {"sha": "0f30c2c020de75a225356a567d6d1be386435ffc", "filename": "src/librustc_codegen_llvm/metadata.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmetadata.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -22,10 +22,11 @@ impl MetadataLoader for LlvmMetadataLoader {\n         // Use ArchiveRO for speed here, it's backed by LLVM and uses mmap\n         // internally to read the file. We also avoid even using a memcpy by\n         // just keeping the archive along while the metadata is in use.\n-        let archive = ArchiveRO::open(filename).map(|ar| OwningRef::new(box ar)).map_err(|e| {\n-            debug!(\"llvm didn't like `{}`: {}\", filename.display(), e);\n-            format!(\"failed to read rlib metadata in '{}': {}\", filename.display(), e)\n-        })?;\n+        let archive =\n+            ArchiveRO::open(filename).map(|ar| OwningRef::new(Box::new(ar))).map_err(|e| {\n+                debug!(\"llvm didn't like `{}`: {}\", filename.display(), e);\n+                format!(\"failed to read rlib metadata in '{}': {}\", filename.display(), e)\n+            })?;\n         let buf: OwningRef<_, [u8]> = archive.try_map(|ar| {\n             ar.iter()\n                 .filter_map(|s| s.ok())\n@@ -44,9 +45,10 @@ impl MetadataLoader for LlvmMetadataLoader {\n             let buf = path_to_c_string(filename);\n             let mb = llvm::LLVMRustCreateMemoryBufferWithContentsOfFile(buf.as_ptr())\n                 .ok_or_else(|| format!(\"error reading library: '{}'\", filename.display()))?;\n-            let of = ObjectFile::new(mb).map(|of| OwningRef::new(box of)).ok_or_else(|| {\n-                format!(\"provided path not an object file: '{}'\", filename.display())\n-            })?;\n+            let of =\n+                ObjectFile::new(mb).map(|of| OwningRef::new(Box::new(of))).ok_or_else(|| {\n+                    format!(\"provided path not an object file: '{}'\", filename.display())\n+                })?;\n             let buf = of.try_map(|of| search_meta_section(of, target, filename))?;\n             Ok(rustc_erase_owner!(buf))\n         }"}, {"sha": "a2bb39b9e401935d222c16bd79d66ba8bce67777", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -1,10 +1,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n-#![feature(box_syntax)]\n-#![feature(core_intrinsics)]\n-#![feature(libc)]\n-#![feature(stmt_expr_attributes)]\n #![feature(try_blocks)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]"}, {"sha": "38906bbaef8104f07fcf152e030ec1bc690ad9b8", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -3,10 +3,6 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n-#![feature(arbitrary_self_types)]\n-#![feature(box_patterns)]\n-#![feature(box_syntax)]\n-#![feature(core_intrinsics)]\n #![feature(never_type)]\n #![feature(nll)]\n #![feature(in_band_lifetimes)]"}, {"sha": "13792a0c890c4bc8e6587b429d353f98cc38ff23", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -12,19 +12,16 @@\n #![feature(generators)]\n #![feature(generator_trait)]\n #![feature(fn_traits)]\n-#![feature(unsize)]\n #![feature(specialization)]\n #![feature(optin_builtin_traits)]\n #![feature(nll)]\n #![feature(allow_internal_unstable)]\n #![feature(hash_raw_entry)]\n #![feature(stmt_expr_attributes)]\n #![feature(core_intrinsics)]\n-#![feature(integer_atomics)]\n #![feature(test)]\n #![feature(associated_type_bounds)]\n #![feature(thread_id_value)]\n-#![cfg_attr(unix, feature(libc))]\n #![allow(rustc::default_hash_types)]\n \n #[macro_use]"}, {"sha": "52c63994985348126aef97322073ab56507daf06", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -5,12 +5,7 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n-#![feature(box_syntax)]\n-#![cfg_attr(unix, feature(libc))]\n #![feature(nll)]\n-#![feature(set_stdio)]\n-#![feature(no_debug)]\n-#![feature(integer_atomics)]\n #![recursion_limit = \"256\"]\n \n pub extern crate getopts;"}, {"sha": "594e813def8a90b72ebad42caa3903655c9bedb7", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -4,9 +4,7 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(crate_visibility_modifier)]\n-#![cfg_attr(unix, feature(libc))]\n #![feature(nll)]\n-#![feature(optin_builtin_traits)]\n \n pub use emitter::ColorConfig;\n "}, {"sha": "ca824fde7efc1156eefba0a1170a6329c3fdaa5a", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -3,7 +3,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n-#![feature(specialization)]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "ba1e2216ca805df35d394e3ed443c83b9483e8b0", "filename": "src/librustc_interface/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_interface%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_interface%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -2,10 +2,8 @@\n #![feature(box_syntax)]\n #![feature(set_stdio)]\n #![feature(nll)]\n-#![feature(arbitrary_self_types)]\n #![feature(generator_trait)]\n #![feature(generators)]\n-#![cfg_attr(unix, feature(libc))]\n #![recursion_limit = \"256\"]\n \n #[cfg(unix)]"}, {"sha": "2204e104803b32d49a49b9ed7be92ca7adf5da86", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -28,7 +28,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![cfg_attr(test, feature(test))]\n #![feature(bool_to_option)]\n-#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(crate_visibility_modifier)]\n #![feature(never_type)]"}, {"sha": "d4cc3c32616ac02a88e808eeb9e0a57833af26c7", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -1,15 +1,11 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(bool_to_option)]\n-#![feature(box_patterns)]\n #![feature(core_intrinsics)]\n #![feature(crate_visibility_modifier)]\n #![feature(drain_filter)]\n #![feature(in_band_lifetimes)]\n-#![feature(libc)]\n #![feature(nll)]\n #![feature(proc_macro_internals)]\n-#![feature(proc_macro_quote)]\n-#![feature(rustc_private)]\n #![feature(specialization)]\n #![feature(stmt_expr_attributes)]\n #![recursion_limit = \"256\"]"}, {"sha": "4f1b90e34cf003d34e4ae7c06ada312f418351f5", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -6,21 +6,15 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n \n #![feature(nll)]\n #![feature(in_band_lifetimes)]\n-#![feature(inner_deref)]\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(crate_visibility_modifier)]\n-#![feature(core_intrinsics)]\n-#![feature(decl_macro)]\n #![feature(drain_filter)]\n #![feature(exhaustive_patterns)]\n #![feature(iter_order_by)]\n #![feature(never_type)]\n #![feature(specialization)]\n-#![feature(try_trait)]\n-#![feature(unicode_internals)]\n-#![feature(slice_concat_ext)]\n #![feature(trusted_len)]\n #![feature(try_blocks)]\n #![feature(associated_type_bounds)]"}, {"sha": "2e63c3e1706053b10a8c62a1ea9ad4f3fcef27ad", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -9,7 +9,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(bool_to_option)]\n #![feature(crate_visibility_modifier)]\n-#![feature(label_break_value)]\n #![feature(nll)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "8f00b76001f044a6729725f9afbc23b13ac8329a", "filename": "src/librustc_span/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_span%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_span%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -8,9 +8,7 @@\n #![feature(crate_visibility_modifier)]\n #![feature(nll)]\n #![feature(optin_builtin_traits)]\n-#![feature(rustc_attrs)]\n #![feature(specialization)]\n-#![feature(step_trait)]\n \n use rustc_data_structures::AtomicRef;\n use rustc_macros::HashStable_Generic;"}, {"sha": "71150e74f70d45ddab3dd30cc73acac71ee4223d", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -8,7 +8,6 @@\n //! LLVM.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n-#![feature(box_syntax)]\n #![feature(bool_to_option)]\n #![feature(nll)]\n "}, {"sha": "474868f0dd6c417feb3742454e0818645c970003", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -58,10 +58,8 @@ This API is completely unstable and subject to change.\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![allow(non_camel_case_types)]\n #![feature(bool_to_option)]\n-#![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(crate_visibility_modifier)]\n-#![feature(exhaustive_patterns)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n #![feature(try_blocks)]"}, {"sha": "4e0a2d9427431778ce821fb4185670e6c742c9cb", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -3,19 +3,15 @@\n     html_playground_url = \"https://play.rust-lang.org/\"\n )]\n #![feature(rustc_private)]\n-#![feature(arbitrary_self_types)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n-#![feature(set_stdio)]\n #![feature(test)]\n #![feature(vec_remove_item)]\n #![feature(ptr_offset_from)]\n #![feature(crate_visibility_modifier)]\n-#![feature(drain_filter)]\n #![feature(never_type)]\n-#![feature(unicode_internals)]\n #![recursion_limit = \"256\"]\n \n extern crate env_logger;"}, {"sha": "b990e71bef0dd722aab3fe557c1fb18eae58916e", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -10,7 +10,6 @@ Core encoding and decoding interfaces.\n     test(attr(allow(unused_variables), deny(warnings)))\n )]\n #![feature(box_syntax)]\n-#![feature(core_intrinsics)]\n #![feature(specialization)]\n #![feature(never_type)]\n #![feature(nll)]"}, {"sha": "3eb8e0ec182881c4cbaace481293ae85f1a5a82b", "filename": "src/test/ui/consts/miri_unleashed/mutable_const2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr?ref=ec0cfd1d0150b3d9ba3d938b1d3d31cb6050524f", "patch": "@@ -10,7 +10,7 @@ error: internal compiler error: mutable allocation in constant\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-thread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:357:17\n+thread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:355:17\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n \n error: internal compiler error: unexpected panic"}]}