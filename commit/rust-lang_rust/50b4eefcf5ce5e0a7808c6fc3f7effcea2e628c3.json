{"sha": "50b4eefcf5ce5e0a7808c6fc3f7effcea2e628c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYjRlZWZjZjVjZTVlMGE3ODA4YzZmYzNmN2VmZmNlYTJlNjI4YzM=", "commit": {"author": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2018-11-28T16:10:21Z"}, "committer": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2018-11-28T16:10:21Z"}, "message": "rustdoc: Fix inlining reexported custom derives", "tree": {"sha": "29f2f8f4ddf0862812a22a905aa91d1e22d7c353", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29f2f8f4ddf0862812a22a905aa91d1e22d7c353"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50b4eefcf5ce5e0a7808c6fc3f7effcea2e628c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEt/EOFp+yWvA8Dk28qHvO5SBc5IkFAlv+vggACgkQqHvO5SBc\n5IkvQwgApG6f22gUbT6WZwMi8s1R+gBd0/oGPNv9Dl6VyYmLpLkrg83jdg0OmGcp\nd64lgAhDAmA9h19C5Ll3U64TbVpp7DXFLRVIoam54LRVTmcsKa5GL0t1HlEYP6ZW\nGUteE2AWu0vJBkM+4+0XDkr45onbQYc84MvokRJapnVt+abTwRuW17gLocyi+59J\nikdVYlsGibqERl7ba35v+oDWdPHXl3lfR1rIf/3Slj1ywPmOUGHBF62qQDB5adn+\n+7sEv44wiR8P3r5Hr9XrTGZWimL5oVjNB18IA6R6V7gfr5mcAxr3Ugm/YoAKmOmD\n30W8EXuMOofgR878D+0ZV6QI+L5zJw==\n=6aNn\n-----END PGP SIGNATURE-----", "payload": "tree 29f2f8f4ddf0862812a22a905aa91d1e22d7c353\nparent cd17b1d4b684df5fb04d0ee08342446463d20b18\nauthor Georg Semmler <georg_semmler_05@web.de> 1543421421 +0100\ncommitter Georg Semmler <georg_semmler_05@web.de> 1543421421 +0100\n\nrustdoc: Fix inlining reexported custom derives\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50b4eefcf5ce5e0a7808c6fc3f7effcea2e628c3", "html_url": "https://github.com/rust-lang/rust/commit/50b4eefcf5ce5e0a7808c6fc3f7effcea2e628c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50b4eefcf5ce5e0a7808c6fc3f7effcea2e628c3/comments", "author": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd17b1d4b684df5fb04d0ee08342446463d20b18", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd17b1d4b684df5fb04d0ee08342446463d20b18", "html_url": "https://github.com/rust-lang/rust/commit/cd17b1d4b684df5fb04d0ee08342446463d20b18"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "464b6ea4fbe41e87c4d8fdba200662a26222cd90", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/50b4eefcf5ce5e0a7808c6fc3f7effcea2e628c3/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50b4eefcf5ce5e0a7808c6fc3f7effcea2e628c3/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=50b4eefcf5ce5e0a7808c6fc3f7effcea2e628c3", "patch": "@@ -106,13 +106,23 @@ pub fn try_inline(cx: &DocContext, def: Def, name: ast::Name, visited: &mut FxHa\n             clean::ConstantItem(build_const(cx, did))\n         }\n         // FIXME: proc-macros don't propagate attributes or spans across crates, so they look empty\n+        Def::Macro(did, MacroKind::Derive) |\n         Def::Macro(did, MacroKind::Bang) => {\n             let mac = build_macro(cx, did, name);\n-            if let clean::MacroItem(..) = mac {\n-                record_extern_fqn(cx, did, clean::TypeKind::Macro);\n-                mac\n-            } else {\n-                return None;\n+            debug!(\"try_inline: {:?}\", mac);\n+\n+            match build_macro(cx, did, name) {\n+                clean::MacroItem(..) => {\n+                    record_extern_fqn(cx, did, clean::TypeKind::Macro);\n+                    mac\n+                }\n+                clean::ProcMacroItem(..) => {\n+                    record_extern_fqn(cx, did, clean::TypeKind::Derive);\n+                    mac\n+                }\n+                _ => {\n+                    return None;\n+                }\n             }\n         }\n         _ => return None,"}]}