{"sha": "c05bebcd67b08acd011dc8e0ef025f5f88bf2659", "node_id": "C_kwDOAAsO6NoAKGMwNWJlYmNkNjdiMDhhY2QwMTFkYzhlMGVmMDI1ZjVmODhiZjI2NTk", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-03-18T09:49:30Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-03-19T09:11:17Z"}, "message": "fix: fix ICE in `custom-test-frameworks` feature", "tree": {"sha": "c1fa5e1b105863f9787041a8ec079393ee8eedf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1fa5e1b105863f9787041a8ec079393ee8eedf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c05bebcd67b08acd011dc8e0ef025f5f88bf2659", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEINUdoc4Vb1yVx04IZ6vxb7Ds2HAFAmQW0bUACgkQZ6vxb7Ds\n2HAoZBAApQH2KHDvM+pKBBAsLHrixUbvK0u8NnHcpsWZNDWa/yq6nSAEw9YvQhux\nF5H4EerUQA9qb4/iEEkJV+RTiR6mj2d1qMpStUpiZ72biRq3QG2RyTgoHNpXwFVw\nDvXlOZCarvUR2/mw82IjbUpRJB0mHieWp2+d70qQL3XJXl3SklNcm30VxtSAow77\n/oE+2tf2tX2PaAkA4t0J8qWKX+vFjZzojJkYhJZpnOK21CMl4tol/dwngiCxLOJK\nJLtVU6TH13J7nqHps6RzQTV+n23P7SdVSDBqxSI62LbpbrB7HGgXHxcU+BQTg2XM\nlNgzc4m+VnlNUo2iNM85z4x8xNH0tshad7mXbU8DAq+UGgrpipDQ+TYjahifIN0y\n5pqW3CiRs+BWxe9UuffscRxM20Z6OvEQM5GYnk48oIkCll40I9rA9qRVdRnPLFTq\nhyEvKQVXPphhWS9ciF2YbW1iHt3Y28If60Ieg51PLt+uuwxGxJljD92ixsF4FHaC\nKafb/QH70G/7K9dAzWuyTLEGpuPcPMt2qOl2Z5Di++co9LR7oHSQMFbJWpTpYxIm\nJPNnSCngaN1ZyIx+c4K8Wfq41zcIoRyhy0TTO4gud3s6+xawhso9WjTgH4X6X2q6\nIvSijw+Q/e5Q8VPoCDyOVwFXU69u64lPsDa8ppQgw5TjivngAgg=\n=Dlq0\n-----END PGP SIGNATURE-----", "payload": "tree c1fa5e1b105863f9787041a8ec079393ee8eedf2\nparent 85123d2504885e4670d80dab96f4f9629f2be98b\nauthor Ezra Shaw <ezrasure@outlook.com> 1679132970 +1300\ncommitter Ezra Shaw <ezrasure@outlook.com> 1679217077 +1300\n\nfix: fix ICE in `custom-test-frameworks` feature\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c05bebcd67b08acd011dc8e0ef025f5f88bf2659", "html_url": "https://github.com/rust-lang/rust/commit/c05bebcd67b08acd011dc8e0ef025f5f88bf2659", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c05bebcd67b08acd011dc8e0ef025f5f88bf2659/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85123d2504885e4670d80dab96f4f9629f2be98b", "url": "https://api.github.com/repos/rust-lang/rust/commits/85123d2504885e4670d80dab96f4f9629f2be98b", "html_url": "https://github.com/rust-lang/rust/commit/85123d2504885e4670d80dab96f4f9629f2be98b"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "8d892fa41705ef660bce27050363776df51b9dd2", "filename": "compiler/rustc_builtin_macros/src/test.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c05bebcd67b08acd011dc8e0ef025f5f88bf2659/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c05bebcd67b08acd011dc8e0ef025f5f88bf2659/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest.rs?ref=c05bebcd67b08acd011dc8e0ef025f5f88bf2659", "patch": "@@ -33,7 +33,23 @@ pub fn expand_test_case(\n     }\n \n     let sp = ecx.with_def_site_ctxt(attr_sp);\n-    let mut item = anno_item.expect_item();\n+    let (mut item, is_stmt) = match anno_item {\n+        Annotatable::Item(item) => (item, false),\n+        Annotatable::Stmt(stmt) if let ast::StmtKind::Item(_) = stmt.kind => if let ast::StmtKind::Item(i) = stmt.into_inner().kind {\n+            (i, true)\n+        } else {\n+            unreachable!()\n+        },\n+        _ => {\n+            ecx.struct_span_err(\n+                anno_item.span(),\n+                \"`#[test_case]` attribute is only allowed on items\",\n+            )\n+            .emit();\n+\n+            return vec![];\n+        }\n+    };\n     item = item.map(|mut item| {\n         let test_path_symbol = Symbol::intern(&item_path(\n             // skip the name of the root module\n@@ -50,7 +66,13 @@ pub fn expand_test_case(\n         item\n     });\n \n-    return vec![Annotatable::Item(item)];\n+    let ret = if is_stmt {\n+        Annotatable::Stmt(P(ecx.stmt_item(item.span, item)))\n+    } else {\n+        Annotatable::Item(item)\n+    };\n+\n+    vec![ret]\n }\n \n pub fn expand_test("}, {"sha": "2bb133e8bfd42667fec4f3b3f695b395dbb4ef39", "filename": "tests/ui/test-attrs/custom-test-frameworks/issue-107454.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c05bebcd67b08acd011dc8e0ef025f5f88bf2659/tests%2Fui%2Ftest-attrs%2Fcustom-test-frameworks%2Fissue-107454.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c05bebcd67b08acd011dc8e0ef025f5f88bf2659/tests%2Fui%2Ftest-attrs%2Fcustom-test-frameworks%2Fissue-107454.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftest-attrs%2Fcustom-test-frameworks%2Fissue-107454.rs?ref=c05bebcd67b08acd011dc8e0ef025f5f88bf2659", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: --test\n+\n+#![feature(custom_test_frameworks)]\n+#![deny(unnameable_test_items)]\n+\n+fn foo() {\n+    #[test_case]\n+    //~^ ERROR cannot test inner items [unnameable_test_items]\n+    fn test2() {}\n+}"}, {"sha": "bd604afb79f8e5a4a3a69288c8f172609d15fe00", "filename": "tests/ui/test-attrs/custom-test-frameworks/issue-107454.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c05bebcd67b08acd011dc8e0ef025f5f88bf2659/tests%2Fui%2Ftest-attrs%2Fcustom-test-frameworks%2Fissue-107454.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c05bebcd67b08acd011dc8e0ef025f5f88bf2659/tests%2Fui%2Ftest-attrs%2Fcustom-test-frameworks%2Fissue-107454.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftest-attrs%2Fcustom-test-frameworks%2Fissue-107454.stderr?ref=c05bebcd67b08acd011dc8e0ef025f5f88bf2659", "patch": "@@ -0,0 +1,15 @@\n+error: cannot test inner items\n+  --> $DIR/issue-107454.rs:7:5\n+   |\n+LL |     #[test_case]\n+   |     ^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-107454.rs:4:9\n+   |\n+LL | #![deny(unnameable_test_items)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^\n+   = note: this error originates in the attribute macro `test_case` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}