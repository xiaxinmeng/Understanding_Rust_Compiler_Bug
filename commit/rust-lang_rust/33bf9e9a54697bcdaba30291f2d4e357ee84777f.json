{"sha": "33bf9e9a54697bcdaba30291f2d4e357ee84777f", "node_id": "C_kwDOAAsO6NoAKDMzYmY5ZTlhNTQ2OTdiY2RhYmEzMDI5MWYyZDRlMzU3ZWU4NDc3N2Y", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-02-23T15:04:06Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-04-27T05:05:01Z"}, "message": "`redundant_closure` ignore coerced closure", "tree": {"sha": "70180d770b7d14468a563dfec3a02406b3b36bf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70180d770b7d14468a563dfec3a02406b3b36bf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33bf9e9a54697bcdaba30291f2d4e357ee84777f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33bf9e9a54697bcdaba30291f2d4e357ee84777f", "html_url": "https://github.com/rust-lang/rust/commit/33bf9e9a54697bcdaba30291f2d4e357ee84777f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33bf9e9a54697bcdaba30291f2d4e357ee84777f/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95396f61bcc3f9439132d57dcd21b6aa0a5deb73", "url": "https://api.github.com/repos/rust-lang/rust/commits/95396f61bcc3f9439132d57dcd21b6aa0a5deb73", "html_url": "https://github.com/rust-lang/rust/commit/95396f61bcc3f9439132d57dcd21b6aa0a5deb73"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "1b19868e4c70faf2d33f6a5911528f971b25672b", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33bf9e9a54697bcdaba30291f2d4e357ee84777f/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33bf9e9a54697bcdaba30291f2d4e357ee84777f/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=33bf9e9a54697bcdaba30291f2d4e357ee84777f", "patch": "@@ -3,7 +3,7 @@ use clippy_utils::higher::VecArgs;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::is_type_diagnostic_item;\n use clippy_utils::usage::local_used_after_expr;\n-use clippy_utils::{higher, path_to_local, path_to_local_id};\n+use clippy_utils::{higher, is_adjusted, path_to_local, path_to_local_id};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::def_id::DefId;\n@@ -103,6 +103,7 @@ impl<'tcx> LateLintPass<'tcx> for EtaReduction {\n         let closure_ty = cx.typeck_results().expr_ty(expr);\n \n         if_chain!(\n+            if !is_adjusted(cx, &body.value);\n             if let ExprKind::Call(callee, args) = body.value.kind;\n             if let ExprKind::Path(_) = callee.kind;\n             if check_inputs(cx, body.params, args);\n@@ -144,6 +145,7 @@ impl<'tcx> LateLintPass<'tcx> for EtaReduction {\n         );\n \n         if_chain!(\n+            if !is_adjusted(cx, &body.value);\n             if let ExprKind::MethodCall(path, args, _) = body.value.kind;\n             if check_inputs(cx, body.params, args);\n             let method_def_id = cx.typeck_results().type_dependent_def_id(body.value.hir_id).unwrap();"}, {"sha": "6c2272f4dff97f350344b4fbb66fc5d4ba4cb146", "filename": "tests/ui/eta.fixed", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33bf9e9a54697bcdaba30291f2d4e357ee84777f/tests%2Fui%2Feta.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/33bf9e9a54697bcdaba30291f2d4e357ee84777f/tests%2Fui%2Feta.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.fixed?ref=33bf9e9a54697bcdaba30291f2d4e357ee84777f", "patch": "@@ -37,7 +37,7 @@ fn main() {\n     }\n \n     // See #815\n-    let e = Some(1u8).map(divergent);\n+    let e = Some(1u8).map(|a| divergent(a));\n     let e = Some(1u8).map(generic);\n     let e = Some(1u8).map(generic);\n     // See #515\n@@ -233,7 +233,7 @@ fn late_bound_lifetimes() {\n     {\n     }\n     map_str(|s| take_asref_path(s));\n-    map_str_to_path(std::convert::AsRef::as_ref);\n+    map_str_to_path(|s| s.as_ref());\n }\n \n mod type_param_bound {\n@@ -279,3 +279,15 @@ mod bind_by_ref {\n         Some(A).map(|ref a| B::from(a));\n     }\n }\n+\n+// #7812 False positive on coerced closure\n+fn coerced_closure() {\n+    fn function_returning_unit<F: FnMut(i32)>(f: F) {}\n+    function_returning_unit(|x| std::process::exit(x));\n+\n+    fn arr() -> &'static [u8; 0] {\n+        &[]\n+    }\n+    fn slice_fn(_: impl FnOnce() -> &'static [u8]) {}\n+    slice_fn(|| arr());\n+}"}, {"sha": "a1a9c0dfbf381d64ae7f47d3fdc46cb1e981ad69", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/33bf9e9a54697bcdaba30291f2d4e357ee84777f/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33bf9e9a54697bcdaba30291f2d4e357ee84777f/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=33bf9e9a54697bcdaba30291f2d4e357ee84777f", "patch": "@@ -279,3 +279,15 @@ mod bind_by_ref {\n         Some(A).map(|ref a| B::from(a));\n     }\n }\n+\n+// #7812 False positive on coerced closure\n+fn coerced_closure() {\n+    fn function_returning_unit<F: FnMut(i32)>(f: F) {}\n+    function_returning_unit(|x| std::process::exit(x));\n+\n+    fn arr() -> &'static [u8; 0] {\n+        &[]\n+    }\n+    fn slice_fn(_: impl FnOnce() -> &'static [u8]) {}\n+    slice_fn(|| arr());\n+}"}, {"sha": "bf2e97e744ab348d639991e748d71df3d87c1b82", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/33bf9e9a54697bcdaba30291f2d4e357ee84777f/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33bf9e9a54697bcdaba30291f2d4e357ee84777f/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=33bf9e9a54697bcdaba30291f2d4e357ee84777f", "patch": "@@ -24,12 +24,6 @@ error: redundant closure\n LL |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n    |                          ^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `below`\n \n-error: redundant closure\n-  --> $DIR/eta.rs:40:27\n-   |\n-LL |     let e = Some(1u8).map(|a| divergent(a));\n-   |                           ^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `divergent`\n-\n error: redundant closure\n   --> $DIR/eta.rs:41:27\n    |\n@@ -122,11 +116,5 @@ error: redundant closure\n LL |         Some(1).map(|n| in_loop(n));\n    |                     ^^^^^^^^^^^^^^ help: replace the closure with the function itself: `in_loop`\n \n-error: redundant closure\n-  --> $DIR/eta.rs:236:21\n-   |\n-LL |     map_str_to_path(|s| s.as_ref());\n-   |                     ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::convert::AsRef::as_ref`\n-\n-error: aborting due to 21 previous errors\n+error: aborting due to 19 previous errors\n "}]}