{"sha": "3730485a24e95db1f77201c6173cd189f403d151", "node_id": "C_kwDOAAsO6NoAKDM3MzA0ODVhMjRlOTVkYjFmNzcyMDFjNjE3M2NkMTg5ZjQwM2QxNTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-01T02:33:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-01T02:33:07Z"}, "message": "Rollup merge of #90349 - willcrichton:example-analyzer, r=jyn514\n\nFix rare ICE during typeck in rustdoc scrape_examples\n\nWhile testing the `--scrape-examples` extension on the [wasmtime](https://github.com/bytecodealliance/wasmtime) repository, I found some additional edge cases. Specifically, when asking to typecheck a body containing a function call, I would sometimes get an ICE if:\n* The body doesn't exist\n* The function's HIR node didn't have a type\n\nThis adds checks for both of those conditions.\n\n(Also this updates a test to check that the sources of a reverse-dependency are correctly generated and linked.)\n\nr? `@jyn514`", "tree": {"sha": "fa05b28a22d3ae938db5788d43313b7819e2b110", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa05b28a22d3ae938db5788d43313b7819e2b110"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3730485a24e95db1f77201c6173cd189f403d151", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhf1HjCRBK7hj4Ov3rIwAAxN0IABcmHBiDQ1hLMvGexnTV5Qn8\nnp6KzwAFZYG1DTGNGNjGVBb/6Bg4GPuATw57J9M/IlxeA7WKt3XOVHpIkv+DPv5D\n2hCSi+Ya4rcNxdrEY2PlpvhF9DaFFp7SOlc/VV3DF5skWguTpD4MCqziQdlFi+xI\njbRgzuLyfDqdMRB7Xv/AnIzNejc0R6ypaaw3f3EwdaH0/s3gEG7oxW0KUR5hArxP\nBRM/ESPeKRblEv2W84rZcUo9PemJOyccrIRvFb607QPTI0a9Nkpj5jGTkQ928Azz\nCq575iA9hfFVXzZMVuX8sbHaY5XMkgXvjT4q/rD/0wOGR9BE8ZH7e8k1BTmcnn4=\n=i/DL\n-----END PGP SIGNATURE-----\n", "payload": "tree fa05b28a22d3ae938db5788d43313b7819e2b110\nparent bb6901d32b21627e39825699d66c171141c14fd7\nparent b8ecc9fefa4c9c763cf74e9c9659ecc00f30ba3a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635733987 +0100\ncommitter GitHub <noreply@github.com> 1635733987 +0100\n\nRollup merge of #90349 - willcrichton:example-analyzer, r=jyn514\n\nFix rare ICE during typeck in rustdoc scrape_examples\n\nWhile testing the `--scrape-examples` extension on the [wasmtime](https://github.com/bytecodealliance/wasmtime) repository, I found some additional edge cases. Specifically, when asking to typecheck a body containing a function call, I would sometimes get an ICE if:\n* The body doesn't exist\n* The function's HIR node didn't have a type\n\nThis adds checks for both of those conditions.\n\n(Also this updates a test to check that the sources of a reverse-dependency are correctly generated and linked.)\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3730485a24e95db1f77201c6173cd189f403d151", "html_url": "https://github.com/rust-lang/rust/commit/3730485a24e95db1f77201c6173cd189f403d151", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3730485a24e95db1f77201c6173cd189f403d151/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb6901d32b21627e39825699d66c171141c14fd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb6901d32b21627e39825699d66c171141c14fd7", "html_url": "https://github.com/rust-lang/rust/commit/bb6901d32b21627e39825699d66c171141c14fd7"}, {"sha": "b8ecc9fefa4c9c763cf74e9c9659ecc00f30ba3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8ecc9fefa4c9c763cf74e9c9659ecc00f30ba3a", "html_url": "https://github.com/rust-lang/rust/commit/b8ecc9fefa4c9c763cf74e9c9659ecc00f30ba3a"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "05e746573f47989f19da6f5a963214726f1b8ff9", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3730485a24e95db1f77201c6173cd189f403d151/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3730485a24e95db1f77201c6173cd189f403d151/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=3730485a24e95db1f77201c6173cd189f403d151", "patch": "@@ -132,12 +132,28 @@ where\n     fn visit_expr(&mut self, ex: &'tcx hir::Expr<'tcx>) {\n         intravisit::walk_expr(self, ex);\n \n-        // Get type of function if expression is a function call\n         let tcx = self.tcx;\n+\n+        // If we visit an item that contains an expression outside a function body,\n+        // then we need to exit before calling typeck (which will panic). See\n+        // test/run-make/rustdoc-scrape-examples-invalid-expr for an example.\n+        let hir = tcx.hir();\n+        let owner = hir.local_def_id_to_hir_id(ex.hir_id.owner);\n+        if hir.maybe_body_owned_by(owner).is_none() {\n+            return;\n+        }\n+\n+        // Get type of function if expression is a function call\n         let (ty, span) = match ex.kind {\n             hir::ExprKind::Call(f, _) => {\n                 let types = tcx.typeck(ex.hir_id.owner);\n-                (types.node_type(f.hir_id), ex.span)\n+\n+                match types.node_type_opt(f.hir_id) {\n+                    Some(ty) => (ty, ex.span),\n+                    None => {\n+                        return;\n+                    }\n+                }\n             }\n             hir::ExprKind::MethodCall(_, _, _, span) => {\n                 let types = tcx.typeck(ex.hir_id.owner);"}, {"sha": "dce8b83eefe4efd68139f03ed800a171f42f9303", "filename": "src/test/run-make/rustdoc-scrape-examples-invalid-expr/Makefile", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3730485a24e95db1f77201c6173cd189f403d151/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3730485a24e95db1f77201c6173cd189f403d151/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2FMakefile?ref=3730485a24e95db1f77201c6173cd189f403d151", "patch": "@@ -0,0 +1,5 @@\n+deps := ex\n+\n+-include ../rustdoc-scrape-examples-multiple/scrape.mk\n+\n+all: scrape"}, {"sha": "b342b5b0aaece9fb228d72dbe53570c417348408", "filename": "src/test/run-make/rustdoc-scrape-examples-invalid-expr/examples/ex.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3730485a24e95db1f77201c6173cd189f403d151/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2Fexamples%2Fex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3730485a24e95db1f77201c6173cd189f403d151/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2Fexamples%2Fex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2Fexamples%2Fex.rs?ref=3730485a24e95db1f77201c6173cd189f403d151", "patch": "@@ -0,0 +1,2 @@\n+pub struct Foo([usize; foobar::f()]);\n+fn main() {}"}, {"sha": "c30c99dec6038208b769ddb69b13073e7b7b164c", "filename": "src/test/run-make/rustdoc-scrape-examples-invalid-expr/src/lib.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3730485a24e95db1f77201c6173cd189f403d151/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3730485a24e95db1f77201c6173cd189f403d151/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-invalid-expr%2Fsrc%2Flib.rs?ref=3730485a24e95db1f77201c6173cd189f403d151", "patch": "@@ -0,0 +1 @@\n+pub const fn f() -> usize { 5 }"}, {"sha": "bdfeda92d79a0684e6adf2a5e46a27f518b61575", "filename": "src/test/run-make/rustdoc-scrape-examples-multiple/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3730485a24e95db1f77201c6173cd189f403d151/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-multiple%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3730485a24e95db1f77201c6173cd189f403d151/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-multiple%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-multiple%2Fsrc%2Flib.rs?ref=3730485a24e95db1f77201c6173cd189f403d151", "patch": "@@ -1,4 +1,6 @@\n // @has foobar/fn.ok.html '//*[@class=\"docblock scraped-example-list\"]//*[@class=\"prev\"]' ''\n // @has foobar/fn.ok.html '//*[@class=\"more-scraped-examples\"]' ''\n+// @has src/ex/ex.rs.html\n+// @has foobar/fn.ok.html '//a[@href=\"../src/ex/ex.rs.html#2\"]' ''\n \n pub fn ok() {}"}]}