{"sha": "0b7e1baa58dea7cfb1170a361e12c3dec8e76840", "node_id": "C_kwDOAAsO6NoAKDBiN2UxYmFhNThkZWE3Y2ZiMTE3MGEzNjFlMTJjM2RlYzhlNzY4NDA", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-21T21:13:13Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-02-03T18:56:58Z"}, "message": "Add trailing comma support", "tree": {"sha": "f6451c819f4412ec4a82d2b790d8627a8b21910f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6451c819f4412ec4a82d2b790d8627a8b21910f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b7e1baa58dea7cfb1170a361e12c3dec8e76840", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmH8JXwACgkQ+boUO5X/\nbYKsNA//a1dP0qvW0XWWhjlUmRu4slde9kLKEmoz8XI6+ciHWrP3saWjq3okiqcW\n0HnRPsvjEqQA+GWus7D7MmcFAiH5DdQuOE87E8720DxNDgjAlteoZcGcfdwlErON\n1S6K8sNsECDS9zxAuLbjLqiCITBeTmpIL+4/WniKCJ5lZLPFjFiYvS7eFKqC+gvU\nX5379hU0SL4w920U9NAqiJHkEbgmjKdEs9K0CjM2/cKf4On4E/hIG3iWrOdndT93\n3u/n7Bi3bAW24s05qB9sHVkqgWTf+tWWCzRFIaUOzveVbw9LvplV8GLOi1k5vPYe\nuoSbZDlwiwKqTxg7+v/eltpIAN6yU1qmI/IDwfjqlOtciYuAVACXi5Nqc4Pwtosx\nWDViXWbAJLKDeJ1TXdjIjOLWigA8dX4zhazWbe9ThlFN3zzZkcbIOWdN7rLC+se3\nTVeATvpoh8K2uRXENcxt7/VKYYL1iVTjqB1+wS1GF4rZ85O4hgIHyMqxe4ETpMg2\nO3dQ9m5qwfO7gpL6jak3KOG+G1LLurKWKd99MPjsK9xZ2TKt6eCoosAvK5SBO4Wc\nnSwA0dcUIhzTgzq72WMGAsQpLlKQddTpD8URfkICFPidhVtmxVw8ef66Sgy0vPMQ\nhlyR3vl4cHqNJRu3kVg/P8PLoePgmyqkVfbtQV/DDc9+11RQcaQ=\n=BGMU\n-----END PGP SIGNATURE-----", "payload": "tree f6451c819f4412ec4a82d2b790d8627a8b21910f\nparent 4e8fb743ccbec27344b2dd42de7057f41d4ebfdd\nauthor David Tolnay <dtolnay@gmail.com> 1642799593 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1643914618 -0800\n\nAdd trailing comma support\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7e1baa58dea7cfb1170a361e12c3dec8e76840", "html_url": "https://github.com/rust-lang/rust/commit/0b7e1baa58dea7cfb1170a361e12c3dec8e76840", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b7e1baa58dea7cfb1170a361e12c3dec8e76840/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e8fb743ccbec27344b2dd42de7057f41d4ebfdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8fb743ccbec27344b2dd42de7057f41d4ebfdd", "html_url": "https://github.com/rust-lang/rust/commit/4e8fb743ccbec27344b2dd42de7057f41d4ebfdd"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "2433b8fb74fd0eecf678e4200a4dea5a2066e8cd", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0b7e1baa58dea7cfb1170a361e12c3dec8e76840/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7e1baa58dea7cfb1170a361e12c3dec8e76840/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=0b7e1baa58dea7cfb1170a361e12c3dec8e76840", "patch": "@@ -148,7 +148,7 @@ pub enum Breaks {\n     Inconsistent,\n }\n \n-#[derive(Clone, Copy)]\n+#[derive(Clone, Copy, PartialEq)]\n enum IndentStyle {\n     /// Vertically aligned under whatever column this block begins at.\n     ///\n@@ -164,19 +164,20 @@ enum IndentStyle {\n     Block { offset: isize },\n }\n \n-#[derive(Clone, Copy)]\n+#[derive(Clone, Copy, Default, PartialEq)]\n pub struct BreakToken {\n     offset: isize,\n     blank_space: isize,\n+    pre_break: Option<char>,\n }\n \n-#[derive(Clone, Copy)]\n+#[derive(Clone, Copy, PartialEq)]\n pub struct BeginToken {\n     indent: IndentStyle,\n     breaks: Breaks,\n }\n \n-#[derive(Clone)]\n+#[derive(Clone, PartialEq)]\n pub enum Token {\n     // In practice a string token contains either a `&'static str` or a\n     // `String`. `Cow` is overkill for this because we never modify the data,\n@@ -415,6 +416,9 @@ impl Printer {\n             self.pending_indentation += token.blank_space;\n             self.space -= token.blank_space;\n         } else {\n+            if let Some(pre_break) = token.pre_break {\n+                self.out.push(pre_break);\n+            }\n             self.out.push('\\n');\n             let indent = self.indent as isize + token.offset;\n             self.pending_indentation = indent;"}, {"sha": "b9bfafa52ae13e74a9ebe538730e872e1156a678", "filename": "compiler/rustc_ast_pretty/src/pp/convenience.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0b7e1baa58dea7cfb1170a361e12c3dec8e76840/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp%2Fconvenience.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7e1baa58dea7cfb1170a361e12c3dec8e76840/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp%2Fconvenience.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp%2Fconvenience.rs?ref=0b7e1baa58dea7cfb1170a361e12c3dec8e76840", "patch": "@@ -25,7 +25,11 @@ impl Printer {\n     }\n \n     pub fn break_offset(&mut self, n: usize, off: isize) {\n-        self.scan_break(BreakToken { offset: off, blank_space: n as isize })\n+        self.scan_break(BreakToken {\n+            offset: off,\n+            blank_space: n as isize,\n+            ..BreakToken::default()\n+        });\n     }\n \n     pub fn end(&mut self) {\n@@ -66,12 +70,24 @@ impl Printer {\n     }\n \n     pub fn hardbreak_tok_offset(off: isize) -> Token {\n-        Token::Break(BreakToken { offset: off, blank_space: SIZE_INFINITY })\n+        Token::Break(BreakToken {\n+            offset: off,\n+            blank_space: SIZE_INFINITY,\n+            ..BreakToken::default()\n+        })\n+    }\n+\n+    pub fn trailing_comma(&mut self) {\n+        self.scan_break(BreakToken {\n+            blank_space: 1,\n+            pre_break: Some(','),\n+            ..BreakToken::default()\n+        });\n     }\n }\n \n impl Token {\n     pub fn is_hardbreak_tok(&self) -> bool {\n-        matches!(self, Token::Break(BreakToken { offset: 0, blank_space: SIZE_INFINITY }))\n+        *self == Printer::hardbreak_tok_offset(0)\n     }\n }"}]}