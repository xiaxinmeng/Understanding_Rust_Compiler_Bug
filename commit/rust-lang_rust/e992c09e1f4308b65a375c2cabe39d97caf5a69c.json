{"sha": "e992c09e1f4308b65a375c2cabe39d97caf5a69c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OTJjMDllMWY0MzA4YjY1YTM3NWMyY2FiZTM5ZDk3Y2FmNWE2OWM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-17T16:36:02Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-02-17T16:38:31Z"}, "message": "Get rid of format_imports", "tree": {"sha": "dcd36857386040bff739cdab057443693670abc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcd36857386040bff739cdab057443693670abc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e992c09e1f4308b65a375c2cabe39d97caf5a69c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e992c09e1f4308b65a375c2cabe39d97caf5a69c", "html_url": "https://github.com/rust-lang/rust/commit/e992c09e1f4308b65a375c2cabe39d97caf5a69c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e992c09e1f4308b65a375c2cabe39d97caf5a69c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8427b80f570c09031a18fbce7a2d83169bdfea1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8427b80f570c09031a18fbce7a2d83169bdfea1e", "html_url": "https://github.com/rust-lang/rust/commit/8427b80f570c09031a18fbce7a2d83169bdfea1e"}], "stats": {"total": 26, "additions": 8, "deletions": 18}, "files": [{"sha": "e384359c2b402e3762b9aafab57dd17b424c74aa", "filename": "rustfmt-core/src/imports.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e992c09e1f4308b65a375c2cabe39d97caf5a69c/rustfmt-core%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e992c09e1f4308b65a375c2cabe39d97caf5a69c/rustfmt-core%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fimports.rs?ref=e992c09e1f4308b65a375c2cabe39d97caf5a69c", "patch": "@@ -17,10 +17,8 @@ use syntax::codemap::{BytePos, Span};\n use codemap::SpanUtils;\n use config::IndentStyle;\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListItem, Separator};\n-use reorder::rewrite_reorderable_items;\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n-use spanned::Spanned;\n use types::{rewrite_path, PathContext};\n use utils::{format_visibility, mk_sp};\n use visitor::FmtVisitor;\n@@ -125,18 +123,6 @@ pub fn rewrite_import(\n }\n \n impl<'a> FmtVisitor<'a> {\n-    pub fn format_imports(&mut self, use_items: &[&ast::Item]) {\n-        if use_items.is_empty() {\n-            return;\n-        }\n-\n-        let lo = use_items.first().unwrap().span().lo();\n-        let hi = use_items.last().unwrap().span().hi();\n-        let span = mk_sp(lo, hi);\n-        let rw = rewrite_reorderable_items(&self.get_context(), use_items, self.shape(), span);\n-        self.push_rewrite(span, rw);\n-    }\n-\n     pub fn format_import(&mut self, item: &ast::Item, tree: &ast::UseTree) {\n         let span = item.span;\n         let shape = self.shape();"}, {"sha": "58a09bf4d28bf6259a46e25101373b5ca7d03e92", "filename": "rustfmt-core/src/reorder.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e992c09e1f4308b65a375c2cabe39d97caf5a69c/rustfmt-core%2Fsrc%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e992c09e1f4308b65a375c2cabe39d97caf5a69c/rustfmt-core%2Fsrc%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Freorder.rs?ref=e992c09e1f4308b65a375c2cabe39d97caf5a69c", "patch": "@@ -149,7 +149,7 @@ fn compare_items(a: &ast::Item, b: &ast::Item) -> Ordering {\n /// the same `ast::ItemKind`.\n // TODO (some day) remove unused imports, expand globs, compress many single\n // imports into a list import.\n-pub fn rewrite_reorderable_items(\n+fn rewrite_reorderable_items(\n     context: &RewriteContext,\n     reorderable_items: &[&ast::Item],\n     shape: Shape,\n@@ -259,8 +259,12 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             .iter()\n             .any(|item| !out_of_file_lines_range!(self, item.span));\n \n-        if at_least_one_in_file_lines {\n-            self.format_imports(items);\n+        if at_least_one_in_file_lines && !items.is_empty() {\n+            let lo = items.first().unwrap().span().lo();\n+            let hi = items.last().unwrap().span().hi();\n+            let span = mk_sp(lo, hi);\n+            let rw = rewrite_reorderable_items(&self.get_context(), items, self.shape(), span);\n+            self.push_rewrite(span, rw);\n         } else {\n             for item in items {\n                 self.push_rewrite(item.span, None);\n@@ -284,7 +288,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         while !items_left.is_empty() {\n             // If the next item is a `use`, `extern crate` or `mod`, then extract it and any\n             // subsequent items that have the same item kind to be reordered within\n-            // `format_imports`. Otherwise, just format the next item for output.\n+            // `reorder_items`. Otherwise, just format the next item for output.\n             {\n                 try_reorder_items_with!(\n                     reorder_imports,"}]}