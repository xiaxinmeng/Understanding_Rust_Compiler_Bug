{"sha": "7539fc69d5b75f35d97fe98ba02b8a52f5617088", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MzlmYzY5ZDViNzVmMzVkOTdmZTk4YmEwMmI4YTUyZjU2MTcwODg=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-11T19:57:25Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-08-12T22:03:44Z"}, "message": "Reduce genericity in Iterator::last", "tree": {"sha": "b2b33f6f583a6a13925fcdb297a4febdbd32437c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2b33f6f583a6a13925fcdb297a4febdbd32437c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7539fc69d5b75f35d97fe98ba02b8a52f5617088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7539fc69d5b75f35d97fe98ba02b8a52f5617088", "html_url": "https://github.com/rust-lang/rust/commit/7539fc69d5b75f35d97fe98ba02b8a52f5617088", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7539fc69d5b75f35d97fe98ba02b8a52f5617088/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e300e4380d8fab32b39909ee706aec3e9dbde3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e300e4380d8fab32b39909ee706aec3e9dbde3b", "html_url": "https://github.com/rust-lang/rust/commit/0e300e4380d8fab32b39909ee706aec3e9dbde3b"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "d644787d2c462678e9af0b4ad494d34dc170730c", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7539fc69d5b75f35d97fe98ba02b8a52f5617088/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7539fc69d5b75f35d97fe98ba02b8a52f5617088/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=7539fc69d5b75f35d97fe98ba02b8a52f5617088", "patch": "@@ -267,7 +267,12 @@ pub trait Iterator {\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn last(self) -> Option<Self::Item> where Self: Sized {\n-        self.fold(None, |_, x| Some(x))\n+        #[inline]\n+        fn some<T>(_: Option<T>, x: T) -> Option<T> {\n+            Some(x)\n+        }\n+\n+        self.fold(None, some)\n     }\n \n     /// Returns the `n`th element of the iterator."}]}