{"sha": "81b637b6f2b410e81fb47919c8b3817979ec7073", "node_id": "C_kwDOAAsO6NoAKDgxYjYzN2I2ZjJiNDEwZTgxZmI0NzkxOWM4YjM4MTc5NzllYzcwNzM", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2023-01-13T14:54:16Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2023-01-13T14:54:16Z"}, "message": "fmt_type: don't alloc const String, use &str instead", "tree": {"sha": "2fcb79af6477bd96b5a16b5c7681136bf2939062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fcb79af6477bd96b5a16b5c7681136bf2939062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81b637b6f2b410e81fb47919c8b3817979ec7073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81b637b6f2b410e81fb47919c8b3817979ec7073", "html_url": "https://github.com/rust-lang/rust/commit/81b637b6f2b410e81fb47919c8b3817979ec7073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81b637b6f2b410e81fb47919c8b3817979ec7073/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cda6efeeb8d6e6155b776c7fedd32cfeeb37233e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cda6efeeb8d6e6155b776c7fedd32cfeeb37233e", "html_url": "https://github.com/rust-lang/rust/commit/cda6efeeb8d6e6155b776c7fedd32cfeeb37233e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "006076baf7257dab55ae538a5361fb17a06be287", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81b637b6f2b410e81fb47919c8b3817979ec7073/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81b637b6f2b410e81fb47919c8b3817979ec7073/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=81b637b6f2b410e81fb47919c8b3817979ec7073", "patch": "@@ -1055,7 +1055,7 @@ fn fmt_type<'cx>(\n                 _ => String::new(),\n             };\n             let m = mutability.print_with_space();\n-            let amp = if f.alternate() { \"&\".to_string() } else { \"&amp;\".to_string() };\n+            let amp = if f.alternate() { \"&\" } else { \"&amp;\" };\n             match **ty {\n                 clean::DynTrait(ref bounds, ref trait_lt)\n                     if bounds.len() > 1 || trait_lt.is_some() =>"}]}