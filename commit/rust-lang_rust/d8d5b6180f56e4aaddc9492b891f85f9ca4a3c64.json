{"sha": "d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZDViNjE4MGY1NmU0YWFkZGM5NDkyYjg5MWY4NWY5Y2E0YTNjNjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-19T12:20:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-19T12:20:14Z"}, "message": "Auto merge of #46074 - scottmcm:unspecialize-nth, r=bluss\n\nUndo the Sized specialization from Iterator::nth\n\nI just added this as part of https://github.com/rust-lang/rust/pull/45595, but I'm now afraid there's a specialization issue with it, since I tried to add [another similar specialization](https://github.com/rust-lang/rust/compare/master...scottmcm:faster-iter-by-ref?expand=1#diff-1398f322bc563592215b583e9b0ba936R2390), and ended up getting really disturbing test failures like\n```\nthread 'iter::test_by_ref_folds' panicked at 'assertion failed: `(left == right)`\n  left: `15`,\n right: `15`', src\\libcore\\../libcore/tests\\iter.rs:1720:4\n```\n\nSo since this wasn't the most critical part of the change and a new beta is branching within a week, I think putting this part back to what it was before is the best option.", "tree": {"sha": "ffb91f6acf1629c7a7f3f49fda5af960260b9fc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffb91f6acf1629c7a7f3f49fda5af960260b9fc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64", "html_url": "https://github.com/rust-lang/rust/commit/d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5c70ef72369b00870d9fc67b99853b0681e17e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c70ef72369b00870d9fc67b99853b0681e17e2", "html_url": "https://github.com/rust-lang/rust/commit/c5c70ef72369b00870d9fc67b99853b0681e17e2"}, {"sha": "cef45b3baf3593401657f9f40c7c9b08b57a251f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cef45b3baf3593401657f9f40c7c9b08b57a251f", "html_url": "https://github.com/rust-lang/rust/commit/cef45b3baf3593401657f9f40c7c9b08b57a251f"}], "stats": {"total": 32, "additions": 6, "deletions": 26}, "files": [{"sha": "40298389c1ac7d8da4bb754f1e2a6579d01593fd", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 6, "deletions": 26, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64", "patch": "@@ -253,8 +253,12 @@ pub trait Iterator {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    fn nth(&mut self, n: usize) -> Option<Self::Item> {\n-        self.spec_nth(n)\n+    fn nth(&mut self, mut n: usize) -> Option<Self::Item> {\n+        for x in self {\n+            if n == 0 { return Some(x) }\n+            n -= 1;\n+        }\n+        None\n     }\n \n     /// Creates an iterator starting at the same point, but stepping by\n@@ -2381,27 +2385,3 @@ impl<'a, I: Iterator + ?Sized> Iterator for &'a mut I {\n         (**self).nth(n)\n     }\n }\n-\n-\n-trait SpecIterator : Iterator {\n-    fn spec_nth(&mut self, n: usize) -> Option<Self::Item>;\n-}\n-\n-impl<I: Iterator + ?Sized> SpecIterator for I {\n-    default fn spec_nth(&mut self, mut n: usize) -> Option<Self::Item> {\n-        for x in self {\n-            if n == 0 { return Some(x) }\n-            n -= 1;\n-        }\n-        None\n-   }\n-}\n-\n-impl<I: Iterator + Sized> SpecIterator for I {\n-    fn spec_nth(&mut self, n: usize) -> Option<Self::Item> {\n-        self.try_fold(n, move |i, x| {\n-            if i == 0 { LoopState::Break(x) }\n-            else { LoopState::Continue(i - 1) }\n-        }).break_value()\n-   }\n-}"}]}