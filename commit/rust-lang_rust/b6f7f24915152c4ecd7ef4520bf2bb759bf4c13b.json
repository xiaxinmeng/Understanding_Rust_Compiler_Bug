{"sha": "b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZjdmMjQ5MTUxNTJjNGVjZDdlZjQ1MjBiZjJiYjc1OWJmNGMxM2I=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-06-29T19:10:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-29T19:10:48Z"}, "message": "Merge pull request #3661 from calebcartwright/associated-type-bounds\n\nfix handling on associated type bounds", "tree": {"sha": "aa33b7352b92d04ee6374dbeddba58e04b1c3a40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa33b7352b92d04ee6374dbeddba58e04b1c3a40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdF7e4CRBK7hj4Ov3rIwAAdHIIAB1q0nl/NElCW/c2iFLfkWYJ\nu2mZHDfwLSkUo3dyxRl670rPARrPrQ2XDArTuIhbXqB8gSLHLNZ4SV0ZO4+U9WS1\nCdpHz4GCtEH+lsemsLvYCw4DPnBTXw0jV0edn1SOUzEtt70NqaR3Q4z9xuocba/O\nlTER22yWbX5zc4tUBzWm6BKmh/v7ZKiFPndmgQ7ZpyBkdy6tjXf4suZsJO1aEbN5\nGpJQE3yCt9cbdTvITx7w6K0rnJc1mPud1dKCYsuDQw559Au8AQlfNDMYWUcheybx\nJJ8V07t8+smr+0BxooGtlkixDKNrnMT5SXJ8NlHXgBD08vOY6Bk0i+BSi6GTFhc=\n=uZmm\n-----END PGP SIGNATURE-----\n", "payload": "tree aa33b7352b92d04ee6374dbeddba58e04b1c3a40\nparent 1ee51a4125a00a73545a24abe21c041b1cfbefc2\nparent d9e42aea74d2f21b067c9140ffdfb14a456b208d\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1561835448 +0200\ncommitter GitHub <noreply@github.com> 1561835448 +0200\n\nMerge pull request #3661 from calebcartwright/associated-type-bounds\n\nfix handling on associated type bounds"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "html_url": "https://github.com/rust-lang/rust/commit/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ee51a4125a00a73545a24abe21c041b1cfbefc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee51a4125a00a73545a24abe21c041b1cfbefc2", "html_url": "https://github.com/rust-lang/rust/commit/1ee51a4125a00a73545a24abe21c041b1cfbefc2"}, {"sha": "d9e42aea74d2f21b067c9140ffdfb14a456b208d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e42aea74d2f21b067c9140ffdfb14a456b208d", "html_url": "https://github.com/rust-lang/rust/commit/d9e42aea74d2f21b067c9140ffdfb14a456b208d"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "d09e8c01e38b1a261d69c3e4dcfffcfb43a763e7", "filename": "src/types.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "patch": "@@ -168,14 +168,22 @@ impl<'a> Rewrite for SegmentParam<'a> {\n             SegmentParam::LifeTime(lt) => lt.rewrite(context, shape),\n             SegmentParam::Type(ty) => ty.rewrite(context, shape),\n             SegmentParam::Binding(assoc_ty_constraint) => {\n-                let mut result = match context.config.type_punctuation_density() {\n-                    TypeDensity::Wide => {\n-                        format!(\"{} = \", rewrite_ident(context, assoc_ty_constraint.ident))\n+                let mut result = match assoc_ty_constraint.kind {\n+                    ast::AssocTyConstraintKind::Bound { .. } => {\n+                        format!(\"{}: \", rewrite_ident(context, assoc_ty_constraint.ident))\n                     }\n-                    TypeDensity::Compressed => {\n-                        format!(\"{}=\", rewrite_ident(context, assoc_ty_constraint.ident))\n+                    ast::AssocTyConstraintKind::Equality { .. } => {\n+                        match context.config.type_punctuation_density() {\n+                            TypeDensity::Wide => {\n+                                format!(\"{} = \", rewrite_ident(context, assoc_ty_constraint.ident))\n+                            }\n+                            TypeDensity::Compressed => {\n+                                format!(\"{}=\", rewrite_ident(context, assoc_ty_constraint.ident))\n+                            }\n+                        }\n                     }\n                 };\n+\n                 let budget = shape.width.checked_sub(result.len())?;\n                 let rewrite = assoc_ty_constraint\n                     .kind"}, {"sha": "8572778a5a534449436739c476623d35e4272c1e", "filename": "tests/source/associated_type_bounds.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b/tests%2Fsource%2Fassociated_type_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b/tests%2Fsource%2Fassociated_type_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fassociated_type_bounds.rs?ref=b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "patch": "@@ -0,0 +1,13 @@\n+// See #3657 - https://github.com/rust-lang/rustfmt/issues/3657\n+\n+#![feature(associated_type_bounds)]\n+\n+fn f<I: Iterator<Item: Clone>>() {}\n+\n+fn g<I: Iterator<Item : Clone>>() {}\n+\n+fn h<I: Iterator<Item :      Clone>>() {}\n+\n+fn i<I: Iterator<Item:Clone>>() {}\n+\n+fn j<I: Iterator<Item :  Clone+'a>>() {}"}, {"sha": "2dcbd65f86db75d57269007543cc4d743a85d607", "filename": "tests/target/associated_type_bounds.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b/tests%2Ftarget%2Fassociated_type_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b/tests%2Ftarget%2Fassociated_type_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fassociated_type_bounds.rs?ref=b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "patch": "@@ -0,0 +1,13 @@\n+// See #3657 - https://github.com/rust-lang/rustfmt/issues/3657\n+\n+#![feature(associated_type_bounds)]\n+\n+fn f<I: Iterator<Item: Clone>>() {}\n+\n+fn g<I: Iterator<Item: Clone>>() {}\n+\n+fn h<I: Iterator<Item: Clone>>() {}\n+\n+fn i<I: Iterator<Item: Clone>>() {}\n+\n+fn j<I: Iterator<Item: Clone + 'a>>() {}"}]}