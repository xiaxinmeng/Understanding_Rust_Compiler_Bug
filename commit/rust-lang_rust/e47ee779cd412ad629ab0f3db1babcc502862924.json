{"sha": "e47ee779cd412ad629ab0f3db1babcc502862924", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0N2VlNzc5Y2Q0MTJhZDYyOWFiMGYzZGIxYmFiY2M1MDI4NjI5MjQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-19T22:18:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-19T22:18:38Z"}, "message": "wip", "tree": {"sha": "72098aed4c9eb33c6765db191f719188ff7d2935", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72098aed4c9eb33c6765db191f719188ff7d2935"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e47ee779cd412ad629ab0f3db1babcc502862924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e47ee779cd412ad629ab0f3db1babcc502862924", "html_url": "https://github.com/rust-lang/rust/commit/e47ee779cd412ad629ab0f3db1babcc502862924", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e47ee779cd412ad629ab0f3db1babcc502862924/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7270fadfccb8f7b767bf45bda106a55b6a874c03", "url": "https://api.github.com/repos/rust-lang/rust/commits/7270fadfccb8f7b767bf45bda106a55b6a874c03", "html_url": "https://github.com/rust-lang/rust/commit/7270fadfccb8f7b767bf45bda106a55b6a874c03"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "cff224a80bee283cd2730af0a8ae5ada5ba0e9d1", "filename": "src/libcore/rt/io/extensions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fextensions.rs?ref=e47ee779cd412ad629ab0f3db1babcc502862924", "previous_filename": "src/libcore/rt/io/util.rs"}, {"sha": "4e3e01a5eceb9afd028f65ac08175c332baee505", "filename": "src/libcore/rt/io/file.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Ffile.rs?ref=e47ee779cd412ad629ab0f3db1babcc502862924", "patch": "@@ -9,14 +9,10 @@\n // except according to those terms.\n \n use prelude::*;\n-use super::misc::PathLike;\n+use super::support::PathLike;\n use super::{Reader, Writer, Seek, Close};\n use super::{IoError, SeekStyle};\n \n-/// Open a file with the default FileMode and FileAccess\n-/// # XXX are there sane defaults here?\n-pub fn open_file<P: PathLike>(_path: &P) -> FileStream { fail!() }\n-\n /// # XXX\n /// * Ugh, this is ridiculous. What is the best way to represent these options?\n enum FileMode {"}, {"sha": "7ab27cdd7ec55ab8d4acc0091a59f598ac2dc68b", "filename": "src/libcore/rt/io/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fmod.rs?ref=e47ee779cd412ad629ab0f3db1babcc502862924", "patch": "@@ -104,7 +104,6 @@ pub use self::stdio::stderr;\n pub use self::stdio::print;\n pub use self::stdio::println;\n \n-pub use self::file::open_file;\n pub use self::file::FileStream;\n pub use self::net::Listener;\n pub use self::net::ip::IpAddr;\n@@ -113,9 +112,9 @@ pub use self::net::tcp::TcpStream;\n pub use self::net::udp::UdpStream;\n \n // Some extension traits that all Readers and Writers get.\n-pub use self::util::ReaderUtil;\n-pub use self::util::ReaderByteConversions;\n-pub use self::util::WriterByteConversions;\n+pub use self::extensions::ReaderUtil;\n+pub use self::extensions::ReaderByteConversions;\n+pub use self::extensions::WriterByteConversions;\n \n /// Synchronous, non-blocking file I/O.\n pub mod file;\n@@ -140,10 +139,10 @@ pub mod flate;\n pub mod comm_adapters;\n \n /// Extension traits\n-mod util;\n+mod extensions;\n \n /// Non-I/O things needed by the I/O module\n-mod misc;\n+mod support;\n \n /// Thread-blocking implementations\n pub mod native {"}, {"sha": "de886949e7b0da1359d70f9f61519ab66c322a66", "filename": "src/libcore/rt/io/net/unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs?ref=e47ee779cd412ad629ab0f3db1babcc502862924", "patch": "@@ -11,7 +11,7 @@\n use prelude::*;\n use super::*;\n use super::super::*;\n-use super::super::misc::PathLike;\n+use super::super::support::PathLike;\n \n pub struct UnixStream;\n "}, {"sha": "7bace5d6df2ccfdba1cfe7538ab05cbed10da6cb", "filename": "src/libcore/rt/io/support.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e47ee779cd412ad629ab0f3db1babcc502862924/src%2Flibcore%2Frt%2Fio%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fsupport.rs?ref=e47ee779cd412ad629ab0f3db1babcc502862924", "previous_filename": "src/libcore/rt/io/misc.rs"}]}