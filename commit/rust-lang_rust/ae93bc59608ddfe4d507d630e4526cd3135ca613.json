{"sha": "ae93bc59608ddfe4d507d630e4526cd3135ca613", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlOTNiYzU5NjA4ZGRmZTRkNTA3ZDYzMGU0NTI2Y2QzMTM1Y2E2MTM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-25T14:02:16Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-25T14:17:07Z"}, "message": "Warn about unknown or renamed lints\n\nOriginally I tried to do a much broader refactoring that got rid of `init_lints` altogether. My reasoning is that now the lints aren't being run anymore (after https://github.com/rust-lang/rust/pull/73566), there's no need to ignore them explicitly. But it seems there are still some lints that aren't affected by setting `lint_mod` to a no-op:\n\n```\ndeny(pub_use_of_private_extern_crate)\ndeny(const_err)\nwarn(unused_imports)\n```\n\n(there are possibly more, these are just the ones that failed in the rustdoc test suite).\n\nSome of these seem like we really should be warning about, but that's a much larger change and I don't propose to make it here. So for the time being, this just adds the `unknown_lints` and `renamed_or_removed_lints` passes to the list of lints rustdoc warns about.", "tree": {"sha": "a11d8d0de1675791fbe41ad1d6a4b9f07e2e548f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a11d8d0de1675791fbe41ad1d6a4b9f07e2e548f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae93bc59608ddfe4d507d630e4526cd3135ca613", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae93bc59608ddfe4d507d630e4526cd3135ca613", "html_url": "https://github.com/rust-lang/rust/commit/ae93bc59608ddfe4d507d630e4526cd3135ca613", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae93bc59608ddfe4d507d630e4526cd3135ca613/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "html_url": "https://github.com/rust-lang/rust/commit/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "6952e6ed40e3848c2022e74a8159d1f97bb08e89", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ae93bc59608ddfe4d507d630e4526cd3135ca613/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae93bc59608ddfe4d507d630e4526cd3135ca613/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=ae93bc59608ddfe4d507d630e4526cd3135ca613", "patch": "@@ -234,7 +234,7 @@ pub fn new_handler(\n /// It returns a tuple containing:\n ///  * Vector of tuples of lints' name and their associated \"max\" level\n ///  * HashMap of lint id with their associated \"max\" level\n-pub fn init_lints<F>(\n+pub(crate) fn init_lints<F>(\n     mut allowed_lints: Vec<String>,\n     lint_opts: Vec<(String, lint::Level)>,\n     filter_call: F,\n@@ -257,7 +257,10 @@ where\n         .filter_map(|lint| {\n             // Permit feature-gated lints to avoid feature errors when trying to\n             // allow all lints.\n-            if lint.name == warnings_lint_name || lint.feature_gate.is_some() {\n+            if lint.name == warnings_lint_name\n+                || lint.feature_gate.is_some()\n+                || allowed_lints.iter().any(|l| lint.name == l)\n+            {\n                 None\n             } else {\n                 filter_call(lint)\n@@ -328,6 +331,8 @@ pub fn run_core(\n     let private_doc_tests = rustc_lint::builtin::PRIVATE_DOC_TESTS.name;\n     let no_crate_level_docs = rustc_lint::builtin::MISSING_CRATE_LEVEL_DOCS.name;\n     let invalid_codeblock_attributes_name = rustc_lint::builtin::INVALID_CODEBLOCK_ATTRIBUTES.name;\n+    let renamed_and_removed_lints = rustc_lint::builtin::RENAMED_AND_REMOVED_LINTS.name;\n+    let unknown_lints = rustc_lint::builtin::UNKNOWN_LINTS.name;\n \n     // In addition to those specific lints, we also need to allow those given through\n     // command line, otherwise they'll get ignored and we don't want that.\n@@ -338,6 +343,8 @@ pub fn run_core(\n         private_doc_tests.to_owned(),\n         no_crate_level_docs.to_owned(),\n         invalid_codeblock_attributes_name.to_owned(),\n+        renamed_and_removed_lints.to_owned(),\n+        unknown_lints.to_owned(),\n     ];\n \n     let (lint_opts, lint_caps) = init_lints(lints_to_show, lint_opts, |lint| {"}, {"sha": "7faa82ea429c2b94d639448be7e4a9fff49ed222", "filename": "src/test/rustdoc-ui/unknown-renamed-lints.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae93bc59608ddfe4d507d630e4526cd3135ca613/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae93bc59608ddfe4d507d630e4526cd3135ca613/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs?ref=ae93bc59608ddfe4d507d630e4526cd3135ca613", "patch": "@@ -0,0 +1,8 @@\n+#![deny(unknown_lints)]\n+//~^ NOTE lint level is defined\n+#![deny(renamed_and_removed_lints)]\n+//~^ NOTE lint level is defined\n+#![deny(x)]\n+//~^ ERROR unknown lint\n+#![deny(intra_doc_link_resolution_failure)]\n+//~^ ERROR lint `intra_doc_link_resolution_failure` has been renamed"}, {"sha": "f0917f194bb0895cdd1f2e747b21dda37f947e12", "filename": "src/test/rustdoc-ui/unknown-renamed-lints.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ae93bc59608ddfe4d507d630e4526cd3135ca613/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae93bc59608ddfe4d507d630e4526cd3135ca613/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr?ref=ae93bc59608ddfe4d507d630e4526cd3135ca613", "patch": "@@ -0,0 +1,28 @@\n+error: unknown lint: `x`\n+  --> $DIR/unknown-renamed-lints.rs:5:9\n+   |\n+LL | #![deny(x)]\n+   |         ^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unknown-renamed-lints.rs:1:9\n+   |\n+LL | #![deny(unknown_lints)]\n+   |         ^^^^^^^^^^^^^\n+\n+error: lint `intra_doc_link_resolution_failure` has been renamed to `broken_intra_doc_links`\n+  --> $DIR/unknown-renamed-lints.rs:7:9\n+   |\n+LL | #![deny(intra_doc_link_resolution_failure)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `broken_intra_doc_links`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unknown-renamed-lints.rs:3:9\n+   |\n+LL | #![deny(renamed_and_removed_lints)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: Compilation failed, aborting rustdoc\n+\n+error: aborting due to 3 previous errors\n+"}]}