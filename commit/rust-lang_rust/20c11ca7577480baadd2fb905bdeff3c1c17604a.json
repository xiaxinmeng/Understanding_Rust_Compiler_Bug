{"sha": "20c11ca7577480baadd2fb905bdeff3c1c17604a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYzExY2E3NTc3NDgwYmFhZGQyZmI5MDViZGVmZjNjMWMxNzYwNGE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-11-18T04:23:18Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-21T00:39:31Z"}, "message": "libcore: add stat functions to libc", "tree": {"sha": "d378df4e26cf5c69fdf31ea55ac3845d89ecbdaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d378df4e26cf5c69fdf31ea55ac3845d89ecbdaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20c11ca7577480baadd2fb905bdeff3c1c17604a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20c11ca7577480baadd2fb905bdeff3c1c17604a", "html_url": "https://github.com/rust-lang/rust/commit/20c11ca7577480baadd2fb905bdeff3c1c17604a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20c11ca7577480baadd2fb905bdeff3c1c17604a/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28745ce7c8d23444130b10cf101875ddbb4e174d", "url": "https://api.github.com/repos/rust-lang/rust/commits/28745ce7c8d23444130b10cf101875ddbb4e174d", "html_url": "https://github.com/rust-lang/rust/commit/28745ce7c8d23444130b10cf101875ddbb4e174d"}], "stats": {"total": 180, "additions": 176, "deletions": 4}, "files": [{"sha": "be932ce55582ea90fb42cbe8e0ba19747a222168", "filename": "src/libcore/libc.rs", "status": "modified", "additions": 176, "deletions": 4, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/20c11ca7577480baadd2fb905bdeff3c1c17604a/src%2Flibcore%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c11ca7577480baadd2fb905bdeff3c1c17604a/src%2Flibcore%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flibc.rs?ref=20c11ca7577480baadd2fb905bdeff3c1c17604a", "patch": "@@ -48,6 +48,7 @@ pub use types::common::posix88::*;\n pub use types::common::posix01::*;\n pub use types::common::posix08::*;\n pub use types::common::bsd44::*;\n+pub use types::os::common::posix01::*;\n pub use types::os::arch::c95::*;\n pub use types::os::arch::c99::*;\n pub use types::os::arch::posix88::*;\n@@ -69,12 +70,13 @@ pub use funcs::c95::stdio::*;\n pub use funcs::c95::stdlib::*;\n pub use funcs::c95::string::*;\n \n-pub use funcs::posix88::stat::*;\n+pub use funcs::posix88::stat_::*;\n pub use funcs::posix88::stdio::*;\n pub use funcs::posix88::fcntl::*;\n pub use funcs::posix88::dirent::*;\n pub use funcs::posix88::unistd::*;\n \n+pub use funcs::posix01::stat_::*;\n pub use funcs::posix01::unistd::*;\n pub use funcs::posix08::unistd::*;\n \n@@ -122,6 +124,8 @@ pub use open, creat;\n pub use access, chdir, close, dup, dup2, execv, execve, execvp, getcwd,\n getpid, isatty, lseek, pipe, read, rmdir, unlink, write;\n \n+pub use fstat, lstat, stat;\n+\n \n mod types {\n \n@@ -158,6 +162,10 @@ mod types {\n \n     #[cfg(target_os = \"linux\")]\n     pub mod os {\n+        pub mod common {\n+            pub mod posix01 {}\n+        }\n+\n         #[cfg(target_arch = \"x86\")]\n         pub mod arch {\n             pub mod c95 {\n@@ -195,7 +203,33 @@ mod types {\n                 pub type mode_t = u32;\n                 pub type ssize_t = i32;\n             }\n-            pub mod posix01 {}\n+            pub mod posix01 {\n+                pub type nlink_t = u32;\n+                pub type blksize_t = i32;\n+                pub type blkcnt_t = i32;\n+                pub struct stat {\n+                    st_dev: dev_t,\n+                    __pad1: c_short,\n+                    st_ino: ino_t,\n+                    st_mode: mode_t,\n+                    st_nlink: nlink_t,\n+                    st_uid: uid_t,\n+                    st_gid: gid_t,\n+                    st_rdev: dev_t,\n+                    __pad2: c_short,\n+                    st_size: off_t,\n+                    st_blksize: blksize_t,\n+                    st_blocks: blkcnt_t,\n+                    st_atime: time_t,\n+                    st_atime_nsec: c_long,\n+                    st_mtime: time_t,\n+                    st_mtime_nsec: c_long,\n+                    st_ctime: time_t,\n+                    st_ctime_nsec: c_long,\n+                    __unused4: c_long,\n+                    __unused5: c_long,\n+                }\n+            }\n             pub mod posix08 {}\n             pub mod bsd44 {}\n             pub mod extra {}\n@@ -239,6 +273,29 @@ mod types {\n                 pub type ssize_t = i64;\n             }\n             pub mod posix01 {\n+                pub type nlink_t = u64;\n+                pub type blksize_t = i64;\n+                pub type blkcnt_t = i64;\n+                pub struct stat {\n+                    st_dev: dev_t,\n+                    st_ino: ino_t,\n+                    st_nlink: nlink_t,\n+                    st_mode: mode_t,\n+                    st_uid: uid_t,\n+                    st_gid: gid_t,\n+                    __pad0: c_int,\n+                    st_rdev: dev_t,\n+                    st_size: off_t,\n+                    st_blksize: blksize_t,\n+                    st_blocks: blkcnt_t,\n+                    st_atime: time_t,\n+                    st_atime_nsec: c_long,\n+                    st_mtime: time_t,\n+                    st_mtime_nsec: c_long,\n+                    st_ctime: time_t,\n+                    st_ctime_nsec: c_long,\n+                    __unused: [c_long * 3],\n+                }\n             }\n             pub mod posix08 {\n             }\n@@ -251,6 +308,10 @@ mod types {\n \n     #[cfg(target_os = \"freebsd\")]\n     pub mod os {\n+        pub mod common {\n+            pub mod posix01 {}\n+        }\n+\n         #[cfg(target_arch = \"x86_64\")]\n         pub mod arch {\n             pub mod c95 {\n@@ -289,6 +350,34 @@ mod types {\n                 pub type ssize_t = i64;\n             }\n             pub mod posix01 {\n+                pub type nlink_t = u16;\n+                pub type blksize_t = i64;\n+                pub type blkcnt_t = i64;\n+                pub type fflags_t = u32;\n+                pub struct stat {\n+                    st_dev: dev_t,\n+                    st_ino: ino_t,\n+                    st_mode: mode_t,\n+                    st_nlink: nlink_t,\n+                    st_uid: uid_t,\n+                    st_gid: gid_t,\n+                    st_rdev: dev_t,\n+                    st_atime: time_t,\n+                    st_atime_nsec: c_long,\n+                    st_mtime: time_t,\n+                    st_mtime_nsec: c_long,\n+                    st_ctime: time_t,\n+                    st_ctime_nsec: c_long,\n+                    st_size: off_t,\n+                    st_blocks: blkcnt_t,\n+                    st_blksize: blksize_t,\n+                    st_flags: fflags_t,\n+                    st_gen: uint32_t,\n+                    st_lspare: int32_t,\n+                    st_birthtime: time_t,\n+                    st_birthtime_nsec: c_long,\n+                    __unused: [uint8_t * 2],\n+                }\n             }\n             pub mod posix08 {\n             }\n@@ -301,6 +390,24 @@ mod types {\n \n     #[cfg(target_os = \"win32\")]\n     pub mod os {\n+        pub mod common {\n+            pub mod posix01 {\n+                pub struct stat {\n+                    st_dev: dev_t,\n+                    st_ino: ino_t,\n+                    st_mode: mode_t,\n+                    st_nlink: c_short,\n+                    st_uid: c_short,\n+                    st_gid: c_short,\n+                    st_rdev: dev_t,\n+                    st_size: int64_t,\n+                    st_atime: time64_t,\n+                    st_mtime: time64_t,\n+                    st_c_time: time64_t,\n+                }\n+            }\n+        }\n+\n         #[cfg(target_arch = \"x86\")]\n         pub mod arch {\n             pub mod c95 {\n@@ -378,6 +485,38 @@ mod types {\n \n     #[cfg(target_os = \"macos\")]\n     pub mod os {\n+        pub mod common {\n+            pub mod posix01 {\n+                pub type nlink_t = u16;\n+                pub type blksize_t = i64;\n+                pub type blkcnt_t = i32;\n+                pub struct stat {\n+                    st_dev: dev_t,\n+                    st_mode: mode_t,\n+                    st_nlink: nlink_t,\n+                    st_ino: ino_t,\n+                    st_uid: uid_t,\n+                    st_gid: gid_t,\n+                    st_rdev: dev_t,\n+                    st_atime: time_t,\n+                    st_atime_nsec: c_long,\n+                    st_mtime: time_t,\n+                    st_mtime_nsec: c_long,\n+                    st_ctime: time_t,\n+                    st_ctime_nsec: c_long,\n+                    st_birthtime: time_t,\n+                    st_birthtime_nsec: c_long,\n+                    st_size: off_t,\n+                    st_blocks: blkcnt_t,\n+                    st_blksize: blksize_t,\n+                    st_flags: uint32_t,\n+                    st_gen: uint32_t,\n+                    st_lspare: int32_t,\n+                    st_qspare: [int64_t * 2],\n+                }\n+            }\n+        }\n+\n         #[cfg(target_arch = \"x86\")]\n         pub mod arch {\n             pub mod c95 {\n@@ -880,7 +1019,7 @@ pub mod funcs {\n     pub mod posix88 {\n         #[nolink]\n         #[abi = \"cdecl\"]\n-        pub extern mod stat {\n+        pub extern mod stat_ {\n             #[link_name = \"_chmod\"]\n             fn chmod(path: *c_char, mode: c_int) -> c_int;\n \n@@ -990,11 +1129,28 @@ pub mod funcs {\n     pub mod posix88 {\n         #[nolink]\n         #[abi = \"cdecl\"]\n-        pub extern mod stat {\n+        pub extern mod stat_ {\n             fn chmod(path: *c_char, mode: mode_t) -> c_int;\n             fn fchmod(fd: c_int, mode: mode_t) -> c_int;\n+\n+            #[cfg(target_os = \"linux\")]\n+            #[cfg(target_os = \"freebsd\")]\n+            fn fstat(fildes: c_int, buf: *mut stat) -> c_int;\n+\n+            #[cfg(target_os = \"macos\")]\n+            #[link_name = \"fstat64\"]\n+            fn fstat(fildes: c_int, buf: *mut stat) -> c_int;\n+\n             fn mkdir(path: *c_char, mode: mode_t) -> c_int;\n             fn mkfifo(path: *c_char, mode: mode_t) -> c_int;\n+\n+            #[cfg(target_os = \"linux\")]\n+            #[cfg(target_os = \"freebsd\")]\n+            fn stat(path: *c_char, buf: *mut stat) -> c_int;\n+\n+            #[cfg(target_os = \"macos\")]\n+            #[link_name = \"stat64\"]\n+            fn stat(path: *c_char, buf: *mut stat) -> c_int;\n         }\n \n         #[nolink]\n@@ -1079,6 +1235,18 @@ pub mod funcs {\n     #[cfg(target_os = \"macos\")]\n     #[cfg(target_os = \"freebsd\")]\n     pub mod posix01 {\n+        #[nolink]\n+        #[abi = \"cdecl\"]\n+        pub extern mod stat_ {\n+            #[cfg(target_os = \"linux\")]\n+            #[cfg(target_os = \"freebsd\")]\n+            fn lstat(path: *c_char, buf: *mut stat) -> c_int;\n+\n+            #[cfg(target_os = \"macos\")]\n+            #[link_name = \"lstat64\"]\n+            fn lstat(path: *c_char, buf: *mut stat) -> c_int;\n+        }\n+\n         #[nolink]\n         #[abi = \"cdecl\"]\n         pub extern mod unistd {\n@@ -1106,6 +1274,10 @@ pub mod funcs {\n \n     #[cfg(target_os = \"win32\")]\n     pub mod posix01 {\n+        #[nolink]\n+        pub extern mod stat_ {\n+        }\n+\n         #[nolink]\n         pub extern mod unistd {\n         }"}]}