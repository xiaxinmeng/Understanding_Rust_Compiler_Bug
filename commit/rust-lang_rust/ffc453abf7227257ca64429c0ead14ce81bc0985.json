{"sha": "ffc453abf7227257ca64429c0ead14ce81bc0985", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYzQ1M2FiZjcyMjcyNTdjYTY0NDI5YzBlYWQxNGNlODFiYzA5ODU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-05T23:07:17Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-06T00:49:20Z"}, "message": "Rollup merge of #52019 - michaelwoerister:cross-lto-auto-plugin, r=alexcrichton\n\n[cross-lang-lto] Allow the linker to choose the LTO-plugin (which is useful when using LLD)\n\nThis PR allows for not specifying an LTO-linker plugin but still let `rustc` invoke the linker with the correct plugin arguments. This is useful when using LLD which does not need the `-plugin` argument. Since LLD is the best linker for this scenario anyway, this change should improve ergonomics quite a bit.\n\nr? @alexcrichton", "tree": {"sha": "442b0238955acc0fecb761344f25fe487b28ee91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/442b0238955acc0fecb761344f25fe487b28ee91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffc453abf7227257ca64429c0ead14ce81bc0985", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAls+vJEACgkQ/vbIBR0O\nATwZQg//eIkvT+p0GR82QXj6k9gMeiwuanTPuczpCp4AuW0gE3dbTTKfKbUn2h9E\nAvoA70MUR+G2lhKAlQTqp2KcW6tsw7na6Kli2DNa3dkGQv7E2o68xzFXiEoQif7C\nOGRj8naEfsmDQ+2KifXz2YpKADhjwDwksgxZpUNUQHXSABBC+bPRa2x/fxJXBDsr\n7X4p1NOSiEVAQOuDEXJFoLc1V24VMvjAmmwunr0EGiK+TjVtcpkTZzojAJZGiGxq\nZZc7NvsgFMy6A8UG9gGDCpiMbErn0Z/Fd4l1ytzUt6R08aHgsNa3QSfJTGTYP3w1\nKEhMY2X4Lc3s3dau/bzfAGqbPuYII/6NL3Nzm114+bozQfx70HW/Mz7P4L8CpnIJ\nN+5YHu6aSns4ckF707AwTj5IdgWggESE/sn4G7SpkBn4XDj22u5Hwv1uDt/ATHDf\n3AsjNUmFeAm3hI3KWOTnEn6gwZxdnWaPSZJKP2UfbnAoLAlT/dgKVkFxQUCwYBrc\nXRVf4t9r9jm2KDIPpnjUgCm8g9A/LbdztPqrqtdna9H5L0Bjdzfjb3u9bSSHKiGZ\nTMki7ocBzb0KhuOluOGcgV+7foN5z+nkxM8jvtyHfwNsQcohYj8hXyAhne9PmSpw\n7VdYEpO8fVB2DmiFrHZAL+600Ie/prTZMb+fsyAghWMTo0gWY1g=\n=PBEo\n-----END PGP SIGNATURE-----", "payload": "tree 442b0238955acc0fecb761344f25fe487b28ee91\nparent a4846aebd8c6a95f4aa15880b00b31c4d33d8327\nparent 65ff4141a5ed69223b29634a49a499b9415993ee\nauthor kennytm <kennytm@gmail.com> 1530832037 +0800\ncommitter kennytm <kennytm@gmail.com> 1530838160 +0800\n\nRollup merge of #52019 - michaelwoerister:cross-lto-auto-plugin, r=alexcrichton\n\n[cross-lang-lto] Allow the linker to choose the LTO-plugin (which is useful when using LLD)\n\nThis PR allows for not specifying an LTO-linker plugin but still let `rustc` invoke the linker with the correct plugin arguments. This is useful when using LLD which does not need the `-plugin` argument. Since LLD is the best linker for this scenario anyway, this change should improve ergonomics quite a bit.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc453abf7227257ca64429c0ead14ce81bc0985", "html_url": "https://github.com/rust-lang/rust/commit/ffc453abf7227257ca64429c0ead14ce81bc0985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffc453abf7227257ca64429c0ead14ce81bc0985/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4846aebd8c6a95f4aa15880b00b31c4d33d8327", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4846aebd8c6a95f4aa15880b00b31c4d33d8327", "html_url": "https://github.com/rust-lang/rust/commit/a4846aebd8c6a95f4aa15880b00b31c4d33d8327"}, {"sha": "65ff4141a5ed69223b29634a49a499b9415993ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/65ff4141a5ed69223b29634a49a499b9415993ee", "html_url": "https://github.com/rust-lang/rust/commit/65ff4141a5ed69223b29634a49a499b9415993ee"}], "stats": {"total": 65, "additions": 39, "deletions": 26}, "files": [{"sha": "fdd791c5edac5844a9c8a91f5abe9acfa5a97a04", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffc453abf7227257ca64429c0ead14ce81bc0985/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc453abf7227257ca64429c0ead14ce81bc0985/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=ffc453abf7227257ca64429c0ead14ce81bc0985", "patch": "@@ -98,6 +98,7 @@ pub enum Lto {\n #[derive(Clone, PartialEq, Hash)]\n pub enum CrossLangLto {\n     LinkerPlugin(PathBuf),\n+    LinkerPluginAuto,\n     NoLink,\n     Disabled\n }\n@@ -106,6 +107,7 @@ impl CrossLangLto {\n     pub fn embed_bitcode(&self) -> bool {\n         match *self {\n             CrossLangLto::LinkerPlugin(_) |\n+            CrossLangLto::LinkerPluginAuto |\n             CrossLangLto::NoLink => true,\n             CrossLangLto::Disabled => false,\n         }\n@@ -1020,7 +1022,7 @@ macro_rules! options {\n                 let mut bool_arg = None;\n                 if parse_opt_bool(&mut bool_arg, v) {\n                     *slot = if bool_arg.unwrap() {\n-                        CrossLangLto::NoLink\n+                        CrossLangLto::LinkerPluginAuto\n                     } else {\n                         CrossLangLto::Disabled\n                     };"}, {"sha": "fffde30d5f60c4f5a1e671dcea3b6f0e3bb8d991", "filename": "src/librustc_codegen_llvm/back/linker.rs", "status": "modified", "additions": 36, "deletions": 25, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/ffc453abf7227257ca64429c0ead14ce81bc0985/src%2Flibrustc_codegen_llvm%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc453abf7227257ca64429c0ead14ce81bc0985/src%2Flibrustc_codegen_llvm%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flinker.rs?ref=ffc453abf7227257ca64429c0ead14ce81bc0985", "patch": "@@ -182,6 +182,38 @@ impl<'a> GccLinker<'a> {\n             self.hinted_static = false;\n         }\n     }\n+\n+    fn push_cross_lang_lto_args(&mut self, plugin_path: Option<&OsStr>) {\n+        if let Some(plugin_path) = plugin_path {\n+            let mut arg = OsString::from(\"-plugin=\");\n+            arg.push(plugin_path);\n+            self.linker_arg(&arg);\n+        }\n+\n+        let opt_level = match self.sess.opts.optimize {\n+            config::OptLevel::No => \"O0\",\n+            config::OptLevel::Less => \"O1\",\n+            config::OptLevel::Default => \"O2\",\n+            config::OptLevel::Aggressive => \"O3\",\n+            config::OptLevel::Size => \"Os\",\n+            config::OptLevel::SizeMin => \"Oz\",\n+        };\n+\n+        self.linker_arg(&format!(\"-plugin-opt={}\", opt_level));\n+        self.linker_arg(&format!(\"-plugin-opt=mcpu={}\", self.sess.target_cpu()));\n+\n+        match self.sess.opts.cg.lto {\n+            config::Lto::Thin |\n+            config::Lto::ThinLocal => {\n+                self.linker_arg(&format!(\"-plugin-opt=thin\"));\n+            }\n+            config::Lto::Fat |\n+            config::Lto::Yes |\n+            config::Lto::No => {\n+                // default to regular LTO\n+            }\n+        }\n+    }\n }\n \n impl<'a> Linker for GccLinker<'a> {\n@@ -443,32 +475,11 @@ impl<'a> Linker for GccLinker<'a> {\n             CrossLangLto::NoLink => {\n                 // Nothing to do\n             }\n+            CrossLangLto::LinkerPluginAuto => {\n+                self.push_cross_lang_lto_args(None);\n+            }\n             CrossLangLto::LinkerPlugin(ref path) => {\n-                self.linker_arg(&format!(\"-plugin={}\", path.display()));\n-\n-                let opt_level = match self.sess.opts.optimize {\n-                    config::OptLevel::No => \"O0\",\n-                    config::OptLevel::Less => \"O1\",\n-                    config::OptLevel::Default => \"O2\",\n-                    config::OptLevel::Aggressive => \"O3\",\n-                    config::OptLevel::Size => \"Os\",\n-                    config::OptLevel::SizeMin => \"Oz\",\n-                };\n-\n-                self.linker_arg(&format!(\"-plugin-opt={}\", opt_level));\n-                self.linker_arg(&format!(\"-plugin-opt=mcpu={}\", self.sess.target_cpu()));\n-\n-                match self.sess.opts.cg.lto {\n-                    config::Lto::Thin |\n-                    config::Lto::ThinLocal => {\n-                        self.linker_arg(&format!(\"-plugin-opt=thin\"));\n-                    }\n-                    config::Lto::Fat |\n-                    config::Lto::Yes |\n-                    config::Lto::No => {\n-                        // default to regular LTO\n-                    }\n-                }\n+                self.push_cross_lang_lto_args(Some(path.as_os_str()));\n             }\n         }\n     }"}]}