{"sha": "7465192c7de96ac46a9c5b0200a34a6d010068ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NjUxOTJjN2RlOTZhYzQ2YTljNWIwMjAwYTM0YTZkMDEwMDY4YWM=", "commit": {"author": {"name": "Michael Hall", "email": "michael@mbh.sh", "date": "2021-06-15T04:00:22Z"}, "committer": {"name": "Michael Hall", "email": "michael@mbh.sh", "date": "2021-06-15T04:09:11Z"}, "message": "simplify logic for split_file_at_dot", "tree": {"sha": "a10ac3f952d4be4381f19ae8e1e50a3816baf079", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a10ac3f952d4be4381f19ae8e1e50a3816baf079"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7465192c7de96ac46a9c5b0200a34a6d010068ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7465192c7de96ac46a9c5b0200a34a6d010068ac", "html_url": "https://github.com/rust-lang/rust/commit/7465192c7de96ac46a9c5b0200a34a6d010068ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7465192c7de96ac46a9c5b0200a34a6d010068ac/comments", "author": {"login": "mbhall88", "id": 20403931, "node_id": "MDQ6VXNlcjIwNDAzOTMx", "avatar_url": "https://avatars.githubusercontent.com/u/20403931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbhall88", "html_url": "https://github.com/mbhall88", "followers_url": "https://api.github.com/users/mbhall88/followers", "following_url": "https://api.github.com/users/mbhall88/following{/other_user}", "gists_url": "https://api.github.com/users/mbhall88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbhall88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbhall88/subscriptions", "organizations_url": "https://api.github.com/users/mbhall88/orgs", "repos_url": "https://api.github.com/users/mbhall88/repos", "events_url": "https://api.github.com/users/mbhall88/events{/privacy}", "received_events_url": "https://api.github.com/users/mbhall88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbhall88", "id": 20403931, "node_id": "MDQ6VXNlcjIwNDAzOTMx", "avatar_url": "https://avatars.githubusercontent.com/u/20403931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbhall88", "html_url": "https://github.com/mbhall88", "followers_url": "https://api.github.com/users/mbhall88/followers", "following_url": "https://api.github.com/users/mbhall88/following{/other_user}", "gists_url": "https://api.github.com/users/mbhall88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbhall88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbhall88/subscriptions", "organizations_url": "https://api.github.com/users/mbhall88/orgs", "repos_url": "https://api.github.com/users/mbhall88/repos", "events_url": "https://api.github.com/users/mbhall88/events{/privacy}", "received_events_url": "https://api.github.com/users/mbhall88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1d84f721e3e423e4159e7f63729bd492d2cb77a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d84f721e3e423e4159e7f63729bd492d2cb77a", "html_url": "https://github.com/rust-lang/rust/commit/b1d84f721e3e423e4159e7f63729bd492d2cb77a"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "17e47b76cad7397b5ae9d7595d7bba9735c2137c", "filename": "library/std/src/path.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7465192c7de96ac46a9c5b0200a34a6d010068ac/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7465192c7de96ac46a9c5b0200a34a6d010068ac/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=7465192c7de96ac46a9c5b0200a34a6d010068ac", "patch": "@@ -346,15 +346,11 @@ fn split_file_at_dot(file: &OsStr) -> (Option<&OsStr>, Option<&OsStr>) {\n     // only from ASCII-bounded slices of existing &OsStr values.\n     let i = match slice[1..].iter().position(|b| *b == b'.') {\n         Some(i) => i + 1,\n-        None => slice.len(),\n+        None => return (Some(file), None),\n     };\n-    if i == slice.len() {\n-        (Some(file), None)\n-    } else {\n-        let before = Some(&slice[..i]);\n-        let after = Some(&slice[i + 1..]);\n-        unsafe { (before.map(|s| u8_slice_as_os_str(s)), after.map(|s| u8_slice_as_os_str(s))) }\n-    }\n+    let before = &slice[..i];\n+    let after = &slice[i + 1..];\n+    unsafe { (Some(u8_slice_as_os_str(before)), Some(u8_slice_as_os_str(after))) }\n }\n \n ////////////////////////////////////////////////////////////////////////////////"}]}