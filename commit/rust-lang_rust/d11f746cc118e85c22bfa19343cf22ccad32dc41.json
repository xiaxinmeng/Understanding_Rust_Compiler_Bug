{"sha": "d11f746cc118e85c22bfa19343cf22ccad32dc41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMWY3NDZjYzExOGU4NWMyMmJmYTE5MzQzY2YyMmNjYWQzMmRjNDE=", "commit": {"author": {"name": "Jyun-Yan You", "email": "jyyou.tw@gmail.com", "date": "2013-09-17T17:58:07Z"}, "committer": {"name": "Jyun-Yan You", "email": "jyyou@cs.nctu.edu.tw", "date": "2013-09-18T02:10:32Z"}, "message": "fix compilation errors of mips target", "tree": {"sha": "4b7106c5576b0460dec4641eef29a1881a0c10aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b7106c5576b0460dec4641eef29a1881a0c10aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d11f746cc118e85c22bfa19343cf22ccad32dc41", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d11f746cc118e85c22bfa19343cf22ccad32dc41", "html_url": "https://github.com/rust-lang/rust/commit/d11f746cc118e85c22bfa19343cf22ccad32dc41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d11f746cc118e85c22bfa19343cf22ccad32dc41/comments", "author": {"login": "crabtw", "id": 36015, "node_id": "MDQ6VXNlcjM2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/36015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crabtw", "html_url": "https://github.com/crabtw", "followers_url": "https://api.github.com/users/crabtw/followers", "following_url": "https://api.github.com/users/crabtw/following{/other_user}", "gists_url": "https://api.github.com/users/crabtw/gists{/gist_id}", "starred_url": "https://api.github.com/users/crabtw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crabtw/subscriptions", "organizations_url": "https://api.github.com/users/crabtw/orgs", "repos_url": "https://api.github.com/users/crabtw/repos", "events_url": "https://api.github.com/users/crabtw/events{/privacy}", "received_events_url": "https://api.github.com/users/crabtw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crabtw", "id": 36015, "node_id": "MDQ6VXNlcjM2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/36015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crabtw", "html_url": "https://github.com/crabtw", "followers_url": "https://api.github.com/users/crabtw/followers", "following_url": "https://api.github.com/users/crabtw/following{/other_user}", "gists_url": "https://api.github.com/users/crabtw/gists{/gist_id}", "starred_url": "https://api.github.com/users/crabtw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crabtw/subscriptions", "organizations_url": "https://api.github.com/users/crabtw/orgs", "repos_url": "https://api.github.com/users/crabtw/repos", "events_url": "https://api.github.com/users/crabtw/events{/privacy}", "received_events_url": "https://api.github.com/users/crabtw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "460021bdf2106ee76daf7d81ec7e50e972e26901", "url": "https://api.github.com/repos/rust-lang/rust/commits/460021bdf2106ee76daf7d81ec7e50e972e26901", "html_url": "https://github.com/rust-lang/rust/commit/460021bdf2106ee76daf7d81ec7e50e972e26901"}], "stats": {"total": 172, "additions": 143, "deletions": 29}, "files": [{"sha": "8e9884db2a28e88c3b5784686ad617645196c34c", "filename": "mk/platform.mk", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d11f746cc118e85c22bfa19343cf22ccad32dc41/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d11f746cc118e85c22bfa19343cf22ccad32dc41/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=d11f746cc118e85c22bfa19343cf22ccad32dc41", "patch": "@@ -343,6 +343,7 @@ CFG_PATH_MUNGE_mips-unknown-linux-gnu := true\n CFG_LDPATH_mips-unknown-linux-gnu :=\n CFG_RUN_mips-unknown-linux-gnu=\n CFG_RUN_TARG_mips-unknown-linux-gnu=\n+RUSTC_FLAGS_mips-unknown-linux-gnu := --linker=$(CXX_mips-unknown-linux-gnu) --target-cpu mips32r2 --target-feature +mips32r2,+o32\n \n # i686-pc-mingw32 configuration\n CC_i686-pc-mingw32=$(CC)\n@@ -479,7 +480,7 @@ define CFG_MAKE_TOOLCHAIN\n         $$(CFG_GCCISH_DEF_FLAG_$(1))$$(3) $$(2)        \\\n         $$(call CFG_INSTALL_NAME_$(1),$$(4))\n \n-  ifneq ($(HOST_$(1)),arm)\n+  ifeq ($$(findstring $(HOST_$(1)),arm mips),)\n \n   # We're using llvm-mc as our assembler because it supports\n   # .cfi pseudo-ops on mac\n@@ -491,7 +492,7 @@ define CFG_MAKE_TOOLCHAIN\n                     -o=$$(1)\n   else\n \n-  # For the ARM crosses, use the toolchain assembler\n+  # For the ARM and MIPS crosses, use the toolchain assembler\n   # XXX: We should be able to use the LLVM assembler\n   CFG_ASSEMBLE_$(1)=$$(CC_$(1)) $$(CFG_DEPEND_FLAGS) $$(2) -c -o $$(1)\n "}, {"sha": "a5a2def450e8a0f33dce48a034c86f4027f81b38", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 139, "deletions": 26, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/d11f746cc118e85c22bfa19343cf22ccad32dc41/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11f746cc118e85c22bfa19343cf22ccad32dc41/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=d11f746cc118e85c22bfa19343cf22ccad32dc41", "patch": "@@ -294,7 +294,6 @@ pub mod types {\n                 pub type ssize_t = i32;\n             }\n             #[cfg(target_arch = \"x86\")]\n-            #[cfg(target_arch = \"mips\")]\n             pub mod posix01 {\n                 use libc::types::os::arch::c95::{c_short, c_long, time_t};\n                 use libc::types::os::arch::posix88::{dev_t, gid_t, ino_t};\n@@ -305,7 +304,6 @@ pub mod types {\n                 pub type blksize_t = i32;\n                 pub type blkcnt_t = i32;\n \n-                #[cfg(target_arch = \"x86\")]\n                 pub struct stat {\n                     st_dev: dev_t,\n                     __pad1: c_short,\n@@ -328,30 +326,6 @@ pub mod types {\n                     __unused4: c_long,\n                     __unused5: c_long,\n                 }\n-\n-                #[cfg(target_arch = \"mips\")]\n-                pub struct stat {\n-                    st_dev: c_ulong,\n-                    st_pad1: [c_long, ..3],\n-                    st_ino: ino_t,\n-                    st_mode: mode_t,\n-                    st_nlink: nlink_t,\n-                    st_uid: uid_t,\n-                    st_gid: gid_t,\n-                    st_rdev: c_ulong,\n-                    st_pad2: [c_long, ..2],\n-                    st_size: off_t,\n-                    st_pad3: c_long,\n-                    st_atime: time_t,\n-                    st_atime_nsec: c_long,\n-                    st_mtime: time_t,\n-                    st_mtime_nsec: c_long,\n-                    st_ctime: time_t,\n-                    st_ctime_nsec: c_long,\n-                    st_blksize: blksize_t,\n-                    st_blocks: blkcnt_t,\n-                    st_pad5: [c_long, ..14],\n-                }\n             }\n             #[cfg(target_arch = \"arm\")]\n             pub mod posix01 {\n@@ -385,6 +359,40 @@ pub mod types {\n                     st_ino: c_ulonglong\n                 }\n             }\n+            #[cfg(target_arch = \"mips\")]\n+            pub mod posix01 {\n+                use libc::types::os::arch::c95::{c_long, c_ulong, time_t};\n+                use libc::types::os::arch::posix88::{gid_t, ino_t};\n+                use libc::types::os::arch::posix88::{mode_t, off_t};\n+                use libc::types::os::arch::posix88::{uid_t};\n+\n+                pub type nlink_t = u32;\n+                pub type blksize_t = i32;\n+                pub type blkcnt_t = i32;\n+\n+                pub struct stat {\n+                    st_dev: c_ulong,\n+                    st_pad1: [c_long, ..3],\n+                    st_ino: ino_t,\n+                    st_mode: mode_t,\n+                    st_nlink: nlink_t,\n+                    st_uid: uid_t,\n+                    st_gid: gid_t,\n+                    st_rdev: c_ulong,\n+                    st_pad2: [c_long, ..2],\n+                    st_size: off_t,\n+                    st_pad3: c_long,\n+                    st_atime: time_t,\n+                    st_atime_nsec: c_long,\n+                    st_mtime: time_t,\n+                    st_mtime_nsec: c_long,\n+                    st_ctime: time_t,\n+                    st_ctime_nsec: c_long,\n+                    st_blksize: blksize_t,\n+                    st_blocks: blkcnt_t,\n+                    st_pad5: [c_long, ..14],\n+                }\n+            }\n             pub mod posix08 {}\n             pub mod bsd44 {}\n             pub mod extra {}\n@@ -1633,6 +1641,111 @@ pub mod consts {\n             pub static EPIPE : c_int = 32;\n             pub static EDOM : c_int = 33;\n             pub static ERANGE : c_int = 34;\n+\n+            pub static ENOMSG: c_int = 35;\n+            pub static EIDRM: c_int = 36;\n+            pub static ECHRNG: c_int = 37;\n+            pub static EL2NSYNC: c_int = 38;\n+            pub static EL3HLT: c_int = 39;\n+            pub static EL3RST: c_int = 40;\n+            pub static ELNRNG: c_int = 41;\n+            pub static EUNATCH: c_int = 42;\n+            pub static ENOCSI: c_int = 43;\n+            pub static EL2HLT: c_int = 44;\n+            pub static EDEADLK: c_int = 45;\n+            pub static ENOLCK: c_int = 46;\n+            pub static EBADE: c_int = 50;\n+            pub static EBADR: c_int = 51;\n+            pub static EXFULL: c_int = 52;\n+            pub static ENOANO: c_int = 53;\n+            pub static EBADRQC: c_int = 54;\n+            pub static EBADSLT: c_int = 55;\n+            pub static EDEADLOCK: c_int = 56;\n+            pub static EBFONT: c_int = 59;\n+            pub static ENOSTR: c_int = 60;\n+            pub static ENODATA: c_int = 61;\n+            pub static ETIME: c_int = 62;\n+            pub static ENOSR: c_int = 63;\n+            pub static ENONET: c_int = 64;\n+            pub static ENOPKG: c_int = 65;\n+            pub static EREMOTE: c_int = 66;\n+            pub static ENOLINK: c_int = 67;\n+            pub static EADV: c_int = 68;\n+            pub static ESRMNT: c_int = 69;\n+            pub static ECOMM: c_int = 70;\n+            pub static EPROTO: c_int = 71;\n+            pub static EDOTDOT: c_int = 73;\n+            pub static EMULTIHOP: c_int = 74;\n+            pub static EBADMSG: c_int = 77;\n+            pub static ENAMETOOLONG: c_int = 78;\n+            pub static EOVERFLOW: c_int = 79;\n+            pub static ENOTUNIQ: c_int = 80;\n+            pub static EBADFD: c_int = 81;\n+            pub static EREMCHG: c_int = 82;\n+            pub static ELIBACC: c_int = 83;\n+            pub static ELIBBAD: c_int = 84;\n+            pub static ELIBSCN: c_int = 95;\n+            pub static ELIBMAX: c_int = 86;\n+            pub static ELIBEXEC: c_int = 87;\n+            pub static EILSEQ: c_int = 88;\n+            pub static ENOSYS: c_int = 89;\n+            pub static ELOOP: c_int = 90;\n+            pub static ERESTART: c_int = 91;\n+            pub static ESTRPIPE: c_int = 92;\n+            pub static ENOTEMPTY: c_int = 93;\n+            pub static EUSERS: c_int = 94;\n+            pub static ENOTSOCK: c_int = 95;\n+            pub static EDESTADDRREQ: c_int = 96;\n+            pub static EMSGSIZE: c_int = 97;\n+            pub static EPROTOTYPE: c_int = 98;\n+            pub static ENOPROTOOPT: c_int = 99;\n+            pub static EPROTONOSUPPORT: c_int = 120;\n+            pub static ESOCKTNOSUPPORT: c_int = 121;\n+            pub static EOPNOTSUPP: c_int = 122;\n+            pub static EPFNOSUPPORT: c_int = 123;\n+            pub static EAFNOSUPPORT: c_int = 124;\n+            pub static EADDRINUSE: c_int = 125;\n+            pub static EADDRNOTAVAIL: c_int = 126;\n+            pub static ENETDOWN: c_int = 127;\n+            pub static ENETUNREACH: c_int = 128;\n+            pub static ENETRESET: c_int = 129;\n+            pub static ECONNABORTED: c_int = 130;\n+            pub static ECONNRESET: c_int = 131;\n+            pub static ENOBUFS: c_int = 132;\n+            pub static EISCONN: c_int = 133;\n+            pub static ENOTCONN: c_int = 134;\n+            pub static EUCLEAN: c_int = 135;\n+            pub static ENOTNAM: c_int = 137;\n+            pub static ENAVAIL: c_int = 138;\n+            pub static EISNAM: c_int = 139;\n+            pub static EREMOTEIO: c_int = 140;\n+            pub static ESHUTDOWN: c_int = 143;\n+            pub static ETOOMANYREFS: c_int = 144;\n+            pub static ETIMEDOUT: c_int = 145;\n+            pub static ECONNREFUSED: c_int = 146;\n+            pub static EHOSTDOWN: c_int = 147;\n+            pub static EHOSTUNREACH: c_int = 148;\n+            pub static EWOULDBLOCK: c_int = EAGAIN;\n+            pub static EALREADY: c_int = 149;\n+            pub static EINPROGRESS: c_int = 150;\n+            pub static ESTALE: c_int = 151;\n+            pub static ECANCELED: c_int = 158;\n+\n+            pub static ENOMEDIUM: c_int = 159;\n+            pub static EMEDIUMTYPE: c_int = 160;\n+            pub static ENOKEY: c_int = 161;\n+            pub static EKEYEXPIRED: c_int = 162;\n+            pub static EKEYREVOKED: c_int = 163;\n+            pub static EKEYREJECTED: c_int = 164;\n+\n+            pub static EOWNERDEAD: c_int = 165;\n+            pub static ENOTRECOVERABLE: c_int = 166;\n+\n+            pub static ERFKILL: c_int = 167;\n+\n+            pub static EHWPOISON: c_int = 168;\n+\n+            pub static EDQUOT: c_int = 1133;\n         }\n         pub mod posix01 {\n             use libc::types::os::arch::c95::c_int;"}, {"sha": "6db53370a59aa12547a8364a55341974faa723e8", "filename": "src/libstd/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d11f746cc118e85c22bfa19343cf22ccad32dc41/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11f746cc118e85c22bfa19343cf22ccad32dc41/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=d11f746cc118e85c22bfa19343cf22ccad32dc41", "patch": "@@ -1659,7 +1659,7 @@ pub mod consts {\n     pub use os::consts::arm::*;\n \n     #[cfg(target_arch = \"mips\")]\n-    use os::consts::mips::*;\n+    pub use os::consts::mips::*;\n \n     pub mod unix {\n         pub static FAMILY: &'static str = \"unix\";"}]}