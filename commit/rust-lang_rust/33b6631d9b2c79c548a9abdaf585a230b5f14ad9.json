{"sha": "33b6631d9b2c79c548a9abdaf585a230b5f14ad9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYjY2MzFkOWIyYzc5YzU0OGE5YWJkYWY1ODVhMjMwYjVmMTRhZDk=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-05-01T20:32:00Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-05-03T07:31:33Z"}, "message": "Enable `cfg` predicate for `target_feature = \"crt-static\"` only if the target supports it", "tree": {"sha": "6a3739561dd261b1e8e3b3fd7ebe101f400b5480", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a3739561dd261b1e8e3b3fd7ebe101f400b5480"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33b6631d9b2c79c548a9abdaf585a230b5f14ad9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33b6631d9b2c79c548a9abdaf585a230b5f14ad9", "html_url": "https://github.com/rust-lang/rust/commit/33b6631d9b2c79c548a9abdaf585a230b5f14ad9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33b6631d9b2c79c548a9abdaf585a230b5f14ad9/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a675c5e02e6ecfda7d4e04aabd23a9935e0c4bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a675c5e02e6ecfda7d4e04aabd23a9935e0c4bf", "html_url": "https://github.com/rust-lang/rust/commit/0a675c5e02e6ecfda7d4e04aabd23a9935e0c4bf"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "64114fbd1c489ef82d7c0991ef60d562e250943e", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33b6631d9b2c79c548a9abdaf585a230b5f14ad9/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33b6631d9b2c79c548a9abdaf585a230b5f14ad9/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=33b6631d9b2c79c548a9abdaf585a230b5f14ad9", "patch": "@@ -49,7 +49,7 @@ pub fn add_configuration(\n \n     cfg.extend(codegen_backend.target_features(sess).into_iter().map(|feat| (tf, Some(feat))));\n \n-    if sess.crt_static_feature(None) {\n+    if sess.crt_static(None) {\n         cfg.insert((tf, Some(Symbol::intern(\"crt-static\"))));\n     }\n }"}, {"sha": "f85be218bc2184f8fda87285b0765a2b71eb8c98", "filename": "src/librustc_session/session.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/33b6631d9b2c79c548a9abdaf585a230b5f14ad9/src%2Flibrustc_session%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33b6631d9b2c79c548a9abdaf585a230b5f14ad9/src%2Flibrustc_session%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fsession.rs?ref=33b6631d9b2c79c548a9abdaf585a230b5f14ad9", "patch": "@@ -553,16 +553,11 @@ impl Session {\n \n     /// Check whether this compile session and crate type use static crt.\n     pub fn crt_static(&self, crate_type: Option<CrateType>) -> bool {\n-        // If the target does not opt in to crt-static support, use its default.\n-        if self.target.target.options.crt_static_respected {\n-            self.crt_static_feature(crate_type)\n-        } else {\n-            self.target.target.options.crt_static_default\n+        if !self.target.target.options.crt_static_respected {\n+            // If the target does not opt in to crt-static support, use its default.\n+            return self.target.target.options.crt_static_default;\n         }\n-    }\n \n-    /// Check whether this compile session and crate type use `crt-static` feature.\n-    pub fn crt_static_feature(&self, crate_type: Option<CrateType>) -> bool {\n         let requested_features = self.opts.cg.target_feature.split(',');\n         let found_negative = requested_features.clone().any(|r| r == \"-crt-static\");\n         let found_positive = requested_features.clone().any(|r| r == \"+crt-static\");"}, {"sha": "f89d1edd6586a015f757d692d38f6c2ce748d446", "filename": "src/test/ui/crt-static-on-works.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/33b6631d9b2c79c548a9abdaf585a230b5f14ad9/src%2Ftest%2Fui%2Fcrt-static-on-works.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33b6631d9b2c79c548a9abdaf585a230b5f14ad9/src%2Ftest%2Fui%2Fcrt-static-on-works.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrt-static-on-works.rs?ref=33b6631d9b2c79c548a9abdaf585a230b5f14ad9", "patch": "@@ -1,9 +1,6 @@\n // run-pass\n-\n-#![allow(stable_features)]\n-// compile-flags:-C target-feature=+crt-static -Z unstable-options\n-\n-#![feature(cfg_target_feature)]\n+// compile-flags:-C target-feature=+crt-static\n+// only-msvc\n \n #[cfg(target_feature = \"crt-static\")]\n fn main() {}"}]}