{"sha": "980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MGUxZmY0MGY1MWI2YjRiODZlZTcwODA5ZDBhMDA1NWU2ZjljYzY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-09-24T12:49:59Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-09-25T19:20:42Z"}, "message": "Add missing examples for Fd traits", "tree": {"sha": "b93d57fae044e061ba797d195e9d96ec149744d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b93d57fae044e061ba797d195e9d96ec149744d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6", "html_url": "https://github.com/rust-lang/rust/commit/980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fadf0257235ddb8a464befc02e50b35652174689", "url": "https://api.github.com/repos/rust-lang/rust/commits/fadf0257235ddb8a464befc02e50b35652174689", "html_url": "https://github.com/rust-lang/rust/commit/fadf0257235ddb8a464befc02e50b35652174689"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "ef780fa8cca29877cefcc916717195a0ca73a20e", "filename": "library/std/src/sys/unix/ext/io.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs?ref=980e1ff40f51b6b4b86ee70809d0a0055e6f9cc6", "patch": "@@ -25,6 +25,20 @@ pub trait AsRawFd {\n     /// This method does **not** pass ownership of the raw file descriptor\n     /// to the caller. The descriptor is only guaranteed to be valid while\n     /// the original object has not yet been destroyed.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```no_run\n+    /// use std::fs::File;\n+    /// use std::os::unix::io::{AsRawFd, RawFd};\n+    ///\n+    /// fn main() -> std::io::Result<()> {\n+    ///     let mut f = File::open(\"foo.txt\")?;\n+    ///     // Note that `raw_fd` is only valid as long as `f` exists.\n+    ///     let raw_fd: RawFd = f.as_raw_fd();\n+    ///     Ok(())\n+    /// }\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn as_raw_fd(&self) -> RawFd;\n }\n@@ -45,6 +59,22 @@ pub trait FromRawFd {\n     /// descriptor they are wrapping. Usage of this function could\n     /// accidentally allow violating this contract which can cause memory\n     /// unsafety in code that relies on it being true.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```no_run\n+    /// use std::fs::File;\n+    /// use std::os::unix::io::{FromRawFd, IntoRawFd, RawFd};\n+    ///\n+    /// fn main() -> std::io::Result<()> {\n+    ///     let f = File::open(\"foo.txt\")?;\n+    ///     let raw_fd: RawFd = f.into_raw_fd();\n+    ///     // SAFETY: no other functions should call `from_raw_fd`, so there\n+    ///     // is only one owner for the file descriptor.\n+    ///     let f = unsafe { File::from_raw_fd(raw_fd) };\n+    ///     Ok(())\n+    /// }\n+    /// ```\n     #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n     unsafe fn from_raw_fd(fd: RawFd) -> Self;\n }\n@@ -58,6 +88,19 @@ pub trait IntoRawFd {\n     /// This function **transfers ownership** of the underlying file descriptor\n     /// to the caller. Callers are then the unique owners of the file descriptor\n     /// and must close the descriptor once it's no longer needed.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```no_run\n+    /// use std::fs::File;\n+    /// use std::os::unix::io::{IntoRawFd, RawFd};\n+    ///\n+    /// fn main() -> std::io::Result<()> {\n+    ///     let f = File::open(\"foo.txt\")?;\n+    ///     let raw_fd: RawFd = f.into_raw_fd();\n+    ///     Ok(())\n+    /// }\n+    /// ```\n     #[stable(feature = \"into_raw_os\", since = \"1.4.0\")]\n     fn into_raw_fd(self) -> RawFd;\n }"}]}