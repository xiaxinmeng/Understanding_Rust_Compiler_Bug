{"sha": "4b5b96c51101a02e18eb2bb27e742ef0b3e74537", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNWI5NmM1MTEwMWEwMmUxOGViMmJiMjdlNzQyZWYwYjNlNzQ1Mzc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-10T23:44:00Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-11T00:04:41Z"}, "message": "Remove a couple more spurious 'mutable' value qualifiers from macos_OS.rs.", "tree": {"sha": "30f9cb67a56259f472b140266fcc7f7d501699ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30f9cb67a56259f472b140266fcc7f7d501699ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b5b96c51101a02e18eb2bb27e742ef0b3e74537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b5b96c51101a02e18eb2bb27e742ef0b3e74537", "html_url": "https://github.com/rust-lang/rust/commit/4b5b96c51101a02e18eb2bb27e742ef0b3e74537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b5b96c51101a02e18eb2bb27e742ef0b3e74537/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e8b57d1bba8974b21718724f760f547b3b48799", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e8b57d1bba8974b21718724f760f547b3b48799", "html_url": "https://github.com/rust-lang/rust/commit/7e8b57d1bba8974b21718724f760f547b3b48799"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0970da72b94cd887eb20c885ea2230ad0886b600", "filename": "src/lib/macos_OS.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b5b96c51101a02e18eb2bb27e742ef0b3e74537/src%2Flib%2Fmacos_OS.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b5b96c51101a02e18eb2bb27e742ef0b3e74537/src%2Flib%2Fmacos_OS.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmacos_OS.rs?ref=4b5b96c51101a02e18eb2bb27e742ef0b3e74537", "patch": "@@ -62,7 +62,7 @@ fn dylib_filename(str base) -> str {\n }\n \n fn pipe() -> tup(int, int) {\n-    let vec[mutable int] fds = vec(mutable 0, 0);\n+    let vec[mutable int] fds = vec(0, 0);\n     assert (OS.libc.pipe(Vec.buf[mutable int](fds)) == 0);\n     ret tup(fds.(0), fds.(1));\n }\n@@ -72,7 +72,7 @@ fn fd_FILE(int fd) -> libc.FILE {\n }\n \n fn waitpid(int pid) -> int {\n-    let vec[mutable int] status = vec(mutable 0);\n+    let vec[mutable int] status = vec(0);\n     assert (OS.libc.waitpid(pid, Vec.buf[mutable int](status), 0) != -1);\n     ret status.(0);\n }"}]}