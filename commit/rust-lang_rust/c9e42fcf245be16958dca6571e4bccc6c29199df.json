{"sha": "c9e42fcf245be16958dca6571e4bccc6c29199df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ZTQyZmNmMjQ1YmUxNjk1OGRjYTY1NzFlNGJjY2M2YzI5MTk5ZGY=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-08T18:04:08Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-08T18:04:08Z"}, "message": "Merge #468\n\n468: decouple ra_editor from other stuff r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "caa02f8086ad15fb6f884e56bc6a0231b203215f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caa02f8086ad15fb6f884e56bc6a0231b203215f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9e42fcf245be16958dca6571e4bccc6c29199df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9e42fcf245be16958dca6571e4bccc6c29199df", "html_url": "https://github.com/rust-lang/rust/commit/c9e42fcf245be16958dca6571e4bccc6c29199df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9e42fcf245be16958dca6571e4bccc6c29199df/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "1c25bf05d714680c048d250a5d39e8a4c25f0c31", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c25bf05d714680c048d250a5d39e8a4c25f0c31", "html_url": "https://github.com/rust-lang/rust/commit/1c25bf05d714680c048d250a5d39e8a4c25f0c31"}, {"sha": "695294bbb974cdbac136e260029403e90a17d953", "url": "https://api.github.com/repos/rust-lang/rust/commits/695294bbb974cdbac136e260029403e90a17d953", "html_url": "https://github.com/rust-lang/rust/commit/695294bbb974cdbac136e260029403e90a17d953"}], "stats": {"total": 111, "additions": 60, "deletions": 51}, "files": [{"sha": "c445439b10cd0ab205401e531d00dde4b188447a", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -679,7 +679,6 @@ version = \"0.1.0\"\n dependencies = [\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_arena 0.1.0\",\n- \"ra_editor 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -712,7 +711,6 @@ dependencies = [\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_arena 0.1.0\",\n  \"ra_db 0.1.0\",\n- \"ra_editor 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -736,7 +734,6 @@ dependencies = [\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_analysis 0.1.0\",\n- \"ra_editor 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"ra_text_edit 0.1.0\",\n  \"ra_vfs 0.1.0\","}, {"sha": "27b760780ca8f91dc6431c6dba829a46118d9476", "filename": "crates/ra_analysis/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcall_info.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -5,8 +5,8 @@ use ra_syntax::{\n     AstNode, SyntaxNode, TextUnit, TextRange,\n     SyntaxKind::FN_DEF,\n     ast::{self, ArgListOwner, DocCommentsOwner},\n+    algo::find_node_at_offset,\n };\n-use ra_editor::find_node_at_offset;\n \n use crate::{FilePosition, CallInfo, db::RootDatabase};\n "}, {"sha": "01786bb69e91d695ae855f7bd2ba158bd7b3dc7b", "filename": "crates/ra_analysis/src/completion/completion_context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -1,9 +1,8 @@\n-use ra_editor::find_node_at_offset;\n use ra_text_edit::AtomTextEdit;\n use ra_syntax::{\n     AstNode, SyntaxNode, SourceFile, TextUnit, TextRange,\n     ast,\n-    algo::{find_leaf_at_offset, find_covering_node},\n+    algo::{find_leaf_at_offset, find_covering_node, find_node_at_offset},\n     SyntaxKind::*,\n };\n use hir::source_binder;"}, {"sha": "9d46609ecfd51bd324cf35b10e5e186a793f1547", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -1,10 +1,9 @@\n use std::{fmt, sync::Arc};\n+\n use salsa::{self, Database};\n-use ra_db::{LocationIntener, BaseDatabase};\n+use ra_db::{LocationIntener, BaseDatabase, FileId};\n \n-use crate::{\n-    symbol_index,\n-};\n+use crate::{symbol_index, LineIndex};\n \n #[derive(Debug)]\n pub(crate) struct RootDatabase {\n@@ -71,6 +70,19 @@ impl AsRef<LocationIntener<hir::MacroCallLoc, hir::MacroCallId>> for RootDatabas\n     }\n }\n \n+salsa::query_group! {\n+    pub(crate) trait LineIndexDatabase: ra_db::FilesDatabase + BaseDatabase {\n+        fn line_index(file_id: FileId) -> Arc<LineIndex> {\n+            type LineIndexQuery;\n+        }\n+    }\n+}\n+\n+fn line_index(db: &impl ra_db::FilesDatabase, file_id: FileId) -> Arc<LineIndex> {\n+    let text = db.file_text(file_id);\n+    Arc::new(LineIndex::new(&*text))\n+}\n+\n salsa::database_storage! {\n     pub(crate) struct RootDatabaseStorage for RootDatabase {\n         impl ra_db::FilesDatabase {\n@@ -84,7 +96,9 @@ salsa::database_storage! {\n         }\n         impl ra_db::SyntaxDatabase {\n             fn source_file() for ra_db::SourceFileQuery;\n-            fn file_lines() for ra_db::FileLinesQuery;\n+        }\n+        impl LineIndexDatabase {\n+            fn line_index() for LineIndexQuery;\n         }\n         impl symbol_index::SymbolsDatabase {\n             fn file_symbols() for symbol_index::FileSymbolsQuery;"}, {"sha": "fcd8d315e24ad53013ec6249d2b60cbd06f050be", "filename": "crates/ra_analysis/src/goto_defenition.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fgoto_defenition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fgoto_defenition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fgoto_defenition.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -1,7 +1,8 @@\n use ra_db::{FileId, Cancelable, SyntaxDatabase};\n-use ra_syntax::{TextRange, AstNode, ast, SyntaxKind::{NAME, MODULE}};\n-\n-use ra_editor::find_node_at_offset;\n+use ra_syntax::{\n+    TextRange, AstNode, ast, SyntaxKind::{NAME, MODULE},\n+    algo::find_node_at_offset,\n+};\n \n use crate::{FilePosition, NavigationTarget, db::RootDatabase};\n "}, {"sha": "475524ee1827549a44c6e490604e1bf607232d80", "filename": "crates/ra_analysis/src/hover.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhover.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -1,9 +1,8 @@\n use ra_db::{Cancelable, SyntaxDatabase};\n-use ra_editor::find_node_at_offset;\n use ra_syntax::{\n     AstNode, SyntaxNode, TreePtr,\n     ast::{self, NameOwner},\n-    algo::{find_covering_node, find_leaf_at_offset, visit::{visitor, Visitor}},\n+    algo::{find_covering_node, find_node_at_offset, find_leaf_at_offset, visit::{visitor, Visitor}},\n };\n \n use crate::{db::RootDatabase, RangeInfo, FilePosition, FileRange, NavigationTarget};"}, {"sha": "2b9963b3c23d1a2f7314c9dd4f04511d9d22758e", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -6,10 +6,11 @@ use hir::{\n     self, Problem, source_binder,\n };\n use ra_db::{FilesDatabase, SourceRoot, SourceRootId, SyntaxDatabase};\n-use ra_editor::{self, find_node_at_offset, assists, LocalEdit, Severity};\n+use ra_editor::{self, assists, LocalEdit, Severity};\n use ra_syntax::{\n     TextRange, AstNode, SourceFile,\n     ast::{self, NameOwner},\n+    algo::find_node_at_offset,\n     SyntaxKind::*,\n };\n "}, {"sha": "48df08416b0d1e21b80455f66629dba589a77c67", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -29,22 +29,27 @@ use std::{fmt, sync::Arc};\n \n use ra_syntax::{SmolStr, SourceFile, TreePtr, SyntaxKind, TextRange, TextUnit};\n use ra_text_edit::TextEdit;\n+use ra_db::{SyntaxDatabase, FilesDatabase, LocalSyntaxPtr};\n use rayon::prelude::*;\n use relative_path::RelativePathBuf;\n use rustc_hash::FxHashMap;\n use salsa::ParallelDatabase;\n \n-use crate::symbol_index::{FileSymbol, SymbolIndex};\n+use crate::{\n+    symbol_index::{FileSymbol, SymbolIndex},\n+    db::LineIndexDatabase,\n+};\n \n pub use crate::{\n     completion::{CompletionItem, CompletionItemKind, InsertText},\n     runnables::{Runnable, RunnableKind},\n };\n-pub use ra_editor::{Fold, FoldKind, HighlightedRange, LineIndex, Severity, StructureNode};\n-\n+pub use ra_editor::{\n+    Fold, FoldKind, HighlightedRange, Severity, StructureNode,\n+    LineIndex, LineCol, translate_offset_with_edit,\n+};\n pub use ra_db::{\n-    Cancelable, Canceled, CrateGraph, CrateId, FileId, FilePosition, FileRange, FilesDatabase,\n-    LocalSyntaxPtr, SourceRootId, SyntaxDatabase,\n+    Cancelable, Canceled, CrateGraph, CrateId, FileId, FilePosition, FileRange, SourceRootId\n };\n \n #[derive(Default)]\n@@ -322,7 +327,7 @@ impl Analysis {\n     /// Gets the file's `LineIndex`: data structure to convert between absolute\n     /// offsets and line/column representation.\n     pub fn file_line_index(&self, file_id: FileId) -> Arc<LineIndex> {\n-        self.db.file_lines(file_id)\n+        self.db.line_index(file_id)\n     }\n     /// Selects the next syntactic nodes encopasing the range.\n     pub fn extend_selection(&self, frange: FileRange) -> TextRange {"}, {"sha": "2c1f94ad079ef175e57a414f8c89298a10c905f7", "filename": "crates/ra_db/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2FCargo.toml?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -11,5 +11,4 @@ rustc-hash = \"1.0\"\n parking_lot = \"0.7.0\"\n ra_arena = { path = \"../ra_arena\" }\n ra_syntax = { path = \"../ra_syntax\" }\n-ra_editor = { path = \"../ra_editor\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "f56f70983ac45cc9119c2dd511bbffbbf0f45f98", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -5,9 +5,6 @@ mod input;\n mod loc2id;\n pub mod mock;\n \n-use std::sync::Arc;\n-\n-use ra_editor::LineIndex;\n use ra_syntax::{TextUnit, TextRange, SourceFile, TreePtr};\n \n pub use crate::{\n@@ -36,20 +33,13 @@ salsa::query_group! {\n         fn source_file(file_id: FileId) -> TreePtr<SourceFile> {\n             type SourceFileQuery;\n         }\n-        fn file_lines(file_id: FileId) -> Arc<LineIndex> {\n-            type FileLinesQuery;\n-        }\n     }\n }\n \n fn source_file(db: &impl SyntaxDatabase, file_id: FileId) -> TreePtr<SourceFile> {\n     let text = db.file_text(file_id);\n     SourceFile::parse(&*text)\n }\n-fn file_lines(db: &impl SyntaxDatabase, file_id: FileId) -> Arc<LineIndex> {\n-    let text = db.file_text(file_id);\n-    Arc::new(LineIndex::new(&*text))\n-}\n \n #[derive(Clone, Copy, Debug)]\n pub struct FilePosition {"}, {"sha": "83eabfc859fa85ddcad8c0c15b3d5a9da4281734", "filename": "crates/ra_editor/src/assists.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_editor%2Fsrc%2Fassists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_editor%2Fsrc%2Fassists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fassists.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -14,13 +14,11 @@ mod replace_if_let_with_match;\n use ra_text_edit::{TextEdit, TextEditBuilder};\n use ra_syntax::{\n     Direction, SyntaxNode, TextUnit, TextRange, SourceFile, AstNode,\n-    algo::{find_leaf_at_offset, find_covering_node, LeafAtOffset},\n+    algo::{find_leaf_at_offset, find_node_at_offset, find_covering_node, LeafAtOffset},\n     ast::{self, AstToken},\n };\n use itertools::Itertools;\n \n-use crate::find_node_at_offset;\n-\n pub use self::{\n     flip_comma::flip_comma,\n     add_derive::add_derive,"}, {"sha": "5a6af19b7cf96c7fd5e791832f0b32ef656a5726", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -120,10 +120,6 @@ pub fn syntax_tree(file: &SourceFile) -> String {\n     ::ra_syntax::utils::dump_tree(file.syntax())\n }\n \n-pub fn find_node_at_offset<N: AstNode>(syntax: &SyntaxNode, offset: TextUnit) -> Option<&N> {\n-    find_leaf_at_offset(syntax, offset).find_map(|leaf| leaf.ancestors().find_map(N::cast))\n-}\n-\n #[cfg(test)]\n mod tests {\n     use ra_syntax::AstNode;"}, {"sha": "576caf6bec8c5f8d6fa62127bab3a72509d6b62a", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -2,7 +2,7 @@ use std::mem;\n \n use itertools::Itertools;\n use ra_syntax::{\n-    algo::{find_covering_node, find_leaf_at_offset, LeafAtOffset},\n+    algo::{find_node_at_offset, find_covering_node, find_leaf_at_offset, LeafAtOffset},\n     ast,\n     text_utils::intersect,\n     AstNode, Direction, SourceFile, SyntaxKind,\n@@ -11,7 +11,7 @@ use ra_syntax::{\n };\n use ra_text_edit::text_utils::contains_offset_nonstrict;\n \n-use crate::{find_node_at_offset, LocalEdit, TextEditBuilder};\n+use crate::{LocalEdit, TextEditBuilder};\n \n pub fn join_lines(file: &SourceFile, range: TextRange) -> LocalEdit {\n     let range = if range.is_empty() {"}, {"sha": "5a8fdbfc683b74d669fb0443d394b7d46a3b13de", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -14,7 +14,6 @@ parking_lot = \"0.7.0\"\n ena = \"0.11\"\n ra_syntax = { path = \"../ra_syntax\" }\n ra_arena = { path = \"../ra_arena\" }\n-ra_editor = { path = \"../ra_editor\" }\n ra_db = { path = \"../ra_db\" }\n test_utils = { path = \"../test_utils\" }\n "}, {"sha": "ebf6edc1bae899da00510472042556da85c484cf", "filename": "crates/ra_hir/src/code_model_impl/function/scope.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -308,8 +308,7 @@ pub struct ReferenceDescriptor {\n \n #[cfg(test)]\n mod tests {\n-    use ra_editor::find_node_at_offset;\n-    use ra_syntax::SourceFile;\n+    use ra_syntax::{SourceFile, algo::find_node_at_offset};\n     use test_utils::{extract_offset, assert_eq_text};\n \n     use crate::expr;"}, {"sha": "0fae7de82ad110f0f5a477ba9197118db702c9ed", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -215,7 +215,6 @@ salsa::database_storage! {\n         }\n         impl ra_db::SyntaxDatabase {\n             fn source_file() for ra_db::SourceFileQuery;\n-            fn file_lines() for ra_db::FileLinesQuery;\n         }\n         impl db::HirDatabase {\n             fn hir_source_file() for db::HirSourceFileQuery;"}, {"sha": "4b0400cd08c75e6c2d290b6ad8e0f413903b7851", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -6,10 +6,10 @@\n /// So, this modules should not be used during hir construction, it exists\n /// purely for \"IDE needs\".\n use ra_db::{FileId, FilePosition, Cancelable};\n-use ra_editor::find_node_at_offset;\n use ra_syntax::{\n     SmolStr, TextRange, SyntaxNode,\n     ast::{self, AstNode, NameOwner},\n+    algo::find_node_at_offset,\n };\n \n use crate::{"}, {"sha": "90ba393ce981ead1d5f246ec3f1ab310e7182174", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -1049,6 +1049,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n }\n \n pub fn infer(db: &impl HirDatabase, def_id: DefId) -> Cancelable<Arc<InferenceResult>> {\n+    db.check_canceled()?;\n     let function = Function::new(def_id); // TODO: consts also need inference\n     let body = function.body(db)?;\n     let scopes = db.fn_scopes(def_id)?;"}, {"sha": "b9fd61105c609ce20f9eb79333bc9a772064a5e0", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -28,7 +28,6 @@ parking_lot = \"0.7.0\"\n \n thread_worker = { path = \"../thread_worker\" }\n ra_syntax = { path = \"../ra_syntax\" }\n-ra_editor = { path = \"../ra_editor\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n ra_analysis = { path = \"../ra_analysis\" }\n gen_lsp_server = { path = \"../gen_lsp_server\" }"}, {"sha": "b3f8c83ccdf3d3dae55df1472a6ae0afeae1e857", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -7,8 +7,8 @@ use languageserver_types::{\n use ra_analysis::{\n     CompletionItem, CompletionItemKind, FileId, FilePosition, FileRange, FileSystemEdit,\n     InsertText, NavigationTarget, SourceChange, SourceFileEdit,\n+    LineCol, LineIndex, translate_offset_with_edit\n };\n-use ra_editor::{translate_offset_with_edit, LineCol, LineIndex};\n use ra_syntax::{SyntaxKind, TextRange, TextUnit};\n use ra_text_edit::{AtomTextEdit, TextEdit};\n "}, {"sha": "45747e21d4dc479a54ad67f12a0c94c465ed5ea1", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e42fcf245be16958dca6571e4bccc6c29199df/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=c9e42fcf245be16958dca6571e4bccc6c29199df", "patch": "@@ -2,7 +2,7 @@ pub mod visit;\n \n use rowan::TransparentNewType;\n \n-use crate::{SyntaxNode, TextRange, TextUnit};\n+use crate::{SyntaxNode, TextRange, TextUnit, AstNode};\n \n pub use rowan::LeafAtOffset;\n \n@@ -16,6 +16,19 @@ pub fn find_leaf_at_offset(node: &SyntaxNode, offset: TextUnit) -> LeafAtOffset<\n     }\n }\n \n+/// Finds a node of specific Ast type at offset. Note that this is slightly\n+/// impercise: if the cursor is strictly betwen two nodes of the desired type,\n+/// as in\n+///\n+/// ```no-run\n+/// struct Foo {}|struct Bar;\n+/// ```\n+///\n+/// then the left node will be silently prefered.\n+pub fn find_node_at_offset<N: AstNode>(syntax: &SyntaxNode, offset: TextUnit) -> Option<&N> {\n+    find_leaf_at_offset(syntax, offset).find_map(|leaf| leaf.ancestors().find_map(N::cast))\n+}\n+\n pub fn find_covering_node(root: &SyntaxNode, range: TextRange) -> &SyntaxNode {\n     SyntaxNode::from_repr(root.0.covering_node(range))\n }"}]}