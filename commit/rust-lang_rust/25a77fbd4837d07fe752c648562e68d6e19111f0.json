{"sha": "25a77fbd4837d07fe752c648562e68d6e19111f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YTc3ZmJkNDgzN2QwN2ZlNzUyYzY0ODU2MmU2OGQ2ZTE5MTExZjA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-27T23:08:52Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-27T23:08:52Z"}, "message": "save-analysis: fix spans for fields in struct patterns", "tree": {"sha": "c97518640b7199b30f226cea9dae4b1d2d0144be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c97518640b7199b30f226cea9dae4b1d2d0144be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25a77fbd4837d07fe752c648562e68d6e19111f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25a77fbd4837d07fe752c648562e68d6e19111f0", "html_url": "https://github.com/rust-lang/rust/commit/25a77fbd4837d07fe752c648562e68d6e19111f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25a77fbd4837d07fe752c648562e68d6e19111f0/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e55b793dddd6c1bfd7c273ebf5a67de7cc78d32e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e55b793dddd6c1bfd7c273ebf5a67de7cc78d32e", "html_url": "https://github.com/rust-lang/rust/commit/e55b793dddd6c1bfd7c273ebf5a67de7cc78d32e"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "b7982de50764d6197e82478531c7f0567f61bbbe", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/25a77fbd4837d07fe752c648562e68d6e19111f0/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25a77fbd4837d07fe752c648562e68d6e19111f0/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=25a77fbd4837d07fe752c648562e68d6e19111f0", "patch": "@@ -982,18 +982,19 @@ impl <'l, 'tcx> DxrVisitor<'l, 'tcx> {\n                     }\n                 };\n                 for &Spanned { node: ref field, span } in fields.iter() {\n-                    self.visit_pat(&*field.pat);\n+                    let sub_span = self.span.span_for_first_ident(span);\n                     let fields = ty::lookup_struct_fields(&self.analysis.ty_cx, struct_def);\n                     for f in fields.iter() {\n                         if f.name == field.ident.name {\n                             self.fmt.ref_str(recorder::VarRef,\n-                                             p.span,\n-                                             Some(span),\n+                                             span,\n+                                             sub_span,\n                                              f.id,\n                                              self.cur_scope);\n                             break;\n                         }\n                     }\n+                    self.visit_pat(&*field.pat);\n                 }\n             }\n             ast::PatEnum(ref path, _) => {"}]}