{"sha": "10b9b3d383482b55df985fb7fdc03be887b3039d", "node_id": "C_kwDOAAsO6NoAKDEwYjliM2QzODM0ODJiNTVkZjk4NWZiN2ZkYzAzYmU4ODdiMzAzOWQ", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-17T20:20:43Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-17T21:30:53Z"}, "message": "Add static size assertion for `clean::Type`", "tree": {"sha": "e2fdb60d0bfbccc00ec497b72afae92d0cd8540a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2fdb60d0bfbccc00ec497b72afae92d0cd8540a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10b9b3d383482b55df985fb7fdc03be887b3039d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10b9b3d383482b55df985fb7fdc03be887b3039d", "html_url": "https://github.com/rust-lang/rust/commit/10b9b3d383482b55df985fb7fdc03be887b3039d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10b9b3d383482b55df985fb7fdc03be887b3039d/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8db8f48ea8c2443e969050fe4b6c829585048d5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8db8f48ea8c2443e969050fe4b6c829585048d5c", "html_url": "https://github.com/rust-lang/rust/commit/8db8f48ea8c2443e969050fe4b6c829585048d5c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "9dab0023ba3f1245341d3446f7affa327b97e2a1", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10b9b3d383482b55df985fb7fdc03be887b3039d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10b9b3d383482b55df985fb7fdc03be887b3039d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=10b9b3d383482b55df985fb7fdc03be887b3039d", "patch": "@@ -1450,6 +1450,10 @@ crate enum Type {\n     ImplTrait(Vec<GenericBound>),\n }\n \n+// `Type` is used a lot. Make sure it doesn't unintentionally get bigger.\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+rustc_data_structures::static_assert_size!(Type, 72);\n+\n crate trait GetDefId {\n     /// Use this method to get the [`DefId`] of a [`clean`] AST node.\n     /// This will return [`None`] when called on a primitive [`clean::Type`]."}]}