{"sha": "5b11a9722c45c147c14e2dac1e2ec2283aeb61c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMTFhOTcyMmM0NWMxNDdjMTRlMmRhYzFlMmVjMjI4M2FlYjYxYzA=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-01-31T15:10:08Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-01-31T15:10:08Z"}, "message": "Bless coverage-spanview/expected_mir_dump.*.", "tree": {"sha": "dfe334d8d5ddad0117bfce6898dff3e0382228e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfe334d8d5ddad0117bfce6898dff3e0382228e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0", "html_url": "https://github.com/rust-lang/rust/commit/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db85dac219f76499e7ff22ef37a1c4884e43e552", "url": "https://api.github.com/repos/rust-lang/rust/commits/db85dac219f76499e7ff22ef37a1c4884e43e552", "html_url": "https://github.com/rust-lang/rust/commit/db85dac219f76499e7ff22ef37a1c4884e43e552"}], "stats": {"total": 150, "additions": 75, "deletions": 75}, "files": [{"sha": "0f37df23fe905512b1c3299f422576944c2d8be3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=5b11a9722c45c147c14e2dac1e2ec2283aeb61c0", "patch": "@@ -69,16 +69,16 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"17:38-17:74: @1[3]: _13 = (move _14,)\n-17:38-17:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n-17:38-17:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n-17:38-17:74: @1[10]: _27 = &amp;(*_25)\n-17:38-17:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-17:38-17:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n-17:38-17:74: @2[2]: _12 = [move _26]\n-17:38-17:74: @2[5]: _11 = &amp;_12\n-17:38-17:74: @2[6]: _10 = &amp;(*_11)\n-17:38-17:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-17:38-17:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 23\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"24:38-24:74: @1[3]: _13 = (move _14,)\n+24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n+24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n+24:38-24:74: @1[10]: _27 = &amp;(*_25)\n+24:38-24:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:38-24:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+24:38-24:74: @2[2]: _12 = [move _26]\n+24:38-24:74: @2[5]: _11 = &amp;_12\n+24:38-24:74: @2[6]: _10 = &amp;(*_11)\n+24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:38-24:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n </body>\n </html>"}, {"sha": "828b9cebd6ae6fef7ace17d7838e8502299a4559", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#1}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=5b11a9722c45c147c14e2dac1e2ec2283aeb61c0", "patch": "@@ -69,16 +69,16 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"17:38-17:74: @1[3]: _13 = (move _14,)\n-17:38-17:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n-17:38-17:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n-17:38-17:74: @1[10]: _27 = &amp;(*_25)\n-17:38-17:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-17:38-17:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n-17:38-17:74: @2[2]: _12 = [move _26]\n-17:38-17:74: @2[5]: _11 = &amp;_12\n-17:38-17:74: @2[6]: _10 = &amp;(*_11)\n-17:38-17:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-17:38-17:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 23\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"24:38-24:74: @1[3]: _13 = (move _14,)\n+24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n+24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n+24:38-24:74: @1[10]: _27 = &amp;(*_25)\n+24:38-24:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:38-24:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+24:38-24:74: @2[2]: _12 = [move _26]\n+24:38-24:74: @2[5]: _11 = &amp;_12\n+24:38-24:74: @2[6]: _10 = &amp;(*_11)\n+24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:38-24:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n </body>\n </html>"}, {"sha": "28b10e59b5a3f4093fbe2a9ee2ef519f28b2d889", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#2}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=5b11a9722c45c147c14e2dac1e2ec2283aeb61c0", "patch": "@@ -69,16 +69,16 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"17:38-17:74: @1[3]: _13 = (move _14,)\n-17:38-17:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n-17:38-17:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n-17:38-17:74: @1[10]: _27 = &amp;(*_25)\n-17:38-17:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-17:38-17:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n-17:38-17:74: @2[2]: _12 = [move _26]\n-17:38-17:74: @2[5]: _11 = &amp;_12\n-17:38-17:74: @2[6]: _10 = &amp;(*_11)\n-17:38-17:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-17:38-17:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 23\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"24:38-24:74: @1[3]: _13 = (move _14,)\n+24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n+24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n+24:38-24:74: @1[10]: _27 = &amp;(*_25)\n+24:38-24:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:38-24:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+24:38-24:74: @2[2]: _12 = [move _26]\n+24:38-24:74: @2[5]: _11 = &amp;_12\n+24:38-24:74: @2[6]: _10 = &amp;(*_11)\n+24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:38-24:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n </body>\n </html>"}, {"sha": "9ff7a13522af5093bfa3d79d520553df14cda1c8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#5}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/5b11a9722c45c147c14e2dac1e2ec2283aeb61c0/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html?ref=5b11a9722c45c147c14e2dac1e2ec2283aeb61c0", "patch": "@@ -69,47 +69,47 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 94\"><span class=\"line\">                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"95:23-97:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n-95:23-97:6: @0[6]: _7 = &amp;(*_15)\n-95:23-97:6: @0[7]: _6 = &amp;(*_7)\n-95:23-97:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-96:28-96:61: @0[14]: _13 = ()\n-96:28-96:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n-96:28-96:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n-96:28-96:61: @0[17]: _11 = &amp;(*_14)\n-96:28-96:61: @0[18]: _10 = &amp;(*_11)\n-96:28-96:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-96:28-96:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-96:9-96:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n-95:23-97:6: @2[5]: _0 = const ()\n-95:23-97:6: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"95:23-97:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n-95:23-97:6: @0[6]: _7 = &amp;(*_15)\n-95:23-97:6: @0[7]: _6 = &amp;(*_7)\n-95:23-97:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-96:28-96:61: @0[14]: _13 = ()\n-96:28-96:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n-96:28-96:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n-96:28-96:61: @0[17]: _11 = &amp;(*_14)\n-96:28-96:61: @0[18]: _10 = &amp;(*_11)\n-96:28-96:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-96:28-96:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-96:9-96:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n-95:23-97:6: @2[5]: _0 = const ()\n-95:23-97:6: @2.Return: return\">        $crate::io::_print($crate::format_args_nl!($($arg)*));</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"95:23-97:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n-95:23-97:6: @0[6]: _7 = &amp;(*_15)\n-95:23-97:6: @0[7]: _6 = &amp;(*_7)\n-95:23-97:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-96:28-96:61: @0[14]: _13 = ()\n-96:28-96:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n-96:28-96:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n-96:28-96:61: @0[17]: _11 = &amp;(*_14)\n-96:28-96:61: @0[18]: _10 = &amp;(*_11)\n-96:28-96:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-96:28-96:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-96:9-96:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n-95:23-97:6: @2[5]: _0 = const ()\n-95:23-97:6: @2.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 110\"><span class=\"line\">                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"111:23-113:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n+111:23-113:6: @0[6]: _7 = &amp;(*_15)\n+111:23-113:6: @0[7]: _6 = &amp;(*_7)\n+111:23-113:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+112:28-112:61: @0[14]: _13 = ()\n+112:28-112:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n+112:28-112:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n+112:28-112:61: @0[17]: _11 = &amp;(*_14)\n+112:28-112:61: @0[18]: _10 = &amp;(*_11)\n+112:28-112:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+112:28-112:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+112:9-112:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+111:23-113:6: @2[5]: _0 = const ()\n+111:23-113:6: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:23-113:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n+111:23-113:6: @0[6]: _7 = &amp;(*_15)\n+111:23-113:6: @0[7]: _6 = &amp;(*_7)\n+111:23-113:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+112:28-112:61: @0[14]: _13 = ()\n+112:28-112:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n+112:28-112:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n+112:28-112:61: @0[17]: _11 = &amp;(*_14)\n+112:28-112:61: @0[18]: _10 = &amp;(*_11)\n+112:28-112:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+112:28-112:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+112:9-112:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+111:23-113:6: @2[5]: _0 = const ()\n+111:23-113:6: @2.Return: return\">        $crate::io::_print($crate::format_args_nl!($($arg)*));</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:23-113:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n+111:23-113:6: @0[6]: _7 = &amp;(*_15)\n+111:23-113:6: @0[7]: _6 = &amp;(*_7)\n+111:23-113:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+112:28-112:61: @0[14]: _13 = ()\n+112:28-112:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n+112:28-112:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n+112:28-112:61: @0[17]: _11 = &amp;(*_14)\n+112:28-112:61: @0[18]: _10 = &amp;(*_11)\n+112:28-112:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+112:28-112:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+112:9-112:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+111:23-113:6: @2[5]: _0 = const ()\n+111:23-113:6: @2.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>"}]}