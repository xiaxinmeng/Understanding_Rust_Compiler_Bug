{"sha": "422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMmRjYmQ1NmQxYTE4ODhmMTQ5MWQ4ZmIxNGJiODdhNTRmYWRiYzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-05T08:05:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-05T08:05:47Z"}, "message": "auto merge of #8975 : alexcrichton/rust/reorganize, r=pnkfelix\n\nCloses #2302", "tree": {"sha": "dff69f78c263d67aaebbac5d1d7bd1be8e222d74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dff69f78c263d67aaebbac5d1d7bd1be8e222d74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "html_url": "https://github.com/rust-lang/rust/commit/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c3ae1d0e26c9ae0906dc57daa14bb9e4627e3c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c3ae1d0e26c9ae0906dc57daa14bb9e4627e3c8", "html_url": "https://github.com/rust-lang/rust/commit/3c3ae1d0e26c9ae0906dc57daa14bb9e4627e3c8"}, {"sha": "7b3dd32797994fbe833653618125e479d2ad3fc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3dd32797994fbe833653618125e479d2ad3fc4", "html_url": "https://github.com/rust-lang/rust/commit/7b3dd32797994fbe833653618125e479d2ad3fc4"}], "stats": {"total": 125, "additions": 64, "deletions": 61}, "files": [{"sha": "ecccddb0cfae67a2d0acade0375a2f277cc692f5", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "patch": "@@ -574,19 +574,10 @@ ALL_TARGET_RULES = $(foreach target,$(CFG_TARGET_TRIPLES), \\\n \t$(foreach host,$(CFG_HOST_TRIPLES), \\\n  all-target-$(target)-host-$(host)))\n \n-all: rustllvm/llvm-auto-clean-stamp \\\n-     $(ALL_TARGET_RULES) $(GENERATED) docs\n+all: $(ALL_TARGET_RULES) $(GENERATED) docs\n \n endif\n \n-# This is used to independently force an LLVM clean rebuild\n-# when we changed something not otherwise captured by builtin\n-# dependencies. In these cases, commit a change that touches\n-# the stamp in the source dir.\n-rustllvm/llvm-auto-clean-stamp: $(S)src/rustllvm/llvm-auto-clean-trigger\n-\t$(Q)$(MAKE) clean-llvm\n-\ttouch $@\n-\n \n ######################################################################\n # Re-configuration"}, {"sha": "fff961b734c04dbcdd10d8ac0fa3087fde1f8f03", "filename": "configure", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/configure", "raw_url": "https://github.com/rust-lang/rust/raw/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "patch": "@@ -664,32 +664,29 @@ do\n     make_dir $i\n done\n \n-make_dir llvm\n for t in $CFG_HOST_TRIPLES\n do\n-    make_dir llvm/$t\n+    make_dir $t/llvm\n done\n \n-make_dir rustllvm\n for t in $CFG_HOST_TRIPLES\n do\n-    make_dir rustllvm/$t\n+    make_dir $t/rustllvm\n done\n \n-make_dir rt\n for t in $CFG_TARGET_TRIPLES\n do\n-  make_dir rt/$t\n+  make_dir $t/rt\n   for s in 0 1 2 3\n   do\n-    make_dir rt/$t/stage$s\n+    make_dir $t/rt/stage$s\n     for i in                                          \\\n       isaac linenoise sync test \\\n       arch/i386 arch/x86_64 arch/arm arch/mips  \\\n       libuv libuv/src/ares libuv/src/eio libuv/src/ev \\\n       jemalloc\n     do\n-      make_dir rt/$t/stage$s/$i\n+      make_dir $t/rt/stage$s/$i\n     done\n   done\n done\n@@ -791,7 +788,7 @@ do\n \n     if [ -z $CFG_LLVM_ROOT ]\n     then\n-        LLVM_BUILD_DIR=${CFG_BUILD_DIR}llvm/$t\n+        LLVM_BUILD_DIR=${CFG_BUILD_DIR}$t/llvm\n         if [ ! -z \"$CFG_DISABLE_OPTIMIZE_LLVM\" ]\n         then\n             LLVM_DBG_OPTS=\"--enable-debug-symbols --disable-optimized\""}, {"sha": "f38396cafff19e29db3cb0917c78007e7b47bf85", "filename": "mk/clean.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "patch": "@@ -33,15 +33,17 @@ clean: clean-misc $(CLEAN_STAGE_RULES)\n \n clean-misc:\n \t@$(call E, cleaning)\n-\t$(Q)find rustllvm rt $(CFG_BUILD_TRIPLE)/test \\\n+\t$(Q)find $(CFG_BUILD_TRIPLE)/rustllvm \\\n+\t         $(CFG_BUILD_TRIPLE)/rt \\\n+\t\t $(CFG_BUILD_TRIPLE)/test \\\n          -name '*.[odasS]' -o \\\n          -name '*.so' -o      \\\n          -name '*.dylib' -o   \\\n          -name '*.dll' -o     \\\n          -name '*.def' -o     \\\n          -name '*.bc'         \\\n          | xargs rm -f\n-\t$(Q)find rustllvm rt $(CFG_BUILD_TRIPLE)\\\n+\t$(Q)find $(CFG_BUILD_TRIPLE)\\\n          -name '*.dSYM'       \\\n          | xargs rm -Rf\n \t$(Q)rm -f $(RUNTIME_OBJS) $(RUNTIME_DEF)"}, {"sha": "9e024ffa9f46e3de07f3238fb9bf3d068795a917", "filename": "mk/llvm.mk", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "patch": "@@ -24,12 +24,22 @@ define DEF_LLVM_RULES\n # If CFG_LLVM_ROOT is defined then we don't build LLVM ourselves\n ifeq ($(CFG_LLVM_ROOT),)\n \n-$$(LLVM_CONFIG_$(1)): $$(LLVM_DEPS)\n+LLVM_STAMP_$(1) = $$(CFG_LLVM_BUILD_DIR_$(1))/llvm-auto-clean-stamp\n+\n+$$(LLVM_CONFIG_$(1)): $$(LLVM_DEPS) $$(LLVM_STAMP_$(1))\n \t@$$(call E, make: llvm)\n \t$$(Q)$$(MAKE) -C $$(CFG_LLVM_BUILD_DIR_$(1)) $$(CFG_LLVM_BUILD_ENV)\n \t$$(Q)touch $$(LLVM_CONFIG_$(1))\n endif\n \n+# This is used to independently force an LLVM clean rebuild\n+# when we changed something not otherwise captured by builtin\n+# dependencies. In these cases, commit a change that touches\n+# the stamp in the source dir.\n+$$(LLVM_STAMP_$(1)): $(S)src/rustllvm/llvm-auto-clean-trigger\n+\t$(Q)$(MAKE) clean-llvm\n+\ttouch $$@\n+\n endef\n \n $(foreach host,$(CFG_HOST_TRIPLES), \\"}, {"sha": "185053e5757b04a596449e11aa6c2421cae945c9", "filename": "mk/rt.mk", "status": "modified", "additions": 35, "deletions": 32, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "patch": "@@ -91,61 +91,64 @@ RUNTIME_S_$(1)_$(2) := rt/arch/$$(HOST_$(1))/_context.S \\\n \t\t\trt/arch/$$(HOST_$(1))/ccall.S \\\n \t\t\trt/arch/$$(HOST_$(1))/record_sp.S\n \n+RT_OUTPUT_DIR_$(1) := $(1)/rt\n+RT_BUILD_DIR_$(1)_$(2) := $$(RT_OUTPUT_DIR_$(1))/stage$(2)\n+\n ifeq ($$(CFG_WINDOWSY_$(1)), 1)\n   LIBUV_OSTYPE_$(1)_$(2) := win\n-  LIBUV_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/libuv/libuv.a\n-  JEMALLOC_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/jemalloc/lib/jemalloc.lib\n+  LIBUV_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/libuv/libuv.a\n+  JEMALLOC_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc/lib/jemalloc.lib\n else ifeq ($(OSTYPE_$(1)), apple-darwin)\n   LIBUV_OSTYPE_$(1)_$(2) := mac\n-  LIBUV_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/libuv/libuv.a\n-  JEMALLOC_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/jemalloc/lib/libjemalloc_pic.a\n+  LIBUV_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/libuv/libuv.a\n+  JEMALLOC_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc/lib/libjemalloc_pic.a\n else ifeq ($(OSTYPE_$(1)), unknown-freebsd)\n   LIBUV_OSTYPE_$(1)_$(2) := unix/freebsd\n-  LIBUV_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/libuv/libuv.a\n-  JEMALLOC_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/jemalloc/lib/libjemalloc_pic.a\n+  LIBUV_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/libuv/libuv.a\n+  JEMALLOC_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc/lib/libjemalloc_pic.a\n else ifeq ($(OSTYPE_$(1)), linux-androideabi)\n   LIBUV_OSTYPE_$(1)_$(2) := unix/android\n-  LIBUV_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/libuv/libuv.a\n-  JEMALLOC_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/jemalloc/lib/libjemalloc_pic.a\n+  LIBUV_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/libuv/libuv.a\n+  JEMALLOC_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc/lib/libjemalloc_pic.a\n else\n   LIBUV_OSTYPE_$(1)_$(2) := unix/linux\n-  LIBUV_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/libuv/libuv.a\n-  JEMALLOC_LIB_$(1)_$(2) := rt/$(1)/stage$(2)/jemalloc/lib/libjemalloc_pic.a\n+  LIBUV_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/libuv/libuv.a\n+  JEMALLOC_LIB_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc/lib/libjemalloc_pic.a\n endif\n \n-RUNTIME_DEF_$(1)_$(2) := rt/rustrt$(CFG_DEF_SUFFIX_$(1))\n+RUNTIME_DEF_$(1)_$(2) := $$(RT_OUTPUT_DIR_$(1))/rustrt$$(CFG_DEF_SUFFIX_$(1))\n RUNTIME_INCS_$(1)_$(2) := -I $$(S)src/rt -I $$(S)src/rt/isaac -I $$(S)src/rt/uthash \\\n                      -I $$(S)src/rt/arch/$$(HOST_$(1)) \\\n                      -I $$(S)src/rt/linenoise \\\n                      -I $$(S)src/libuv/include\n-RUNTIME_OBJS_$(1)_$(2) := $$(RUNTIME_CXXS_$(1)_$(2):rt/%.cpp=rt/$(1)/stage$(2)/%.o) \\\n-                     $$(RUNTIME_CS_$(1)_$(2):rt/%.c=rt/$(1)/stage$(2)/%.o) \\\n-                     $$(RUNTIME_S_$(1)_$(2):rt/%.S=rt/$(1)/stage$(2)/%.o)\n+RUNTIME_OBJS_$(1)_$(2) := $$(RUNTIME_CXXS_$(1)_$(2):rt/%.cpp=$$(RT_BUILD_DIR_$(1)_$(2))/%.o) \\\n+                     $$(RUNTIME_CS_$(1)_$(2):rt/%.c=$$(RT_BUILD_DIR_$(1)_$(2))/%.o) \\\n+                     $$(RUNTIME_S_$(1)_$(2):rt/%.S=$$(RT_BUILD_DIR_$(1)_$(2))/%.o)\n ALL_OBJ_FILES += $$(RUNTIME_OBJS_$(1)_$(2))\n \n-MORESTACK_OBJ_$(1)_$(2) := rt/$(1)/stage$(2)/arch/$$(HOST_$(1))/morestack.o\n+MORESTACK_OBJ_$(1)_$(2) := $$(RT_BUILD_DIR_$(1)_$(2))/arch/$$(HOST_$(1))/morestack.o\n ALL_OBJ_FILES += $$(MORESTACK_OBJS_$(1)_$(2))\n \n-rt/$(1)/stage$(2)/%.o: rt/%.cpp $$(MKFILE_DEPS)\n+$$(RT_BUILD_DIR_$(1)_$(2))/%.o: rt/%.cpp $$(MKFILE_DEPS)\n \t@$$(call E, compile: $$@)\n \t$$(Q)$$(call CFG_COMPILE_CXX_$(1), $$@, $$(RUNTIME_INCS_$(1)_$(2)) \\\n                  $$(SNAP_DEFINES) $$(RUNTIME_CXXFLAGS_$(1)_$(2))) $$<\n \n-rt/$(1)/stage$(2)/%.o: rt/%.c $$(MKFILE_DEPS)\n+$$(RT_BUILD_DIR_$(1)_$(2))/%.o: rt/%.c $$(MKFILE_DEPS)\n \t@$$(call E, compile: $$@)\n \t$$(Q)$$(call CFG_COMPILE_C_$(1), $$@, $$(RUNTIME_INCS_$(1)_$(2)) \\\n                  $$(SNAP_DEFINES) $$(RUNTIME_CFLAGS_$(1)_$(2))) $$<\n \n-rt/$(1)/stage$(2)/%.o: rt/%.S  $$(MKFILE_DEPS) \\\n+$$(RT_BUILD_DIR_$(1)_$(2))/%.o: rt/%.S  $$(MKFILE_DEPS) \\\n                      $$(LLVM_CONFIG_$$(CFG_BUILD_TRIPLE))\n \t@$$(call E, compile: $$@)\n \t$$(Q)$$(call CFG_ASSEMBLE_$(1),$$@,$$<)\n \n-rt/$(1)/stage$(2)/arch/$$(HOST_$(1))/libmorestack.a: $$(MORESTACK_OBJ_$(1)_$(2))\n+$$(RT_BUILD_DIR_$(1)_$(2))/arch/$$(HOST_$(1))/libmorestack.a: $$(MORESTACK_OBJ_$(1)_$(2))\n \t@$$(call E, link: $$@)\n \t$$(Q)$(AR_$(1)) rcs $$@ $$<\n \n-rt/$(1)/stage$(2)/$(CFG_RUNTIME_$(1)): $$(RUNTIME_OBJS_$(1)_$(2)) $$(MKFILE_DEPS) \\\n+$$(RT_BUILD_DIR_$(1)_$(2))/$(CFG_RUNTIME_$(1)): $$(RUNTIME_OBJS_$(1)_$(2)) $$(MKFILE_DEPS) \\\n                         $$(RUNTIME_DEF_$(1)_$(2)) $$(LIBUV_LIB_$(1)_$(2)) $$(JEMALLOC_LIB_$(1)_$(2))\n \t@$$(call E, link: $$@)\n \t$$(Q)$$(call CFG_LINK_CXX_$(1),$$@, $$(RUNTIME_OBJS_$(1)_$(2)) \\\n@@ -171,7 +174,7 @@ endif\n ifdef CFG_WINDOWSY_$(1)\n $$(LIBUV_LIB_$(1)_$(2)): $$(LIBUV_DEPS)\n \t$$(Q)$$(MAKE) -C $$(S)src/libuv/ \\\n-\t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/rt/$(1)/stage$(2)/libuv\" \\\n+\t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/$$(RT_BUILD_DIR_$(1)_$(2))/libuv\" \\\n \t\tOS=mingw \\\n \t\tV=$$(VERBOSE)\n else ifeq ($(OSTYPE_$(1)), linux-androideabi)\n@@ -185,7 +188,7 @@ $$(LIBUV_LIB_$(1)_$(2)): $$(LIBUV_DEPS)\n \t\tAR=\"$$(AR_$(1))\" \\\n \t\tPLATFORM=android \\\n \t\tBUILDTYPE=Release \\\n-\t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/rt/$(1)/stage$(2)/libuv\" \\\n+\t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/$$(RT_BUILD_DIR_$(1)_$(2))/libuv\" \\\n \t\thost=android OS=linux \\\n \t\tV=$$(VERBOSE)\n else\n@@ -196,59 +199,59 @@ $$(LIBUV_LIB_$(1)_$(2)): $$(LIBUV_DEPS)\n \t\tCC=\"$$(CC_$(1))\" \\\n \t\tCXX=\"$$(CXX_$(1))\" \\\n \t\tAR=\"$$(AR_$(1))\" \\\n-\t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/rt/$(1)/stage$(2)/libuv\" \\\n+\t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/$$(RT_BUILD_DIR_$(1)_$(2))/libuv\" \\\n \t\tV=$$(VERBOSE)\n endif\n \n ifeq ($(OSTYPE_$(1)), linux-androideabi)\n $$(JEMALLOC_LIB_$(1)_$(2)):\n-\tcd $$(CFG_BUILD_DIR)/rt/$(1)/stage$(2)/jemalloc; $(S)src/rt/jemalloc/configure \\\n+\tcd $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc; $(S)src/rt/jemalloc/configure \\\n \t\t--disable-experimental --build=$(CFG_BUILD_TRIPLE) --host=$(1) --disable-tls \\\n \t\tEXTRA_CFLAGS=\"$$(CFG_GCCISH_CFLAGS) $$(LIBUV_FLAGS_$$(HOST_$(1))) $$(SNAP_DEFINES)\" \\\n \t\tLDFLAGS=\"$$(CFG_GCCISH_LINK_FLAGS) $$(LIBUV_FLAGS_$$(HOST_$(1)))\" \\\n \t\tCC=\"$$(CC_$(1))\" \\\n \t\tCXX=\"$$(CXX_$(1))\" \\\n \t\tAR=\"$$(AR_$(1))\"\n-\t$$(Q)$$(MAKE) -C $$(CFG_BUILD_DIR)/rt/$(1)/stage$(2)/jemalloc\n+\t$$(Q)$$(MAKE) -C $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc\n else\n $$(JEMALLOC_LIB_$(1)_$(2)):\n-\tcd $$(CFG_BUILD_DIR)/rt/$(1)/stage$(2)/jemalloc; $(S)src/rt/jemalloc/configure \\\n+\tcd $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc; $(S)src/rt/jemalloc/configure \\\n \t\t--disable-experimental --build=$(CFG_BUILD_TRIPLE) --host=$(1) \\\n \t\tEXTRA_CFLAGS=\"$$(CFG_GCCISH_CFLAGS) $$(LIBUV_FLAGS_$$(HOST_$(1))) $$(SNAP_DEFINES)\" \\\n \t\tLDFLAGS=\"$$(CFG_GCCISH_LINK_FLAGS) $$(LIBUV_FLAGS_$$(HOST_$(1)))\" \\\n \t\tCC=\"$$(CC_$(1))\" \\\n \t\tCXX=\"$$(CXX_$(1))\" \\\n \t\tAR=\"$$(AR_$(1))\"\n-\t$$(Q)$$(MAKE) -C $$(CFG_BUILD_DIR)/rt/$(1)/stage$(2)/jemalloc\n+\t$$(Q)$$(MAKE) -C $$(RT_BUILD_DIR_$(1)_$(2))/jemalloc\n endif\n \n \n # These could go in rt.mk or rustllvm.mk, they're needed for both.\n \n # This regexp has a single $, escaped twice\n-%.bsd.def:    %.def.in $$(MKFILE_DEPS)\n+$(1)/%.bsd.def:    %.def.in $$(MKFILE_DEPS)\n \t@$$(call E, def: $$@)\n \t$$(Q)echo \"{\" > $$@\n \t$$(Q)sed 's/.$$$$/&;/' $$< >> $$@\n \t$$(Q)echo \"};\" >> $$@\n \n-%.linux.def:    %.def.in $$(MKFILE_DEPS)\n+$(1)/%.linux.def:    %.def.in $$(MKFILE_DEPS)\n \t@$$(call E, def: $$@)\n \t$$(Q)echo \"{\" > $$@\n \t$$(Q)sed 's/.$$$$/&;/' $$< >> $$@\n \t$$(Q)echo \"};\" >> $$@\n \n-%.darwin.def:\t%.def.in $$(MKFILE_DEPS)\n+$(1)/%.darwin.def:\t%.def.in $$(MKFILE_DEPS)\n \t@$$(call E, def: $$@)\n \t$$(Q)sed 's/^./_&/' $$< > $$@\n \n-%.android.def:  %.def.in $$(MKFILE_DEPS)\n+$(1)/%.android.def:  %.def.in $$(MKFILE_DEPS)\n \t@$$(call E, def: $$@)\n \t$$(Q)echo \"{\" > $$@\n \t$$(Q)sed 's/.$$$$/&;/' $$< >> $$@\n \t$$(Q)echo \"};\" >> $$@\n \n-%.mingw32.def:\t%.def.in $$(MKFILE_DEPS)\n+$(1)/%.mingw32.def:\t%.def.in $$(MKFILE_DEPS)\n \t@$$(call E, def: $$@)\n \t$$(Q)echo LIBRARY $$* > $$@\n \t$$(Q)echo EXPORTS >> $$@"}, {"sha": "8c3bf4e05b934e68d82ced050d6ec8a61ed82f32", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "patch": "@@ -24,23 +24,23 @@ endif\n \n RUSTLLVM_OBJS_CS_$(1) := $$(addprefix rustllvm/, RustWrapper.cpp PassWrapper.cpp)\n \n-RUSTLLVM_DEF_$(1) := rustllvm/rustllvm$(CFG_DEF_SUFFIX_$(1))\n+RUSTLLVM_DEF_$(1) := $(1)/rustllvm/rustllvm$(CFG_DEF_SUFFIX_$(1))\n \n RUSTLLVM_INCS_$(1) = $$(LLVM_EXTRA_INCDIRS_$(1)) \\\n                      -iquote $$(LLVM_INCDIR_$(1)) \\\n                      -iquote $$(S)src/rustllvm/include\n-RUSTLLVM_OBJS_OBJS_$(1) := $$(RUSTLLVM_OBJS_CS_$(1):rustllvm/%.cpp=rustllvm/$(1)/%.o)\n+RUSTLLVM_OBJS_OBJS_$(1) := $$(RUSTLLVM_OBJS_CS_$(1):rustllvm/%.cpp=$(1)/rustllvm/%.o)\n ALL_OBJ_FILES += $$(RUSTLLVM_OBJS_OBJS_$(1))\n \n-rustllvm/$(1)/$(CFG_RUSTLLVM_$(1)): $$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n+$(1)/rustllvm/$(CFG_RUSTLLVM_$(1)): $$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n                           $$(MKFILE_DEPS) $$(RUSTLLVM_DEF_$(1))\n \t@$$(call E, link: $$@)\n \t$$(Q)$$(call CFG_LINK_CXX_$(1),$$@,$$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n \t  $$(CFG_GCCISH_PRE_LIB_FLAGS_$(1)) $$(LLVM_LIBS_$(1)) \\\n           $$(CFG_GCCISH_POST_LIB_FLAGS_$(1)) \\\n           $$(LLVM_LDFLAGS_$(1)),$$(RUSTLLVM_DEF_$(1)),$$(CFG_RUSTLLVM_$(1)))\n \n-rustllvm/$(1)/%.o: rustllvm/%.cpp $$(MKFILE_DEPS) $$(LLVM_CONFIG_$(1))\n+$(1)/rustllvm/%.o: rustllvm/%.cpp $$(MKFILE_DEPS) $$(LLVM_CONFIG_$(1))\n \t@$$(call E, compile: $$@)\n \t$$(Q)$$(call CFG_COMPILE_CXX_$(1), $$@, $$(LLVM_CXXFLAGS_$(1)) $$(RUSTLLVM_INCS_$(1))) $$<\n endef"}, {"sha": "e540d856ecd27055abeb3c60f4405e3373a5b275", "filename": "mk/target.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/422dcbd56d1a1888f1491d8fb14bb87a54fadbc7/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=422dcbd56d1a1888f1491d8fb14bb87a54fadbc7", "patch": "@@ -39,14 +39,14 @@ WFLAGS_ST2 = -D warnings\n define TARGET_STAGE_N\n \n $$(TLIB$(1)_T_$(2)_H_$(3))/libmorestack.a: \\\n-\t\trt/$(2)/stage$(1)/arch/$$(HOST_$(2))/libmorestack.a \\\n+\t\t$(2)/rt/stage$(1)/arch/$$(HOST_$(2))/libmorestack.a \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/ \\\n \t\t  $(SNAPSHOT_RUSTC_POST_CLEANUP)\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUNTIME_$(2)): \\\n-\t\trt/$(2)/stage$(1)/$(CFG_RUNTIME_$(2)) \\\n+\t\t$(2)/rt/stage$(1)/$(CFG_RUNTIME_$(2)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/ \\\n \t\t  $(SNAPSHOT_RUSTC_POST_CLEANUP)\n \t@$$(call E, cp: $$@)\n@@ -86,7 +86,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)): \\\n ifneq ($$(findstring $(2),$$(CFG_HOST_TRIPLES)),)\n \n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(3)): \\\n-\t\trustllvm/$(2)/$(CFG_RUSTLLVM_$(3)) \\\n+\t\t$(2)/rustllvm/$(CFG_RUSTLLVM_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/ \\\n \t\t  $(SNAPSHOT_RUSTC_POST_CLEANUP)\n \t@$$(call E, cp: $$@)"}]}