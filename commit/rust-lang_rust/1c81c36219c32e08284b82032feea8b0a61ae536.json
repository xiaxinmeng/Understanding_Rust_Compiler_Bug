{"sha": "1c81c36219c32e08284b82032feea8b0a61ae536", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjODFjMzYyMTljMzJlMDgyODRiODIwMzJmZWVhOGIwYTYxYWU1MzY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-19T08:54:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-19T08:54:02Z"}, "message": "Merge #10280\n\n10280: internal: type argument parsing refactoring r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "de9e25d7d0fc7be684aa5b47b047c2712284ea80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de9e25d7d0fc7be684aa5b47b047c2712284ea80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c81c36219c32e08284b82032feea8b0a61ae536", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRvqqCRBK7hj4Ov3rIwAAYOsIAETEy1fC0L19EntRyrpRQkdZ\nhw7qDbdqA2H5IZbzbu8XFoi9apPHslZ1UUfzrm8SDJtfTBrbl9MYe5KyKu/07Rsq\nfYLaMd+5n/nD7mWFhDgC+UwZoHIcQn3ENy81nUVtYWKTrQNf7d88KN8xzU5EHnrB\n1q2925JHDOhVKSCNJ28xackKA6wREncdC0GuIljuctBzciVN/b5XlpgXoW3QseFZ\nRw6aIsuOM1LRrCsBGP4xz0K01PdKDgMPHLAIK8cQARoJRIwdnHU5/A+nnH8/rAcA\nlubF40RNEKyBWmeuiBJHLBkYs7yja5mFf+eqSljmluwOJ7NJfviiWsd7EMunCJw=\n=d4KX\n-----END PGP SIGNATURE-----\n", "payload": "tree de9e25d7d0fc7be684aa5b47b047c2712284ea80\nparent 7729473dd24d27e55f931dac3b9dd0d11ff291e4\nparent 8ae1f9c33599351dd31027c446d6565b170ec99a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632041642 +0000\ncommitter GitHub <noreply@github.com> 1632041642 +0000\n\nMerge #10280\n\n10280: internal: type argument parsing refactoring r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c81c36219c32e08284b82032feea8b0a61ae536", "html_url": "https://github.com/rust-lang/rust/commit/1c81c36219c32e08284b82032feea8b0a61ae536", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c81c36219c32e08284b82032feea8b0a61ae536/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7729473dd24d27e55f931dac3b9dd0d11ff291e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7729473dd24d27e55f931dac3b9dd0d11ff291e4", "html_url": "https://github.com/rust-lang/rust/commit/7729473dd24d27e55f931dac3b9dd0d11ff291e4"}, {"sha": "8ae1f9c33599351dd31027c446d6565b170ec99a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae1f9c33599351dd31027c446d6565b170ec99a", "html_url": "https://github.com/rust-lang/rust/commit/8ae1f9c33599351dd31027c446d6565b170ec99a"}], "stats": {"total": 168, "additions": 139, "deletions": 29}, "files": [{"sha": "3b9444a6ff2b8e4fd1ddb94f79c43cee283b0524", "filename": "crates/parser/src/grammar/generic_args.rs", "status": "modified", "additions": 17, "deletions": 29, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/1c81c36219c32e08284b82032feea8b0a61ae536/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c81c36219c32e08284b82032feea8b0a61ae536/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs?ref=1c81c36219c32e08284b82032feea8b0a61ae536", "patch": "@@ -26,15 +26,12 @@ pub(super) fn opt_generic_arg_list(p: &mut Parser, colon_colon_required: bool) {\n // test type_arg\n // type A = B<'static, i32, 1, { 2 }, Item=u64, true, false>;\n fn generic_arg(p: &mut Parser) {\n-    let m = p.start();\n     match p.current() {\n-        LIFETIME_IDENT => {\n-            lifetime(p);\n-            m.complete(p, LIFETIME_ARG);\n-        }\n+        LIFETIME_IDENT => lifetime_arg(p),\n         // test associated_type_bounds\n         // fn print_all<T: Iterator<Item, Item::Item, Item::<true>, Item: Display, Item<'a> = Item>>(printables: T) {}\n         IDENT if [T![<], T![=], T![:]].contains(&p.nth(1)) => {\n+            let m = p.start();\n             let path_ty = p.start();\n             let path = p.start();\n             let path_seg = p.start();\n@@ -78,37 +75,22 @@ fn generic_arg(p: &mut Parser) {\n                 }\n             }\n         }\n-        T!['{'] => {\n-            expressions::block_expr(p);\n-            m.complete(p, CONST_ARG);\n-        }\n-        k if k.is_literal() => {\n-            expressions::literal(p);\n-            m.complete(p, CONST_ARG);\n-        }\n-        T![true] | T![false] => {\n-            expressions::literal(p);\n-            m.complete(p, CONST_ARG);\n-        }\n         // test const_generic_negated_literal\n         // fn f() { S::<-1> }\n-        T![-] => {\n-            let lm = p.start();\n-            p.bump(T![-]);\n-            expressions::literal(p);\n-            lm.complete(p, PREFIX_EXPR);\n-            m.complete(p, CONST_ARG);\n-        }\n-        _ => {\n-            types::type_(p);\n-            m.complete(p, TYPE_ARG);\n-        }\n+        T!['{'] | T![true] | T![false] | T![-] => const_arg(p),\n+        k if k.is_literal() => const_arg(p),\n+        _ => type_arg(p),\n     }\n }\n \n+fn lifetime_arg(p: &mut Parser) {\n+    let m = p.start();\n+    lifetime(p);\n+    m.complete(p, LIFETIME_ARG);\n+}\n+\n pub(super) fn const_arg(p: &mut Parser) {\n     let m = p.start();\n-    // FIXME: duplicates the code above\n     match p.current() {\n         T!['{'] => {\n             expressions::block_expr(p);\n@@ -137,3 +119,9 @@ pub(super) fn const_arg(p: &mut Parser) {\n         }\n     }\n }\n+\n+fn type_arg(p: &mut Parser) {\n+    let m = p.start();\n+    types::type_(p);\n+    m.complete(p, TYPE_ARG);\n+}"}, {"sha": "aced9884acce64519ea8a4166eef4979241146cf", "filename": "crates/syntax/test_data/parser/err/0049_double_fish.rast", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/1c81c36219c32e08284b82032feea8b0a61ae536/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0049_double_fish.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1c81c36219c32e08284b82032feea8b0a61ae536/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0049_double_fish.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0049_double_fish.rast?ref=1c81c36219c32e08284b82032feea8b0a61ae536", "patch": "@@ -0,0 +1,115 @@\n+SOURCE_FILE@0..90\n+  FN@0..40\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..4\n+      IDENT@3..4 \"f\"\n+    PARAM_LIST@4..6\n+      L_PAREN@4..5 \"(\"\n+      R_PAREN@5..6 \")\"\n+    WHITESPACE@6..7 \" \"\n+    BLOCK_EXPR@7..40\n+      L_CURLY@7..8 \"{\"\n+      WHITESPACE@8..13 \"\\n    \"\n+      EXPR_STMT@13..38\n+        PATH_EXPR@13..37\n+          PATH@13..37\n+            PATH_SEGMENT@13..37\n+              NAME_REF@13..14\n+                IDENT@13..14 \"S\"\n+              GENERIC_ARG_LIST@14..37\n+                COLON2@14..16 \"::\"\n+                L_ANGLE@16..17 \"<\"\n+                TYPE_ARG@17..36\n+                  PATH_TYPE@17..36\n+                    PATH@17..28\n+                      PATH_SEGMENT@17..28\n+                        NAME_REF@17..21\n+                          IDENT@17..21 \"Item\"\n+                        GENERIC_ARG_LIST@21..28\n+                          COLON2@21..23 \"::\"\n+                          L_ANGLE@23..24 \"<\"\n+                          TYPE_ARG@24..27\n+                            PATH_TYPE@24..27\n+                              PATH@24..27\n+                                PATH_SEGMENT@24..27\n+                                  NAME_REF@24..27\n+                                    IDENT@24..27 \"lol\"\n+                          R_ANGLE@27..28 \">\"\n+                    GENERIC_ARG_LIST@28..36\n+                      COLON2@28..30 \"::\"\n+                      L_ANGLE@30..31 \"<\"\n+                      TYPE_ARG@31..35\n+                        PATH_TYPE@31..35\n+                          PATH@31..35\n+                            PATH_SEGMENT@31..35\n+                              NAME_REF@31..35\n+                                IDENT@31..35 \"nope\"\n+                      R_ANGLE@35..36 \">\"\n+                R_ANGLE@36..37 \">\"\n+        SEMICOLON@37..38 \";\"\n+      WHITESPACE@38..39 \"\\n\"\n+      R_CURLY@39..40 \"}\"\n+  WHITESPACE@40..42 \"\\n\\n\"\n+  FN@42..89\n+    FN_KW@42..44 \"fn\"\n+    WHITESPACE@44..45 \" \"\n+    NAME@45..46\n+      IDENT@45..46 \"g\"\n+    PARAM_LIST@46..48\n+      L_PAREN@46..47 \"(\"\n+      R_PAREN@47..48 \")\"\n+    WHITESPACE@48..49 \" \"\n+    BLOCK_EXPR@49..89\n+      L_CURLY@49..50 \"{\"\n+      WHITESPACE@50..55 \"\\n    \"\n+      LET_STMT@55..76\n+        LET_KW@55..58 \"let\"\n+        WHITESPACE@58..59 \" \"\n+        WILDCARD_PAT@59..60\n+          UNDERSCORE@59..60 \"_\"\n+        COLON@60..61 \":\"\n+        WHITESPACE@61..62 \" \"\n+        PATH_TYPE@62..76\n+          PATH@62..76\n+            PATH@62..73\n+              PATH_SEGMENT@62..73\n+                NAME_REF@62..66\n+                  IDENT@62..66 \"Item\"\n+                GENERIC_ARG_LIST@66..73\n+                  COLON2@66..68 \"::\"\n+                  L_ANGLE@68..69 \"<\"\n+                  TYPE_ARG@69..72\n+                    PATH_TYPE@69..72\n+                      PATH@69..72\n+                        PATH_SEGMENT@69..72\n+                          NAME_REF@69..72\n+                            IDENT@69..72 \"lol\"\n+                  R_ANGLE@72..73 \">\"\n+            COLON2@73..75 \"::\"\n+            ERROR@75..76\n+              L_ANGLE@75..76 \"<\"\n+      EXPR_STMT@76..83\n+        BIN_EXPR@76..83\n+          PATH_EXPR@76..80\n+            PATH@76..80\n+              PATH_SEGMENT@76..80\n+                NAME_REF@76..80\n+                  IDENT@76..80 \"nope\"\n+          R_ANGLE@80..81 \">\"\n+          WHITESPACE@81..82 \" \"\n+          ERROR@82..83\n+            EQ@82..83 \"=\"\n+      WHITESPACE@83..84 \" \"\n+      EXPR_STMT@84..87\n+        TUPLE_EXPR@84..86\n+          L_PAREN@84..85 \"(\"\n+          R_PAREN@85..86 \")\"\n+        SEMICOLON@86..87 \";\"\n+      WHITESPACE@87..88 \"\\n\"\n+      R_CURLY@88..89 \"}\"\n+  WHITESPACE@89..90 \"\\n\"\n+error 75..75: expected identifier\n+error 76..76: expected SEMICOLON\n+error 82..82: expected expression\n+error 83..83: expected SEMICOLON"}, {"sha": "31c12bfff9f9f3a78f89eb7aea774daa044de9f5", "filename": "crates/syntax/test_data/parser/err/0049_double_fish.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1c81c36219c32e08284b82032feea8b0a61ae536/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0049_double_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c81c36219c32e08284b82032feea8b0a61ae536/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0049_double_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0049_double_fish.rs?ref=1c81c36219c32e08284b82032feea8b0a61ae536", "patch": "@@ -0,0 +1,7 @@\n+fn f() {\n+    S::<Item::<lol>::<nope>>;\n+}\n+\n+fn g() {\n+    let _: Item::<lol>::<nope> = ();\n+}"}]}