{"sha": "7ff20944960c26eee4fb2274afb3c29e5e4367ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZjIwOTQ0OTYwYzI2ZWVlNGZiMjI3NGFmYjNjMjllNWU0MzY3YmE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-22T22:39:41Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-22T22:39:41Z"}, "message": "Back out too-platform-fussy bits in preempt-test work. I hate this test.", "tree": {"sha": "725fa28e8ad50451f2d28c8892d6082e971ae9d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/725fa28e8ad50451f2d28c8892d6082e971ae9d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ff20944960c26eee4fb2274afb3c29e5e4367ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff20944960c26eee4fb2274afb3c29e5e4367ba", "html_url": "https://github.com/rust-lang/rust/commit/7ff20944960c26eee4fb2274afb3c29e5e4367ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ff20944960c26eee4fb2274afb3c29e5e4367ba/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1", "html_url": "https://github.com/rust-lang/rust/commit/1cb4a57b7b2fda8db6a225207c9b9c090ba565d1"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "d962e894153bdf3a21eb1d35475951f155982a3b", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7ff20944960c26eee4fb2274afb3c29e5e4367ba/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/7ff20944960c26eee4fb2274afb3c29e5e4367ba/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=7ff20944960c26eee4fb2274afb3c29e5e4367ba", "patch": "@@ -67,17 +67,6 @@ struct frame_glue_fns;\n \n static size_t const TIME_SLICE_IN_MS = 10;\n \n-// This helps our preemption scheme handle \"running on valgrind\".\n-\n-#if defined(__WIN32__)\n-#define YIELD_C_THREAD_IF_ON_VALGRIND (void);\n-#else\n-#define YIELD_C_THREAD_IF_ON_VALGRIND  \\\n-    if (RUNNING_ON_VALGRIND) {         \\\n-        pthread_yield();               \\\n-    }\n-#endif\n-\n // Every reference counted object should derive from this base class.\n \n template <typename T>"}, {"sha": "e4fbd6a94f898e330272be524fe6ec0f9c40e60d", "filename": "src/rt/rust_timer.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ff20944960c26eee4fb2274afb3c29e5e4367ba/src%2Frt%2Frust_timer.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7ff20944960c26eee4fb2274afb3c29e5e4367ba/src%2Frt%2Frust_timer.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_timer.cpp?ref=7ff20944960c26eee4fb2274afb3c29e5e4367ba", "patch": "@@ -34,7 +34,6 @@ timer_loop(void *ptr) {\n     size_t ms = TIME_SLICE_IN_MS;\n \n     while (!timer->exit_flag) {\n-        YIELD_C_THREAD_IF_ON_VALGRIND;\n #if defined(__WIN32__)\n         Sleep(ms);\n #else"}, {"sha": "ff6874e4f48ec054bd78ce5f5c3cfb63b66adc98", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ff20944960c26eee4fb2274afb3c29e5e4367ba/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7ff20944960c26eee4fb2274afb3c29e5e4367ba/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=7ff20944960c26eee4fb2274afb3c29e5e4367ba", "patch": "@@ -1,11 +1,9 @@\n #include \"rust_internal.h\"\n-#include \"valgrind.h\"\n \n // Upcalls.\n \n #ifdef __GNUC__\n #define LOG_UPCALL_ENTRY(task)                              \\\n-    YIELD_C_THREAD_IF_ON_VALGRIND;                          \\\n     (task)->dom->get_log().reset_indent(0);                 \\\n     (task)->log(rust_log::UPCALL,                           \\\n                 \"> UPCALL %s - task: 0x%\" PRIxPTR           \\\n@@ -15,7 +13,6 @@\n     (task)->dom->get_log().indent();\n #else\n #define LOG_UPCALL_ENTRY(task)                              \\\n-    YIELD_C_THREAD_IF_ON_VALGRIND;                          \\\n     (task)->dom->get_log().reset_indent(0);                 \\\n     (task)->log(rust_log::UPCALL,                           \\\n                 \"> UPCALL task: x%\" PRIxPTR (task));        \\"}]}