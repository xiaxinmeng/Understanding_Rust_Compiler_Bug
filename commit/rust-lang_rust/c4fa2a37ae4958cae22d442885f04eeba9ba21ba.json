{"sha": "c4fa2a37ae4958cae22d442885f04eeba9ba21ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ZmEyYTM3YWU0OTU4Y2FlMjJkNDQyODg1ZjA0ZWViYTliYTIxYmE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-01T20:09:03Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-14T01:15:39Z"}, "message": "libsyntax: convert `LockstepIterSize` binops to by value", "tree": {"sha": "8cf9118b53ecc769b528c2a1dc0819356dab8abe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cf9118b53ecc769b528c2a1dc0819356dab8abe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4fa2a37ae4958cae22d442885f04eeba9ba21ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4fa2a37ae4958cae22d442885f04eeba9ba21ba", "html_url": "https://github.com/rust-lang/rust/commit/c4fa2a37ae4958cae22d442885f04eeba9ba21ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4fa2a37ae4958cae22d442885f04eeba9ba21ba/comments", "author": null, "committer": null, "parents": [{"sha": "265b89abde76f7e0555712d7c9056c6f6c57ff96", "url": "https://api.github.com/repos/rust-lang/rust/commits/265b89abde76f7e0555712d7c9056c6f6c57ff96", "html_url": "https://github.com/rust-lang/rust/commit/265b89abde76f7e0555712d7c9056c6f6c57ff96"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e2439bad178fe5c8257f7a86a5859b6f175a2363", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c4fa2a37ae4958cae22d442885f04eeba9ba21ba/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4fa2a37ae4958cae22d442885f04eeba9ba21ba/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=c4fa2a37ae4958cae22d442885f04eeba9ba21ba", "patch": "@@ -106,6 +106,8 @@ enum LockstepIterSize {\n     LisContradiction(String),\n }\n \n+// NOTE(stage0): Remove impl after a snapshot\n+#[cfg(stage0)]\n impl Add<LockstepIterSize, LockstepIterSize> for LockstepIterSize {\n     fn add(&self, other: &LockstepIterSize) -> LockstepIterSize {\n         match *self {\n@@ -127,6 +129,28 @@ impl Add<LockstepIterSize, LockstepIterSize> for LockstepIterSize {\n     }\n }\n \n+#[cfg(not(stage0))]  // NOTE(stage0): Remove cfg after a snapshot\n+impl Add<LockstepIterSize, LockstepIterSize> for LockstepIterSize {\n+    fn add(self, other: LockstepIterSize) -> LockstepIterSize {\n+        match self {\n+            LisUnconstrained => other,\n+            LisContradiction(_) => self,\n+            LisConstraint(l_len, ref l_id) => match other {\n+                LisUnconstrained => self.clone(),\n+                LisContradiction(_) => other,\n+                LisConstraint(r_len, _) if l_len == r_len => self.clone(),\n+                LisConstraint(r_len, r_id) => {\n+                    let l_n = token::get_ident(l_id.clone());\n+                    let r_n = token::get_ident(r_id);\n+                    LisContradiction(format!(\"inconsistent lockstep iteration: \\\n+                                              '{}' has {} items, but '{}' has {}\",\n+                                              l_n, l_len, r_n, r_len).to_string())\n+                }\n+            },\n+        }\n+    }\n+}\n+\n fn lockstep_iter_size(t: &TokenTree, r: &TtReader) -> LockstepIterSize {\n     match *t {\n         TtDelimited(_, ref delimed) => {"}]}