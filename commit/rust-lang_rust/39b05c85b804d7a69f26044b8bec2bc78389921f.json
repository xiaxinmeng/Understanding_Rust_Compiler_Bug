{"sha": "39b05c85b804d7a69f26044b8bec2bc78389921f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YjA1Yzg1YjgwNGQ3YTY5ZjI2MDQ0YjhiZWMyYmM3ODM4OTkyMWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-02T19:06:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-02T19:06:42Z"}, "message": "stdlib: Win32 fsync is just fail\n\nNo fsync function on windows. Needs custom implementation.", "tree": {"sha": "f7934a1c4b8f652dc81b8b468a1bc543a3351308", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7934a1c4b8f652dc81b8b468a1bc543a3351308"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39b05c85b804d7a69f26044b8bec2bc78389921f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39b05c85b804d7a69f26044b8bec2bc78389921f", "html_url": "https://github.com/rust-lang/rust/commit/39b05c85b804d7a69f26044b8bec2bc78389921f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39b05c85b804d7a69f26044b8bec2bc78389921f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21c69d4ba4ddaabbc43c82c040ecc8edd916e27b", "url": "https://api.github.com/repos/rust-lang/rust/commits/21c69d4ba4ddaabbc43c82c040ecc8edd916e27b", "html_url": "https://github.com/rust-lang/rust/commit/21c69d4ba4ddaabbc43c82c040ecc8edd916e27b"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "14e8c19ca67e59ab5ff6a4de9a9f5802671fbe8b", "filename": "src/lib/win32_os.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39b05c85b804d7a69f26044b8bec2bc78389921f/src%2Flib%2Fwin32_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39b05c85b804d7a69f26044b8bec2bc78389921f/src%2Flib%2Fwin32_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fwin32_os.rs?ref=39b05c85b804d7a69f26044b8bec2bc78389921f", "patch": "@@ -16,7 +16,6 @@ native mod libc {\n     fn _fdopen(fd: fd_t, mode: str::sbuf) -> FILE;\n     fn fclose(f: FILE);\n     fn fflush(f: FILE) -> c_int;\n-    fn fsync(fd: fd_t) -> c_int;\n     fn fileno(f: FILE) -> fd_t;\n     fn fgetc(f: FILE) -> c_int;\n     fn ungetc(c: c_int, f: FILE);\n@@ -97,8 +96,7 @@ fn fclose(file: libc::FILE) {\n }\n \n fn fsync_fd(fd: fd_t, level: io::fsync::level) -> c_int {\n-    // FIXME do something more apropriate\n-    ret libc::fsync(fd);\n+    // FIXME\n }\n \n #[abi = \"cdecl\"]"}]}