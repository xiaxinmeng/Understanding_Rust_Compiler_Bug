{"sha": "db518ef68abdbf6ef05693dc492147ce5ec7219e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNTE4ZWY2OGFiZGJmNmVmMDU2OTNkYzQ5MjE0N2NlNWVjNzIxOWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-15T21:10:42Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-23T04:57:02Z"}, "message": "test: Fix tests.", "tree": {"sha": "be207e9d0bc058021052ee0f7d1baaaa8a9096b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be207e9d0bc058021052ee0f7d1baaaa8a9096b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db518ef68abdbf6ef05693dc492147ce5ec7219e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db518ef68abdbf6ef05693dc492147ce5ec7219e", "html_url": "https://github.com/rust-lang/rust/commit/db518ef68abdbf6ef05693dc492147ce5ec7219e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db518ef68abdbf6ef05693dc492147ce5ec7219e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08e561ae70bc42b755b3831b3ce880745228892c", "url": "https://api.github.com/repos/rust-lang/rust/commits/08e561ae70bc42b755b3831b3ce880745228892c", "html_url": "https://github.com/rust-lang/rust/commit/08e561ae70bc42b755b3831b3ce880745228892c"}], "stats": {"total": 97, "additions": 55, "deletions": 42}, "files": [{"sha": "c7e8e8991359551944f2251f2fa81da151ef6ca7", "filename": "src/test/auxiliary/extern-crosscrate-source.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -15,8 +15,10 @@\n \n pub mod rustrt {\n     pub extern {\n-        pub fn rust_dbg_call(cb: *u8, data: libc::uintptr_t)\n-                          -> libc::uintptr_t;\n+        pub fn rust_dbg_call(cb: extern \"C\" fn(data: libc::uintptr_t)\n+                                               -> libc::uintptr_t,\n+                             data: libc::uintptr_t)\n+                             -> libc::uintptr_t;\n     }\n }\n "}, {"sha": "2f7ccfe2a3a235931e8c92f07bd7fc9edb530c4d", "filename": "src/test/run-pass/const-cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fconst-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fconst-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-cast.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -10,7 +10,7 @@\n \n extern fn foo() {}\n \n-static x: *u8 = foo;\n+static x: extern \"C\" fn() = foo;\n static y: *libc::c_void = x as *libc::c_void;\n static a: &'static int = &10;\n static b: *int = a as *int;"}, {"sha": "66db6c824bc01d281c1166afab5ebaf706055b23", "filename": "src/test/run-pass/const-cross-crate-extern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -13,7 +13,7 @@\n \n extern mod cci_const;\n use cci_const::bar;\n-static foo: *u8 = bar;\n+static foo: extern \"C\" fn() = bar;\n \n pub fn main() {\n     assert_eq!(foo, cci_const::bar);"}, {"sha": "513f93a6760566d9d401133f6464457d2381434e", "filename": "src/test/run-pass/const-extern-function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -10,7 +10,7 @@\n \n extern fn foopy() {}\n \n-static f: *u8 = foopy;\n+static f: extern \"C\" fn() = foopy;\n static s: S = S { f: foopy };\n \n struct S {"}, {"sha": "2e95873b60df455282f59b99e74f2e5ecf472a0b", "filename": "src/test/run-pass/extern-call-deep.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-call-deep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-call-deep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call-deep.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -10,8 +10,10 @@\n \n mod rustrt {\n     pub extern {\n-        pub fn rust_dbg_call(cb: *u8, data: libc::uintptr_t)\n-                          -> libc::uintptr_t;\n+        pub fn rust_dbg_call(cb: extern \"C\" fn(data: libc::uintptr_t)\n+                                               -> libc::uintptr_t,\n+                             data: libc::uintptr_t)\n+                             -> libc::uintptr_t;\n     }\n }\n "}, {"sha": "6ad1c531d9a199636178676a0081fa82856dc26b", "filename": "src/test/run-pass/extern-call-deep2.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-call-deep2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-call-deep2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call-deep2.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -10,8 +10,10 @@\n \n mod rustrt {\n     pub extern {\n-        pub fn rust_dbg_call(cb: *u8, data: libc::uintptr_t)\n-                          -> libc::uintptr_t;\n+        pub fn rust_dbg_call(cb: extern \"C\" fn(data: libc::uintptr_t)\n+                                               -> libc::uintptr_t,\n+                             data: libc::uintptr_t)\n+                             -> libc::uintptr_t;\n     }\n }\n "}, {"sha": "2caf4cbf2bc74ddb26a401ae00a63cde825d1ac5", "filename": "src/test/run-pass/extern-call-scrub.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -14,8 +14,10 @@\n \n mod rustrt {\n     pub extern {\n-        pub fn rust_dbg_call(cb: *u8, data: libc::uintptr_t)\n-                          -> libc::uintptr_t;\n+        pub fn rust_dbg_call(cb: extern \"C\" fn(data: libc::uintptr_t)\n+                                               -> libc::uintptr_t,\n+                             data: libc::uintptr_t)\n+                             -> libc::uintptr_t;\n     }\n }\n "}, {"sha": "6c36c4aa8f6298100c2ac8a27d7c4de06069e2c5", "filename": "src/test/run-pass/extern-call.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -10,7 +10,9 @@\n \n mod rustrt {\n     pub extern {\n-        pub fn rust_dbg_call(cb: *u8, data: libc::uintptr_t)\n+        pub fn rust_dbg_call(cb: extern \"C\" fn(data: libc::uintptr_t)\n+                                               -> libc::uintptr_t,\n+                             data: libc::uintptr_t)\n                              -> libc::uintptr_t;\n     }\n }"}, {"sha": "b12295ab57684490f1b8e281187d6c071a81ff99", "filename": "src/test/run-pass/extern-stress.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-stress.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -13,8 +13,10 @@\n \n mod rustrt {\n     pub extern {\n-        pub fn rust_dbg_call(cb: *u8, data: libc::uintptr_t)\n-                          -> libc::uintptr_t;\n+        pub fn rust_dbg_call(cb: extern \"C\" fn(data: libc::uintptr_t)\n+                                               -> libc::uintptr_t,\n+                             data: libc::uintptr_t)\n+                             -> libc::uintptr_t;\n     }\n }\n "}, {"sha": "c3fe458802d4bf2552ce73cfcc96eb4a29982fe5", "filename": "src/test/run-pass/extern-take-value.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-take-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-take-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-take-value.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -15,10 +15,10 @@ extern fn g() {\n }\n \n pub fn main() {\n-    // extern functions are *u8 types\n-    let a: *u8 = f;\n-    let b: *u8 = f;\n-    let c: *u8 = g;\n+    // extern functions are extern function types\n+    let a: extern \"C\" fn() = f;\n+    let b: extern \"C\" fn() = f;\n+    let c: extern \"C\" fn() = g;\n \n     assert_eq!(a, b);\n     assert!(a != c);"}, {"sha": "16b1c7cd6f40ff6c7afe0c18d24a27d13c1f45fa", "filename": "src/test/run-pass/extern-yield.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-yield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fextern-yield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-yield.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -10,8 +10,10 @@\n \n mod rustrt {\n     pub extern {\n-        pub fn rust_dbg_call(cb: *u8, data: libc::uintptr_t)\n-                          -> libc::uintptr_t;\n+        pub fn rust_dbg_call(cb: extern \"C\" fn(data: libc::uintptr_t)\n+                                               -> libc::uintptr_t,\n+                             data: libc::uintptr_t)\n+                             -> libc::uintptr_t;\n     }\n }\n "}, {"sha": "4ea1604a18cbe86b7eb4fc99ec6984af3b24bed3", "filename": "src/test/run-pass/float-nan.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-nan.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -10,16 +10,14 @@\n \n extern mod std;\n \n-use core::num::Float::{\n-  NaN, infinity, neg_infinity\n-};\n+use core::num::Float;\n \n pub fn main() {\n-  let nan = NaN::<float>();\n+  let nan = Float::NaN::<float>();\n   assert!((nan).is_NaN());\n \n-  let inf = infinity::<float>();\n-  assert_eq!(-inf, neg_infinity::<float>());\n+  let inf = Float::infinity::<float>();\n+  assert_eq!(-inf, Float::neg_infinity::<float>());\n \n   assert!( nan !=  nan);\n   assert!( nan != -nan);"}, {"sha": "6f94b16331532d5e0dbd1341079a89984b7407c6", "filename": "src/test/run-pass/foreign-call-no-runtime.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -1,7 +1,8 @@\n use core::unstable::run_in_bare_thread;\n \n extern {\n-    pub fn rust_dbg_call(cb: *u8,\n+    pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t)\n+                                           -> libc::uintptr_t,\n                          data: libc::uintptr_t) -> libc::uintptr_t;\n }\n "}, {"sha": "946c86ab298c6edcac46b1079bcab646d2fcd820", "filename": "src/test/run-pass/static-method-xcrate.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -13,11 +13,10 @@\n \n extern mod static_methods_crate;\n use static_methods_crate::read;\n-use readMaybeRenamed = static_methods_crate::read::readMaybe;\n \n pub fn main() {\n     let result: int = read(~\"5\");\n     assert_eq!(result, 5);\n-    assert_eq!(readMaybeRenamed(~\"false\"), Some(false));\n-    assert_eq!(readMaybeRenamed(~\"foo\"), None::<bool>);\n+    assert_eq!(read::readMaybe(~\"false\"), Some(false));\n+    assert_eq!(read::readMaybe(~\"foo\"), None::<bool>);\n }"}, {"sha": "9135b458f95eb636c5e226d03619bbe20c0eb88a", "filename": "src/test/run-pass/trait-inheritance-num.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -13,13 +13,13 @@\n extern mod std;\n \n use core::cmp::{Eq, Ord};\n-use core::num::NumCast::from;\n+use core::num::NumCast;\n \n pub trait NumExt: Num + NumCast + Eq + Ord {}\n \n pub trait FloatExt: NumExt + ApproxEq<Self> {}\n \n-fn greater_than_one<T:NumExt>(n: &T) -> bool { *n > from(1) }\n-fn greater_than_one_float<T:FloatExt>(n: &T) -> bool { *n > from(1) }\n+fn greater_than_one<T:NumExt>(n: &T) -> bool { *n > NumCast::from(1) }\n+fn greater_than_one_float<T:FloatExt>(n: &T) -> bool { *n > NumCast::from(1) }\n \n pub fn main() {}"}, {"sha": "3e31b8067f9c3554baf214d30f2e8fc2b1b91c2e", "filename": "src/test/run-pass/trait-inheritance-num0.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -12,7 +12,7 @@\n \n // Extending Num and using inherited static methods\n \n-use core::num::NumCast::from;\n+use core::num::NumCast;\n \n trait Num {\n     fn from_int(i: int) -> Self;\n@@ -22,7 +22,7 @@ trait Num {\n pub trait NumExt: Num + NumCast { }\n \n fn greater_than_one<T:NumExt>(n: &T) -> bool {\n-    n.gt(&from(1))\n+    n.gt(&NumCast::from(1))\n }\n \n pub fn main() {}"}, {"sha": "25741518f66ebe888fa590366b1b2f9c2e8416ac", "filename": "src/test/run-pass/trait-inheritance-num1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num1.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -9,12 +9,12 @@\n // except according to those terms.\n \n use core::cmp::Ord;\n-use core::num::NumCast::from;\n+use core::num::NumCast;\n \n pub trait NumExt: Num + NumCast + Ord { }\n \n fn greater_than_one<T:NumExt>(n: &T) -> bool {\n-    *n > from(1)\n+    *n > NumCast::from(1)\n }\n \n pub fn main() {}"}, {"sha": "2963a815e05195fc722910c37ec5a72a27ed01d5", "filename": "src/test/run-pass/trait-inheritance-num2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -15,7 +15,6 @@\n extern mod std;\n \n use core::cmp::{Eq, Ord};\n-use core::num::NumCast::from;\n \n pub trait TypeExt {}\n "}, {"sha": "667fd335ac4a4697659d554f2c428b8151bfb101", "filename": "src/test/run-pass/trait-inheritance-num3.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num3.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -9,13 +9,15 @@\n // except according to those terms.\n \n use core::cmp::{Eq, Ord};\n-use core::num::NumCast::from;\n+use core::num::NumCast;\n \n pub trait NumExt: Eq + Ord + Num + NumCast {}\n \n impl NumExt for f32 {}\n \n-fn num_eq_one<T:NumExt>(n: T) { io::println(fmt!(\"%?\", n == from(1))) }\n+fn num_eq_one<T:NumExt>(n: T) {\n+    io::println(fmt!(\"%?\", n == NumCast::from(1)))\n+}\n \n pub fn main() {\n     num_eq_one(1f32); // you need to actually use the function to trigger the ICE"}, {"sha": "f1897636c8aa6be98ba910da7a301c102453d8c3", "filename": "src/test/run-pass/trait-inheritance-num5.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db518ef68abdbf6ef05693dc492147ce5ec7219e/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num5.rs?ref=db518ef68abdbf6ef05693dc492147ce5ec7219e", "patch": "@@ -9,15 +9,15 @@\n // except according to those terms.\n \n use core::cmp::{Eq, Ord};\n-use core::num::NumCast::from;\n+use core::num::NumCast;\n \n pub trait NumExt: Eq + Num + NumCast {}\n \n impl NumExt for f32 {}\n impl NumExt for int {}\n \n fn num_eq_one<T:NumExt>() -> T {\n-    from(1)\n+    NumCast::from(1)\n }\n \n pub fn main() {"}]}