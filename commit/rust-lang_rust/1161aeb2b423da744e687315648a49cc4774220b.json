{"sha": "1161aeb2b423da744e687315648a49cc4774220b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNjFhZWIyYjQyM2RhNzQ0ZTY4NzMxNTY0OGE0OWNjNDc3NDIyMGI=", "commit": {"author": {"name": "Ali Raheem", "email": "github@hadoken.cc", "date": "2019-09-09T19:38:21Z"}, "committer": {"name": "Ali Raheem", "email": "github@hadoken.cc", "date": "2019-09-09T19:38:21Z"}, "message": "Replace println statements with explanatory comments", "tree": {"sha": "2579396b10bdfad9a56f2182760b3d7b18108da2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2579396b10bdfad9a56f2182760b3d7b18108da2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1161aeb2b423da744e687315648a49cc4774220b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1161aeb2b423da744e687315648a49cc4774220b", "html_url": "https://github.com/rust-lang/rust/commit/1161aeb2b423da744e687315648a49cc4774220b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1161aeb2b423da744e687315648a49cc4774220b/comments", "author": null, "committer": null, "parents": [{"sha": "3c820fef9fafca1f25da37274aea683b9e341339", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c820fef9fafca1f25da37274aea683b9e341339", "html_url": "https://github.com/rust-lang/rust/commit/3c820fef9fafca1f25da37274aea683b9e341339"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "246587b4233cd1238e1f715411094b9ae74d621b", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1161aeb2b423da744e687315648a49cc4774220b/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1161aeb2b423da744e687315648a49cc4774220b/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=1161aeb2b423da744e687315648a49cc4774220b", "patch": "@@ -2002,20 +2002,17 @@ pub fn remove_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// use std::{fs, io};\n ///\n /// fn main() -> io::Result<()> {\n-///     // The order in which `read_dir` returns entries is not guaranteed. If reproducible\n-///     // ordering is required the entries should be explicitly sorted.\n ///     let mut entries = fs::read_dir(\".\")?\n ///         .map(|res| res.map(|e| e.path()))\n ///         .collect::<Result<Vec<_>, io::Error>>()?;\n ///\n-///     // println!(\n-///     //     \"Entries before sorting (may or may not be sorted already): {:?}\",\n-///     //     entries\n-///     // );\n+///     // The order in which `read_dir` returns entries is not guaranteed. If reproducible\n+///     // ordering is required the entries should be explicitly sorted.\n ///\n ///     entries.sort();\n ///\n-///     // println!(\"Entries after sorting: {:?}\", entries);\n+///     // The entries have now been sorted by their path.\n+///\n ///     Ok(())\n /// }\n /// ```"}]}