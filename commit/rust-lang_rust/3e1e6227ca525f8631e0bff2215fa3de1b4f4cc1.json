{"sha": "3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMWU2MjI3Y2E1MjVmODYzMWUwYmZmMjIxNWZhM2RlMWI0ZjRjYzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T12:27:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T12:34:11Z"}, "message": "Print errors when failing to create a perf counter", "tree": {"sha": "9780cc5391ff7b468c28db9079b93c64b638188a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9780cc5391ff7b468c28db9079b93c64b638188a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1", "html_url": "https://github.com/rust-lang/rust/commit/3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6b77d1396d420421ede0aaf0a5638f9ceb895ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6b77d1396d420421ede0aaf0a5638f9ceb895ed", "html_url": "https://github.com/rust-lang/rust/commit/b6b77d1396d420421ede0aaf0a5638f9ceb895ed"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "5e276190e5c0ace0b6a087977f917fdcc0657d67", "filename": "crates/ra_prof/src/stop_watch.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs?ref=3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1", "patch": "@@ -23,9 +23,14 @@ impl StopWatch {\n     pub fn start() -> StopWatch {\n         #[cfg(target_os = \"linux\")]\n         let counter = {\n-            let mut counter = perf_event::Builder::new().build().ok();\n+            let mut counter = perf_event::Builder::new()\n+                .build()\n+                .map_err(|err| eprintln!(\"Failed to create perf counter: {}\", err))\n+                .ok();\n             if let Some(counter) = &mut counter {\n-                let _ = counter.enable();\n+                if let Err(err) = counter.enable() {\n+                    eprintln!(\"Failed to start perf counter: {}\", err)\n+                }\n             }\n             counter\n         };\n@@ -47,7 +52,9 @@ impl StopWatch {\n         let time = self.time.elapsed();\n \n         #[cfg(target_os = \"linux\")]\n-        let instructions = self.counter.as_mut().and_then(|it| it.read().ok());\n+        let instructions = self.counter.as_mut().and_then(|it| {\n+            it.read().map_err(|err| eprintln!(\"Failed to read perf counter: {}\", err)).ok()\n+        });\n         #[cfg(not(target_os = \"linux\"))]\n         let instructions = None;\n "}]}