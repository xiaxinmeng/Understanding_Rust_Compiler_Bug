{"sha": "169f58b712e793ea43b90a6008a21b777bf4102f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2OWY1OGI3MTJlNzkzZWE0M2I5MGE2MDA4YTIxYjc3N2JmNDEwMmY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-05T19:29:19Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-05T19:29:19Z"}, "message": "Added some simple documentation.", "tree": {"sha": "bdadb7958e88286d3f72542f467073255842fce4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdadb7958e88286d3f72542f467073255842fce4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/169f58b712e793ea43b90a6008a21b777bf4102f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlruBg8ACgkQ/vbIBR0O\nATwyjhAAtix5owWx/Qwi5Jf8Y9fmif5KbIUSJXX4Mi+xQ9TWyS3Px7kIC5G4iNYL\n5aavbShcaPtojU1h8mubRjhrU18NqaO5aE8mmkjaONzJkkSVgK2NasC8h/3dDMz9\nmzcRZkwQhhUCNo5XwM4VDYC2kmJh163oNhtFBsIZOMqTa+C8Ds2NeYG1Ax5UYSoy\n9DBpHHzUMXKg6nRdEhxvB6Qw0/yKzHHq2DI58ghp28g6BlJYOhSVlwBEPxpHXdTO\nRbGOmudGvHEyVv/Jil+raiF7+9zFSjk3FEunYIBd2xCg1vwQuoKSRrcF9va8lh0t\nL3WLwfHz7Y+NW+REjKcdTA/jmzB7LXmAVEIwyThoPawfW94kxBZ3N2yiCIWVLNh5\nMgPCfnvug+ug/GxDH2fBn1dQYac5jWT8NmjkU+r7AaTFkWdUu+NZTL47jX60UppN\n0T9j0QYOPFiOoWErEY8/yS/T7TH57MOm3dWtQsGxCspSJgWxv8DASrKQYMD6MHBO\nNrteisAUbXp7BmXC3fhlVgUin534XjOwK2F8mvbHyGoqR3rjK1pi5KUkzmuqLH4F\nsCybWYtpjjpVYBLlM6HyqN4njaDKp9ygVWzp0KRVKIrEJEyVGCVXdo9IyQp+p9M2\nk6yIM3xjQjc5GNxoir7oY8xFnbO91OEyOA+uPWZUeUnOG6jbfN0=\n=7YpG\n-----END PGP SIGNATURE-----", "payload": "tree bdadb7958e88286d3f72542f467073255842fce4\nparent 02f6a0335f99378b2e7d630e00aabdeb57a5bd25\nauthor kennytm <kennytm@gmail.com> 1525548559 +0800\ncommitter kennytm <kennytm@gmail.com> 1525548559 +0800\n\nAdded some simple documentation.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/169f58b712e793ea43b90a6008a21b777bf4102f", "html_url": "https://github.com/rust-lang/rust/commit/169f58b712e793ea43b90a6008a21b777bf4102f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/169f58b712e793ea43b90a6008a21b777bf4102f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02f6a0335f99378b2e7d630e00aabdeb57a5bd25", "url": "https://api.github.com/repos/rust-lang/rust/commits/02f6a0335f99378b2e7d630e00aabdeb57a5bd25", "html_url": "https://github.com/rust-lang/rust/commit/02f6a0335f99378b2e7d630e00aabdeb57a5bd25"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "98c353eb6ec8c3fa967b317693d261948d0ed0b3", "filename": "src/bootstrap/README.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/169f58b712e793ea43b90a6008a21b777bf4102f/src%2Fbootstrap%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/169f58b712e793ea43b90a6008a21b777bf4102f/src%2Fbootstrap%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FREADME.md?ref=169f58b712e793ea43b90a6008a21b777bf4102f", "patch": "@@ -64,6 +64,10 @@ The script accepts commands, flags, and arguments to determine what to do:\n   # execute tests in the standard library in stage0\n   ./x.py test --stage 0 src/libstd\n \n+  # execute tests in the core and standard library in stage0,\n+  # without running doc tests (thus avoid depending on building the compiler)\n+  ./x.py test --stage 0 --no-doc src/libcore src/libstd\n+\n   # execute all doc tests\n   ./x.py test src/doc\n   ```"}, {"sha": "54f35d17974fb2412db5e25bdcb802d350ef96e6", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/169f58b712e793ea43b90a6008a21b777bf4102f/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169f58b712e793ea43b90a6008a21b777bf4102f/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=169f58b712e793ea43b90a6008a21b777bf4102f", "patch": "@@ -50,6 +50,14 @@\n \n // Since libcore defines many fundamental lang items, all tests live in a\n // separate crate, libcoretest, to avoid bizarre issues.\n+//\n+// Here we explicitly #[cfg]-out this whole crate when testing. If we don't do\n+// this, both the generated test artifact and the linked libtest (which\n+// transitively includes libcore) will both define the same set of lang items,\n+// and this will cause the E0152 \"duplicate lang item found\" error. See\n+// discussion in #50466 for details.\n+//\n+// This cfg won't affect doc tests.\n #![cfg(not(test))]\n \n #![stable(feature = \"core\", since = \"1.6.0\")]"}]}