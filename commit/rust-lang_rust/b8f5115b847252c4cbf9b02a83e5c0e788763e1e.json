{"sha": "b8f5115b847252c4cbf9b02a83e5c0e788763e1e", "node_id": "C_kwDOAAsO6NoAKGI4ZjUxMTViODQ3MjUyYzRjYmY5YjAyYTgzZTVjMGU3ODg3NjNlMWU", "commit": {"author": {"name": "Overpeek", "email": "overpeek.fin@gmail.com", "date": "2022-12-25T00:47:16Z"}, "committer": {"name": "Overpeek", "email": "overpeek.fin@gmail.com", "date": "2022-12-25T00:47:16Z"}, "message": "fix: generate delegate async methods", "tree": {"sha": "2f95672ec79c60b464ebaef23ddc27408cdfc594", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f95672ec79c60b464ebaef23ddc27408cdfc594"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8f5115b847252c4cbf9b02a83e5c0e788763e1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8f5115b847252c4cbf9b02a83e5c0e788763e1e", "html_url": "https://github.com/rust-lang/rust/commit/b8f5115b847252c4cbf9b02a83e5c0e788763e1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8f5115b847252c4cbf9b02a83e5c0e788763e1e/comments", "author": {"login": "xor-bits", "id": 42496863, "node_id": "MDQ6VXNlcjQyNDk2ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/42496863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xor-bits", "html_url": "https://github.com/xor-bits", "followers_url": "https://api.github.com/users/xor-bits/followers", "following_url": "https://api.github.com/users/xor-bits/following{/other_user}", "gists_url": "https://api.github.com/users/xor-bits/gists{/gist_id}", "starred_url": "https://api.github.com/users/xor-bits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xor-bits/subscriptions", "organizations_url": "https://api.github.com/users/xor-bits/orgs", "repos_url": "https://api.github.com/users/xor-bits/repos", "events_url": "https://api.github.com/users/xor-bits/events{/privacy}", "received_events_url": "https://api.github.com/users/xor-bits/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xor-bits", "id": 42496863, "node_id": "MDQ6VXNlcjQyNDk2ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/42496863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xor-bits", "html_url": "https://github.com/xor-bits", "followers_url": "https://api.github.com/users/xor-bits/followers", "following_url": "https://api.github.com/users/xor-bits/following{/other_user}", "gists_url": "https://api.github.com/users/xor-bits/gists{/gist_id}", "starred_url": "https://api.github.com/users/xor-bits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xor-bits/subscriptions", "organizations_url": "https://api.github.com/users/xor-bits/orgs", "repos_url": "https://api.github.com/users/xor-bits/repos", "events_url": "https://api.github.com/users/xor-bits/events{/privacy}", "received_events_url": "https://api.github.com/users/xor-bits/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1927c2e1d8d222656cae7051cdd924aa44428622", "url": "https://api.github.com/repos/rust-lang/rust/commits/1927c2e1d8d222656cae7051cdd924aa44428622", "html_url": "https://github.com/rust-lang/rust/commit/1927c2e1d8d222656cae7051cdd924aa44428622"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "cfe0fb3f4fb37de997730091ed5e58803dc216f6", "filename": "crates/ide-assists/src/handlers/generate_delegate_methods.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b8f5115b847252c4cbf9b02a83e5c0e788763e1e/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8f5115b847252c4cbf9b02a83e5c0e788763e1e/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs?ref=b8f5115b847252c4cbf9b02a83e5c0e788763e1e", "patch": "@@ -104,9 +104,11 @@ pub(crate) fn generate_delegate_methods(acc: &mut Assists, ctx: &AssistContext<'\n                     make::name_ref(&method_name.to_string()),\n                     arg_list,\n                 );\n-                let body = make::block_expr([], Some(tail_expr));\n                 let ret_type = method_source.ret_type();\n                 let is_async = method_source.async_token().is_some();\n+                let tail_expr_finished =\n+                    if is_async { make::expr_await(tail_expr) } else { tail_expr };\n+                let body = make::block_expr([], Some(tail_expr_finished));\n                 let f = make::fn_(vis, name, type_params, params, body, ret_type, is_async)\n                     .indent(ast::edit::IndentLevel(1))\n                     .clone_for_update();\n@@ -306,7 +308,7 @@ struct Person<T> {\n \n impl<T> Person<T> {\n     $0pub(crate) async fn age<J, 'a>(&'a mut self, ty: T, arg: J) -> T {\n-        self.age.age(ty, arg)\n+        self.age.age(ty, arg).await\n     }\n }\"#,\n         );"}]}