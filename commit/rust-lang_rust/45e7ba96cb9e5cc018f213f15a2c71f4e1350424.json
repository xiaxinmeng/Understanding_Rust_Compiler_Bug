{"sha": "45e7ba96cb9e5cc018f213f15a2c71f4e1350424", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZTdiYTk2Y2I5ZTVjYzAxOGYyMTNmMTVhMmM3MWY0ZTEzNTA0MjQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-02T10:56:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-02T11:07:51Z"}, "message": "test more possible overaligned requests", "tree": {"sha": "9bd22967d9b7e3ec1ac16e5cbf255162001ab82f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bd22967d9b7e3ec1ac16e5cbf255162001ab82f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45e7ba96cb9e5cc018f213f15a2c71f4e1350424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45e7ba96cb9e5cc018f213f15a2c71f4e1350424", "html_url": "https://github.com/rust-lang/rust/commit/45e7ba96cb9e5cc018f213f15a2c71f4e1350424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45e7ba96cb9e5cc018f213f15a2c71f4e1350424/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "576369bfce92f98f78bdac31067d8cb8fee7b0a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/576369bfce92f98f78bdac31067d8cb8fee7b0a2", "html_url": "https://github.com/rust-lang/rust/commit/576369bfce92f98f78bdac31067d8cb8fee7b0a2"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "904b3e7e1b07cc4f23bd2ddae5e3063d1e335752", "filename": "src/liballoc/tests/heap.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/45e7ba96cb9e5cc018f213f15a2c71f4e1350424/src%2Fliballoc%2Ftests%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45e7ba96cb9e5cc018f213f15a2c71f4e1350424/src%2Fliballoc%2Ftests%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fheap.rs?ref=45e7ba96cb9e5cc018f213f15a2c71f4e1350424", "patch": "@@ -1,6 +1,6 @@\n use std::alloc::{Global, Alloc, Layout, System};\n \n-/// Issue #45955.\n+/// Issue #45955 and #62251.\n #[test]\n fn alloc_system_overaligned_request() {\n     check_overalign_requests(System)\n@@ -12,21 +12,23 @@ fn std_heap_overaligned_request() {\n }\n \n fn check_overalign_requests<T: Alloc>(mut allocator: T) {\n-    let size = 8;\n-    let align = 16; // greater than size\n-    let iterations = 100;\n-    unsafe {\n-        let pointers: Vec<_> = (0..iterations).map(|_| {\n-            allocator.alloc(Layout::from_size_align(size, align).unwrap()).unwrap()\n-        }).collect();\n-        for &ptr in &pointers {\n-            assert_eq!((ptr.as_ptr() as usize) % align, 0,\n-                       \"Got a pointer less aligned than requested\")\n-        }\n+    for &align in &[4, 8, 16, 32] { // less than and bigger than `MIN_ALIGN`\n+        for &size in &[align/2, align-1] { // size less than alignment\n+            let iterations = 128;\n+            unsafe {\n+                let pointers: Vec<_> = (0..iterations).map(|_| {\n+                    allocator.alloc(Layout::from_size_align(size, align).unwrap()).unwrap()\n+                }).collect();\n+                for &ptr in &pointers {\n+                    assert_eq!((ptr.as_ptr() as usize) % align, 0,\n+                               \"Got a pointer less aligned than requested\")\n+                }\n \n-        // Clean up\n-        for &ptr in &pointers {\n-            allocator.dealloc(ptr, Layout::from_size_align(size, align).unwrap())\n+                // Clean up\n+                for &ptr in &pointers {\n+                    allocator.dealloc(ptr, Layout::from_size_align(size, align).unwrap())\n+                }\n+            }\n         }\n     }\n }"}]}