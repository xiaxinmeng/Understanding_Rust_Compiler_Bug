{"sha": "478126c0f3520ccd95a6f16be2812a78e3da711c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ODEyNmMwZjM1MjBjY2Q5NWE2ZjE2YmUyODEyYTc4ZTNkYTcxMWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-25T16:17:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-25T16:17:58Z"}, "message": "Auto merge of #86438 - FabianWolff:issue-83693, r=jackh726\n\nFix the ICE described in #83693\n\nThis pull request fixes #83693 and fixes #84768.", "tree": {"sha": "8024b90d76d3e5d0f3f12ddc7395c49b9f59374e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8024b90d76d3e5d0f3f12ddc7395c49b9f59374e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/478126c0f3520ccd95a6f16be2812a78e3da711c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/478126c0f3520ccd95a6f16be2812a78e3da711c", "html_url": "https://github.com/rust-lang/rust/commit/478126c0f3520ccd95a6f16be2812a78e3da711c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/478126c0f3520ccd95a6f16be2812a78e3da711c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70f74719a92ef52bc28610ba04b7e98ada035ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/70f74719a92ef52bc28610ba04b7e98ada035ec9", "html_url": "https://github.com/rust-lang/rust/commit/70f74719a92ef52bc28610ba04b7e98ada035ec9"}, {"sha": "6f0fe9b91b8f217bc889f25e44843ff939ce4aa9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0fe9b91b8f217bc889f25e44843ff939ce4aa9", "html_url": "https://github.com/rust-lang/rust/commit/6f0fe9b91b8f217bc889f25e44843ff939ce4aa9"}], "stats": {"total": 92, "additions": 89, "deletions": 3}, "files": [{"sha": "4329477404298e01b5a24e9b977c0bb66cad5ac1", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/478126c0f3520ccd95a6f16be2812a78e3da711c/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/478126c0f3520ccd95a6f16be2812a78e3da711c/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=478126c0f3520ccd95a6f16be2812a78e3da711c", "patch": "@@ -2681,15 +2681,14 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                 Scope::Binder { hir_id, .. } => {\n                     break *hir_id;\n                 }\n-                Scope::Body { id, .. } => break id.hir_id,\n                 Scope::ObjectLifetimeDefault { ref s, .. }\n                 | Scope::Elision { ref s, .. }\n                 | Scope::Supertrait { ref s, .. }\n                 | Scope::TraitRefBoundary { ref s, .. } => {\n                     scope = *s;\n                 }\n-                Scope::Root => {\n-                    // See issue #83907. Just bail out from looking inside.\n+                Scope::Root | Scope::Body { .. } => {\n+                    // See issues #83907 and #83693. Just bail out from looking inside.\n                     self.tcx.sess.delay_span_bug(\n                         rustc_span::DUMMY_SP,\n                         \"In fn_like_elision without appropriate scope above\","}, {"sha": "a4255822056d3fbb3ca5074d94d3cede0d9415ff", "filename": "src/test/ui/typeck/issue-83693.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/478126c0f3520ccd95a6f16be2812a78e3da711c/src%2Ftest%2Fui%2Ftypeck%2Fissue-83693.rs", "raw_url": "https://github.com/rust-lang/rust/raw/478126c0f3520ccd95a6f16be2812a78e3da711c/src%2Ftest%2Fui%2Ftypeck%2Fissue-83693.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-83693.rs?ref=478126c0f3520ccd95a6f16be2812a78e3da711c", "patch": "@@ -0,0 +1,19 @@\n+// Regression test for the ICE described in #83693.\n+\n+#![feature(fn_traits)]\n+#![crate_type=\"lib\"]\n+\n+impl F {\n+//~^ ERROR: cannot find type `F` in this scope [E0412]\n+    fn call() {\n+        <Self as Fn(&TestResult)>::call\n+        //~^ ERROR: cannot find type `TestResult` in this scope [E0412]\n+        //~| associated type bindings are not allowed here [E0229]\n+    }\n+}\n+\n+fn call() {\n+    <x as Fn(&usize)>::call\n+    //~^ ERROR: cannot find type `x` in this scope [E0412]\n+    //~| ERROR: associated type bindings are not allowed here [E0229]\n+}"}, {"sha": "e5ef0d0d59f73fd3d4912adc2814bdaaaee3ac08", "filename": "src/test/ui/typeck/issue-83693.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/478126c0f3520ccd95a6f16be2812a78e3da711c/src%2Ftest%2Fui%2Ftypeck%2Fissue-83693.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/478126c0f3520ccd95a6f16be2812a78e3da711c/src%2Ftest%2Fui%2Ftypeck%2Fissue-83693.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-83693.stderr?ref=478126c0f3520ccd95a6f16be2812a78e3da711c", "patch": "@@ -0,0 +1,39 @@\n+error[E0412]: cannot find type `F` in this scope\n+  --> $DIR/issue-83693.rs:6:6\n+   |\n+LL | impl F {\n+   |      ^ help: a trait with a similar name exists: `Fn`\n+   | \n+  ::: $SRC_DIR/core/src/ops/function.rs:LL:COL\n+   |\n+LL | pub trait Fn<Args>: FnMut<Args> {\n+   | ------------------------------- similarly named trait `Fn` defined here\n+\n+error[E0412]: cannot find type `TestResult` in this scope\n+  --> $DIR/issue-83693.rs:9:22\n+   |\n+LL |         <Self as Fn(&TestResult)>::call\n+   |                      ^^^^^^^^^^ not found in this scope\n+\n+error[E0412]: cannot find type `x` in this scope\n+  --> $DIR/issue-83693.rs:16:6\n+   |\n+LL |     <x as Fn(&usize)>::call\n+   |      ^ not found in this scope\n+\n+error[E0229]: associated type bindings are not allowed here\n+  --> $DIR/issue-83693.rs:9:18\n+   |\n+LL |         <Self as Fn(&TestResult)>::call\n+   |                  ^^^^^^^^^^^^^^^ associated type not allowed here\n+\n+error[E0229]: associated type bindings are not allowed here\n+  --> $DIR/issue-83693.rs:16:11\n+   |\n+LL |     <x as Fn(&usize)>::call\n+   |           ^^^^^^^^^^ associated type not allowed here\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors have detailed explanations: E0229, E0412.\n+For more information about an error, try `rustc --explain E0229`."}, {"sha": "ffa92823b42f622393e1efc1ee741ee6621b763e", "filename": "src/test/ui/typeck/issue-84768.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/478126c0f3520ccd95a6f16be2812a78e3da711c/src%2Ftest%2Fui%2Ftypeck%2Fissue-84768.rs", "raw_url": "https://github.com/rust-lang/rust/raw/478126c0f3520ccd95a6f16be2812a78e3da711c/src%2Ftest%2Fui%2Ftypeck%2Fissue-84768.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-84768.rs?ref=478126c0f3520ccd95a6f16be2812a78e3da711c", "patch": "@@ -0,0 +1,10 @@\n+// Regression test for the ICE described in #84768.\n+\n+#![feature(fn_traits)]\n+#![crate_type=\"lib\"]\n+\n+fn transform_mut<F>(f: F) where F: for<'b> FnOnce(&'b mut u8) {\n+    <F as FnOnce(&mut u8)>::call_once(f, 1)\n+    //~^ ERROR: associated type bindings are not allowed here [E0229]\n+    //~| ERROR: mismatched types [E0308]\n+}"}, {"sha": "0a79d539ea96246da68fc42f57b0fb72155e1c41", "filename": "src/test/ui/typeck/issue-84768.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/478126c0f3520ccd95a6f16be2812a78e3da711c/src%2Ftest%2Fui%2Ftypeck%2Fissue-84768.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/478126c0f3520ccd95a6f16be2812a78e3da711c/src%2Ftest%2Fui%2Ftypeck%2Fissue-84768.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-84768.stderr?ref=478126c0f3520ccd95a6f16be2812a78e3da711c", "patch": "@@ -0,0 +1,19 @@\n+error[E0229]: associated type bindings are not allowed here\n+  --> $DIR/issue-84768.rs:7:11\n+   |\n+LL |     <F as FnOnce(&mut u8)>::call_once(f, 1)\n+   |           ^^^^^^^^^^^^^^^ associated type not allowed here\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-84768.rs:7:42\n+   |\n+LL |     <F as FnOnce(&mut u8)>::call_once(f, 1)\n+   |                                          ^ expected tuple, found integer\n+   |\n+   = note: expected tuple `(&mut u8,)`\n+               found type `{integer}`\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0229, E0308.\n+For more information about an error, try `rustc --explain E0229`."}]}