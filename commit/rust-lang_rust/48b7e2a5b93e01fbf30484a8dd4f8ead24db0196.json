{"sha": "48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "node_id": "C_kwDOAAsO6NoAKDQ4YjdlMmE1YjkzZTAxZmJmMzA0ODRhOGRkNGY4ZWFkMjRkYjAxOTY", "commit": {"author": {"name": "Daniel Henry-Mantilla", "email": "daniel.henry.mantilla@gmail.com", "date": "2022-10-31T12:07:40Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-11T22:09:14Z"}, "message": "Stabilize `::{core,std}::pin::pin!`", "tree": {"sha": "c29289088cf58cccb10623e0b4bb9c8c25b77739", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c29289088cf58cccb10623e0b4bb9c8c25b77739"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmO/M4oACgkQ+boUO5X/\nbYLDOxAApqMgrqy63JnowbF9kYya9xXZJUPO0dwTJ1iIfK4ejNafcfmxb7I73x7L\nve6fGeYl3hkjHdBkWiBVhfBwGKwbExnQyhDAXOeMk4ORWCoyAWSdDfaZ65+QrGBp\nQDfYSsRmOt3qGKi1oHOzlx1UX8VUys4Mn5dUFyU3pawFggf51zJGoD/xjwQoiqBW\n0v5YGr090c8moc4sQODN/yXKdEG2K9mKntb2faPYE59KQZ85ggTAPLI1b8LqgXEt\nQQUjsblhcw/mhhHoKiJHABnyQiedYhy4X1m+L/PHuzKzIjvVT3WhTORbRVYCCG1M\npkMxK5FEeTRqBO0643Ypxzn9kI8AMZGhx6seddKAfwM4R/T8S1knSMUkd8oJrFeC\nPI7u9zjOFup8y6wODPQXLEHYOHOvn8QgBFxlkJJC5EOWZ7p56ZJigJjA9RurWLdi\n344oEBcMr/Lc6mtK2XdBr3iF5nwLF5u3GJ7M2QPC3CVTDJVC9XwtIs488UIoMkBI\n7+wspHnQQlkL0EZureNZy3uHk620S4cLaX1IBvWKNZMWwvw92f0XBsmVjdpfRVJP\n1JU1Y1kw1AFsk/cwhv+X5NNRMOGpZjj5FwGU+TMWobbQBR/5srMhv8PyOdUvupBb\nLrAz9m/tsjMzMOz9l5iQK1umwdikZThG+RmhlMrlGC49Tyudnpc=\n=JQf2\n-----END PGP SIGNATURE-----", "payload": "tree c29289088cf58cccb10623e0b4bb9c8c25b77739\nparent ef4046e4f3932991971cdb64915172899532aece\nauthor Daniel Henry-Mantilla <daniel.henry.mantilla@gmail.com> 1667218060 +0100\ncommitter David Tolnay <dtolnay@gmail.com> 1673474954 -0800\n\nStabilize `::{core,std}::pin::pin!`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "html_url": "https://github.com/rust-lang/rust/commit/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/comments", "author": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef4046e4f3932991971cdb64915172899532aece", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4046e4f3932991971cdb64915172899532aece", "html_url": "https://github.com/rust-lang/rust/commit/ef4046e4f3932991971cdb64915172899532aece"}], "stats": {"total": 23, "additions": 6, "deletions": 17}, "files": [{"sha": "2eb29d4f9c57410081309ed539b6c6f2fb34d1ac", "filename": "library/core/src/pin.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/library%2Fcore%2Fsrc%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/library%2Fcore%2Fsrc%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpin.rs?ref=48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "patch": "@@ -622,9 +622,8 @@ impl<P: Deref> Pin<P> {\n     /// that the closure is pinned.\n     ///\n     /// The better alternative is to avoid all that trouble and do the pinning in the outer function\n-    /// instead (here using the unstable `pin` macro):\n+    /// instead (here using the [`pin!`][crate::pin::pin] macro):\n     /// ```\n-    /// #![feature(pin_macro)]\n     /// use std::pin::pin;\n     /// use std::task::Context;\n     /// use std::future::Future;\n@@ -1026,7 +1025,6 @@ impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P> where P: DispatchFromDyn<U> {}\n /// ### Basic usage\n ///\n /// ```rust\n-/// #![feature(pin_macro)]\n /// # use core::marker::PhantomPinned as Foo;\n /// use core::pin::{pin, Pin};\n ///\n@@ -1044,7 +1042,6 @@ impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P> where P: DispatchFromDyn<U> {}\n /// ### Manually polling a `Future` (without `Unpin` bounds)\n ///\n /// ```rust\n-/// #![feature(pin_macro)]\n /// use std::{\n ///     future::Future,\n ///     pin::pin,\n@@ -1083,7 +1080,7 @@ impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P> where P: DispatchFromDyn<U> {}\n /// ### With `Generator`s\n ///\n /// ```rust\n-/// #![feature(generators, generator_trait, pin_macro)]\n+/// #![feature(generators, generator_trait)]\n /// use core::{\n ///     ops::{Generator, GeneratorState},\n ///     pin::pin,\n@@ -1126,7 +1123,6 @@ impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P> where P: DispatchFromDyn<U> {}\n /// The following, for instance, fails to compile:\n ///\n /// ```rust,compile_fail\n-/// #![feature(pin_macro)]\n /// use core::pin::{pin, Pin};\n /// # use core::{marker::PhantomPinned as Foo, mem::drop as stuff};\n ///\n@@ -1168,7 +1164,7 @@ impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P> where P: DispatchFromDyn<U> {}\n /// constructor.\n ///\n /// [`Box::pin`]: ../../std/boxed/struct.Box.html#method.pin\n-#[unstable(feature = \"pin_macro\", issue = \"93178\")]\n+#[stable(feature = \"pin_macro\", since = \"CURRENT_RUSTC_VERSION\")]\n #[rustc_macro_transparency = \"semitransparent\"]\n #[allow_internal_unstable(unsafe_pin_internals)]\n pub macro pin($value:expr $(,)?) {"}, {"sha": "42a26ae1675c182fb7e7c300e220d96aec2bc115", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "patch": "@@ -48,7 +48,6 @@\n #![feature(is_sorted)]\n #![feature(layout_for_ptr)]\n #![feature(pattern)]\n-#![feature(pin_macro)]\n #![feature(sort_internals)]\n #![feature(slice_take)]\n #![feature(slice_from_ptr_range)]"}, {"sha": "fe4078f77107b244d564595b8bf06fa98add2582", "filename": "src/tools/miri/tests/pass/issues/issue-miri-2068.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fissues%2Fissue-miri-2068.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fissues%2Fissue-miri-2068.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fissues%2Fissue-miri-2068.rs?ref=48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "patch": "@@ -1,5 +1,3 @@\n-#![feature(pin_macro)]\n-\n use core::future::Future;\n use core::pin::Pin;\n use core::task::{Context, Poll};"}, {"sha": "96fc0be344dbfea2f8065c503b4df6b3057d0a7c", "filename": "src/tools/miri/tests/pass/stacked-borrows/future-self-referential.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Ffuture-self-referential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Ffuture-self-referential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Ffuture-self-referential.rs?ref=48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "patch": "@@ -1,5 +1,3 @@\n-#![feature(pin_macro)]\n-\n use std::future::*;\n use std::marker::PhantomPinned;\n use std::pin::*;"}, {"sha": "5826a18b5718b781c7bc364676aa96f9de4a7515", "filename": "tests/ui/pin-macro/cant_access_internals.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/tests%2Fui%2Fpin-macro%2Fcant_access_internals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/tests%2Fui%2Fpin-macro%2Fcant_access_internals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpin-macro%2Fcant_access_internals.rs?ref=48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "patch": "@@ -1,5 +1,4 @@\n // edition:2018\n-#![feature(pin_macro)]\n \n use core::{\n     marker::PhantomPinned,"}, {"sha": "d43027657f0462031f43fad7c652113179787f10", "filename": "tests/ui/pin-macro/cant_access_internals.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/tests%2Fui%2Fpin-macro%2Fcant_access_internals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/tests%2Fui%2Fpin-macro%2Fcant_access_internals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpin-macro%2Fcant_access_internals.stderr?ref=48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: use of unstable library feature 'unsafe_pin_internals'\n-  --> $DIR/cant_access_internals.rs:12:15\n+  --> $DIR/cant_access_internals.rs:11:15\n    |\n LL |     mem::take(phantom_pinned.pointer);\n    |               ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "59774bc753dc9e6e8e8b9da13168d3aba728b91c", "filename": "tests/ui/pin-macro/lifetime_errors_on_promotion_misusage.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/tests%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/tests%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.rs?ref=48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "patch": "@@ -1,5 +1,4 @@\n // edition:2018\n-#![feature(pin_macro)]\n \n use core::{\n     convert::identity,"}, {"sha": "4ecc6370d3caad2a64cca22f979853187c39c7e1", "filename": "tests/ui/pin-macro/lifetime_errors_on_promotion_misusage.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/tests%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48b7e2a5b93e01fbf30484a8dd4f8ead24db0196/tests%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.stderr?ref=48b7e2a5b93e01fbf30484a8dd4f8ead24db0196", "patch": "@@ -1,5 +1,5 @@\n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/lifetime_errors_on_promotion_misusage.rs:12:35\n+  --> $DIR/lifetime_errors_on_promotion_misusage.rs:11:35\n    |\n LL |     let phantom_pinned = identity(pin!(PhantomPinned));\n    |                                   ^^^^^^^^^^^^^^^^^^^ - temporary value is freed at the end of this statement\n@@ -13,7 +13,7 @@ LL |     stuff(phantom_pinned)\n    = note: this error originates in the macro `pin` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/lifetime_errors_on_promotion_misusage.rs:19:30\n+  --> $DIR/lifetime_errors_on_promotion_misusage.rs:18:30\n    |\n LL |     let phantom_pinned = {\n    |         -------------- borrow later stored here"}]}