{"sha": "49aa5baf36feb22818d8614b43f24f73e530d884", "node_id": "C_kwDOAAsO6NoAKDQ5YWE1YmFmMzZmZWIyMjgxOGQ4NjE0YjQzZjI0ZjczZTUzMGQ4ODQ", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-12-02T20:27:35Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-12-02T21:02:56Z"}, "message": "Emphasise that an OsStr[ing] is not necessarily a platform string", "tree": {"sha": "f9a5a8304c1dd7f29d2e9b8c6d939126b674e2c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9a5a8304c1dd7f29d2e9b8c6d939126b674e2c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49aa5baf36feb22818d8614b43f24f73e530d884", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmGpNIAACgkQcTRy8vRW\nJ9724Q/+PHbj/RPXFR2PcyDDoFCzzTVixl6WYdRRP/UUnEEO3NHf5c+R1ktuNFB1\nMTNBRs3J7W4gJT2LFqk5WJxCtpDrvBZB0RO5uvnFE3yolr20PwdFPzMNTbwX6wj8\n/dM2jVT2KKam2wBFjkOeppV/O4A0Mt1qkcGHGiW4o/7bcYkDk08Tb8DeQ3t5oQ3F\nXlYmWxTjW1axtqDC0i+R01NCWLxNZ5MyNowh7tsb8vOanHCXvZy3ULwTPYFCrOCj\ndap05j91Jf1j+NxtzEJmX7+2crR7TosodqNOEFzDhlhfH1zyt7EL8u1sOTViGP1N\nioeIGKnaU1WsievM+hTE/bkJbWYUxvWbm4Xolfbb+RqaUYvrr5f3Y+66T1tE4N0/\nYc3JSenC2JYydwYJs75YKDMaRyHUm8PwmK8Z5oDIEb8zux+okuw9aZC6XNUPmOwZ\nQ+ijqUUKldoqsI7Cg6vfQeyme9kGBgUuwm4dffsVSj/uop2nb4Q/rBkLiU8fXumO\nsiK1iP5hpIoMdnju3jAEAt5U+CGjUz3Hm8Io1IAoILDt4prTFAtoe9XFnIqFAAUS\nNovFDfCE2xPk/Yl5EwC4Qu7lzZuZJooGmZNnShM4/gBh/qmn0R1laivFiIQjK64A\n+90GIrgehe6FTFLNBIqaxaqmmePo9qXcmW4E9Y0tqYUOMs/fJ8Q=\n=E69B\n-----END PGP SIGNATURE-----", "payload": "tree f9a5a8304c1dd7f29d2e9b8c6d939126b674e2c8\nparent e5038e20999eef35260b070189883edc2a8a34b2\nauthor Chris Denton <christophersdenton@gmail.com> 1638476855 +0000\ncommitter Chris Denton <christophersdenton@gmail.com> 1638478976 +0000\n\nEmphasise that an OsStr[ing] is not necessarily a platform string\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49aa5baf36feb22818d8614b43f24f73e530d884", "html_url": "https://github.com/rust-lang/rust/commit/49aa5baf36feb22818d8614b43f24f73e530d884", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49aa5baf36feb22818d8614b43f24f73e530d884/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5038e20999eef35260b070189883edc2a8a34b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5038e20999eef35260b070189883edc2a8a34b2", "html_url": "https://github.com/rust-lang/rust/commit/e5038e20999eef35260b070189883edc2a8a34b2"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "019b64c395eda5dbe38288ed8782b025125208f5", "filename": "library/std/src/ffi/mod.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/49aa5baf36feb22818d8614b43f24f73e530d884/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49aa5baf36feb22818d8614b43f24f73e530d884/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs?ref=49aa5baf36feb22818d8614b43f24f73e530d884", "patch": "@@ -81,9 +81,9 @@\n //! [`OsStr`] and Rust strings work similarly to those for [`CString`]\n //! and [`CStr`].\n //!\n-//! * [`OsString`] represents an owned string in whatever\n-//! representation the operating system prefers. In the Rust standard\n-//! library, various APIs that transfer strings to/from the operating\n+//! * [`OsString`] losslessly represents an owned platform string. However, this\n+//! representation is not necessarily in a form native to the platform.\n+//! In the Rust standard library, various APIs that transfer strings to/from the operating\n //! system use [`OsString`] instead of plain strings. For example,\n //! [`env::var_os()`] is used to query environment variables; it\n //! returns an <code>[Option]<[OsString]></code>. If the environment variable\n@@ -92,9 +92,9 @@\n //! your code can detect errors in case the environment variable did\n //! not in fact contain valid Unicode data.\n //!\n-//! * [`OsStr`] represents a borrowed reference to a string in a\n-//! format that can be passed to the operating system. It can be\n-//! converted into a UTF-8 Rust string slice in a similar way to\n+//! * [`OsStr`] losslessly represents a borrowed reference to a platform string.\n+//! However, this representation is not necessarily in a form native to the platform.\n+//! It can be converted into a UTF-8 Rust string slice in a similar way to\n //! [`OsString`].\n //!\n //! # Conversions\n@@ -113,16 +113,19 @@\n //!\n //! ## On Windows\n //!\n+//! An [`OsStr`] can be losslessly converted to a native Windows string. And\n+//! a native Windows string can be losslessly converted to an [`OsString`].\n+//!\n //! On Windows, [`OsStr`] implements the\n //! <code>std::os::windows::ffi::[OsStrExt][windows.OsStrExt]</code> trait,\n //! which provides an [`encode_wide`] method. This provides an\n-//! iterator that can be [`collect`]ed into a vector of [`u16`].\n+//! iterator that can be [`collect`]ed into a vector of [`u16`]. After a nul\n+//! characters is appended, this is the same as a native Windows string.\n //!\n //! Additionally, on Windows [`OsString`] implements the\n //! <code>std::os::windows:ffi::[OsStringExt][windows.OsStringExt]</code>\n-//! trait, which provides a [`from_wide`] method. The result of this\n-//! method is an [`OsString`] which can be round-tripped to a Windows\n-//! string losslessly.\n+//! trait, which provides a [`from_wide`] method to convert a native Windows\n+//! string (without the terminating nul character) to an [`OsString`].\n //!\n //! [Unicode scalar value]: https://www.unicode.org/glossary/#unicode_scalar_value\n //! [Unicode code point]: https://www.unicode.org/glossary/#code_point"}]}