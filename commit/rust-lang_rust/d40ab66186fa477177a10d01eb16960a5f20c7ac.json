{"sha": "d40ab66186fa477177a10d01eb16960a5f20c7ac", "node_id": "C_kwDOAAsO6NoAKGQ0MGFiNjYxODZmYTQ3NzE3N2ExMGQwMWViMTY5NjBhNWYyMGM3YWM", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-08-01T07:48:33Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-08-01T08:57:47Z"}, "message": "fix: remove whitespaces from doctest names", "tree": {"sha": "7f3791792d821678780cd0bfa3c6a8abd1bb64ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f3791792d821678780cd0bfa3c6a8abd1bb64ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d40ab66186fa477177a10d01eb16960a5f20c7ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmLnlYsACgkQ4laYqTBY\nYXGdiBAAnEDmRZJjE28knCMeEfeWvqRDuwnT2YL7N342dPYcUHJkgjtWP35E8XbA\npTNWYe/I5oL6xWhOIBMViFnmJh9OJw7nRkuJFRBiDm6lCdwEypngjs1g2GaNmHMl\nh4vU40cGGDNERYfvABlrWsXoNTppXpe0OPV8LMC/elno+14Or2RDdLnwFSIfhlS7\nZfN6Tb57rTg/ju9OnYriu/Q9Ih/doLYB+EQMzZLUq0SWhLguc971hCYqa+7R1nPm\n5lvTtwifr1cdOJ6o+RiVtp9hT+REOW8OlROHvdc72nMMFcf19GirrSXatX/CotUz\na18UhA1j6+YAI6W3MB3IYPUmjHoDjb03xgAXl3pbtzQRIZLlAYulAPXgU6sbGjDf\nzUjhoeHEvQpjPomVN1OfCYgeDXze3j25QrnB7KFRPJA5G7pQk8RSVw1WN/dLVarr\nFDpoAsAerlMhZM7BYn3V2y+uFuxElt69mbZnA5An38LJYzeYcDcvcL3dNThaK4Xj\nRAHrFBgrNkkl0cUhX5wvQXiM7Aso7Tfkqnp0Lle2FKAQZmKWbiDIsucrzI29sz64\np971u4LJGAVXHX8LLB+iNSAsc2rjD8rYVvxItShW629sK0mWkXP9A4cxJgWRgaN7\nVro9yHYWUlXPrItLj5F5d72dR/sevpsrgQK1rnIQlv9uGfFNkjo=\n=QBpA\n-----END PGP SIGNATURE-----", "payload": "tree 7f3791792d821678780cd0bfa3c6a8abd1bb64ed\nparent 2b472f6684bb1958274995d12b2c50310d88cc52\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1659340113 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1659344267 +0900\n\nfix: remove whitespaces from doctest names\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d40ab66186fa477177a10d01eb16960a5f20c7ac", "html_url": "https://github.com/rust-lang/rust/commit/d40ab66186fa477177a10d01eb16960a5f20c7ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d40ab66186fa477177a10d01eb16960a5f20c7ac/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b472f6684bb1958274995d12b2c50310d88cc52", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b472f6684bb1958274995d12b2c50310d88cc52", "html_url": "https://github.com/rust-lang/rust/commit/2b472f6684bb1958274995d12b2c50310d88cc52"}], "stats": {"total": 77, "additions": 71, "deletions": 6}, "files": [{"sha": "3155f97f258dcfa82a22b95fa8dd85c87287ac06", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 71, "deletions": 6, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/d40ab66186fa477177a10d01eb16960a5f20c7ac/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d40ab66186fa477177a10d01eb16960a5f20c7ac/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=d40ab66186fa477177a10d01eb16960a5f20c7ac", "patch": "@@ -373,11 +373,13 @@ pub(crate) fn runnable_impl(\n     let adt_name = ty.as_adt()?.name(sema.db);\n     let mut ty_args = ty.type_arguments().peekable();\n     let params = if ty_args.peek().is_some() {\n-        format!(\"<{}>\", ty_args.format_with(\", \", |ty, cb| cb(&ty.display(sema.db))))\n+        format!(\"<{}>\", ty_args.format_with(\",\", |ty, cb| cb(&ty.display(sema.db))))\n     } else {\n         String::new()\n     };\n-    let test_id = TestId::Path(format!(\"{}{}\", adt_name, params));\n+    let mut test_id = format!(\"{}{}\", adt_name, params);\n+    test_id.retain(|c| c != ' ');\n+    let test_id = TestId::Path(test_id);\n \n     Some(Runnable { use_name_in_title: false, nav, kind: RunnableKind::DocTest { test_id }, cfg })\n }\n@@ -441,10 +443,11 @@ fn module_def_doctest(db: &RootDatabase, def: Definition) -> Option<Runnable> {\n                         format_to!(\n                             path,\n                             \"<{}>\",\n-                            ty_args.format_with(\", \", |ty, cb| cb(&ty.display(db)))\n+                            ty_args.format_with(\",\", |ty, cb| cb(&ty.display(db)))\n                         );\n                     }\n                     format_to!(path, \"::{}\", def_name);\n+                    path.retain(|c| c != ' ');\n                     return Some(path);\n                 }\n             }\n@@ -2067,13 +2070,23 @@ mod tests {\n $0\n struct Foo<T, U>;\n \n+/// ```\n+/// ```\n impl<T, U> Foo<T, U> {\n     /// ```rust\n     /// ````\n     fn t() {}\n }\n+\n+/// ```\n+/// ```\n+impl Foo<Foo<(), ()>, ()> {\n+    /// ```\n+    /// ```\n+    fn t() {}\n+}\n \"#,\n-            &[DocTest],\n+            &[DocTest, DocTest, DocTest, DocTest],\n             expect![[r#\"\n                 [\n                     Runnable {\n@@ -2082,12 +2095,64 @@ impl<T, U> Foo<T, U> {\n                             file_id: FileId(\n                                 0,\n                             ),\n-                            full_range: 47..85,\n+                            full_range: 20..103,\n+                            focus_range: 47..56,\n+                            name: \"impl\",\n+                            kind: Impl,\n+                        },\n+                        kind: DocTest {\n+                            test_id: Path(\n+                                \"Foo<T,U>\",\n+                            ),\n+                        },\n+                        cfg: None,\n+                    },\n+                    Runnable {\n+                        use_name_in_title: false,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 63..101,\n+                            name: \"t\",\n+                        },\n+                        kind: DocTest {\n+                            test_id: Path(\n+                                \"Foo<T,U>::t\",\n+                            ),\n+                        },\n+                        cfg: None,\n+                    },\n+                    Runnable {\n+                        use_name_in_title: false,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 105..188,\n+                            focus_range: 126..146,\n+                            name: \"impl\",\n+                            kind: Impl,\n+                        },\n+                        kind: DocTest {\n+                            test_id: Path(\n+                                \"Foo<Foo<(),()>,()>\",\n+                            ),\n+                        },\n+                        cfg: None,\n+                    },\n+                    Runnable {\n+                        use_name_in_title: false,\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 153..186,\n                             name: \"t\",\n                         },\n                         kind: DocTest {\n                             test_id: Path(\n-                                \"Foo<T, U>::t\",\n+                                \"Foo<Foo<(),()>,()>::t\",\n                             ),\n                         },\n                         cfg: None,"}]}