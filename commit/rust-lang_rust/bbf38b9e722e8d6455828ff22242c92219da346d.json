{"sha": "bbf38b9e722e8d6455828ff22242c92219da346d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZjM4YjllNzIyZThkNjQ1NTgyOGZmMjIyNDJjOTIyMTlkYTM0NmQ=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2018-10-08T18:55:22Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2018-10-08T18:55:22Z"}, "message": "Add some comments", "tree": {"sha": "1b47f5e93e45a22cc20abd1c965dc496ef20bda9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b47f5e93e45a22cc20abd1c965dc496ef20bda9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbf38b9e722e8d6455828ff22242c92219da346d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf38b9e722e8d6455828ff22242c92219da346d", "html_url": "https://github.com/rust-lang/rust/commit/bbf38b9e722e8d6455828ff22242c92219da346d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbf38b9e722e8d6455828ff22242c92219da346d/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "url": "https://api.github.com/repos/rust-lang/rust/commits/62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "html_url": "https://github.com/rust-lang/rust/commit/62b1b05a0d9dd021f98352b6229e48e0d8b94f78"}], "stats": {"total": 69, "additions": 44, "deletions": 25}, "files": [{"sha": "44e74f4cc9d1e5713acec526c453f533408a3a57", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bbf38b9e722e8d6455828ff22242c92219da346d/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/bbf38b9e722e8d6455828ff22242c92219da346d/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=bbf38b9e722e8d6455828ff22242c92219da346d", "patch": "@@ -1,8 +1,10 @@\n import * as vscode from 'vscode';\n+import * as lc from 'vscode-languageclient';\n \n import * as commands from './commands';\n import { TextDocumentContentProvider } from './commands/syntaxTree';\n import * as events from './events';\n+import * as notifications from './notifications';\n import { Server } from './server';\n \n export function activate(context: vscode.ExtensionContext) {\n@@ -14,6 +16,7 @@ export function activate(context: vscode.ExtensionContext) {\n         disposeOnDeactivation(vscode.commands.registerCommand(name, f));\n     }\n \n+    // Commands are requests from vscode to the language server\n     registerCommand('ra-lsp.syntaxTree', commands.syntaxTree.handle);\n     registerCommand('ra-lsp.extendSelection', commands.extendSelection.handle);\n     registerCommand('ra-lsp.matchingBrace', commands.matchingBrace.handle);\n@@ -22,19 +25,27 @@ export function activate(context: vscode.ExtensionContext) {\n     registerCommand('ra-lsp.run', commands.runnables.handle);\n     registerCommand('ra-lsp.applySourceChange', commands.applySourceChange.handle);\n \n+    // Notifications are events triggered by the language server\n+    const allNotifications: Iterable<[string, lc.GenericNotificationHandler]> = [\n+        ['m/publishDecorations', notifications.publishDecorations.handle],\n+    ];\n+\n+    // The events below are plain old javascript events, triggered and handled by vscode\n+    vscode.window.onDidChangeActiveTextEditor(events.changeActiveTextEditor.handle);\n+\n     const textDocumentContentProvider = new TextDocumentContentProvider();\n     disposeOnDeactivation(vscode.workspace.registerTextDocumentContentProvider(\n         'ra-lsp',\n         textDocumentContentProvider,\n     ));\n \n-    Server.start();\n-\n     vscode.workspace.onDidChangeTextDocument(\n         events.changeTextDocument.createHandler(textDocumentContentProvider),\n         null,\n         context.subscriptions);\n-    vscode.window.onDidChangeActiveTextEditor(events.changeActiveTextEditor.handle);\n+\n+    // Start the language server, finally!\n+    Server.start(allNotifications);\n }\n \n export function deactivate(): Thenable<void> {"}, {"sha": "c565768658867ab602feb6d300dd968dbe3f36ff", "filename": "editors/code/src/notifications/index.ts", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bbf38b9e722e8d6455828ff22242c92219da346d/editors%2Fcode%2Fsrc%2Fnotifications%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/bbf38b9e722e8d6455828ff22242c92219da346d/editors%2Fcode%2Fsrc%2Fnotifications%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnotifications%2Findex.ts?ref=bbf38b9e722e8d6455828ff22242c92219da346d", "patch": "@@ -0,0 +1,5 @@\n+import * as publishDecorations from './publish_decorations';\n+\n+export {\n+    publishDecorations,\n+};"}, {"sha": "d8790386b1a1179bf3e40d57763f648dc2314e1d", "filename": "editors/code/src/notifications/publish_decorations.ts", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bbf38b9e722e8d6455828ff22242c92219da346d/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts", "raw_url": "https://github.com/rust-lang/rust/raw/bbf38b9e722e8d6455828ff22242c92219da346d/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts?ref=bbf38b9e722e8d6455828ff22242c92219da346d", "patch": "@@ -0,0 +1,20 @@\n+import * as vscode from 'vscode';\n+\n+import { Decoration } from '../highlighting';\n+import { Server } from '../server';\n+\n+export interface PublishDecorationsParams {\n+    uri: string;\n+    decorations: Decoration[];\n+}\n+\n+export function handle(params: PublishDecorationsParams) {\n+    const targetEditor = vscode.window.visibleTextEditors.find(\n+        (editor) => editor.document.uri.toString() === params.uri,\n+    );\n+    if (!Server.config.highlightingOn || !targetEditor) { return; }\n+    Server.highlighter.setHighlights(\n+        targetEditor,\n+        params.decorations,\n+    );\n+}"}, {"sha": "01fd80756fd394da9a3bf5715c2256bd8abcd6a8", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bbf38b9e722e8d6455828ff22242c92219da346d/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/bbf38b9e722e8d6455828ff22242c92219da346d/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=bbf38b9e722e8d6455828ff22242c92219da346d", "patch": "@@ -1,15 +1,14 @@\n-import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n \n import { Config } from './config';\n-import { Decoration, Highlighter } from './highlighting';\n+import { Highlighter } from './highlighting';\n \n export class Server {\n     public static highlighter = new Highlighter();\n     public static config = new Config();\n     public static client: lc.LanguageClient;\n \n-    public static start() {\n+    public static start(notificationHandlers: Iterable<[string, lc.GenericNotificationHandler]>) {\n         const run: lc.Executable = {\n             command: 'ra_lsp_server',\n             options: { cwd: '.' },\n@@ -18,7 +17,6 @@ export class Server {\n             run,\n             debug: run,\n         };\n-\n         const clientOptions: lc.LanguageClientOptions = {\n             documentSelector: [{ scheme: 'file', language: 'rust' }],\n         };\n@@ -30,25 +28,10 @@ export class Server {\n             clientOptions,\n         );\n         Server.client.onReady().then(() => {\n-            Server.client.onNotification(\n-                'm/publishDecorations',\n-                (params: PublishDecorationsParams) => {\n-                    const targetEditor = vscode.window.visibleTextEditors.find(\n-                        (editor) => editor.document.uri.toString() === params.uri,\n-                    );\n-                    if (!Server.config.highlightingOn || !targetEditor) { return; }\n-                    Server.highlighter.setHighlights(\n-                        targetEditor,\n-                        params.decorations,\n-                    );\n-                },\n-            );\n+            for (const [type, handler] of notificationHandlers) {\n+                Server.client.onNotification(type, handler);\n+            }\n         });\n         Server.client.start();\n     }\n }\n-\n-interface PublishDecorationsParams {\n-    uri: string;\n-    decorations: Decoration[];\n-}"}]}