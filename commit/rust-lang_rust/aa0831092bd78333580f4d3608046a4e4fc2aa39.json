{"sha": "aa0831092bd78333580f4d3608046a4e4fc2aa39", "node_id": "C_kwDOAAsO6NoAKGFhMDgzMTA5MmJkNzgzMzM1ODBmNGQzNjA4MDQ2YTRlNGZjMmFhMzk", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-12-06T03:48:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-06T03:48:50Z"}, "message": "Rollup merge of #105207 - RalfJung:interpret-clobber-return, r=oli-obk\n\ninterpret: clobber return place when calling function\n\nMakes sure the callee cannot observe the previous contents of the return place, and the caller cannot read any of the old return place contents even if the function unwinds.\n\nI don't think we can test for this though, that would require some strange hand-written MIR.\n\nr? `````@oli-obk`````", "tree": {"sha": "26163e5985f507121469028a3c784cc925e49248", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26163e5985f507121469028a3c784cc925e49248"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa0831092bd78333580f4d3608046a4e4fc2aa39", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjjruiCRBK7hj4Ov3rIwAA1d4IAEaxEe9/S0yfXNAa9iC5q9SX\nIX+ilU8A0DQWIwAR1AA5MirheXg1032sfNrNYwCx7XHHRt5EOhBGoLnrhtqhBPy5\nsDMSt00yxCek4BFaPIokCncGWTqtoI3WdrXACFhiGmYk91RIVQTbQLMGQmAL0Ou0\nnkXtpGQa9bYNd8Vz3Hukr6+vOVbZi5g7eCQ/+ajp6cCN85k/2+lSZny96LlgVrVW\nq20avNkNFs3hWCM82/IunH1iGLXbGXSNDQ0Jlk9rZXLWi2Q96AYOAnw5650vQu+c\n6PecDh77axk8JhsoeiiPqeoyq6A1lIkbdGzq7fm1hRPLraE/1KjgheRjSe9if2c=\n=QlcA\n-----END PGP SIGNATURE-----\n", "payload": "tree 26163e5985f507121469028a3c784cc925e49248\nparent 532fe7b8e043115477e33ad0d97dfe9469a2c236\nparent 51ac2af99ffd46cf83760ceef2404dad0ce238a9\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1670298530 +0900\ncommitter GitHub <noreply@github.com> 1670298530 +0900\n\nRollup merge of #105207 - RalfJung:interpret-clobber-return, r=oli-obk\n\ninterpret: clobber return place when calling function\n\nMakes sure the callee cannot observe the previous contents of the return place, and the caller cannot read any of the old return place contents even if the function unwinds.\n\nI don't think we can test for this though, that would require some strange hand-written MIR.\n\nr? `````@oli-obk`````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0831092bd78333580f4d3608046a4e4fc2aa39", "html_url": "https://github.com/rust-lang/rust/commit/aa0831092bd78333580f4d3608046a4e4fc2aa39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa0831092bd78333580f4d3608046a4e4fc2aa39/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "532fe7b8e043115477e33ad0d97dfe9469a2c236", "url": "https://api.github.com/repos/rust-lang/rust/commits/532fe7b8e043115477e33ad0d97dfe9469a2c236", "html_url": "https://github.com/rust-lang/rust/commit/532fe7b8e043115477e33ad0d97dfe9469a2c236"}, {"sha": "51ac2af99ffd46cf83760ceef2404dad0ce238a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/51ac2af99ffd46cf83760ceef2404dad0ce238a9", "html_url": "https://github.com/rust-lang/rust/commit/51ac2af99ffd46cf83760ceef2404dad0ce238a9"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "e17d3e516a64fb72ae438726e275956340bb2e24", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa0831092bd78333580f4d3608046a4e4fc2aa39/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa0831092bd78333580f4d3608046a4e4fc2aa39/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=aa0831092bd78333580f4d3608046a4e4fc2aa39", "patch": "@@ -676,6 +676,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         return_to_block: StackPopCleanup,\n     ) -> InterpResult<'tcx> {\n         trace!(\"body: {:#?}\", body);\n+        // Clobber previous return place contents, nobody is supposed to be able to see them any more\n+        // This also checks dereferenceable, but not align. We rely on all constructed places being\n+        // sufficiently aligned (in particular we rely on `deref_operand` checking alignment).\n+        self.write_uninit(return_place)?;\n         // first push a stack frame so we have access to the local substs\n         let pre_frame = Frame {\n             body,"}]}