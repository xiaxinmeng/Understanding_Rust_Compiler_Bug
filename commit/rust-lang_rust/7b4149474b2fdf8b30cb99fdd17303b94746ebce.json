{"sha": "7b4149474b2fdf8b30cb99fdd17303b94746ebce", "node_id": "C_kwDOAAsO6NoAKDdiNDE0OTQ3NGIyZmRmOGIzMGNiOTlmZGQxNzMwM2I5NDc0NmViY2U", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-12T15:56:35Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-12T15:56:35Z"}, "message": "mention mitigation in the docs", "tree": {"sha": "d8e195ba1d34ce69b077984d49274a89d277e160", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8e195ba1d34ce69b077984d49274a89d277e160"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b4149474b2fdf8b30cb99fdd17303b94746ebce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b4149474b2fdf8b30cb99fdd17303b94746ebce", "html_url": "https://github.com/rust-lang/rust/commit/7b4149474b2fdf8b30cb99fdd17303b94746ebce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b4149474b2fdf8b30cb99fdd17303b94746ebce/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84ff4da7267bc9fdb3a423a25cb7947333388ead", "url": "https://api.github.com/repos/rust-lang/rust/commits/84ff4da7267bc9fdb3a423a25cb7947333388ead", "html_url": "https://github.com/rust-lang/rust/commit/84ff4da7267bc9fdb3a423a25cb7947333388ead"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "31f44e371180bdc858865d7f7cdac8b28204cc64", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b4149474b2fdf8b30cb99fdd17303b94746ebce/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b4149474b2fdf8b30cb99fdd17303b94746ebce/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=7b4149474b2fdf8b30cb99fdd17303b94746ebce", "patch": "@@ -654,6 +654,8 @@ pub unsafe fn zeroed<T>() -> T {\n /// produce a value of type `T`, while doing nothing at all.\n ///\n /// **This function is deprecated.** Use [`MaybeUninit<T>`] instead.\n+/// It also might be slower than using `MaybeUninit<T>` due to mitigations that were put in place to\n+/// limit the potential harm caused by incorrect use of this function in legacy code.\n ///\n /// The reason for deprecation is that the function basically cannot be used\n /// correctly: it has the same effect as [`MaybeUninit::uninit().assume_init()`][uninit]."}]}