{"sha": "ef0da3bbeccdaab3813a1f6a17c566ca9087615f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMGRhM2JiZWNjZGFhYjM4MTNhMWY2YTE3YzU2NmNhOTA4NzYxNWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-21T14:11:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-21T14:11:37Z"}, "message": "Cleanup", "tree": {"sha": "a1d66d2b8e06d2e32f9a4d0ce9857948dd981459", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1d66d2b8e06d2e32f9a4d0ce9857948dd981459"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef0da3bbeccdaab3813a1f6a17c566ca9087615f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef0da3bbeccdaab3813a1f6a17c566ca9087615f", "html_url": "https://github.com/rust-lang/rust/commit/ef0da3bbeccdaab3813a1f6a17c566ca9087615f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef0da3bbeccdaab3813a1f6a17c566ca9087615f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f57491c981530103e1e26dcd280e1a2df10f853", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f57491c981530103e1e26dcd280e1a2df10f853", "html_url": "https://github.com/rust-lang/rust/commit/5f57491c981530103e1e26dcd280e1a2df10f853"}], "stats": {"total": 52, "additions": 18, "deletions": 34}, "files": [{"sha": "af1ade8a1e12d09caf06608c53348a22b5676fef", "filename": "crates/ra_ide/src/join_lines.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ef0da3bbeccdaab3813a1f6a17c566ca9087615f/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef0da3bbeccdaab3813a1f6a17c566ca9087615f/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs?ref=ef0da3bbeccdaab3813a1f6a17c566ca9087615f", "patch": "@@ -166,16 +166,28 @@ fn is_trailing_comma(left: SyntaxKind, right: SyntaxKind) -> bool {\n \n #[cfg(test)]\n mod tests {\n-    use crate::test_utils::{assert_eq_text, check_action, extract_range};\n+    use ra_syntax::SourceFile;\n+    use test_utils::{add_cursor, assert_eq_text, extract_offset, extract_range};\n \n     use super::*;\n \n     fn check_join_lines(before: &str, after: &str) {\n-        check_action(before, after, |file, offset| {\n-            let range = TextRange::empty(offset);\n-            let res = join_lines(file, range);\n-            Some(res)\n-        })\n+        let (before_cursor_pos, before) = extract_offset(before);\n+        let file = SourceFile::parse(&before).ok().unwrap();\n+\n+        let range = TextRange::empty(before_cursor_pos);\n+        let result = join_lines(&file, range);\n+\n+        let actual = {\n+            let mut actual = before.to_string();\n+            result.apply(&mut actual);\n+            actual\n+        };\n+        let actual_cursor_pos = result\n+            .apply_to_offset(before_cursor_pos)\n+            .expect(\"cursor position is affected by the edit\");\n+        let actual = add_cursor(&actual, actual_cursor_pos);\n+        assert_eq_text!(after, &actual);\n     }\n \n     #[test]"}, {"sha": "d0aeb3ba72d555c62277169b0692cb95b6adf835", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ef0da3bbeccdaab3813a1f6a17c566ca9087615f/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef0da3bbeccdaab3813a1f6a17c566ca9087615f/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=ef0da3bbeccdaab3813a1f6a17c566ca9087615f", "patch": "@@ -42,9 +42,6 @@ mod inlay_hints;\n mod expand_macro;\n mod ssr;\n \n-#[cfg(test)]\n-mod test_utils;\n-\n use std::sync::Arc;\n \n use ra_cfg::CfgOptions;"}, {"sha": "b335582a33e0fe91ea3197ce3e5980b81653e8d7", "filename": "crates/ra_ide/src/test_utils.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5f57491c981530103e1e26dcd280e1a2df10f853/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f57491c981530103e1e26dcd280e1a2df10f853/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs?ref=5f57491c981530103e1e26dcd280e1a2df10f853", "patch": "@@ -1,25 +0,0 @@\n-//! FIXME: write short doc here\n-\n-use ra_syntax::{SourceFile, TextSize};\n-use ra_text_edit::TextEdit;\n-\n-pub(crate) use test_utils::*;\n-\n-pub(crate) fn check_action<F: Fn(&SourceFile, TextSize) -> Option<TextEdit>>(\n-    before: &str,\n-    after: &str,\n-    f: F,\n-) {\n-    let (before_cursor_pos, before) = extract_offset(before);\n-    let file = SourceFile::parse(&before).ok().unwrap();\n-    let result = f(&file, before_cursor_pos).expect(\"code action is not applicable\");\n-    let actual = {\n-        let mut actual = before.to_string();\n-        result.apply(&mut actual);\n-        actual\n-    };\n-    let actual_cursor_pos =\n-        result.apply_to_offset(before_cursor_pos).expect(\"cursor position is affected by the edit\");\n-    let actual = add_cursor(&actual, actual_cursor_pos);\n-    assert_eq_text!(after, &actual);\n-}"}]}