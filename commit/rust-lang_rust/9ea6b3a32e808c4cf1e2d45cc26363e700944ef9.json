{"sha": "9ea6b3a32e808c4cf1e2d45cc26363e700944ef9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYTZiM2EzMmU4MDhjNGNmMWUyZDQ1Y2MyNjM2M2U3MDA5NDRlZjk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-17T22:54:18Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-17T22:54:18Z"}, "message": "rustc: Remove a few allocations from metadata. Shaves a few milliseconds off compilation of hello world.", "tree": {"sha": "36e0e50e332585b0314a342d9071ff677643cbed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36e0e50e332585b0314a342d9071ff677643cbed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9", "html_url": "https://github.com/rust-lang/rust/commit/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69daeffddb534c4415967f18f795bc5b6dc262d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/69daeffddb534c4415967f18f795bc5b6dc262d2", "html_url": "https://github.com/rust-lang/rust/commit/69daeffddb534c4415967f18f795bc5b6dc262d2"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "1c7bb5620308190ecda72bf46c07314b6fd70ac9", "filename": "src/libcore/io.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=9ea6b3a32e808c4cf1e2d45cc26363e700944ef9", "patch": "@@ -521,7 +521,7 @@ fn u64_to_be_bytes<T>(n: u64, size: uint, f: fn(v: &[u8]) -> T) -> T {\n     }\n }\n \n-fn u64_from_be_bytes(data: ~[u8], start: uint, size: uint) -> u64 {\n+fn u64_from_be_bytes(data: &[const u8], start: uint, size: uint) -> u64 {\n     let mut sz = size;\n     assert (sz <= 8u);\n     let mut val = 0_u64;"}, {"sha": "8e2cdf65c4a2d1f134557e4ee629d9d294355bdc", "filename": "src/libcore/uint-template.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/src%2Flibcore%2Fuint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/src%2Flibcore%2Fuint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fuint-template.rs?ref=9ea6b3a32e808c4cf1e2d45cc26363e700944ef9", "patch": "@@ -121,7 +121,7 @@ impl T: iter::TimesIx {\n  *\n  * `buf` must not be empty\n  */\n-fn parse_buf(buf: ~[u8], radix: uint) -> option<T> {\n+fn parse_buf(buf: &[const u8], radix: uint) -> option<T> {\n     if vec::len(buf) == 0u { return none; }\n     let mut i = vec::len(buf) - 1u;\n     let mut power = 1u as T;"}, {"sha": "ea5405cc5107297129b219f716fa3fadd81163c5", "filename": "src/rustc/metadata/decoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/src%2Frustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/src%2Frustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fdecoder.rs?ref=9ea6b3a32e808c4cf1e2d45cc26363e700944ef9", "patch": "@@ -72,7 +72,7 @@ fn lookup_hash(d: ebml::doc, eq_fn: fn(x:&[u8]) -> bool, hash: uint) ->\n     let belt = tag_index_buckets_bucket_elt;\n     for ebml::tagged_docs(bucket, belt) |elt| {\n         let pos = io::u64_from_be_bytes(*elt.data, elt.start, 4u) as uint;\n-        if eq_fn(vec::slice(*elt.data, elt.start + 4u, elt.end)) {\n+        if eq_fn(vec::view(*elt.data, elt.start + 4u, elt.end)) {\n             return some(ebml::doc_at(d.data, pos).doc);\n         }\n     };\n@@ -81,7 +81,7 @@ fn lookup_hash(d: ebml::doc, eq_fn: fn(x:&[u8]) -> bool, hash: uint) ->\n \n fn maybe_find_item(item_id: int, items: ebml::doc) -> option<ebml::doc> {\n     fn eq_item(bytes: &[u8], item_id: int) -> bool {\n-        return io::u64_from_be_bytes(vec::slice(bytes, 0u, 4u), 0u, 4u) as int\n+        return io::u64_from_be_bytes(vec::view(bytes, 0u, 4u), 0u, 4u) as int\n             == item_id;\n     }\n     lookup_hash(items,"}, {"sha": "cb9a6b0ad13e70f9e9b29750dca4bd37c19d22d0", "filename": "src/rustc/metadata/tydecode.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/src%2Frustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ea6b3a32e808c4cf1e2d45cc26363e700944ef9/src%2Frustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Ftydecode.rs?ref=9ea6b3a32e808c4cf1e2d45cc26363e700944ef9", "patch": "@@ -391,8 +391,9 @@ fn parse_def_id(buf: &[u8]) -> ast::def_id {\n         error!{\"didn't find ':' when parsing def id\"};\n         fail;\n     }\n-    let crate_part = vec::slice(buf, 0u, colon_idx);\n-    let def_part = vec::slice(buf, colon_idx + 1u, len);\n+\n+    let crate_part = vec::view(buf, 0u, colon_idx);\n+    let def_part = vec::view(buf, colon_idx + 1u, len);\n \n     let crate_num = match uint::parse_buf(crate_part, 10u) {\n        some(cn) => cn as int,"}]}