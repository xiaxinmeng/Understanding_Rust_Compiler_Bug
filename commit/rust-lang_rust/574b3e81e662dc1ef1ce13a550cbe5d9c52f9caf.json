{"sha": "574b3e81e662dc1ef1ce13a550cbe5d9c52f9caf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NGIzZTgxZTY2MmRjMWVmMWNlMTNhNTUwY2JlNWQ5YzUyZjljYWY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-06-01T00:02:03Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-06-01T00:02:03Z"}, "message": "Add some convenience helpers to getopts. Close #1837.", "tree": {"sha": "2aa4033b28314ea0da1a587515f418676fc83bee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aa4033b28314ea0da1a587515f418676fc83bee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/574b3e81e662dc1ef1ce13a550cbe5d9c52f9caf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/574b3e81e662dc1ef1ce13a550cbe5d9c52f9caf", "html_url": "https://github.com/rust-lang/rust/commit/574b3e81e662dc1ef1ce13a550cbe5d9c52f9caf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/574b3e81e662dc1ef1ce13a550cbe5d9c52f9caf/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89aa28289bc123a4f3934a6fa439294cefa96093", "url": "https://api.github.com/repos/rust-lang/rust/commits/89aa28289bc123a4f3934a6fa439294cefa96093", "html_url": "https://github.com/rust-lang/rust/commit/89aa28289bc123a4f3934a6fa439294cefa96093"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "a08536f94410b29f7de1ed3fbd36d4d1aba3bf32", "filename": "src/libstd/getopts.rs", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/574b3e81e662dc1ef1ce13a550cbe5d9c52f9caf/src%2Flibstd%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/574b3e81e662dc1ef1ce13a550cbe5d9c52f9caf/src%2Flibstd%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgetopts.rs?ref=574b3e81e662dc1ef1ce13a550cbe5d9c52f9caf", "patch": "@@ -77,7 +77,9 @@ export match;\n export fail_;\n export fail_str;\n export opt_present;\n+export opts_present;\n export opt_str;\n+export opts_str;\n export opt_strs;\n export opt_maybe_str;\n export opt_default;\n@@ -292,6 +294,18 @@ fn opt_present(m: match, nm: str) -> bool {\n     ret vec::len::<optval>(opt_vals(m, nm)) > 0u;\n }\n \n+#[doc = \"Returns true if any of several options were matched\"]\n+fn opts_present(m: match, names: [str]) -> bool {\n+    for vec::each(names) {|nm|\n+        alt find_opt(m.opts, mkname(nm)) {\n+          some(_) { ret true; }\n+          _ { }\n+        }\n+    }\n+    ret false;\n+}\n+\n+\n #[doc = \"\n Returns the string argument supplied to a matching option\n \n@@ -301,6 +315,23 @@ fn opt_str(m: match, nm: str) -> str {\n     ret alt opt_val(m, nm) { val(s) { s } _ { fail } };\n }\n \n+#[doc = \"\n+Returns the string argument supplied to one of several matching options\n+\n+Fails if the no option was provided from the given list, or if the no such\n+option took an argument\n+\"]\n+fn opts_str(m: match, names: [str]) -> str {\n+    for vec::each(names) {|nm|\n+        alt opt_val(m, nm) {\n+          val(s) { ret s }\n+          _ {  }\n+        }\n+    }\n+    fail;\n+}\n+\n+\n #[doc = \"\n Returns a vector of the arguments provided to all matches of the given option.\n \n@@ -805,6 +836,26 @@ mod tests {\n         }\n     }\n \n+    #[test]\n+    fn test_multi() {\n+        let args = [\"-e\", \"foo\", \"--encrypt\", \"foo\"];\n+        let opts = [optopt(\"e\"), optopt(\"encrypt\")];\n+        let match = alt getopts(args, opts) {\n+          result::ok(m) { m }\n+          result::err(f) { fail; }\n+        };\n+        assert opts_present(match, [\"e\"]);\n+        assert opts_present(match, [\"encrypt\"]);\n+        assert opts_present(match, [\"encrypt\", \"e\"]);\n+        assert opts_present(match, [\"e\", \"encrypt\"]);\n+        assert !opts_present(match, [\"thing\"]);\n+        assert !opts_present(match, []);\n+\n+        assert opts_str(match, [\"e\"]) == \"foo\";\n+        assert opts_str(match, [\"encrypt\"]) == \"foo\";\n+        assert opts_str(match, [\"e\", \"encrypt\"]) == \"foo\";\n+        assert opts_str(match, [\"encrypt\", \"e\"]) == \"foo\";\n+    }\n }\n \n // Local Variables:"}]}