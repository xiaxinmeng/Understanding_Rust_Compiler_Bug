{"sha": "f740b8a4de449ff4aa1c7ca9c7fda53a4ee5d313", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NDBiOGE0ZGU0NDlmZjRhYTFjN2NhOWM3ZmRhNTNhNGVlNWQzMTM=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-10-25T12:31:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-25T12:31:07Z"}, "message": "Rollup merge of #55247 - peterjoel:peterjoel-prim-char-doc-example, r=joshtriplett\n\nClarified code example in char primitive doc\n\nThe example was not as clear as it could be because it was making an assumption about the structure of the data in order to multiply the number of elements in the slice by the item size. This change demonstrates the idea more straightforwardly, without needing a calculation, by just comparing the size of the slices.", "tree": {"sha": "7a41ea2e428a3a990026cdef1fe2fde938ed3fe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a41ea2e428a3a990026cdef1fe2fde938ed3fe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f740b8a4de449ff4aa1c7ca9c7fda53a4ee5d313", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb0beLCRBK7hj4Ov3rIwAAdHIIACsEUZLc2RY406YkOeFjFlV9\nA7dF5SkxWXhdbb09Q4tuFc6FqWHrc2Ran6C039rZkKzFHXfo3m0IaqikZC6cuuiT\nLk2g+FHR0bYZRBmBBTFU9OHihw6IplZEsB7Wz29+VU5SXexdQz2nJm5cRLp/P1Vn\nD4rLAIMzBK+WkWxj5ya74Jy7KQWY54RloI4HzlkhOsbEQAdePGR7HVPPVdl1SQlK\n1V/bZuFxNkV5LH+/o2Ka7/RJq3dxcxGeRoX3SLfp1TSEJLUf0P+nlFD9ccj1IZdM\nossZpZpKNd5nRMcJzQ1jIrU27hBjn8FLHekavUDLPAlLBFJ/sJPFyRRyQ+YHKOU=\n=Jhnd\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a41ea2e428a3a990026cdef1fe2fde938ed3fe0\nparent c4e51a2c5240073677e00d6f5c7340221d5acfc3\nparent 0f6e2741f692add6d1995b630e2073d18aa2b2ba\nauthor Pietro Albini <pietro@pietroalbini.org> 1540470667 +0200\ncommitter GitHub <noreply@github.com> 1540470667 +0200\n\nRollup merge of #55247 - peterjoel:peterjoel-prim-char-doc-example, r=joshtriplett\n\nClarified code example in char primitive doc\n\nThe example was not as clear as it could be because it was making an assumption about the structure of the data in order to multiply the number of elements in the slice by the item size. This change demonstrates the idea more straightforwardly, without needing a calculation, by just comparing the size of the slices.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f740b8a4de449ff4aa1c7ca9c7fda53a4ee5d313", "html_url": "https://github.com/rust-lang/rust/commit/f740b8a4de449ff4aa1c7ca9c7fda53a4ee5d313", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f740b8a4de449ff4aa1c7ca9c7fda53a4ee5d313/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4e51a2c5240073677e00d6f5c7340221d5acfc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4e51a2c5240073677e00d6f5c7340221d5acfc3", "html_url": "https://github.com/rust-lang/rust/commit/c4e51a2c5240073677e00d6f5c7340221d5acfc3"}, {"sha": "0f6e2741f692add6d1995b630e2073d18aa2b2ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6e2741f692add6d1995b630e2073d18aa2b2ba", "html_url": "https://github.com/rust-lang/rust/commit/0f6e2741f692add6d1995b630e2073d18aa2b2ba"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c2a16122a0dd1a2bb3383d351f8081b9276b2522", "filename": "src/libstd/primitive_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f740b8a4de449ff4aa1c7ca9c7fda53a4ee5d313/src%2Flibstd%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f740b8a4de449ff4aa1c7ca9c7fda53a4ee5d313/src%2Flibstd%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprimitive_docs.rs?ref=f740b8a4de449ff4aa1c7ca9c7fda53a4ee5d313", "patch": "@@ -323,8 +323,8 @@ mod prim_never { }\n /// let s = String::from(\"love: \u2764\ufe0f\");\n /// let v: Vec<char> = s.chars().collect();\n ///\n-/// assert_eq!(12, s.len() * std::mem::size_of::<u8>());\n-/// assert_eq!(32, v.len() * std::mem::size_of::<char>());\n+/// assert_eq!(12, std::mem::size_of_val(&s[..]));\n+/// assert_eq!(32, std::mem::size_of_val(&v[..]));\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n mod prim_char { }"}]}