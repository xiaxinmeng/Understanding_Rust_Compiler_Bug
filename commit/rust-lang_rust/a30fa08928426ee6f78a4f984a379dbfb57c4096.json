{"sha": "a30fa08928426ee6f78a4f984a379dbfb57c4096", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMGZhMDg5Mjg0MjZlZTZmNzhhNGY5ODRhMzc5ZGJmYjU3YzQwOTY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-07-05T16:36:32Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-07-14T00:21:58Z"}, "message": "Remove trival `impl Clean for CrateNum`", "tree": {"sha": "233b45447ffe84276b05261f093e78d40ccc8a30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/233b45447ffe84276b05261f093e78d40ccc8a30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a30fa08928426ee6f78a4f984a379dbfb57c4096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a30fa08928426ee6f78a4f984a379dbfb57c4096", "html_url": "https://github.com/rust-lang/rust/commit/a30fa08928426ee6f78a4f984a379dbfb57c4096", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a30fa08928426ee6f78a4f984a379dbfb57c4096/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e32eceefe1ca3efeef123309eaa154d27d31788b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e32eceefe1ca3efeef123309eaa154d27d31788b", "html_url": "https://github.com/rust-lang/rust/commit/e32eceefe1ca3efeef123309eaa154d27d31788b"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "1a2852dc6c724e4aa662f73eb2929793d3147e76", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a30fa08928426ee6f78a4f984a379dbfb57c4096/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30fa08928426ee6f78a4f984a379dbfb57c4096/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=a30fa08928426ee6f78a4f984a379dbfb57c4096", "patch": "@@ -14,7 +14,7 @@ use rustc_attr as attr;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n-use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::region_constraints::{Constraint, RegionConstraintData};\n use rustc_middle::middle::resolve_lifetime as rl;\n@@ -85,12 +85,6 @@ impl<T: Clean<U>, U> Clean<Option<U>> for Option<T> {\n     }\n }\n \n-impl Clean<ExternalCrate> for CrateNum {\n-    fn clean(&self, _cx: &mut DocContext<'_>) -> ExternalCrate {\n-        ExternalCrate { crate_num: *self }\n-    }\n-}\n-\n impl Clean<Item> for doctree::Module<'_> {\n     fn clean(&self, cx: &mut DocContext<'_>) -> Item {\n         let mut items: Vec<Item> = vec![];"}, {"sha": "b455d2318e43bdf626eac24b91f648b383b28aeb", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a30fa08928426ee6f78a4f984a379dbfb57c4096/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30fa08928426ee6f78a4f984a379dbfb57c4096/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=a30fa08928426ee6f78a4f984a379dbfb57c4096", "patch": "@@ -133,7 +133,7 @@ crate struct TraitWithExtraInfo {\n     crate is_notable: bool,\n }\n \n-#[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(Copy, Clone, Debug)]\n crate struct ExternalCrate {\n     crate crate_num: CrateNum,\n }"}, {"sha": "5e222d8f9a5fdad7b5ce3e81a319d6a3c4acd06d", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a30fa08928426ee6f78a4f984a379dbfb57c4096/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30fa08928426ee6f78a4f984a379dbfb57c4096/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=a30fa08928426ee6f78a4f984a379dbfb57c4096", "patch": "@@ -39,7 +39,7 @@ crate fn krate(cx: &mut DocContext<'_>) -> Crate {\n         // Analyze doc-reachability for extern items\n         LibEmbargoVisitor::new(cx).visit_lib(cnum);\n     }\n-    externs.sort_unstable();\n+    externs.sort_unstable_by_key(|e| e.crate_num);\n \n     // Clean the crate, translating the entire librustc_ast AST to one that is\n     // understood by rustdoc.\n@@ -61,7 +61,7 @@ crate fn krate(cx: &mut DocContext<'_>) -> Crate {\n         _ => unreachable!(),\n     }\n \n-    let local_crate = LOCAL_CRATE.clean(cx);\n+    let local_crate = ExternalCrate { crate_num: LOCAL_CRATE };\n     let src = local_crate.src(cx.tcx);\n     let name = local_crate.name(cx.tcx);\n     let primitives = local_crate.primitives(cx.tcx);"}]}