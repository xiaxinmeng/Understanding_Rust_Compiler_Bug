{"sha": "5654305a7ba419e4a7c0334fc77d0ef41a1ca2ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NTQzMDVhN2JhNDE5ZTRhN2MwMzM0ZmM3N2QwZWY0MWExY2EyYWM=", "commit": {"author": {"name": "Billy Rieger", "email": "wrieger@protonmail.com", "date": "2020-01-20T02:44:46Z"}, "committer": {"name": "Billy Rieger", "email": "wrieger@protonmail.com", "date": "2020-01-28T05:43:18Z"}, "message": "Add BTreeMap::remove_entry\n\nMainly for API parity with HashMap.\n\n- Add BTreeMap::remove_entry\n- Rewrite BTreeMap::remove to use remove_entry\n- Use btreemap_remove_entry feature in doc comment", "tree": {"sha": "fc160be47ffbc91cbfc573b39218522835cea7e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc160be47ffbc91cbfc573b39218522835cea7e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5654305a7ba419e4a7c0334fc77d0ef41a1ca2ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5654305a7ba419e4a7c0334fc77d0ef41a1ca2ac", "html_url": "https://github.com/rust-lang/rust/commit/5654305a7ba419e4a7c0334fc77d0ef41a1ca2ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5654305a7ba419e4a7c0334fc77d0ef41a1ca2ac/comments", "author": {"login": "billyrieger", "id": 43874200, "node_id": "MDQ6VXNlcjQzODc0MjAw", "avatar_url": "https://avatars.githubusercontent.com/u/43874200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billyrieger", "html_url": "https://github.com/billyrieger", "followers_url": "https://api.github.com/users/billyrieger/followers", "following_url": "https://api.github.com/users/billyrieger/following{/other_user}", "gists_url": "https://api.github.com/users/billyrieger/gists{/gist_id}", "starred_url": "https://api.github.com/users/billyrieger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billyrieger/subscriptions", "organizations_url": "https://api.github.com/users/billyrieger/orgs", "repos_url": "https://api.github.com/users/billyrieger/repos", "events_url": "https://api.github.com/users/billyrieger/events{/privacy}", "received_events_url": "https://api.github.com/users/billyrieger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "billyrieger", "id": 43874200, "node_id": "MDQ6VXNlcjQzODc0MjAw", "avatar_url": "https://avatars.githubusercontent.com/u/43874200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billyrieger", "html_url": "https://github.com/billyrieger", "followers_url": "https://api.github.com/users/billyrieger/followers", "following_url": "https://api.github.com/users/billyrieger/following{/other_user}", "gists_url": "https://api.github.com/users/billyrieger/gists{/gist_id}", "starred_url": "https://api.github.com/users/billyrieger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billyrieger/subscriptions", "organizations_url": "https://api.github.com/users/billyrieger/orgs", "repos_url": "https://api.github.com/users/billyrieger/repos", "events_url": "https://api.github.com/users/billyrieger/events{/privacy}", "received_events_url": "https://api.github.com/users/billyrieger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0e02ad724f05f73b957b3d6f6314a9a2e5c284e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e02ad724f05f73b957b3d6f6314a9a2e5c284e", "html_url": "https://github.com/rust-lang/rust/commit/c0e02ad724f05f73b957b3d6f6314a9a2e5c284e"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "551a406f8d237bc9d2f3dd68bac459b693d57e17", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5654305a7ba419e4a7c0334fc77d0ef41a1ca2ac/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5654305a7ba419e4a7c0334fc77d0ef41a1ca2ac/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=5654305a7ba419e4a7c0334fc77d0ef41a1ca2ac", "patch": "@@ -806,13 +806,42 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn remove<Q: ?Sized>(&mut self, key: &Q) -> Option<V>\n+    where\n+        K: Borrow<Q>,\n+        Q: Ord,\n+    {\n+        self.remove_entry(key).map(|(_, v)| v)\n+    }\n+\n+    /// Removes a key from the map, returning the stored key and value if the key\n+    /// was previously in the map.\n+    ///\n+    /// The key may be any borrowed form of the map's key type, but the ordering\n+    /// on the borrowed form *must* match the ordering on the key type.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// #![feature(btreemap_remove_entry)]\n+    /// use std::collections::BTreeMap;\n+    ///\n+    /// let mut map = BTreeMap::new();\n+    /// map.insert(1, \"a\");\n+    /// assert_eq!(map.remove_entry(&1), Some((1, \"a\")));\n+    /// assert_eq!(map.remove_entry(&1), None);\n+    /// ```\n+    #[unstable(feature = \"btreemap_remove_entry\", issue = \"66714\")]\n+    pub fn remove_entry<Q: ?Sized>(&mut self, key: &Q) -> Option<(K, V)>\n     where\n         K: Borrow<Q>,\n         Q: Ord,\n     {\n         match search::search_tree(self.root.as_mut(), key) {\n             Found(handle) => Some(\n-                OccupiedEntry { handle, length: &mut self.length, _marker: PhantomData }.remove(),\n+                OccupiedEntry { handle, length: &mut self.length, _marker: PhantomData }\n+                    .remove_entry(),\n             ),\n             GoDown(_) => None,\n         }"}]}