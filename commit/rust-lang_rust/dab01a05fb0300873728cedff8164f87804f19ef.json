{"sha": "dab01a05fb0300873728cedff8164f87804f19ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYjAxYTA1ZmIwMzAwODczNzI4Y2VkZmY4MTY0Zjg3ODA0ZjE5ZWY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-02T14:35:48Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-31T08:30:16Z"}, "message": "* Put crates list at all levels\n* Fix bug in module sidebar: the list of items was from the parent module", "tree": {"sha": "5b10846adf681b69ed71ac83a81716fa70472f6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b10846adf681b69ed71ac83a81716fa70472f6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dab01a05fb0300873728cedff8164f87804f19ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dab01a05fb0300873728cedff8164f87804f19ef", "html_url": "https://github.com/rust-lang/rust/commit/dab01a05fb0300873728cedff8164f87804f19ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dab01a05fb0300873728cedff8164f87804f19ef/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc08641128737ee0832bb61f24fe9212ca000f32", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc08641128737ee0832bb61f24fe9212ca000f32", "html_url": "https://github.com/rust-lang/rust/commit/dc08641128737ee0832bb61f24fe9212ca000f32"}], "stats": {"total": 171, "additions": 81, "deletions": 90}, "files": [{"sha": "3ae516bd6df7c0ccbbe0660ef34a76eab4d1e854", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=dab01a05fb0300873728cedff8164f87804f19ef", "patch": "@@ -526,7 +526,6 @@ impl Item {\n     crate fn is_crate(&self) -> bool {\n         self.is_mod() && self.def_id.as_real().map_or(false, |did| did.index == CRATE_DEF_INDEX)\n     }\n-\n     crate fn is_mod(&self) -> bool {\n         self.type_() == ItemType::Module\n     }"}, {"sha": "75e4cee9e676633f59ca1e23b63a9222de6638d9", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=dab01a05fb0300873728cedff8164f87804f19ef", "patch": "@@ -119,7 +119,7 @@ crate fn render<T: Print, S: Print>(\n     {after_content}\\\n     <div id=\\\"rustdoc-vars\\\" data-root-path=\\\"{root_path}\\\" data-current-crate=\\\"{krate}\\\" \\\n        data-search-index-js=\\\"{root_path}search-index{suffix}.js\\\" \\\n-       data-search-js=\\\"{static_root_path}search{suffix}.js\\\"></div>\n+       data-search-js=\\\"{static_root_path}search{suffix}.js\\\"></div>\\\n     <script src=\\\"{static_root_path}main{suffix}.js\\\"></script>\\\n     {extra_scripts}\\\n </body>\\"}, {"sha": "a7f3d70e462f5adfe518a2b14df1a7d13746a5f3", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 30, "deletions": 37, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=dab01a05fb0300873728cedff8164f87804f19ef", "patch": "@@ -1703,7 +1703,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n                 \"<div class=\\\"block version\\\">\\\n                      <p>Version {}</p>\\\n                  </div>\",\n-                Escape(version)\n+                Escape(version),\n             );\n         }\n     }\n@@ -1713,9 +1713,10 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n         write!(\n             buffer,\n             \"<a id=\\\"all-types\\\" href=\\\"all.html\\\"><p>See all {}'s items</p></a>\",\n-            it.name.as_ref().expect(\"crates always have a name\")\n+            it.name.as_ref().expect(\"crates always have a name\"),\n         );\n     }\n+\n     match *it.kind {\n         clean::StructItem(ref s) => sidebar_struct(cx, buffer, it, s),\n         clean::TraitItem(ref t) => sidebar_trait(cx, buffer, it, t),\n@@ -1725,7 +1726,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n         clean::TypedefItem(_, _) => sidebar_typedef(cx, buffer, it),\n         clean::ModuleItem(ref m) => sidebar_module(buffer, &m.items),\n         clean::ForeignTypeItem => sidebar_foreign_type(cx, buffer, it),\n-        _ => (),\n+        _ => {}\n     }\n \n     // The sidebar is designed to display sibling functions, modules and\n@@ -1736,22 +1737,24 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n     // as much HTML as possible in order to allow non-JS-enabled browsers\n     // to navigate the documentation (though slightly inefficiently).\n \n-    buffer.write_str(\"<p class=\\\"location\\\">\");\n-    for (i, name) in cx.current.iter().take(parentlen).enumerate() {\n-        if i > 0 {\n-            buffer.write_str(\"::<wbr>\");\n+    if !it.is_mod() {\n+        buffer.write_str(\"<p class=\\\"location\\\">\");\n+        for (i, name) in cx.current.iter().take(parentlen).enumerate() {\n+            if i > 0 {\n+                buffer.write_str(\"::<wbr>\");\n+            }\n+            write!(\n+                buffer,\n+                \"<a href=\\\"{}index.html\\\">{}</a>\",\n+                &cx.root_path()[..(cx.current.len() - i - 1) * 3],\n+                *name\n+            );\n         }\n-        write!(\n-            buffer,\n-            \"<a href=\\\"{}index.html\\\">{}</a>\",\n-            &cx.root_path()[..(cx.current.len() - i - 1) * 3],\n-            *name\n-        );\n+        buffer.write_str(\"</p>\");\n     }\n-    buffer.write_str(\"</p>\");\n \n     // Sidebar refers to the enclosing module, not this module.\n-    let relpath = if it.is_mod() { \"../\" } else { \"\" };\n+    let relpath = if it.is_mod() && parentlen != 0 { \"./\" } else { \"\" };\n     write!(\n         buffer,\n         \"<div id=\\\"sidebar-vars\\\" data-name=\\\"{name}\\\" data-ty=\\\"{ty}\\\" data-relpath=\\\"{path}\\\">\\\n@@ -1760,17 +1763,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n         ty = it.type_(),\n         path = relpath\n     );\n-\n-    if parentlen == 0 {\n-        write!(\n-            buffer,\n-            \"<script defer src=\\\"{}sidebar-items{}.js\\\"></script>\",\n-            relpath, cx.shared.resource_suffix\n-        );\n-    } else {\n-        write!(buffer, \"<script defer src=\\\"{}sidebar-items.js\\\"></script>\", relpath);\n-    }\n-\n+    write!(buffer, \"<script defer src=\\\"{}sidebar-items.js\\\"></script>\", relpath);\n     // Closes sidebar-elems div.\n     buffer.write_str(\"</div>\");\n }\n@@ -2278,8 +2271,8 @@ fn sidebar_enum(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, e: &clean:\n     }\n }\n \n-fn item_ty_to_strs(ty: &ItemType) -> (&'static str, &'static str) {\n-    match *ty {\n+fn item_ty_to_strs(ty: ItemType) -> (&'static str, &'static str) {\n+    match ty {\n         ItemType::ExternCrate | ItemType::Import => (\"reexports\", \"Re-exports\"),\n         ItemType::Module => (\"modules\", \"Modules\"),\n         ItemType::Struct => (\"structs\", \"Structs\"),\n@@ -2311,10 +2304,14 @@ fn item_ty_to_strs(ty: &ItemType) -> (&'static str, &'static str) {\n fn sidebar_module(buf: &mut Buffer, items: &[clean::Item]) {\n     let mut sidebar = String::new();\n \n+    // Re-exports are handled a bit differently because they can be extern crates or imports.\n     if items.iter().any(|it| {\n-        it.type_() == ItemType::ExternCrate || (it.type_() == ItemType::Import && !it.is_stripped())\n+        it.name.is_some()\n+            && (it.type_() == ItemType::ExternCrate\n+                || (it.type_() == ItemType::Import && !it.is_stripped()))\n     }) {\n-        sidebar.push_str(\"<li><a href=\\\"#reexports\\\">Re-exports</a></li>\");\n+        let (id, name) = item_ty_to_strs(ItemType::Import);\n+        sidebar.push_str(&format!(\"<li><a href=\\\"#{}\\\">{}</a></li>\", id, name));\n     }\n \n     // ordering taken from item_module, reorder, where it prioritized elements in a certain order\n@@ -2341,13 +2338,9 @@ fn sidebar_module(buf: &mut Buffer, items: &[clean::Item]) {\n         ItemType::ForeignType,\n         ItemType::Keyword,\n     ] {\n-        if items.iter().any(|it| !it.is_stripped() && it.type_() == myty) {\n-            let (short, name) = item_ty_to_strs(&myty);\n-            sidebar.push_str(&format!(\n-                \"<li><a href=\\\"#{id}\\\">{name}</a></li>\",\n-                id = short,\n-                name = name\n-            ));\n+        if items.iter().any(|it| !it.is_stripped() && it.type_() == myty && it.name.is_some()) {\n+            let (id, name) = item_ty_to_strs(myty);\n+            sidebar.push_str(&format!(\"<li><a href=\\\"#{}\\\">{}</a></li>\", id, name));\n         }\n     }\n "}, {"sha": "069bec4e1a50cfbb4de19c0def5f08b248afd671", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=dab01a05fb0300873728cedff8164f87804f19ef", "patch": "@@ -262,7 +262,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 w.write_str(\"</table>\");\n             }\n             curty = myty;\n-            let (short, name) = item_ty_to_strs(&myty.unwrap());\n+            let (short, name) = item_ty_to_strs(myty.unwrap());\n             write!(\n                 w,\n                 \"<h2 id=\\\"{id}\\\" class=\\\"section-header\\\">\\"}, {"sha": "353c7125fc74ba171dfd930b9c5607da45a32359", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 49, "deletions": 50, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/dab01a05fb0300873728cedff8164f87804f19ef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=dab01a05fb0300873728cedff8164f87804f19ef", "patch": "@@ -561,40 +561,36 @@ function hideThemeButtonState() {\n         }\n     }());\n \n-    function addSidebarCrates(crates) {\n-        // Draw a convenient sidebar of known crates if we have a listing\n-        if (window.rootPath === \"../\" || window.rootPath === \"./\") {\n-            var sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n-            if (sidebar) {\n-                var div = document.createElement(\"div\");\n-                div.className = \"block crate\";\n-                div.innerHTML = \"<h3>Crates</h3>\";\n-                var ul = document.createElement(\"ul\");\n-                div.appendChild(ul);\n-\n-                for (var i = 0; i < crates.length; ++i) {\n-                    var klass = \"crate\";\n-                    if (window.rootPath !== \"./\" && crates[i] === window.currentCrate) {\n-                        klass += \" current\";\n-                    }\n-                    var link = document.createElement(\"a\");\n-                    link.href = window.rootPath + crates[i] + \"/index.html\";\n-                    link.className = klass;\n-                    link.textContent = crates[i];\n-\n-                    var li = document.createElement(\"li\");\n-                    li.appendChild(link);\n-                    ul.appendChild(li);\n-                }\n-                sidebar.appendChild(div);\n-            }\n-        }\n-    }\n-\n     // delayed sidebar rendering.\n     window.initSidebarItems = function(items) {\n         var sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n         var current = window.sidebarCurrent;\n+        var isModule = hasClass(document.body, \"mod\");\n+\n+        function addSidebarCrates(crates) {\n+            // Draw a convenient sidebar of known crates if we have a listing\n+            var div = document.createElement(\"div\");\n+            div.className = \"block crate\";\n+            div.innerHTML = \"<h3>Crates</h3>\";\n+            var ul = document.createElement(\"ul\");\n+            div.appendChild(ul);\n+\n+            for (var i = 0; i < crates.length; ++i) {\n+                var klass = \"crate\";\n+                if (window.rootPath !== \"./\" && crates[i] === window.currentCrate) {\n+                    klass += \" current\";\n+                }\n+                var link = document.createElement(\"a\");\n+                link.href = window.rootPath + crates[i] + \"/index.html\";\n+                link.className = klass;\n+                link.textContent = crates[i];\n+\n+                var li = document.createElement(\"li\");\n+                li.appendChild(link);\n+                ul.appendChild(li);\n+            }\n+            sidebar.appendChild(div);\n+        }\n \n         function block(shortty, longty) {\n             var filtered = items[shortty];\n@@ -634,28 +630,31 @@ function hideThemeButtonState() {\n                 ul.appendChild(li);\n             }\n             div.appendChild(ul);\n-            if (sidebar) {\n-                sidebar.appendChild(div);\n-            }\n+            sidebar.appendChild(div);\n         }\n \n-        block(\"primitive\", \"Primitive Types\");\n-        block(\"mod\", \"Modules\");\n-        block(\"macro\", \"Macros\");\n-        block(\"struct\", \"Structs\");\n-        block(\"enum\", \"Enums\");\n-        block(\"union\", \"Unions\");\n-        block(\"constant\", \"Constants\");\n-        block(\"static\", \"Statics\");\n-        block(\"trait\", \"Traits\");\n-        block(\"fn\", \"Functions\");\n-        block(\"type\", \"Type Definitions\");\n-        block(\"foreigntype\", \"Foreign Types\");\n-        block(\"keyword\", \"Keywords\");\n-        block(\"traitalias\", \"Trait Aliases\");\n-\n-        // `crates{version}.js` should always be loaded before this script, so we can use it safely.\n-        addSidebarCrates(window.ALL_CRATES);\n+        if (sidebar) {\n+            if (!isModule) {\n+                block(\"primitive\", \"Primitive Types\");\n+                block(\"mod\", \"Modules\");\n+                block(\"macro\", \"Macros\");\n+                block(\"struct\", \"Structs\");\n+                block(\"enum\", \"Enums\");\n+                block(\"union\", \"Unions\");\n+                block(\"constant\", \"Constants\");\n+                block(\"static\", \"Statics\");\n+                block(\"trait\", \"Traits\");\n+                block(\"fn\", \"Functions\");\n+                block(\"type\", \"Type Definitions\");\n+                block(\"foreigntype\", \"Foreign Types\");\n+                block(\"keyword\", \"Keywords\");\n+                block(\"traitalias\", \"Trait Aliases\");\n+            }\n+\n+            // `crates{version}.js` should always be loaded before this script, so we can use\n+            // it safely.\n+            addSidebarCrates(window.ALL_CRATES);\n+        }\n     };\n \n     window.register_implementors = function(imp) {"}]}