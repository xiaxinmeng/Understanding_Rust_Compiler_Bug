{"sha": "66d7216469faa5f22d0fe1deb9573e84d22142c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZDcyMTY0NjlmYWE1ZjIyZDBmZTFkZWI5NTczZTg0ZDIyMTQyYzU=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-08-31T10:30:38Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-08-31T10:30:38Z"}, "message": "trip const_to_alloc query", "tree": {"sha": "56c776e4a38619c05c405487116fbb7a4fdcce6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56c776e4a38619c05c405487116fbb7a4fdcce6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66d7216469faa5f22d0fe1deb9573e84d22142c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66d7216469faa5f22d0fe1deb9573e84d22142c5", "html_url": "https://github.com/rust-lang/rust/commit/66d7216469faa5f22d0fe1deb9573e84d22142c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66d7216469faa5f22d0fe1deb9573e84d22142c5/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1114ab684fbad001c4e580326d8eb4d8c4e917d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1114ab684fbad001c4e580326d8eb4d8c4e917d3", "html_url": "https://github.com/rust-lang/rust/commit/1114ab684fbad001c4e580326d8eb4d8c4e917d3"}], "stats": {"total": 24, "additions": 2, "deletions": 22}, "files": [{"sha": "dfe0a395ca140678fac359aa24fc6236e0ca3d1e", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=66d7216469faa5f22d0fe1deb9573e84d22142c5", "patch": "@@ -75,7 +75,7 @@ use traits::query::{\n     CanonicalPredicateGoal, CanonicalTypeOpProvePredicateGoal, CanonicalTypeOpNormalizeGoal,\n };\n use ty::{TyCtxt, FnSig, Instance, InstanceDef,\n-         ParamEnv, ParamEnvAnd, Predicate, PolyFnSig, PolyTraitRef, Ty, self};\n+         ParamEnv, ParamEnvAnd, Predicate, PolyFnSig, PolyTraitRef, Ty};\n use ty::subst::Substs;\n \n // erase!() just makes tokens go away. It's used to specify which macro argument\n@@ -632,7 +632,6 @@ define_dep_nodes!( <'tcx>\n     // queries). Making them anonymous avoids hashing the result, which\n     // may save a bit of time.\n     [anon] EraseRegionsTy { ty: Ty<'tcx> },\n-    [anon] ConstToAllocation { val: &'tcx ty::Const<'tcx> },\n \n     [input] Freevars(DefId),\n     [input] MaybeUnusedTraitImport(DefId),"}, {"sha": "d32580181f8dc65cb25376dd46eef0f622f4acb8", "filename": "src/librustc/ty/query/config.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs?ref=66d7216469faa5f22d0fe1deb9573e84d22142c5", "patch": "@@ -198,12 +198,6 @@ impl<'tcx> QueryDescription<'tcx> for queries::super_predicates_of<'tcx> {\n     }\n }\n \n-impl<'tcx> QueryDescription<'tcx> for queries::const_to_allocation<'tcx> {\n-    fn describe(_tcx: TyCtxt, val: &'tcx ty::Const<'tcx>) -> String {\n-        format!(\"converting constant `{:?}` to an allocation\", val)\n-    }\n-}\n-\n impl<'tcx> QueryDescription<'tcx> for queries::erase_regions_ty<'tcx> {\n     fn describe(_tcx: TyCtxt, ty: Ty<'tcx>) -> String {\n         format!(\"erasing regions from `{:?}`\", ty)"}, {"sha": "88f599971c7daeab9a4d5c793c2142e6d87b9554", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=66d7216469faa5f22d0fe1deb9573e84d22142c5", "patch": "@@ -30,7 +30,7 @@ use middle::exported_symbols::{SymbolExportLevel, ExportedSymbol};\n use mir::interpret::ConstEvalResult;\n use mir::mono::{CodegenUnit, Stats};\n use mir;\n-use mir::interpret::{GlobalId, Allocation};\n+use mir::interpret::GlobalId;\n use session::{CompileResult, CrateDisambiguator};\n use session::config::OutputFilenames;\n use traits::{self, Vtable};\n@@ -286,11 +286,6 @@ define_queries! { <'tcx>\n         /// other items (such as enum variant explicit discriminants).\n         [] fn const_eval: const_eval_dep_node(ty::ParamEnvAnd<'tcx, GlobalId<'tcx>>)\n             -> ConstEvalResult<'tcx>,\n-\n-        /// Converts a constant value to a constant allocation\n-        [] fn const_to_allocation: const_to_allocation(\n-            &'tcx ty::Const<'tcx>\n-        ) -> &'tcx Allocation,\n     },\n \n     TypeChecking {\n@@ -706,12 +701,6 @@ fn erase_regions_ty<'tcx>(ty: Ty<'tcx>) -> DepConstructor<'tcx> {\n     DepConstructor::EraseRegionsTy { ty }\n }\n \n-fn const_to_allocation<'tcx>(\n-    val: &'tcx ty::Const<'tcx>,\n-) -> DepConstructor<'tcx> {\n-    DepConstructor::ConstToAllocation { val }\n-}\n-\n fn type_param_predicates<'tcx>((item_id, param_id): (DefId, DefId)) -> DepConstructor<'tcx> {\n     DepConstructor::TypeParamPredicates {\n         item_id,"}, {"sha": "215fba54499b7e0065f53c78066d565d55191e97", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=66d7216469faa5f22d0fe1deb9573e84d22142c5", "patch": "@@ -1062,7 +1062,6 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n         DepKind::FulfillObligation |\n         DepKind::VtableMethods |\n         DepKind::EraseRegionsTy |\n-        DepKind::ConstToAllocation |\n         DepKind::NormalizeProjectionTy |\n         DepKind::NormalizeTyAfterErasingRegions |\n         DepKind::ImpliedOutlivesBounds |"}, {"sha": "d5148b09c4ff5a71269b21af961c9933f9c086fe", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d7216469faa5f22d0fe1deb9573e84d22142c5/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=66d7216469faa5f22d0fe1deb9573e84d22142c5", "patch": "@@ -93,7 +93,6 @@ pub fn provide(providers: &mut Providers) {\n     shim::provide(providers);\n     transform::provide(providers);\n     providers.const_eval = interpret::const_eval_provider;\n-    providers.const_to_allocation = interpret::const_to_allocation_provider;\n     providers.check_match = hair::pattern::check_match;\n }\n "}]}