{"sha": "80028760ed111b800decee876af59741f8765cce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMDI4NzYwZWQxMTFiODAwZGVjZWU4NzZhZjU5NzQxZjg3NjVjY2U=", "commit": {"author": {"name": "muvlon", "email": "muvlon@hentzes.de", "date": "2018-01-11T21:01:32Z"}, "committer": {"name": "muvlon", "email": "muvlon@hentzes.de", "date": "2018-01-11T21:07:06Z"}, "message": "s/OsStr/&OsStr in docs to align with &str/String comparison", "tree": {"sha": "c26ff36846d91b89e062f61db78f0224dff7a21b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c26ff36846d91b89e062f61db78f0224dff7a21b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80028760ed111b800decee876af59741f8765cce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80028760ed111b800decee876af59741f8765cce", "html_url": "https://github.com/rust-lang/rust/commit/80028760ed111b800decee876af59741f8765cce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80028760ed111b800decee876af59741f8765cce/comments", "author": {"login": "whentze", "id": 6296348, "node_id": "MDQ6VXNlcjYyOTYzNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6296348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whentze", "html_url": "https://github.com/whentze", "followers_url": "https://api.github.com/users/whentze/followers", "following_url": "https://api.github.com/users/whentze/following{/other_user}", "gists_url": "https://api.github.com/users/whentze/gists{/gist_id}", "starred_url": "https://api.github.com/users/whentze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whentze/subscriptions", "organizations_url": "https://api.github.com/users/whentze/orgs", "repos_url": "https://api.github.com/users/whentze/repos", "events_url": "https://api.github.com/users/whentze/events{/privacy}", "received_events_url": "https://api.github.com/users/whentze/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whentze", "id": 6296348, "node_id": "MDQ6VXNlcjYyOTYzNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6296348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whentze", "html_url": "https://github.com/whentze", "followers_url": "https://api.github.com/users/whentze/followers", "following_url": "https://api.github.com/users/whentze/following{/other_user}", "gists_url": "https://api.github.com/users/whentze/gists{/gist_id}", "starred_url": "https://api.github.com/users/whentze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whentze/subscriptions", "organizations_url": "https://api.github.com/users/whentze/orgs", "repos_url": "https://api.github.com/users/whentze/repos", "events_url": "https://api.github.com/users/whentze/events{/privacy}", "received_events_url": "https://api.github.com/users/whentze/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bac725ecdf31fe8ac5e7ddcd45d2c316d9aff674", "url": "https://api.github.com/repos/rust-lang/rust/commits/bac725ecdf31fe8ac5e7ddcd45d2c316d9aff674", "html_url": "https://github.com/rust-lang/rust/commit/bac725ecdf31fe8ac5e7ddcd45d2c316d9aff674"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "3959e8533be5fb2534b60789a3b3fc9da66801fd", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/80028760ed111b800decee876af59741f8765cce/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80028760ed111b800decee876af59741f8765cce/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=80028760ed111b800decee876af59741f8765cce", "patch": "@@ -36,7 +36,7 @@ use sys_common::{AsInner, IntoInner, FromInner};\n /// and platform-native string values, and in particular allowing a Rust string\n /// to be converted into an \"OS\" string with no cost if possible.\n ///\n-/// `OsString` is to [`OsStr`] as [`String`] is to [`&str`]: the former\n+/// `OsString` is to [`&OsStr`] as [`String`] is to [`&str`]: the former\n /// in each pair are owned strings; the latter are borrowed\n /// references.\n ///\n@@ -64,6 +64,7 @@ use sys_common::{AsInner, IntoInner, FromInner};\n /// the traits which `OsString` implements for conversions from/to native representations.\n ///\n /// [`OsStr`]: struct.OsStr.html\n+/// [`&OsStr`]: struct.OsStr.html\n /// [`From`]: ../convert/trait.From.html\n /// [`String`]: ../string/struct.String.html\n /// [`&str`]: ../primitive.str.html\n@@ -84,7 +85,7 @@ pub struct OsString {\n /// This type represents a borrowed reference to a string in the operating system's preferred\n /// representation.\n ///\n-/// `OsStr` is to [`OsString`] as [`&str`] is to [`String`]: the former in each pair are borrowed\n+/// `&OsStr` is to [`OsString`] as [`&str`] is to [`String`]: the former in each pair are borrowed\n /// references; the latter are owned strings.\n ///\n /// See the [module's toplevel documentation about conversions][conversions] for a discussion on"}]}