{"sha": "6f915056a145628c9f31fefb842c35ec76e7d7bf", "node_id": "C_kwDOAAsO6NoAKDZmOTE1MDU2YTE0NTYyOGM5ZjMxZmVmYjg0MmMzNWVjNzZlN2Q3YmY", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-10-19T23:56:47Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-10-19T23:56:47Z"}, "message": "Don't emit a warning for empty rmeta files.", "tree": {"sha": "6b5956318d2935bd28702a325c93299a4f01d757", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b5956318d2935bd28702a325c93299a4f01d757"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f915056a145628c9f31fefb842c35ec76e7d7bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f915056a145628c9f31fefb842c35ec76e7d7bf", "html_url": "https://github.com/rust-lang/rust/commit/6f915056a145628c9f31fefb842c35ec76e7d7bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f915056a145628c9f31fefb842c35ec76e7d7bf/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af55d19c7a9189374d89472f97dc119659bb67e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af55d19c7a9189374d89472f97dc119659bb67e", "html_url": "https://github.com/rust-lang/rust/commit/1af55d19c7a9189374d89472f97dc119659bb67e"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "bbd30c9327a6c3d501b5cf0720dc28e62cda7d91", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6f915056a145628c9f31fefb842c35ec76e7d7bf/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f915056a145628c9f31fefb842c35ec76e7d7bf/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=6f915056a145628c9f31fefb842c35ec76e7d7bf", "patch": "@@ -529,6 +529,15 @@ impl<'a> CrateLocator<'a> {\n         let mut err_data: Option<Vec<PathBuf>> = None;\n         for (lib, kind) in m {\n             info!(\"{} reading metadata from: {}\", flavor, lib.display());\n+            if flavor == CrateFlavor::Rmeta && lib.metadata().map_or(false, |m| m.len() == 0) {\n+                // Empty files will cause get_metadata_section to fail. Rmeta\n+                // files can be empty, for example with binaries (which can\n+                // often appear with `cargo check` when checking a library as\n+                // a unittest). We don't want to emit a user-visible warning\n+                // in this case as it is not a real problem.\n+                debug!(\"skipping empty file\");\n+                continue;\n+            }\n             let (hash, metadata) =\n                 match get_metadata_section(self.target, flavor, &lib, self.metadata_loader) {\n                     Ok(blob) => {"}]}