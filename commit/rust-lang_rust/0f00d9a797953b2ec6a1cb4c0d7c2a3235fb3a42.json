{"sha": "0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMDBkOWE3OTc5NTNiMmVjNmExY2I0YzBkN2MyYTMyMzVmYjNhNDI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-23T16:11:21Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-23T16:11:21Z"}, "message": "Adjust fuzzer and cargo to changes in core::str API", "tree": {"sha": "30c96deca4ed4057d7a240b6582b422a05d4cda6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30c96deca4ed4057d7a240b6582b422a05d4cda6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42", "html_url": "https://github.com/rust-lang/rust/commit/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "780f8277f44bb2eddaf6c516d60b0a6b9b557a5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/780f8277f44bb2eddaf6c516d60b0a6b9b557a5b", "html_url": "https://github.com/rust-lang/rust/commit/780f8277f44bb2eddaf6c516d60b0a6b9b557a5b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ea5953fdf89063c496697b5ea8ed470dd19ab45b", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42", "patch": "@@ -686,7 +686,7 @@ fn cmd_install(c: cargo) unsafe {\n \n     if str::starts_with(target, \"uuid:\") {\n         let uuid = rest(target, 5u);\n-        alt str::index(uuid, '/') {\n+        alt str::find_char(uuid, '/') {\n             option::some(idx) {\n                let source = str::slice(uuid, 0u, idx);\n                uuid = str::slice(uuid, idx + 1u, str::len(uuid));\n@@ -698,7 +698,7 @@ fn cmd_install(c: cargo) unsafe {\n         }\n     } else {\n         let name = target;\n-        alt str::index(name, '/') {\n+        alt str::find_char(name, '/') {\n             option::some(idx) {\n                let source = str::slice(name, 0u, idx);\n                name = str::slice(name, idx + 1u, str::len(name));"}, {"sha": "cdd31bb94f6343e33b1c22eb6fb33b155c651ed5", "filename": "src/cargo/pgp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42/src%2Fcargo%2Fpgp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42/src%2Fcargo%2Fpgp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fpgp.rs?ref=0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42", "patch": "@@ -94,7 +94,7 @@ fn verify(root: str, data: str, sig: str, keyfp: str) -> bool {\n     let p = gpg([\"--homedir\", path, \"--with-fingerprint\", \"--verify\", sig,\n                  data]);\n     let res = \"Primary key fingerprint: \" + keyfp;\n-    for line in str::split_byte(p.err, '\\n' as u8) {\n+    for line in str::split_char(p.err, '\\n') {\n         if line == res {\n             ret true;\n         }"}, {"sha": "68bdd035d9c2362c747c7bd455feb8af60a4f776", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=0f00d9a797953b2ec6a1cb4c0d7c2a3235fb3a42", "patch": "@@ -286,7 +286,7 @@ fn check_variants_T<T: copy>(\n }\n \n fn last_part(filename: str) -> str {\n-  let ix = option::get(str::rindex(filename, '/'));\n+  let ix = option::get(str::rfind_char(filename, '/'));\n   str::slice(filename, ix + 1u, str::len(filename) - 3u)\n }\n "}]}