{"sha": "5b6c1a2950ba2a8b6377a387f666b0e50c45fc4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNmMxYTI5NTBiYTJhOGI2Mzc3YTM4N2Y2NjZiMGU1MGM0NWZjNGY=", "commit": {"author": {"name": "Michael Arntzenius", "email": "daekharel@gmail.com", "date": "2012-12-03T01:01:28Z"}, "committer": {"name": "Michael Arntzenius", "email": "daekharel@gmail.com", "date": "2012-12-03T01:01:28Z"}, "message": "call out to iter_bytes_{2,3} in IterBytes instances for pairs, triples\n\nThis means we will exit early if requested based on the return value of the\ncallback we're given.", "tree": {"sha": "12adffd835c225ec9adfc3d77fb65c87c8b4b38e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12adffd835c225ec9adfc3d77fb65c87c8b4b38e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b6c1a2950ba2a8b6377a387f666b0e50c45fc4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6c1a2950ba2a8b6377a387f666b0e50c45fc4f", "html_url": "https://github.com/rust-lang/rust/commit/5b6c1a2950ba2a8b6377a387f666b0e50c45fc4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b6c1a2950ba2a8b6377a387f666b0e50c45fc4f/comments", "author": {"login": "rntz", "id": 16143, "node_id": "MDQ6VXNlcjE2MTQz", "avatar_url": "https://avatars.githubusercontent.com/u/16143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rntz", "html_url": "https://github.com/rntz", "followers_url": "https://api.github.com/users/rntz/followers", "following_url": "https://api.github.com/users/rntz/following{/other_user}", "gists_url": "https://api.github.com/users/rntz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rntz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rntz/subscriptions", "organizations_url": "https://api.github.com/users/rntz/orgs", "repos_url": "https://api.github.com/users/rntz/repos", "events_url": "https://api.github.com/users/rntz/events{/privacy}", "received_events_url": "https://api.github.com/users/rntz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rntz", "id": 16143, "node_id": "MDQ6VXNlcjE2MTQz", "avatar_url": "https://avatars.githubusercontent.com/u/16143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rntz", "html_url": "https://github.com/rntz", "followers_url": "https://api.github.com/users/rntz/followers", "following_url": "https://api.github.com/users/rntz/following{/other_user}", "gists_url": "https://api.github.com/users/rntz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rntz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rntz/subscriptions", "organizations_url": "https://api.github.com/users/rntz/orgs", "repos_url": "https://api.github.com/users/rntz/repos", "events_url": "https://api.github.com/users/rntz/events{/privacy}", "received_events_url": "https://api.github.com/users/rntz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef2c404e01108a7bd7465bd23d40ff989848bffd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef2c404e01108a7bd7465bd23d40ff989848bffd", "html_url": "https://github.com/rust-lang/rust/commit/ef2c404e01108a7bd7465bd23d40ff989848bffd"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "4ffa24e014e6214d30ebe071fec195fec9df5809", "filename": "src/libcore/to_bytes.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5b6c1a2950ba2a8b6377a387f666b0e50c45fc4f/src%2Flibcore%2Fto_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6c1a2950ba2a8b6377a387f666b0e50c45fc4f/src%2Flibcore%2Fto_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fto_bytes.rs?ref=5b6c1a2950ba2a8b6377a387f666b0e50c45fc4f", "patch": "@@ -196,8 +196,7 @@ impl<A: IterBytes, B: IterBytes> (A,B): IterBytes {\n   pure fn iter_bytes(lsb0: bool, f: Cb) {\n     match self {\n       (ref a, ref b) => {\n-        a.iter_bytes(lsb0, f);\n-        b.iter_bytes(lsb0, f);\n+        iter_bytes_2(a, b, lsb0, f);\n       }\n     }\n   }\n@@ -208,9 +207,7 @@ impl<A: IterBytes, B: IterBytes, C: IterBytes> (A,B,C): IterBytes {\n   pure fn iter_bytes(lsb0: bool, f: Cb) {\n     match self {\n       (ref a, ref b, ref c) => {\n-        a.iter_bytes(lsb0, f);\n-        b.iter_bytes(lsb0, f);\n-        c.iter_bytes(lsb0, f);\n+        iter_bytes_3(a, b, c, lsb0, f);\n       }\n     }\n   }"}]}