{"sha": "10a5b539c7f9db4930f0cadad3805fd66464ecf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYTViNTM5YzdmOWRiNDkzMGYwY2FkYWQzODA1ZmQ2NjQ2NGVjZjk=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-08T15:06:28Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-08T15:06:28Z"}, "message": "simplify", "tree": {"sha": "24d797d198f9790b63c4b4c84423774d113a56d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24d797d198f9790b63c4b4c84423774d113a56d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10a5b539c7f9db4930f0cadad3805fd66464ecf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10a5b539c7f9db4930f0cadad3805fd66464ecf9", "html_url": "https://github.com/rust-lang/rust/commit/10a5b539c7f9db4930f0cadad3805fd66464ecf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10a5b539c7f9db4930f0cadad3805fd66464ecf9/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72c92b3233472c7aaf756a4fd02678f065d2f633", "url": "https://api.github.com/repos/rust-lang/rust/commits/72c92b3233472c7aaf756a4fd02678f065d2f633", "html_url": "https://github.com/rust-lang/rust/commit/72c92b3233472c7aaf756a4fd02678f065d2f633"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "47c8fd02330f7f9633fd21a8c60bae674cf596c8", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/10a5b539c7f9db4930f0cadad3805fd66464ecf9/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10a5b539c7f9db4930f0cadad3805fd66464ecf9/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=10a5b539c7f9db4930f0cadad3805fd66464ecf9", "patch": "@@ -88,15 +88,7 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n                 if let TerminatorKind::Call {\n                     func: Operand::Constant(ref f), .. } = terminator.kind {\n                     if let ty::TyFnDef(callee_def_id, substs) = f.ty.sty {\n-                        let should_inline = match self.tcx.opt_associated_item(callee_def_id) {\n-                            Some(item) => match item.container {\n-                               ty::AssociatedItemContainer::ImplContainer(_) => true,\n-                               ty::AssociatedItemContainer::TraitContainer(_) => false,\n-                            },\n-                            None => true\n-                        };\n-\n-                        if should_inline {\n+                        if self.tcx.trait_of_item(callee_def_id).is_none() {\n                             callsites.push_back(CallSite {\n                                 callee: callee_def_id,\n                                 substs,"}]}