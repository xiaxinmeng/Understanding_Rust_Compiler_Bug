{"sha": "c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZjczZWQ4MGM5YzM3Y2NlYWEyNWVkMjBjMGY4OGY5ZDMyNGJkOGM=", "commit": {"author": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-02-07T22:57:01Z"}, "committer": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-02-08T19:08:19Z"}, "message": "Implement fmt::Pointer for pointers to unsized types\n\nThis allows printing pointers to unsized types with the {:p} formatting\ndirective. The following impls are extended to unsized types:\n - impl<'a, T: ?Sized> Pointer for &'a T\n - impl<'a, T: ?Sized> Pointer for &'a mut T\n - impl<T: ?Sized> Pointer for *const T\n - impl<T: ?Sized> Pointer for *mut T\n - impl<T: ?Sized> fmt::Pointer for Box<T>\n - impl<T: ?Sized> fmt::Pointer for Rc<T>\n - impl<T: ?Sized> fmt::Pointer for Arc<T>", "tree": {"sha": "74e9d197244f8f2fba5a2ac2afde8f52201e6c30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74e9d197244f8f2fba5a2ac2afde8f52201e6c30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "html_url": "https://github.com/rust-lang/rust/commit/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/comments", "author": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26105b1a3765a73bab44fb18ccbd5a4635018fdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/26105b1a3765a73bab44fb18ccbd5a4635018fdf", "html_url": "https://github.com/rust-lang/rust/commit/26105b1a3765a73bab44fb18ccbd5a4635018fdf"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "fa0185d5cfd96c81bc7a3c9ba1ae266c77e8cbd9", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "patch": "@@ -879,7 +879,7 @@ impl<T: ?Sized + fmt::Debug> fmt::Debug for Arc<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> fmt::Pointer for Arc<T> {\n+impl<T: ?Sized> fmt::Pointer for Arc<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Pointer::fmt(&*self._ptr, f)\n     }"}, {"sha": "a7cd59d4dfe3c7313c24b5b8432edb56ffbecb52", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "patch": "@@ -442,7 +442,7 @@ impl<T: fmt::Debug + ?Sized> fmt::Debug for Box<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> fmt::Pointer for Box<T> {\n+impl<T: ?Sized> fmt::Pointer for Box<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         // It's not possible to extract the inner Uniq directly from the Box,\n         // instead we cast it to a *const which aliases the Unique"}, {"sha": "162312e2457da8a1885286a6a94d9cb1de586951", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "patch": "@@ -688,7 +688,7 @@ impl<T: ?Sized + fmt::Debug> fmt::Debug for Rc<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> fmt::Pointer for Rc<T> {\n+impl<T: ?Sized> fmt::Pointer for Rc<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Pointer::fmt(&*self._ptr, f)\n     }"}, {"sha": "28db24d3147c09c4fe20270e5d6ca63b6a3993d3", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "patch": "@@ -1384,7 +1384,7 @@ impl Display for char {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> Pointer for *const T {\n+impl<T: ?Sized> Pointer for *const T {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         let old_width = f.width;\n         let old_flags = f.flags;\n@@ -1402,7 +1402,7 @@ impl<T> Pointer for *const T {\n         }\n         f.flags |= 1 << (FlagV1::Alternate as u32);\n \n-        let ret = LowerHex::fmt(&(*self as usize), f);\n+        let ret = LowerHex::fmt(&(*self as *const () as usize), f);\n \n         f.width = old_width;\n         f.flags = old_flags;\n@@ -1412,7 +1412,7 @@ impl<T> Pointer for *const T {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> Pointer for *mut T {\n+impl<T: ?Sized> Pointer for *mut T {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         // FIXME(#23542) Replace with type ascription.\n         #![allow(trivial_casts)]\n@@ -1421,7 +1421,7 @@ impl<T> Pointer for *mut T {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, T> Pointer for &'a T {\n+impl<'a, T: ?Sized> Pointer for &'a T {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         // FIXME(#23542) Replace with type ascription.\n         #![allow(trivial_casts)]\n@@ -1430,7 +1430,7 @@ impl<'a, T> Pointer for &'a T {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, T> Pointer for &'a mut T {\n+impl<'a, T: ?Sized> Pointer for &'a mut T {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         // FIXME(#23542) Replace with type ascription.\n         #![allow(trivial_casts)]"}, {"sha": "ed33596e1c264562ab48e0c3d4ef3e11912172e6", "filename": "src/libcoretest/fmt/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Flibcoretest%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c/src%2Flibcoretest%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Ffmt%2Fmod.rs?ref=c5f73ed80c9c37cceaa25ed20c0f88f9d324bd8c", "patch": "@@ -20,3 +20,11 @@ fn test_format_flags() {\n \n     assert_eq!(format!(\"{: >3}\", 'a'), \"  a\");\n }\n+\n+#[test]\n+fn test_pointer_formats_data_pointer() {\n+    let b: &[u8] = b\"\";\n+    let s: &str = \"\";\n+    assert_eq!(format!(\"{:p}\", s), format!(\"{:p}\", s.as_ptr()));\n+    assert_eq!(format!(\"{:p}\", b), format!(\"{:p}\", b.as_ptr()));\n+}"}]}