{"sha": "6cb5c0980a14aaad0c676a88160726de52cac456", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYjVjMDk4MGExNGFhYWQwYzY3NmE4ODE2MDcyNmRlNTJjYWM0NTY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-13T08:50:16Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-13T08:50:16Z"}, "message": "box patterns, expect for the trans part", "tree": {"sha": "fedeab05fa4ac7578c99351c14bf4cda12079225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fedeab05fa4ac7578c99351c14bf4cda12079225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cb5c0980a14aaad0c676a88160726de52cac456", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb5c0980a14aaad0c676a88160726de52cac456", "html_url": "https://github.com/rust-lang/rust/commit/6cb5c0980a14aaad0c676a88160726de52cac456", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cb5c0980a14aaad0c676a88160726de52cac456/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6914d32accd7cc3c29697bf0e2974e654558fe07", "url": "https://api.github.com/repos/rust-lang/rust/commits/6914d32accd7cc3c29697bf0e2974e654558fe07", "html_url": "https://github.com/rust-lang/rust/commit/6914d32accd7cc3c29697bf0e2974e654558fe07"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "e5b42c7f907678bf61a0d49239450bdee5100234", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -312,6 +312,7 @@ fn arm_defnums(&ast::arm arm) -> vec[node_id] {\n             case (ast::pat_rec(?fields, _)) {\n                 for (ast::field_pat f in fields) { walk_pat(found, f.pat); }\n             }\n+            case (ast::pat_box(?inner)) { walk_pat(found, inner); }\n             case (_) { }\n         }\n     }"}, {"sha": "da7d4b1494fcf5a9ba737f11e672bf5ba6f2dd23", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -311,6 +311,7 @@ fn resolve_names(&@env e, &@ast::crate c) {\n             case (ast::pat_rec(?fields, _)) {\n                 for (ast::field_pat f in fields) { walk_pat(e, sc, f.pat); }\n             }\n+            case (ast::pat_box(?inner)) { walk_pat(e, sc, inner); }\n             case (_) { }\n         }\n     }\n@@ -727,6 +728,7 @@ fn lookup_in_pat(&ident name, &ast::pat pat) -> option::t[def] {\n                 if (!option::is_none(found)) { ret found; }\n             }\n         }\n+        case (ast::pat_box(?inner)) { ret lookup_in_pat(name, *inner); }\n     }\n     ret none[def];\n }\n@@ -1268,6 +1270,7 @@ fn check_arm(@env e, &ast::arm a, &() x, &vt[()] v) {\n             case (ast::pat_rec(?fields, _)) {\n                 for (ast::field_pat f in fields) { walk_pat(ch, f.pat); }\n             }\n+            case (ast::pat_box(?inner)) { walk_pat(ch, inner); }\n             case (_) { }\n         }\n     }"}, {"sha": "9a7cf3579964d226e7e664ad4527a905a0095645", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -1435,6 +1435,20 @@ fn check_pat(&@fn_ctxt fcx, &ast::pat_id_map map, &@ast::pat pat,\n             }\n             write::ty_only_fixup(fcx, pat.id, expected);\n         }\n+        case (ast::pat_box(?inner)) {\n+            alt (structure_of(fcx, pat.span, expected)) {\n+                case (ty::ty_box(?e_inner)) {\n+                    check_pat(fcx, map, inner, e_inner.ty);\n+                    write::ty_only_fixup(fcx, pat.id, expected);\n+                }\n+                case (_) {\n+                    fcx.ccx.tcx.sess.span_fatal\n+                        (pat.span, \"mismatched types: expected \" +\n+                         ty_to_str(fcx.ccx.tcx, expected) +\n+                         \" found box\");\n+                }\n+            }\n+        }\n     }\n }\n "}, {"sha": "3280c50e3da35702559fe40d434da0c3f47b3c52", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -126,6 +126,7 @@ tag pat_ {\n     pat_lit(@lit);\n     pat_tag(path, (@pat)[]);\n     pat_rec(field_pat[], bool);\n+    pat_box(@pat);\n }\n \n type pat_id_map = std::map::hashmap[str, ast::node_id];\n@@ -143,6 +144,7 @@ fn pat_id_map(&@pat pat) -> pat_id_map {\n             pat_rec(?fields, _) {\n                 for (field_pat f in fields) { walk(map, f.pat); }\n             }\n+            pat_box(?inner) { walk(map, inner); }\n             _ {}\n         }\n     }"}, {"sha": "ca2688d33e9af2d65cd29227ad84f7705acf7126", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -292,6 +292,7 @@ fn noop_fold_pat(&pat_ p, ast_fold fld) -> pat_ {\n             }\n             pat_rec(fs, etc)\n         }\n+        case (pat_box(?inner)) { pat_box(fld.fold_pat(inner)) }\n     };\n }\n "}, {"sha": "fb9eca8640df9ed1fb09add4e38163c54b69ad71", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -1459,6 +1459,12 @@ fn parse_pat(&parser p) -> @ast::pat {\n                 }\n             }\n         }\n+        case (token::AT) {\n+            p.bump();\n+            auto sub = parse_pat(p);\n+            pat = ast::pat_box(sub);\n+            hi = sub.span.hi;\n+        }\n         case (token::LBRACE) {\n             p.bump();\n             auto fields = ~[];\n@@ -2313,9 +2319,8 @@ fn parse_rest_import_name(&parser p, ast::ident first,\n         }\n         alt (p.peek()) {\n             case (token::IDENT(_, _)) { identifiers += ~[parse_ident(p)]; }\n-            case (\n-                 //the lexer can't tell the different kinds of stars apart ) :\n-                 token::BINOP(token::STAR)) {\n+            //the lexer can't tell the different kinds of stars apart ) :\n+            case (token::BINOP(token::STAR)) {\n                 glob = true;\n                 p.bump();\n             }"}, {"sha": "df573020618f3b62f8e9b5c1e0ada0e27706cf8a", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -1136,6 +1136,10 @@ fn print_pat(&ps s, &@ast::pat pat) {\n             }\n             word(s.s, \"}\");\n         }\n+        case (ast::pat_box(?inner)) {\n+            word(s.s, \"@\");\n+            print_pat(s, inner);\n+        }\n     }\n     s.ann.post(ann_node);\n }"}, {"sha": "83bf548efeeb5e3ff1d38b1c6721c46b6683d860", "filename": "src/comp/syntax/visit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fvisit.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -200,6 +200,7 @@ fn visit_pat[E](&@pat p, &E e, &vt[E] v) {\n         case (pat_rec(?fields, _)) {\n             for (field_pat f in fields) { v.visit_pat(f.pat, e, v); }\n         }\n+        case (pat_box(?inner)) { v.visit_pat(inner, e, v); }\n         case (_) { }\n     }\n }"}, {"sha": "ad2edb980b1f784ab931151b04f078bf8c7ce749", "filename": "src/comp/syntax/walk.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb5c0980a14aaad0c676a88160726de52cac456/src%2Fcomp%2Fsyntax%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fwalk.rs?ref=6cb5c0980a14aaad0c676a88160726de52cac456", "patch": "@@ -192,6 +192,7 @@ fn walk_pat(&ast_visitor v, &@ast::pat p) {\n         case (ast::pat_rec(?fields, _)) {\n             for (ast::field_pat f in fields) { walk_pat(v, f.pat); }\n         }\n+        case (ast::pat_box(?inner)) { walk_pat(v, inner); }\n         case (_) { }\n     }\n     v.visit_pat_post(p);"}]}