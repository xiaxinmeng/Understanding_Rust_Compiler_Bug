{"sha": "d240490229b31e1ebd6871a08ee2cefeb580ba78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNDA0OTAyMjliMzFlMWViZDY4NzFhMDhlZTJjZWZlYjU4MGJhNzg=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-06T22:50:23Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-06T22:53:12Z"}, "message": "Fix outdated code", "tree": {"sha": "ed6a34674eaea202d05c96dce81394405f2cca1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed6a34674eaea202d05c96dce81394405f2cca1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d240490229b31e1ebd6871a08ee2cefeb580ba78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d240490229b31e1ebd6871a08ee2cefeb580ba78", "html_url": "https://github.com/rust-lang/rust/commit/d240490229b31e1ebd6871a08ee2cefeb580ba78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d240490229b31e1ebd6871a08ee2cefeb580ba78/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef54cde625966d4c103e067506ba31b3b79efec4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef54cde625966d4c103e067506ba31b3b79efec4", "html_url": "https://github.com/rust-lang/rust/commit/ef54cde625966d4c103e067506ba31b3b79efec4"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "00169530381cd729b199a667d0d0e575a881c903", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d240490229b31e1ebd6871a08ee2cefeb580ba78/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d240490229b31e1ebd6871a08ee2cefeb580ba78/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=d240490229b31e1ebd6871a08ee2cefeb580ba78", "patch": "@@ -767,8 +767,6 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n                 // Disallow e.g. linking to enums with `struct@`\n                 if let Res::Def(kind, id) = res {\n                     debug!(\"saw kind {:?} with disambiguator {:?}\", kind, disambiguator);\n-                    // NOTE: this relies on the fact that `''` is never parsed as a disambiguator\n-                    // NOTE: this needs to be kept in sync with the disambiguator parsing\n                     match (self.kind_side_channel.take().unwrap_or(kind), disambiguator) {\n                         | (DefKind::Const | DefKind::ConstParam | DefKind::AssocConst | DefKind::AnonConst, Some(Disambiguator::Kind(DefKind::Const)))\n                         // NOTE: this allows 'method' to mean both normal functions and associated functions\n@@ -780,7 +778,7 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n                         | (_, None)\n                         // All of these are valid, so do nothing\n                         => {}\n-                        (_, Some(Disambiguator::Kind(expected))) if kind == expected => {}\n+                        (actual, Some(Disambiguator::Kind(expected))) if actual == expected => {}\n                         (_, Some(expected)) => {\n                             // The resolved item did not match the disambiguator; give a better error than 'not found'\n                             let msg = format!(\"incompatible link kind for `{}`\", path_str);"}, {"sha": "54270414c9dfe818e9ab51b5fc6c115ca6727ef8", "filename": "src/test/rustdoc/intra-link-trait-item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d240490229b31e1ebd6871a08ee2cefeb580ba78/src%2Ftest%2Frustdoc%2Fintra-link-trait-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d240490229b31e1ebd6871a08ee2cefeb580ba78/src%2Ftest%2Frustdoc%2Fintra-link-trait-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-trait-item.rs?ref=d240490229b31e1ebd6871a08ee2cefeb580ba78", "patch": "@@ -1,10 +1,10 @@\n-// allow-tidy-line-length\n+// ignore-tidy-linelength\n #![deny(broken_intra_doc_links)]\n \n /// Link to [S::assoc_fn()]\n /// Link to [Default::default()]\n-// @has intra_link_trait_item/struct.S.html '//*[@href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\"]' 'Default::default()'\n-// @has - '//*[@href=\"../intra_link_trait_item/struct.S.html#method.assoc_fn\"]' 'S::assoc_fn()'\n+// @has intra_link_trait_item/struct.S.html '//*[@href=\"../intra_link_trait_item/struct.S.html#method.assoc_fn\"]' 'S::assoc_fn()'\n+// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\"]' 'Default::default()'\n pub struct S;\n \n impl S {"}]}