{"sha": "fac6da1cfb3f00081934b9c2df874f09cd55259a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYzZkYTFjZmIzZjAwMDgxOTM0YjljMmRmODc0ZjA5Y2Q1NTI1OWE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-03-09T13:40:59Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-03-11T14:27:26Z"}, "message": "move testfiles to \"lintcheck\" and fix more paths", "tree": {"sha": "10d69f2336a7a589e92602e8b2b478997ca2f106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10d69f2336a7a589e92602e8b2b478997ca2f106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fac6da1cfb3f00081934b9c2df874f09cd55259a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fac6da1cfb3f00081934b9c2df874f09cd55259a", "html_url": "https://github.com/rust-lang/rust/commit/fac6da1cfb3f00081934b9c2df874f09cd55259a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fac6da1cfb3f00081934b9c2df874f09cd55259a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c76015098941c1bb582893fe7fbf9227d0ef796f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c76015098941c1bb582893fe7fbf9227d0ef796f", "html_url": "https://github.com/rust-lang/rust/commit/c76015098941c1bb582893fe7fbf9227d0ef796f"}], "stats": {"total": 74, "additions": 14, "deletions": 60}, "files": [{"sha": "9b5add4df1c12291566125daaeebbf27956dfa30", "filename": ".cargo/config", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fac6da1cfb3f00081934b9c2df874f09cd55259a/.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/fac6da1cfb3f00081934b9c2df874f09cd55259a/.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cargo%2Fconfig?ref=fac6da1cfb3f00081934b9c2df874f09cd55259a", "patch": "@@ -1,7 +1,7 @@\n [alias]\n uitest = \"test --test compile-test\"\n dev = \"run --target-dir clippy_dev/target --package clippy_dev --bin clippy_dev --manifest-path clippy_dev/Cargo.toml --\"\n-dev-lintcheck = \"run --target-dir lintcheck/target --package lintcheck --bin lintcheck --manifest-path lintcheck/Cargo.toml  -- \"\n+lintcheck = \"run --target-dir lintcheck/target --package lintcheck --bin lintcheck --manifest-path lintcheck/Cargo.toml  -- \"\n \n [build]\n rustflags = [\"-Zunstable-options\"]"}, {"sha": "dfee28f1a87128e0e4ef92472e72ba5968e55a7d", "filename": "clippy_dev/lintcheck_crates.toml", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c76015098941c1bb582893fe7fbf9227d0ef796f/clippy_dev%2Flintcheck_crates.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c76015098941c1bb582893fe7fbf9227d0ef796f/clippy_dev%2Flintcheck_crates.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Flintcheck_crates.toml?ref=c76015098941c1bb582893fe7fbf9227d0ef796f", "patch": "@@ -1,35 +0,0 @@\n-[crates]\n-# some of these are from cargotest\n-cargo = {name = \"cargo\", versions = ['0.49.0']}\n-iron = {name = \"iron\", versions = ['0.6.1']}\n-ripgrep = {name = \"ripgrep\", versions = ['12.1.1']}\n-xsv = {name = \"xsv\", versions = ['0.13.0']}\n-# commented out because of 173K clippy::match_same_arms msgs in language_type.rs\n-#tokei = { name = \"tokei\", versions = ['12.0.4']}\n-rayon = {name = \"rayon\", versions = ['1.5.0']}\n-serde = {name = \"serde\", versions = ['1.0.118']}\n-# top 10 crates.io dls\n-bitflags = {name = \"bitflags\", versions = ['1.2.1']}\n-# crash = {name = \"clippy_crash\", path = \"/tmp/clippy_crash\"}\n-libc = {name = \"libc\", versions = ['0.2.81']}\n-log = {name = \"log\", versions = ['0.4.11']}\n-proc-macro2 = {name = \"proc-macro2\", versions = ['1.0.24']}\n-quote = {name = \"quote\", versions = ['1.0.7']}\n-rand = {name = \"rand\", versions = ['0.7.3']}\n-rand_core = {name = \"rand_core\", versions = ['0.6.0']}\n-regex = {name = \"regex\", versions = ['1.3.2']}\n-syn = {name = \"syn\", versions = ['1.0.54']}\n-unicode-xid = {name = \"unicode-xid\", versions = ['0.2.1']}\n-# some more of dtolnays crates\n-anyhow = {name = \"anyhow\", versions = ['1.0.38']}\n-async-trait = {name = \"async-trait\", versions = ['0.1.42']}\n-cxx = {name = \"cxx\", versions = ['1.0.32']}\n-ryu = {name = \"ryu\", version = ['1.0.5']}\n-serde_yaml = {name = \"serde_yaml\", versions = ['0.8.17']}\n-thiserror = {name = \"thiserror\", versions = ['1.0.24']}\n-# some embark crates, there are other interesting crates but\n-# unfortunately adding them increases lintcheck runtime drastically\n-cfg-expr = {name = \"cfg-expr\", versions = ['0.7.1']}\n-puffin = {name = \"puffin\", git_url = \"https://github.com/EmbarkStudios/puffin\", git_hash = \"02dd4a3\"}\n-rpmalloc = {name = \"rpmalloc\", versions = ['0.2.0']}\n-tame-oidc = {name = \"tame-oidc\", versions = ['0.1.0']}"}, {"sha": "c027f11dfe9c14577c0d892baadf16e8e4518be6", "filename": "lintcheck/src/main.rs", "status": "modified", "additions": 13, "deletions": 24, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fac6da1cfb3f00081934b9c2df874f09cd55259a/lintcheck%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fac6da1cfb3f00081934b9c2df874f09cd55259a/lintcheck%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2Fsrc%2Fmain.rs?ref=fac6da1cfb3f00081934b9c2df874f09cd55259a", "patch": "@@ -16,7 +16,7 @@ use std::{\n     path::{Path, PathBuf},\n };\n \n-use clap::{App, Arg, ArgMatches, SubCommand};\n+use clap::{App, Arg, ArgMatches};\n use rayon::prelude::*;\n use serde::{Deserialize, Serialize};\n use serde_json::Value;\n@@ -337,12 +337,12 @@ impl LintcheckConfig {\n     fn from_clap(clap_config: &ArgMatches) -> Self {\n         // first, check if we got anything passed via the LINTCHECK_TOML env var,\n         // if not, ask clap if we got any value for --crates-toml  <foo>\n-        // if not, use the default \"clippy_dev/lintcheck_crates.toml\"\n+        // if not, use the default \"lintcheck/lintcheck_crates.toml\"\n         let sources_toml = env::var(\"LINTCHECK_TOML\").unwrap_or_else(|_| {\n             clap_config\n                 .value_of(\"crates-toml\")\n                 .clone()\n-                .unwrap_or(\"clippy_dev/lintcheck_crates.toml\")\n+                .unwrap_or(\"lintcheck/lintcheck_crates.toml\")\n                 .to_string()\n         });\n \n@@ -576,7 +576,7 @@ fn is_in_clippy_root() -> bool {\n pub fn main() {\n     // assert that we launch lintcheck from the repo root (via cargo dev-lintcheck)\n     if !is_in_clippy_root() {\n-        eprintln!(\"lintcheck needs to be run from clippys repo root!\\nUse `cargo dev-lintcheck` alternatively.\");\n+        eprintln!(\"lintcheck needs to be run from clippys repo root!\\nUse `cargo lintcheck` alternatively.\");\n         std::process::exit(3);\n     }\n \n@@ -638,7 +638,7 @@ pub fn main() {\n             name == only_one_crate\n         }) {\n             eprintln!(\n-                \"ERROR: could not find crate '{}' in clippy_dev/lintcheck_crates.toml\",\n+                \"ERROR: could not find crate '{}' in lintcheck/lintcheck_crates.toml\",\n                 only_one_crate\n             );\n             std::process::exit(1);\n@@ -818,7 +818,7 @@ fn create_dirs(krate_download_dir: &Path, extract_dir: &Path) {\n }\n \n fn get_clap_config<'a>() -> ArgMatches<'a> {\n-    let lintcheck_sbcmd = SubCommand::with_name(\"lintcheck\")\n+    App::new(\"lintcheck\")\n         .about(\"run clippy on a set of crates and check output\")\n         .arg(\n             Arg::with_name(\"only\")\n@@ -842,13 +842,8 @@ fn get_clap_config<'a>() -> ArgMatches<'a> {\n                 .long(\"jobs\")\n                 .help(\"number of threads to use, 0 automatic choice\"),\n         )\n-        .arg(Arg::with_name(\"fix\").help(\"runs cargo clippy --fix and checks if all suggestions apply\"));\n-\n-    let app = App::new(\"Clippy developer tooling\");\n-\n-    let app = app.subcommand(lintcheck_sbcmd);\n-\n-    app.get_matches()\n+        .arg(Arg::with_name(\"fix\").help(\"runs cargo clippy --fix and checks if all suggestions apply\"))\n+        .get_matches()\n }\n \n /// Returns the path to the Clippy project directory\n@@ -881,24 +876,18 @@ fn lintcheck_test() {\n     let args = [\n         \"run\",\n         \"--target-dir\",\n-        \"clippy_dev/target\",\n-        \"--package\",\n-        \"clippy_dev\",\n-        \"--bin\",\n-        \"clippy_dev\",\n+        \"lintcheck/target\",\n         \"--manifest-path\",\n-        \"clippy_dev/Cargo.toml\",\n-        \"--features\",\n-        \"lintcheck\",\n+        \"./lintcheck/Cargo.toml\",\n         \"--\",\n-        \"lintcheck\",\n         \"--crates-toml\",\n-        \"clippy_dev/test_sources.toml\",\n+        \"lintcheck/test_sources.toml\",\n     ];\n     let status = std::process::Command::new(\"cargo\")\n         .args(&args)\n-        .current_dir(\"../\" /* repo root */)\n+        .current_dir(\"..\") // repo root\n         .status();\n+    //.output();\n \n     assert!(status.unwrap().success());\n }"}, {"sha": "4b0eb71ef4bfe1fa01c103e0c3e8be283ba18b1e", "filename": "lintcheck/test_sources.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/fac6da1cfb3f00081934b9c2df874f09cd55259a/lintcheck%2Ftest_sources.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fac6da1cfb3f00081934b9c2df874f09cd55259a/lintcheck%2Ftest_sources.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2Ftest_sources.toml?ref=fac6da1cfb3f00081934b9c2df874f09cd55259a", "previous_filename": "clippy_dev/test_sources.toml"}]}