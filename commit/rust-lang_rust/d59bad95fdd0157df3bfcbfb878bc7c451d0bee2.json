{"sha": "d59bad95fdd0157df3bfcbfb878bc7c451d0bee2", "node_id": "C_kwDOAAsO6NoAKGQ1OWJhZDk1ZmRkMDE1N2RmM2JmY2JmYjg3OGJjN2M0NTFkMGJlZTI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-13T13:03:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-13T13:03:30Z"}, "message": "fix data_race test", "tree": {"sha": "322dd74d78b034af28508dc3641dc3ce97b89f17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/322dd74d78b034af28508dc3641dc3ce97b89f17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d59bad95fdd0157df3bfcbfb878bc7c451d0bee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d59bad95fdd0157df3bfcbfb878bc7c451d0bee2", "html_url": "https://github.com/rust-lang/rust/commit/d59bad95fdd0157df3bfcbfb878bc7c451d0bee2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d59bad95fdd0157df3bfcbfb878bc7c451d0bee2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7df41a77b821946e2f187d938e4bc9ef49e03f79", "url": "https://api.github.com/repos/rust-lang/rust/commits/7df41a77b821946e2f187d938e4bc9ef49e03f79", "html_url": "https://github.com/rust-lang/rust/commit/7df41a77b821946e2f187d938e4bc9ef49e03f79"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "9c7030db3db8b73ef70e0ea71407e321d6557046", "filename": "tests/pass/concurrency/data_race.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d59bad95fdd0157df3bfcbfb878bc7c451d0bee2/tests%2Fpass%2Fconcurrency%2Fdata_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d59bad95fdd0157df3bfcbfb878bc7c451d0bee2/tests%2Fpass%2Fconcurrency%2Fdata_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fdata_race.rs?ref=d59bad95fdd0157df3bfcbfb878bc7c451d0bee2", "patch": "@@ -1,5 +1,5 @@\n //@ignore-target-windows: Concurrency on Windows is not supported yet.\n-//@compile-flags: -Zmiri-disable-weak-memory-emulation\n+//@compile-flags: -Zmiri-disable-weak-memory-emulation -Zmiri-preemption-rate=0\n \n use std::sync::atomic::{fence, AtomicUsize, Ordering};\n use std::thread::spawn;\n@@ -10,9 +10,9 @@ struct EvilSend<T>(pub T);\n unsafe impl<T> Send for EvilSend<T> {}\n unsafe impl<T> Sync for EvilSend<T> {}\n \n-static SYNC: AtomicUsize = AtomicUsize::new(0);\n-\n fn test_fence_sync() {\n+    static SYNC: AtomicUsize = AtomicUsize::new(0);\n+\n     let mut var = 0u32;\n     let ptr = &mut var as *mut u32;\n     let evil_ptr = EvilSend(ptr);\n@@ -28,7 +28,7 @@ fn test_fence_sync() {\n             fence(Ordering::Acquire);\n             unsafe { *evil_ptr.0 }\n         } else {\n-            0\n+            panic!(); // relies on thread 2 going last\n         }\n     });\n \n@@ -56,6 +56,8 @@ fn test_multiple_reads() {\n }\n \n pub fn test_rmw_no_block() {\n+    static SYNC: AtomicUsize = AtomicUsize::new(0);\n+\n     let mut a = 0u32;\n     let b = &mut a as *mut u32;\n     let c = EvilSend(b);\n@@ -77,11 +79,13 @@ pub fn test_rmw_no_block() {\n         j1.join().unwrap();\n         j2.join().unwrap();\n         let v = j3.join().unwrap();\n-        assert!(v == 1 || v == 2);\n+        assert!(v == 1 || v == 2); // relies on thread 3 going last\n     }\n }\n \n pub fn test_simple_release() {\n+    static SYNC: AtomicUsize = AtomicUsize::new(0);\n+\n     let mut a = 0u32;\n     let b = &mut a as *mut u32;\n     let c = EvilSend(b);\n@@ -95,7 +99,7 @@ pub fn test_simple_release() {\n         let j2 = spawn(move || if SYNC.load(Ordering::Acquire) == 1 { *c.0 } else { 0 });\n \n         j1.join().unwrap();\n-        assert_eq!(j2.join().unwrap(), 1);\n+        assert_eq!(j2.join().unwrap(), 1); // relies on thread 2 going last\n     }\n }\n "}]}