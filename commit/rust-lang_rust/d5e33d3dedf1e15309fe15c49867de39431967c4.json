{"sha": "d5e33d3dedf1e15309fe15c49867de39431967c4", "node_id": "C_kwDOAAsO6NoAKGQ1ZTMzZDNkZWRmMWUxNTMwOWZlMTVjNDk4NjdkZTM5NDMxOTY3YzQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-02-13T15:27:59Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-01T15:39:19Z"}, "message": "Shorten def_span for more items.", "tree": {"sha": "126fb67fc5aaf9f557712797bfdd10d3754270e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/126fb67fc5aaf9f557712797bfdd10d3754270e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5e33d3dedf1e15309fe15c49867de39431967c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e33d3dedf1e15309fe15c49867de39431967c4", "html_url": "https://github.com/rust-lang/rust/commit/d5e33d3dedf1e15309fe15c49867de39431967c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5e33d3dedf1e15309fe15c49867de39431967c4/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09f5df5087c1d045db3bbf1b886702ec343a2f61", "url": "https://api.github.com/repos/rust-lang/rust/commits/09f5df5087c1d045db3bbf1b886702ec343a2f61", "html_url": "https://github.com/rust-lang/rust/commit/09f5df5087c1d045db3bbf1b886702ec343a2f61"}], "stats": {"total": 51, "additions": 18, "deletions": 33}, "files": [{"sha": "b6097710dc689064c317e9827b945bbd69d41492", "filename": "clippy_lints/src/operators/numeric_arithmetic.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d5e33d3dedf1e15309fe15c49867de39431967c4/clippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e33d3dedf1e15309fe15c49867de39431967c4/clippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs?ref=d5e33d3dedf1e15309fe15c49867de39431967c4", "patch": "@@ -96,11 +96,12 @@ impl Context {\n     }\n \n     pub fn enter_body(&mut self, cx: &LateContext<'_>, body: &hir::Body<'_>) {\n-        let body_owner = cx.tcx.hir().body_owner_def_id(body.id());\n+        let body_owner = cx.tcx.hir().body_owner(body.id());\n+        let body_owner_def_id = cx.tcx.hir().local_def_id(body_owner);\n \n-        match cx.tcx.hir().body_owner_kind(body_owner) {\n+        match cx.tcx.hir().body_owner_kind(body_owner_def_id) {\n             hir::BodyOwnerKind::Static(_) | hir::BodyOwnerKind::Const => {\n-                let body_span = cx.tcx.def_span(body_owner);\n+                let body_span = cx.tcx.hir().span_with_body(body_owner);\n \n                 if let Some(span) = self.const_span {\n                     if span.contains(body_span) {\n@@ -115,7 +116,7 @@ impl Context {\n \n     pub fn body_post(&mut self, cx: &LateContext<'_>, body: &hir::Body<'_>) {\n         let body_owner = cx.tcx.hir().body_owner(body.id());\n-        let body_span = cx.tcx.hir().span(body_owner);\n+        let body_span = cx.tcx.hir().span_with_body(body_owner);\n \n         if let Some(span) = self.const_span {\n             if span.contains(body_span) {"}, {"sha": "a6a767483ed45d2b969d0ea09f2767cdacc97461", "filename": "tests/ui/crashes/ice-6252.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5e33d3dedf1e15309fe15c49867de39431967c4/tests%2Fui%2Fcrashes%2Fice-6252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5e33d3dedf1e15309fe15c49867de39431967c4/tests%2Fui%2Fcrashes%2Fice-6252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6252.stderr?ref=d5e33d3dedf1e15309fe15c49867de39431967c4", "patch": "@@ -25,7 +25,7 @@ error[E0046]: not all trait items implemented, missing: `VAL`\n   --> $DIR/ice-6252.rs:10:1\n    |\n LL |     const VAL: T;\n-   |     ------------- `VAL` from trait\n+   |     ------------ `VAL` from trait\n ...\n LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `VAL` in implementation"}, {"sha": "2a4abb0c5193aabda7946080b98322df565e5375", "filename": "tests/ui/derive_hash_xor_eq.stderr", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d5e33d3dedf1e15309fe15c49867de39431967c4/tests%2Fui%2Fderive_hash_xor_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5e33d3dedf1e15309fe15c49867de39431967c4/tests%2Fui%2Fderive_hash_xor_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.stderr?ref=d5e33d3dedf1e15309fe15c49867de39431967c4", "patch": "@@ -8,12 +8,8 @@ LL | #[derive(Hash)]\n note: `PartialEq` implemented here\n   --> $DIR/derive_hash_xor_eq.rs:15:1\n    |\n-LL | / impl PartialEq for Bar {\n-LL | |     fn eq(&self, _: &Bar) -> bool {\n-LL | |         true\n-LL | |     }\n-LL | | }\n-   | |_^\n+LL | impl PartialEq for Bar {\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n@@ -25,12 +21,8 @@ LL | #[derive(Hash)]\n note: `PartialEq` implemented here\n   --> $DIR/derive_hash_xor_eq.rs:24:1\n    |\n-LL | / impl PartialEq<Baz> for Baz {\n-LL | |     fn eq(&self, _: &Baz) -> bool {\n-LL | |         true\n-LL | |     }\n-LL | | }\n-   | |_^\n+LL | impl PartialEq<Baz> for Baz {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: you are implementing `Hash` explicitly but have derived `PartialEq`"}, {"sha": "baf8341aba908d1b409e60000241a4496d9b446e", "filename": "tests/ui/derive_ord_xor_partial_ord.stderr", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d5e33d3dedf1e15309fe15c49867de39431967c4/tests%2Fui%2Fderive_ord_xor_partial_ord.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5e33d3dedf1e15309fe15c49867de39431967c4/tests%2Fui%2Fderive_ord_xor_partial_ord.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_ord_xor_partial_ord.stderr?ref=d5e33d3dedf1e15309fe15c49867de39431967c4", "patch": "@@ -8,12 +8,8 @@ LL | #[derive(Ord, PartialEq, Eq)]\n note: `PartialOrd` implemented here\n   --> $DIR/derive_ord_xor_partial_ord.rs:24:1\n    |\n-LL | / impl PartialOrd for DeriveOrd {\n-LL | |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n-LL | |         Some(other.cmp(self))\n-LL | |     }\n-LL | | }\n-   | |_^\n+LL | impl PartialOrd for DeriveOrd {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the derive macro `Ord` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: you are deriving `Ord` but have implemented `PartialOrd` explicitly\n@@ -25,12 +21,8 @@ LL | #[derive(Ord, PartialEq, Eq)]\n note: `PartialOrd` implemented here\n   --> $DIR/derive_ord_xor_partial_ord.rs:33:1\n    |\n-LL | / impl PartialOrd<DeriveOrdWithExplicitTypeVariable> for DeriveOrdWithExplicitTypeVariable {\n-LL | |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n-LL | |         Some(other.cmp(self))\n-LL | |     }\n-LL | | }\n-   | |_^\n+LL | impl PartialOrd<DeriveOrdWithExplicitTypeVariable> for DeriveOrdWithExplicitTypeVariable {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the derive macro `Ord` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: you are implementing `Ord` explicitly but have derived `PartialOrd`"}, {"sha": "38f33c53f128b87ec239bb45d30bd925f8e1c336", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d5e33d3dedf1e15309fe15c49867de39431967c4/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5e33d3dedf1e15309fe15c49867de39431967c4/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=d5e33d3dedf1e15309fe15c49867de39431967c4", "patch": "@@ -124,7 +124,7 @@ help: consider marking this type as `Copy`\n   --> $DIR/needless_pass_by_value.rs:123:1\n    |\n LL | struct CopyWrapper(u32);\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:131:29\n@@ -136,7 +136,7 @@ help: consider marking this type as `Copy`\n   --> $DIR/needless_pass_by_value.rs:123:1\n    |\n LL | struct CopyWrapper(u32);\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:131:45\n@@ -148,7 +148,7 @@ help: consider marking this type as `Copy`\n   --> $DIR/needless_pass_by_value.rs:123:1\n    |\n LL | struct CopyWrapper(u32);\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:131:61\n@@ -160,7 +160,7 @@ help: consider marking this type as `Copy`\n   --> $DIR/needless_pass_by_value.rs:123:1\n    |\n LL | struct CopyWrapper(u32);\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:143:40"}]}