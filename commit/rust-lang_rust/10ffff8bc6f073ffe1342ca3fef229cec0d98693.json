{"sha": "10ffff8bc6f073ffe1342ca3fef229cec0d98693", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZmZmZjhiYzZmMDczZmZlMTM0MmNhM2ZlZjIyOWNlYzBkOTg2OTM=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-10-26T14:21:37Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-10-26T14:23:31Z"}, "message": "incr.comp.: Update overflow-check logic in HIR hashing.", "tree": {"sha": "9ebd2815a6ee0a1412dfd8452c518f6c3171c6cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ebd2815a6ee0a1412dfd8452c518f6c3171c6cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10ffff8bc6f073ffe1342ca3fef229cec0d98693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10ffff8bc6f073ffe1342ca3fef229cec0d98693", "html_url": "https://github.com/rust-lang/rust/commit/10ffff8bc6f073ffe1342ca3fef229cec0d98693", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10ffff8bc6f073ffe1342ca3fef229cec0d98693/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eea916068cc0d0d5d39fc4b02c2c4c88ae9a9138", "url": "https://api.github.com/repos/rust-lang/rust/commits/eea916068cc0d0d5d39fc4b02c2c4c88ae9a9138", "html_url": "https://github.com/rust-lang/rust/commit/eea916068cc0d0d5d39fc4b02c2c4c88ae9a9138"}], "stats": {"total": 159, "additions": 110, "deletions": 49}, "files": [{"sha": "f46540114f75058e324bebe9f1ee150b4740382a", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=10ffff8bc6f073ffe1342ca3fef229cec0d98693", "patch": "@@ -206,9 +206,10 @@ impl<'gcx> StableHashingContext<'gcx> {\n \n     pub fn hash_hir_item_like<F: FnOnce(&mut Self)>(&mut self,\n                                                     item_attrs: &[ast::Attribute],\n+                                                    is_const: bool,\n                                                     f: F) {\n         let prev_overflow_checks = self.overflow_checks_enabled;\n-        if attr::contains_name(item_attrs, \"rustc_inherit_overflow_checks\") {\n+        if is_const || attr::contains_name(item_attrs, \"rustc_inherit_overflow_checks\") {\n             self.overflow_checks_enabled = true;\n         }\n         let prev_hash_node_ids = self.node_id_hashing_mode;"}, {"sha": "ff12f7933888ba41b261c4b86e9430d1c7bd187d", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=10ffff8bc6f073ffe1342ca3fef229cec0d98693", "patch": "@@ -713,7 +713,15 @@ impl<'gcx> HashStable<StableHashingContext<'gcx>> for hir::TraitItem {\n             span\n         } = *self;\n \n-        hcx.hash_hir_item_like(attrs, |hcx| {\n+        let is_const = match *node {\n+            hir::TraitItemKind::Const(..) |\n+            hir::TraitItemKind::Type(..) => true,\n+            hir::TraitItemKind::Method(hir::MethodSig { constness, .. }, _) => {\n+                constness == hir::Constness::Const\n+            }\n+        };\n+\n+        hcx.hash_hir_item_like(attrs, is_const, |hcx| {\n             name.hash_stable(hcx, hasher);\n             attrs.hash_stable(hcx, hasher);\n             generics.hash_stable(hcx, hasher);\n@@ -750,7 +758,15 @@ impl<'gcx> HashStable<StableHashingContext<'gcx>> for hir::ImplItem {\n             span\n         } = *self;\n \n-        hcx.hash_hir_item_like(attrs, |hcx| {\n+        let is_const = match *node {\n+            hir::ImplItemKind::Const(..) |\n+            hir::ImplItemKind::Type(..) => true,\n+            hir::ImplItemKind::Method(hir::MethodSig { constness, .. }, _) => {\n+                constness == hir::Constness::Const\n+            }\n+        };\n+\n+        hcx.hash_hir_item_like(attrs, is_const, |hcx| {\n             name.hash_stable(hcx, hasher);\n             vis.hash_stable(hcx, hasher);\n             defaultness.hash_stable(hcx, hasher);\n@@ -869,11 +885,13 @@ impl<'gcx> HashStable<StableHashingContext<'gcx>> for hir::Item {\n     fn hash_stable<W: StableHasherResult>(&self,\n                                           hcx: &mut StableHashingContext<'gcx>,\n                                           hasher: &mut StableHasher<W>) {\n-        let hash_spans = match self.node {\n+        let (is_const, hash_spans) = match self.node {\n             hir::ItemStatic(..)      |\n-            hir::ItemConst(..)       |\n-            hir::ItemFn(..)          => {\n-                hcx.hash_spans()\n+            hir::ItemConst(..)       => {\n+                (true, hcx.hash_spans())\n+            }\n+            hir::ItemFn(_, _, constness, ..) => {\n+                (constness == hir::Constness::Const, hcx.hash_spans())\n             }\n             hir::ItemUse(..)         |\n             hir::ItemExternCrate(..) |\n@@ -887,7 +905,7 @@ impl<'gcx> HashStable<StableHashingContext<'gcx>> for hir::Item {\n             hir::ItemEnum(..)        |\n             hir::ItemStruct(..)      |\n             hir::ItemUnion(..)       => {\n-                false\n+                (false, false)\n             }\n         };\n \n@@ -901,7 +919,7 @@ impl<'gcx> HashStable<StableHashingContext<'gcx>> for hir::Item {\n             span\n         } = *self;\n \n-        hcx.hash_hir_item_like(attrs, |hcx| {\n+        hcx.hash_hir_item_like(attrs, is_const, |hcx| {\n             hcx.while_hashing_spans(hash_spans, |hcx| {\n                 name.hash_stable(hcx, hasher);\n                 attrs.hash_stable(hcx, hasher);"}, {"sha": "65acfb82da66fa9052971924d93e724710584f6e", "filename": "src/test/incremental/hashes/consts.rs", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs?ref=10ffff8bc6f073ffe1342ca3fef229cec0d98693", "patch": "@@ -62,48 +62,54 @@ const CONST_CHANGE_TYPE_2: Option<u64> = None;\n \n \n // Change value between simple literals ---------------------------------------\n-#[cfg(cfail1)]\n-const CONST_CHANGE_VALUE_1: i16 = 1;\n-\n-#[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-const CONST_CHANGE_VALUE_1: i16 = 2;\n+const CONST_CHANGE_VALUE_1: i16 = {\n+    #[cfg(cfail1)]\n+    { 1 }\n \n+    #[cfg(not(cfail1))]\n+    { 2 }\n+};\n \n-// Change value between expressions -------------------------------------------\n-#[cfg(cfail1)]\n-const CONST_CHANGE_VALUE_2: i16 = 1 + 1;\n \n-#[cfg(not(cfail1))]\n+// Change value between expressions -------------------------------------------\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-const CONST_CHANGE_VALUE_2: i16 = 1 + 2;\n-\n+const CONST_CHANGE_VALUE_2: i16 = {\n+    #[cfg(cfail1)]\n+    { 1 + 1 }\n \n-#[cfg(cfail1)]\n-const CONST_CHANGE_VALUE_3: i16 = 2 + 3;\n+    #[cfg(not(cfail1))]\n+    { 1 + 2 }\n+};\n \n-#[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-const CONST_CHANGE_VALUE_3: i16 = 2 * 3;\n-\n+const CONST_CHANGE_VALUE_3: i16 = {\n+    #[cfg(cfail1)]\n+    { 2 + 3 }\n \n-#[cfg(cfail1)]\n-const CONST_CHANGE_VALUE_4: i16 = 1 + 2 * 3;\n+    #[cfg(not(cfail1))]\n+    { 2 * 3 }\n+};\n \n-#[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-const CONST_CHANGE_VALUE_4: i16 = 1 + 2 * 4;\n+const CONST_CHANGE_VALUE_4: i16 = {\n+    #[cfg(cfail1)]\n+    { 1 + 2 * 3 }\n+\n+    #[cfg(not(cfail1))]\n+    { 1 + 2 * 4 }\n+};\n \n \n // Change type indirectly -----------------------------------------------------"}, {"sha": "7a4123190dde398dd4d60b978a9289f26ba2df0b", "filename": "src/test/incremental/hashes/statics.rs", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs?ref=10ffff8bc6f073ffe1342ca3fef229cec0d98693", "patch": "@@ -115,49 +115,55 @@ static STATIC_CHANGE_TYPE_2: Option<u16> = None;\n \n \n // Change value between simple literals ---------------------------------------\n-#[cfg(cfail1)]\n-static STATIC_CHANGE_VALUE_1: i16 = 1;\n-\n-#[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-static STATIC_CHANGE_VALUE_1: i16 = 2;\n+static STATIC_CHANGE_VALUE_1: i16 = {\n+    #[cfg(cfail1)]\n+    { 1 }\n \n+    #[cfg(not(cfail1))]\n+    { 2 }\n+};\n \n-// Change value between expressions -------------------------------------------\n-#[cfg(cfail1)]\n-static STATIC_CHANGE_VALUE_2: i16 = 1 + 1;\n \n-#[cfg(not(cfail1))]\n+// Change value between expressions -------------------------------------------\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-static STATIC_CHANGE_VALUE_2: i16 = 1 + 2;\n-\n+static STATIC_CHANGE_VALUE_2: i16 = {\n+    #[cfg(cfail1)]\n+    { 1 + 1 }\n \n-#[cfg(cfail1)]\n-static STATIC_CHANGE_VALUE_3: i16 = 2 + 3;\n+    #[cfg(not(cfail1))]\n+    { 1 + 2 }\n+};\n \n-#[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-static STATIC_CHANGE_VALUE_3: i16 = 2 * 3;\n-\n+static STATIC_CHANGE_VALUE_3: i16 = {\n+    #[cfg(cfail1)]\n+    { 2 + 3 }\n \n-#[cfg(cfail1)]\n-static STATIC_CHANGE_VALUE_4: i16 = 1 + 2 * 3;\n+    #[cfg(not(cfail1))]\n+    { 2 * 3 }\n+};\n \n-#[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-static STATIC_CHANGE_VALUE_4: i16 = 1 + 2 * 4;\n+static STATIC_CHANGE_VALUE_4: i16 = {\n+    #[cfg(cfail1)]\n+    { 1 + 2 * 3 }\n+\n+    #[cfg(not(cfail1))]\n+    { 1 + 2 * 4 }\n+};\n \n \n // Change type indirectly -----------------------------------------------------"}, {"sha": "c0bf35e781c70199375cdce3e99cf414f5adbaaf", "filename": "src/test/incremental/spans_significant_w_panic.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Ftest%2Fincremental%2Fspans_significant_w_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ffff8bc6f073ffe1342ca3fef229cec0d98693/src%2Ftest%2Fincremental%2Fspans_significant_w_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fspans_significant_w_panic.rs?ref=10ffff8bc6f073ffe1342ca3fef229cec0d98693", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This test makes sure that just changing a definition's location in the\n+// source file also changes its incr. comp. hash, if debuginfo is enabled.\n+\n+// revisions:rpass1 rpass2\n+\n+// compile-flags: -C overflow-checks=on\n+\n+#![feature(rustc_attrs)]\n+\n+#[cfg(rpass1)]\n+pub fn main() {\n+    let _ = 0u8 + 1;\n+}\n+\n+#[cfg(rpass2)]\n+#[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"HirBody\", cfg=\"rpass2\")]\n+pub fn main() {\n+    let _ = 0u8 + 1;\n+}"}]}