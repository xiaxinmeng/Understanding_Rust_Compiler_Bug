{"sha": "2cb460e6259af63924a719beaf91c5804dd0a789", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYjQ2MGU2MjU5YWY2MzkyNGE3MTliZWFmOTFjNTgwNGRkMGE3ODk=", "commit": {"author": {"name": "AnthonyMikh", "email": "anthony.mikh@yandex.ru", "date": "2019-09-25T19:55:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-25T19:55:04Z"}, "message": "Use `saturating_sub` where applicable", "tree": {"sha": "dab86af6c9f1f108b4e6dee8b7a31039db2eeea7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dab86af6c9f1f108b4e6dee8b7a31039db2eeea7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cb460e6259af63924a719beaf91c5804dd0a789", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdi8YYCRBK7hj4Ov3rIwAAdHIIAAChpNArho1YxRtn85A4gAas\n4/IRTId9e7gRhY7peGDnynm/CPYrtZAfQAPnN1MEIMJfNbtLNsa5K68vPLLB/TVb\nCIVYl4b1Os9YBM/Xjqzj3cYKZ1UHg/cfa67C+iAz2OrJFBrb8mU0F+2YWwjPeGt1\nU+/koucxcLASOZuur/qQU1vPQ58E8IDaOVAxtby6eQEnRgKI0JTj9+ETBo9RZWQP\nDFlAzg986M3Bx8vJ6uh80ZKxYbiPMEnPIrZZUiy1j/scYse4VChqthBnYjg/mk43\nRVkRhtR4GxZDSBMXcpblq3vMQn5iKovX75i+uAU6I8ko/xj8MmfGnS9R23m/tCw=\n=iL7r\n-----END PGP SIGNATURE-----\n", "payload": "tree dab86af6c9f1f108b4e6dee8b7a31039db2eeea7\nparent 6c2c29c43206d6e2f1091fa278d2792ea10e3659\nauthor AnthonyMikh <anthony.mikh@yandex.ru> 1569441304 +0300\ncommitter GitHub <noreply@github.com> 1569441304 +0300\n\nUse `saturating_sub` where applicable"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb460e6259af63924a719beaf91c5804dd0a789", "html_url": "https://github.com/rust-lang/rust/commit/2cb460e6259af63924a719beaf91c5804dd0a789", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cb460e6259af63924a719beaf91c5804dd0a789/comments", "author": {"login": "AnthonyMikh", "id": 19252795, "node_id": "MDQ6VXNlcjE5MjUyNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/19252795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthonyMikh", "html_url": "https://github.com/AnthonyMikh", "followers_url": "https://api.github.com/users/AnthonyMikh/followers", "following_url": "https://api.github.com/users/AnthonyMikh/following{/other_user}", "gists_url": "https://api.github.com/users/AnthonyMikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthonyMikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthonyMikh/subscriptions", "organizations_url": "https://api.github.com/users/AnthonyMikh/orgs", "repos_url": "https://api.github.com/users/AnthonyMikh/repos", "events_url": "https://api.github.com/users/AnthonyMikh/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthonyMikh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2c29c43206d6e2f1091fa278d2792ea10e3659", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2c29c43206d6e2f1091fa278d2792ea10e3659", "html_url": "https://github.com/rust-lang/rust/commit/6c2c29c43206d6e2f1091fa278d2792ea10e3659"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "c5b03acb622f6e441cb096f4b15022fdd15726ae", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2cb460e6259af63924a719beaf91c5804dd0a789/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb460e6259af63924a719beaf91c5804dd0a789/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=2cb460e6259af63924a719beaf91c5804dd0a789", "patch": "@@ -99,8 +99,8 @@ impl Margin {\n         // ```\n \n         let mut m = Margin {\n-            whitespace_left: if whitespace_left >= 6 { whitespace_left - 6 } else { 0 },\n-            span_left: if span_left >= 6 { span_left - 6 } else { 0 },\n+            whitespace_left: whitespace_left.saturating_sub(6),\n+            span_left: span_left.saturating_sub(6),\n             span_right: span_right + 6,\n             computed_left: 0,\n             computed_right: 0,\n@@ -167,7 +167,7 @@ impl Margin {\n     }\n \n     fn right(&self, line_len: usize) -> usize {\n-        if max(line_len, self.computed_left) - self.computed_left <= self.column_width {\n+        if line_len.saturating_sub(self.computed_left) <= self.column_width {\n             line_len\n         } else if self.computed_right > line_len {\n             line_len\n@@ -941,17 +941,9 @@ impl EmitterWriter {\n                 Style::LabelSecondary\n             };\n             let (pos, col) = if pos == 0 {\n-                (pos + 1, if annotation.end_col + 1 > left {\n-                    annotation.end_col + 1 - left\n-                } else {\n-                    0\n-                })\n+                (pos + 1, (annotation.end_col + 1).saturating_sub(left))\n             } else {\n-                (pos + 2, if annotation.start_col > left {\n-                    annotation.start_col - left\n-                } else {\n-                    0\n-                })\n+                (pos + 2, annotation.start_col.saturating_sub(left))\n             };\n             if let Some(ref label) = annotation.label {\n                 buffer.puts(line_offset + pos, code_offset + col, &label, style);\n@@ -991,11 +983,7 @@ impl EmitterWriter {\n             for p in annotation.start_col..annotation.end_col {\n                 buffer.putc(\n                     line_offset + 1,\n-                    if code_offset + p > left {\n-                        code_offset + p - left\n-                    } else {\n-                        0\n-                    },\n+                    (code_offset + p).saturating_sub(left),\n                     underline,\n                     style,\n                 );"}]}