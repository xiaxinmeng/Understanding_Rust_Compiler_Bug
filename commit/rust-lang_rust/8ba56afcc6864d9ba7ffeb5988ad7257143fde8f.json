{"sha": "8ba56afcc6864d9ba7ffeb5988ad7257143fde8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYTU2YWZjYzY4NjRkOWJhN2ZmZWI1OTg4YWQ3MjU3MTQzZmRlOGY=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-08-16T21:59:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-16T21:59:32Z"}, "message": "Rollup merge of #75485 - RalfJung:pin, r=nagisa\n\npin docs: add some forward references\n\n@nagisa had some questions about pinning that were answered in the docs, which they did not realize because that discussion is below the examples. I still think it makes sense to introduce the examples before that discussion, since it give the discussion something concrete to refer to, but this PR adds some forward references so people don't think the examples conclude the docs.\n\n@nagisa do you think this would have helped?", "tree": {"sha": "b2f193c2fcaf6a1ef943ab0267fe9834540dc702", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2f193c2fcaf6a1ef943ab0267fe9834540dc702"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ba56afcc6864d9ba7ffeb5988ad7257143fde8f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfOaxFCRBK7hj4Ov3rIwAAdHIIAF5cgAH4P5uthd58lY8WGENH\nzcyeDZVpAwfygIrjb9SOrpG3lVPza9bYIEzVlbxRuwl5o5F2K/yJt37P8vvBZySf\nT7IgnsHITR770lN8mLSYyzJucezWAV7SrYbzc8UCh604f/vLq12MenqGF/ibZou4\npxfk7mlwX3l178Qn9rMF6kZPQclYsjLq5WWHWflXcs54QGx56IzmPCMYBgge5ad6\nP8kTpfW+XZP8YP7jMyAyl+dfaZIEdwvFfoBmpx1QivX8WrNVuKj0vuBHK9AtWS+w\ntHIvQy5n+JSaMG0U0t/Op2SD2f/sIsyYlUldafaItTozRY45Rx72UnG2fmq8IhU=\n=W+2Q\n-----END PGP SIGNATURE-----\n", "payload": "tree b2f193c2fcaf6a1ef943ab0267fe9834540dc702\nparent 18e3799dc8818dda7852b11ea9026aa24e7bf4c2\nparent 7aac3e0400d29c79623e7fefb43f17b6a765a326\nauthor Tyler Mandry <tmandry@gmail.com> 1597615172 -0700\ncommitter GitHub <noreply@github.com> 1597615172 -0700\n\nRollup merge of #75485 - RalfJung:pin, r=nagisa\n\npin docs: add some forward references\n\n@nagisa had some questions about pinning that were answered in the docs, which they did not realize because that discussion is below the examples. I still think it makes sense to introduce the examples before that discussion, since it give the discussion something concrete to refer to, but this PR adds some forward references so people don't think the examples conclude the docs.\n\n@nagisa do you think this would have helped?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ba56afcc6864d9ba7ffeb5988ad7257143fde8f", "html_url": "https://github.com/rust-lang/rust/commit/8ba56afcc6864d9ba7ffeb5988ad7257143fde8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ba56afcc6864d9ba7ffeb5988ad7257143fde8f/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18e3799dc8818dda7852b11ea9026aa24e7bf4c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/18e3799dc8818dda7852b11ea9026aa24e7bf4c2", "html_url": "https://github.com/rust-lang/rust/commit/18e3799dc8818dda7852b11ea9026aa24e7bf4c2"}, {"sha": "7aac3e0400d29c79623e7fefb43f17b6a765a326", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aac3e0400d29c79623e7fefb43f17b6a765a326", "html_url": "https://github.com/rust-lang/rust/commit/7aac3e0400d29c79623e7fefb43f17b6a765a326"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "960cccc0fb21147ee2cf9c0019f5b08c6359e763", "filename": "library/core/src/pin.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8ba56afcc6864d9ba7ffeb5988ad7257143fde8f/library%2Fcore%2Fsrc%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba56afcc6864d9ba7ffeb5988ad7257143fde8f/library%2Fcore%2Fsrc%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpin.rs?ref=8ba56afcc6864d9ba7ffeb5988ad7257143fde8f", "patch": "@@ -6,9 +6,12 @@\n //! as moving an object with pointers to itself will invalidate them, which could cause undefined\n //! behavior.\n //!\n-//! A [`Pin<P>`] ensures that the pointee of any pointer type `P` has a stable location in memory,\n-//! meaning it cannot be moved elsewhere and its memory cannot be deallocated\n-//! until it gets dropped. We say that the pointee is \"pinned\".\n+//! At a high level, a [`Pin<P>`] ensures that the pointee of any pointer type\n+//! `P` has a stable location in memory, meaning it cannot be moved elsewhere\n+//! and its memory cannot be deallocated until it gets dropped. We say that the\n+//! pointee is \"pinned\". Things get more subtle when discussing types that\n+//! combine pinned with non-pinned data; [see below](#projections-and-structural-pinning)\n+//! for more details.\n //!\n //! By default, all types in Rust are movable. Rust allows passing all types by-value,\n //! and common smart-pointer types such as [`Box<T>`] and `&mut T` allow replacing and\n@@ -61,6 +64,10 @@\n //!\n //! # Example: self-referential struct\n //!\n+//! Before we go into more details to explain the guarantees and choices\n+//! associated with `Pin<T>`, we discuss some examples for how it might be used.\n+//! Feel free to [skip to where the theoretical discussion continues](#drop-guarantee).\n+//!\n //! ```rust\n //! use std::pin::Pin;\n //! use std::marker::PhantomPinned;"}]}