{"sha": "c3f856e7e24be568902a38c6a488aee6098f94cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZjg1NmU3ZTI0YmU1Njg5MDJhMzhjNmE0ODhhZWU2MDk4Zjk0Y2M=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-02-23T19:34:48Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T16:19:29Z"}, "message": "trans: Remove dead code for variants and structs from get_item_val.", "tree": {"sha": "03b42058f88851b3e91d3a8b86257efa732de10c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03b42058f88851b3e91d3a8b86257efa732de10c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3f856e7e24be568902a38c6a488aee6098f94cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f856e7e24be568902a38c6a488aee6098f94cc", "html_url": "https://github.com/rust-lang/rust/commit/c3f856e7e24be568902a38c6a488aee6098f94cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3f856e7e24be568902a38c6a488aee6098f94cc/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0970498c79de1a1381d697b3c27895ef798e288", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0970498c79de1a1381d697b3c27895ef798e288", "html_url": "https://github.com/rust-lang/rust/commit/e0970498c79de1a1381d697b3c27895ef798e288"}], "stats": {"total": 40, "additions": 0, "deletions": 40}, "files": [{"sha": "8094434845fce23d0bf56b7164d58c37eecf6be4", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c3f856e7e24be568902a38c6a488aee6098f94cc/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f856e7e24be568902a38c6a488aee6098f94cc/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=c3f856e7e24be568902a38c6a488aee6098f94cc", "patch": "@@ -2845,46 +2845,6 @@ pub fn get_item_val(ccx: &CrateContext, id: ast::NodeId) -> ValueRef {\n                 }\n             }\n         }\n-\n-        hir_map::NodeVariant(ref v) => {\n-            let llfn;\n-            let fields = if v.node.data.is_struct() {\n-                ccx.sess().bug(\"struct variant kind unexpected in get_item_val\")\n-            } else {\n-                v.node.data.fields()\n-            };\n-            assert!(!fields.is_empty());\n-            let ty = ccx.tcx().node_id_to_type(id);\n-            let parent = ccx.tcx().map.get_parent(id);\n-            let enm = ccx.tcx().map.expect_item(parent);\n-            let sym = exported_name(ccx, id, ty, &enm.attrs);\n-\n-            llfn = match enm.node {\n-                hir::ItemEnum(_, _) => {\n-                    register_fn(ccx, (*v).span, sym, id, ty)\n-                }\n-                _ => ccx.sess().bug(\"NodeVariant, shouldn't happen\"),\n-            };\n-            attributes::inline(llfn, attributes::InlineAttr::Hint);\n-            llfn\n-        }\n-\n-        hir_map::NodeStructCtor(struct_def) => {\n-            // Only register the constructor if this is a tuple-like struct.\n-            let ctor_id = if struct_def.is_struct() {\n-                ccx.sess().bug(\"attempt to register a constructor of a non-tuple-like struct\")\n-            } else {\n-                struct_def.id()\n-            };\n-            let parent = ccx.tcx().map.get_parent(id);\n-            let struct_item = ccx.tcx().map.expect_item(parent);\n-            let ty = ccx.tcx().node_id_to_type(ctor_id);\n-            let sym = exported_name(ccx, id, ty, &struct_item.attrs);\n-            let llfn = register_fn(ccx, struct_item.span, sym, ctor_id, ty);\n-            attributes::inline(llfn, attributes::InlineAttr::Hint);\n-            llfn\n-        }\n-\n         ref variant => {\n             ccx.sess().bug(&format!(\"get_item_val(): unexpected variant: {:?}\", variant))\n         }"}]}