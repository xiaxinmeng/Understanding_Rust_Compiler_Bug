{"sha": "4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhNzgzNjRkNDkxZWUyZDNhNDlmNGVkNWU2MmY2M2NkNTc0OGQ4OTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-16T21:27:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-18T18:46:32Z"}, "message": "Forbid unnecessary visibility on view items\n\nFor `use` statements, this means disallowing qualifiers when in functions and\ndisallowing `priv` outside of functions.\n\nFor `extern mod` statements, this means disallowing everything everywhere. It\nmay have been envisioned for `pub extern mod foo` to be a thing, but it\ncurrently doesn't do anything (resolve doesn't pick it up), so better to err on\nthe side of forwards-compatibility and forbid it entirely for now.\n\nCloses #9957", "tree": {"sha": "ea10560a8b460cc07496455c1fbc5621e44fc160", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea10560a8b460cc07496455c1fbc5621e44fc160"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "html_url": "https://github.com/rust-lang/rust/commit/4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9434e7c6cb658367d91eb8aae5fac6a5c8b5f769", "url": "https://api.github.com/repos/rust-lang/rust/commits/9434e7c6cb658367d91eb8aae5fac6a5c8b5f769", "html_url": "https://github.com/rust-lang/rust/commit/9434e7c6cb658367d91eb8aae5fac6a5c8b5f769"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "c1c31dc310e17bd6fb0ab4cf6b9d5a67b18efc40", "filename": "src/librustc/front/std_inject.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fstd_inject.rs?ref=4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "patch": "@@ -73,7 +73,7 @@ impl fold::Folder for StandardLibraryInjector {\n                                          with_version(\"std\"),\n                                          ast::DUMMY_NODE_ID),\n             attrs: ~[],\n-            vis: ast::Private,\n+            vis: ast::Inherited,\n             span: DUMMY_SP\n         }];\n \n@@ -83,15 +83,15 @@ impl fold::Folder for StandardLibraryInjector {\n                                              with_version(\"green\"),\n                                              ast::DUMMY_NODE_ID),\n                 attrs: ~[],\n-                vis: ast::Private,\n+                vis: ast::Inherited,\n                 span: DUMMY_SP\n             });\n             vis.push(ast::ViewItem {\n                 node: ast::ViewItemExternMod(self.sess.ident_of(\"rustuv\"),\n                                              with_version(\"rustuv\"),\n                                              ast::DUMMY_NODE_ID),\n                 attrs: ~[],\n-                vis: ast::Private,\n+                vis: ast::Inherited,\n                 span: DUMMY_SP\n             });\n         }\n@@ -147,7 +147,7 @@ impl fold::Folder for StandardLibraryInjector {\n         let vi2 = ast::ViewItem {\n             node: ast::ViewItemUse(~[vp]),\n             attrs: ~[],\n-            vis: ast::Private,\n+            vis: ast::Inherited,\n             span: DUMMY_SP,\n         };\n "}, {"sha": "67229b0550b8baad96201ef8b1d72e83afe4b697", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "patch": "@@ -299,7 +299,7 @@ fn mk_std(cx: &TestCtxt) -> ast::ViewItem {\n     ast::ViewItem {\n         node: vi,\n         attrs: ~[],\n-        vis: ast::Public,\n+        vis: ast::Inherited,\n         span: DUMMY_SP\n     }\n }"}, {"sha": "4318fde9b3a54e49882c1bc7f73faf7573e1cc00", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "patch": "@@ -839,6 +839,32 @@ impl Visitor<()> for SanePrivacyVisitor {\n         visit::walk_fn(self, fk, fd, b, s, n, ());\n         self.in_fn = orig_in_fn;\n     }\n+\n+    fn visit_view_item(&mut self, i: &ast::ViewItem, _: ()) {\n+        match i.vis {\n+            ast::Inherited => {}\n+            ast::Private => {\n+                self.tcx.sess.span_err(i.span, \"unnecessary visibility \\\n+                                                qualifier\");\n+            }\n+            ast::Public => {\n+                if self.in_fn {\n+                    self.tcx.sess.span_err(i.span, \"unnecessary `pub`, imports \\\n+                                                    in functions are never \\\n+                                                    reachable\");\n+                } else {\n+                    match i.node {\n+                        ast::ViewItemExternMod(..) => {\n+                            self.tcx.sess.span_err(i.span, \"`pub` visibility \\\n+                                                            is not allowed\");\n+                        }\n+                        _ => {}\n+                    }\n+                }\n+            }\n+        }\n+        visit::walk_view_item(self, i, ());\n+    }\n }\n \n impl SanePrivacyVisitor {"}, {"sha": "7c2175503e05bde18cf0561cf01c1fd5dd4f15d6", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "patch": "@@ -648,7 +648,7 @@ fn expand_wrapper(cx: &ExtCtxt,\n                   sp: Span,\n                   cx_expr: @ast::Expr,\n                   expr: @ast::Expr) -> @ast::Expr {\n-    let uses = ~[ cx.view_use_glob(sp, ast::Public,\n+    let uses = ~[ cx.view_use_glob(sp, ast::Inherited,\n                                    ids_ext(~[~\"syntax\",\n                                              ~\"ext\",\n                                              ~\"quote\","}, {"sha": "b8292d617525e92fb2d7c70bd780d61f36966e4b", "filename": "src/test/compile-fail/issue-9957.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Ftest%2Fcompile-fail%2Fissue-9957.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a78364d491ee2d3a49f4ed5e62f63cd5748d898/src%2Ftest%2Fcompile-fail%2Fissue-9957.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-9957.rs?ref=4a78364d491ee2d3a49f4ed5e62f63cd5748d898", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub extern mod std; //~ ERROR: `pub` visibility is not allowed\n+priv extern mod std; //~ ERROR: unnecessary visibility qualifier\n+extern mod std;\n+\n+pub use std::bool;\n+priv use std::bool; //~ ERROR: unnecessary visibility qualifier\n+use std::bool;\n+\n+fn main() {\n+    pub use std::bool; //~ ERROR: imports in functions are never reachable\n+    priv use std::bool; //~ ERROR: unnecessary visibility qualifier\n+    use std::bool;\n+}"}]}