{"sha": "cd2434999768d3767814bc8b437bd5fb91263ef6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMjQzNDk5OTc2OGQzNzY3ODE0YmM4YjQzN2JkNWZiOTEyNjNlZjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-16T14:24:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-16T14:24:51Z"}, "message": "Merge #1691\n\n1691: Show inherent and trait impls of structs and enums r=viorina a=viorina\n\n\n\nCo-authored-by: Ekaterina Babshukova <ekaterina.babshukova@yandex.ru>", "tree": {"sha": "fd75a42035182e3fd4aade2c9df5d610ea2dbacd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd75a42035182e3fd4aade2c9df5d610ea2dbacd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd2434999768d3767814bc8b437bd5fb91263ef6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdVryzCRBK7hj4Ov3rIwAAdHIIAFlwT7lJNj2LpxAfYPPESuCt\nV5cagYmjNzy+Dl1imXwGtHZKxr8lNqGWggmcMBO1IkpnzB+sOfPbctxQr36vcWkA\nVEacfsrvG3qwi/WtiAOwD5A8mCgXwZCP1iVBXKfH09HfPEGJ3GcNI/QSOiXR5ExV\n1SKedKfHB2m6WueJGBxsZ70dDFKxLdzCn+6Zn8iKnx0ixcvdvUQ04OXRYgS1qI4C\nx4TI23uyweISP1RVXbmnBGHwSRByfftx7agt4KjFp9v2memEasjvwc7NCy6103lN\nFo8WhIOUcVnDxBXzb0LBvJmByMzCRxztjPAFAcPuuqoIlb1G0MjFeqZXXzDsweA=\n=wUIO\n-----END PGP SIGNATURE-----\n", "payload": "tree fd75a42035182e3fd4aade2c9df5d610ea2dbacd\nparent af1052bb4c8e5dc3584670e2859324776c228b6a\nparent 35a04ec066b1a4ece2a6aa5e74dd8beae52e68f1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1565965491 +0000\ncommitter GitHub <noreply@github.com> 1565965491 +0000\n\nMerge #1691\n\n1691: Show inherent and trait impls of structs and enums r=viorina a=viorina\n\n\n\nCo-authored-by: Ekaterina Babshukova <ekaterina.babshukova@yandex.ru>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2434999768d3767814bc8b437bd5fb91263ef6", "html_url": "https://github.com/rust-lang/rust/commit/cd2434999768d3767814bc8b437bd5fb91263ef6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd2434999768d3767814bc8b437bd5fb91263ef6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af1052bb4c8e5dc3584670e2859324776c228b6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/af1052bb4c8e5dc3584670e2859324776c228b6a", "html_url": "https://github.com/rust-lang/rust/commit/af1052bb4c8e5dc3584670e2859324776c228b6a"}, {"sha": "35a04ec066b1a4ece2a6aa5e74dd8beae52e68f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/35a04ec066b1a4ece2a6aa5e74dd8beae52e68f1", "html_url": "https://github.com/rust-lang/rust/commit/35a04ec066b1a4ece2a6aa5e74dd8beae52e68f1"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "3f4c43aee8fba445f6cafbd0bd577983a6e28d5f", "filename": "crates/ra_hir/src/ty/method_resolution.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cd2434999768d3767814bc8b437bd5fb91263ef6/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2434999768d3767814bc8b437bd5fb91263ef6/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs?ref=cd2434999768d3767814bc8b437bd5fb91263ef6", "patch": "@@ -68,6 +68,15 @@ impl CrateImplBlocks {\n         )\n     }\n \n+    pub fn all_impls<'a>(&'a self) -> impl Iterator<Item = ImplBlock> + 'a {\n+        self.impls.values().chain(self.impls_by_trait.values()).flat_map(|i| i.iter()).map(\n+            move |(module_id, impl_id)| {\n+                let module = Module { krate: self.krate, module_id: *module_id };\n+                ImplBlock::from_id(module, *impl_id)\n+            },\n+        )\n+    }\n+\n     fn collect_recursive(&mut self, db: &impl HirDatabase, module: Module) {\n         let module_impl_blocks = db.impls_in_module(module);\n "}, {"sha": "638f4cbde272797e327a00925765ae9dbcb4f5ed", "filename": "crates/ra_ide_api/src/impls.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/cd2434999768d3767814bc8b437bd5fb91263ef6/crates%2Fra_ide_api%2Fsrc%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2434999768d3767814bc8b437bd5fb91263ef6/crates%2Fra_ide_api%2Fsrc%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fimpls.rs?ref=cd2434999768d3767814bc8b437bd5fb91263ef6", "patch": "@@ -1,4 +1,4 @@\n-use hir::{db::HirDatabase, source_binder};\n+use hir::{db::HirDatabase, source_binder, ApplicationTy, Ty, TypeCtor};\n use ra_db::SourceDatabase;\n use ra_syntax::{algo::find_node_at_offset, ast, AstNode};\n \n@@ -47,7 +47,8 @@ fn impls_for_def(\n \n     Some(\n         impls\n-            .lookup_impl_blocks(&ty)\n+            .all_impls()\n+            .filter(|impl_block| is_equal_for_find_impls(&ty, &impl_block.target_ty(db)))\n             .map(|imp| NavigationTarget::from_impl_block(db, imp))\n             .collect(),\n     )\n@@ -71,6 +72,19 @@ fn impls_for_trait(\n     )\n }\n \n+fn is_equal_for_find_impls(original_ty: &Ty, impl_ty: &Ty) -> bool {\n+    match (original_ty, impl_ty) {\n+        (Ty::Apply(a_original_ty), Ty::Apply(ApplicationTy { ctor, parameters })) => match ctor {\n+            TypeCtor::Ref(..) => match parameters.as_single() {\n+                Ty::Apply(a_ty) => a_original_ty.ctor == a_ty.ctor,\n+                _ => false,\n+            },\n+            _ => a_original_ty.ctor == *ctor,\n+        },\n+        _ => false,\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use crate::mock_analysis::analysis_and_position;\n@@ -173,4 +187,23 @@ mod tests {\n             &[\"impl IMPL_BLOCK FileId(2) [0; 31)\", \"impl IMPL_BLOCK FileId(3) [0; 31)\"],\n         );\n     }\n+\n+    #[test]\n+    fn goto_implementation_all_impls() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            trait T {}\n+            struct Foo<|>;\n+            impl Foo {}\n+            impl T for Foo {}\n+            impl T for &Foo {}\n+            \",\n+            &[\n+                \"impl IMPL_BLOCK FileId(1) [23; 34)\",\n+                \"impl IMPL_BLOCK FileId(1) [35; 52)\",\n+                \"impl IMPL_BLOCK FileId(1) [53; 71)\",\n+            ],\n+        );\n+    }\n }"}]}