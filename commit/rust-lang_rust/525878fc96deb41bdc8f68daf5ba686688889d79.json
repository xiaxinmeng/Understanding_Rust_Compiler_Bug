{"sha": "525878fc96deb41bdc8f68daf5ba686688889d79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNTg3OGZjOTZkZWI0MWJkYzhmNjhkYWY1YmE2ODY2ODg4ODlkNzk=", "commit": {"author": {"name": "Jannis Harder", "email": "jix@jixco.de", "date": "2013-11-24T22:41:33Z"}, "committer": {"name": "Jannis Harder", "email": "jix@jixco.de", "date": "2013-11-24T23:09:40Z"}, "message": "std::trie: Fix find_mut for non-present keys\n\nMake TrieMap/TrieSet's find_mut check the key for external nodes.\nWithout this find_mut sometimes returns a reference to another key when\nquerying for a non-present key.", "tree": {"sha": "25929fb53ef25b4e61316ba731da40a5b24d5ae2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25929fb53ef25b4e61316ba731da40a5b24d5ae2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/525878fc96deb41bdc8f68daf5ba686688889d79", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/525878fc96deb41bdc8f68daf5ba686688889d79", "html_url": "https://github.com/rust-lang/rust/commit/525878fc96deb41bdc8f68daf5ba686688889d79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/525878fc96deb41bdc8f68daf5ba686688889d79/comments", "author": {"login": "jix", "id": 128138, "node_id": "MDQ6VXNlcjEyODEzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/128138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jix", "html_url": "https://github.com/jix", "followers_url": "https://api.github.com/users/jix/followers", "following_url": "https://api.github.com/users/jix/following{/other_user}", "gists_url": "https://api.github.com/users/jix/gists{/gist_id}", "starred_url": "https://api.github.com/users/jix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jix/subscriptions", "organizations_url": "https://api.github.com/users/jix/orgs", "repos_url": "https://api.github.com/users/jix/repos", "events_url": "https://api.github.com/users/jix/events{/privacy}", "received_events_url": "https://api.github.com/users/jix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jix", "id": 128138, "node_id": "MDQ6VXNlcjEyODEzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/128138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jix", "html_url": "https://github.com/jix", "followers_url": "https://api.github.com/users/jix/followers", "following_url": "https://api.github.com/users/jix/following{/other_user}", "gists_url": "https://api.github.com/users/jix/gists{/gist_id}", "starred_url": "https://api.github.com/users/jix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jix/subscriptions", "organizations_url": "https://api.github.com/users/jix/orgs", "repos_url": "https://api.github.com/users/jix/repos", "events_url": "https://api.github.com/users/jix/events{/privacy}", "received_events_url": "https://api.github.com/users/jix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3ff24adaa8c7f9c48c525f284526c23ffd33fcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3ff24adaa8c7f9c48c525f284526c23ffd33fcb", "html_url": "https://github.com/rust-lang/rust/commit/b3ff24adaa8c7f9c48c525f284526c23ffd33fcb"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "98f5baf1e2bfedaa7bef5b186a801ea6fba0ea73", "filename": "src/libstd/trie.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/525878fc96deb41bdc8f68daf5ba686688889d79/src%2Flibstd%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/525878fc96deb41bdc8f68daf5ba686688889d79/src%2Flibstd%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftrie.rs?ref=525878fc96deb41bdc8f68daf5ba686688889d79", "patch": "@@ -373,7 +373,8 @@ fn chunk(n: uint, idx: uint) -> uint {\n \n fn find_mut<'r, T>(child: &'r mut Child<T>, key: uint, idx: uint) -> Option<&'r mut T> {\n     match *child {\n-        External(_, ref mut value) => Some(value),\n+        External(stored, ref mut value) if stored == key => Some(value),\n+        External(*) => None,\n         Internal(ref mut x) => find_mut(&mut x.children[chunk(key, idx)], key, idx + 1),\n         Nothing => None\n     }\n@@ -536,6 +537,16 @@ mod test_map {\n         assert_eq!(m.find(&5), Some(&new));\n     }\n \n+    #[test]\n+    fn test_find_mut_missing() {\n+        let mut m = TrieMap::new();\n+        assert!(m.find_mut(&0).is_none());\n+        assert!(m.insert(1, 12));\n+        assert!(m.find_mut(&0).is_none());\n+        assert!(m.insert(2, 8));\n+        assert!(m.find_mut(&0).is_none());\n+    }\n+\n     #[test]\n     fn test_step() {\n         let mut trie = TrieMap::new();"}]}