{"sha": "97840090b78ce1f370c3380e8a703da420fe3a98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ODQwMDkwYjc4Y2UxZjM3MGMzMzgwZThhNzAzZGE0MjBmZTNhOTg=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-07-31T18:06:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-31T18:06:57Z"}, "message": "Merge pull request #2984 from flip1995/single_char_pattern\n\nsingle_char_pattern: lint only on the argument span", "tree": {"sha": "46fd7ed6dc0e98f6c3a665b3e0ed9a2932bb5969", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46fd7ed6dc0e98f6c3a665b3e0ed9a2932bb5969"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97840090b78ce1f370c3380e8a703da420fe3a98", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbYKVBCRBK7hj4Ov3rIwAAdHIIABW9W3sixYp89Gh9IpQFaCrG\n+3HtSkVGu7PKb9fhMEA594y9ESXTjHW6vETKTQ64xm6s9z6M0szdHMAmcC3NEgd9\n4EGVenJF1NROvevA1e2+IFlu81W81WZQe8BW3Zi5i1pRTozEXvu1EgrogNHM7Elo\nWPY7yKwHPfkW8Jcgz3sIlleuAi7wzO0UCBBGdRXaV8GYEHbNwjKZ9gzeC2LFY17M\nQYi5X5piNNxBvnYHnrpesL7tHSLSAkLBhHTHKtgUAvqhlC3se44YQruFwaTgEE7K\nLKi0Jffv61OacebBQ9fGL3vvGcYh8DYZ+5iSwIj6MDqtH6iEP2XvjvwJkGub3x8=\n=XSpo\n-----END PGP SIGNATURE-----\n", "payload": "tree 46fd7ed6dc0e98f6c3a665b3e0ed9a2932bb5969\nparent bc98346baac852613bbae92cc0592f3b5823eaaf\nparent 74fcf7de4a4a1d650621835a8c9dd7342fbbe17d\nauthor Philipp Hansch <dev@phansch.net> 1533060417 +0100\ncommitter GitHub <noreply@github.com> 1533060417 +0100\n\nMerge pull request #2984 from flip1995/single_char_pattern\n\nsingle_char_pattern: lint only on the argument span"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97840090b78ce1f370c3380e8a703da420fe3a98", "html_url": "https://github.com/rust-lang/rust/commit/97840090b78ce1f370c3380e8a703da420fe3a98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97840090b78ce1f370c3380e8a703da420fe3a98/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc98346baac852613bbae92cc0592f3b5823eaaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc98346baac852613bbae92cc0592f3b5823eaaf", "html_url": "https://github.com/rust-lang/rust/commit/bc98346baac852613bbae92cc0592f3b5823eaaf"}, {"sha": "74fcf7de4a4a1d650621835a8c9dd7342fbbe17d", "url": "https://api.github.com/repos/rust-lang/rust/commits/74fcf7de4a4a1d650621835a8c9dd7342fbbe17d", "html_url": "https://github.com/rust-lang/rust/commit/74fcf7de4a4a1d650621835a8c9dd7342fbbe17d"}], "stats": {"total": 55, "additions": 31, "deletions": 24}, "files": [{"sha": "6850ef2f81d697e4751599be1f02982283e2d8c2", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/97840090b78ce1f370c3380e8a703da420fe3a98/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97840090b78ce1f370c3380e8a703da420fe3a98/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=97840090b78ce1f370c3380e8a703da420fe3a98", "patch": "@@ -1889,18 +1889,17 @@ fn lint_single_char_pattern<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx hi\n     if let Some((Constant::Str(r), _)) = constant(cx, cx.tables, arg) {\n         if r.len() == 1 {\n             let c = r.chars().next().unwrap();\n-            let snip = snippet(cx, expr.span, \"..\");\n+            let snip = snippet(cx, arg.span, \"..\");\n             let hint = snip.replace(\n                 &format!(\"\\\"{}\\\"\", c.escape_default()),\n                 &format!(\"'{}'\", c.escape_default()));\n-            span_lint_and_then(\n+            span_lint_and_sugg(\n                 cx,\n                 SINGLE_CHAR_PATTERN,\n                 arg.span,\n                 \"single-character string constant used as pattern\",\n-                |db| {\n-                    db.span_suggestion(expr.span, \"try using a char instead\", hint);\n-                },\n+                \"try using a char instead\",\n+                hint,\n             );\n         }\n     }"}, {"sha": "73d00857415844d1301a3790d10b712fe17dc3e0", "filename": "tests/ui/single_char_pattern.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97840090b78ce1f370c3380e8a703da420fe3a98/tests%2Fui%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97840090b78ce1f370c3380e8a703da420fe3a98/tests%2Fui%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.rs?ref=97840090b78ce1f370c3380e8a703da420fe3a98", "patch": "@@ -40,4 +40,6 @@ fn main() {\n \n     let h = HashSet::<String>::new();\n     h.contains(\"X\"); // should not warn\n+\n+    x.replace(\";\", \",\").split(\",\"); // issue #2978\n }"}, {"sha": "1e7e9cf78cf13a4d3a32339751ff7465bcf7942c", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/97840090b78ce1f370c3380e8a703da420fe3a98/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97840090b78ce1f370c3380e8a703da420fe3a98/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=97840090b78ce1f370c3380e8a703da420fe3a98", "patch": "@@ -2,111 +2,117 @@ error: single-character string constant used as pattern\n  --> $DIR/single_char_pattern.rs:5:13\n   |\n 5 |     x.split(\"x\");\n-  |     --------^^^- help: try using a char instead: `x.split('x')`\n+  |             ^^^ help: try using a char instead: `'x'`\n   |\n   = note: `-D single-char-pattern` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:22:16\n    |\n 22 |     x.contains(\"x\");\n-   |     -----------^^^- help: try using a char instead: `x.contains('x')`\n+   |                ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:23:19\n    |\n 23 |     x.starts_with(\"x\");\n-   |     --------------^^^- help: try using a char instead: `x.starts_with('x')`\n+   |                   ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:24:17\n    |\n 24 |     x.ends_with(\"x\");\n-   |     ------------^^^- help: try using a char instead: `x.ends_with('x')`\n+   |                 ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:25:12\n    |\n 25 |     x.find(\"x\");\n-   |     -------^^^- help: try using a char instead: `x.find('x')`\n+   |            ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:26:13\n    |\n 26 |     x.rfind(\"x\");\n-   |     --------^^^- help: try using a char instead: `x.rfind('x')`\n+   |             ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:27:14\n    |\n 27 |     x.rsplit(\"x\");\n-   |     ---------^^^- help: try using a char instead: `x.rsplit('x')`\n+   |              ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:28:24\n    |\n 28 |     x.split_terminator(\"x\");\n-   |     -------------------^^^- help: try using a char instead: `x.split_terminator('x')`\n+   |                        ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:29:25\n    |\n 29 |     x.rsplit_terminator(\"x\");\n-   |     --------------------^^^- help: try using a char instead: `x.rsplit_terminator('x')`\n+   |                         ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:30:17\n    |\n 30 |     x.splitn(0, \"x\");\n-   |     ------------^^^- help: try using a char instead: `x.splitn(0, 'x')`\n+   |                 ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:31:18\n    |\n 31 |     x.rsplitn(0, \"x\");\n-   |     -------------^^^- help: try using a char instead: `x.rsplitn(0, 'x')`\n+   |                  ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:32:15\n    |\n 32 |     x.matches(\"x\");\n-   |     ----------^^^- help: try using a char instead: `x.matches('x')`\n+   |               ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:33:16\n    |\n 33 |     x.rmatches(\"x\");\n-   |     -----------^^^- help: try using a char instead: `x.rmatches('x')`\n+   |                ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:34:21\n    |\n 34 |     x.match_indices(\"x\");\n-   |     ----------------^^^- help: try using a char instead: `x.match_indices('x')`\n+   |                     ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:35:22\n    |\n 35 |     x.rmatch_indices(\"x\");\n-   |     -----------------^^^- help: try using a char instead: `x.rmatch_indices('x')`\n+   |                      ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:36:25\n    |\n 36 |     x.trim_left_matches(\"x\");\n-   |     --------------------^^^- help: try using a char instead: `x.trim_left_matches('x')`\n+   |                         ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:37:26\n    |\n 37 |     x.trim_right_matches(\"x\");\n-   |     ---------------------^^^- help: try using a char instead: `x.trim_right_matches('x')`\n+   |                          ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:39:13\n    |\n 39 |     x.split(\"/n\");\n-   |     --------^^^^- help: try using a char instead: `x.split('/n')`\n+   |             ^^^^ help: try using a char instead: `'/n'`\n \n-error: aborting due to 18 previous errors\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:44:31\n+   |\n+44 |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n+   |                               ^^^ help: try using a char instead: `','`\n+\n+error: aborting due to 19 previous errors\n "}]}