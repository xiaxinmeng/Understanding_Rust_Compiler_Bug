{"sha": "719dafc48b3a076e9f6341be97bad0cef316f24b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOWRhZmM0OGIzYTA3NmU5ZjYzNDFiZTk3YmFkMGNlZjMxNmYyNGI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-06-28T07:19:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-06-28T07:19:36Z"}, "message": "double-check mutability inside Allocation", "tree": {"sha": "8fc850695cfd551826e06073c480fcb73db605ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fc850695cfd551826e06073c480fcb73db605ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/719dafc48b3a076e9f6341be97bad0cef316f24b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/719dafc48b3a076e9f6341be97bad0cef316f24b", "html_url": "https://github.com/rust-lang/rust/commit/719dafc48b3a076e9f6341be97bad0cef316f24b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/719dafc48b3a076e9f6341be97bad0cef316f24b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d08a4718a9e3b9838a01345384d5b224b268daa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d08a4718a9e3b9838a01345384d5b224b268daa1", "html_url": "https://github.com/rust-lang/rust/commit/d08a4718a9e3b9838a01345384d5b224b268daa1"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c0cfc7b1ba4ec221cf3e81b377ea78fd04ea6a4a", "filename": "compiler/rustc_middle/src/mir/interpret/allocation.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/719dafc48b3a076e9f6341be97bad0cef316f24b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/719dafc48b3a076e9f6341be97bad0cef316f24b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs?ref=719dafc48b3a076e9f6341be97bad0cef316f24b", "patch": "@@ -340,6 +340,8 @@ impl<Tag: Copy, Extra> Allocation<Tag, Extra> {\n         range: AllocRange,\n         val: ScalarMaybeUninit<Tag>,\n     ) -> AllocResult {\n+        assert!(self.mutability == Mutability::Mut);\n+\n         let val = match val {\n             ScalarMaybeUninit::Scalar(scalar) => scalar,\n             ScalarMaybeUninit::Uninit => {\n@@ -463,6 +465,7 @@ impl<Tag: Copy, Extra> Allocation<Tag, Extra> {\n         if range.size.bytes() == 0 {\n             return;\n         }\n+        assert!(self.mutability == Mutability::Mut);\n         self.init_mask.set_range(range.start, range.end(), is_init);\n     }\n }"}]}