{"sha": "048fe539e4a976c1aa193398d64f55648365aea4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OGZlNTM5ZTRhOTc2YzFhYTE5MzM5OGQ2NGY1NTY0ODM2NWFlYTQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-24T16:47:16Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-24T16:47:16Z"}, "message": "Don't invoke the default panic hook from report_ice", "tree": {"sha": "01bee7a6221a75f3dfb5683688c38f0708c63e54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01bee7a6221a75f3dfb5683688c38f0708c63e54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/048fe539e4a976c1aa193398d64f55648365aea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/048fe539e4a976c1aa193398d64f55648365aea4", "html_url": "https://github.com/rust-lang/rust/commit/048fe539e4a976c1aa193398d64f55648365aea4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/048fe539e4a976c1aa193398d64f55648365aea4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68424e2f01ef6884af440114f7cf2ed01faf86e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/68424e2f01ef6884af440114f7cf2ed01faf86e3", "html_url": "https://github.com/rust-lang/rust/commit/68424e2f01ef6884af440114f7cf2ed01faf86e3"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "f256769bf768f1286dc6143fc7d1458e2af75869", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/048fe539e4a976c1aa193398d64f55648365aea4/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/048fe539e4a976c1aa193398d64f55648365aea4/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=048fe539e4a976c1aa193398d64f55648365aea4", "patch": "@@ -1151,23 +1151,26 @@ pub fn catch_with_exit_code(f: impl FnOnce() -> interface::Result<()>) -> i32 {\n static DEFAULT_HOOK: SyncLazy<Box<dyn Fn(&panic::PanicInfo<'_>) + Sync + Send + 'static>> =\n     SyncLazy::new(|| {\n         let hook = panic::take_hook();\n-        panic::set_hook(Box::new(|info| report_ice(info, BUG_REPORT_URL)));\n+        panic::set_hook(Box::new(|info| {\n+            // Invoke the default handler, which prints the actual panic message and optionally a backtrace\n+            (*DEFAULT_HOOK)(info);\n+\n+            // Separate the output with an empty line\n+            eprintln!();\n+\n+            // Print the ICE message\n+            report_ice(info, BUG_REPORT_URL);\n+        }));\n         hook\n     });\n \n-/// Prints the ICE message, including backtrace and query stack.\n+/// Prints the ICE message, including query stack, but without backtrace.\n ///\n /// The message will point the user at `bug_report_url` to report the ICE.\n ///\n /// When `install_ice_hook` is called, this function will be called as the panic\n /// hook.\n pub fn report_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n-    // Invoke the default handler, which prints the actual panic message and optionally a backtrace\n-    (*DEFAULT_HOOK)(info);\n-\n-    // Separate the output with an empty line\n-    eprintln!();\n-\n     let emitter = Box::new(rustc_errors::emitter::EmitterWriter::stderr(\n         rustc_errors::ColorConfig::Auto,\n         None,"}]}