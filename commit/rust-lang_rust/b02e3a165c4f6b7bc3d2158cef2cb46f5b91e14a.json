{"sha": "b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMmUzYTE2NWM0ZjZiN2JjM2QyMTU4Y2VmMmNiNDZmNWI5MWUxNGE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-06-06T15:50:21Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-06-06T18:48:16Z"}, "message": "rustc_typeck: do not overlap a borrow of TypeckTables with method lookup.", "tree": {"sha": "d5f8076019d77832ee500da8281941ef6cd2113b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5f8076019d77832ee500da8281941ef6cd2113b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a", "html_url": "https://github.com/rust-lang/rust/commit/b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c94a9ac8ae33e6580940e02abb425dd2fe69b5d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c94a9ac8ae33e6580940e02abb425dd2fe69b5d8", "html_url": "https://github.com/rust-lang/rust/commit/c94a9ac8ae33e6580940e02abb425dd2fe69b5d8"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "36bd665738951ff3c29a47871b72be393771ea83", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a", "patch": "@@ -446,9 +446,13 @@ impl<'a, 'gcx, 'tcx> ConfirmContext<'a, 'gcx, 'tcx> {\n             // overloaded lvalue ops, and will be fixed by them in order to get\n             // the correct region.\n             let mut source = self.node_ty(expr.id);\n-            if let Some(adjustments) = self.tables.borrow_mut().adjustments.get_mut(&expr.id) {\n+            // Do not mutate adjustments in place, but rather take them,\n+            // and replace them after mutating them, to avoid having the\n+            // tables borrowed during (`deref_mut`) method resolution.\n+            let previous_adjustments = self.tables.borrow_mut().adjustments.remove(&expr.id);\n+            if let Some(mut adjustments) = previous_adjustments {\n                 let pref = LvaluePreference::PreferMutLvalue;\n-                for adjustment in adjustments {\n+                for adjustment in &mut adjustments {\n                     if let Adjust::Deref(Some(ref mut deref)) = adjustment.kind {\n                         if let Some(ok) = self.try_overloaded_deref(expr.span, source, pref) {\n                             let method = self.register_infer_ok_obligations(ok);\n@@ -462,6 +466,7 @@ impl<'a, 'gcx, 'tcx> ConfirmContext<'a, 'gcx, 'tcx> {\n                     }\n                     source = adjustment.target;\n                 }\n+                self.tables.borrow_mut().adjustments.insert(expr.id, adjustments);\n             }\n \n             match expr.node {"}, {"sha": "7182fc213f74aea7fb72439195d18341b5c64afc", "filename": "src/test/run-pass/issue-42463.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a/src%2Ftest%2Frun-pass%2Fissue-42463.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a/src%2Ftest%2Frun-pass%2Fissue-42463.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-42463.rs?ref=b02e3a165c4f6b7bc3d2158cef2cb46f5b91e14a", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::{Deref, DerefMut};\n+\n+struct CheckedDeref<T, F> {\n+    value: T,\n+    check: F\n+}\n+\n+impl<F: Fn(&T) -> bool, T> Deref for CheckedDeref<T, F> {\n+    type Target = T;\n+    fn deref(&self) -> &T {\n+        assert!((self.check)(&self.value));\n+        &self.value\n+    }\n+}\n+\n+impl<F: Fn(&T) -> bool, T> DerefMut for CheckedDeref<T, F> {\n+    fn deref_mut(&mut self) -> &mut T {\n+        assert!((self.check)(&self.value));\n+        &mut self.value\n+    }\n+}\n+\n+\n+fn main() {\n+    let mut v = CheckedDeref {\n+        value: vec![0],\n+        check: |v: &Vec<_>| !v.is_empty()\n+    };\n+    v.push(1);\n+    assert_eq!(*v, vec![0, 1]);\n+}"}]}