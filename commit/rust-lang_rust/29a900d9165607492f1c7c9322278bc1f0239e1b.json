{"sha": "29a900d9165607492f1c7c9322278bc1f0239e1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YTkwMGQ5MTY1NjA3NDkyZjFjN2M5MzIyMjc4YmMxZjAyMzllMWI=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-05-13T09:31:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-13T09:31:20Z"}, "message": "Merge pull request #2754 from phansch/rustup20180513\n\nRustup to 2018-05-13", "tree": {"sha": "2b5a3d555045e59d9e6967fa8a77ba0706210aaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b5a3d555045e59d9e6967fa8a77ba0706210aaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29a900d9165607492f1c7c9322278bc1f0239e1b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa+AXoCRBK7hj4Ov3rIwAAdHIIACftNHdy9pMfsSQ1DjVwh0hN\nMdtAg5HRCwLiYjaL53MEhCZPF/HDp6o9RRPAlsb5+wytnWKA4drS5MVz0hgi69So\n4/wcErS/SZRH5BJ0w5WySO86K/rGj1b+Tn07HsvuKLF2he4vQhnLQI77109J35pB\n8d9aKg48RW3+Pxy+qxUVvf095xeG8LsGW/zYFl5SjG5Yu3kY39hHqZ94GkFItLm+\nZ1Z+3nhXfSuCdlO2IDGhVnovJ8ECBglB/oh4CeY3rMWAEFsaLB7rDRCmvM8GkGkU\nCcAcmkkEZnGSdnjl8yuU/3UUgHZUEWK1pGgllMRTQlIG8B/Xgq+appdoEiKw2vM=\n=FQUQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 2b5a3d555045e59d9e6967fa8a77ba0706210aaf\nparent 18a5b90242218df7abd6473cbee456a9dcfd32a0\nparent a8d7e5a1f231a80a5d6a86de97ff705c64ef4c3e\nauthor Philipp Hansch <dev@phansch.net> 1526203880 +0200\ncommitter GitHub <noreply@github.com> 1526203880 +0200\n\nMerge pull request #2754 from phansch/rustup20180513\n\nRustup to 2018-05-13"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29a900d9165607492f1c7c9322278bc1f0239e1b", "html_url": "https://github.com/rust-lang/rust/commit/29a900d9165607492f1c7c9322278bc1f0239e1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29a900d9165607492f1c7c9322278bc1f0239e1b/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18a5b90242218df7abd6473cbee456a9dcfd32a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/18a5b90242218df7abd6473cbee456a9dcfd32a0", "html_url": "https://github.com/rust-lang/rust/commit/18a5b90242218df7abd6473cbee456a9dcfd32a0"}, {"sha": "a8d7e5a1f231a80a5d6a86de97ff705c64ef4c3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8d7e5a1f231a80a5d6a86de97ff705c64ef4c3e", "html_url": "https://github.com/rust-lang/rust/commit/a8d7e5a1f231a80a5d6a86de97ff705c64ef4c3e"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "1cb596d81d49bdd60114b150dd014c7d2350d472", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/29a900d9165607492f1c7c9322278bc1f0239e1b/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/29a900d9165607492f1c7c9322278bc1f0239e1b/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=29a900d9165607492f1c7c9322278bc1f0239e1b", "patch": "@@ -1,6 +1,9 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.199\n+* Rustup to *rustc 1.27.0-nightly (ff2ac35db 2018-05-12)*\n+\n ## 0.0.198\n * Rustup to *rustc 1.27.0-nightly (acd3871ba 2018-05-10)*\n "}, {"sha": "a200a6710eebabd4d36b28536c2a458f03ada41a", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29a900d9165607492f1c7c9322278bc1f0239e1b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/29a900d9165607492f1c7c9322278bc1f0239e1b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=29a900d9165607492f1c7c9322278bc1f0239e1b", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.198\"\n+version = \"0.0.199\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -37,7 +37,7 @@ path = \"src/driver.rs\"\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.198\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.199\", path = \"clippy_lints\" }\n # end automatic update\n regex = \"1\"\n semver = \"0.9\""}, {"sha": "284f7e75c199ab8baa1a57153c165e784322f566", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=29a900d9165607492f1c7c9322278bc1f0239e1b", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.198\"\n+version = \"0.0.199\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "b51a9209c4cf79da8449aab77a60a6b193b5da59", "filename": "clippy_lints/src/array_indexing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2Fsrc%2Farray_indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2Fsrc%2Farray_indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farray_indexing.rs?ref=29a900d9165607492f1c7c9322278bc1f0239e1b", "patch": "@@ -61,7 +61,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ArrayIndexing {\n             // Array with known size can be checked statically\n             let ty = cx.tables.expr_ty(array);\n             if let ty::TyArray(_, size) = ty.sty {\n-                let size = size.val.to_raw_bits().unwrap();\n+                let size = size.assert_usize(cx.tcx).unwrap().into();\n \n                 // Index is a constant uint\n                 if let Some((Constant::Int(const_index), _)) = constant(cx, index) {"}, {"sha": "a078fde47903744a0610081335668e5bd29089e0", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=29a900d9165607492f1c7c9322278bc1f0239e1b", "patch": "@@ -209,7 +209,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n             ExprTup(ref tup) => self.multi(tup).map(Constant::Tuple),\n             ExprRepeat(ref value, _) => {\n                 let n = match self.tables.expr_ty(e).sty {\n-                    ty::TyArray(_, n) => n.val.to_raw_bits().expect(\"array length\"),\n+                    ty::TyArray(_, n) => n.assert_usize(self.tcx).expect(\"array length\"),\n                     _ => span_bug!(e.span, \"typeck error\"),\n                 };\n                 self.expr(value).map(|v| Constant::Repeat(Box::new(v), n as u64))\n@@ -415,17 +415,17 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n }\n \n pub fn miri_to_const<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, result: &ty::Const<'tcx>) -> Option<Constant> {\n-    use rustc::mir::interpret::{Value, PrimVal};\n+    use rustc::mir::interpret::{PrimVal, ConstValue};\n     match result.val {\n-        ConstVal::Value(Value::ByVal(PrimVal::Bytes(b))) => match result.ty.sty {\n+        ConstVal::Value(ConstValue::ByVal(PrimVal::Bytes(b))) => match result.ty.sty {\n             ty::TyBool => Some(Constant::Bool(b == 1)),\n             ty::TyUint(_) | ty::TyInt(_) => Some(Constant::Int(b)),\n             ty::TyFloat(FloatTy::F32) => Some(Constant::F32(f32::from_bits(b as u32))),\n             ty::TyFloat(FloatTy::F64) => Some(Constant::F64(f64::from_bits(b as u64))),\n             // FIXME: implement other conversion\n             _ => None,\n         },\n-        ConstVal::Value(Value::ByValPair(PrimVal::Ptr(ptr), PrimVal::Bytes(n))) => match result.ty.sty {\n+        ConstVal::Value(ConstValue::ByValPair(PrimVal::Ptr(ptr), PrimVal::Bytes(n))) => match result.ty.sty {\n             ty::TyRef(_, tam, _) => match tam.sty {\n                 ty::TyStr => {\n                     let alloc = tcx"}, {"sha": "a7ca0d27e17b5e5b5cebacd0859413f07de64dca", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=29a900d9165607492f1c7c9322278bc1f0239e1b", "patch": "@@ -1223,7 +1223,7 @@ fn check_for_loop_arg(cx: &LateContext, pat: &Pat, arg: &Expr, expr: &Expr) {\n                     match cx.tables.expr_ty(&args[0]).sty {\n                         // If the length is greater than 32 no traits are implemented for array and\n                         // therefore we cannot use `&`.\n-                        ty::TypeVariants::TyArray(_, size) if size.val.to_raw_bits().expect(\"array size\") > 32 => (),\n+                        ty::TypeVariants::TyArray(_, size) if size.assert_usize(cx.tcx).expect(\"array size\") > 32 => (),\n                         _ => lint_iter_method(cx, args, arg, method_name),\n                     };\n                 } else {\n@@ -1784,7 +1784,7 @@ fn is_ref_iterable_type(cx: &LateContext, e: &Expr) -> bool {\n     // no walk_ptrs_ty: calling iter() on a reference can make sense because it\n     // will allow further borrows afterwards\n     let ty = cx.tables.expr_ty(e);\n-    is_iterable_array(ty) ||\n+    is_iterable_array(ty, cx) ||\n     match_type(cx, ty, &paths::VEC) ||\n     match_type(cx, ty, &paths::LINKED_LIST) ||\n     match_type(cx, ty, &paths::HASHMAP) ||\n@@ -1795,10 +1795,10 @@ fn is_ref_iterable_type(cx: &LateContext, e: &Expr) -> bool {\n     match_type(cx, ty, &paths::BTREESET)\n }\n \n-fn is_iterable_array(ty: Ty) -> bool {\n+fn is_iterable_array(ty: Ty, cx: &LateContext) -> bool {\n     // IntoIterator is currently only implemented for array sizes <= 32 in rustc\n     match ty.sty {\n-        ty::TyArray(_, n) => (0..=32).contains(&n.val.to_raw_bits().expect(\"array length\")),\n+        ty::TyArray(_, n) => (0..=32).contains(&n.assert_usize(cx.tcx).expect(\"array length\")),\n         _ => false,\n     }\n }"}, {"sha": "c7702e6bced2f67ad40e2d05b9709292d4d5b557", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a900d9165607492f1c7c9322278bc1f0239e1b/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=29a900d9165607492f1c7c9322278bc1f0239e1b", "patch": "@@ -1299,7 +1299,7 @@ fn derefs_to_slice(cx: &LateContext, expr: &hir::Expr, ty: Ty) -> Option<sugg::S\n             ty::TySlice(_) => true,\n             ty::TyAdt(def, _) if def.is_box() => may_slice(cx, ty.boxed_ty()),\n             ty::TyAdt(..) => match_type(cx, ty, &paths::VEC),\n-            ty::TyArray(_, size) => size.val.to_raw_bits().expect(\"array length\") < 32,\n+            ty::TyArray(_, size) => size.assert_usize(cx.tcx).expect(\"array length\") < 32,\n             ty::TyRef(_, inner, _) => may_slice(cx, inner),\n             _ => false,\n         }"}, {"sha": "9d1de5e2c79c50f5e3b4c01e9f5e48aa863adf5d", "filename": "min_version.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29a900d9165607492f1c7c9322278bc1f0239e1b/min_version.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29a900d9165607492f1c7c9322278bc1f0239e1b/min_version.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/min_version.txt?ref=29a900d9165607492f1c7c9322278bc1f0239e1b", "patch": "@@ -1,7 +1,7 @@\n-rustc 1.27.0-nightly (acd3871ba 2018-05-10)\n+rustc 1.27.0-nightly (ff2ac35db 2018-05-12)\n binary: rustc\n-commit-hash: acd3871ba17316419c644e17547887787628ec2f\n-commit-date: 2018-05-10\n+commit-hash: ff2ac35db93a80b2de5daa4f280bf1503d62c164\n+commit-date: 2018-05-12\n host: x86_64-unknown-linux-gnu\n release: 1.27.0-nightly\n LLVM version: 6.0"}]}