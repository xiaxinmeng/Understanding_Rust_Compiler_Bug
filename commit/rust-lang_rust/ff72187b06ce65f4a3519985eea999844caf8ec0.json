{"sha": "ff72187b06ce65f4a3519985eea999844caf8ec0", "node_id": "C_kwDOAAsO6NoAKGZmNzIxODdiMDZjZTY1ZjRhMzUxOTk4NWVlYTk5OTg0NGNhZjhlYzA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-20T22:50:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-20T22:50:28Z"}, "message": "Rollup merge of #104632 - RalfJung:core-test-strict-provenance, r=thomcc\n\navoid non-strict-provenance casts in libcore tests\n\nr? `@thomcc`", "tree": {"sha": "6d6c5b2a6fc7dee72fabee84d71eafc0fa399638", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d6c5b2a6fc7dee72fabee84d71eafc0fa399638"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff72187b06ce65f4a3519985eea999844caf8ec0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjeq80CRBK7hj4Ov3rIwAAxqkIAA5uJYDJVlWPaXt7KXj8tvrw\nQrB1JHHBPDpMxRqstFyMCPhq7ce8DOKsOCrduPTXyt/VBQvRccaL6Ga37YdlPW0j\nm12xA3WOAoW/gCyn0rT1xish6v7UW5KMaAL3TeqGBQJj6kmZmcOisqhBIDaVaFpQ\nINiaYah6+VXD9l0wazJk14jhtGJbsPftTvQHT+tv+Yz+cWp6ULIs6lBUCU9aLK2z\ndShmXpQUQpUEi3MaaYEUQk2EacmMMeds0tyjy1vrZ8uZWaFLhlF97PrecWtQ9qPH\n5Sg4DPImRHVVRXVfJqWT6N8A/eMG0aPHnSqYFyX0z0arWFaghcKott0Qi/dWBnc=\n=Oik7\n-----END PGP SIGNATURE-----\n", "payload": "tree 6d6c5b2a6fc7dee72fabee84d71eafc0fa399638\nparent b2ee0df1b4dec2d4b029c1ae53f0a39bcde45e58\nparent 428ab59fb72e92358e3dad3e6a2817ffdfa7dec6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668984628 +0100\ncommitter GitHub <noreply@github.com> 1668984628 +0100\n\nRollup merge of #104632 - RalfJung:core-test-strict-provenance, r=thomcc\n\navoid non-strict-provenance casts in libcore tests\n\nr? `@thomcc`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff72187b06ce65f4a3519985eea999844caf8ec0", "html_url": "https://github.com/rust-lang/rust/commit/ff72187b06ce65f4a3519985eea999844caf8ec0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff72187b06ce65f4a3519985eea999844caf8ec0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2ee0df1b4dec2d4b029c1ae53f0a39bcde45e58", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ee0df1b4dec2d4b029c1ae53f0a39bcde45e58", "html_url": "https://github.com/rust-lang/rust/commit/b2ee0df1b4dec2d4b029c1ae53f0a39bcde45e58"}, {"sha": "428ab59fb72e92358e3dad3e6a2817ffdfa7dec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/428ab59fb72e92358e3dad3e6a2817ffdfa7dec6", "html_url": "https://github.com/rust-lang/rust/commit/428ab59fb72e92358e3dad3e6a2817ffdfa7dec6"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "724adb7ad5dd7338b5ca3de3d167b624ad4d7867", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=ff72187b06ce65f4a3519985eea999844caf8ec0", "patch": "@@ -89,6 +89,7 @@\n // Lints:\n #![deny(rust_2021_incompatible_or_patterns)]\n #![deny(unsafe_op_in_unsafe_fn)]\n+#![deny(fuzzy_provenance_casts)]\n #![warn(deprecated_in_future)]\n #![warn(missing_debug_implementations)]\n #![warn(missing_docs)]\n@@ -162,6 +163,7 @@\n #![feature(slice_ptr_get)]\n #![feature(slice_split_at_unchecked)]\n #![feature(str_internals)]\n+#![feature(strict_provenance)]\n #![feature(utf16_extra)]\n #![feature(utf16_extra_const)]\n #![feature(variant_count)]"}, {"sha": "af64fbc8e9eca1539bc9285cd02b0a29e139b171", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=ff72187b06ce65f4a3519985eea999844caf8ec0", "patch": "@@ -140,6 +140,7 @@ impl<T: ?Sized> *const T {\n     /// assert_eq!(<*const u8>::from_bits(1), dangling);\n     /// ```\n     #[unstable(feature = \"ptr_to_from_bits\", issue = \"91126\")]\n+    #[allow(fuzzy_provenance_casts)] // this is an unstable and semi-deprecated cast function\n     pub fn from_bits(bits: usize) -> Self\n     where\n         T: Sized,"}, {"sha": "89b11637ecabefc0405209cfe16c11b6accc1912", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=ff72187b06ce65f4a3519985eea999844caf8ec0", "patch": "@@ -616,6 +616,7 @@ pub const fn invalid_mut<T>(addr: usize) -> *mut T {\n #[inline]\n #[unstable(feature = \"strict_provenance\", issue = \"95228\")]\n #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n+#[allow(fuzzy_provenance_casts)] // this *is* the strict provenance API one should use instead\n pub fn from_exposed_addr<T>(addr: usize) -> *const T\n where\n     T: Sized,\n@@ -653,6 +654,7 @@ where\n #[inline]\n #[unstable(feature = \"strict_provenance\", issue = \"95228\")]\n #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n+#[allow(fuzzy_provenance_casts)] // this *is* the strict provenance API one should use instead\n pub fn from_exposed_addr_mut<T>(addr: usize) -> *mut T\n where\n     T: Sized,"}, {"sha": "d6872ba1c20f0f81f1ea7f51bcfb0c18a6d2235d", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=ff72187b06ce65f4a3519985eea999844caf8ec0", "patch": "@@ -146,6 +146,7 @@ impl<T: ?Sized> *mut T {\n     /// assert_eq!(<*mut u8>::from_bits(1), dangling);\n     /// ```\n     #[unstable(feature = \"ptr_to_from_bits\", issue = \"91126\")]\n+    #[allow(fuzzy_provenance_casts)] // this is an unstable and semi-deprecated cast function\n     pub fn from_bits(bits: usize) -> Self\n     where\n         T: Sized,"}, {"sha": "68f7dcdd5d6aa960eee2adecaa022e65bdb6ec7c", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=ff72187b06ce65f4a3519985eea999844caf8ec0", "patch": "@@ -109,6 +109,7 @@\n #![feature(utf8_chunks)]\n #![feature(is_ascii_octdigit)]\n #![deny(unsafe_op_in_unsafe_fn)]\n+#![deny(fuzzy_provenance_casts)]\n \n extern crate test;\n "}, {"sha": "90bc83510803f2185d4f8a3ec83e19343cc5eda8", "filename": "library/core/tests/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Ftests%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff72187b06ce65f4a3519985eea999844caf8ec0/library%2Fcore%2Ftests%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fptr.rs?ref=ff72187b06ce65f4a3519985eea999844caf8ec0", "patch": "@@ -677,7 +677,7 @@ fn align_offset_issue_103361() {\n     #[cfg(target_pointer_width = \"16\")]\n     const SIZE: usize = 1 << 13;\n     struct HugeSize([u8; SIZE - 1]);\n-    let _ = (SIZE as *const HugeSize).align_offset(SIZE);\n+    let _ = ptr::invalid::<HugeSize>(SIZE).align_offset(SIZE);\n }\n \n #[test]"}]}