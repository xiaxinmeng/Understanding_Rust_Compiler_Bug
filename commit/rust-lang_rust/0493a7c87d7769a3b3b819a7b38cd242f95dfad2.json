{"sha": "0493a7c87d7769a3b3b819a7b38cd242f95dfad2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OTNhN2M4N2Q3NzY5YTNiM2I4MTlhN2IzOGNkMjQyZjk1ZGZhZDI=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-23T08:36:58Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-24T06:28:25Z"}, "message": "Added str::map and str::all functions", "tree": {"sha": "ab15c6d01a375c391f3e93db264d5d740653ecbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab15c6d01a375c391f3e93db264d5d740653ecbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0493a7c87d7769a3b3b819a7b38cd242f95dfad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0493a7c87d7769a3b3b819a7b38cd242f95dfad2", "html_url": "https://github.com/rust-lang/rust/commit/0493a7c87d7769a3b3b819a7b38cd242f95dfad2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0493a7c87d7769a3b3b819a7b38cd242f95dfad2/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "477c3a8eb16a0b81e5211c929851ce221e9268d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/477c3a8eb16a0b81e5211c929851ce221e9268d7", "html_url": "https://github.com/rust-lang/rust/commit/477c3a8eb16a0b81e5211c929851ce221e9268d7"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "a090d57be453fdde2323089b3eb258fa706f57d7", "filename": "src/libcore/str.rs", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0493a7c87d7769a3b3b819a7b38cd242f95dfad2/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0493a7c87d7769a3b3b819a7b38cd242f95dfad2/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=0493a7c87d7769a3b3b819a7b38cd242f95dfad2", "patch": "@@ -1113,6 +1113,33 @@ fn escape(s: str) -> str {\n     r\n }\n \n+/*\n+Function: all\n+\n+Return true if a predicate matches all characters\n+\n+If the string contains no characters\n+*/\n+fn all(ss: str, ff: fn&(char) -> bool) -> bool {\n+    str::loop_chars(ss, ff)\n+}\n+\n+/*\n+Function: map\n+\n+Apply a function to each character\n+*/\n+fn map(ss: str, ff: fn&(char) -> char) -> str {\n+    let result = \"\";\n+\n+    str::iter_chars(ss, {|cc|\n+        str::push_char(result, ff(cc));\n+    });\n+\n+    ret result;\n+}\n+\n+\n #[cfg(test)]\n mod tests {\n \n@@ -1572,4 +1599,19 @@ mod tests {\n         assert(escape(\"abc\\ndef\") == \"abc\\\\ndef\");\n         assert(escape(\"abc\\\"def\") == \"abc\\\\\\\"def\");\n     }\n-}\n\\ No newline at end of file\n+\n+   #[test]\n+   fn test_map () {\n+      assert \"\" == map(\"\", char::to_upper);\n+      assert \"YMCA\" == map(\"ymca\", char::to_upper);\n+   }\n+\n+   #[test]\n+   fn test_all () {\n+       assert true  == all(\"\", char::is_uppercase);\n+       assert false == all(\"ymca\", char::is_uppercase);\n+       assert true  == all(\"YMCA\", char::is_uppercase);\n+       assert false == all(\"yMCA\", char::is_uppercase);\n+       assert false == all(\"YMCy\", char::is_uppercase);\n+   }\n+}"}]}