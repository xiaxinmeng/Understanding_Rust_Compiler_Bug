{"sha": "1f0c05ff745cbb40ad065be6522e2c671fc6bb93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMGMwNWZmNzQ1Y2JiNDBhZDA2NWJlNjUyMmUyYzY3MWZjNmJiOTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-09T02:16:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-09T02:16:11Z"}, "message": "auto merge of #7018 : bill-myers/rust/fix_7017, r=thestinger\n\nMinimally fixes #7017, we were overwriting the result and thus ignoring attributes before the last.\r\n\r\ncsearch::get_item_attrs and decoder::get_item_attrs should probably also be changed to each_item_attrs using the for protocol, but that's just a minor performance/style issue.", "tree": {"sha": "377828d3461bdd3351b51cd53151cdb8b76346da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/377828d3461bdd3351b51cd53151cdb8b76346da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f0c05ff745cbb40ad065be6522e2c671fc6bb93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0c05ff745cbb40ad065be6522e2c671fc6bb93", "html_url": "https://github.com/rust-lang/rust/commit/1f0c05ff745cbb40ad065be6522e2c671fc6bb93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f0c05ff745cbb40ad065be6522e2c671fc6bb93/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "470bf0dfb362e7494cfddf4e7d443e1264dfdf2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/470bf0dfb362e7494cfddf4e7d443e1264dfdf2f", "html_url": "https://github.com/rust-lang/rust/commit/470bf0dfb362e7494cfddf4e7d443e1264dfdf2f"}, {"sha": "54ec7ab057018fac886039108d02300025e223a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/54ec7ab057018fac886039108d02300025e223a0", "html_url": "https://github.com/rust-lang/rust/commit/54ec7ab057018fac886039108d02300025e223a0"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "a78d851927474f2c41c77e8dd571ab346dbfcc9d", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f0c05ff745cbb40ad065be6522e2c671fc6bb93/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0c05ff745cbb40ad065be6522e2c671fc6bb93/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=1f0c05ff745cbb40ad065be6522e2c671fc6bb93", "patch": "@@ -4045,7 +4045,7 @@ pub fn has_attr(tcx: ctxt, did: def_id, attr: &str) -> bool {\n     } else {\n         let mut ret = false;\n         do csearch::get_item_attrs(tcx.cstore, did) |meta_items| {\n-            ret = attr::contains_name(meta_items, attr);\n+            ret = ret || attr::contains_name(meta_items, attr);\n         }\n         ret\n     }"}, {"sha": "9e7236a67d96f918096bab839a983f64dbc5cfae", "filename": "src/test/compile-fail/rcmut-not-const-and-not-owned.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1f0c05ff745cbb40ad065be6522e2c671fc6bb93/src%2Ftest%2Fcompile-fail%2Frcmut-not-const-and-not-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0c05ff745cbb40ad065be6522e2c671fc6bb93/src%2Ftest%2Fcompile-fail%2Frcmut-not-const-and-not-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frcmut-not-const-and-not-owned.rs?ref=1f0c05ff745cbb40ad065be6522e2c671fc6bb93", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern mod extra;\n+\n+fn o<T: Owned>(_: &T) {}\n+fn c<T: Const>(_: &T) {}\n+\n+fn main() {\n+    let x = extra::rc::rc_mut_from_owned(0);\n+    o(&x); //~ ERROR instantiating a type parameter with an incompatible type `extra::rc::RcMut<int>`, which does not fulfill `Owned`\n+    c(&x); //~ ERROR instantiating a type parameter with an incompatible type `extra::rc::RcMut<int>`, which does not fulfill `Const`\n+}"}]}