{"sha": "b3edd9f775b734deb215f05269e7af0b6102c50a", "node_id": "C_kwDOAAsO6NoAKGIzZWRkOWY3NzViNzM0ZGViMjE1ZjA1MjY5ZTdhZjBiNjEwMmM1MGE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-09T21:06:59Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T02:06:19Z"}, "message": "Use predicate_must_hold_modulo_regions", "tree": {"sha": "be590e38185b5af50205d002bbef9e110f514cc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be590e38185b5af50205d002bbef9e110f514cc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3edd9f775b734deb215f05269e7af0b6102c50a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3edd9f775b734deb215f05269e7af0b6102c50a", "html_url": "https://github.com/rust-lang/rust/commit/b3edd9f775b734deb215f05269e7af0b6102c50a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3edd9f775b734deb215f05269e7af0b6102c50a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63be7a24242b262ba9924eec89a5cc6512d8b504", "url": "https://api.github.com/repos/rust-lang/rust/commits/63be7a24242b262ba9924eec89a5cc6512d8b504", "html_url": "https://github.com/rust-lang/rust/commit/63be7a24242b262ba9924eec89a5cc6512d8b504"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "6abff0ac57752e6ea736e8fc7314051ad811c38f", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3edd9f775b734deb215f05269e7af0b6102c50a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3edd9f775b734deb215f05269e7af0b6102c50a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=b3edd9f775b734deb215f05269e7af0b6102c50a", "patch": "@@ -2,10 +2,10 @@ pub mod on_unimplemented;\n pub mod suggestions;\n \n use super::{\n-    EvaluationResult, FulfillmentContext, FulfillmentError, FulfillmentErrorCode,\n-    MismatchedProjectionTypes, Obligation, ObligationCause, ObligationCauseCode,\n-    OnUnimplementedDirective, OnUnimplementedNote, OutputTypeParameterMismatch, Overflow,\n-    PredicateObligation, SelectionContext, SelectionError, TraitNotObjectSafe,\n+    FulfillmentContext, FulfillmentError, FulfillmentErrorCode, MismatchedProjectionTypes,\n+    Obligation, ObligationCause, ObligationCauseCode, OnUnimplementedDirective,\n+    OnUnimplementedNote, OutputTypeParameterMismatch, Overflow, PredicateObligation,\n+    SelectionContext, SelectionError, TraitNotObjectSafe,\n };\n \n use crate::infer::error_reporting::{TyCategory, TypeAnnotationNeeded as ErrorCode};"}, {"sha": "1faf13cbddf090eca487384de44c5946bbf5725a", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b3edd9f775b734deb215f05269e7af0b6102c50a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3edd9f775b734deb215f05269e7af0b6102c50a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=b3edd9f775b734deb215f05269e7af0b6102c50a", "patch": "@@ -1,6 +1,5 @@\n use super::{\n-    EvaluationResult, Obligation, ObligationCause, ObligationCauseCode, PredicateObligation,\n-    SelectionContext,\n+    Obligation, ObligationCause, ObligationCauseCode, PredicateObligation, SelectionContext,\n };\n \n use crate::autoderef::Autoderef;\n@@ -839,15 +838,10 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         let new_obligation =\n             self.mk_trait_obligation_with_new_self_ty(obligation.param_env, trait_pred_and_self);\n \n-        match self.evaluate_obligation(&new_obligation) {\n-            Ok(\n-                EvaluationResult::EvaluatedToOk\n-                | EvaluationResult::EvaluatedToOkModuloRegions\n-                | EvaluationResult::EvaluatedToOkModuloOpaqueTypes\n-                | EvaluationResult::EvaluatedToAmbig,\n-            ) => {}\n-            _ => return false,\n+        if !self.predicate_must_hold_modulo_regions(&new_obligation) {\n+            return false;\n         }\n+\n         let hir = self.tcx.hir();\n         // Get the name of the callable and the arguments to be used in the suggestion.\n         let (snippet, sugg) = match hir.get_if_local(def_id) {"}]}