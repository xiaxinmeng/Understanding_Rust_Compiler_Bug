{"sha": "f35c4e3aa168e1d5d78753ae1d12e8f25cbec699", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNWM0ZTNhYTE2OGUxZDVkNzg3NTNhZTFkMTJlOGYyNWNiZWM2OTk=", "commit": {"author": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-10-06T15:24:23Z"}, "committer": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-10-06T15:44:50Z"}, "message": "mir-borrowck: Implement end-user output for field of downcast projection", "tree": {"sha": "4e58c1f912fe00569fd6b6852972159800fa6fef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e58c1f912fe00569fd6b6852972159800fa6fef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699", "html_url": "https://github.com/rust-lang/rust/commit/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699/comments", "author": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0241ea45b2e71e53921627bc09219653f2629c0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0241ea45b2e71e53921627bc09219653f2629c0e", "html_url": "https://github.com/rust-lang/rust/commit/0241ea45b2e71e53921627bc09219653f2629c0e"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "62e73557b2577a41eafee1425f1bd7aec3a465b9", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=f35c4e3aa168e1d5d78753ae1d12e8f25cbec699", "patch": "@@ -1125,11 +1125,6 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                 match proj.elem {\n                     ProjectionElem::Deref =>\n                         self.describe_field(&proj.base, field_index),\n-                    ProjectionElem::Downcast(..) => {\n-                        debug!(\"End-user description not implemented for field of projection {:?}\",\n-                               proj);\n-                        format!(\"<downcast>{}\", field_index)\n-                    },\n                     ProjectionElem::Field(..) => {\n                         debug!(\"End-user description not implemented for field of projection {:?}\",\n                                proj);\n@@ -1145,6 +1140,8 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                                proj);\n                         format!(\"<constant_index>{}\", field_index)\n                     },\n+                    ProjectionElem::Downcast(def, variant_index) =>\n+                        format!(\"{}\", def.variants[variant_index].fields[field_index].name),\n                     ProjectionElem::Subslice { .. } => {\n                         debug!(\"End-user description not implemented for field of projection {:?}\",\n                                proj);"}, {"sha": "7ea965b07be4be624dbbd45de9158d4dcda1d8d1", "filename": "src/test/compile-fail/borrowck/borrowck-describe-lvalue.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs?ref=f35c4e3aa168e1d5d78753ae1d12e8f25cbec699", "patch": "@@ -233,4 +233,24 @@ fn main() {\n             _ => panic!(\"other case\"),\n         }\n     }\n+    // Downcasted field\n+    {\n+        enum E<X> { A(X), B { x: X } }\n+\n+        let mut e = E::A(3);\n+        let _e = &mut e;\n+        match e {\n+            E::A(ref ax) =>\n+                //[ast]~^ ERROR cannot borrow `e.0` as immutable because `e` is also borrowed as mutable\n+                //[mir]~^^ ERROR cannot borrow `e.0` as immutable because `e` is also borrowed as mutable (Ast)\n+                //[mir]~| ERROR cannot borrow `e.0` as immutable because it is also borrowed as mutable (Mir)\n+                //[mir]~| ERROR cannot use `e` because it was mutably borrowed (Mir)\n+                println!(\"e.ax: {:?}\", ax),\n+            E::B { x: ref bx } =>\n+                //[ast]~^ ERROR cannot borrow `e.x` as immutable because `e` is also borrowed as mutable\n+                //[mir]~^^ ERROR cannot borrow `e.x` as immutable because `e` is also borrowed as mutable (Ast)\n+                //[mir]~| ERROR cannot borrow `e.x` as immutable because it is also borrowed as mutable (Mir)\n+                println!(\"e.bx: {:?}\", bx),\n+        }\n+    }\n }"}]}