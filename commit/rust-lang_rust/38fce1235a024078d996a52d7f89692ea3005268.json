{"sha": "38fce1235a024078d996a52d7f89692ea3005268", "node_id": "C_kwDOAAsO6NoAKDM4ZmNlMTIzNWEwMjQwNzhkOTk2YTUyZDdmODk2OTJlYTMwMDUyNjg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-02T07:17:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-02T07:17:13Z"}, "message": "Auto merge of #10022 - Jarcho:issue_10019, r=giraffate\n\nDon't lint `implicit_clone` when the type doesn't implement clone\n\nfixes #10019\nchangelog: `implicit_clone`: Don't lint when the type doesn't implement clone", "tree": {"sha": "4263b2a51991f025c90f8e2dbfb21067b5c57100", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4263b2a51991f025c90f8e2dbfb21067b5c57100"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38fce1235a024078d996a52d7f89692ea3005268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38fce1235a024078d996a52d7f89692ea3005268", "html_url": "https://github.com/rust-lang/rust/commit/38fce1235a024078d996a52d7f89692ea3005268", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38fce1235a024078d996a52d7f89692ea3005268/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56d5657880d490a07f85c83a96187cad72e6b31a", "url": "https://api.github.com/repos/rust-lang/rust/commits/56d5657880d490a07f85c83a96187cad72e6b31a", "html_url": "https://github.com/rust-lang/rust/commit/56d5657880d490a07f85c83a96187cad72e6b31a"}, {"sha": "ab8c6beb8526f9dbf3934835681e1ff9e951ea5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8c6beb8526f9dbf3934835681e1ff9e951ea5b", "html_url": "https://github.com/rust-lang/rust/commit/ab8c6beb8526f9dbf3934835681e1ff9e951ea5b"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "06ecbce4e70e940bed5d941b41be29198817ef6c", "filename": "clippy_lints/src/methods/implicit_clone.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38fce1235a024078d996a52d7f89692ea3005268/clippy_lints%2Fsrc%2Fmethods%2Fimplicit_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fce1235a024078d996a52d7f89692ea3005268/clippy_lints%2Fsrc%2Fmethods%2Fimplicit_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fimplicit_clone.rs?ref=38fce1235a024078d996a52d7f89692ea3005268", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_context;\n-use clippy_utils::ty::peel_mid_ty_refs;\n+use clippy_utils::ty::{implements_trait, peel_mid_ty_refs};\n use clippy_utils::{is_diag_item_method, is_diag_trait_item};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -19,6 +19,8 @@ pub fn check(cx: &LateContext<'_>, method_name: &str, expr: &hir::Expr<'_>, recv\n         let (input_type, ref_count) = peel_mid_ty_refs(input_type);\n         if let Some(ty_name) = input_type.ty_adt_def().map(|adt_def| cx.tcx.item_name(adt_def.did()));\n         if return_type == input_type;\n+        if let Some(clone_trait) = cx.tcx.lang_items().clone_trait();\n+        if implements_trait(cx, return_type, clone_trait, &[]);\n         then {\n             let mut app = Applicability::MachineApplicable;\n             let recv_snip = snippet_with_context(cx, recv.span, expr.span.ctxt(), \"..\", &mut app).0;"}, {"sha": "51b1afbe5ac83ecaffe7bcca428f1ed8b08fa2bc", "filename": "tests/ui/implicit_clone.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38fce1235a024078d996a52d7f89692ea3005268/tests%2Fui%2Fimplicit_clone.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/38fce1235a024078d996a52d7f89692ea3005268/tests%2Fui%2Fimplicit_clone.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_clone.fixed?ref=38fce1235a024078d996a52d7f89692ea3005268", "patch": "@@ -115,4 +115,14 @@ fn main() {\n     let pathbuf_ref = &pathbuf_ref;\n     let _ = pathbuf_ref.to_owned(); // Don't lint. Returns `&&PathBuf`\n     let _ = (**pathbuf_ref).clone();\n+\n+    struct NoClone;\n+    impl ToOwned for NoClone {\n+        type Owned = Self;\n+        fn to_owned(&self) -> Self {\n+            NoClone\n+        }\n+    }\n+    let no_clone = &NoClone;\n+    let _ = no_clone.to_owned();\n }"}, {"sha": "8a9027433d95be632772e54ef97025e8e8a58df1", "filename": "tests/ui/implicit_clone.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38fce1235a024078d996a52d7f89692ea3005268/tests%2Fui%2Fimplicit_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fce1235a024078d996a52d7f89692ea3005268/tests%2Fui%2Fimplicit_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_clone.rs?ref=38fce1235a024078d996a52d7f89692ea3005268", "patch": "@@ -115,4 +115,14 @@ fn main() {\n     let pathbuf_ref = &pathbuf_ref;\n     let _ = pathbuf_ref.to_owned(); // Don't lint. Returns `&&PathBuf`\n     let _ = pathbuf_ref.to_path_buf();\n+\n+    struct NoClone;\n+    impl ToOwned for NoClone {\n+        type Owned = Self;\n+        fn to_owned(&self) -> Self {\n+            NoClone\n+        }\n+    }\n+    let no_clone = &NoClone;\n+    let _ = no_clone.to_owned();\n }"}]}