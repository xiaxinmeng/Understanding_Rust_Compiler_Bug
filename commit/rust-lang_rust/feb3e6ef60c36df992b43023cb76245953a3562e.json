{"sha": "feb3e6ef60c36df992b43023cb76245953a3562e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYjNlNmVmNjBjMzZkZjk5MmI0MzAyM2NiNzYyNDU5NTNhMzU2MmU=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-10-26T03:18:48Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-10-26T03:18:48Z"}, "message": "Merge pull request #1073 from elly/master\n\nAdd rustc(1).", "tree": {"sha": "069d63d2703ad54d63a9cc0135e363986520ee32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/069d63d2703ad54d63a9cc0135e363986520ee32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/feb3e6ef60c36df992b43023cb76245953a3562e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/feb3e6ef60c36df992b43023cb76245953a3562e", "html_url": "https://github.com/rust-lang/rust/commit/feb3e6ef60c36df992b43023cb76245953a3562e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/feb3e6ef60c36df992b43023cb76245953a3562e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ae757583a8692f78a355543727ddea7988ca027", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae757583a8692f78a355543727ddea7988ca027", "html_url": "https://github.com/rust-lang/rust/commit/7ae757583a8692f78a355543727ddea7988ca027"}, {"sha": "2a5ad77f2cc38beb26f03e9ccc56cce998c29755", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a5ad77f2cc38beb26f03e9ccc56cce998c29755", "html_url": "https://github.com/rust-lang/rust/commit/2a5ad77f2cc38beb26f03e9ccc56cce998c29755"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "686902b813d4c294fbfb3d3073860ea76bd5695d", "filename": "man/rustc.1", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/feb3e6ef60c36df992b43023cb76245953a3562e/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/feb3e6ef60c36df992b43023cb76245953a3562e/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=feb3e6ef60c36df992b43023cb76245953a3562e", "patch": "@@ -0,0 +1,103 @@\n+.TH RUSTC \"1\" \"October 2011\" \"Rust\" \"User Commands\"\n+.SH NAME\n+rustc \\- rust compiler\n+.SH SYNOPSIS\n+rustc [\\fB-h\\fR] [\\fB-v\\fR] [\\fB-o\\fR \\fIoutfile\\fR]\n+      [\\fB--lib\\fR] [\\fB--static\\fR] [\\fB-L\\fR \\fIpath\\fR]\n+      [\\fB-g\\fR] [\\fB-S\\fR] [\\fB-c\\fR] <\\fIinput\\fR>\n+.PP\n+Only the most commonly-used options are listed here. All options are listed and\n+described below.\n+.SH DESCRIPTION\n+This program is a compiler for the Rust language, available at\n+<\\fBhttps://github.com/graydon/rust\\fR>.\n+.SH OPTIONS\n+.TP\n+\\fB-h, --help\\fR: Display help.\n+.TP\n+\\fB-v, --version\\fR: Display version information.\n+.TP\n+\\fB-o\\fR \\fIfilename\\fR: Write output to \\fIfilename\\fR. The default output\n+filename for \\fBfoo.rs\\fR is otherwise \\fBfoo\\fR (when compiling a binary),\n+\\fBfoo\\fR (when compiling a library), \\fBfoo.o\\fR (when using \\fB-c\\fR),\n+\\fBfoo.s\\fR (when using \\fB-S\\fR) or \\fBfoo.bc\\fR (when using\n+\\fB--emit-llvm\\fR).\n+.TP\n+\\fB--lib\\fR: Compile and link a library crate into a shared object.\n+.TP\n+\\fB--static\\fR: Produce a statically-linked binary, or generate a static\n+library.\n+.TP\n+\\fB--pretty\\fR \\fItype\\fR: Pretty-print the input. Valid \\fItype\\fRs are:\n+.RS\n+.TP\n+\\fBnormal\\fR: Un-annotated source.\n+.TP\n+\\fBexpanded\\fR: Crates expanded.\n+.TP\n+\\fBtyped\\fR: Crates expanded, all expressions annotated with types.\n+.TP\n+\\fBidentified\\fR: Fully parenthesized, ast nodes and blocks annotated with IDs.\n+.RE\n+.TP\n+\\fB--ls\\fR: Lists symbols defined by the specified \\fBcompiled\\fR library.\n+.TP\n+\\fB-L\\fR \\fIpath\\fR: Adds \\fIpath\\fR to the library search path.\n+.TP\n+\\fB--noverify\\fR: Disables LLVM verification pass, which does sanity checking of\n+bitcode generated by rustc. Using this option gives a slight speedup, at the\n+cost of vastly reduced ability to catch rustc bugs. See\n+<\\fBhttp://llvm.org/docs/Passes.html\\fR> for a list of properties checked.\n+.TP\n+\\fB--parse-only\\fR: Run the parse phase only. If parsing succeeds, produces no\n+output.\n+.TP\n+\\fB--no-trans\\fR: Run all passes except translation. Produces no output.\n+.TP\n+\\fB-g\\fR: Produce debug info.\n+.TP\n+\\fB--OptLevel\\fR=\\fIlevel\\fR: Set optimization level to \\fIlevel\\fR.\n+.TP\n+\\fB-O\\fR: Equal to --OptLevel=2\n+.TP\n+\\fB-S\\fR: Compile to assembly, but do not assemble or link.\n+.TP\n+\\fB-c\\fR: Compile and assemble, but do not link.\n+.TP\n+\\fB--emit-llvm\\fR: Generate llvm bitcode.\n+.TP\n+\\fB--save-temps\\fR: For foo.rs, save generated bitcode before optimization to\n+\\fBfoo.bc\\fR, bitcode after optimization to \\fBfoo.opt.bc\\fR, and the generated\n+object file to \\fBfoo.o\\fR.\n+.TP\n+\\fB--stats\\fR: Print statistics about compilation.\n+.TP\n+\\fB--cfg\\fR \\fIcfgspec\\fR: Provide a crate config spec.\n+.TP\n+\\fB--time-passes\\fR: Print runtimes of compilation phases.\n+.TP\n+\\fB--time-llvm-passes\\fR: Print runtimes of llvm phases.\n+.TP\n+\\fB--sysroot\\fR \\fIpath\\fR: Set the system root. Default is rustc's directory.\n+.TP\n+\\fB--target\\fR \\fIgnu-config-name\\fR: Set the compilation target, which is a\n+string of the form \\fBcpu\\fR-\\fBmanufacturer\\fR-\\fBkernel\\fR[-\\fBos\\fR]. Example\n+values include \"i686-unknown-linux-gnu\" and \"mips-idt-ecoff\"; see\n+<\\fBhttp://sources.redhat.com/autobook/autobook/autobook_17.html\\fR>. If not\n+supplied, the host triple is used (see \\fB--version\\fR output).\n+.TP\n+\\fB--no-typestate\\fR: Disable the typestate pass. This breaks some safety\n+guarantees of the language and is quite dangerous.\n+.TP\n+\\fB--test\\fR: Build a test harness.\n+.TP\n+\\fB--gc\\fR: \\fBEXPERIMENTAL\\fR. Garbage-collect shared data.\n+.TP\n+\\fB--stack-growth\\fR: \\fBEXPERIMENTAL\\fR. Perform stack growth checks.\n+.SH \"BUGS\"\n+See \\fBhttps://github.com/graydon/rust/issues\\fR for a list of known bugs.\n+.SH \"AUTHOR\"\n+See \\fBAUTHORS.txt\\fR in the rust source distribution. Graydon Hoare\n+<\\fIgraydon@mozilla.com\\fR> is the project leader.\n+.SH \"COPYRIGHT\"\n+See \\fBLICENSE.txt\\fR in the rust source distribution."}]}