{"sha": "2745c878423dd120b5e17ec6260db455f81a6b71", "node_id": "C_kwDOAAsO6NoAKDI3NDVjODc4NDIzZGQxMjBiNWUxN2VjNjI2MGRiNDU1ZjgxYTZiNzE", "commit": {"author": {"name": "Lukas Lueg", "email": "lukas.lueg@gmail.com", "date": "2023-04-19T18:04:17Z"}, "committer": {"name": "Lukas Lueg", "email": "lukas.lueg@gmail.com", "date": "2023-04-19T18:04:17Z"}, "message": "Dont suggest suboptimal_flops unavailable in nostd\n\nFixes #10634", "tree": {"sha": "a51a947c9b7845aa400d14fccfc56ad06852645e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a51a947c9b7845aa400d14fccfc56ad06852645e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2745c878423dd120b5e17ec6260db455f81a6b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2745c878423dd120b5e17ec6260db455f81a6b71", "html_url": "https://github.com/rust-lang/rust/commit/2745c878423dd120b5e17ec6260db455f81a6b71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2745c878423dd120b5e17ec6260db455f81a6b71/comments", "author": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c44586ff7d7f05bbfb3e777a896846d7d42c0c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c44586ff7d7f05bbfb3e777a896846d7d42c0c3", "html_url": "https://github.com/rust-lang/rust/commit/0c44586ff7d7f05bbfb3e777a896846d7d42c0c3"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "b50e47e5a1c4eafd94af048885062af50134dadf", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2745c878423dd120b5e17ec6260db455f81a6b71/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2745c878423dd120b5e17ec6260db455f81a6b71/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=2745c878423dd120b5e17ec6260db455f81a6b71", "patch": "@@ -2,9 +2,10 @@ use clippy_utils::consts::{\n     constant, constant_simple, Constant,\n     Constant::{Int, F32, F64},\n };\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::higher;\n-use clippy_utils::{eq_expr_value, get_parent_expr, in_constant, numeric_literal, peel_blocks, sugg};\n+use clippy_utils::{\n+    diagnostics::span_lint_and_sugg, eq_expr_value, get_parent_expr, higher, in_constant, is_no_std_crate,\n+    numeric_literal, peel_blocks, sugg,\n+};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind, PathSegment, UnOp};\n@@ -452,6 +453,9 @@ fn is_float_mul_expr<'a>(cx: &LateContext<'_>, expr: &'a Expr<'a>) -> Option<(&'\n \n // TODO: Fix rust-lang/rust-clippy#4735\n fn check_mul_add(cx: &LateContext<'_>, expr: &Expr<'_>) {\n+    if is_no_std_crate(cx) {\n+        return; // The suggested methods are not available in core\n+    }\n     if let ExprKind::Binary(\n         Spanned {\n             node: op @ (BinOpKind::Add | BinOpKind::Sub),\n@@ -566,6 +570,9 @@ fn are_negated<'a>(cx: &LateContext<'_>, expr1: &'a Expr<'a>, expr2: &'a Expr<'a\n }\n \n fn check_custom_abs(cx: &LateContext<'_>, expr: &Expr<'_>) {\n+    if is_no_std_crate(cx) {\n+        return; // The suggested methods are not available in core\n+    }\n     if_chain! {\n         if let Some(higher::If { cond, then, r#else: Some(r#else) }) = higher::If::hir(expr);\n         let if_body_expr = peel_blocks(then);"}, {"sha": "a42c6383ccea2091126a93dfc2cfef371b534640", "filename": "tests/ui/floating_point_arithmetic_nostd.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2745c878423dd120b5e17ec6260db455f81a6b71/tests%2Fui%2Ffloating_point_arithmetic_nostd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2745c878423dd120b5e17ec6260db455f81a6b71/tests%2Fui%2Ffloating_point_arithmetic_nostd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_arithmetic_nostd.rs?ref=2745c878423dd120b5e17ec6260db455f81a6b71", "patch": "@@ -0,0 +1,31 @@\n+#![feature(lang_items, start)]\n+#![warn(clippy::imprecise_flops)]\n+#![warn(clippy::suboptimal_flops)]\n+#![no_std]\n+\n+// The following should not lint, as the suggested methods {f32,f64}.mul_add()\n+// and {f32,f64}::abs() are not available in no_std\n+\n+pub fn mul_add() {\n+    let a: f64 = 1234.567;\n+    let b: f64 = 45.67834;\n+    let c: f64 = 0.0004;\n+    let _ = a * b + c;\n+}\n+\n+fn fake_abs1(num: f64) -> f64 {\n+    if num >= 0.0 { num } else { -num }\n+}\n+\n+#[start]\n+fn main(_argc: isize, _argv: *const *const u8) -> isize {\n+    0\n+}\n+\n+#[panic_handler]\n+fn panic(_info: &core::panic::PanicInfo) -> ! {\n+    loop {}\n+}\n+\n+#[lang = \"eh_personality\"]\n+extern \"C\" fn eh_personality() {}"}]}