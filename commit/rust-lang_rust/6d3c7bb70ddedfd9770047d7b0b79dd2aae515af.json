{"sha": "6d3c7bb70ddedfd9770047d7b0b79dd2aae515af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkM2M3YmI3MGRkZWRmZDk3NzAwNDdkN2IwYjc5ZGQyYWFlNTE1YWY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-07-31T17:10:37Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-09-19T08:36:36Z"}, "message": "Update codegen tests", "tree": {"sha": "b3ccf763a4455eddce9a57ac048186595eb2794e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3ccf763a4455eddce9a57ac048186595eb2794e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d3c7bb70ddedfd9770047d7b0b79dd2aae515af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d3c7bb70ddedfd9770047d7b0b79dd2aae515af", "html_url": "https://github.com/rust-lang/rust/commit/6d3c7bb70ddedfd9770047d7b0b79dd2aae515af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d3c7bb70ddedfd9770047d7b0b79dd2aae515af/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d7ac728e4ce2aa1a77068e1f668be71d10116a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7ac728e4ce2aa1a77068e1f668be71d10116a0", "html_url": "https://github.com/rust-lang/rust/commit/2d7ac728e4ce2aa1a77068e1f668be71d10116a0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a69a4885bb5df75a62863b806db234f7a9609fd8", "filename": "src/test/codegen/consts.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6d3c7bb70ddedfd9770047d7b0b79dd2aae515af/src%2Ftest%2Fcodegen%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d3c7bb70ddedfd9770047d7b0b79dd2aae515af/src%2Ftest%2Fcodegen%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fconsts.rs?ref=6d3c7bb70ddedfd9770047d7b0b79dd2aae515af", "patch": "@@ -14,7 +14,7 @@\n \n // This checks the constants from {low,high}_align_const, they share the same\n // constant, but the alignment differs, so the higher one should be used\n-// CHECK: [[LOW_HIGH:@[0-9]+]] = {{.*}} getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc20, i32 0, i32 0, i32 0), {{.*}}\n+// CHECK: [[LOW_HIGH:@alloc[0-9]+]] = {{.*}}, align 4\n \n #[derive(Copy, Clone)]\n // repr(i16) is required for the {low,high}_align_const test\n@@ -43,14 +43,14 @@ pub fn inline_enum_const() -> E<i8, i16> {\n #[no_mangle]\n pub fn low_align_const() -> E<i16, [i16; 3]> {\n     // Check that low_align_const and high_align_const use the same constant\n-    // CHECK: load %\"E<i16, [i16; 3]>\"*, %\"E<i16, [i16; 3]>\"** bitcast (<{ i8*, [0 x i8] }>* [[LOW_HIGH]] to %\"E<i16, [i16; 3]>\"**),\n+    // CHECK: memcpy.p0i8.p0i8.i64(i8* align 2 %1, i8* align 2 getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* [[LOW_HIGH]], i32 0, i32 0, i32 0), i64 8, i1 false)\n     *&E::A(0)\n }\n \n // CHECK-LABEL: @high_align_const\n #[no_mangle]\n pub fn high_align_const() -> E<i16, i32> {\n     // Check that low_align_const and high_align_const use the same constant\n-    // CHECK: load %\"E<i16, i32>\"*, %\"E<i16, i32>\"** bitcast (<{ i8*, [0 x i8] }>* [[LOW_HIGH]] to %\"E<i16, i32>\"**),\n+    // CHECK: memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* [[LOW_HIGH]], i32 0, i32 0, i32 0), i64 8, i1 false)\n     *&E::A(0)\n }"}]}