{"sha": "f9db00839efb1fedf48dbabbab3e0779ff2d8d5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZGIwMDgzOWVmYjFmZWRmNDhkYmFiYmFiM2UwNzc5ZmYyZDhkNWU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-20T03:11:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-20T03:11:02Z"}, "message": "Rollup merge of #77838 - RalfJung:const-fn, r=kennytm\n\nconst keyword: brief paragraph on 'const fn'\n\n`const fn` were mentioned in the title, but called \"deterministic functions\" which is not their main property (though at least currently it is a consequence of being const-evaluable). This adds a brief paragraph discussing them, also in the hopes of clarifying that they do *not* have any effect on run-time uses.", "tree": {"sha": "c6da1d5d018a5e23a6ef8e9d6f401180b8849cde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6da1d5d018a5e23a6ef8e9d6f401180b8849cde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9db00839efb1fedf48dbabbab3e0779ff2d8d5e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfjlVGCRBK7hj4Ov3rIwAAdHIIAGP1JffTrYpiN7YnbJfiofu3\nRWzMMcTp3plBNVQkr4HeZL1FUwNCVTt/HYxSnUuNSH1EAqbUeDUw7TVs5TIh1YxY\nz8L+m/BqFgX/ZIj/Y6H3hOUcfq0RmlHVzHbnP2n2H2JcDzy9+lTAZX+MRiMXo2iB\nvJwEc+7DZMLFmrBgOkPr5HQARy+91F3FhrvZirMsukaNbusMsvllwgW/UMa17E/4\nzLCLtYReVOMZfZRTmdAd8LyRuafFJB0UbV3tcRvfpZWLive/KtfUtX6+kwNWNFyL\nvkuk2dWMGhgUIM7DecQeIAhXnlLut2o22T8GF97KVMbldobcqskgwe1dKZ4pQsw=\n=mQz7\n-----END PGP SIGNATURE-----\n", "payload": "tree c6da1d5d018a5e23a6ef8e9d6f401180b8849cde\nparent 24907f3507de7ce5d6908e3003e06a7f0b1a2ab6\nparent c8405d2251ce78651f591ed8a2189c41593f5110\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603163462 +0900\ncommitter GitHub <noreply@github.com> 1603163462 +0900\n\nRollup merge of #77838 - RalfJung:const-fn, r=kennytm\n\nconst keyword: brief paragraph on 'const fn'\n\n`const fn` were mentioned in the title, but called \"deterministic functions\" which is not their main property (though at least currently it is a consequence of being const-evaluable). This adds a brief paragraph discussing them, also in the hopes of clarifying that they do *not* have any effect on run-time uses.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9db00839efb1fedf48dbabbab3e0779ff2d8d5e", "html_url": "https://github.com/rust-lang/rust/commit/f9db00839efb1fedf48dbabbab3e0779ff2d8d5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9db00839efb1fedf48dbabbab3e0779ff2d8d5e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24907f3507de7ce5d6908e3003e06a7f0b1a2ab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/24907f3507de7ce5d6908e3003e06a7f0b1a2ab6", "html_url": "https://github.com/rust-lang/rust/commit/24907f3507de7ce5d6908e3003e06a7f0b1a2ab6"}, {"sha": "c8405d2251ce78651f591ed8a2189c41593f5110", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8405d2251ce78651f591ed8a2189c41593f5110", "html_url": "https://github.com/rust-lang/rust/commit/c8405d2251ce78651f591ed8a2189c41593f5110"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "a4bbb18da59837edc2fa67b498c08c9d1c8ebb67", "filename": "library/std/src/keyword_docs.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f9db00839efb1fedf48dbabbab3e0779ff2d8d5e/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9db00839efb1fedf48dbabbab3e0779ff2d8d5e/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fkeyword_docs.rs?ref=f9db00839efb1fedf48dbabbab3e0779ff2d8d5e", "patch": "@@ -102,7 +102,9 @@ mod break_keyword {}\n \n #[doc(keyword = \"const\")]\n //\n-/// Compile-time constants and deterministic functions.\n+/// Compile-time constants and compile-time evaluable functions.\n+///\n+/// ## Compile-time constants\n ///\n /// Sometimes a certain value is used many times throughout a program, and it can become\n /// inconvenient to copy it over and over. What's more, it's not always possible or desirable to\n@@ -145,15 +147,28 @@ mod break_keyword {}\n ///\n /// Constants, like statics, should always be in `SCREAMING_SNAKE_CASE`.\n ///\n+/// For more detail on `const`, see the [Rust Book] or the [Reference].\n+///\n+/// ## Compile-time evaluable functions\n+///\n+/// The other main use of the `const` keyword is in `const fn`. This marks a function as being\n+/// callable in the body of a `const` or `static` item and in array initializers (commonly called\n+/// \"const contexts\"). `const fn` are restricted in the set of operations they can perform, to\n+/// ensure that they can be evaluated at compile-time. See the [Reference][const-eval] for more\n+/// detail.\n+///\n+/// Turning a `fn` into a `const fn` has no effect on run-time uses of that function.\n+///\n+/// ## Other uses of `const`\n+///\n /// The `const` keyword is also used in raw pointers in combination with `mut`, as seen in `*const\n /// T` and `*mut T`. More about `const` as used in raw pointers can be read at the Rust docs for the [pointer primitive].\n ///\n-/// For more detail on `const`, see the [Rust Book] or the [Reference].\n-///\n /// [pointer primitive]: primitive.pointer.html\n /// [Rust Book]:\n /// ../book/ch03-01-variables-and-mutability.html#differences-between-variables-and-constants\n /// [Reference]: ../reference/items/constant-items.html\n+/// [const-eval]: ../reference/const_eval.html\n mod const_keyword {}\n \n #[doc(keyword = \"continue\")]"}]}