{"sha": "e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZTkzYjNkMWQ4YWYwMThhNmNiMWZlM2ZkNmMzZjE2NmM4YTY0ZjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-31T20:04:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-31T20:04:07Z"}, "message": "Merge #7502\n\n7502: Honor #![macro_use] in mod source files r=jonas-schievink a=Veykril\n\nFixes #7501\r\n\r\nSince `ItemTree` builds the `RawAttrs` directly we need the special check here as I don't think we can fix this in `RawAttrs` constructor as its solely AST based and we need to touch two different ASTs here.\r\n\r\nThis just made me realize that `attrs_query` suffers from a similar problem, for example hovering an outline `mod` decl won't show inner docs, only outer ones, #7503.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "20420c6ff4f67e09395700d4877e797cda865820", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20420c6ff4f67e09395700d4877e797cda865820"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFw03CRBK7hj4Ov3rIwAAdHIIAA+AF+u38fkoZZDbv2qd8tlh\nZi9+Mddiume8qkdcUhUJJgJjcbnIB8CL4PlTfHormANEUI9DkU2Zni7vOV4pLdNg\nTZby4vTTfVtzABHLimpqj6NygxYvJzl/3lC7AQF2r3NknSa4G5mXDxJv6QNL5tEo\neFfF/gWYTlfU38lxSuFi8cE8fF2aXIrQIDjBl5h0kpzidlxwTmocE9J6bC7AOYOS\n/rnhIr5x15Yvd15YpCOH1uB2QpM2TZrodMkrUbJAhtpv11AV5rOXK1OcFMg0d6IN\ndiaF4LBt7BCqoR6yA061jquYE9bZ4TH1cuj9Q7RB9Ax0UxzkL1NzTbCUrEzanAg=\n=F90C\n-----END PGP SIGNATURE-----\n", "payload": "tree 20420c6ff4f67e09395700d4877e797cda865820\nparent 286d90de2d213b467a092e702edf8b0706c7c1b2\nparent 412f180d71bb942dcda5afaa7d6dc2ad6f463d61\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1612123447 +0000\ncommitter GitHub <noreply@github.com> 1612123447 +0000\n\nMerge #7502\n\n7502: Honor #![macro_use] in mod source files r=jonas-schievink a=Veykril\n\nFixes #7501\r\n\r\nSince `ItemTree` builds the `RawAttrs` directly we need the special check here as I don't think we can fix this in `RawAttrs` constructor as its solely AST based and we need to touch two different ASTs here.\r\n\r\nThis just made me realize that `attrs_query` suffers from a similar problem, for example hovering an outline `mod` decl won't show inner docs, only outer ones, #7503.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5", "html_url": "https://github.com/rust-lang/rust/commit/e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "286d90de2d213b467a092e702edf8b0706c7c1b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/286d90de2d213b467a092e702edf8b0706c7c1b2", "html_url": "https://github.com/rust-lang/rust/commit/286d90de2d213b467a092e702edf8b0706c7c1b2"}, {"sha": "412f180d71bb942dcda5afaa7d6dc2ad6f463d61", "url": "https://api.github.com/repos/rust-lang/rust/commits/412f180d71bb942dcda5afaa7d6dc2ad6f463d61", "html_url": "https://github.com/rust-lang/rust/commit/412f180d71bb942dcda5afaa7d6dc2ad6f463d61"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "fcc8e2607ea517202a3113eb72e7b155f82432ed", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5", "patch": "@@ -1273,20 +1273,16 @@ impl ModCollector<'_, '_> {\n             // out of line module, resolve, parse and recurse\n             ModKind::Outline {} => {\n                 let ast_id = AstId::new(self.file_id, module.ast_id);\n-                match self.mod_dir.resolve_declaration(\n-                    self.def_collector.db,\n-                    self.file_id,\n-                    &module.name,\n-                    path_attr,\n-                ) {\n+                let db = self.def_collector.db;\n+                match self.mod_dir.resolve_declaration(db, self.file_id, &module.name, path_attr) {\n                     Ok((file_id, is_mod_rs, mod_dir)) => {\n                         let module_id = self.push_child_module(\n                             module.name.clone(),\n                             ast_id,\n                             Some((file_id, is_mod_rs)),\n                             &self.item_tree[module.visibility],\n                         );\n-                        let item_tree = self.def_collector.db.item_tree(file_id.into());\n+                        let item_tree = db.item_tree(file_id.into());\n                         ModCollector {\n                             def_collector: &mut *self.def_collector,\n                             macro_depth: self.macro_depth,\n@@ -1296,7 +1292,12 @@ impl ModCollector<'_, '_> {\n                             mod_dir,\n                         }\n                         .collect(item_tree.top_level_items());\n-                        if is_macro_use {\n+                        if is_macro_use\n+                            || item_tree\n+                                .top_level_attrs(db, self.def_collector.def_map.krate)\n+                                .by_key(\"macro_use\")\n+                                .exists()\n+                        {\n                             self.import_all_legacy_macros(module_id);\n                         }\n                     }"}, {"sha": "36ed5e8cefe52d06c53bc43fa8f385015b9c46b8", "filename": "crates/hir_def/src/nameres/tests/macros.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=e6e93b3d1d8af018a6cb1fe3fd6c3f166c8a64f5", "patch": "@@ -391,11 +391,21 @@ foo!(ok_shadow);\n mod m4;\n bar!(OkMacroUse);\n \n+mod m5;\n+baz!(OkMacroUseInner);\n+\n //- /m3/m4.rs\n foo!(ok_shadow_deep);\n macro_rules! bar {\n     ($x:ident) => { struct $x; }\n }\n+//- /m3/m5.rs\n+#![macro_use]\n+macro_rules! baz {\n+    ($x:ident) => { struct $x; }\n+}\n+\n+\n \"#,\n         expect![[r#\"\n             crate\n@@ -423,11 +433,15 @@ macro_rules! bar {\n             crate::m3\n             OkAfterInside: t v\n             OkMacroUse: t v\n+            OkMacroUseInner: t v\n             m4: t\n+            m5: t\n             ok_shadow: v\n \n             crate::m3::m4\n             ok_shadow_deep: v\n+\n+            crate::m3::m5\n         \"#]],\n     );\n }"}]}