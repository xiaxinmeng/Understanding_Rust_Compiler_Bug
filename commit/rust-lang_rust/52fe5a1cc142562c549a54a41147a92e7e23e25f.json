{"sha": "52fe5a1cc142562c549a54a41147a92e7e23e25f", "node_id": "C_kwDOAAsO6NoAKDUyZmU1YTFjYzE0MjU2MmM1NDlhNTRhNDExNDdhOTJlN2UyM2UyNWY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-20T13:37:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-20T13:37:31Z"}, "message": "Rollup merge of #105835 - tmiasko:cleanup-post-borrowck, r=JakobDegen\n\nRefactor post borrowck cleanup passes", "tree": {"sha": "ba2f3e5661f9e42d5716609b3972677cc94126ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba2f3e5661f9e42d5716609b3972677cc94126ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52fe5a1cc142562c549a54a41147a92e7e23e25f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjobqbCRBK7hj4Ov3rIwAAEl0IAHtVnnxa0yJ7XVo6i+rlZT6a\nNAemSOCmYmyvSDmCRhI3HJLKW4OzgjREnbvQeG+wpXr9NnTgam+Knvq8nYf4JPVC\ndYh1c1seQCnZDPJj/zqNjeEd2mZIWkMIMxQI39L+gkVKv4OwyYo9z+Mc6YqdFQZj\neMNzV+R9dGkY8axR2XTvnrqVUmgKZW9hHIKxqCTRM5epg9oS6apMoXbarOk2BWzY\nznDxCs4g7uIbKqA3RERCo/ASEJYXT+JVtleuIXIZXZucc+d42flt6oRnswtg1H8f\nVMASXA7IeSotzfHX8jgJAfcLDg7vkWcyZJdKlytal7BqlqFPcSpgqJX1H6WcAZ0=\n=XzLW\n-----END PGP SIGNATURE-----\n", "payload": "tree ba2f3e5661f9e42d5716609b3972677cc94126ba\nparent 8a746f4ac3a489efb724cde813607f3b96c2df7b\nparent acaa2c1235080aa1dc66133f840f7b5aa37dd016\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671543451 +0100\ncommitter GitHub <noreply@github.com> 1671543451 +0100\n\nRollup merge of #105835 - tmiasko:cleanup-post-borrowck, r=JakobDegen\n\nRefactor post borrowck cleanup passes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52fe5a1cc142562c549a54a41147a92e7e23e25f", "html_url": "https://github.com/rust-lang/rust/commit/52fe5a1cc142562c549a54a41147a92e7e23e25f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52fe5a1cc142562c549a54a41147a92e7e23e25f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a746f4ac3a489efb724cde813607f3b96c2df7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a746f4ac3a489efb724cde813607f3b96c2df7b", "html_url": "https://github.com/rust-lang/rust/commit/8a746f4ac3a489efb724cde813607f3b96c2df7b"}, {"sha": "acaa2c1235080aa1dc66133f840f7b5aa37dd016", "url": "https://api.github.com/repos/rust-lang/rust/commits/acaa2c1235080aa1dc66133f840f7b5aa37dd016", "html_url": "https://github.com/rust-lang/rust/commit/acaa2c1235080aa1dc66133f840f7b5aa37dd016"}], "stats": {"total": 115, "additions": 35, "deletions": 80}, "files": [{"sha": "d435d3ee69b76a94eda4fe73a4ff40d60eb8aa0d", "filename": "compiler/rustc_mir_transform/src/cleanup_post_borrowck.rs", "status": "modified", "additions": 27, "deletions": 38, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/52fe5a1cc142562c549a54a41147a92e7e23e25f/compiler%2Frustc_mir_transform%2Fsrc%2Fcleanup_post_borrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fe5a1cc142562c549a54a41147a92e7e23e25f/compiler%2Frustc_mir_transform%2Fsrc%2Fcleanup_post_borrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcleanup_post_borrowck.rs?ref=52fe5a1cc142562c549a54a41147a92e7e23e25f", "patch": "@@ -1,59 +1,48 @@\n-//! This module provides a pass to replacing the following statements with\n-//! [`Nop`]s\n+//! This module provides a pass that removes parts of MIR that are no longer relevant after\n+//! analysis phase and borrowck. In particular, it removes false edges, user type annotations and\n+//! replaces following statements with [`Nop`]s:\n //!\n //!   - [`AscribeUserType`]\n //!   - [`FakeRead`]\n //!   - [`Assign`] statements with a [`Shallow`] borrow\n //!\n-//! The `CleanFakeReadsAndBorrows` \"pass\" is actually implemented as two\n-//! traversals (aka visits) of the input MIR. The first traversal,\n-//! `DeleteAndRecordFakeReads`, deletes the fake reads and finds the\n-//! temporaries read by [`ForMatchGuard`] reads, and `DeleteFakeBorrows`\n-//! deletes the initialization of those temporaries.\n-//!\n //! [`AscribeUserType`]: rustc_middle::mir::StatementKind::AscribeUserType\n-//! [`Shallow`]: rustc_middle::mir::BorrowKind::Shallow\n-//! [`FakeRead`]: rustc_middle::mir::StatementKind::FakeRead\n //! [`Assign`]: rustc_middle::mir::StatementKind::Assign\n-//! [`ForMatchGuard`]: rustc_middle::mir::FakeReadCause::ForMatchGuard\n+//! [`FakeRead`]: rustc_middle::mir::StatementKind::FakeRead\n //! [`Nop`]: rustc_middle::mir::StatementKind::Nop\n+//! [`Shallow`]: rustc_middle::mir::BorrowKind::Shallow\n \n use crate::MirPass;\n-use rustc_middle::mir::visit::MutVisitor;\n-use rustc_middle::mir::{Body, BorrowKind, Location, Rvalue};\n-use rustc_middle::mir::{Statement, StatementKind};\n+use rustc_middle::mir::{Body, BorrowKind, Rvalue, StatementKind, TerminatorKind};\n use rustc_middle::ty::TyCtxt;\n \n-pub struct CleanupNonCodegenStatements;\n+pub struct CleanupPostBorrowck;\n \n-pub struct DeleteNonCodegenStatements<'tcx> {\n-    tcx: TyCtxt<'tcx>,\n-}\n+impl<'tcx> MirPass<'tcx> for CleanupPostBorrowck {\n+    fn run_pass(&self, _tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+        for basic_block in body.basic_blocks.as_mut() {\n+            for statement in basic_block.statements.iter_mut() {\n+                match statement.kind {\n+                    StatementKind::AscribeUserType(..)\n+                    | StatementKind::Assign(box (_, Rvalue::Ref(_, BorrowKind::Shallow, _)))\n+                    | StatementKind::FakeRead(..) => statement.make_nop(),\n+                    _ => (),\n+                }\n+            }\n+            let terminator = basic_block.terminator_mut();\n+            match terminator.kind {\n+                TerminatorKind::FalseEdge { real_target, .. }\n+                | TerminatorKind::FalseUnwind { real_target, .. } => {\n+                    terminator.kind = TerminatorKind::Goto { target: real_target };\n+                }\n+                _ => {}\n+            }\n+        }\n \n-impl<'tcx> MirPass<'tcx> for CleanupNonCodegenStatements {\n-    fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        let mut delete = DeleteNonCodegenStatements { tcx };\n-        delete.visit_body_preserves_cfg(body);\n         body.user_type_annotations.raw.clear();\n \n         for decl in &mut body.local_decls {\n             decl.user_ty = None;\n         }\n     }\n }\n-\n-impl<'tcx> MutVisitor<'tcx> for DeleteNonCodegenStatements<'tcx> {\n-    fn tcx(&self) -> TyCtxt<'tcx> {\n-        self.tcx\n-    }\n-\n-    fn visit_statement(&mut self, statement: &mut Statement<'tcx>, location: Location) {\n-        match statement.kind {\n-            StatementKind::AscribeUserType(..)\n-            | StatementKind::Assign(box (_, Rvalue::Ref(_, BorrowKind::Shallow, _)))\n-            | StatementKind::FakeRead(..) => statement.make_nop(),\n-            _ => (),\n-        }\n-        self.super_statement(statement, location);\n-    }\n-}"}, {"sha": "aba5a8580f19485b78da4a3b034659ef63b1fefc", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/52fe5a1cc142562c549a54a41147a92e7e23e25f/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fe5a1cc142562c549a54a41147a92e7e23e25f/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=52fe5a1cc142562c549a54a41147a92e7e23e25f", "patch": "@@ -77,8 +77,6 @@ mod match_branches;\n mod multiple_return_terminators;\n mod normalize_array_len;\n mod nrvo;\n-// This pass is public to allow external drivers to perform MIR cleanup\n-pub mod remove_false_edges;\n mod remove_noop_landing_pads;\n mod remove_storage_markers;\n mod remove_uninit_drops;\n@@ -494,10 +492,9 @@ fn run_analysis_to_runtime_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>\n /// After this series of passes, no lifetime analysis based on borrowing can be done.\n fn run_analysis_cleanup_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n     let passes: &[&dyn MirPass<'tcx>] = &[\n-        &remove_false_edges::RemoveFalseEdges,\n+        &cleanup_post_borrowck::CleanupPostBorrowck,\n         &simplify_branches::SimplifyConstCondition::new(\"initial\"),\n         &remove_noop_landing_pads::RemoveNoopLandingPads,\n-        &cleanup_post_borrowck::CleanupNonCodegenStatements,\n         &simplify::SimplifyCfg::new(\"early-opt\"),\n         &deref_separator::Derefer,\n     ];"}, {"sha": "71f5ccf7e2465330252f0f48a69ee033f109c86e", "filename": "compiler/rustc_mir_transform/src/remove_false_edges.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8a746f4ac3a489efb724cde813607f3b96c2df7b/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a746f4ac3a489efb724cde813607f3b96c2df7b/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs?ref=8a746f4ac3a489efb724cde813607f3b96c2df7b", "patch": "@@ -1,29 +0,0 @@\n-use rustc_middle::mir::{Body, TerminatorKind};\n-use rustc_middle::ty::TyCtxt;\n-\n-use crate::MirPass;\n-\n-/// Removes `FalseEdge` and `FalseUnwind` terminators from the MIR.\n-///\n-/// These are only needed for borrow checking, and can be removed afterwards.\n-///\n-/// FIXME: This should probably have its own MIR phase.\n-pub struct RemoveFalseEdges;\n-\n-impl<'tcx> MirPass<'tcx> for RemoveFalseEdges {\n-    fn run_pass(&self, _: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        for block in body.basic_blocks_mut() {\n-            let terminator = block.terminator_mut();\n-            terminator.kind = match terminator.kind {\n-                TerminatorKind::FalseEdge { real_target, .. } => {\n-                    TerminatorKind::Goto { target: real_target }\n-                }\n-                TerminatorKind::FalseUnwind { real_target, .. } => {\n-                    TerminatorKind::Goto { target: real_target }\n-                }\n-\n-                _ => continue,\n-            }\n-        }\n-    }\n-}"}, {"sha": "0b3da98a5a19255c2ba8979142c3df20c9f53468", "filename": "src/test/mir-opt/remove_fake_borrows.match_guard.CleanupPostBorrowck.diff", "status": "renamed", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/52fe5a1cc142562c549a54a41147a92e7e23e25f/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupPostBorrowck.diff", "raw_url": "https://github.com/rust-lang/rust/raw/52fe5a1cc142562c549a54a41147a92e7e23e25f/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupPostBorrowck.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupPostBorrowck.diff?ref=52fe5a1cc142562c549a54a41147a92e7e23e25f", "patch": "@@ -1,5 +1,5 @@\n-- // MIR for `match_guard` before CleanupNonCodegenStatements\n-+ // MIR for `match_guard` after CleanupNonCodegenStatements\n+- // MIR for `match_guard` before CleanupPostBorrowck\n++ // MIR for `match_guard` after CleanupPostBorrowck\n   \n   fn match_guard(_1: Option<&&i32>, _2: bool) -> i32 {\n       debug x => _1;                       // in scope 0 at $DIR/remove_fake_borrows.rs:+0:16: +0:17\n@@ -29,7 +29,8 @@\n       }\n   \n       bb3: {\n-          goto -> bb4;                     // scope 0 at $DIR/remove_fake_borrows.rs:+2:9: +2:16\n+-         falseEdge -> [real: bb4, imaginary: bb1]; // scope 0 at $DIR/remove_fake_borrows.rs:+2:9: +2:16\n++         goto -> bb4;                     // scope 0 at $DIR/remove_fake_borrows.rs:+2:9: +2:16\n       }\n   \n       bb4: {\n@@ -62,15 +63,12 @@\n   \n       bb6: {\n           StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:+2:20: +2:21\n-          goto -> bb1;                     // scope 0 at $DIR/remove_fake_borrows.rs:+2:20: +2:21\n+-         falseEdge -> [real: bb1, imaginary: bb1]; // scope 0 at $DIR/remove_fake_borrows.rs:+2:20: +2:21\n++         goto -> bb1;                     // scope 0 at $DIR/remove_fake_borrows.rs:+2:20: +2:21\n       }\n   \n       bb7: {\n           return;                          // scope 0 at $DIR/remove_fake_borrows.rs:+5:2: +5:2\n       }\n-  \n-      bb8 (cleanup): {\n-          resume;                          // scope 0 at $DIR/remove_fake_borrows.rs:+0:1: +5:2\n-      }\n   }\n   ", "previous_filename": "src/test/mir-opt/remove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff"}, {"sha": "d26c6f5d7e51bff1a9b462e1bc392892cfbe92df", "filename": "src/test/mir-opt/remove_fake_borrows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52fe5a1cc142562c549a54a41147a92e7e23e25f/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fe5a1cc142562c549a54a41147a92e7e23e25f/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs?ref=52fe5a1cc142562c549a54a41147a92e7e23e25f", "patch": "@@ -2,7 +2,7 @@\n \n // ignore-wasm32-bare compiled with panic=abort by default\n \n-// EMIT_MIR remove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff\n+// EMIT_MIR remove_fake_borrows.match_guard.CleanupPostBorrowck.diff\n fn match_guard(x: Option<&&i32>, c: bool) -> i32 {\n     match x {\n         Some(0) if c => 0,"}]}