{"sha": "078e1c546cbc5d37479ccd5f9023d6fffdaa4e35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3OGUxYzU0NmNiYzVkMzc0NzljY2Q1ZjkwMjNkNmZmZmRhYTRlMzU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-09-10T12:03:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-10T12:03:21Z"}, "message": "Rollup merge of #44329 - nrc:pulldown-warn-fix, r=ollie27\n\nFixup some nits from #44238\n\nr? @ollie27", "tree": {"sha": "d2a872ee72a579806f46ad1e26d8dab0df663a48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a872ee72a579806f46ad1e26d8dab0df663a48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/078e1c546cbc5d37479ccd5f9023d6fffdaa4e35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/078e1c546cbc5d37479ccd5f9023d6fffdaa4e35", "html_url": "https://github.com/rust-lang/rust/commit/078e1c546cbc5d37479ccd5f9023d6fffdaa4e35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/078e1c546cbc5d37479ccd5f9023d6fffdaa4e35/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9af7de1cb842987e97677fdede4f538750ce8fa9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9af7de1cb842987e97677fdede4f538750ce8fa9", "html_url": "https://github.com/rust-lang/rust/commit/9af7de1cb842987e97677fdede4f538750ce8fa9"}, {"sha": "05739498c236e8d26ad83bdcad0d9b8c09c6a7ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/05739498c236e8d26ad83bdcad0d9b8c09c6a7ac", "html_url": "https://github.com/rust-lang/rust/commit/05739498c236e8d26ad83bdcad0d9b8c09c6a7ac"}], "stats": {"total": 102, "additions": 22, "deletions": 80}, "files": [{"sha": "074d8c4b8eefd895880850311fafe57269e6ef0e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 22, "deletions": 80, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/078e1c546cbc5d37479ccd5f9023d6fffdaa4e35/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/078e1c546cbc5d37479ccd5f9023d6fffdaa4e35/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=078e1c546cbc5d37479ccd5f9023d6fffdaa4e35", "patch": "@@ -606,12 +606,20 @@ pub fn run(mut krate: clean::Crate,\n }\n \n // A short, single-line view of `s`.\n-fn concise_str(s: &str) -> String {\n+fn concise_str(mut s: &str) -> String {\n     if s.contains('\\n') {\n-        return format!(\"{}...\", s.lines().next().expect(\"Impossible! We just found a newline\"));\n+        s = s.lines().next().expect(\"Impossible! We just found a newline\");\n     }\n     if s.len() > 70 {\n-        return format!(\"{} ... {}\", &s[..50], &s[s.len()-20..]);\n+        let mut lo = 50;\n+        let mut hi = s.len() - 20;\n+        while !s.is_char_boundary(lo) {\n+            lo -= 1;\n+        }\n+        while !s.is_char_boundary(hi) {\n+            hi += 1;\n+        }\n+        return format!(\"{} ... {}\", &s[..lo], &s[hi..]);\n     }\n     s.to_owned()\n }\n@@ -1756,18 +1764,18 @@ fn render_markdown(w: &mut fmt::Formatter,\n     // We only emit warnings if the user has opted-in to Pulldown rendering.\n     let output = if render_type == RenderType::Pulldown {\n         let pulldown_output = format!(\"{}\", Markdown(md_text, RenderType::Pulldown));\n-        let differences = html_diff::get_differences(&pulldown_output, &hoedown_output);\n-        let differences = differences.into_iter()\n-            .filter(|s| {\n-                match *s {\n-                    html_diff::Difference::NodeText { ref elem_text,\n-                                                      ref opposite_elem_text,\n-                                                      .. }\n-                        if match_non_whitespace(elem_text, opposite_elem_text) => false,\n-                    _ => true,\n+        let mut differences = html_diff::get_differences(&pulldown_output, &hoedown_output);\n+        differences.retain(|s| {\n+            match *s {\n+                html_diff::Difference::NodeText { ref elem_text,\n+                                                  ref opposite_elem_text,\n+                                                  .. }\n+                    if elem_text.split_whitespace().eq(opposite_elem_text.split_whitespace()) => {\n+                        false\n                 }\n-            })\n-            .collect::<Vec<_>>();\n+                _ => true,\n+            }\n+        });\n \n         if !differences.is_empty() {\n             scx.markdown_warnings.borrow_mut().push((span, md_text.to_owned(), differences));\n@@ -1781,40 +1789,6 @@ fn render_markdown(w: &mut fmt::Formatter,\n     write!(w, \"<div class='docblock'>{}{}</div>\", prefix, output)\n }\n \n-// Returns true iff s1 and s2 match, ignoring whitespace.\n-fn match_non_whitespace(s1: &str, s2: &str) -> bool {\n-    let s1 = s1.trim();\n-    let s2 = s2.trim();\n-    let mut cs1 = s1.chars();\n-    let mut cs2 = s2.chars();\n-    while let Some(c1) = cs1.next() {\n-        if c1.is_whitespace() {\n-            continue;\n-        }\n-\n-        loop {\n-            if let Some(c2) = cs2.next() {\n-                if !c2.is_whitespace() {\n-                    if c1 != c2 {\n-                        return false;\n-                    }\n-                    break;\n-                }\n-            } else {\n-                return false;\n-            }\n-        }\n-    }\n-\n-    while let Some(c2) = cs2.next() {\n-        if !c2.is_whitespace() {\n-            return false;\n-        }\n-    }\n-\n-    true\n-}\n-\n fn document_short(w: &mut fmt::Formatter, item: &clean::Item, link: AssocItemLink,\n                   cx: &Context, prefix: &str) -> fmt::Result {\n     if let Some(s) = item.doc_value() {\n@@ -3791,35 +3765,3 @@ fn test_name_sorting() {\n     sorted.sort_by_key(|&s| name_key(s));\n     assert_eq!(names, sorted);\n }\n-\n-#[cfg(test)]\n-#[test]\n-fn test_match_non_whitespace() {\n-    assert!(match_non_whitespace(\"\", \"\"));\n-    assert!(match_non_whitespace(\"  \", \"\"));\n-    assert!(match_non_whitespace(\"\", \"  \"));\n-\n-    assert!(match_non_whitespace(\"a\", \"a\"));\n-    assert!(match_non_whitespace(\" a \", \"a\"));\n-    assert!(match_non_whitespace(\"a\", \"  a\"));\n-    assert!(match_non_whitespace(\"abc\", \"abc\"));\n-    assert!(match_non_whitespace(\"abc\", \" abc \"));\n-    assert!(match_non_whitespace(\"abc  \", \"abc\"));\n-    assert!(match_non_whitespace(\"abc xyz\", \"abc xyz\"));\n-    assert!(match_non_whitespace(\"abc xyz\", \"abc\\nxyz\"));\n-    assert!(match_non_whitespace(\"abc xyz\", \"abcxyz\"));\n-    assert!(match_non_whitespace(\"abcxyz\", \"abc xyz\"));\n-    assert!(match_non_whitespace(\"abc    xyz \", \" abc xyz\\n\"));\n-\n-    assert!(!match_non_whitespace(\"a\", \"b\"));\n-    assert!(!match_non_whitespace(\" a \", \"c\"));\n-    assert!(!match_non_whitespace(\"a\", \"  aa\"));\n-    assert!(!match_non_whitespace(\"abc\", \"ac\"));\n-    assert!(!match_non_whitespace(\"abc\", \" adc \"));\n-    assert!(!match_non_whitespace(\"abc  \", \"abca\"));\n-    assert!(!match_non_whitespace(\"abc xyz\", \"abc xy\"));\n-    assert!(!match_non_whitespace(\"abc xyz\", \"bc\\nxyz\"));\n-    assert!(!match_non_whitespace(\"abc xyz\", \"abc.xyz\"));\n-    assert!(!match_non_whitespace(\"abcxyz\", \"abc.xyz\"));\n-    assert!(!match_non_whitespace(\"abc    xyz \", \" abc xyz w\"));\n-}"}]}