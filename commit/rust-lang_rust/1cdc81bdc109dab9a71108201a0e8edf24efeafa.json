{"sha": "1cdc81bdc109dab9a71108201a0e8edf24efeafa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZGM4MWJkYzEwOWRhYjlhNzExMDgyMDFhMGU4ZWRmMjRlZmVhZmE=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-02-28T18:24:46Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-06-06T04:44:54Z"}, "message": "Don't pass -Z unstable-options by default for UI tests\n\n- Pass it explicitly where appropriate\n- Update stderr files and warnings; it turns that unstable-options has\n  far-reaching effects on diagnostics.", "tree": {"sha": "553d7ca320c09c6b0962769437e123d0f911292b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/553d7ca320c09c6b0962769437e123d0f911292b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cdc81bdc109dab9a71108201a0e8edf24efeafa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cdc81bdc109dab9a71108201a0e8edf24efeafa", "html_url": "https://github.com/rust-lang/rust/commit/1cdc81bdc109dab9a71108201a0e8edf24efeafa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cdc81bdc109dab9a71108201a0e8edf24efeafa/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34b9932f5c0f519d6b9b9f95f21723142c5dc877", "url": "https://api.github.com/repos/rust-lang/rust/commits/34b9932f5c0f519d6b9b9f95f21723142c5dc877", "html_url": "https://github.com/rust-lang/rust/commit/34b9932f5c0f519d6b9b9f95f21723142c5dc877"}], "stats": {"total": 903, "additions": 86, "deletions": 817}, "files": [{"sha": "1fa37737b552dcd10c3ccadeb008e662dc5d9985", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1280,7 +1280,6 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             }\n         }\n         flags.push(format!(\"-Cdebuginfo={}\", builder.config.rust_debuginfo_level_tests));\n-        flags.push(\"-Zunstable-options\".to_string());\n         flags.push(builder.config.cmd.rustc_args().join(\" \"));\n \n         if let Some(linker) = builder.linker(target) {"}, {"sha": "0d432c1e6996ae3fd091b6a562edef4222a7fb6e", "filename": "src/test/rustdoc-ui/run-directory.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Frustdoc-ui%2Frun-directory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Frustdoc-ui%2Frun-directory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Frun-directory.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -2,8 +2,8 @@\n \n // revisions: correct incorrect\n // check-pass\n-// [correct]compile-flags:--test --test-run-directory={{src-base}}\n-// [incorrect]compile-flags:--test --test-run-directory={{src-base}}/coverage\n+// [correct]compile-flags:--test --test-run-directory={{src-base}} -Zunstable-options\n+// [incorrect]compile-flags:--test --test-run-directory={{src-base}}/coverage -Zunstable-options\n // normalize-stdout-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n // normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n "}, {"sha": "25f6490aa3558f7f8e438f29d4aa5b5ed20f0a92", "filename": "src/test/ui-fulldeps/internal-lints/pass_ty_by_ref_self.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref_self.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,3 +1,4 @@\n+// compile-flags: -Z unstable-options\n // NOTE: This test doesn't actually require `fulldeps`\n // so we could instead use it as an `ui` test.\n //"}, {"sha": "15a06e721ddcb440692273b9badcf03035863513", "filename": "src/test/ui-fulldeps/internal-lints/pass_ty_by_ref_self.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref_self.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,17 +1,17 @@\n error: passing `TyCtxt<'tcx>` by reference\n-  --> $DIR/pass_ty_by_ref_self.rs:17:15\n+  --> $DIR/pass_ty_by_ref_self.rs:18:15\n    |\n LL |     fn by_ref(&self) {}\n    |               ^^^^^ help: try passing by value: `TyCtxt<'tcx>`\n    |\n note: the lint level is defined here\n-  --> $DIR/pass_ty_by_ref_self.rs:7:9\n+  --> $DIR/pass_ty_by_ref_self.rs:8:9\n    |\n LL | #![deny(rustc::ty_pass_by_reference)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: passing `Ty<'tcx>` by reference\n-  --> $DIR/pass_ty_by_ref_self.rs:30:21\n+  --> $DIR/pass_ty_by_ref_self.rs:31:21\n    |\n LL |     fn by_ref(self: &Ty<'tcx>) {}\n    |                     ^^^^^^^^^ help: try passing by value: `Ty<'tcx>`"}, {"sha": "b0d8b5fbaf22476616aff4692ead9008fb553a40", "filename": "src/test/ui/annotate-snippet/missing-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --error-format human-annotate-rs\n+// compile-flags: --error-format human-annotate-rs -Z unstable-options\n \n pub fn main() {\n     let x: Iter; //~ ERROR cannot find type `Iter` in this scope"}, {"sha": "69d7e1a9d116afe963ee043be19f0f699a8ac80b", "filename": "src/test/ui/annotate-snippet/multispan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Fannotate-snippet%2Fmultispan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Fannotate-snippet%2Fmultispan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fannotate-snippet%2Fmultispan.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,5 +1,5 @@\n // aux-build:multispan.rs\n-// compile-flags: --error-format human-annotate-rs\n+// compile-flags: --error-format human-annotate-rs -Z unstable-options\n \n #![feature(proc_macro_hygiene)]\n "}, {"sha": "cd4700c7a7c95e8fee389e9351fa9480fd4d6ff6", "filename": "src/test/ui/deduplicate-diagnostics.duplicate.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Fdeduplicate-diagnostics.duplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Fdeduplicate-diagnostics.duplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeduplicate-diagnostics.duplicate.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -22,12 +22,6 @@ error[E0452]: malformed lint attribute input\n LL | #[deny(\"literal\")]\n    |        ^^^^^^^^^ bad attribute argument\n \n-error[E0452]: malformed lint attribute input\n-  --> $DIR/deduplicate-diagnostics.rs:8:8\n-   |\n-LL | #[deny(\"literal\")]\n-   |        ^^^^^^^^^ bad attribute argument\n-\n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0452`."}, {"sha": "7d1c4f5f83823e40676aec82d1b5f90b65244457", "filename": "src/test/ui/deduplicate-diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Fdeduplicate-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Fdeduplicate-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeduplicate-diagnostics.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -7,5 +7,4 @@ struct S;\n \n #[deny(\"literal\")] //~ ERROR malformed lint attribute input\n                    //[duplicate]~| ERROR malformed lint attribute input\n-                   //[duplicate]~| ERROR malformed lint attribute input\n fn main() {}"}, {"sha": "5066cd99be9fa38aa64be05dff62705f2d498f77", "filename": "src/test/ui/error-codes/E0452.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0452.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0452.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0452.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -2,7 +2,5 @@\n                     //~| ERROR E0452\n                     //~| ERROR E0452\n                     //~| ERROR E0452\n-                    //~| ERROR E0452\n-                    //~| ERROR E0452\n fn main() {\n }"}, {"sha": "f67b740ffe23b447735915cb448dc3415bb262fc", "filename": "src/test/ui/error-codes/E0452.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0452.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0452.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0452.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -22,18 +22,6 @@ error[E0452]: malformed lint attribute input\n LL | #![allow(foo = \"\")]\n    |          ^^^^^^^^ bad attribute argument\n \n-error[E0452]: malformed lint attribute input\n-  --> $DIR/E0452.rs:1:10\n-   |\n-LL | #![allow(foo = \"\")]\n-   |          ^^^^^^^^ bad attribute argument\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/E0452.rs:1:10\n-   |\n-LL | #![allow(foo = \"\")]\n-   |          ^^^^^^^^ bad attribute argument\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0452`."}, {"sha": "ca9573c5b461389c4ec6ef93957c22419160584e", "filename": "src/test/ui/error-codes/E0453.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0453.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0453.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0453.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -3,6 +3,5 @@\n #[allow(non_snake_case)]\n //~^ ERROR allow(non_snake_case) incompatible\n //~| ERROR allow(non_snake_case) incompatible\n-//~| ERROR allow(non_snake_case) incompatible\n fn main() {\n }"}, {"sha": "6d60dc84c210fe532703b693cf96032d9bf6ad16", "filename": "src/test/ui/error-codes/E0453.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0453.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0453.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0453.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -16,15 +16,6 @@ LL |\n LL | #[allow(non_snake_case)]\n    |         ^^^^^^^^^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(non_snake_case) incompatible with previous forbid\n-  --> $DIR/E0453.rs:3:9\n-   |\n-LL | #![forbid(non_snake_case)]\n-   |           -------------- `forbid` level set here\n-LL | \n-LL | #[allow(non_snake_case)]\n-   |         ^^^^^^^^^^^^^^ overruled by previous forbid\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0453`."}, {"sha": "2b37226334586ed018f41b35c9ed65f922a86b9a", "filename": "src/test/ui/error-codes/E0602.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0602.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ferror-codes%2FE0602.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0602.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -6,10 +6,6 @@ error[E0602]: unknown lint: `bogus`\n    |\n    = note: requested on the command line with `-D bogus`\n \n-error[E0602]: unknown lint: `bogus`\n-   |\n-   = note: requested on the command line with `-D bogus`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0602`."}, {"sha": "7756074e235a10f5248622639499d7bcb9359680", "filename": "src/test/ui/feature-gates/feature-gate-lint-reasons.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,6 +1,5 @@\n #![warn(nonstandard_style, reason = \"the standard should be respected\")]\n //~^ ERROR lint reasons are experimental\n //~| ERROR lint reasons are experimental\n-//~| ERROR lint reasons are experimental\n \n fn main() {}"}, {"sha": "12793c7a28fcac98284c70781c5a253900a2c9e2", "filename": "src/test/ui/feature-gates/feature-gate-lint-reasons.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -16,15 +16,6 @@ LL | #![warn(nonstandard_style, reason = \"the standard should be respected\")]\n    = note: see issue #54503 <https://github.com/rust-lang/rust/issues/54503> for more information\n    = help: add `#![feature(lint_reasons)]` to the crate attributes to enable\n \n-error[E0658]: lint reasons are experimental\n-  --> $DIR/feature-gate-lint-reasons.rs:1:28\n-   |\n-LL | #![warn(nonstandard_style, reason = \"the standard should be respected\")]\n-   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #54503 <https://github.com/rust-lang/rust/issues/54503> for more information\n-   = help: add `#![feature(lint_reasons)]` to the crate attributes to enable\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "38c5487183ca1bfa494fdf22ba7e96bebeea0d68", "filename": "src/test/ui/lint/crate_level_only_lint.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -4,19 +4,16 @@ mod foo {\n #![allow(uncommon_codepoints)]\n //~^ ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n //~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n-//~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n \n #[allow(uncommon_codepoints)]\n //~^ ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n //~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n-//~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n const BAR: f64 = 0.000001;\n \n }\n \n #[allow(uncommon_codepoints)]\n //~^ ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n //~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n-//~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n fn main() {\n }"}, {"sha": "83bea0412ffd52e794962ff65be131f61c820bfe", "filename": "src/test/ui/lint/crate_level_only_lint.stderr", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -11,13 +11,13 @@ LL | #![deny(uncommon_codepoints, unused_attributes)]\n    |                              ^^^^^^^^^^^^^^^^^\n \n error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:9:9\n+  --> $DIR/crate_level_only_lint.rs:8:9\n    |\n LL | #[allow(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:17:9\n+  --> $DIR/crate_level_only_lint.rs:15:9\n    |\n LL | #[allow(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n@@ -29,34 +29,16 @@ LL | #![allow(uncommon_codepoints)]\n    |          ^^^^^^^^^^^^^^^^^^^\n \n error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:9:9\n+  --> $DIR/crate_level_only_lint.rs:8:9\n    |\n LL | #[allow(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:17:9\n+  --> $DIR/crate_level_only_lint.rs:15:9\n    |\n LL | #[allow(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n-error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:4:10\n-   |\n-LL | #![allow(uncommon_codepoints)]\n-   |          ^^^^^^^^^^^^^^^^^^^\n-\n-error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:9:9\n-   |\n-LL | #[allow(uncommon_codepoints)]\n-   |         ^^^^^^^^^^^^^^^^^^^\n-\n-error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:17:9\n-   |\n-LL | #[allow(uncommon_codepoints)]\n-   |         ^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 9 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "7d8a398181493b16e1edebef0a3e2739985a38bb", "filename": "src/test/ui/lint/forbid-group-group-2.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -17,10 +17,4 @@\n //~| WARNING previously accepted by the compiler\n //~| ERROR incompatible with previous\n //~| WARNING previously accepted by the compiler\n-//~| ERROR incompatible with previous\n-//~| WARNING previously accepted by the compiler\n-//~| ERROR incompatible with previous\n-//~| WARNING previously accepted by the compiler\n-//~| ERROR incompatible with previous\n-//~| WARNING previously accepted by the compiler\n fn main() {}"}, {"sha": "d8c09e6526a2d6f340b6114792230a7556670730", "filename": "src/test/ui/lint/forbid-group-group-2.stderr", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -75,41 +75,5 @@ LL | #[allow(nonstandard_style)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n \n-error: allow(nonstandard_style) incompatible with previous forbid\n-  --> $DIR/forbid-group-group-2.rs:7:9\n-   |\n-LL | #![forbid(warnings)]\n-   |           -------- `forbid` level set here\n-...\n-LL | #[allow(nonstandard_style)]\n-   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n-\n-error: allow(nonstandard_style) incompatible with previous forbid\n-  --> $DIR/forbid-group-group-2.rs:7:9\n-   |\n-LL | #![forbid(warnings)]\n-   |           -------- `forbid` level set here\n-...\n-LL | #[allow(nonstandard_style)]\n-   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n-\n-error: allow(nonstandard_style) incompatible with previous forbid\n-  --> $DIR/forbid-group-group-2.rs:7:9\n-   |\n-LL | #![forbid(warnings)]\n-   |           -------- `forbid` level set here\n-...\n-LL | #[allow(nonstandard_style)]\n-   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n-\n-error: aborting due to 9 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "664edeaa8b43428526229cc992393bed9396bca4", "filename": "src/test/ui/lint/forbid-group-member.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-group-member.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-group-member.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-group-member.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -12,8 +12,6 @@\n //~| WARNING previously accepted\n //~| WARNING incompatible with previous forbid\n //~| WARNING previously accepted\n-//~| WARNING incompatible with previous forbid\n-//~| WARNING previously accepted\n fn main() {\n     let a: ();\n }"}, {"sha": "72772a42bede74aa3cbbb16447f142c5295386bf", "filename": "src/test/ui/lint/forbid-group-member.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-group-member.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-group-member.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-group-member.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -35,17 +35,5 @@ LL | #[allow(unused_variables)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n \n-warning: allow(unused_variables) incompatible with previous forbid\n-  --> $DIR/forbid-group-member.rs:8:9\n-   |\n-LL | #![forbid(unused)]\n-   |           ------ `forbid` level set here\n-LL | \n-LL | #[allow(unused_variables)]\n-   |         ^^^^^^^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n-\n-warning: 4 warnings emitted\n+warning: 3 warnings emitted\n "}, {"sha": "e2f76825a2d41d69b4d6485bcf9ee11e27cc76d1", "filename": "src/test/ui/lint/forbid-member-group.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-member-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-member-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-member-group.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -6,7 +6,6 @@\n #[allow(unused)]\n //~^ ERROR incompatible with previous forbid\n //~| ERROR incompatible with previous forbid\n-//~| ERROR incompatible with previous forbid\n fn main() {\n     let a: ();\n }"}, {"sha": "39700af4d594330bc7844892b1f09dc07cf84f89", "filename": "src/test/ui/lint/forbid-member-group.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-member-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforbid-member-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-member-group.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -16,15 +16,6 @@ LL |\n LL | #[allow(unused)]\n    |         ^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(unused) incompatible with previous forbid\n-  --> $DIR/forbid-member-group.rs:6:9\n-   |\n-LL | #![forbid(unused_variables)]\n-   |           ---------------- `forbid` level set here\n-LL | \n-LL | #[allow(unused)]\n-   |         ^^^^^^ overruled by previous forbid\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0453`."}, {"sha": "0a3e20b4f7d66dbff56971c0fd45df3f1dec2659", "filename": "src/test/ui/lint/force-warn/force-allowed-by-default-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns elided_lifetimes_in_paths\n+// compile-flags: --force-warns elided_lifetimes_in_paths -Zunstable-options\n // check-pass\n \n struct Foo<'a> {"}, {"sha": "0abc49137269d93e6a7f5d0d9a8e472e3b0e6e1b", "filename": "src/test/ui/lint/force-warn/force-allowed-deny-by-default-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns const_err\n+// compile-flags: --force-warns const_err -Zunstable-options\n // check-pass\n \n #![allow(const_err)]"}, {"sha": "bac0e4f8f8e866559d19e08e9c1d033b9ecb6c9f", "filename": "src/test/ui/lint/force-warn/force-allowed-warning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns dead_code\n+// compile-flags: --force-warns dead_code -Zunstable-options\n // check-pass\n \n #![allow(dead_code)]"}, {"sha": "e721760ab2da0a4785e80012eba114842b88b063", "filename": "src/test/ui/lint/force-warn/force-deny-by-default-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns const_err\n+// compile-flags: --force-warns const_err -Zunstable-options\n // check-pass\n \n const C: i32 = 1 / 0;"}, {"sha": "0dc1ce28ac4f5f2e8f42fb00d3d81aa276160d4d", "filename": "src/test/ui/lint/force-warn/force-lint-allow-all-warnings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns dead_code\n+// compile-flags: --force-warns dead_code -Zunstable-options\n // check-pass\n \n #![allow(warnings)]"}, {"sha": "4f637c7fefa2b873670b3e7d5f5dc81cf0b5f643", "filename": "src/test/ui/lint/force-warn/force-lint-group-allow-all-warnings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns nonstandard_style\n+// compile-flags: --force-warns nonstandard_style -Zunstable-options\n // check-pass\n \n #![allow(warnings)]"}, {"sha": "bb2f394aef3e69e00d62c70569fde3cd395ae0ad", "filename": "src/test/ui/lint/force-warn/force-lint-in-allowed-group.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns bare_trait_objects\n+// compile-flags: --force-warns bare_trait_objects -Zunstable-options\n // check-pass\n \n #![allow(rust_2018_idioms)]"}, {"sha": "fd029a3d55cb9e0f75bfffe129249f45b1735676", "filename": "src/test/ui/lint/force-warn/force-warn-group-allow-warning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns rust_2018_idioms\n+// compile-flags: --force-warns rust_2018_idioms -Zunstable-options\n // check-pass\n \n #![allow(bare_trait_objects)]"}, {"sha": "c97eeabbd4e04013e62773c40dbf9f9661a11791", "filename": "src/test/ui/lint/force-warn/force-warn-group.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns rust_2018_idioms\n+// compile-flags: --force-warns rust_2018_idioms -Zunstable-options\n // check-pass\n \n #![allow(rust_2018_idioms)]"}, {"sha": "1e116206f7b9482d6c2daa70408b2c5f56ff5a86", "filename": "src/test/ui/lint/issue-80988.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fissue-80988.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fissue-80988.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-80988.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -11,6 +11,4 @@\n //~| WARNING being phased out\n //~| WARNING incompatible with previous forbid\n //~| WARNING being phased out\n-//~| WARNING incompatible with previous forbid\n-//~| WARNING being phased out\n fn main() {}"}, {"sha": "deee267d0c60373b2d55ca829a903a2ba1eaee36", "filename": "src/test/ui/lint/issue-80988.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fissue-80988.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fissue-80988.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-80988.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -35,17 +35,5 @@ LL | #[deny(warnings)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n \n-warning: deny(warnings) incompatible with previous forbid\n-  --> $DIR/issue-80988.rs:7:8\n-   |\n-LL | #![forbid(warnings)]\n-   |           -------- `forbid` level set here\n-LL | \n-LL | #[deny(warnings)]\n-   |        ^^^^^^^^ overruled by previous forbid\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n-\n-warning: 4 warnings emitted\n+warning: 3 warnings emitted\n "}, {"sha": "ab62f0c8b8c897bcc37e586d4df23f4533c24a1c", "filename": "src/test/ui/lint/issue-83477.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fissue-83477.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fissue-83477.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-83477.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,3 +1,4 @@\n+// compile-flags: -Zunstable-options\n // check-pass\n #![warn(rustc::internal)]\n "}, {"sha": "028890f3623df8a477493ef022784aed4b48d079", "filename": "src/test/ui/lint/issue-83477.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fissue-83477.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fissue-83477.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-83477.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,25 +1,25 @@\n warning: unknown lint: `rustc::foo::bar::default_hash_types`\n-  --> $DIR/issue-83477.rs:4:9\n+  --> $DIR/issue-83477.rs:5:9\n    |\n LL | #[allow(rustc::foo::bar::default_hash_types)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: did you mean: `rustc::default_hash_types`\n    |\n    = note: `#[warn(unknown_lints)]` on by default\n \n warning: unknown lint: `rustc::foo::default_hash_types`\n-  --> $DIR/issue-83477.rs:8:9\n+  --> $DIR/issue-83477.rs:9:9\n    |\n LL | #[allow(rustc::foo::default_hash_types)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: did you mean: `rustc::default_hash_types`\n \n warning: Prefer FxHashMap over HashMap, it has better performance\n-  --> $DIR/issue-83477.rs:13:31\n+  --> $DIR/issue-83477.rs:14:31\n    |\n LL |     let _ = std::collections::HashMap::<String, String>::new();\n    |                               ^^^^^^^ help: use: `FxHashMap`\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-83477.rs:2:9\n+  --> $DIR/issue-83477.rs:3:9\n    |\n LL | #![warn(rustc::internal)]\n    |         ^^^^^^^^^^^^^^^"}, {"sha": "6d4cfd8342420f351b05f3fdc94a09652c8d67f1", "filename": "src/test/ui/lint/lint-forbid-attr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -3,6 +3,5 @@\n #[allow(deprecated)]\n //~^ ERROR allow(deprecated) incompatible\n //~| ERROR allow(deprecated) incompatible\n-//~| ERROR allow(deprecated) incompatible\n fn main() {\n }"}, {"sha": "48228c5dfdd7a0fe4820f6d07d4e3511296ba744", "filename": "src/test/ui/lint/lint-forbid-attr.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -16,15 +16,6 @@ LL |\n LL | #[allow(deprecated)]\n    |         ^^^^^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(deprecated) incompatible with previous forbid\n-  --> $DIR/lint-forbid-attr.rs:3:9\n-   |\n-LL | #![forbid(deprecated)]\n-   |           ---------- `forbid` level set here\n-LL | \n-LL | #[allow(deprecated)]\n-   |         ^^^^^^^^^^ overruled by previous forbid\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0453`."}, {"sha": "5246ccb57a67a08d77c04687b5fe4aafe740cbac", "filename": "src/test/ui/lint/lint-forbid-cmdline.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -2,6 +2,5 @@\n \n #[allow(deprecated)] //~ ERROR allow(deprecated) incompatible\n                      //~| ERROR allow(deprecated) incompatible\n-                     //~| ERROR allow(deprecated) incompatible\n fn main() {\n }"}, {"sha": "0a92e58c04aa5f1e43489c021d24ac636f44ccd5", "filename": "src/test/ui/lint/lint-forbid-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -14,14 +14,6 @@ LL | #[allow(deprecated)]\n    |\n    = note: `forbid` lint level was set on command line\n \n-error[E0453]: allow(deprecated) incompatible with previous forbid\n-  --> $DIR/lint-forbid-cmdline.rs:3:9\n-   |\n-LL | #[allow(deprecated)]\n-   |         ^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = note: `forbid` lint level was set on command line\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0453`."}, {"sha": "188e702f98b384f2e6e850872a268dea3db22652", "filename": "src/test/ui/lint/lint-malformed.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-malformed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-malformed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-malformed.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -3,6 +3,4 @@\n                        //~| ERROR malformed lint attribute\n                        //~| ERROR malformed lint attribute\n                        //~| ERROR malformed lint attribute\n-                       //~| ERROR malformed lint attribute\n-                       //~| ERROR malformed lint attribute\n fn main() { }"}, {"sha": "b3a41a786c1f0961e10dfffc057ea276da0dab49", "filename": "src/test/ui/lint/lint-malformed.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-malformed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-malformed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-malformed.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -28,18 +28,6 @@ error[E0452]: malformed lint attribute input\n LL | #![allow(bar = \"baz\")]\n    |          ^^^^^^^^^^^ bad attribute argument\n \n-error[E0452]: malformed lint attribute input\n-  --> $DIR/lint-malformed.rs:2:10\n-   |\n-LL | #![allow(bar = \"baz\")]\n-   |          ^^^^^^^^^^^ bad attribute argument\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/lint-malformed.rs:2:10\n-   |\n-LL | #![allow(bar = \"baz\")]\n-   |          ^^^^^^^^^^^ bad attribute argument\n-\n-error: aborting due to 7 previous errors\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0452`."}, {"sha": "9be532ef234d1c164db22b898bfa068648a36721", "filename": "src/test/ui/lint/lint-removed-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -10,10 +10,6 @@ warning: lint `raw_pointer_derive` has been removed: using derive with raw point\n    |\n    = note: requested on the command line with `-D raw_pointer_derive`\n \n-warning: lint `raw_pointer_derive` has been removed: using derive with raw pointers is ok\n-   |\n-   = note: requested on the command line with `-D raw_pointer_derive`\n-\n error: unused variable: `unused`\n   --> $DIR/lint-removed-cmdline.rs:12:17\n    |\n@@ -27,5 +23,5 @@ LL | #[deny(warnings)]\n    |        ^^^^^^^^\n    = note: `#[deny(unused_variables)]` implied by `#[deny(warnings)]`\n \n-error: aborting due to previous error; 4 warnings emitted\n+error: aborting due to previous error; 3 warnings emitted\n "}, {"sha": "8dfd61ac927a976b245abfab6d1f7a1e4d8104d1", "filename": "src/test/ui/lint/lint-renamed-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -10,10 +10,6 @@ warning: lint `bare_trait_object` has been renamed to `bare_trait_objects`\n    |\n    = note: requested on the command line with `-D bare_trait_object`\n \n-warning: lint `bare_trait_object` has been renamed to `bare_trait_objects`\n-   |\n-   = note: requested on the command line with `-D bare_trait_object`\n-\n error: unused variable: `unused`\n   --> $DIR/lint-renamed-cmdline.rs:8:17\n    |\n@@ -27,5 +23,5 @@ LL | #[deny(unused)]\n    |        ^^^^^^\n    = note: `#[deny(unused_variables)]` implied by `#[deny(unused)]`\n \n-error: aborting due to previous error; 4 warnings emitted\n+error: aborting due to previous error; 3 warnings emitted\n "}, {"sha": "a11ee769c7c180df2751adc1737d5b65451aeaa2", "filename": "src/test/ui/lint/lint-unexported-no-mangle.stderr", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-unexported-no-mangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-unexported-no-mangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unexported-no-mangle.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -22,14 +22,6 @@ warning: lint `private_no_mangle_statics` has been removed: no longer a warning,\n    |\n    = note: requested on the command line with `-F private_no_mangle_statics`\n \n-warning: lint `private_no_mangle_fns` has been removed: no longer a warning, `#[no_mangle]` functions always exported\n-   |\n-   = note: requested on the command line with `-F private_no_mangle_fns`\n-\n-warning: lint `private_no_mangle_statics` has been removed: no longer a warning, `#[no_mangle]` statics always exported\n-   |\n-   = note: requested on the command line with `-F private_no_mangle_statics`\n-\n error: const items should never be `#[no_mangle]`\n   --> $DIR/lint-unexported-no-mangle.rs:9:1\n    |\n@@ -48,5 +40,5 @@ LL | pub const PUB_FOO: u64 = 1;\n    | |\n    | help: try a static value: `pub static`\n \n-error: aborting due to 2 previous errors; 8 warnings emitted\n+error: aborting due to 2 previous errors; 6 warnings emitted\n "}, {"sha": "3855d55279291db999c5f968885e3f4659a64553", "filename": "src/test/ui/lint/lint-unknown-lint-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-unknown-lint-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Flint-unknown-lint-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unknown-lint-cmdline.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -16,15 +16,6 @@ error[E0602]: unknown lint: `dead_cod`\n    = help: did you mean: `dead_code`\n    = note: requested on the command line with `-D dead_cod`\n \n-error[E0602]: unknown lint: `bogus`\n-   |\n-   = note: requested on the command line with `-D bogus`\n-\n-error[E0602]: unknown lint: `dead_cod`\n-   |\n-   = help: did you mean: `dead_code`\n-   = note: requested on the command line with `-D dead_cod`\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0602`."}, {"sha": "cd693ae166cdee02195aebeda050b4de32d66bf4", "filename": "src/test/ui/lint/reasons-erroneous.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -3,26 +3,18 @@\n #![warn(absolute_paths_not_starting_with_crate, reason = 0)]\n //~^ ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| NOTE reason must be a string literal\n //~| NOTE reason must be a string literal\n //~| NOTE reason must be a string literal\n #![warn(anonymous_parameters, reason = b\"consider these, for we have condemned them\")]\n //~^ ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| NOTE reason must be a string literal\n //~| NOTE reason must be a string literal\n //~| NOTE reason must be a string literal\n #![warn(bare_trait_objects, reasons = \"leaders to no sure land, guides their bearings lost\")]\n //~^ ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| NOTE bad attribute argument\n-//~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n@@ -32,10 +24,6 @@\n //~| ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| NOTE bad attribute argument\n-//~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n@@ -45,26 +33,18 @@\n //~| ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| NOTE bad attribute argument\n-//~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n //~| NOTE bad attribute argument\n #![warn(ellipsis_inclusive_range_patterns, reason = \"born barren\", reason = \"a freak growth\")]\n //~^ ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| NOTE reason in lint attribute must come last\n //~| NOTE reason in lint attribute must come last\n //~| NOTE reason in lint attribute must come last\n #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n //~^ ERROR malformed lint attribute\n //~| ERROR malformed lint attribute\n-//~| ERROR malformed lint attribute\n-//~| NOTE reason in lint attribute must come last\n //~| NOTE reason in lint attribute must come last\n //~| NOTE reason in lint attribute must come last\n #![warn(missing_copy_implementations, reason)]"}, {"sha": "f65ca08694d58ec69d14300335c0a7279afe047b", "filename": "src/test/ui/lint/reasons-erroneous.stderr", "status": "modified", "additions": 20, "deletions": 80, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -5,61 +5,61 @@ LL | #![warn(absolute_paths_not_starting_with_crate, reason = 0)]\n    |                                                          ^ reason must be a string literal\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:10:40\n+  --> $DIR/reasons-erroneous.rs:8:40\n    |\n LL | #![warn(anonymous_parameters, reason = b\"consider these, for we have condemned them\")]\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ reason must be a string literal\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:17:29\n+  --> $DIR/reasons-erroneous.rs:13:29\n    |\n LL | #![warn(bare_trait_objects, reasons = \"leaders to no sure land, guides their bearings lost\")]\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:17:29\n+  --> $DIR/reasons-erroneous.rs:13:29\n    |\n LL | #![warn(bare_trait_objects, reasons = \"leaders to no sure land, guides their bearings lost\")]\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:30:23\n+  --> $DIR/reasons-erroneous.rs:22:23\n    |\n LL | #![warn(box_pointers, blerp = \"or in league with robbers have reversed the signposts\")]\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:30:23\n+  --> $DIR/reasons-erroneous.rs:22:23\n    |\n LL | #![warn(box_pointers, blerp = \"or in league with robbers have reversed the signposts\")]\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:43:36\n+  --> $DIR/reasons-erroneous.rs:31:36\n    |\n LL | #![warn(elided_lifetimes_in_paths, reason(\"disrespectful to ancestors\", \"irresponsible to heirs\"))]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:43:36\n+  --> $DIR/reasons-erroneous.rs:31:36\n    |\n LL | #![warn(elided_lifetimes_in_paths, reason(\"disrespectful to ancestors\", \"irresponsible to heirs\"))]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:56:44\n+  --> $DIR/reasons-erroneous.rs:40:44\n    |\n LL | #![warn(ellipsis_inclusive_range_patterns, reason = \"born barren\", reason = \"a freak growth\")]\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:63:25\n+  --> $DIR/reasons-erroneous.rs:45:25\n    |\n LL | #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n warning: unknown lint: `reason`\n-  --> $DIR/reasons-erroneous.rs:70:39\n+  --> $DIR/reasons-erroneous.rs:50:39\n    |\n LL | #![warn(missing_copy_implementations, reason)]\n    |                                       ^^^^^^\n@@ -73,119 +73,59 @@ LL | #![warn(absolute_paths_not_starting_with_crate, reason = 0)]\n    |                                                          ^ reason must be a string literal\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:10:40\n+  --> $DIR/reasons-erroneous.rs:8:40\n    |\n LL | #![warn(anonymous_parameters, reason = b\"consider these, for we have condemned them\")]\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ reason must be a string literal\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:17:29\n+  --> $DIR/reasons-erroneous.rs:13:29\n    |\n LL | #![warn(bare_trait_objects, reasons = \"leaders to no sure land, guides their bearings lost\")]\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:17:29\n+  --> $DIR/reasons-erroneous.rs:13:29\n    |\n LL | #![warn(bare_trait_objects, reasons = \"leaders to no sure land, guides their bearings lost\")]\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:30:23\n+  --> $DIR/reasons-erroneous.rs:22:23\n    |\n LL | #![warn(box_pointers, blerp = \"or in league with robbers have reversed the signposts\")]\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:30:23\n+  --> $DIR/reasons-erroneous.rs:22:23\n    |\n LL | #![warn(box_pointers, blerp = \"or in league with robbers have reversed the signposts\")]\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:43:36\n+  --> $DIR/reasons-erroneous.rs:31:36\n    |\n LL | #![warn(elided_lifetimes_in_paths, reason(\"disrespectful to ancestors\", \"irresponsible to heirs\"))]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:43:36\n+  --> $DIR/reasons-erroneous.rs:31:36\n    |\n LL | #![warn(elided_lifetimes_in_paths, reason(\"disrespectful to ancestors\", \"irresponsible to heirs\"))]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:56:44\n+  --> $DIR/reasons-erroneous.rs:40:44\n    |\n LL | #![warn(ellipsis_inclusive_range_patterns, reason = \"born barren\", reason = \"a freak growth\")]\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:63:25\n+  --> $DIR/reasons-erroneous.rs:45:25\n    |\n LL | #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:3:58\n-   |\n-LL | #![warn(absolute_paths_not_starting_with_crate, reason = 0)]\n-   |                                                          ^ reason must be a string literal\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:10:40\n-   |\n-LL | #![warn(anonymous_parameters, reason = b\"consider these, for we have condemned them\")]\n-   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ reason must be a string literal\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:17:29\n-   |\n-LL | #![warn(bare_trait_objects, reasons = \"leaders to no sure land, guides their bearings lost\")]\n-   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:17:29\n-   |\n-LL | #![warn(bare_trait_objects, reasons = \"leaders to no sure land, guides their bearings lost\")]\n-   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:30:23\n-   |\n-LL | #![warn(box_pointers, blerp = \"or in league with robbers have reversed the signposts\")]\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:30:23\n-   |\n-LL | #![warn(box_pointers, blerp = \"or in league with robbers have reversed the signposts\")]\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:43:36\n-   |\n-LL | #![warn(elided_lifetimes_in_paths, reason(\"disrespectful to ancestors\", \"irresponsible to heirs\"))]\n-   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:43:36\n-   |\n-LL | #![warn(elided_lifetimes_in_paths, reason(\"disrespectful to ancestors\", \"irresponsible to heirs\"))]\n-   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ bad attribute argument\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:56:44\n-   |\n-LL | #![warn(ellipsis_inclusive_range_patterns, reason = \"born barren\", reason = \"a freak growth\")]\n-   |                                            ^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n-\n-error[E0452]: malformed lint attribute input\n-  --> $DIR/reasons-erroneous.rs:63:25\n-   |\n-LL | #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n-\n-error: aborting due to 30 previous errors; 1 warning emitted\n+error: aborting due to 20 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0452`."}, {"sha": "17d3afbf6e26e7bb3687606b57a57a240738a4c6", "filename": "src/test/ui/lint/register-tool-lint.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -7,5 +7,3 @@\n //~| HELP add `#![register_tool(abc)]`\n //~| ERROR unknown tool name `abc`\n //~| HELP add `#![register_tool(abc)]`\n-//~| ERROR unknown tool name `abc`\n-//~| HELP add `#![register_tool(abc)]`"}, {"sha": "842d845ff7c33fa5a3f3364909594e9f55f910b5", "filename": "src/test/ui/lint/register-tool-lint.stderr", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -14,14 +14,6 @@ LL | #![warn(abc::my_lint)]\n    |\n    = help: add `#![register_tool(abc)]` to the crate root\n \n-error[E0710]: unknown tool name `abc` found in scoped lint: `abc::my_lint`\n-  --> $DIR/register-tool-lint.rs:5:9\n-   |\n-LL | #![warn(abc::my_lint)]\n-   |         ^^^\n-   |\n-   = help: add `#![register_tool(abc)]` to the crate root\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0710`."}, {"sha": "d17514303abf67360d18c27011eec95e5e60b95d", "filename": "src/test/ui/lint/use_suggestion_json.stderr", "status": "modified", "additions": 2, "deletions": 419, "changes": 421, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,420 +1,3 @@\n-{\n-  \"message\": \"cannot find type `Iter` in this scope\",\n-  \"code\": {\n-    \"code\": \"E0412\",\n-    \"explanation\": \"A used type name is not in scope.\n+{\"message\":\"`--error-format=pretty-json` is unstable\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: `--error-format=pretty-json` is unstable\\u001b[0m\n \n-Erroneous code examples:\n-\n-```compile_fail,E0412\n-impl Something {} // error: type name `Something` is not in scope\n-\n-// or:\n-\n-trait Foo {\n-    fn bar(N); // error: type name `N` is not in scope\n-}\n-\n-// or:\n-\n-fn foo(x: T) {} // type name `T` is not in scope\n-```\n-\n-To fix this error, please verify you didn't misspell the type name, you did\n-declare it or imported it into the scope. Examples:\n-\n-```\n-struct Something;\n-\n-impl Something {} // ok!\n-\n-// or:\n-\n-trait Foo {\n-    type N;\n-\n-    fn bar(_: Self::N); // ok!\n-}\n-\n-// or:\n-\n-fn foo<T>(x: T) {} // ok!\n-```\n-\n-Another case that causes this error is when a type is imported into a parent\n-module. To fix this, you can follow the suggestion and use File directly or\n-`use super::File;` which will import the types from the parent namespace. An\n-example that causes this error is below:\n-\n-```compile_fail,E0412\n-use std::fs::File;\n-\n-mod foo {\n-    fn some_function(f: File) {}\n-}\n-```\n-\n-```\n-use std::fs::File;\n-\n-mod foo {\n-    // either\n-    use super::File;\n-    // or\n-    // use std::fs::File;\n-    fn foo(f: File) {}\n-}\n-# fn main() {} // don't insert it for us; that'll break imports\n-```\n-\"\n-  },\n-  \"level\": \"error\",\n-  \"spans\": [\n-    {\n-      \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-      \"byte_start\": 541,\n-      \"byte_end\": 545,\n-      \"line_start\": 12,\n-      \"line_end\": 12,\n-      \"column_start\": 12,\n-      \"column_end\": 16,\n-      \"is_primary\": true,\n-      \"text\": [\n-        {\n-          \"text\": \"    let x: Iter;\",\n-          \"highlight_start\": 12,\n-          \"highlight_end\": 16\n-        }\n-      ],\n-      \"label\": \"not found in this scope\",\n-      \"suggested_replacement\": null,\n-      \"suggestion_applicability\": null,\n-      \"expansion\": null\n-    }\n-  ],\n-  \"children\": [\n-    {\n-      \"message\": \"consider importing one of these items\",\n-      \"code\": null,\n-      \"level\": \"help\",\n-      \"spans\": [\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::collections::binary_heap::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::collections::btree_map::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::collections::btree_set::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::collections::hash_map::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::collections::hash_set::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::collections::linked_list::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::collections::vec_deque::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::option::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::path::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::result::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::slice::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        },\n-        {\n-          \"file_name\": \"$DIR/use_suggestion_json.rs\",\n-          \"byte_start\": 518,\n-          \"byte_end\": 518,\n-          \"line_start\": 11,\n-          \"line_end\": 11,\n-          \"column_start\": 1,\n-          \"column_end\": 1,\n-          \"is_primary\": true,\n-          \"text\": [\n-            {\n-              \"text\": \"fn main() {\",\n-              \"highlight_start\": 1,\n-              \"highlight_end\": 1\n-            }\n-          ],\n-          \"label\": null,\n-          \"suggested_replacement\": \"use std::sync::mpsc::Iter;\n-\n-\",\n-          \"suggestion_applicability\": \"Unspecified\",\n-          \"expansion\": null\n-        }\n-      ],\n-      \"children\": [],\n-      \"rendered\": null\n-    }\n-  ],\n-  \"rendered\": \"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0412]\\u001b[0m\\u001b[0m\\u001b[1m: cannot find type `Iter` in this scope\\u001b[0m\n-\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m$DIR/use_suggestion_json.rs:12:12\\u001b[0m\n-\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    let x: Iter;\\u001b[0m\n-\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m           \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mnot found in this scope\\u001b[0m\n-\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: consider importing one of these items\\u001b[0m\n-\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0muse std::collections::binary_heap::Iter;\\u001b[0m\n-\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0muse std::collections::btree_map::Iter;\\u001b[0m\n-\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0muse std::collections::btree_set::Iter;\\u001b[0m\n-\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0muse std::collections::hash_map::Iter;\\u001b[0m\n-\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0m     and 8 other candidates\\u001b[0m\n-\n-\"\n-}\n-{\n-  \"message\": \"aborting due to previous error\",\n-  \"code\": null,\n-  \"level\": \"error\",\n-  \"spans\": [],\n-  \"children\": [],\n-  \"rendered\": \"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to previous error\\u001b[0m\n-\n-\"\n-}\n-{\n-  \"message\": \"For more information about this error, try `rustc --explain E0412`.\",\n-  \"code\": null,\n-  \"level\": \"failure-note\",\n-  \"spans\": [],\n-  \"children\": [],\n-  \"rendered\": \"\\u001b[0m\\u001b[1mFor more information about this error, try `rustc --explain E0412`.\\u001b[0m\n-\"\n-}\n+\"}"}, {"sha": "ef27532f6de1f6813192e521040706fdb678ceb7", "filename": "src/test/ui/tool_lints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ftool_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ftool_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool_lints.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,5 +1,4 @@\n #[warn(foo::bar)]\n //~^ ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n-//~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n fn main() {}"}, {"sha": "d36cd193b15c2053d2879e216f0f890467bcb67f", "filename": "src/test/ui/tool_lints.stderr", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ftool_lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Ftool_lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool_lints.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -14,14 +14,6 @@ LL | #[warn(foo::bar)]\n    |\n    = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n-  --> $DIR/tool_lints.rs:1:8\n-   |\n-LL | #[warn(foo::bar)]\n-   |        ^^^\n-   |\n-   = help: add `#![register_tool(foo)]` to the crate root\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0710`."}, {"sha": "cd5d2f028af023bba1139040d9ba79719bf9a2e0", "filename": "src/test/ui/unknown-lint-tool-name.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funknown-lint-tool-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funknown-lint-tool-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funknown-lint-tool-name.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,8 +1,6 @@\n #![deny(foo::bar)] //~ ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n                    //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n-                   //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n \n #[allow(foo::bar)] //~ ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n                    //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n-                   //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n fn main() {}"}, {"sha": "5f8349ce6c3c430f62a13a04d6a7fe3aa9c1bb03", "filename": "src/test/ui/unknown-lint-tool-name.stderr", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funknown-lint-tool-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funknown-lint-tool-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funknown-lint-tool-name.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -7,7 +7,7 @@ LL | #![deny(foo::bar)]\n    = help: add `#![register_tool(foo)]` to the crate root\n \n error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n-  --> $DIR/unknown-lint-tool-name.rs:5:9\n+  --> $DIR/unknown-lint-tool-name.rs:4:9\n    |\n LL | #[allow(foo::bar)]\n    |         ^^^\n@@ -23,29 +23,13 @@ LL | #![deny(foo::bar)]\n    = help: add `#![register_tool(foo)]` to the crate root\n \n error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n-  --> $DIR/unknown-lint-tool-name.rs:5:9\n+  --> $DIR/unknown-lint-tool-name.rs:4:9\n    |\n LL | #[allow(foo::bar)]\n    |         ^^^\n    |\n    = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n-  --> $DIR/unknown-lint-tool-name.rs:1:9\n-   |\n-LL | #![deny(foo::bar)]\n-   |         ^^^\n-   |\n-   = help: add `#![register_tool(foo)]` to the crate root\n-\n-error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n-  --> $DIR/unknown-lint-tool-name.rs:5:9\n-   |\n-LL | #[allow(foo::bar)]\n-   |         ^^^\n-   |\n-   = help: add `#![register_tool(foo)]` to the crate root\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0710`."}, {"sha": "e69df0359fd914203bf9dd4978fd2fef3b8a5aec", "filename": "src/test/ui/unused-crate-deps/extern-loc-bad-loctype.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-bad-loctype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-bad-loctype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-bad-loctype.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,7 +1,7 @@\n // --extern-location with bad location type\n \n // aux-crate:bar=bar.rs\n-// compile-flags:--extern-location bar=badloc:in-the-test-file\n+// compile-flags:--extern-location bar=badloc:in-the-test-file -Z unstable-options\n \n #![warn(unused_crate_dependencies)]\n "}, {"sha": "aee6233e4283d40a68e3c22379111d6014d7834d", "filename": "src/test/ui/unused-crate-deps/extern-loc-json-bad-json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-bad-json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-bad-json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-bad-json.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,7 +1,7 @@\n // --extern-location with a raw reference\n \n // aux-crate:bar=bar.rs\n-// compile-flags:--extern-location bar=json:[{\"malformed\n+// compile-flags:--extern-location bar=json:[{\"malformed -Z unstable-options\n \n #![warn(unused_crate_dependencies)]\n "}, {"sha": "c7988cd469e2d06a71e53af011d8b84cc6752195", "filename": "src/test/ui/unused-crate-deps/extern-loc-json-json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -2,7 +2,7 @@\n \n // check-pass\n // aux-crate:bar=bar.rs\n-// compile-flags:--extern-location bar=json:{\"key\":123,\"value\":{}} --error-format json\n+// compile-flags:--extern-location bar=json:{\"key\":123,\"value\":{}} --error-format json -Z unstable-options\n \n #![warn(unused_crate_dependencies)]\n //~^ WARNING external crate `bar` unused in"}, {"sha": "001ec6a25549a10d7c12626a9133230440761910", "filename": "src/test/ui/unused-crate-deps/extern-loc-json-json.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-{\"message\":\"external crate `bar` unused in `extern_loc_json_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-json-json.rs\",\"byte_start\":169,\"byte_end\":169,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-json-json.rs\",\"byte_start\":177,\"byte_end\":202,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"remove unnecessary dependency `bar`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":{\"key\":123,\"value\":{}}}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_json_json`: remove the dependency or add `use bar as _;`\n+{\"message\":\"external crate `bar` unused in `extern_loc_json_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-json-json.rs\",\"byte_start\":189,\"byte_end\":189,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-json-json.rs\",\"byte_start\":197,\"byte_end\":222,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"remove unnecessary dependency `bar`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":{\"key\":123,\"value\":{}}}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_json_json`: remove the dependency or add `use bar as _;`\n   --> $DIR/extern-loc-json-json.rs:7:1\n    |\n LL | #![warn(unused_crate_dependencies)]"}, {"sha": "c0d76c86b895c190566738a905579fdd1bbc9ca4", "filename": "src/test/ui/unused-crate-deps/extern-loc-json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -2,7 +2,7 @@\n \n // check-pass\n // aux-crate:bar=bar.rs\n-// compile-flags:--extern-location bar=json:{\"key\":123,\"value\":{}}\n+// compile-flags:--extern-location bar=json:{\"key\":123,\"value\":{}} -Z unstable-options\n \n #![warn(unused_crate_dependencies)]\n //~^ WARNING external crate `bar` unused in"}, {"sha": "3590b9c2812c772c60b0f4188700c9ab53b1130d", "filename": "src/test/ui/unused-crate-deps/extern-loc-missing-loctype.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-missing-loctype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-missing-loctype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-missing-loctype.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,7 +1,7 @@\n // --extern-location with no type\n \n // aux-crate:bar=bar.rs\n-// compile-flags:--extern-location bar=missing-loc-type\n+// compile-flags:--extern-location bar=missing-loc-type -Z unstable-options\n \n #![warn(unused_crate_dependencies)]\n "}, {"sha": "64c3d77ce0826e0228ecb732e511e9f2923bc9d1", "filename": "src/test/ui/unused-crate-deps/extern-loc-raw-json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -2,7 +2,7 @@\n \n // check-pass\n // aux-crate:bar=bar.rs\n-// compile-flags:--extern-location bar=raw:in-the-test-file --error-format json\n+// compile-flags:--extern-location bar=raw:in-the-test-file --error-format json -Z unstable-options\n \n #![warn(unused_crate_dependencies)]\n //~^ WARNING external crate `bar` unused in"}, {"sha": "4083bd51835b03afa45ee530e3777a9cecb3455d", "filename": "src/test/ui/unused-crate-deps/extern-loc-raw-json.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.stderr?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,4 +1,4 @@\n-{\"message\":\"external crate `bar` unused in `extern_loc_raw_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":162,\"byte_end\":162,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":170,\"byte_end\":195,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"remove unnecessary dependency `bar` at `in-the-test-file`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"raw extern location\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":0,\"byte_end\":0,\"line_start\":1,\"line_end\":1,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[],\"label\":null,\"suggested_replacement\":\"in-the-test-file\",\"suggestion_applicability\":\"Unspecified\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":\"in-the-test-file\"}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_raw_json`: remove the dependency or add `use bar as _;`\n+{\"message\":\"external crate `bar` unused in `extern_loc_raw_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":182,\"byte_end\":182,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":190,\"byte_end\":215,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"remove unnecessary dependency `bar` at `in-the-test-file`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"raw extern location\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":0,\"byte_end\":0,\"line_start\":1,\"line_end\":1,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[],\"label\":null,\"suggested_replacement\":\"in-the-test-file\",\"suggestion_applicability\":\"Unspecified\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":\"in-the-test-file\"}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_raw_json`: remove the dependency or add `use bar as _;`\n   --> $DIR/extern-loc-raw-json.rs:7:1\n    |\n LL | #![warn(unused_crate_dependencies)]"}, {"sha": "a9e7afbda31e75005f07fe0abfd2320721d54715", "filename": "src/test/ui/unused-crate-deps/extern-loc-raw-missing-loc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-missing-loc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-missing-loc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-missing-loc.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1,7 +1,7 @@\n // --extern-location with a raw reference\n \n // aux-crate:bar=bar.rs\n-// compile-flags:--extern-location bar=raw\n+// compile-flags:--extern-location bar=raw -Z unstable-options\n \n #![warn(unused_crate_dependencies)]\n "}, {"sha": "27d0975d01ada9b5c763ed047a31832cd427d5a5", "filename": "src/test/ui/unused-crate-deps/extern-loc-raw.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -2,7 +2,7 @@\n \n // check-pass\n // aux-crate:bar=bar.rs\n-// compile-flags:--extern-location bar=raw:in-the-test-file\n+// compile-flags:--extern-location bar=raw:in-the-test-file -Z unstable-options\n \n #![warn(unused_crate_dependencies)]\n //~^ WARNING external crate `bar` unused in"}, {"sha": "19ea21576081e4bceb08ef37741136fa25018ba5", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -438,6 +438,9 @@ impl TestProps {\n \n                 if let Some(edition) = config.parse_edition(ln) {\n                     self.compile_flags.push(format!(\"--edition={}\", edition));\n+                    if edition == \"2021\" {\n+                        self.compile_flags.push(\"-Zunstable-options\".to_string());\n+                    }\n                 }\n \n                 config.parse_and_update_revisions(ln, &mut self.revisions);"}, {"sha": "e319de1ac1dfcb5b97e5aa038b581c16a904a588", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdc81bdc109dab9a71108201a0e8edf24efeafa/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=1cdc81bdc109dab9a71108201a0e8edf24efeafa", "patch": "@@ -1785,6 +1785,9 @@ impl<'test> TestCx<'test> {\n                 get_lib_name(&aux_path.trim_end_matches(\".rs\").replace('-', \"_\"), is_dylib);\n             rustc.arg(\"--extern\").arg(format!(\"{}={}/{}\", aux_name, aux_dir.display(), lib_name));\n         }\n+        if !self.props.aux_crates.is_empty() {\n+            rustc.arg(\"-Zunstable-options\");\n+        }\n \n         aux_dir\n     }"}]}