{"sha": "8c7d9f609212d4525cc05e2d1d4955425d78f7d8", "node_id": "C_kwDOAAsO6NoAKDhjN2Q5ZjYwOTIxMmQ0NTI1Y2MwNWUyZDFkNDk1NTQyNWQ3OGY3ZDg", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-06-28T09:29:07Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-06-28T09:29:07Z"}, "message": "fix ice for associated constant generics", "tree": {"sha": "cd77d9146c7f06e5ccff6753f4f8ef1e66b386e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd77d9146c7f06e5ccff6753f4f8ef1e66b386e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c7d9f609212d4525cc05e2d1d4955425d78f7d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c7d9f609212d4525cc05e2d1d4955425d78f7d8", "html_url": "https://github.com/rust-lang/rust/commit/8c7d9f609212d4525cc05e2d1d4955425d78f7d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c7d9f609212d4525cc05e2d1d4955425d78f7d8/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d40f24e956a698e47a209541031c4045acc5a684", "url": "https://api.github.com/repos/rust-lang/rust/commits/d40f24e956a698e47a209541031c4045acc5a684", "html_url": "https://github.com/rust-lang/rust/commit/d40f24e956a698e47a209541031c4045acc5a684"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "227127aed50d71b8feca779b1a71149b6709ef5b", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c7d9f609212d4525cc05e2d1d4955425d78f7d8/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c7d9f609212d4525cc05e2d1d4955425d78f7d8/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=8c7d9f609212d4525cc05e2d1d4955425d78f7d8", "patch": "@@ -956,7 +956,7 @@ impl SourceMap {\n     }\n \n     pub fn generate_fn_name_span(&self, span: Span) -> Option<Span> {\n-        let prev_span = self.span_extend_to_prev_str(span, \"fn\", true, true).unwrap_or(span);\n+        let prev_span = self.span_extend_to_prev_str(span, \"fn\", true, true)?;\n         if let Ok(snippet) = self.span_to_snippet(prev_span) {\n             debug!(\n                 \"generate_fn_name_span: span={:?}, prev_span={:?}, snippet={:?}\","}, {"sha": "780c50d6ffa19dbe8b802f970c94a45352be7f4a", "filename": "src/test/ui/generics/issue-98432.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8c7d9f609212d4525cc05e2d1d4955425d78f7d8/src%2Ftest%2Fui%2Fgenerics%2Fissue-98432.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c7d9f609212d4525cc05e2d1d4955425d78f7d8/src%2Ftest%2Fui%2Fgenerics%2Fissue-98432.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-98432.rs?ref=8c7d9f609212d4525cc05e2d1d4955425d78f7d8", "patch": "@@ -0,0 +1,9 @@\n+struct Struct<T>(T);\n+\n+impl<T> Struct<T> {\n+    const CONST: fn() = || {\n+        struct _Obligation where T:; //~ ERROR can't use generic parameters from outer function\n+    };\n+}\n+\n+fn main() {}"}, {"sha": "afa67b63bd9a16d0bb0b18d8b5c920f9c694b379", "filename": "src/test/ui/generics/issue-98432.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8c7d9f609212d4525cc05e2d1d4955425d78f7d8/src%2Ftest%2Fui%2Fgenerics%2Fissue-98432.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c7d9f609212d4525cc05e2d1d4955425d78f7d8/src%2Ftest%2Fui%2Fgenerics%2Fissue-98432.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-98432.stderr?ref=8c7d9f609212d4525cc05e2d1d4955425d78f7d8", "patch": "@@ -0,0 +1,14 @@\n+error[E0401]: can't use generic parameters from outer function\n+  --> $DIR/issue-98432.rs:5:34\n+   |\n+LL | impl<T> Struct<T> {\n+   |      - type parameter from outer function\n+LL |     const CONST: fn() = || {\n+LL |         struct _Obligation where T:;\n+   |                                  ^ use of generic parameter from outer function\n+   |\n+   = help: try using a local generic parameter instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0401`."}]}