{"sha": "1d4c767879913271bf01912f12c7f8f176c7755d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNGM3Njc4Nzk5MTMyNzFiZjAxOTEyZjEyYzdmOGYxNzZjNzc1NWQ=", "commit": {"author": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-10-05T19:21:40Z"}, "committer": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-10-05T19:21:40Z"}, "message": "WIP: This doesn't currently work but I also don't think it's the right abstraction", "tree": {"sha": "cfdc910fc9fc4437c52d79fc4cada661a30fd187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfdc910fc9fc4437c52d79fc4cada661a30fd187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d4c767879913271bf01912f12c7f8f176c7755d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d4c767879913271bf01912f12c7f8f176c7755d", "html_url": "https://github.com/rust-lang/rust/commit/1d4c767879913271bf01912f12c7f8f176c7755d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d4c767879913271bf01912f12c7f8f176c7755d/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91312a9ff98d1f82313c42a2387df49fbdf09ac6", "url": "https://api.github.com/repos/rust-lang/rust/commits/91312a9ff98d1f82313c42a2387df49fbdf09ac6", "html_url": "https://github.com/rust-lang/rust/commit/91312a9ff98d1f82313c42a2387df49fbdf09ac6"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "05c91fb8336bf096f1fc3491521c5933f14cc8d8", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1d4c767879913271bf01912f12c7f8f176c7755d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d4c767879913271bf01912f12c7f8f176c7755d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=1d4c767879913271bf01912f12c7f8f176c7755d", "patch": "@@ -9,7 +9,7 @@ use std::{\n };\n \n use relative_path::RelativePath;\n-use ra_editor::{self, FileSymbol, LineIndex, find_node_at_offset, LocalEdit};\n+use ra_editor::{self, FileSymbol, LineIndex, find_node_at_offset, LocalEdit, resolve_local_name};\n use ra_syntax::{\n     TextUnit, TextRange, SmolStr, File, AstNode,\n     SyntaxKind::*,\n@@ -197,7 +197,21 @@ impl AnalysisImpl {\n         let file = root.syntax(file_id);\n         let syntax = file.syntax();\n         if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(syntax, offset) {\n-            return self.index_resolve(name_ref, token);\n+\n+            // First try to resolve the symbol locally\n+            if let Some(name) = resolve_local_name(&file, offset, name_ref) {\n+                let vec: Vec<(FileId, FileSymbol)>::new();\n+                vec.push((file_id, FileSymbol {\n+                    name: name.text(),\n+                    node_range: name.syntax().range(),\n+                    kind : NAME\n+                }));\n+\n+                return vec;\n+            } else {\n+                // If that fails try the index based approach.\n+                return self.index_resolve(name_ref, token);\n+            }\n         }\n         if let Some(name) = find_node_at_offset::<ast::Name>(syntax, offset) {\n             if let Some(module) = name.syntax().parent().and_then(ast::Module::cast) {"}, {"sha": "fcb3e12e6f47a6b79fe5b70ae4af544e53c23ba9", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1d4c767879913271bf01912f12c7f8f176c7755d/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d4c767879913271bf01912f12c7f8f176c7755d/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=1d4c767879913271bf01912f12c7f8f176c7755d", "patch": "@@ -164,6 +164,14 @@ pub fn find_node_at_offset<'a, N: AstNode<'a>>(\n         .next()\n }\n \n+pub fn resolve_local_name<'a>(file: &'a File, offset: TextUnit, name_ref: ast::NameRef) -> Option<ast::Name<'a>> {\n+    let fn_def = find_node_at_offset::<ast::FnDef>(file.syntax(), offset)?;\n+    let scopes = scope::FnScopes::new(fn_def);\n+\n+    // TODO: This doesn't work because of scopes lifetime\n+    scope::resolve_local_name(name_ref, &scopes)\n+}\n+\n #[cfg(test)]\n mod tests {\n     use super::*;"}, {"sha": "7d6d530f787f023357014f12f62189599f0399f7", "filename": "crates/ra_editor/src/scope/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d4c767879913271bf01912f12c7f8f176c7755d/crates%2Fra_editor%2Fsrc%2Fscope%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d4c767879913271bf01912f12c7f8f176c7755d/crates%2Fra_editor%2Fsrc%2Fscope%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fscope%2Fmod.rs?ref=1d4c767879913271bf01912f12c7f8f176c7755d", "patch": "@@ -2,7 +2,7 @@ mod fn_scope;\n mod mod_scope;\n \n pub use self::{\n-    fn_scope::FnScopes,\n+    fn_scope::{FnScopes, resolve_local_name},\n     mod_scope::ModuleScope,\n };\n "}]}