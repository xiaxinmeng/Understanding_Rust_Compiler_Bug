{"sha": "138849a479b2404a55c0fd256d36b87a36dd8e4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzODg0OWE0NzliMjQwNGE1NWMwZmQyNTZkMzZiODdhMzZkZDhlNGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-02T14:12:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-02T14:12:37Z"}, "message": "Merge #9751\n\n9751: Make `LoadCargoConfig`, `fn load_workspace_at` & `fn load_workspace` public again r=matklad a=regexident\n\nThis [commit](https://github.com/rust-analyzer/rust-analyzer/commit/b24f816c0d8aaa37fbc0b33f90dd67afbf28adaa) which restricted the visibility of `LoadCargoConfig`, `fn load_workspace_at` & `fn load_workspace` unfortunately effectively rendered every crate/tool that uses rust-analyzer as a library dead in the water.\r\n\r\nOn of such tools is [cargo-modules](https://github.com/regexident/cargo-modules), a tool for generating tree/graph visualizations of one's Rust project and is powered by rust-analyzer as a library.\r\n\r\nFor more context see the PRs that introduced those types/functions and made them `pub`:\r\n\r\n- https://github.com/rust-analyzer/rust-analyzer/pull/7595\r\n- https://github.com/rust-analyzer/rust-analyzer/pull/7690\r\n\r\nIf kept as is rust-analyzer would effectively no longer be usable as a library.\r\n\r\ncc `@SomeoneToIgnore` \n\nCo-authored-by: Vincent Esche <regexident@gmail.com>", "tree": {"sha": "6d167417466cdc2dc3e26cd75a5556bbfb9f0a33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d167417466cdc2dc3e26cd75a5556bbfb9f0a33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/138849a479b2404a55c0fd256d36b87a36dd8e4a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhB/1VCRBK7hj4Ov3rIwAALBUIACtSuTzT7UOgY4vskTcXi82l\nVN7FZFKbjnOC2QMQ9d+x9y6ntwGi+zDNnWyolfDtdno1UAcXu2Tz7D3wytOgQzeF\nLkcPUM/mPCR0+F/wq/i+2PH9jauef7h6Gq2Fd1/wS0DsG+PaBr1cZlAs6fOpYBCL\nGtGCs68YEHBd/hY8mvNuCydGzAvq3SifmkPYtvlZiYKXJ1R5x/824Y8KdoNW3BuI\nWlixoh+rcdEV/EXEDxzNYLRfNKRJ0ecDR45xNSuVfhiNlfj6Qv+KDhppLqQ6njmc\n9JY/3YHAfR7lS3P2wFMk8RvLq8iu9rWngjnqUzYTtRZ4MMhQPOoOCKM8n38Kd2Y=\n=qBt7\n-----END PGP SIGNATURE-----\n", "payload": "tree 6d167417466cdc2dc3e26cd75a5556bbfb9f0a33\nparent 49e9e2124fa1de641ad80bae80fbb7d933203351\nparent fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627913557 +0000\ncommitter GitHub <noreply@github.com> 1627913557 +0000\n\nMerge #9751\n\n9751: Make `LoadCargoConfig`, `fn load_workspace_at` & `fn load_workspace` public again r=matklad a=regexident\n\nThis [commit](https://github.com/rust-analyzer/rust-analyzer/commit/b24f816c0d8aaa37fbc0b33f90dd67afbf28adaa) which restricted the visibility of `LoadCargoConfig`, `fn load_workspace_at` & `fn load_workspace` unfortunately effectively rendered every crate/tool that uses rust-analyzer as a library dead in the water.\r\n\r\nOn of such tools is [cargo-modules](https://github.com/regexident/cargo-modules), a tool for generating tree/graph visualizations of one's Rust project and is powered by rust-analyzer as a library.\r\n\r\nFor more context see the PRs that introduced those types/functions and made them `pub`:\r\n\r\n- https://github.com/rust-analyzer/rust-analyzer/pull/7595\r\n- https://github.com/rust-analyzer/rust-analyzer/pull/7690\r\n\r\nIf kept as is rust-analyzer would effectively no longer be usable as a library.\r\n\r\ncc `@SomeoneToIgnore` \n\nCo-authored-by: Vincent Esche <regexident@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/138849a479b2404a55c0fd256d36b87a36dd8e4a", "html_url": "https://github.com/rust-lang/rust/commit/138849a479b2404a55c0fd256d36b87a36dd8e4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/138849a479b2404a55c0fd256d36b87a36dd8e4a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49e9e2124fa1de641ad80bae80fbb7d933203351", "url": "https://api.github.com/repos/rust-lang/rust/commits/49e9e2124fa1de641ad80bae80fbb7d933203351", "html_url": "https://github.com/rust-lang/rust/commit/49e9e2124fa1de641ad80bae80fbb7d933203351"}, {"sha": "fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a", "html_url": "https://github.com/rust-lang/rust/commit/fee3507b71f977ad5ab7ef34eabab1ea4fb4bb6a"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "2f65a1dad07f2792591707bb607c81e1b8a2a29c", "filename": "crates/rust-analyzer/src/cli.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138849a479b2404a55c0fd256d36b87a36dd8e4a/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138849a479b2404a55c0fd256d36b87a36dd8e4a/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli.rs?ref=138849a479b2404a55c0fd256d36b87a36dd8e4a", "patch": "@@ -1,6 +1,6 @@\n //! Various batch processing tasks, intended primarily for debugging.\n \n-pub(crate) mod load_cargo;\n+pub mod load_cargo;\n mod analysis_stats;\n mod diagnostics;\n mod progress_report;"}, {"sha": "dee92911e3f470aa32d7ec51f718ca8a06be1ba9", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/138849a479b2404a55c0fd256d36b87a36dd8e4a/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138849a479b2404a55c0fd256d36b87a36dd8e4a/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=138849a479b2404a55c0fd256d36b87a36dd8e4a", "patch": "@@ -14,13 +14,17 @@ use vfs::{loader::Handle, AbsPath, AbsPathBuf};\n \n use crate::reload::{ProjectFolders, SourceRootConfig};\n \n-pub(crate) struct LoadCargoConfig {\n-    pub(crate) load_out_dirs_from_check: bool,\n-    pub(crate) with_proc_macro: bool,\n-    pub(crate) prefill_caches: bool,\n+// Note: Since this type is used by external tools that use rust-analyzer as a library\n+// what otherwise would be `pub(crate)` has to be `pub` here instead.\n+pub struct LoadCargoConfig {\n+    pub load_out_dirs_from_check: bool,\n+    pub with_proc_macro: bool,\n+    pub prefill_caches: bool,\n }\n \n-pub(crate) fn load_workspace_at(\n+// Note: Since this function is used by external tools that use rust-analyzer as a library\n+// what otherwise would be `pub(crate)` has to be `pub` here instead.\n+pub fn load_workspace_at(\n     root: &Path,\n     cargo_config: &CargoConfig,\n     load_config: &LoadCargoConfig,\n@@ -33,7 +37,12 @@ pub(crate) fn load_workspace_at(\n     load_workspace(workspace, cargo_config, load_config, progress)\n }\n \n-fn load_workspace(\n+// Note: Since this function is used by external tools that use rust-analyzer as a library\n+// what otherwise would be `pub(crate)` has to be `pub` here instead.\n+//\n+// The reason both, `load_workspace_at` and `load_workspace` are `pub` is that some of\n+// these tools need access to `ProjectWorkspace`, too, which `load_workspace_at` hides.\n+pub fn load_workspace(\n     mut ws: ProjectWorkspace,\n     cargo_config: &CargoConfig,\n     load_config: &LoadCargoConfig,"}]}