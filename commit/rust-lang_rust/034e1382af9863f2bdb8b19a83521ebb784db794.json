{"sha": "034e1382af9863f2bdb8b19a83521ebb784db794", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNGUxMzgyYWY5ODYzZjJiZGI4YjE5YTgzNTIxZWJiNzg0ZGI3OTQ=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-21T22:48:39Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-22T14:47:34Z"}, "message": "cell: Remove Freeze / NoFreeze", "tree": {"sha": "85e0c3336147c8176350127ec472a20da8c075f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85e0c3336147c8176350127ec472a20da8c075f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/034e1382af9863f2bdb8b19a83521ebb784db794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/034e1382af9863f2bdb8b19a83521ebb784db794", "html_url": "https://github.com/rust-lang/rust/commit/034e1382af9863f2bdb8b19a83521ebb784db794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/034e1382af9863f2bdb8b19a83521ebb784db794/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16e07602f9281a846f5142f8cd6d8f578bcbcf37", "url": "https://api.github.com/repos/rust-lang/rust/commits/16e07602f9281a846f5142f8cd6d8f578bcbcf37", "html_url": "https://github.com/rust-lang/rust/commit/16e07602f9281a846f5142f8cd6d8f578bcbcf37"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "d8012b9a80c4314fea33df34c9a9768a83d53887", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/034e1382af9863f2bdb8b19a83521ebb784db794/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/034e1382af9863f2bdb8b19a83521ebb784db794/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=034e1382af9863f2bdb8b19a83521ebb784db794", "patch": "@@ -22,17 +22,15 @@ use ty::Unsafe;\n /// A mutable memory location that admits only `Pod` data.\n pub struct Cell<T> {\n     priv value: Unsafe<T>,\n-    priv marker1: marker::NoFreeze,\n-    priv marker2: marker::NoShare,\n+    priv noshare: marker::NoShare,\n }\n \n impl<T:Pod> Cell<T> {\n     /// Creates a new `Cell` containing the given value.\n     pub fn new(value: T) -> Cell<T> {\n         Cell {\n             value: Unsafe::new(value),\n-            marker1: marker::NoFreeze,\n-            marker2: marker::NoShare,\n+            noshare: marker::NoShare,\n         }\n     }\n \n@@ -73,9 +71,8 @@ impl<T: fmt::Show> fmt::Show for Cell<T> {\n pub struct RefCell<T> {\n     priv value: Unsafe<T>,\n     priv borrow: BorrowFlag,\n-    priv marker1: marker::NoFreeze,\n-    priv marker2: marker::NoPod,\n-    priv marker3: marker::NoShare,\n+    priv nopod: marker::NoPod,\n+    priv noshare: marker::NoShare,\n }\n \n // Values [1, MAX-1] represent the number of `Ref` active\n@@ -88,10 +85,9 @@ impl<T> RefCell<T> {\n     /// Create a new `RefCell` containing `value`\n     pub fn new(value: T) -> RefCell<T> {\n         RefCell {\n-            marker1: marker::NoFreeze,\n-            marker2: marker::NoPod,\n-            marker3: marker::NoShare,\n             value: Unsafe::new(value),\n+            nopod: marker::NoPod,\n+            noshare: marker::NoShare,\n             borrow: UNUSED,\n         }\n     }"}]}