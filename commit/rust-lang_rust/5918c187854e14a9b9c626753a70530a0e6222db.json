{"sha": "5918c187854e14a9b9c626753a70530a0e6222db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MThjMTg3ODU0ZTE0YTliOWM2MjY3NTNhNzA1MzBhMGU2MjIyZGI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-01-09T22:19:20Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-01-09T22:19:20Z"}, "message": "Tweak timers", "tree": {"sha": "4daedb509c510ff4a0e93032ea10be10c7cc8571", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4daedb509c510ff4a0e93032ea10be10c7cc8571"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5918c187854e14a9b9c626753a70530a0e6222db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5918c187854e14a9b9c626753a70530a0e6222db", "html_url": "https://github.com/rust-lang/rust/commit/5918c187854e14a9b9c626753a70530a0e6222db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5918c187854e14a9b9c626753a70530a0e6222db/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b650e91cf40500b60475c17ff289e1db761d7836", "url": "https://api.github.com/repos/rust-lang/rust/commits/b650e91cf40500b60475c17ff289e1db761d7836", "html_url": "https://github.com/rust-lang/rust/commit/b650e91cf40500b60475c17ff289e1db761d7836"}], "stats": {"total": 46, "additions": 18, "deletions": 28}, "files": [{"sha": "f0724b4bc0c770ea8b2969208b0877b5e876ccbf", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5918c187854e14a9b9c626753a70530a0e6222db/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5918c187854e14a9b9c626753a70530a0e6222db/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=5918c187854e14a9b9c626753a70530a0e6222db", "patch": "@@ -268,7 +268,7 @@ pub fn lower_crate<'a, 'hir>(\n     // incr. comp. yet.\n     dep_graph.assert_ignored();\n \n-    let _prof_timer = sess.prof.generic_activity(\"hir_lowering\");\n+    let _prof_timer = sess.prof.verbose_generic_activity(\"hir_lowering\");\n \n     LoweringContext {\n         crate_root: sess.parse_sess.injected_crate_name.try_get().copied(),"}, {"sha": "0cc74060a7df8c58eacbbbecab518f4ad82a19ea", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5918c187854e14a9b9c626753a70530a0e6222db/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5918c187854e14a9b9c626753a70530a0e6222db/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=5918c187854e14a9b9c626753a70530a0e6222db", "patch": "@@ -409,7 +409,6 @@ pub fn run_compiler(\n                 sess.code_stats.print_type_sizes();\n             }\n \n-            let _timer = sess.timer(\"query_linker\");\n             let linker = queries.linker()?;\n             Ok(Some(linker))\n         })?;"}, {"sha": "277bdf914085dfb10d380c501977f1b7126af8a6", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 17, "deletions": 25, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5918c187854e14a9b9c626753a70530a0e6222db/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5918c187854e14a9b9c626753a70530a0e6222db/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=5918c187854e14a9b9c626753a70530a0e6222db", "patch": "@@ -163,22 +163,19 @@ pub fn register_plugins<'a>(\n         )\n     });\n \n-    let (krate, features) = sess.time(\"compute_features\", || {\n-        rustc_expand::config::features(\n-            krate,\n-            &sess.parse_sess,\n-            sess.edition(),\n-            &sess.opts.debugging_opts.allow_features,\n-        )\n-    });\n+    let (krate, features) = rustc_expand::config::features(\n+        krate,\n+        &sess.parse_sess,\n+        sess.edition(),\n+        &sess.opts.debugging_opts.allow_features,\n+    );\n     // these need to be set \"early\" so that expansion sees `quote` if enabled.\n     sess.init_features(features);\n \n     let crate_types = util::collect_crate_types(sess, &krate.attrs);\n     sess.crate_types.set(crate_types);\n \n-    let disambiguator =\n-        sess.time(\"compute_crate_disambiguator\", || util::compute_crate_disambiguator(sess));\n+    let disambiguator = util::compute_crate_disambiguator(sess);\n     sess.crate_disambiguator.set(disambiguator);\n     rustc_incremental::prepare_session_directory(sess, &crate_name, disambiguator);\n \n@@ -726,23 +723,18 @@ pub fn create_global_ctxt<'tcx>(\n \n     let query_result_on_disk_cache = rustc_incremental::load_query_result_cache(sess);\n \n-    let codegen_backend = sess.time(\"load_codegen_backend\", || compiler.codegen_backend());\n+    let codegen_backend = compiler.codegen_backend();\n+    let mut local_providers = ty::query::Providers::default();\n+    default_provide(&mut local_providers);\n+    codegen_backend.provide(&mut local_providers);\n \n-    let (local_providers, extern_providers) = sess.time(\"load_codegen_backend\", || {\n-        let mut local_providers = ty::query::Providers::default();\n-        default_provide(&mut local_providers);\n-        codegen_backend.provide(&mut local_providers);\n+    let mut extern_providers = local_providers;\n+    default_provide_extern(&mut extern_providers);\n+    codegen_backend.provide_extern(&mut extern_providers);\n \n-        let mut extern_providers = local_providers;\n-        default_provide_extern(&mut extern_providers);\n-        codegen_backend.provide_extern(&mut extern_providers);\n-\n-        if let Some(callback) = compiler.override_queries {\n-            callback(sess, &mut local_providers, &mut extern_providers);\n-        }\n-\n-        (local_providers, extern_providers)\n-    });\n+    if let Some(callback) = compiler.override_queries {\n+        callback(sess, &mut local_providers, &mut extern_providers);\n+    }\n \n     let gcx = sess.time(\"setup_global_ctxt\", || {\n         global_ctxt.init_locking(|| {"}, {"sha": "7de1c36ce4b2e838fc8d1bd9d376f9bc38a340b2", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5918c187854e14a9b9c626753a70530a0e6222db/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5918c187854e14a9b9c626753a70530a0e6222db/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=5918c187854e14a9b9c626753a70530a0e6222db", "patch": "@@ -158,7 +158,6 @@ impl<'tcx> Queries<'tcx> {\n             Ok(match self.compiler.crate_name {\n                 Some(ref crate_name) => crate_name.clone(),\n                 None => {\n-                    let _timer = self.session().timer(\"crate_name\");\n                     let parse_result = self.parse()?;\n                     let krate = parse_result.peek();\n                     rustc_codegen_utils::link::find_crate_name("}]}