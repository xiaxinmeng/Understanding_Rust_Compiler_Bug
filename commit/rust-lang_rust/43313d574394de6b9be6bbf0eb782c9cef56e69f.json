{"sha": "43313d574394de6b9be6bbf0eb782c9cef56e69f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMzEzZDU3NDM5NGRlNmI5YmU2YmJmMGViNzgyYzljZWY1NmU2OWY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-09T13:46:32Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-10T08:08:25Z"}, "message": "Remove an outdated comment", "tree": {"sha": "58b39002ce719e941deca2688b492e66f5bbbb67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58b39002ce719e941deca2688b492e66f5bbbb67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43313d574394de6b9be6bbf0eb782c9cef56e69f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43313d574394de6b9be6bbf0eb782c9cef56e69f", "html_url": "https://github.com/rust-lang/rust/commit/43313d574394de6b9be6bbf0eb782c9cef56e69f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43313d574394de6b9be6bbf0eb782c9cef56e69f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "050146f7f0d6ba4c0241a6fd8fa5d3fd67766e45", "url": "https://api.github.com/repos/rust-lang/rust/commits/050146f7f0d6ba4c0241a6fd8fa5d3fd67766e45", "html_url": "https://github.com/rust-lang/rust/commit/050146f7f0d6ba4c0241a6fd8fa5d3fd67766e45"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "b37eff3f40626a44691236aebd04761982d09822", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/43313d574394de6b9be6bbf0eb782c9cef56e69f/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43313d574394de6b9be6bbf0eb782c9cef56e69f/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=43313d574394de6b9be6bbf0eb782c9cef56e69f", "patch": "@@ -467,7 +467,6 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             local => {\n                 // Do not use the layout passed in as argument if the base we are looking at\n                 // here is not the entire place.\n-                // FIXME use place_projection.is_empty() when is available\n                 let layout = if place.projection.is_empty() { layout } else { None };\n \n                 self.access_local(self.frame(), local, layout)?"}]}