{"sha": "e381143a6b1c5c11f7a3e08fe7c820b74c70b756", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzODExNDNhNmIxYzVjMTFmN2EzZTA4ZmU3YzgyMGI3NGM3MGI3NTY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-11-27T22:43:22Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-11-27T23:09:48Z"}, "message": "More borrowkind fixes", "tree": {"sha": "d6c4d48a3c03465c060f1ad3ea3de79d396d2a46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6c4d48a3c03465c060f1ad3ea3de79d396d2a46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e381143a6b1c5c11f7a3e08fe7c820b74c70b756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e381143a6b1c5c11f7a3e08fe7c820b74c70b756", "html_url": "https://github.com/rust-lang/rust/commit/e381143a6b1c5c11f7a3e08fe7c820b74c70b756", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e381143a6b1c5c11f7a3e08fe7c820b74c70b756/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3430bc1bc5bdc24c101c17d0bd0822c7b57d43b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3430bc1bc5bdc24c101c17d0bd0822c7b57d43b9", "html_url": "https://github.com/rust-lang/rust/commit/3430bc1bc5bdc24c101c17d0bd0822c7b57d43b9"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "0f0323c13aa1e3565330494e1aa14e9fe11c53e3", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e381143a6b1c5c11f7a3e08fe7c820b74c70b756/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e381143a6b1c5c11f7a3e08fe7c820b74c70b756/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=e381143a6b1c5c11f7a3e08fe7c820b74c70b756", "patch": "@@ -674,7 +674,7 @@ fn never_loop_expr(expr: &Expr, main_loop_id: HirId) -> NeverLoopResult {\n         | ExprKind::Cast(ref e, _)\n         | ExprKind::Type(ref e, _)\n         | ExprKind::Field(ref e, _)\n-        | ExprKind::AddrOf(BorrowKind::Ref, _, ref e)\n+        | ExprKind::AddrOf(_, _, ref e)\n         | ExprKind::Struct(_, _, Some(ref e))\n         | ExprKind::Repeat(ref e, _)\n         | ExprKind::DropTemps(ref e) => never_loop_expr(e, main_loop_id),"}, {"sha": "c5d0706959f82b84b93d1f82b259d785601f169d", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e381143a6b1c5c11f7a3e08fe7c820b74c70b756/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e381143a6b1c5c11f7a3e08fe7c820b74c70b756/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=e381143a6b1c5c11f7a3e08fe7c820b74c70b756", "patch": "@@ -4,7 +4,7 @@\n use crate::utils::{get_attr, higher};\n use rustc::hir;\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n-use rustc::hir::{BindingAnnotation, Block, BorrowKind, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n+use rustc::hir::{BindingAnnotation, Block, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::session::Session;\n use rustc::{declare_lint_pass, declare_tool_lint};\n@@ -425,11 +425,11 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                 self.current = path_pat;\n                 self.print_qpath(path);\n             },\n-            ExprKind::AddrOf(BorrowKind::Ref, mutability, ref inner) => {\n+            ExprKind::AddrOf(kind, mutability, ref inner) => {\n                 let inner_pat = self.next(\"inner\");\n                 println!(\n-                    \"AddrOf(BorrowKind::Ref, Mutability::{:?}, ref {}) = {};\",\n-                    mutability, inner_pat, current\n+                    \"AddrOf(BorrowKind::{:?}, Mutability::{:?}, ref {}) = {};\",\n+                    kind, mutability, inner_pat, current\n                 );\n                 self.current = inner_pat;\n                 self.visit_expr(inner);"}]}