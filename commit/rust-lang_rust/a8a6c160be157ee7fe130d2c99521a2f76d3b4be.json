{"sha": "a8a6c160be157ee7fe130d2c99521a2f76d3b4be", "node_id": "C_kwDOAAsO6NoAKGE4YTZjMTYwYmUxNTdlZTdmZTEzMGQyYzk5NTIxYTJmNzZkM2I0YmU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-03T16:10:15Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-03T16:10:15Z"}, "message": "Use an empty expander for ignored non-attribute proc-macros", "tree": {"sha": "0446aa2c8b1d0ccf20b806fa04966c604a0f9179", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0446aa2c8b1d0ccf20b806fa04966c604a0f9179"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8a6c160be157ee7fe130d2c99521a2f76d3b4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8a6c160be157ee7fe130d2c99521a2f76d3b4be", "html_url": "https://github.com/rust-lang/rust/commit/a8a6c160be157ee7fe130d2c99521a2f76d3b4be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8a6c160be157ee7fe130d2c99521a2f76d3b4be/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec3586eab943d7c6c83d211f629a691fc8c14603", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3586eab943d7c6c83d211f629a691fc8c14603", "html_url": "https://github.com/rust-lang/rust/commit/ec3586eab943d7c6c83d211f629a691fc8c14603"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "9a9a9dd4d84c9028273994434d3ac4553f039b6f", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a8a6c160be157ee7fe130d2c99521a2f76d3b4be/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a6c160be157ee7fe130d2c99521a2f76d3b4be/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=a8a6c160be157ee7fe130d2c99521a2f76d3b4be", "patch": "@@ -621,7 +621,10 @@ pub(crate) fn load_proc_macro(\n         };\n         let expander: Arc<dyn ProcMacroExpander> =\n             if dummy_replace.iter().any(|replace| &**replace == name) {\n-                Arc::new(DummyExpander)\n+                match kind {\n+                    ProcMacroKind::Attr => Arc::new(IdentityExpander),\n+                    _ => Arc::new(EmptyExpander),\n+                }\n             } else {\n                 Arc::new(Expander(expander))\n             };\n@@ -647,11 +650,11 @@ pub(crate) fn load_proc_macro(\n         }\n     }\n \n-    /// Dummy identity expander, used for proc-macros that are deliberately ignored by the user.\n+    /// Dummy identity expander, used for attribute proc-macros that are deliberately ignored by the user.\n     #[derive(Debug)]\n-    struct DummyExpander;\n+    struct IdentityExpander;\n \n-    impl ProcMacroExpander for DummyExpander {\n+    impl ProcMacroExpander for IdentityExpander {\n         fn expand(\n             &self,\n             subtree: &tt::Subtree,\n@@ -661,6 +664,21 @@ pub(crate) fn load_proc_macro(\n             Ok(subtree.clone())\n         }\n     }\n+\n+    /// Empty expander, used for proc-macros that are deliberately ignored by the user.\n+    #[derive(Debug)]\n+    struct EmptyExpander;\n+\n+    impl ProcMacroExpander for EmptyExpander {\n+        fn expand(\n+            &self,\n+            _: &tt::Subtree,\n+            _: Option<&tt::Subtree>,\n+            _: &Env,\n+        ) -> Result<tt::Subtree, ProcMacroExpansionError> {\n+            Ok(tt::Subtree::default())\n+        }\n+    }\n }\n \n pub(crate) fn should_refresh_for_change(path: &AbsPath, change_kind: ChangeKind) -> bool {"}]}