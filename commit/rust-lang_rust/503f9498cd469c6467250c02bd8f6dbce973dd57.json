{"sha": "503f9498cd469c6467250c02bd8f6dbce973dd57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwM2Y5NDk4Y2Q0NjljNjQ2NzI1MGMwMmJkOGY2ZGJjZTk3M2RkNTc=", "commit": {"author": {"name": "Veetaha", "email": "veetaha2@gmail.com", "date": "2020-06-28T22:18:50Z"}, "committer": {"name": "Veetaha", "email": "veetaha2@gmail.com", "date": "2020-06-28T22:18:50Z"}, "message": "Follow matklad suggestions\n\n- Move vis_offset() to utils.rs\n- Shorten explicit ra_syntax::ast -> ast\n- Undo refactoring exhaustive pattern to non-exhaustive", "tree": {"sha": "a4809da64326fca4533fa08c2beeb01fb04d160c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4809da64326fca4533fa08c2beeb01fb04d160c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/503f9498cd469c6467250c02bd8f6dbce973dd57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/503f9498cd469c6467250c02bd8f6dbce973dd57", "html_url": "https://github.com/rust-lang/rust/commit/503f9498cd469c6467250c02bd8f6dbce973dd57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/503f9498cd469c6467250c02bd8f6dbce973dd57/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e75e2ae5b6b6b1364368ceb3d4081b6508b2f001", "url": "https://api.github.com/repos/rust-lang/rust/commits/e75e2ae5b6b6b1364368ceb3d4081b6508b2f001", "html_url": "https://github.com/rust-lang/rust/commit/e75e2ae5b6b6b1364368ceb3d4081b6508b2f001"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "237adbc7b37ae4bb12a58437e57fe21aff849d8b", "filename": "crates/ra_assists/src/handlers/change_visibility.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs?ref=503f9498cd469c6467250c02bd8f6dbce973dd57", "patch": "@@ -9,7 +9,7 @@ use ra_syntax::{\n };\n use test_utils::mark;\n \n-use crate::{AssistContext, AssistId, Assists};\n+use crate::{utils::vis_offset, AssistContext, AssistId, Assists};\n \n // Assist: change_visibility\n //\n@@ -70,13 +70,6 @@ fn add_vis(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     })\n }\n \n-fn vis_offset(node: &SyntaxNode) -> TextSize {\n-    node.children_with_tokens()\n-        .find(|it| !matches!(it.kind(), WHITESPACE | COMMENT | ATTR))\n-        .map(|it| it.text_range().start())\n-        .unwrap_or_else(|| node.text_range().start())\n-}\n-\n fn change_vis(acc: &mut Assists, vis: ast::Visibility) -> Option<()> {\n     if vis.syntax().text() == \"pub\" {\n         let target = vis.syntax().text_range();"}, {"sha": "468f9a77fb4b33ef2b20581e352e4ac196242770", "filename": "crates/ra_assists/src/handlers/fix_visibility.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs?ref=503f9498cd469c6467250c02bd8f6dbce973dd57", "patch": "@@ -6,7 +6,7 @@ use ra_syntax::{\n     SyntaxNode, TextRange, TextSize,\n };\n \n-use crate::{AssistContext, AssistId, Assists};\n+use crate::{utils::vis_offset, AssistContext, AssistId, Assists};\n \n // FIXME: this really should be a fix for diagnostic, rather than an assist.\n \n@@ -177,13 +177,6 @@ fn target_data_for_def(\n     Some((offset, target, target_file, target_name))\n }\n \n-fn vis_offset(node: &SyntaxNode) -> TextSize {\n-    node.children_with_tokens()\n-        .find(|it| !matches!(it.kind(), WHITESPACE | COMMENT | ATTR))\n-        .map(|it| it.text_range().start())\n-        .unwrap_or_else(|| node.text_range().start())\n-}\n-\n #[cfg(test)]\n mod tests {\n     use crate::tests::{check_assist, check_assist_not_applicable};"}, {"sha": "90ce66378f26dc0caa31aa602f802e908182b0cf", "filename": "crates/ra_assists/src/handlers/merge_match_arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs?ref=503f9498cd469c6467250c02bd8f6dbce973dd57", "patch": "@@ -81,7 +81,7 @@ pub(crate) fn merge_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option\n }\n \n fn contains_placeholder(a: &ast::MatchArm) -> bool {\n-    matches!(a.pat(), Some(ra_syntax::ast::Pat::PlaceholderPat(..)))\n+    matches!(a.pat(), Some(ast::Pat::PlaceholderPat(..)))\n }\n \n #[cfg(test)]"}, {"sha": "02de902d6ed4f1b1459ccbd3fef73964477d43ba", "filename": "crates/ra_assists/src/utils.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils.rs?ref=503f9498cd469c6467250c02bd8f6dbce973dd57", "patch": "@@ -7,7 +7,9 @@ use hir::{Adt, Crate, Enum, ScopeDef, Semantics, Trait, Type};\n use ra_ide_db::RootDatabase;\n use ra_syntax::{\n     ast::{self, make, NameOwner},\n-    AstNode, SyntaxNode, T,\n+    AstNode,\n+    SyntaxKind::*,\n+    SyntaxNode, TextSize, T,\n };\n use rustc_hash::FxHashSet;\n \n@@ -120,6 +122,13 @@ pub(crate) fn resolve_target_trait(\n     }\n }\n \n+pub(crate) fn vis_offset(node: &SyntaxNode) -> TextSize {\n+    node.children_with_tokens()\n+        .find(|it| !matches!(it.kind(), WHITESPACE | COMMENT | ATTR))\n+        .map(|it| it.text_range().start())\n+        .unwrap_or_else(|| node.text_range().start())\n+}\n+\n pub(crate) fn invert_boolean_expression(expr: ast::Expr) -> ast::Expr {\n     if let Some(expr) = invert_special_case(&expr) {\n         return expr;"}, {"sha": "b279bdeef6abc89a1b2494a28fedb3ed9cfaf72c", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503f9498cd469c6467250c02bd8f6dbce973dd57/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=503f9498cd469c6467250c02bd8f6dbce973dd57", "patch": "@@ -137,7 +137,10 @@ impl ModuleOrigin {\n     }\n \n     pub fn is_inline(&self) -> bool {\n-        matches!(self, ModuleOrigin::Inline { .. })\n+        match self {\n+            ModuleOrigin::Inline { .. } => true,\n+            ModuleOrigin::CrateRoot { .. } | ModuleOrigin::File { .. } => false,\n+        }\n     }\n \n     /// Returns a node which defines this module."}]}