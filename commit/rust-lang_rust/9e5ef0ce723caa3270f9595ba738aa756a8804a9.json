{"sha": "9e5ef0ce723caa3270f9595ba738aa756a8804a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNWVmMGNlNzIzY2FhMzI3MGY5NTk1YmE3MzhhYTc1NmE4ODA0YTk=", "commit": {"author": {"name": "Jorge Mederos Alvarado", "email": "jmederosalvarado@gmail.com", "date": "2021-04-21T19:48:57Z"}, "committer": {"name": "Jorge Mederos Alvarado", "email": "jmederosalvarado@gmail.com", "date": "2021-04-27T00:29:54Z"}, "message": "Add option to opt out from smaller inlay hints font size", "tree": {"sha": "11eb0ba8ce2d23277c740c954f01b83d6ad2d079", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11eb0ba8ce2d23277c740c954f01b83d6ad2d079"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e5ef0ce723caa3270f9595ba738aa756a8804a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5ef0ce723caa3270f9595ba738aa756a8804a9", "html_url": "https://github.com/rust-lang/rust/commit/9e5ef0ce723caa3270f9595ba738aa756a8804a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e5ef0ce723caa3270f9595ba738aa756a8804a9/comments", "author": {"login": "jmederosalvarado", "id": 46798594, "node_id": "MDQ6VXNlcjQ2Nzk4NTk0", "avatar_url": "https://avatars.githubusercontent.com/u/46798594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmederosalvarado", "html_url": "https://github.com/jmederosalvarado", "followers_url": "https://api.github.com/users/jmederosalvarado/followers", "following_url": "https://api.github.com/users/jmederosalvarado/following{/other_user}", "gists_url": "https://api.github.com/users/jmederosalvarado/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmederosalvarado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmederosalvarado/subscriptions", "organizations_url": "https://api.github.com/users/jmederosalvarado/orgs", "repos_url": "https://api.github.com/users/jmederosalvarado/repos", "events_url": "https://api.github.com/users/jmederosalvarado/events{/privacy}", "received_events_url": "https://api.github.com/users/jmederosalvarado/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jmederosalvarado", "id": 46798594, "node_id": "MDQ6VXNlcjQ2Nzk4NTk0", "avatar_url": "https://avatars.githubusercontent.com/u/46798594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmederosalvarado", "html_url": "https://github.com/jmederosalvarado", "followers_url": "https://api.github.com/users/jmederosalvarado/followers", "following_url": "https://api.github.com/users/jmederosalvarado/following{/other_user}", "gists_url": "https://api.github.com/users/jmederosalvarado/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmederosalvarado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmederosalvarado/subscriptions", "organizations_url": "https://api.github.com/users/jmederosalvarado/orgs", "repos_url": "https://api.github.com/users/jmederosalvarado/repos", "events_url": "https://api.github.com/users/jmederosalvarado/events{/privacy}", "received_events_url": "https://api.github.com/users/jmederosalvarado/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2ba0f48467aede5a051bb1e7ac0384d8f5b7e8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ba0f48467aede5a051bb1e7ac0384d8f5b7e8f", "html_url": "https://github.com/rust-lang/rust/commit/a2ba0f48467aede5a051bb1e7ac0384d8f5b7e8f"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "03f7d7cc3489011431e277013968bce12b7017e1", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e5ef0ce723caa3270f9595ba738aa756a8804a9/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9e5ef0ce723caa3270f9595ba738aa756a8804a9/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=9e5ef0ce723caa3270f9595ba738aa756a8804a9", "patch": "@@ -115,6 +115,7 @@ export class Config {\n             typeHints: this.get<boolean>(\"inlayHints.typeHints\"),\n             parameterHints: this.get<boolean>(\"inlayHints.parameterHints\"),\n             chainingHints: this.get<boolean>(\"inlayHints.chainingHints\"),\n+            smallerHints: this.get<boolean>(\"inlayHints.smallerHints\"),\n             maxLength: this.get<null | number>(\"inlayHints.maxLength\"),\n         };\n     }"}, {"sha": "aa7221454790b37c4c81d4b824274083efb132a6", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/9e5ef0ce723caa3270f9595ba738aa756a8804a9/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9e5ef0ce723caa3270f9595ba738aa756a8804a9/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=9e5ef0ce723caa3270f9595ba738aa756a8804a9", "patch": "@@ -5,6 +5,11 @@ import * as ra from './lsp_ext';\n import { Ctx, Disposable } from './ctx';\n import { sendRequestWithRetry, isRustDocument, RustDocument, RustEditor, sleep } from './util';\n \n+interface InlayHintStyle {\n+    decorationType: vscode.TextEditorDecorationType;\n+    toDecoration(hint: ra.InlayHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions;\n+};\n+\n \n export function activateInlayHints(ctx: Ctx) {\n     const maybeUpdater = {\n@@ -19,6 +24,7 @@ export function activateInlayHints(ctx: Ctx) {\n \n             await sleep(100);\n             if (this.updater) {\n+                this.updater.updateInlayHintsStyles();\n                 this.updater.syncCacheAndRenderHints();\n             } else {\n                 this.updater = new HintsUpdater(ctx);\n@@ -39,11 +45,7 @@ export function activateInlayHints(ctx: Ctx) {\n     maybeUpdater.onConfigChange().catch(console.error);\n }\n \n-const typeHints = createHintStyle(\"type\");\n-const paramHints = createHintStyle(\"parameter\");\n-const chainingHints = createHintStyle(\"chaining\");\n-\n-function createHintStyle(hintKind: \"type\" | \"parameter\" | \"chaining\") {\n+function createHintStyle(ctx: Ctx, hintKind: \"type\" | \"parameter\" | \"chaining\"): InlayHintStyle {\n     // U+200C is a zero-width non-joiner to prevent the editor from forming a ligature\n     // between code and type hints\n     const [pos, render] = ({\n@@ -52,6 +54,8 @@ function createHintStyle(hintKind: \"type\" | \"parameter\" | \"chaining\") {\n         chaining: [\"after\", (label: string) => `\\u{200c}: ${label}`],\n     } as const)[hintKind];\n \n+    const smallerHints = ctx.config.inlayHints.smallerHints;\n+\n     const fg = new vscode.ThemeColor(`rust_analyzer.inlayHints.foreground.${hintKind}Hints`);\n     const bg = new vscode.ThemeColor(`rust_analyzer.inlayHints.background.${hintKind}Hints`);\n     return {\n@@ -61,7 +65,7 @@ function createHintStyle(hintKind: \"type\" | \"parameter\" | \"chaining\") {\n                 backgroundColor: bg,\n                 fontStyle: \"normal\",\n                 fontWeight: \"normal\",\n-                textDecoration: \";font-size:smaller\",\n+                textDecoration: smallerHints ? \";font-size:smaller\" : \"none\",\n             },\n         }),\n         toDecoration(hint: ra.InlayHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions {\n@@ -76,6 +80,11 @@ function createHintStyle(hintKind: \"type\" | \"parameter\" | \"chaining\") {\n class HintsUpdater implements Disposable {\n     private sourceFiles = new Map<string, RustSourceFile>(); // map Uri -> RustSourceFile\n     private readonly disposables: Disposable[] = [];\n+    private inlayHintsStyles!: {\n+        typeHints: InlayHintStyle;\n+        paramHints: InlayHintStyle;\n+        chainingHints: InlayHintStyle;\n+    };\n \n     constructor(private readonly ctx: Ctx) {\n         vscode.window.onDidChangeVisibleTextEditors(\n@@ -100,6 +109,7 @@ class HintsUpdater implements Disposable {\n             }\n         ));\n \n+        this.updateInlayHintsStyles();\n         this.syncCacheAndRenderHints();\n     }\n \n@@ -114,6 +124,17 @@ class HintsUpdater implements Disposable {\n         this.syncCacheAndRenderHints();\n     }\n \n+    updateInlayHintsStyles() {\n+        this.inlayHintsStyles?.typeHints.decorationType.dispose();\n+        this.inlayHintsStyles?.paramHints.decorationType.dispose();\n+        this.inlayHintsStyles?.chainingHints.decorationType.dispose();\n+        this.inlayHintsStyles = {\n+            typeHints: createHintStyle(this.ctx, \"type\"),\n+            paramHints: createHintStyle(this.ctx, \"parameter\"),\n+            chainingHints: createHintStyle(this.ctx, \"chaining\"),\n+        };\n+    }\n+\n     syncCacheAndRenderHints() {\n         this.sourceFiles.forEach((file, uri) => this.fetchHints(file).then(hints => {\n             if (!hints) return;\n@@ -161,12 +182,14 @@ class HintsUpdater implements Disposable {\n     }\n \n     private renderDecorations(editor: RustEditor, decorations: InlaysDecorations) {\n+        const { typeHints, paramHints, chainingHints } = this.inlayHintsStyles;\n         editor.setDecorations(typeHints.decorationType, decorations.type);\n         editor.setDecorations(paramHints.decorationType, decorations.param);\n         editor.setDecorations(chainingHints.decorationType, decorations.chaining);\n     }\n \n     private hintsToDecorations(hints: ra.InlayHint[]): InlaysDecorations {\n+        const { typeHints, paramHints, chainingHints } = this.inlayHintsStyles;\n         const decorations: InlaysDecorations = { type: [], param: [], chaining: [] };\n         const conv = this.ctx.client.protocol2CodeConverter;\n "}]}