{"sha": "5db5eb0c55ff303db96390a4bf6a5365382cc357", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYjVlYjBjNTVmZjMwM2RiOTYzOTBhNGJmNmE1MzY1MzgyY2MzNTc=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-07-28T21:45:44Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-29T03:30:29Z"}, "message": "Null rust_task::cond on wakeup, add asserts and logging to block/wakeup.", "tree": {"sha": "2d0d68e4c4ee0cb285a13f899214ca47ec14d526", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d0d68e4c4ee0cb285a13f899214ca47ec14d526"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5db5eb0c55ff303db96390a4bf6a5365382cc357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5db5eb0c55ff303db96390a4bf6a5365382cc357", "html_url": "https://github.com/rust-lang/rust/commit/5db5eb0c55ff303db96390a4bf6a5365382cc357", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5db5eb0c55ff303db96390a4bf6a5365382cc357/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e327aa50931b8d081598a47dc8e085a2f52f851f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e327aa50931b8d081598a47dc8e085a2f52f851f", "html_url": "https://github.com/rust-lang/rust/commit/e327aa50931b8d081598a47dc8e085a2f52f851f"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "2bb0954196ef853d21987c65e6f4cf6adbf383e8", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5db5eb0c55ff303db96390a4bf6a5365382cc357/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5db5eb0c55ff303db96390a4bf6a5365382cc357/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=5db5eb0c55ff303db96390a4bf6a5365382cc357", "patch": "@@ -529,23 +529,29 @@ rust_task::transition(ptr_vec<rust_task> *src, ptr_vec<rust_task> *dst)\n void\n rust_task::block(rust_cond *on)\n {\n-    I(dom, on);\n+    log(rust_log::TASK, \"Blocking on 0x%\" PRIxPTR \", cond: 0x%\" PRIxPTR,\n+                         (uintptr_t) on, (uintptr_t) cond);\n+    A(dom, cond == NULL, \"Cannot block an already blocked task.\");\n+    A(dom, on != NULL, \"Cannot block on a NULL object.\");\n+\n     transition(&dom->running_tasks, &dom->blocked_tasks);\n-    dom->log(rust_log::TASK,\n-             \"task 0x%\" PRIxPTR \" blocking on 0x%\" PRIxPTR,\n-             (uintptr_t)this,\n-             (uintptr_t)on);\n     cond = on;\n }\n \n void\n rust_task::wakeup(rust_cond *from)\n {\n+    A(dom, cond != NULL, \"Cannot wake up unblocked task.\");\n+    log(rust_log::TASK, \"Blocked on 0x%\" PRIxPTR \" woken up on 0x%\" PRIxPTR,\n+                        (uintptr_t) cond, (uintptr_t) from);\n+    A(dom, cond == from, \"Cannot wake up blocked task on wrong condition.\");\n+\n     transition(&dom->blocked_tasks, &dom->running_tasks);\n     // TODO: Signaling every time the task is awaken is kind of silly,\n     // do this a nicer way.\n     dom->_progress.signal();\n     I(dom, cond == from);\n+    cond = NULL;\n }\n \n void"}]}