{"sha": "23dbdb46ee3557fbbe0514b3c574870ab92109b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZGJkYjQ2ZWUzNTU3ZmJiZTA1MTRiM2M1NzQ4NzBhYjkyMTA5YjE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-28T20:36:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-28T20:36:04Z"}, "message": "Rollup merge of #65877 - lzutao:iter-chain-once, r=Centril\n\ndoc: introduce `once` in `iter::chain` document\n\nI find it hard to find which one to use with `chain` when I only need to\nchain one value. Also [`once`][1] talks about `chain`.\n\n[1]: https://doc.rust-lang.org/nightly/std/iter/fn.once.html", "tree": {"sha": "dc16bbc50c3b774136433315e1589d564ce62112", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc16bbc50c3b774136433315e1589d564ce62112"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23dbdb46ee3557fbbe0514b3c574870ab92109b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdt1E0CRBK7hj4Ov3rIwAAdHIIAG2kSqALRRw4VTLi3lPW2OwA\nhCtR8OXt2LrEN8aP+XHe1DTixBNnR5WhlkAmjJLfDHZZB1hObgPIKF6vCy6VbLMc\nVqy3ejkhVV8guuzqNNV8BqgS1/sYycwJi8eaTWrwnJ1nRWhfl4hq5yRUGSpx3k4B\nEOOsRTWdbU3OUrPMA1i0AdJ7KI1FTUfRIbn85Xl9/u3JIq8qM3ZwzlB/4BFWmvja\nBx5nk0fzTIHOeK9x4qfIJWLSWB87tNM5kTL8hOt5WJwazMd4nu5oDLkYp+zGgCm6\nGL2XBO9bONGrt/0PuvuD+4Er4CPjzRgAsoovBrE0cx1IiDDqfGxdC+W80MLu2/M=\n=RDcB\n-----END PGP SIGNATURE-----\n", "payload": "tree dc16bbc50c3b774136433315e1589d564ce62112\nparent d88723203581d7826ebe7ff2bffec76b05c30420\nparent 9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1572294964 +0100\ncommitter GitHub <noreply@github.com> 1572294964 +0100\n\nRollup merge of #65877 - lzutao:iter-chain-once, r=Centril\n\ndoc: introduce `once` in `iter::chain` document\n\nI find it hard to find which one to use with `chain` when I only need to\nchain one value. Also [`once`][1] talks about `chain`.\n\n[1]: https://doc.rust-lang.org/nightly/std/iter/fn.once.html\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23dbdb46ee3557fbbe0514b3c574870ab92109b1", "html_url": "https://github.com/rust-lang/rust/commit/23dbdb46ee3557fbbe0514b3c574870ab92109b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23dbdb46ee3557fbbe0514b3c574870ab92109b1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d88723203581d7826ebe7ff2bffec76b05c30420", "url": "https://api.github.com/repos/rust-lang/rust/commits/d88723203581d7826ebe7ff2bffec76b05c30420", "html_url": "https://github.com/rust-lang/rust/commit/d88723203581d7826ebe7ff2bffec76b05c30420"}, {"sha": "9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f", "html_url": "https://github.com/rust-lang/rust/commit/9c4f60eecf1c9a0d90e6e2ea1e089fd77fd2c20f"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "7ffc8b3729cb490c1e149b97d5b98bc971df1ef9", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23dbdb46ee3557fbbe0514b3c574870ab92109b1/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23dbdb46ee3557fbbe0514b3c574870ab92109b1/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=23dbdb46ee3557fbbe0514b3c574870ab92109b1", "patch": "@@ -384,6 +384,9 @@ pub trait Iterator {\n     ///\n     /// In other words, it links two iterators together, in a chain. \ud83d\udd17\n     ///\n+    /// [`once`] is commonly used to adapt a single value into a chain of\n+    /// other kinds of iteration.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -408,9 +411,6 @@ pub trait Iterator {\n     /// [`Iterator`] itself. For example, slices (`&[T]`) implement\n     /// [`IntoIterator`], and so can be passed to `chain()` directly:\n     ///\n-    /// [`IntoIterator`]: trait.IntoIterator.html\n-    /// [`Iterator`]: trait.Iterator.html\n-    ///\n     /// ```\n     /// let s1 = &[1, 2, 3];\n     /// let s2 = &[4, 5, 6];\n@@ -425,6 +425,21 @@ pub trait Iterator {\n     /// assert_eq!(iter.next(), Some(&6));\n     /// assert_eq!(iter.next(), None);\n     /// ```\n+    ///\n+    /// If you work with Windows API, you may wish to convert [`OsStr`] to `Vec<u16>`:\n+    ///\n+    /// ```\n+    /// #[cfg(windows)]\n+    /// fn os_str_to_utf16(s: &std::ffi::OsStr) -> Vec<u16> {\n+    ///     use std::os::windows::ffi::OsStrExt;\n+    ///     s.encode_wide().chain(std::iter::once(0)).collect()\n+    /// }\n+    /// ```\n+    ///\n+    /// [`once`]: fn.once.html\n+    /// [`Iterator`]: trait.Iterator.html\n+    /// [`IntoIterator`]: trait.IntoIterator.html\n+    /// [`OsStr`]: ../../std/ffi/struct.OsStr.html\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn chain<U>(self, other: U) -> Chain<Self, U::IntoIter> where"}]}