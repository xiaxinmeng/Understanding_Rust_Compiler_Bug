{"sha": "4c8bc19ad2d5b9a51febf916a2a93b07da146385", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOGJjMTlhZDJkNWI5YTUxZmViZjkxNmEyYTkzYjA3ZGExNDYzODU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-01T06:25:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-01T06:47:52Z"}, "message": "rt: Refactor task failure to go through rust_task_fail\n\nThis is the place to but a breakpoint. We will raise SIGINT here\nto break into the debugger.", "tree": {"sha": "279186722b249a2736f754007497b9ff66fab813", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/279186722b249a2736f754007497b9ff66fab813"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c8bc19ad2d5b9a51febf916a2a93b07da146385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c8bc19ad2d5b9a51febf916a2a93b07da146385", "html_url": "https://github.com/rust-lang/rust/commit/4c8bc19ad2d5b9a51febf916a2a93b07da146385", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c8bc19ad2d5b9a51febf916a2a93b07da146385/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e47962f6a9fdbac2054c15fea8953c2338e8e115", "url": "https://api.github.com/repos/rust-lang/rust/commits/e47962f6a9fdbac2054c15fea8953c2338e8e115", "html_url": "https://github.com/rust-lang/rust/commit/e47962f6a9fdbac2054c15fea8953c2338e8e115"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "a5097dff4d0d3d7fb157d743a818e033954cf9d3", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4c8bc19ad2d5b9a51febf916a2a93b07da146385/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4c8bc19ad2d5b9a51febf916a2a93b07da146385/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=4c8bc19ad2d5b9a51febf916a2a93b07da146385", "patch": "@@ -75,6 +75,16 @@ rust_task::delete_this()\n     sched_loop->release_task(this);\n }\n \n+// All failure goes through me. Put your breakpoints here!\n+extern \"C\" void\n+rust_task_fail(rust_task *task,\n+               char const *expr,\n+               char const *file,\n+               size_t line) {\n+    assert(task != NULL);\n+    task->begin_failure(expr, file, line);\n+}\n+\n struct spawn_args {\n     rust_task *task;\n     spawn_fn f;\n@@ -264,6 +274,25 @@ bool rust_task_is_unwinding(rust_task *rt) {\n void\n rust_task::fail() {\n     // See note in ::kill() regarding who should call this.\n+    fail(NULL, NULL, 0);\n+}\n+\n+void\n+rust_task::fail(char const *expr, char const *file, size_t line) {\n+    rust_task_fail(this, expr, file, line);\n+}\n+\n+// Called only by rust_task_fail\n+void\n+rust_task::begin_failure(char const *expr, char const *file, size_t line) {\n+\n+    if (expr) {\n+        // FIXME: Change this message to be\n+        // 'task failed at ...'\n+        LOG_ERR(this, task, \"upcall fail '%s', %s:%\" PRIdPTR,\n+                expr, file, line);\n+    }\n+\n     DLOG(sched_loop, task, \"task %s @0x%\" PRIxPTR \" failing\", name, this);\n     backtrace();\n     unwinding = true;"}, {"sha": "4ad1347202417d4ec5e0995701d9088908c7dde7", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4c8bc19ad2d5b9a51febf916a2a93b07da146385/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/4c8bc19ad2d5b9a51febf916a2a93b07da146385/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=4c8bc19ad2d5b9a51febf916a2a93b07da146385", "patch": "@@ -97,6 +97,12 @@ struct task_notification {\n     task_result result; // task_result\n };\n \n+extern \"C\" void\n+rust_task_fail(rust_task *task,\n+               char const *expr,\n+               char const *file,\n+               size_t line);\n+\n struct\n rust_task : public kernel_owned<rust_task>, rust_cond\n {\n@@ -181,11 +187,19 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n                     rust_cond *cond, const char* cond_name);\n \n     bool must_fail_from_being_killed_unlocked();\n+    // Called by rust_task_fail to unwind on failure\n+    void begin_failure(char const *expr,\n+                       char const *file,\n+                       size_t line);\n \n     friend void task_start_wrapper(spawn_args *a);\n     friend void cleanup_task(cleanup_args *a);\n     friend void reset_stack_limit_on_c_stack(reset_args *a);\n     friend void new_stack_slow(new_stack_args *a);\n+    friend void rust_task_fail(rust_task *task,\n+                               char const *expr,\n+                               char const *file,\n+                               size_t line);\n \n public:\n \n@@ -231,6 +245,7 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     // Fail self, assuming caller-on-stack is this task.\n     void fail();\n+    void fail(char const *expr, char const *file, size_t line);\n     void conclude_failure();\n     void fail_parent();\n "}, {"sha": "21df231aee701804a8796bc2f59015f305e4f7de", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c8bc19ad2d5b9a51febf916a2a93b07da146385/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4c8bc19ad2d5b9a51febf916a2a93b07da146385/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=4c8bc19ad2d5b9a51febf916a2a93b07da146385", "patch": "@@ -116,9 +116,7 @@ extern \"C\" CDECL void\n upcall_s_fail(s_fail_args *args) {\n     rust_task *task = rust_get_current_task();\n     LOG_UPCALL_ENTRY(task);\n-    LOG_ERR(task, upcall, \"upcall fail '%s', %s:%\" PRIdPTR,\n-            args->expr, args->file, args->line);\n-    task->fail();\n+    task->fail(args->expr, args->file, args->line);\n }\n \n extern \"C\" CDECL void"}]}