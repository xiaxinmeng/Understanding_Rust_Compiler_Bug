{"sha": "195fc5a325c29042f6a8ce41a250cbfb87d8747d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NWZjNWEzMjVjMjkwNDJmNmE4Y2U0MWEyNTBjYmZiODdkODc0N2Q=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-06-15T22:55:11Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-06-15T22:56:24Z"}, "message": "rustdoc: Add stability notices to impl items\n\nAlso fixes missing stability notices on methods with no docs.", "tree": {"sha": "c0b27852cb0d0fe9072bd499dc9db74b12af6b7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0b27852cb0d0fe9072bd499dc9db74b12af6b7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/195fc5a325c29042f6a8ce41a250cbfb87d8747d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/195fc5a325c29042f6a8ce41a250cbfb87d8747d", "html_url": "https://github.com/rust-lang/rust/commit/195fc5a325c29042f6a8ce41a250cbfb87d8747d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/195fc5a325c29042f6a8ce41a250cbfb87d8747d/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2940eb54bd805dfe45fbf3313688246427eccbc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2940eb54bd805dfe45fbf3313688246427eccbc8", "html_url": "https://github.com/rust-lang/rust/commit/2940eb54bd805dfe45fbf3313688246427eccbc8"}], "stats": {"total": 175, "additions": 158, "deletions": 17}, "files": [{"sha": "3c78a99d5842967233f889bfa30fb2b3511b10de", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 30, "deletions": 17, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/195fc5a325c29042f6a8ce41a250cbfb87d8747d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/195fc5a325c29042f6a8ce41a250cbfb87d8747d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=195fc5a325c29042f6a8ce41a250cbfb87d8747d", "patch": "@@ -1658,12 +1658,8 @@ fn plain_summary_line(s: Option<&str>) -> String {\n }\n \n fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Result {\n-    for stability in short_stability(item, cx, true) {\n-        write!(w, \"<div class='stability'>{}</div>\", stability)?;\n-    }\n-    if let Some(s) = item.doc_value() {\n-        write!(w, \"<div class='docblock'>{}</div>\", Markdown(s))?;\n-    }\n+    document_stability(w, cx, item)?;\n+    document_full(w, item)?;\n     Ok(())\n }\n \n@@ -1680,6 +1676,20 @@ fn document_short(w: &mut fmt::Formatter, item: &clean::Item, link: AssocItemLin\n     Ok(())\n }\n \n+fn document_full(w: &mut fmt::Formatter, item: &clean::Item) -> fmt::Result {\n+    if let Some(s) = item.doc_value() {\n+        write!(w, \"<div class='docblock'>{}</div>\", Markdown(s))?;\n+    }\n+    Ok(())\n+}\n+\n+fn document_stability(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Result {\n+    for stability in short_stability(item, cx, true) {\n+        write!(w, \"<div class='stability'>{}</div>\", stability)?;\n+    }\n+    Ok(())\n+}\n+\n fn item_module(w: &mut fmt::Formatter, cx: &Context,\n                item: &clean::Item, items: &[clean::Item]) -> fmt::Result {\n     document(w, cx, item)?;\n@@ -2640,20 +2650,23 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n \n         if !is_static || render_static {\n             if !is_default_item {\n-\n-                if item.doc_value().is_some() {\n-                    document(w, cx, item)?;\n-                } else {\n-                    // In case the item isn't documented,\n-                    // provide short documentation from the trait\n-                    if let Some(t) = trait_ {\n-                        if let Some(it) = t.items.iter()\n-                                           .find(|i| i.name == item.name) {\n-                            document_short(w, it, link)?;\n-                        }\n+                if let Some(t) = trait_ {\n+                    let it = t.items.iter().find(|i| i.name == item.name).unwrap();\n+                    // We need the stability of the item from the trait because\n+                    // impls can't have a stability.\n+                    document_stability(w, cx, it)?;\n+                    if item.doc_value().is_some() {\n+                        document_full(w, item)?;\n+                    } else {\n+                        // In case the item isn't documented,\n+                        // provide short documentation from the trait.\n+                        document_short(w, it, link)?;\n                     }\n+                } else {\n+                    document(w, cx, item)?;\n                 }\n             } else {\n+                document_stability(w, cx, item)?;\n                 document_short(w, item, link)?;\n             }\n         }"}, {"sha": "bcf0645766b30993f996a3c547c6013272c29ae0", "filename": "src/test/rustdoc/deprecated-impls.rs", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/195fc5a325c29042f6a8ce41a250cbfb87d8747d/src%2Ftest%2Frustdoc%2Fdeprecated-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/195fc5a325c29042f6a8ce41a250cbfb87d8747d/src%2Ftest%2Frustdoc%2Fdeprecated-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdeprecated-impls.rs?ref=195fc5a325c29042f6a8ce41a250cbfb87d8747d", "patch": "@@ -0,0 +1,128 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/struct.Foo0.html\n+pub struct Foo0;\n+\n+impl Foo0 {\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.1: fn_with_doc'\n+    // @has - 'fn_with_doc short'\n+    // @has - 'fn_with_doc full'\n+    /// fn_with_doc short\n+    ///\n+    /// fn_with_doc full\n+    #[deprecated(since = \"1.0.1\", note = \"fn_with_doc\")]\n+    pub fn fn_with_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.2: fn_without_doc'\n+    #[deprecated(since = \"1.0.2\", note = \"fn_without_doc\")]\n+    pub fn fn_without_doc() {}\n+}\n+\n+pub trait Bar {\n+    /// fn_empty_with_doc short\n+    ///\n+    /// fn_empty_with_doc full\n+    #[deprecated(since = \"1.0.3\", note = \"fn_empty_with_doc\")]\n+    fn fn_empty_with_doc();\n+\n+    #[deprecated(since = \"1.0.4\", note = \"fn_empty_without_doc\")]\n+    fn fn_empty_without_doc();\n+\n+    /// fn_def_with_doc short\n+    ///\n+    /// fn_def_with_doc full\n+    #[deprecated(since = \"1.0.5\", note = \"fn_def_with_doc\")]\n+    fn fn_def_with_doc() {}\n+\n+    #[deprecated(since = \"1.0.6\", note = \"fn_def_without_doc\")]\n+    fn fn_def_without_doc() {}\n+\n+    /// fn_def_def_with_doc short\n+    ///\n+    /// fn_def_def_with_doc full\n+    #[deprecated(since = \"1.0.7\", note = \"fn_def_def_with_doc\")]\n+    fn fn_def_def_with_doc() {}\n+\n+    #[deprecated(since = \"1.0.8\", note = \"fn_def_def_without_doc\")]\n+    fn fn_def_def_without_doc() {}\n+}\n+\n+// @has foo/struct.Foo1.html\n+pub struct Foo1;\n+\n+impl Bar for Foo1 {\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.3: fn_empty_with_doc'\n+    // @has - 'fn_empty_with_doc_impl short'\n+    // @has - 'fn_empty_with_doc_impl full'\n+    /// fn_empty_with_doc_impl short\n+    ///\n+    /// fn_empty_with_doc_impl full\n+    fn fn_empty_with_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.4: fn_empty_without_doc'\n+    fn fn_empty_without_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.5: fn_def_with_doc'\n+    // @has - 'fn_def_with_doc_impl short'\n+    // @has - 'fn_def_with_doc_impl full'\n+    /// fn_def_with_doc_impl short\n+    ///\n+    /// fn_def_with_doc_impl full\n+    fn fn_def_with_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.6: fn_def_without_doc'\n+    fn fn_def_without_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.7: fn_def_def_with_doc'\n+    // @has - 'fn_def_def_with_doc short'\n+    // @!has - 'fn_def_def_with_doc full'\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.8: fn_def_def_without_doc'\n+}\n+\n+// @has foo/struct.Foo2.html\n+pub struct Foo2;\n+\n+impl Bar for Foo2 {\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.3: fn_empty_with_doc'\n+    // @has - 'fn_empty_with_doc short'\n+    // @!has - 'fn_empty_with_doc full'\n+    fn fn_empty_with_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.4: fn_empty_without_doc'\n+    // @has - 'fn_empty_without_doc_impl short'\n+    // @has - 'fn_empty_without_doc_impl full'\n+    /// fn_empty_without_doc_impl short\n+    ///\n+    /// fn_empty_without_doc_impl full\n+    fn fn_empty_without_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.5: fn_def_with_doc'\n+    // @has - 'fn_def_with_doc short'\n+    // @!has - 'fn_def_with full'\n+    fn fn_def_with_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.6: fn_def_without_doc'\n+    // @has - 'fn_def_without_doc_impl short'\n+    // @has - 'fn_def_without_doc_impl full'\n+    /// fn_def_without_doc_impl short\n+    ///\n+    /// fn_def_without_doc_impl full\n+    fn fn_def_without_doc() {}\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.7: fn_def_def_with_doc'\n+    // @has - 'fn_def_def_with_doc short'\n+    // @!has - 'fn_def_def_with_doc full'\n+\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.8: fn_def_def_without_doc'\n+}"}]}