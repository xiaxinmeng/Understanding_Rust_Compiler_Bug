{"sha": "5f91ad0e3300c36033bf409ceefb00480fecbed3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmOTFhZDBlMzMwMGMzNjAzM2JmNDA5Y2VlZmIwMDQ4MGZlY2JlZDM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-08-31T01:52:19Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-08-31T01:52:26Z"}, "message": "fuchsia: Fix default environment behavior when spawning", "tree": {"sha": "cd2960df66b896392993847455c5b2ffff3b32b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd2960df66b896392993847455c5b2ffff3b32b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f91ad0e3300c36033bf409ceefb00480fecbed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f91ad0e3300c36033bf409ceefb00480fecbed3", "html_url": "https://github.com/rust-lang/rust/commit/5f91ad0e3300c36033bf409ceefb00480fecbed3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f91ad0e3300c36033bf409ceefb00480fecbed3/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bfa2be4efa2d4649e8db7548f1980156d58017e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bfa2be4efa2d4649e8db7548f1980156d58017e", "html_url": "https://github.com/rust-lang/rust/commit/7bfa2be4efa2d4649e8db7548f1980156d58017e"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "fff9fc6b3bbc8b4e137a1318ddc1c96c535916be", "filename": "src/libstd/sys/unix/process/process_fuchsia.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5f91ad0e3300c36033bf409ceefb00480fecbed3/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f91ad0e3300c36033bf409ceefb00480fecbed3/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs?ref=5f91ad0e3300c36033bf409ceefb00480fecbed3", "patch": "@@ -48,8 +48,10 @@ impl Command {\n         use crate::sys::process::zircon::*;\n \n         let envp = match maybe_envp {\n-            Some(envp) => envp.as_ptr(),\n+            // None means to clone the current environment, which is done in the\n+            // flags below.\n             None => ptr::null(),\n+            Some(envp) => envp.as_ptr(),\n         };\n \n         let make_action = |local_io: &ChildStdio, target_fd| -> io::Result<fdio_spawn_action_t> {\n@@ -104,7 +106,8 @@ impl Command {\n         let mut process_handle: zx_handle_t = 0;\n         zx_cvt(fdio_spawn_etc(\n             ZX_HANDLE_INVALID,\n-            FDIO_SPAWN_CLONE_JOB | FDIO_SPAWN_CLONE_LDSVC | FDIO_SPAWN_CLONE_NAMESPACE,\n+            FDIO_SPAWN_CLONE_JOB | FDIO_SPAWN_CLONE_LDSVC | FDIO_SPAWN_CLONE_NAMESPACE\n+            | FDIO_SPAWN_CLONE_ENVIRON,  // this is ignored when envp is non-null\n             self.get_argv()[0], self.get_argv().as_ptr(), envp,\n             actions.len() as size_t, actions.as_ptr(),\n             &mut process_handle,"}]}