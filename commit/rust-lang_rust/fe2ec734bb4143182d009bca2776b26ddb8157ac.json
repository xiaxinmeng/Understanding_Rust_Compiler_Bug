{"sha": "fe2ec734bb4143182d009bca2776b26ddb8157ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMmVjNzM0YmI0MTQzMTgyZDAwOWJjYTI3NzZiMjZkZGI4MTU3YWM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-20T19:14:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-20T19:14:43Z"}, "message": "Rollup merge of #46092 - sfackler:ppid, r=alexcrichton\n\nAdd process::parent_id\n\nI have this as a Unix-only API since it seems like Windows doesn't have\na similar API.\n\nr? @alexcrichton", "tree": {"sha": "03ce6bf7f9a494084d908474caa82179b4eeaf62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03ce6bf7f9a494084d908474caa82179b4eeaf62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe2ec734bb4143182d009bca2776b26ddb8157ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe2ec734bb4143182d009bca2776b26ddb8157ac", "html_url": "https://github.com/rust-lang/rust/commit/fe2ec734bb4143182d009bca2776b26ddb8157ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe2ec734bb4143182d009bca2776b26ddb8157ac/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b1cf4d3c78185c3b00f952983a9066b42ca17aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1cf4d3c78185c3b00f952983a9066b42ca17aa", "html_url": "https://github.com/rust-lang/rust/commit/3b1cf4d3c78185c3b00f952983a9066b42ca17aa"}, {"sha": "1e42d5f2e1ab05f0f5d07f7c09644574c13e9a12", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e42d5f2e1ab05f0f5d07f7c09644574c13e9a12", "html_url": "https://github.com/rust-lang/rust/commit/1e42d5f2e1ab05f0f5d07f7c09644574c13e9a12"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "480765b77a02816f8f424423fb047439cae0428b", "filename": "src/libstd/sys/redox/os.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe2ec734bb4143182d009bca2776b26ddb8157ac/src%2Flibstd%2Fsys%2Fredox%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe2ec734bb4143182d009bca2776b26ddb8157ac/src%2Flibstd%2Fsys%2Fredox%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fos.rs?ref=fe2ec734bb4143182d009bca2776b26ddb8157ac", "patch": "@@ -213,3 +213,7 @@ pub fn exit(code: i32) -> ! {\n pub fn getpid() -> u32 {\n     syscall::getpid().unwrap() as u32\n }\n+\n+pub fn getppid() -> u32 {\n+    syscall::getppid().unwrap() as u32\n+}"}, {"sha": "60309bec6d4fcbffb11c0eec924ecb343be8bbb7", "filename": "src/libstd/sys/unix/ext/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe2ec734bb4143182d009bca2776b26ddb8157ac/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe2ec734bb4143182d009bca2776b26ddb8157ac/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=fe2ec734bb4143182d009bca2776b26ddb8157ac", "patch": "@@ -191,3 +191,9 @@ impl IntoRawFd for process::ChildStderr {\n         self.into_inner().into_fd().into_raw()\n     }\n }\n+\n+/// Returns the OS-assigned process identifier associated with this process's parent.\n+#[unstable(feature = \"unix_ppid\", issue = \"46104\")]\n+pub fn parent_id() -> u32 {\n+    ::sys::os::getppid()\n+}"}, {"sha": "7e965b4b4c5b2d73c41e58293651b264ec09c466", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe2ec734bb4143182d009bca2776b26ddb8157ac/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe2ec734bb4143182d009bca2776b26ddb8157ac/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=fe2ec734bb4143182d009bca2776b26ddb8157ac", "patch": "@@ -515,3 +515,7 @@ pub fn exit(code: i32) -> ! {\n pub fn getpid() -> u32 {\n     unsafe { libc::getpid() as u32 }\n }\n+\n+pub fn getppid() -> u32 {\n+    unsafe { libc::getppid() as u32 }\n+}"}]}