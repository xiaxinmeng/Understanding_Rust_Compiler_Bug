{"sha": "675c272dadc8cd7e529fda64904c87e8243fe94f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NWMyNzJkYWRjOGNkN2U1MjlmZGE2NDkwNGM4N2U4MjQzZmU5NGY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-30T18:19:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-30T18:21:01Z"}, "message": "rustc: Instantiate trait refs for automatically-derived implementations. Should fix check-fast. rs=bustage", "tree": {"sha": "2a17a8fa1f15c8344f525fb768e0ce822180a740", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a17a8fa1f15c8344f525fb768e0ce822180a740"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/675c272dadc8cd7e529fda64904c87e8243fe94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/675c272dadc8cd7e529fda64904c87e8243fe94f", "html_url": "https://github.com/rust-lang/rust/commit/675c272dadc8cd7e529fda64904c87e8243fe94f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/675c272dadc8cd7e529fda64904c87e8243fe94f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7872fa13eb561956455eefbb06a63411cb4ad14", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7872fa13eb561956455eefbb06a63411cb4ad14", "html_url": "https://github.com/rust-lang/rust/commit/b7872fa13eb561956455eefbb06a63411cb4ad14"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "07fc637a04933f60e33b78658edfa788534fa33b", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/675c272dadc8cd7e529fda64904c87e8243fe94f/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/675c272dadc8cd7e529fda64904c87e8243fe94f/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=675c272dadc8cd7e529fda64904c87e8243fe94f", "patch": "@@ -556,6 +556,9 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::Serializer,\n     }\n     let add_to_index = |copy ebml_w| add_to_index_(item, ebml_w, index);\n \n+    debug!(\"encoding info for item at %s\",\n+           syntax::codemap::span_to_str(item.span, ecx.tcx.sess.codemap));\n+\n     match item.node {\n       item_const(_, _) => {\n         add_to_index();\n@@ -738,7 +741,7 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::Serializer,\n             }\n         }\n         do opt_trait.iter() |associated_trait| {\n-           encode_trait_ref(ebml_w, ecx, *associated_trait)\n+           encode_trait_ref(ebml_w, ecx, *associated_trait);\n         }\n         encode_path(ecx, ebml_w, path, ast_map::path_name(item.ident));\n         ebml_w.end_tag();"}, {"sha": "ed0cd48504b5e4d8ee5783e0b92f003cf817f99b", "filename": "src/rustc/middle/typeck/collect.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/675c272dadc8cd7e529fda64904c87e8243fe94f/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/675c272dadc8cd7e529fda64904c87e8243fe94f/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=675c272dadc8cd7e529fda64904c87e8243fe94f", "patch": "@@ -522,10 +522,20 @@ fn convert(ccx: @crate_ctxt, it: @ast::item) {\n                            region_param: rp,\n                            ty: selfty});\n \n-        for ms_opt.each |ms| {\n-            let cms = convert_methods(ccx, *ms, rp, i_bounds);\n-            for trait_ref.each |t| {\n-                check_methods_against_trait(ccx, tps, rp, selfty, *t, cms);\n+        match ms_opt {\n+            Some(ref ms) => {\n+                let cms = convert_methods(ccx, *ms, rp, i_bounds);\n+                for trait_ref.each |t| {\n+                    check_methods_against_trait(ccx, tps, rp, selfty, *t,\n+                                                cms);\n+                }\n+            }\n+            None => {\n+                // We still need to instantiate the trait ref here so that\n+                // metadata encoding will find the type.\n+                for trait_ref.each |trait_ref| {\n+                    let _ = instantiate_trait_ref(ccx, *trait_ref, rp);\n+                }\n             }\n         }\n       }"}]}