{"sha": "3f1a186bd1fd74ad3b25bf5c642e86c8913a1149", "node_id": "C_kwDOAAsO6NoAKDNmMWExODZiZDFmZDc0YWQzYjI1YmY1YzY0MmU4NmM4OTEzYTExNDk", "commit": {"author": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-11-02T18:11:27Z"}, "committer": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-11-20T12:45:12Z"}, "message": "misnamed_getters: Trigger on unsafe with _unchecked", "tree": {"sha": "09bafa191548fa75f92d8fe423abadcdab7a3278", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09bafa191548fa75f92d8fe423abadcdab7a3278"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f1a186bd1fd74ad3b25bf5c642e86c8913a1149", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f1a186bd1fd74ad3b25bf5c642e86c8913a1149", "html_url": "https://github.com/rust-lang/rust/commit/3f1a186bd1fd74ad3b25bf5c642e86c8913a1149", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f1a186bd1fd74ad3b25bf5c642e86c8913a1149/comments", "author": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a867c17ab36926a575a57e24a03e99db672055f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a867c17ab36926a575a57e24a03e99db672055f2", "html_url": "https://github.com/rust-lang/rust/commit/a867c17ab36926a575a57e24a03e99db672055f2"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "599269e2d6318582846eeef6eab3a6d44598f377", "filename": "clippy_lints/src/functions/misnamed_getters.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3f1a186bd1fd74ad3b25bf5c642e86c8913a1149/clippy_lints%2Fsrc%2Ffunctions%2Fmisnamed_getters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f1a186bd1fd74ad3b25bf5c642e86c8913a1149/clippy_lints%2Fsrc%2Ffunctions%2Fmisnamed_getters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fmisnamed_getters.rs?ref=3f1a186bd1fd74ad3b25bf5c642e86c8913a1149", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet;\n use rustc_errors::Applicability;\n-use rustc_hir::{intravisit::FnKind, Body, ExprKind, FnDecl, HirId, ImplicitSelfKind};\n+use rustc_hir::{intravisit::FnKind, Body, ExprKind, FnDecl, HirId, ImplicitSelfKind, Unsafety};\n use rustc_lint::LateContext;\n use rustc_middle::ty;\n use rustc_span::Span;\n@@ -16,7 +16,7 @@ pub fn check_fn(\n     span: Span,\n     _hir_id: HirId,\n ) {\n-    let FnKind::Method(ref ident, _) = kind else {\n+    let FnKind::Method(ref ident, sig) = kind else {\n             return;\n         };\n \n@@ -38,6 +38,12 @@ pub fn check_fn(\n         ImplicitSelfKind::None => return,\n     };\n \n+    let name = if sig.header.unsafety == Unsafety::Unsafe {\n+        name.strip_suffix(\"_unchecked\").unwrap_or(name)\n+    } else {\n+        name\n+    };\n+\n     // Body must be &(mut) <self_data>.name\n     // self_data is not neccessarilly self, to also lint sub-getters, etc\u2026\n "}, {"sha": "feefb95ab4f8f36dce6b97dd86159e2d33993f5c", "filename": "tests/ui/misnamed_getters.stderr", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/3f1a186bd1fd74ad3b25bf5c642e86c8913a1149/tests%2Fui%2Fmisnamed_getters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f1a186bd1fd74ad3b25bf5c642e86c8913a1149/tests%2Fui%2Fmisnamed_getters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmisnamed_getters.stderr?ref=3f1a186bd1fd74ad3b25bf5c642e86c8913a1149", "patch": "@@ -90,5 +90,41 @@ LL | |         &mut self.a\n LL | |     }\n    | |_____^\n \n-error: aborting due to 10 previous errors\n+error: getter function appears to return the wrong field\n+  --> $DIR/misnamed_getters.rs:64:5\n+   |\n+LL | /     unsafe fn a_unchecked(&self) -> &u8 {\n+LL | |         &self.b\n+   | |         ------- help: consider using: `&self.a`\n+LL | |     }\n+   | |_____^\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/misnamed_getters.rs:67:5\n+   |\n+LL | /     unsafe fn a_unchecked_mut(&mut self) -> &mut u8 {\n+LL | |         &mut self.b\n+   | |         ----------- help: consider using: `&mut self.a`\n+LL | |     }\n+   | |_____^\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/misnamed_getters.rs:71:5\n+   |\n+LL | /     unsafe fn b_unchecked(self) -> u8 {\n+LL | |         self.a\n+   | |         ------ help: consider using: `self.b`\n+LL | |     }\n+   | |_____^\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/misnamed_getters.rs:75:5\n+   |\n+LL | /     unsafe fn b_unchecked_mut(&mut self) -> &mut u8 {\n+LL | |         &mut self.a\n+   | |         ----------- help: consider using: `&mut self.b`\n+LL | |     }\n+   | |_____^\n+\n+error: aborting due to 14 previous errors\n "}]}