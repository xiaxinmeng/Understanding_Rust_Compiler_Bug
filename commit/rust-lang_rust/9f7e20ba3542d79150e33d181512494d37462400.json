{"sha": "9f7e20ba3542d79150e33d181512494d37462400", "node_id": "C_kwDOAAsO6NoAKDlmN2UyMGJhMzU0MmQ3OTE1MGUzM2QxODE1MTI0OTRkMzc0NjI0MDA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-29T11:19:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-29T11:19:42Z"}, "message": "Rollup merge of #100337 - camelid:stabilize-io_read_to_string, r=JohnTitor\n\nStabilize `std::io::read_to_string`\n\nCloses #80218. :tada:\n\nThis PR stabilizes the `std::io::read_to_string` function, with the following public API:\n\n```rust\npub fn read_to_string<R: Read>(reader: R) -> Result<String>;\n```\n\nIt's analogous to `std::fs::read_to_string` for files, but it works on anything that implements `io::Read`, including `io::stdin()`.\n\nSee the tracking issue (#80218) or documentation for details.", "tree": {"sha": "84959dbf666f15fbdad203962eb8d36881d2f72b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84959dbf666f15fbdad203962eb8d36881d2f72b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f7e20ba3542d79150e33d181512494d37462400", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjDKDOCRBK7hj4Ov3rIwAAih4IAFCSrkm/vjmlXiz85BbBjWOT\nCSbR/DSofLwL4a3ED3/SD2cnz7AOi2qTc3Heedb+Ta+ynuIwnCnjTITItjhtubcn\nZJO/+q0l5hlw6X2w5nRkWmPi0Cb1uKcDTTLcEC8r18R6qI0cY8aetbFLvK4w5k4q\n/aNRccG5/uYLHjT6hcNBI5WwLLk8Ly/yPIuiUSyfVXD2HAs6g7x/3LCCxLDnw5go\nLh2z1ucz2w3LEBLXiJseqsa5og3kvXOToH9gEOCCCABhZWVdJ3rphhHOqRANIzu1\nShcc7ydeu57epJ82Hl6JD9mlPCiois7BekS7A5Y7i6QvD+EDvH8IbUi+Y/G5S/Y=\n=r2m/\n-----END PGP SIGNATURE-----\n", "payload": "tree 84959dbf666f15fbdad203962eb8d36881d2f72b\nparent 3ea5456366170f2b39bd77070c00c632537ec591\nparent 2df5afe622d6e56f5e275dd35d525cc6029be890\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1661771982 +0530\ncommitter GitHub <noreply@github.com> 1661771982 +0530\n\nRollup merge of #100337 - camelid:stabilize-io_read_to_string, r=JohnTitor\n\nStabilize `std::io::read_to_string`\n\nCloses #80218. :tada:\n\nThis PR stabilizes the `std::io::read_to_string` function, with the following public API:\n\n```rust\npub fn read_to_string<R: Read>(reader: R) -> Result<String>;\n```\n\nIt's analogous to `std::fs::read_to_string` for files, but it works on anything that implements `io::Read`, including `io::stdin()`.\n\nSee the tracking issue (#80218) or documentation for details.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f7e20ba3542d79150e33d181512494d37462400", "html_url": "https://github.com/rust-lang/rust/commit/9f7e20ba3542d79150e33d181512494d37462400", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f7e20ba3542d79150e33d181512494d37462400/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ea5456366170f2b39bd77070c00c632537ec591", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea5456366170f2b39bd77070c00c632537ec591", "html_url": "https://github.com/rust-lang/rust/commit/3ea5456366170f2b39bd77070c00c632537ec591"}, {"sha": "2df5afe622d6e56f5e275dd35d525cc6029be890", "url": "https://api.github.com/repos/rust-lang/rust/commits/2df5afe622d6e56f5e275dd35d525cc6029be890", "html_url": "https://github.com/rust-lang/rust/commit/2df5afe622d6e56f5e275dd35d525cc6029be890"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "01a3873c75cec6c5b81459a8de83740a8297e559", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f7e20ba3542d79150e33d181512494d37462400/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f7e20ba3542d79150e33d181512494d37462400/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=9f7e20ba3542d79150e33d181512494d37462400", "patch": "@@ -1037,8 +1037,6 @@ pub trait Read {\n /// # Examples\n ///\n /// ```no_run\n-/// #![feature(io_read_to_string)]\n-///\n /// # use std::io;\n /// fn main() -> io::Result<()> {\n ///     let stdin = io::read_to_string(io::stdin())?;\n@@ -1047,7 +1045,7 @@ pub trait Read {\n ///     Ok(())\n /// }\n /// ```\n-#[unstable(feature = \"io_read_to_string\", issue = \"80218\")]\n+#[stable(feature = \"io_read_to_string\", since = \"CURRENT_RUSTC_VERSION\")]\n pub fn read_to_string<R: Read>(mut reader: R) -> Result<String> {\n     let mut buf = String::new();\n     reader.read_to_string(&mut buf)?;"}]}