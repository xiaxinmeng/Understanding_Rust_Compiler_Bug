{"sha": "a732c3a3693fab727d3b8e6f5594b67efbb421eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MzJjM2EzNjkzZmFiNzI3ZDNiOGU2ZjU1OTRiNjdlZmJiNDIxZWI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-28T14:58:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-28T14:58:15Z"}, "message": "Rollup merge of #78853 - calebcartwright:fix-const-block-expr-span, r=spastorino\n\nrustc_parse: fix ConstBlock expr span\n\nThe span for a ConstBlock expression should presumably run through the end of the block it contains and not stop at the keyword, just like is done with similar block-containing expression kinds, such as a TryBlock", "tree": {"sha": "660baa930905d1140eab240f77232979ee1fe8a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/660baa930905d1140eab240f77232979ee1fe8a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a732c3a3693fab727d3b8e6f5594b67efbb421eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfwmWHCRBK7hj4Ov3rIwAAdHIIADDfR50Utt78c0UNg64p6kma\nCIxaN/c56mOSHa6r7FlbM6e/k5hjXWjjm1b9mMqucRD1qpzrxcW+zZNCkRTk89dM\nWEy+Od+t+qPB2inkbXPBj1mY5DiBgE57a+RVGCWiuZvgmm9r3f3H5Wi2CwZ89eec\nA5GXNv+8ynAjnlEPuap8mOgSf/KXZDn0NlqgWwmbe0ZT6kPrbfVNgk8T5fH/oJUN\nQCEM3SdXU+obwgOcf8tZQ2xFGjPYgfg0YZ5jQMPhMksirhIxF8SSmraUk1nPwJsk\nk2N9423xXoXieEHIKwH5H+sH5XeqzQ0j1ytXQ6pYa99cUvIwMzDvQ9dyWoogi/E=\n=Vbma\n-----END PGP SIGNATURE-----\n", "payload": "tree 660baa930905d1140eab240f77232979ee1fe8a9\nparent 772b1a6d79e3deaf4326b144e58f147088963ff7\nparent e1d5c3c0544b981c08581a0cf40c759d2f5bdff0\nauthor Jonas Schievink <jonasschievink@gmail.com> 1606575495 +0100\ncommitter GitHub <noreply@github.com> 1606575495 +0100\n\nRollup merge of #78853 - calebcartwright:fix-const-block-expr-span, r=spastorino\n\nrustc_parse: fix ConstBlock expr span\n\nThe span for a ConstBlock expression should presumably run through the end of the block it contains and not stop at the keyword, just like is done with similar block-containing expression kinds, such as a TryBlock\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a732c3a3693fab727d3b8e6f5594b67efbb421eb", "html_url": "https://github.com/rust-lang/rust/commit/a732c3a3693fab727d3b8e6f5594b67efbb421eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a732c3a3693fab727d3b8e6f5594b67efbb421eb/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "772b1a6d79e3deaf4326b144e58f147088963ff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/772b1a6d79e3deaf4326b144e58f147088963ff7", "html_url": "https://github.com/rust-lang/rust/commit/772b1a6d79e3deaf4326b144e58f147088963ff7"}, {"sha": "e1d5c3c0544b981c08581a0cf40c759d2f5bdff0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1d5c3c0544b981c08581a0cf40c759d2f5bdff0", "html_url": "https://github.com/rust-lang/rust/commit/e1d5c3c0544b981c08581a0cf40c759d2f5bdff0"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "b746256f5fefc609524b78f999367135a2bdf26b", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a732c3a3693fab727d3b8e6f5594b67efbb421eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a732c3a3693fab727d3b8e6f5594b67efbb421eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=a732c3a3693fab727d3b8e6f5594b67efbb421eb", "patch": "@@ -873,7 +873,8 @@ impl<'a> Parser<'a> {\n             id: DUMMY_NODE_ID,\n             value: self.mk_expr(blk.span, ExprKind::Block(blk, None), AttrVec::new()),\n         };\n-        Ok(self.mk_expr(span, ExprKind::ConstBlock(anon_const), AttrVec::new()))\n+        let blk_span = anon_const.value.span;\n+        Ok(self.mk_expr(span.to(blk_span), ExprKind::ConstBlock(anon_const), AttrVec::new()))\n     }\n \n     /// Parses mutability (`mut` or nothing)."}]}