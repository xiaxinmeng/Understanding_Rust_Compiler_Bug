{"sha": "3bc2970a2e5f80f04ac2c1b1c1e4ec06a001f151", "node_id": "C_kwDOAAsO6NoAKDNiYzI5NzBhMmU1ZjgwZjA0YWMyYzFiMWMxZTRlYzA2YTAwMWYxNTE", "commit": {"author": {"name": "Jonathan Schwender", "email": "jonathan.schwender@huawei.com", "date": "2023-01-05T13:14:23Z"}, "committer": {"name": "Jonathan Schwender", "email": "jonathan.schwender@huawei.com", "date": "2023-01-13T16:20:37Z"}, "message": "Improve linker-flavor detection\n\nLinker drivers such as gcc, clang or lld often have a version postfix,\ne.g clang-12. The previous logic would not account for this and would\nfall back to guessing the linker flavor to be the default linker flavor\nfor the target, which causes linker errors when this is not the case.\nBy accounting for the possible version postfix and also considering\ng++ and clang++, we considerably reduce the amount of times the\nfallback guess has to be used.\n\nTo simplify matching check for a version postfix and match against the\nlinker stem without any version postfix.\nIn contrast to gcc, clang supports all architectures in one binary.\nThis means there are no variants like `aarch64-linux-gnu-clang` and\nthere is no need to check for `-clang` variants.", "tree": {"sha": "dd48688a3eb86e4e0d5f91d131f8d09ee40435da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd48688a3eb86e4e0d5f91d131f8d09ee40435da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bc2970a2e5f80f04ac2c1b1c1e4ec06a001f151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bc2970a2e5f80f04ac2c1b1c1e4ec06a001f151", "html_url": "https://github.com/rust-lang/rust/commit/3bc2970a2e5f80f04ac2c1b1c1e4ec06a001f151", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bc2970a2e5f80f04ac2c1b1c1e4ec06a001f151/comments", "author": {"login": "jschwe", "id": 55576758, "node_id": "MDQ6VXNlcjU1NTc2NzU4", "avatar_url": "https://avatars.githubusercontent.com/u/55576758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jschwe", "html_url": "https://github.com/jschwe", "followers_url": "https://api.github.com/users/jschwe/followers", "following_url": "https://api.github.com/users/jschwe/following{/other_user}", "gists_url": "https://api.github.com/users/jschwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jschwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jschwe/subscriptions", "organizations_url": "https://api.github.com/users/jschwe/orgs", "repos_url": "https://api.github.com/users/jschwe/repos", "events_url": "https://api.github.com/users/jschwe/events{/privacy}", "received_events_url": "https://api.github.com/users/jschwe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jschwe", "id": 55576758, "node_id": "MDQ6VXNlcjU1NTc2NzU4", "avatar_url": "https://avatars.githubusercontent.com/u/55576758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jschwe", "html_url": "https://github.com/jschwe", "followers_url": "https://api.github.com/users/jschwe/followers", "following_url": "https://api.github.com/users/jschwe/following{/other_user}", "gists_url": "https://api.github.com/users/jschwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jschwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jschwe/subscriptions", "organizations_url": "https://api.github.com/users/jschwe/orgs", "repos_url": "https://api.github.com/users/jschwe/repos", "events_url": "https://api.github.com/users/jschwe/events{/privacy}", "received_events_url": "https://api.github.com/users/jschwe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ca6f7d2c34953ee360ccf7d3c84c7853ea2df4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca6f7d2c34953ee360ccf7d3c84c7853ea2df4b", "html_url": "https://github.com/rust-lang/rust/commit/5ca6f7d2c34953ee360ccf7d3c84c7853ea2df4b"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "342abf81f6a7c0d6b465ce23375dcecd80868297", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3bc2970a2e5f80f04ac2c1b1c1e4ec06a001f151/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bc2970a2e5f80f04ac2c1b1c1e4ec06a001f151/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=3bc2970a2e5f80f04ac2c1b1c1e4ec06a001f151", "patch": "@@ -1231,12 +1231,21 @@ pub fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n                     sess.emit_fatal(errors::LinkerFileStem);\n                 });\n \n+                // Remove any version postfix.\n+                let stem = stem\n+                    .rsplit_once('-')\n+                    .and_then(|(lhs, rhs)| rhs.chars().all(char::is_numeric).then_some(lhs))\n+                    .unwrap_or(stem);\n+\n+                // GCC can have an optional target prefix.\n                 let flavor = if stem == \"emcc\" {\n                     LinkerFlavor::EmCc\n                 } else if stem == \"gcc\"\n                     || stem.ends_with(\"-gcc\")\n+                    || stem == \"g++\"\n+                    || stem.ends_with(\"-g++\")\n                     || stem == \"clang\"\n-                    || stem.ends_with(\"-clang\")\n+                    || stem == \"clang++\"\n                 {\n                     LinkerFlavor::from_cli(LinkerFlavorCli::Gcc, &sess.target)\n                 } else if stem == \"wasm-ld\" || stem.ends_with(\"-wasm-ld\") {"}]}