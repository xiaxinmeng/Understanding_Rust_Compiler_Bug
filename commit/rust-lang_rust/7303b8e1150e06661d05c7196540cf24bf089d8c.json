{"sha": "7303b8e1150e06661d05c7196540cf24bf089d8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMDNiOGUxMTUwZTA2NjYxZDA1YzcxOTY1NDBjZjI0YmYwODlkOGM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-28T22:22:37Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-28T23:03:45Z"}, "message": "Allow just the bootstrap LLVM backend to be disabled with NO_OCAML_LLVM=1", "tree": {"sha": "cdc4f9757557cff9a7fa6eca50a4c4bc7f8fd1ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdc4f9757557cff9a7fa6eca50a4c4bc7f8fd1ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7303b8e1150e06661d05c7196540cf24bf089d8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7303b8e1150e06661d05c7196540cf24bf089d8c", "html_url": "https://github.com/rust-lang/rust/commit/7303b8e1150e06661d05c7196540cf24bf089d8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7303b8e1150e06661d05c7196540cf24bf089d8c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67bcc70754ffa27b37c10646daef43d83dd9a1b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/67bcc70754ffa27b37c10646daef43d83dd9a1b4", "html_url": "https://github.com/rust-lang/rust/commit/67bcc70754ffa27b37c10646daef43d83dd9a1b4"}], "stats": {"total": 53, "additions": 40, "deletions": 13}, "files": [{"sha": "17813584ad7a79f7fd46bf8b1c57cd9232c21763", "filename": "src/Makefile", "status": "modified", "additions": 40, "deletions": 13, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/7303b8e1150e06661d05c7196540cf24bf089d8c/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/7303b8e1150e06661d05c7196540cf24bf089d8c/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=7303b8e1150e06661d05c7196540cf24bf089d8c", "patch": "@@ -194,18 +194,32 @@ ifneq ($(CFG_LLVM_CONFIG),)\n     CFG_LLVM_CONFIG := $(info cfg: LLVM ocaml bindings not found)\n   endif\n endif\n+\n+ifdef NO_OCAML_LLVM\n+    $(info cfg: disabling LLVM ocaml bindings)\n+    CFG_OCAML_LLVM :=\n+endif\n+\n ifdef CFG_LLVM_CONFIG\n-  VARIANT=llvm\n-  LLVM_LIBS := llvm.cma llvm_bitwriter.cma\n-  LLVM_NATIVE_LIBS := llvm.cmxa llvm_bitwriter.cmxa\n-  LLVM_CLIBS := $(shell for c in `$(CFG_LLVM_CONFIG) --ldflags --libs` \\\n-    -lllvm -lllvm_bitwriter; do echo -cclib && echo $$c; done | xargs echo)\n-  LLVM_INCS := -I boot/llvm -I $(CFG_OCAML_LLVM)\n-  LLVM_MLS := $(addprefix boot/llvm/, llabi.ml llasm.ml llfinal.ml \\\n-    lltrans.ml llemit.ml)\n   LLC := \"$(shell $(CFG_LLVM_CONFIG) --bindir)/llc\"\n   CFG_LLC_CFLAGS := -march=x86\n   LLVM-DIS := \"$(shell $(CFG_LLVM_CONFIG) --bindir)/llvm-dis\"\n+  ifneq ($(CFG_OCAML_LLVM),)\n+    VARIANT=llvm\n+    LLVM_LIBS := llvm.cma llvm_bitwriter.cma\n+    LLVM_NATIVE_LIBS := llvm.cmxa llvm_bitwriter.cmxa\n+    LLVM_CLIBS := $(shell for c in `$(CFG_LLVM_CONFIG) --ldflags --libs` \\\n+      -lllvm -lllvm_bitwriter; do echo -cclib && echo $$c; done | xargs echo)\n+    LLVM_INCS := -I boot/llvm -I $(CFG_OCAML_LLVM)\n+    LLVM_MLS := $(addprefix boot/llvm/, llabi.ml llasm.ml llfinal.ml \\\n+      lltrans.ml llemit.ml)\n+  else\n+    VARIANT=x86\n+    LLVM_CLIBS :=\n+    LLVM_INCS :=\n+    LLVM_MLS :=\n+    $(info cfg: disabling LLVM ocaml backend)\n+  endif\n else\n   VARIANT=x86\n   LLVM_CLIBS :=\n@@ -657,6 +671,9 @@ compile-check: tidy \\\n \n \n ifdef CFG_LLVM_CONFIG\n+\n+ifneq ($(CFG_OCAML_LLVM),)\n+\n ALL_TEST_CRATES += $(TEST_CFAIL_CRATES_LLVM) \\\n                    $(TEST_RFAIL_CRATES_LLVM) \\\n                    $(TEST_RPASS_CRATES_LLVM)\n@@ -665,6 +682,20 @@ ALL_TEST_SOURCES += $(TEST_CFAIL_SOURCES_LLVM) \\\n                     $(TEST_RFAIL_SOURCES_LLVM) \\\n                     $(TEST_RPASS_SOURCES_LLVM)\n \n+check_nocompile: $(TEST_CFAIL_OUTS_LLVM)\n+\n+check:\ttidy \\\n+        $(TEST_RPASS_EXES_LLVM) $(TEST_RFAIL_EXES_LLVM) \\\n+        $(TEST_RPASS_OUTS_LLVM) $(TEST_RFAIL_OUTS_LLVM) \\\n+        $(TEST_CFAIL_OUTS_LLVM)\n+\n+compile-check: tidy \\\n+       $(TEST_RPASS_EXES_LLVM) $(TEST_RFAIL_EXES_LLVM)\n+\n+endif\n+\n+$(info $(TEST_RPASS_EXES_SELF))\n+\n ALL_TEST_CRATES += $(TEST_CFAIL_CRATES_SELF) \\\n                    $(TEST_RFAIL_CRATES_SELF) \\\n                    $(TEST_RPASS_CRATES_SELF)\n@@ -673,13 +704,9 @@ ALL_TEST_SOURCES += $(TEST_CFAIL_SOURCES_SELF) \\\n                     $(TEST_RFAIL_SOURCES_SELF) \\\n                     $(TEST_RPASS_SOURCES_SELF)\n \n-check_nocompile: $(TEST_CFAIL_OUTS_LLVM) \\\n-                 $(TEST_CFAIL_OUTS_SELF)\n+check_nocompile: $(TEST_CFAIL_OUTS_SELF)\n \n check:  tidy \\\n-        $(TEST_RPASS_EXES_LLVM) $(TEST_RFAIL_EXES_LLVM) \\\n-        $(TEST_RPASS_OUTS_LLVM) $(TEST_RFAIL_OUTS_LLVM) \\\n-        $(TEST_CFAIL_OUTS_LLVM) \\\n         $(TEST_RPASS_EXES_SELF) $(TEST_RFAIL_EXES_SELF) \\\n         $(TEST_RPASS_OUTS_SELF) $(TEST_RFAIL_OUTS_SELF) \\\n         $(TEST_CFAIL_OUTS_SELF)"}]}