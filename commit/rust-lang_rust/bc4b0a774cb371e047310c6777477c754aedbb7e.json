{"sha": "bc4b0a774cb371e047310c6777477c754aedbb7e", "node_id": "C_kwDOAAsO6NoAKGJjNGIwYTc3NGNiMzcxZTA0NzMxMGM2Nzc3NDc3Yzc1NGFlZGJiN2U", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-02-14T20:42:18Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-02-14T20:43:12Z"}, "message": "Fix macro reexports duplicates in the sidebar", "tree": {"sha": "a01de1616126e9bc8cf3c334a575ad12f9f5235b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a01de1616126e9bc8cf3c334a575ad12f9f5235b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc4b0a774cb371e047310c6777477c754aedbb7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4b0a774cb371e047310c6777477c754aedbb7e", "html_url": "https://github.com/rust-lang/rust/commit/bc4b0a774cb371e047310c6777477c754aedbb7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc4b0a774cb371e047310c6777477c754aedbb7e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52dd59ed2154f4158ae37e6994b678a6249a7bb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/52dd59ed2154f4158ae37e6994b678a6249a7bb0", "html_url": "https://github.com/rust-lang/rust/commit/52dd59ed2154f4158ae37e6994b678a6249a7bb0"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "a7f852a432c82c8db4a65a8bd64c3c0efd19a780", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bc4b0a774cb371e047310c6777477c754aedbb7e/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc4b0a774cb371e047310c6777477c754aedbb7e/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=bc4b0a774cb371e047310c6777477c754aedbb7e", "patch": "@@ -250,6 +250,8 @@ impl<'tcx> Context<'tcx> {\n     fn build_sidebar_items(&self, m: &clean::Module) -> BTreeMap<String, Vec<NameDoc>> {\n         // BTreeMap instead of HashMap to get a sorted output\n         let mut map: BTreeMap<_, Vec<_>> = BTreeMap::new();\n+        let mut inserted: FxHashMap<ItemType, FxHashSet<Symbol>> = FxHashMap::default();\n+\n         for item in &m.items {\n             if item.is_stripped() {\n                 continue;\n@@ -258,13 +260,16 @@ impl<'tcx> Context<'tcx> {\n             let short = item.type_();\n             let myname = match item.name {\n                 None => continue,\n-                Some(ref s) => s.to_string(),\n+                Some(s) => s,\n             };\n-            let short = short.to_string();\n-            map.entry(short).or_default().push((\n-                myname,\n-                Some(item.doc_value().map_or_else(String::new, |s| plain_text_summary(&s))),\n-            ));\n+            if inserted.entry(short).or_default().insert(myname) {\n+                let short = short.to_string();\n+                let myname = myname.to_string();\n+                map.entry(short).or_default().push((\n+                    myname,\n+                    Some(item.doc_value().map_or_else(String::new, |s| plain_text_summary(&s))),\n+                ));\n+            }\n         }\n \n         if self.shared.sort_modules_alphabetically {"}]}