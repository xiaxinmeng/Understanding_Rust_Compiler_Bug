{"sha": "e65d33e9ed3057a6afeaea9bf68519eb758f51ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NWQzM2U5ZWQzMDU3YTZhZmVhZWE5YmY2ODUxOWViNzU4ZjUxYWI=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-10-03T03:26:28Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-10-16T04:56:54Z"}, "message": "path2: Update for loop -> continue", "tree": {"sha": "e72632b1e11d3f06ad71d234dc4b478bf96ceefd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e72632b1e11d3f06ad71d234dc4b478bf96ceefd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e65d33e9ed3057a6afeaea9bf68519eb758f51ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e65d33e9ed3057a6afeaea9bf68519eb758f51ab", "html_url": "https://github.com/rust-lang/rust/commit/e65d33e9ed3057a6afeaea9bf68519eb758f51ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e65d33e9ed3057a6afeaea9bf68519eb758f51ab/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8af6539844a7edead3220f088248f8020793a0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8af6539844a7edead3220f088248f8020793a0d", "html_url": "https://github.com/rust-lang/rust/commit/b8af6539844a7edead3220f088248f8020793a0d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "51a4718394e3737c5cabe65c4a82dd5e5056ee05", "filename": "src/libextra/glob.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65d33e9ed3057a6afeaea9bf68519eb758f51ab/src%2Flibextra%2Fglob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65d33e9ed3057a6afeaea9bf68519eb758f51ab/src%2Flibextra%2Fglob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fglob.rs?ref=e65d33e9ed3057a6afeaea9bf68519eb758f51ab", "patch": "@@ -131,7 +131,7 @@ impl Iterator<Path> for GlobIterator {\n                 None => {\n                     // FIXME (#9639): How do we handle non-utf8 filenames? Ignore them for now\n                     // Ideally we'd still match them against a *\n-                    loop;\n+                    continue;\n                 }\n                 Some(x) => x\n             }, self.options) {"}, {"sha": "b0b6d1ceea0dbc52522e9f11d8c43e5bab9fbbba", "filename": "src/libstd/path/posix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65d33e9ed3057a6afeaea9bf68519eb758f51ab/src%2Flibstd%2Fpath%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65d33e9ed3057a6afeaea9bf68519eb758f51ab/src%2Flibstd%2Fpath%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fposix.rs?ref=e65d33e9ed3057a6afeaea9bf68519eb758f51ab", "patch": "@@ -253,7 +253,7 @@ impl GenericPath for Path {\n             loop {\n                 match (ita.next(), itb.next()) {\n                     (None, _) => break,\n-                    (Some(a), Some(b)) if a == b => { loop },\n+                    (Some(a), Some(b)) if a == b => { continue },\n                     (Some(a), _) if a == bytes!(\"..\") => {\n                         // if ita contains only .. components, it's an ancestor\n                         return ita.all(|x| x == bytes!(\"..\"));"}, {"sha": "620b7c375ff2fa69c29aaa1cc2be32f2725106e9", "filename": "src/libstd/path/windows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65d33e9ed3057a6afeaea9bf68519eb758f51ab/src%2Flibstd%2Fpath%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65d33e9ed3057a6afeaea9bf68519eb758f51ab/src%2Flibstd%2Fpath%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fwindows.rs?ref=e65d33e9ed3057a6afeaea9bf68519eb758f51ab", "patch": "@@ -548,7 +548,7 @@ impl GenericPath for Path {\n             loop {\n                 match (ita.next(), itb.next()) {\n                     (None, _) => break,\n-                    (Some(a), Some(b)) if a == b => { loop },\n+                    (Some(a), Some(b)) if a == b => { continue },\n                     (Some(a), _) if a == \"..\" => {\n                         // if ita contains only .. components, it's an ancestor\n                         return ita.all(|x| x == \"..\");"}]}