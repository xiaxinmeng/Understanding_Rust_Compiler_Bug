{"sha": "c043a27e4232993d4366962f854d4d3812c66fff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNDNhMjdlNDIzMjk5M2Q0MzY2OTYyZjg1NGQ0ZDM4MTJjNjZmZmY=", "commit": {"author": {"name": "Scott A Carr", "email": "s.carr1024@gmail.com", "date": "2016-08-26T19:39:16Z"}, "committer": {"name": "Scott A Carr", "email": "s.carr1024@gmail.com", "date": "2016-08-26T19:39:16Z"}, "message": "fix port for visit_statement", "tree": {"sha": "1e8ba01abbf8a79e36e54de395fb3c230585e131", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e8ba01abbf8a79e36e54de395fb3c230585e131"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c043a27e4232993d4366962f854d4d3812c66fff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c043a27e4232993d4366962f854d4d3812c66fff", "html_url": "https://github.com/rust-lang/rust/commit/c043a27e4232993d4366962f854d4d3812c66fff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c043a27e4232993d4366962f854d4d3812c66fff/comments", "author": {"login": "scottcarr", "id": 472477, "node_id": "MDQ6VXNlcjQ3MjQ3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/472477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottcarr", "html_url": "https://github.com/scottcarr", "followers_url": "https://api.github.com/users/scottcarr/followers", "following_url": "https://api.github.com/users/scottcarr/following{/other_user}", "gists_url": "https://api.github.com/users/scottcarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottcarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottcarr/subscriptions", "organizations_url": "https://api.github.com/users/scottcarr/orgs", "repos_url": "https://api.github.com/users/scottcarr/repos", "events_url": "https://api.github.com/users/scottcarr/events{/privacy}", "received_events_url": "https://api.github.com/users/scottcarr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottcarr", "id": 472477, "node_id": "MDQ6VXNlcjQ3MjQ3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/472477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottcarr", "html_url": "https://github.com/scottcarr", "followers_url": "https://api.github.com/users/scottcarr/followers", "following_url": "https://api.github.com/users/scottcarr/following{/other_user}", "gists_url": "https://api.github.com/users/scottcarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottcarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottcarr/subscriptions", "organizations_url": "https://api.github.com/users/scottcarr/orgs", "repos_url": "https://api.github.com/users/scottcarr/repos", "events_url": "https://api.github.com/users/scottcarr/events{/privacy}", "received_events_url": "https://api.github.com/users/scottcarr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61c4f5b61074e322b8853019fe6864a1d6dc72af", "url": "https://api.github.com/repos/rust-lang/rust/commits/61c4f5b61074e322b8853019fe6864a1d6dc72af", "html_url": "https://github.com/rust-lang/rust/commit/61c4f5b61074e322b8853019fe6864a1d6dc72af"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "756b06a0a699c0e2c972b382c80fd0b4f0f69921", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c043a27e4232993d4366962f854d4d3812c66fff/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c043a27e4232993d4366962f854d4d3812c66fff/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=c043a27e4232993d4366962f854d4d3812c66fff", "patch": "@@ -36,6 +36,7 @@ use syntax_pos::Span;\n \n use std::collections::hash_map::Entry;\n use std::fmt;\n+use std::usize;\n \n use super::promote_consts::{self, Candidate, TempState};\n \n@@ -393,8 +394,8 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n                     for index in 0..mir.var_decls.len() {\n                         if !self.const_fn_arg_vars.contains(index) {\n                             self.assign(&Lvalue::Var(Var::new(index)), Location {\n-                                block: BasicBlock::new(0),\n-                                statement_index: 0\n+                                block: bb,\n+                                statement_index: usize::MAX,\n                             });\n                         }\n                     }\n@@ -859,7 +860,17 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n     }\n \n     fn visit_statement(&mut self, bb: BasicBlock, statement: &Statement<'tcx>, location: Location) {\n-        self.nest(|this| this.super_statement(bb, statement, location));\n+        self.nest(|this| {\n+            this.visit_source_info(&statement.source_info);\n+            match statement.kind {\n+                StatementKind::Assign(ref lvalue, ref rvalue) => {\n+                    this.visit_assign(bb, lvalue, rvalue, location);\n+                }\n+                StatementKind::SetDiscriminant { .. } |\n+                StatementKind::StorageLive(_) |\n+                StatementKind::StorageDead(_) => {}\n+            }\n+        });\n     }\n \n     fn visit_terminator(&mut self,"}]}