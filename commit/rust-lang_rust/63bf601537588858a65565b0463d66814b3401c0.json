{"sha": "63bf601537588858a65565b0463d66814b3401c0", "node_id": "C_kwDOAAsO6NoAKDYzYmY2MDE1Mzc1ODg4NThhNjU1NjViMDQ2M2Q2NjgxNGIzNDAxYzA", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-02-10T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-02-10T18:43:24Z"}, "message": "Fix switch on discriminant detection in a presence of coverage counters", "tree": {"sha": "e866c5b7a6bf8e2774d5ffd9d27d193eb05075b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e866c5b7a6bf8e2774d5ffd9d27d193eb05075b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63bf601537588858a65565b0463d66814b3401c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63bf601537588858a65565b0463d66814b3401c0", "html_url": "https://github.com/rust-lang/rust/commit/63bf601537588858a65565b0463d66814b3401c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63bf601537588858a65565b0463d66814b3401c0/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "502d6aa47b4118fea1e326529e71b25a99b0d6c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/502d6aa47b4118fea1e326529e71b25a99b0d6c5", "html_url": "https://github.com/rust-lang/rust/commit/502d6aa47b4118fea1e326529e71b25a99b0d6c5"}], "stats": {"total": 49, "additions": 34, "deletions": 15}, "files": [{"sha": "d74ecb3eb1aab64d652c9892089bbfd268eb3932", "filename": "compiler/rustc_mir_dataflow/src/impls/mod.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/63bf601537588858a65565b0463d66814b3401c0/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63bf601537588858a65565b0463d66814b3401c0/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fmod.rs?ref=63bf601537588858a65565b0463d66814b3401c0", "patch": "@@ -710,24 +710,27 @@ fn switch_on_enum_discriminant<'mir, 'tcx>(\n     block: &'mir mir::BasicBlockData<'tcx>,\n     switch_on: mir::Place<'tcx>,\n ) -> Option<(mir::Place<'tcx>, &'tcx ty::AdtDef)> {\n-    match block.statements.last().map(|stmt| &stmt.kind) {\n-        Some(mir::StatementKind::Assign(box (lhs, mir::Rvalue::Discriminant(discriminated))))\n-            if *lhs == switch_on =>\n-        {\n-            match &discriminated.ty(body, tcx).ty.kind() {\n-                ty::Adt(def, _) => Some((*discriminated, def)),\n-\n-                // `Rvalue::Discriminant` is also used to get the active yield point for a\n-                // generator, but we do not need edge-specific effects in that case. This may\n-                // change in the future.\n-                ty::Generator(..) => None,\n-\n-                t => bug!(\"`discriminant` called on unexpected type {:?}\", t),\n+    for statement in block.statements.iter().rev() {\n+        match &statement.kind {\n+            mir::StatementKind::Assign(box (lhs, mir::Rvalue::Discriminant(discriminated)))\n+                if *lhs == switch_on =>\n+            {\n+                match &discriminated.ty(body, tcx).ty.kind() {\n+                    ty::Adt(def, _) => return Some((*discriminated, def)),\n+\n+                    // `Rvalue::Discriminant` is also used to get the active yield point for a\n+                    // generator, but we do not need edge-specific effects in that case. This may\n+                    // change in the future.\n+                    ty::Generator(..) => return None,\n+\n+                    t => bug!(\"`discriminant` called on unexpected type {:?}\", t),\n+                }\n             }\n+            mir::StatementKind::Coverage(_) => continue,\n+            _ => return None,\n         }\n-\n-        _ => None,\n     }\n+    None\n }\n \n struct OnMutBorrow<F>(F);"}, {"sha": "275cb38693f0e463eeefe0a764bb44fceb33b1b4", "filename": "src/test/ui/consts/precise-drop-with-coverage.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/63bf601537588858a65565b0463d66814b3401c0/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63bf601537588858a65565b0463d66814b3401c0/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-coverage.rs?ref=63bf601537588858a65565b0463d66814b3401c0", "patch": "@@ -0,0 +1,16 @@\n+// Checks that code coverage doesn't interfere with const_precise_live_drops.\n+// Regression test for issue #93848.\n+//\n+// check-pass\n+// compile-flags: --crate-type=lib -Cinstrument-coverage  -Zno-profiler-runtime\n+\n+#![feature(const_precise_live_drops)]\n+\n+#[inline]\n+pub const fn transpose<T, E>(this: Option<Result<T, E>>) -> Result<Option<T>, E> {\n+    match this {\n+        Some(Ok(x)) => Ok(Some(x)),\n+        Some(Err(e)) => Err(e),\n+        None => Ok(None),\n+    }\n+}"}]}