{"sha": "02d976a7f9ae838901b50b64109d90d54619fe4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZDk3NmE3ZjlhZTgzODkwMWI1MGI2NDEwOWQ5MGQ1NDYxOWZlNGQ=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-10-10T10:19:40Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-10-10T18:20:12Z"}, "message": "improve the performance of the vec![] macro\n\nCloses #17865", "tree": {"sha": "b35e044a7b5403b3ce947bc1bf9e88230b0422bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b35e044a7b5403b3ce947bc1bf9e88230b0422bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02d976a7f9ae838901b50b64109d90d54619fe4d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02d976a7f9ae838901b50b64109d90d54619fe4d", "html_url": "https://github.com/rust-lang/rust/commit/02d976a7f9ae838901b50b64109d90d54619fe4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02d976a7f9ae838901b50b64109d90d54619fe4d/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "310f2deb99a95bae63173f8f972a1f91f2138ca3", "url": "https://api.github.com/repos/rust-lang/rust/commits/310f2deb99a95bae63173f8f972a1f91f2138ca3", "html_url": "https://github.com/rust-lang/rust/commit/310f2deb99a95bae63173f8f972a1f91f2138ca3"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "955a1a5068bcf903bc00e0fa73ce58a341c3fe5d", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=02d976a7f9ae838901b50b64109d90d54619fe4d", "patch": "@@ -2331,7 +2331,7 @@ mod tests {\n     fn test_into_vec() {\n         let xs = box [1u, 2, 3];\n         let ys = xs.into_vec();\n-        assert_eq!(ys.as_slice(), [1u, 2, 3]);\n+        assert_eq!(ys.as_slice(), [1u, 2, 3].as_slice());\n     }\n }\n "}, {"sha": "a82856c013d647d7a600bbc4669b9b2320a3786b", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=02d976a7f9ae838901b50b64109d90d54619fe4d", "patch": "@@ -2650,7 +2650,7 @@ mod tests {\n     fn test_into_boxed_slice() {\n         let xs = vec![1u, 2, 3];\n         let ys = xs.into_boxed_slice();\n-        assert_eq!(ys.as_slice(), [1u, 2, 3]);\n+        assert_eq!(ys.as_slice(), [1u, 2, 3].as_slice());\n     }\n \n     #[bench]"}, {"sha": "e2a850c58e4404e39919074fed73fb5a144dfedc", "filename": "src/libstd/io/net/tcp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs?ref=02d976a7f9ae838901b50b64109d90d54619fe4d", "patch": "@@ -18,7 +18,6 @@\n //! listener (socket server) implements the `Listener` and `Acceptor` traits.\n \n use clone::Clone;\n-use collections::MutableSeq;\n use io::IoResult;\n use iter::Iterator;\n use slice::ImmutableSlice;"}, {"sha": "13adfeecf853610a72880c2e31da6e87911e41e0", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=02d976a7f9ae838901b50b64109d90d54619fe4d", "patch": "@@ -272,7 +272,9 @@ mod std {\n     // The test runner calls ::std::os::args() but really wants realstd\n     #[cfg(test)] pub use realstd::os as os;\n     // The test runner requires std::slice::Vector, so re-export std::slice just for it.\n-    #[cfg(test)] pub use slice;\n+    //\n+    // It is also used in vec![]\n+    pub use slice;\n \n-    pub use collections; // vec!() uses MutableSeq\n+    pub use boxed; // used for vec![]\n }"}, {"sha": "1ad3d6eed942068bdb1758434ec19a37e2144749", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d976a7f9ae838901b50b64109d90d54619fe4d/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=02d976a7f9ae838901b50b64109d90d54619fe4d", "patch": "@@ -323,16 +323,14 @@ macro_rules! try(\n \n /// Create a `std::vec::Vec` containing the arguments.\n #[macro_export]\n-macro_rules! vec(\n-    ($($e:expr),*) => ({\n-        // leading _ to allow empty construction without a warning.\n-        let mut _temp = ::std::vec::Vec::new();\n-        $(_temp.push($e);)*\n-        _temp\n+macro_rules! vec[\n+    ($($x:expr),*) => ({\n+        use std::slice::BoxedSlice;\n+        let xs: ::std::boxed::Box<[_]> = box [$($x),*];\n+        xs.into_vec()\n     });\n-    ($($e:expr),+,) => (vec!($($e),+))\n-)\n-\n+    ($($x:expr,)*) => (vec![$($x),*])\n+]\n \n /// A macro to select an event from a number of receivers.\n ///"}]}