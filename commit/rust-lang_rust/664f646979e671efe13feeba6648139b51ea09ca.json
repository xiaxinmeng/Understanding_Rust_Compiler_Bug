{"sha": "664f646979e671efe13feeba6648139b51ea09ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NGY2NDY5NzllNjcxZWZlMTNmZWViYTY2NDgxMzliNTFlYTA5Y2E=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-11-06T22:32:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-06T22:32:03Z"}, "message": "Merge pull request #1207 from Fraser999/master\n\nFixes #1184 where reordering import items could cause a panic.", "tree": {"sha": "d36b0c852ed6689c2347136695610d16399cccb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d36b0c852ed6689c2347136695610d16399cccb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/664f646979e671efe13feeba6648139b51ea09ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/664f646979e671efe13feeba6648139b51ea09ca", "html_url": "https://github.com/rust-lang/rust/commit/664f646979e671efe13feeba6648139b51ea09ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/664f646979e671efe13feeba6648139b51ea09ca/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "898208414e3e1b922bd5d3b072bd71841bafb0ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/898208414e3e1b922bd5d3b072bd71841bafb0ce", "html_url": "https://github.com/rust-lang/rust/commit/898208414e3e1b922bd5d3b072bd71841bafb0ce"}, {"sha": "aef665aa21fa484fa5be3a779901fed9a95c5b89", "url": "https://api.github.com/repos/rust-lang/rust/commits/aef665aa21fa484fa5be3a779901fed9a95c5b89", "html_url": "https://github.com/rust-lang/rust/commit/aef665aa21fa484fa5be3a779901fed9a95c5b89"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "cb7fdadd4a26af087da215f9202326e4c9d4a84f", "filename": "src/comment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/664f646979e671efe13feeba6648139b51ea09ca/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664f646979e671efe13feeba6648139b51ea09ca/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=664f646979e671efe13feeba6648139b51ea09ca", "patch": "@@ -275,14 +275,14 @@ enum CharClassesStatus {\n     LineComment,\n }\n \n-/// Distinguish between functionnal part of code and comments\n+/// Distinguish between functional part of code and comments\n #[derive(PartialEq, Eq, Debug, Clone, Copy)]\n pub enum CodeCharKind {\n     Normal,\n     Comment,\n }\n \n-/// Distinguish between functionnal part of code and comments,\n+/// Distinguish between functional part of code and comments,\n /// describing opening and closing of comments for ease when chunking\n /// code from tagged characters\n #[derive(PartialEq, Eq, Debug, Clone, Copy)]"}, {"sha": "a01db7399732cb8b4a0b15bf16d2e2398d127b55", "filename": "src/imports.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/664f646979e671efe13feeba6648139b51ea09ca/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664f646979e671efe13feeba6648139b51ea09ca/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=664f646979e671efe13feeba6648139b51ea09ca", "patch": "@@ -158,7 +158,10 @@ impl<'a> FmtVisitor<'a> {\n         // Find the location immediately before the first use item in the run. This must not lie\n         // before the current `self.last_pos`\n         let pos_before_first_use_item = use_items.first()\n-            .map(|p_i| cmp::max(self.last_pos, p_i.span.lo))\n+            .map(|p_i| {\n+                cmp::max(self.last_pos,\n+                         p_i.attrs.iter().map(|attr| attr.span.lo).min().unwrap_or(p_i.span.lo))\n+            })\n             .unwrap_or(self.last_pos);\n         // Construct a list of pairs, each containing a `use` item and the start of span before\n         // that `use` item."}, {"sha": "1f5d7c5414f88f3ce352e79baf7710d369490104", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/664f646979e671efe13feeba6648139b51ea09ca/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664f646979e671efe13feeba6648139b51ea09ca/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=664f646979e671efe13feeba6648139b51ea09ca", "patch": "@@ -179,7 +179,7 @@ impl<'a> FmtVisitor<'a> {\n     pub fn visit_item(&mut self, item: &ast::Item) {\n         // This is where we bail out if there is a skip attribute. This is only\n         // complex in the module case. It is complex because the module could be\n-        // in a seperate file and there might be attributes in both files, but\n+        // in a separate file and there might be attributes in both files, but\n         // the AST lumps them all together.\n         match item.node {\n             ast::ItemKind::Mod(ref m) => {"}, {"sha": "3c71f9984febfcd0df5bacd823c432fea8375f6b", "filename": "tests/source/imports-reorder-lines-and-items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/664f646979e671efe13feeba6648139b51ea09ca/tests%2Fsource%2Fimports-reorder-lines-and-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664f646979e671efe13feeba6648139b51ea09ca/tests%2Fsource%2Fimports-reorder-lines-and-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports-reorder-lines-and-items.rs?ref=664f646979e671efe13feeba6648139b51ea09ca", "patch": "@@ -1,6 +1,7 @@\n // rustfmt-reorder_imports: true\n // rustfmt-reorder_imported_names: true\n \n+/// This comment should stay with `use std::str;`\n use std::str;\n use std::cmp::{d, c, b, a};\n use std::ddd::aaa;"}, {"sha": "a2a4c0eeedf8d6f3909b626180842a7debaf4dc2", "filename": "tests/system.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/664f646979e671efe13feeba6648139b51ea09ca/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664f646979e671efe13feeba6648139b51ea09ca/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=664f646979e671efe13feeba6648139b51ea09ca", "patch": "@@ -33,7 +33,7 @@ fn get_path_string(dir_entry: io::Result<fs::DirEntry>) -> String {\n \n // Integration tests. The files in the tests/source are formatted and compared\n // to their equivalent in tests/target. The target file and config can be\n-// overriden by annotations in the source file. The input and output must match\n+// overridden by annotations in the source file. The input and output must match\n // exactly.\n // FIXME(#28) would be good to check for error messages and fail on them, or at\n // least report."}, {"sha": "f395710b186d3dfb3031c0eb8eb00fc55cf88f50", "filename": "tests/target/imports-reorder-lines-and-items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/664f646979e671efe13feeba6648139b51ea09ca/tests%2Ftarget%2Fimports-reorder-lines-and-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664f646979e671efe13feeba6648139b51ea09ca/tests%2Ftarget%2Fimports-reorder-lines-and-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports-reorder-lines-and-items.rs?ref=664f646979e671efe13feeba6648139b51ea09ca", "patch": "@@ -6,4 +6,5 @@ use std::ddd::{a, b, c as g, d as p};\n use std::ddd::aaa;\n // This comment should stay with `use std::ddd:bbb;`\n use std::ddd::bbb;\n+/// This comment should stay with `use std::str;`\n use std::str;"}]}