{"sha": "c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3YmM0MWY5N2FlZWYzYzRmNTYyYzBmZDI4MzVhY2Q2ZDZjMmI1YjA=", "commit": {"author": {"name": "Ali\u00e9nore Bouttefeux", "email": "alienore.bouttefeux@gmail.com", "date": "2021-04-07T17:23:17Z"}, "committer": {"name": "Ali\u00e9nore Bouttefeux", "email": "alienore.bouttefeux@gmail.com", "date": "2021-04-07T17:23:17Z"}, "message": "add test", "tree": {"sha": "11c0169b57afba9f59f12b4562f439c89bbe6545", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11c0169b57afba9f59f12b4562f439c89bbe6545"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0", "html_url": "https://github.com/rust-lang/rust/commit/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/comments", "author": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "389100921ab840bc235b3487d8b519197dec77c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/389100921ab840bc235b3487d8b519197dec77c1", "html_url": "https://github.com/rust-lang/rust/commit/389100921ab840bc235b3487d8b519197dec77c1"}], "stats": {"total": 135, "additions": 135, "deletions": 0}, "files": [{"sha": "cb81c330b718ba22a446c83d063a5dd88b457416", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0", "patch": "@@ -1,3 +1,5 @@\n+// ignore-tidy-filelength\n+\n //! Lints in the Rust compiler.\n //!\n //! This contains lints which can feasibly be implemented as their own"}, {"sha": "fe867ce1fbd57980ffbbb2d3132669c5e3a78a64", "filename": "src/test/ui/cleanup-shortcircuit.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/src%2Ftest%2Fui%2Fcleanup-shortcircuit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/src%2Ftest%2Fui%2Fcleanup-shortcircuit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcleanup-shortcircuit.rs?ref=c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0", "patch": "@@ -3,6 +3,9 @@\n \n // pretty-expanded FIXME #23616\n \n+#![allow(deref_nullptr)]\n+\n+\n use std::env;\n \n pub fn main() {"}, {"sha": "7b10e711c27b8bf9c15e8097806551b117db9cdc", "filename": "src/test/ui/lint/lint-deref-nullptr.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/src%2Ftest%2Fui%2Flint%2Flint-deref-nullptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/src%2Ftest%2Fui%2Flint%2Flint-deref-nullptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-deref-nullptr.rs?ref=c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0", "patch": "@@ -0,0 +1,32 @@\n+// test the deref_nullptr lint\n+\n+#![deny(deref_nullptr)]\n+\n+fn f() {\n+    unsafe {\n+        let a = 1;\n+        let ub = *(a as *const i32);\n+        let ub = *(0 as *const i32);\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        let ub = *core::ptr::null::<i32>();\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        let ub = *core::ptr::null_mut::<i32>();\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        let ub = *(core::ptr::null::<i16>() as *const i32);\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        let ub = *(core::ptr::null::<i16>() as *mut i32 as *mut usize as *const u8);\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        let ub = &*core::ptr::null::<i32>();\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        core::ptr::addr_of!(*core::ptr::null::<i32>());\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        std::ptr::addr_of_mut!(*core::ptr::null_mut::<i32>());\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        let ub = *std::ptr::null::<i32>();\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+        let ub = *std::ptr::null_mut::<i32>();\n+        //~^ ERROR Dereferencing a null pointer causes undefined behavior\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4fc6c54e1970751155920ae812851b72986bc43b", "filename": "src/test/ui/lint/lint-deref-nullptr.stderr", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/src%2Ftest%2Fui%2Flint%2Flint-deref-nullptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0/src%2Ftest%2Fui%2Flint%2Flint-deref-nullptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-deref-nullptr.stderr?ref=c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0", "patch": "@@ -0,0 +1,98 @@\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:9:18\n+   |\n+LL |         let ub = *(0 as *const i32);\n+   |                  ^^^^^^^^^^^^^^^^^^\n+   |                  |\n+   |                  a null pointer is dereferenced\n+   |                  this code causes undefined behavior when executed\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-deref-nullptr.rs:3:9\n+   |\n+LL | #![deny(deref_nullptr)]\n+   |         ^^^^^^^^^^^^^\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:11:18\n+   |\n+LL |         let ub = *core::ptr::null::<i32>();\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  |\n+   |                  a null pointer is dereferenced\n+   |                  this code causes undefined behavior when executed\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:13:18\n+   |\n+LL |         let ub = *core::ptr::null_mut::<i32>();\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  |\n+   |                  a null pointer is dereferenced\n+   |                  this code causes undefined behavior when executed\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:15:18\n+   |\n+LL |         let ub = *(core::ptr::null::<i16>() as *const i32);\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  |\n+   |                  a null pointer is dereferenced\n+   |                  this code causes undefined behavior when executed\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:17:18\n+   |\n+LL |         let ub = *(core::ptr::null::<i16>() as *mut i32 as *mut usize as *const u8);\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  |\n+   |                  a null pointer is dereferenced\n+   |                  this code causes undefined behavior when executed\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:19:19\n+   |\n+LL |         let ub = &*core::ptr::null::<i32>();\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                   |\n+   |                   a null pointer is dereferenced\n+   |                   this code causes undefined behavior when executed\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:21:29\n+   |\n+LL |         core::ptr::addr_of!(*core::ptr::null::<i32>());\n+   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                             |\n+   |                             a null pointer is dereferenced\n+   |                             this code causes undefined behavior when executed\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:23:32\n+   |\n+LL |         std::ptr::addr_of_mut!(*core::ptr::null_mut::<i32>());\n+   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                |\n+   |                                a null pointer is dereferenced\n+   |                                this code causes undefined behavior when executed\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:25:18\n+   |\n+LL |         let ub = *std::ptr::null::<i32>();\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  |\n+   |                  a null pointer is dereferenced\n+   |                  this code causes undefined behavior when executed\n+\n+error: Dereferencing a null pointer causes undefined behavior\n+  --> $DIR/lint-deref-nullptr.rs:27:18\n+   |\n+LL |         let ub = *std::ptr::null_mut::<i32>();\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  |\n+   |                  a null pointer is dereferenced\n+   |                  this code causes undefined behavior when executed\n+\n+error: aborting due to 10 previous errors\n+"}]}