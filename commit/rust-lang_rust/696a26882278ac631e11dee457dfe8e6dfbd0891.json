{"sha": "696a26882278ac631e11dee457dfe8e6dfbd0891", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NmEyNjg4MjI3OGFjNjMxZTExZGVlNDU3ZGZlOGU2ZGZiZDA4OTE=", "commit": {"author": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-09-14T04:31:12Z"}, "committer": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-09-14T04:31:12Z"}, "message": "fix depth for structs", "tree": {"sha": "a8443c5bf05486b1dab4c1c8993327832dc45feb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8443c5bf05486b1dab4c1c8993327832dc45feb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/696a26882278ac631e11dee457dfe8e6dfbd0891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/696a26882278ac631e11dee457dfe8e6dfbd0891", "html_url": "https://github.com/rust-lang/rust/commit/696a26882278ac631e11dee457dfe8e6dfbd0891", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/696a26882278ac631e11dee457dfe8e6dfbd0891/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8df89a5cbf868677c342e3fa06dc6ca9a784e59", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8df89a5cbf868677c342e3fa06dc6ca9a784e59", "html_url": "https://github.com/rust-lang/rust/commit/f8df89a5cbf868677c342e3fa06dc6ca9a784e59"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "536715ffadb15b7f7501ac78af5cd39c6791e413", "filename": "src/librustc/infer/error_reporting/different_lifetimes.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/696a26882278ac631e11dee457dfe8e6dfbd0891/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fdifferent_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/696a26882278ac631e11dee457dfe8e6dfbd0891/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fdifferent_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fdifferent_lifetimes.rs?ref=696a26882278ac631e11dee457dfe8e6dfbd0891", "patch": "@@ -287,6 +287,7 @@ impl<'a, 'gcx, 'tcx> Visitor<'gcx> for FindNestedTypeVisitor<'a, 'gcx, 'tcx> {\n                                           found_it: false,\n                                           bound_region: self.bound_region,\n                                           hir_map: self.hir_map,\n+                                          depth: self.depth,\n                                       };\n                 intravisit::walk_ty(subvisitor, arg); // call walk_ty; as visit_ty is empty,\n                 // this will visit only outermost type\n@@ -313,6 +314,7 @@ struct TyPathVisitor<'a, 'gcx: 'a + 'tcx, 'tcx: 'a> {\n     hir_map: &'a hir::map::Map<'gcx>,\n     found_it: bool,\n     bound_region: ty::BoundRegion,\n+    depth: u32,\n }\n \n impl<'a, 'gcx, 'tcx> Visitor<'gcx> for TyPathVisitor<'a, 'gcx, 'tcx> {\n@@ -326,7 +328,7 @@ impl<'a, 'gcx, 'tcx> Visitor<'gcx> for TyPathVisitor<'a, 'gcx, 'tcx> {\n         match (self.infcx.tcx.named_region(hir_id), self.bound_region) {\n             // the lifetime of the TyPath!\n             (Some(rl::Region::LateBoundAnon(debruijn_index, anon_index)), ty::BrAnon(br_index)) => {\n-                if debruijn_index.depth == 1 && anon_index == br_index {\n+                if debruijn_index.depth == self.depth && anon_index == br_index {\n                     self.found_it = true;\n                     return;\n                 }\n@@ -349,7 +351,8 @@ impl<'a, 'gcx, 'tcx> Visitor<'gcx> for TyPathVisitor<'a, 'gcx, 'tcx> {\n                 debug!(\"self.infcx.tcx.hir.local_def_id(id)={:?}\",\n                        self.infcx.tcx.hir.local_def_id(id));\n                 debug!(\"def_id={:?}\", def_id);\n-                if debruijn_index.depth == 1 && self.infcx.tcx.hir.local_def_id(id) == def_id {\n+                if debruijn_index.depth == self.depth &&\n+                   self.infcx.tcx.hir.local_def_id(id) == def_id {\n                     self.found_it = true;\n                     return; // we can stop visiting now\n                 }"}]}