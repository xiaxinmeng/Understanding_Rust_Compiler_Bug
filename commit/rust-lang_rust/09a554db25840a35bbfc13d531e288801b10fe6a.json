{"sha": "09a554db25840a35bbfc13d531e288801b10fe6a", "node_id": "C_kwDOAAsO6NoAKDA5YTU1NGRiMjU4NDBhMzViYmZjMTNkNTMxZTI4ODgwMWIxMGZlNmE", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-10-06T15:41:53Z"}, "committer": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-10-06T15:41:53Z"}, "message": "Merge commit '8f1ebdd18bdecc621f16baaf779898cc08cc2766' into clippyup", "tree": {"sha": "0457a657d75c7a60ef883f1b3e6253fd71ebbd59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0457a657d75c7a60ef883f1b3e6253fd71ebbd59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09a554db25840a35bbfc13d531e288801b10fe6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09a554db25840a35bbfc13d531e288801b10fe6a", "html_url": "https://github.com/rust-lang/rust/commit/09a554db25840a35bbfc13d531e288801b10fe6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09a554db25840a35bbfc13d531e288801b10fe6a/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d75b25faabdcf0a22fe37928917c4ab1761fa265", "url": "https://api.github.com/repos/rust-lang/rust/commits/d75b25faabdcf0a22fe37928917c4ab1761fa265", "html_url": "https://github.com/rust-lang/rust/commit/d75b25faabdcf0a22fe37928917c4ab1761fa265"}], "stats": {"total": 89, "additions": 20, "deletions": 69}, "files": [{"sha": "0bd1f8b784e8f3f5552c79c2af82a4c23a5c46fa", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/09a554db25840a35bbfc13d531e288801b10fe6a/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09a554db25840a35bbfc13d531e288801b10fe6a/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=09a554db25840a35bbfc13d531e288801b10fe6a", "patch": "@@ -357,7 +357,8 @@ impl<'tcx> LateLintPass<'tcx> for Attributes {\n                                                     \"wildcard_imports\"\n                                                         | \"enum_glob_use\"\n                                                         | \"redundant_pub_crate\"\n-                                                        | \"macro_use_imports\",\n+                                                        | \"macro_use_imports\"\n+                                                        | \"unsafe_removed_from_name\",\n                                                 )\n                                             })\n                                         {"}, {"sha": "99bef62f81436d48343eee7a921585b0664270de", "filename": "clippy_lints/src/format_args.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/09a554db25840a35bbfc13d531e288801b10fe6a/clippy_lints%2Fsrc%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09a554db25840a35bbfc13d531e288801b10fe6a/clippy_lints%2Fsrc%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat_args.rs?ref=09a554db25840a35bbfc13d531e288801b10fe6a", "patch": "@@ -8,7 +8,7 @@ use if_chain::if_chain;\n use itertools::Itertools;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, HirId, QPath};\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment};\n use rustc_middle::ty::Ty;\n use rustc_semver::RustcVersion;\n@@ -173,17 +173,10 @@ fn check_uninlined_args(cx: &LateContext<'_>, args: &FormatArgsExpn<'_>, call_si\n         return;\n     }\n \n-    // FIXME: Properly ignore a rare case where the format string is wrapped in a macro.\n-    // Example:  `format!(indoc!(\"{}\"), foo);`\n-    // If inlined, they will cause a compilation error:\n-    //     > to avoid ambiguity, `format_args!` cannot capture variables\n-    //     > when the format string is expanded from a macro\n-    // @Alexendoo explanation:\n-    //     > indoc! is a proc macro that is producing a string literal with its span\n-    //     > set to its input it's not marked as from expansion, and since it's compatible\n-    //     > tokenization wise clippy_utils::is_from_proc_macro wouldn't catch it either\n-    // This might be a relatively expensive test, so do it only we are ready to replace.\n-    // See more examples in tests/ui/uninlined_format_args.rs\n+    // Temporarily ignore multiline spans: https://github.com/rust-lang/rust/pull/102729#discussion_r988704308\n+    if fixes.iter().any(|(span, _)| cx.sess().source_map().is_multiline(*span)) {\n+        return;\n+    }\n \n     span_lint_and_then(\n         cx,"}, {"sha": "5a63c290a315fccffd9fbcad2071c7280cbc5e19", "filename": "clippy_utils/src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09a554db25840a35bbfc13d531e288801b10fe6a/clippy_utils%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09a554db25840a35bbfc13d531e288801b10fe6a/clippy_utils%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmacros.rs?ref=09a554db25840a35bbfc13d531e288801b10fe6a", "patch": "@@ -414,7 +414,7 @@ impl FormatString {\n \n struct FormatArgsValues<'tcx> {\n     /// Values passed after the format string and implicit captures. `[1, z + 2, x]` for\n-    /// `format!(\"{x} {} {y}\", 1, z + 2)`.\n+    /// `format!(\"{x} {} {}\", 1, z + 2)`.\n     value_args: Vec<&'tcx Expr<'tcx>>,\n     /// Maps an `rt::v1::Argument::position` or an `rt::v1::Count::Param` to its index in\n     /// `value_args`"}, {"sha": "3ca7a401902530446a86f271af9946a2f8bebb57", "filename": "tests/ui/uninlined_format_args.fixed", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/09a554db25840a35bbfc13d531e288801b10fe6a/tests%2Fui%2Funinlined_format_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/09a554db25840a35bbfc13d531e288801b10fe6a/tests%2Fui%2Funinlined_format_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args.fixed?ref=09a554db25840a35bbfc13d531e288801b10fe6a", "patch": "@@ -44,7 +44,9 @@ fn tester(fn_arg: i32) {\n     println!(\"val='{local_i32}'\"); // space+tab\n     println!(\"val='{local_i32}'\"); // tab+space\n     println!(\n-        \"val='{local_i32}'\"\n+        \"val='{\n+    }'\",\n+        local_i32\n     );\n     println!(\"{local_i32}\");\n     println!(\"{fn_arg}\");\n@@ -108,7 +110,8 @@ fn tester(fn_arg: i32) {\n     println!(\"{local_f64:width$.prec$}\");\n     println!(\"{local_f64:width$.prec$} {local_f64} {width} {prec}\");\n     println!(\n-        \"{local_i32:width$.prec$} {local_i32:prec$.width$} {width:local_i32$.prec$} {width:prec$.local_i32$} {prec:local_i32$.width$} {prec:width$.local_i32$}\",\n+        \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\",\n+        local_i32, width, prec,\n     );\n     println!(\n         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$} {3}\",\n@@ -139,7 +142,9 @@ fn tester(fn_arg: i32) {\n     println!(no_param_str!(), local_i32);\n \n     println!(\n-        \"{val}\",\n+        \"{}\",\n+        // comment with a comma , in it\n+        val,\n     );\n     println!(\"{val}\");\n "}, {"sha": "d1a7749263429d5a7a5c9978e8087a05f5732224", "filename": "tests/ui/uninlined_format_args.stderr", "status": "modified", "additions": 1, "deletions": 52, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/09a554db25840a35bbfc13d531e288801b10fe6a/tests%2Fui%2Funinlined_format_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09a554db25840a35bbfc13d531e288801b10fe6a/tests%2Fui%2Funinlined_format_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args.stderr?ref=09a554db25840a35bbfc13d531e288801b10fe6a", "patch": "@@ -59,22 +59,6 @@ LL -     println!(\"val='{     }'\", local_i32); // tab+space\n LL +     println!(\"val='{local_i32}'\"); // tab+space\n    |\n \n-error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:46:5\n-   |\n-LL | /     println!(\n-LL | |         \"val='{\n-LL | |     }'\",\n-LL | |         local_i32\n-LL | |     );\n-   | |_____^\n-   |\n-help: change this to\n-   |\n-LL -         \"val='{\n-LL +         \"val='{local_i32}'\"\n-   |\n-\n error: variables can be used directly in the `format!` string\n   --> $DIR/uninlined_format_args.rs:51:5\n    |\n@@ -783,25 +767,6 @@ LL -     println!(\"{:1$.2$} {0} {1} {2}\", local_f64, width, prec);\n LL +     println!(\"{local_f64:width$.prec$} {local_f64} {width} {prec}\");\n    |\n \n-error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:112:5\n-   |\n-LL | /     println!(\n-LL | |         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\",\n-LL | |         local_i32, width, prec,\n-LL | |     );\n-   | |_____^\n-   |\n-help: change this to\n-   |\n-LL ~         \"{local_i32:width$.prec$} {local_i32:prec$.width$} {width:local_i32$.prec$} {width:prec$.local_i32$} {prec:local_i32$.width$} {prec:width$.local_i32$}\", width, prec,\n-LL ~         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\", width, prec,\n-LL ~         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\", width, prec,\n-LL ~         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\", width, prec,\n-LL ~         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\", width, prec,\n-LL ~         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\",\n-   |\n-\n error: variables can be used directly in the `format!` string\n   --> $DIR/uninlined_format_args.rs:123:5\n    |\n@@ -850,22 +815,6 @@ LL -     println!(\"{}\", format!(\"{}\", local_i32));\n LL +     println!(\"{}\", format!(\"{local_i32}\"));\n    |\n \n-error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:144:5\n-   |\n-LL | /     println!(\n-LL | |         \"{}\",\n-LL | |         // comment with a comma , in it\n-LL | |         val,\n-LL | |     );\n-   | |_____^\n-   |\n-help: change this to\n-   |\n-LL -         \"{}\",\n-LL +         \"{val}\",\n-   |\n-\n error: variables can be used directly in the `format!` string\n   --> $DIR/uninlined_format_args.rs:149:5\n    |\n@@ -890,5 +839,5 @@ LL -     println!(\"expand='{}'\", local_i32);\n LL +     println!(\"expand='{local_i32}'\");\n    |\n \n-error: aborting due to 73 previous errors\n+error: aborting due to 70 previous errors\n "}, {"sha": "d29888ac62f6b4d2dc54db0361527c56ac5da524", "filename": "tests/ui/unsafe_removed_from_name.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/09a554db25840a35bbfc13d531e288801b10fe6a/tests%2Fui%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09a554db25840a35bbfc13d531e288801b10fe6a/tests%2Fui%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe_removed_from_name.rs?ref=09a554db25840a35bbfc13d531e288801b10fe6a", "patch": "@@ -24,4 +24,7 @@ use mod_with_some_unsafe_things::Unsafe as LieAboutModSafety;\n use mod_with_some_unsafe_things::Safe as IPromiseItsSafeThisTime;\n use mod_with_some_unsafe_things::Unsafe as SuperUnsafeModThing;\n \n+#[allow(clippy::unsafe_removed_from_name)]\n+use mod_with_some_unsafe_things::Unsafe as SuperSafeThing;\n+\n fn main() {}"}]}