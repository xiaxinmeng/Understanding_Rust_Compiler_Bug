{"sha": "91763d77251f7f84529b6802fe6172854641a520", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNzYzZDc3MjUxZjdmODQ1MjliNjgwMmZlNjE3Mjg1NDY0MWE1MjA=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-11-11T16:08:33Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-11-11T16:08:33Z"}, "message": "Match `min` and `max` functions using `DefId`\n\nCloses #446.", "tree": {"sha": "bf986a64385b3ee9ebbde4b3f357e6b0331d3889", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf986a64385b3ee9ebbde4b3f357e6b0331d3889"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91763d77251f7f84529b6802fe6172854641a520", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91763d77251f7f84529b6802fe6172854641a520", "html_url": "https://github.com/rust-lang/rust/commit/91763d77251f7f84529b6802fe6172854641a520", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91763d77251f7f84529b6802fe6172854641a520/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8509a0799ea9ad7d19160f7dadb20f07e361524", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8509a0799ea9ad7d19160f7dadb20f07e361524", "html_url": "https://github.com/rust-lang/rust/commit/c8509a0799ea9ad7d19160f7dadb20f07e361524"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "3171a95142274f79bda91250893f6a6d44cd490f", "filename": "src/minmax.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/91763d77251f7f84529b6802fe6172854641a520/src%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91763d77251f7f84529b6802fe6172854641a520/src%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fminmax.rs?ref=91763d77251f7f84529b6802fe6172854641a520", "patch": "@@ -5,7 +5,7 @@ use std::cmp::PartialOrd;\n use std::cmp::Ordering::*;\n \n use consts::{Constant, constant_simple};\n-use utils::{match_path, span_lint};\n+use utils::{match_def_path, span_lint};\n use self::MinMax::{Min, Max};\n \n declare_lint!(pub MIN_MAX, Warn,\n@@ -23,8 +23,8 @@ impl LintPass for MinMaxPass {\n \n impl LateLintPass for MinMaxPass {\n     fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n-        if let Some((outer_max, outer_c, oe)) = min_max(expr) {\n-            if let Some((inner_max, inner_c, _)) = min_max(oe) {\n+        if let Some((outer_max, outer_c, oe)) = min_max(cx, expr) {\n+            if let Some((inner_max, inner_c, _)) = min_max(cx, oe) {\n                 if outer_max == inner_max { return; }\n                 match (outer_max, outer_c.partial_cmp(&inner_c)) {\n                     (_, None) | (Max, Some(Less)) | (Min, Some(Greater)) => (),\n@@ -44,13 +44,15 @@ enum MinMax {\n     Max,\n }\n \n-fn min_max(expr: &Expr) -> Option<(MinMax, Constant, &Expr)> {\n+fn min_max<'a>(cx: &LateContext, expr: &'a Expr) -> Option<(MinMax, Constant, &'a Expr)> {\n     if let ExprCall(ref path, ref args) = expr.node {\n-        if let ExprPath(None, ref path) = path.node {\n-            if match_path(path, &[\"std\", \"cmp\", \"min\"]) {\n+        if let ExprPath(None, _) = path.node {\n+            let def_id = cx.tcx.def_map.borrow()[&path.id].def_id();\n+\n+            if match_def_path(cx, def_id, &[\"core\", \"cmp\", \"min\"]) {\n                 fetch_const(args, Min)\n             } else {\n-                if match_path(path, &[\"std\", \"cmp\", \"max\"]) {\n+                if match_def_path(cx, def_id, &[\"core\", \"cmp\", \"max\"]) {\n                     fetch_const(args, Max)\n                 } else {\n                     None"}, {"sha": "9a6794afebf1bf9931e647c8522859ba649b60fa", "filename": "tests/compile-fail/min_max.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91763d77251f7f84529b6802fe6172854641a520/tests%2Fcompile-fail%2Fmin_max.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91763d77251f7f84529b6802fe6172854641a520/tests%2Fcompile-fail%2Fmin_max.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmin_max.rs?ref=91763d77251f7f84529b6802fe6172854641a520", "patch": "@@ -4,6 +4,8 @@\n #![deny(clippy)]\n \n use std::cmp::{min, max};\n+use std::cmp::min as my_min;\n+use std::cmp::max as my_max;\n \n const LARGE : usize = 3;\n \n@@ -15,6 +17,8 @@ fn main() {\n     max(min(x, 1), 3); //~ERROR this min/max combination leads to constant result\n     max(3, min(x, 1)); //~ERROR this min/max combination leads to constant result\n \n+    my_max(3, my_min(x, 1)); //~ERROR this min/max combination leads to constant result\n+\n     min(3, max(1, x)); // ok, could be 1, 2 or 3 depending on x\n \n     min(1, max(LARGE, x)); // no error, we don't lookup consts here"}]}