{"sha": "10fde3393be6295c8df2ce6c016f3f37b25b58b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZmRlMzM5M2JlNjI5NWM4ZGYyY2U2YzAxNmYzZjM3YjI1YjU4Yjc=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-05-03T22:34:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-03T22:34:00Z"}, "message": "Rollup merge of #41600 - ranma42:xz-dist, r=alexcrichton\n\nGenerate XZ-compressed tarballs\n\nIntegrate the new `rust-installer` and extend manifests with keys for xz-compressed tarballs.\n\nOne of the steps required for https://github.com/rust-lang/rust/issues/21724", "tree": {"sha": "591e9b8aa406456f8c85dd69f2a3de384fc6b5a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/591e9b8aa406456f8c85dd69f2a3de384fc6b5a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10fde3393be6295c8df2ce6c016f3f37b25b58b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10fde3393be6295c8df2ce6c016f3f37b25b58b7", "html_url": "https://github.com/rust-lang/rust/commit/10fde3393be6295c8df2ce6c016f3f37b25b58b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10fde3393be6295c8df2ce6c016f3f37b25b58b7/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f06dfb4515b096b65980f7f93e53b70a1c583b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f06dfb4515b096b65980f7f93e53b70a1c583b3", "html_url": "https://github.com/rust-lang/rust/commit/9f06dfb4515b096b65980f7f93e53b70a1c583b3"}, {"sha": "98dd82c013b04af19eeb802562c1cf99c52010c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/98dd82c013b04af19eeb802562c1cf99c52010c5", "html_url": "https://github.com/rust-lang/rust/commit/98dd82c013b04af19eeb802562c1cf99c52010c5"}], "stats": {"total": 67, "additions": 43, "deletions": 24}, "files": [{"sha": "beb7b435cbadfce97a838e00cf728f6416e374c4", "filename": ".travis.yml", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/10fde3393be6295c8df2ce6c016f3f37b25b58b7/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/10fde3393be6295c8df2ce6c016f3f37b25b58b7/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=10fde3393be6295c8df2ce6c016f3f37b25b58b7", "patch": "@@ -95,7 +95,10 @@ matrix:\n         MACOSX_DEPLOYMENT_TARGET=10.7\n       os: osx\n       osx_image: xcode7\n-      install: *osx_install_sccache\n+      install:\n+        - travis_retry brew update\n+        - travis_retry brew install xz\n+        - *osx_install_sccache\n     - env: >\n         RUST_CHECK_TARGET=dist\n         RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-extended --enable-sanitizers\"\n@@ -106,7 +109,10 @@ matrix:\n         MACOSX_DEPLOYMENT_TARGET=10.7\n       os: osx\n       osx_image: xcode7\n-      install: *osx_install_sccache\n+      install:\n+        - travis_retry brew update\n+        - travis_retry brew install xz\n+        - *osx_install_sccache\n \n     # \"alternate\" deployments, these are \"nightlies\" but don't have assertions\n     # turned on, they're deployed to a different location primarily for projects\n@@ -123,7 +129,10 @@ matrix:\n         MACOSX_DEPLOYMENT_TARGET=10.7\n       os: osx\n       osx_image: xcode7\n-      install: *osx_install_sccache\n+      install:\n+        - travis_retry brew update\n+        - travis_retry brew install xz\n+        - *osx_install_sccache\n \n env:\n   global:"}, {"sha": "4cf7397fb0566e745f0bce4c5b009cfeb5d12c53", "filename": "src/rust-installer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frust-installer?ref=10fde3393be6295c8df2ce6c016f3f37b25b58b7", "patch": "@@ -1 +1 @@\n-Subproject commit 4f994850808a572e2cc8d43f968893c8e942e9bf\n+Subproject commit 4cf7397fb0566e745f0bce4c5b009cfeb5d12c53"}, {"sha": "ba37863b1f62d6af309bfac54385d15b6d9a31a3", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 30, "deletions": 20, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/10fde3393be6295c8df2ce6c016f3f37b25b58b7/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10fde3393be6295c8df2ce6c016f3f37b25b58b7/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=10fde3393be6295c8df2ce6c016f3f37b25b58b7", "patch": "@@ -116,10 +116,26 @@ struct Target {\n     available: bool,\n     url: Option<String>,\n     hash: Option<String>,\n+    xz_url: Option<String>,\n+    xz_hash: Option<String>,\n     components: Option<Vec<Component>>,\n     extensions: Option<Vec<Component>>,\n }\n \n+impl Target {\n+    fn unavailable() -> Target {\n+        Target {\n+            available: false,\n+            url: None,\n+            hash: None,\n+            xz_url: None,\n+            xz_hash: None,\n+            components: None,\n+            extensions: None,\n+        }\n+    }\n+}\n+\n #[derive(RustcEncodable)]\n struct Component {\n     pkg: String,\n@@ -242,16 +258,12 @@ impl Builder {\n             let digest = match self.digests.remove(&filename) {\n                 Some(digest) => digest,\n                 None => {\n-                    pkg.target.insert(host.to_string(), Target {\n-                        available: false,\n-                        url: None,\n-                        hash: None,\n-                        components: None,\n-                        extensions: None,\n-                    });\n+                    pkg.target.insert(host.to_string(), Target::unavailable());\n                     continue\n                 }\n             };\n+            let xz_filename = filename.replace(\".tar.gz\", \".tar.xz\");\n+            let xz_digest = self.digests.remove(&xz_filename);\n             let mut components = Vec::new();\n             let mut extensions = Vec::new();\n \n@@ -293,8 +305,10 @@ impl Builder {\n \n             pkg.target.insert(host.to_string(), Target {\n                 available: true,\n-                url: Some(self.url(\"rust\", host)),\n+                url: Some(self.url(&filename)),\n                 hash: Some(digest),\n+                xz_url: xz_digest.as_ref().map(|_| self.url(&xz_filename)),\n+                xz_hash: xz_digest,\n                 components: Some(components),\n                 extensions: Some(extensions),\n             });\n@@ -312,21 +326,17 @@ impl Builder {\n             let filename = self.filename(pkgname, name);\n             let digest = match self.digests.remove(&filename) {\n                 Some(digest) => digest,\n-                None => {\n-                    return (name.to_string(), Target {\n-                        available: false,\n-                        url: None,\n-                        hash: None,\n-                        components: None,\n-                        extensions: None,\n-                    })\n-                }\n+                None => return (name.to_string(), Target::unavailable()),\n             };\n+            let xz_filename = filename.replace(\".tar.gz\", \".tar.xz\");\n+            let xz_digest = self.digests.remove(&xz_filename);\n \n             (name.to_string(), Target {\n                 available: true,\n-                url: Some(self.url(pkgname, name)),\n+                url: Some(self.url(&filename)),\n                 hash: Some(digest),\n+                xz_url: xz_digest.as_ref().map(|_| self.url(&xz_filename)),\n+                xz_hash: xz_digest,\n                 components: None,\n                 extensions: None,\n             })\n@@ -338,11 +348,11 @@ impl Builder {\n         });\n     }\n \n-    fn url(&self, component: &str, target: &str) -> String {\n+    fn url(&self, filename: &str) -> String {\n         format!(\"{}/{}/{}\",\n                 self.s3_address,\n                 self.date,\n-                self.filename(component, target))\n+                filename)\n     }\n \n     fn filename(&self, component: &str, target: &str) -> String {"}]}