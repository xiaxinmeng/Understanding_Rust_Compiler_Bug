{"sha": "10606c3caf42124bf5b8069647badc0cfcc31a89", "node_id": "C_kwDOAAsO6NoAKDEwNjA2YzNjYWY0MjEyNGJmNWI4MDY5NjQ3YmFkYzBjZmNjMzFhODk", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-01T04:07:32Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-01T04:10:32Z"}, "message": "rustdoc: Small micro-optimizations and cleanups\n\n* Flip conjuncts of `&&` in rustdoc\n\n  The `CrateNum` comparison should be very cheap, while\n  `span.filename()` fetches and clones a `FileName`.\n\n* Use `into_local_path()` instead of `local_path().clone()`", "tree": {"sha": "fe1b3a13b78813c151a2a4bb427e060aec6b484a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe1b3a13b78813c151a2a4bb427e060aec6b484a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10606c3caf42124bf5b8069647badc0cfcc31a89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10606c3caf42124bf5b8069647badc0cfcc31a89", "html_url": "https://github.com/rust-lang/rust/commit/10606c3caf42124bf5b8069647badc0cfcc31a89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10606c3caf42124bf5b8069647badc0cfcc31a89/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ee2d0351a67e382f56a85eaeada0b7c773f0691", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee2d0351a67e382f56a85eaeada0b7c773f0691", "html_url": "https://github.com/rust-lang/rust/commit/4ee2d0351a67e382f56a85eaeada0b7c773f0691"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "c8e93374e63ccd7abf8827a15c5e03cf31ef363d", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/10606c3caf42124bf5b8069647badc0cfcc31a89/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10606c3caf42124bf5b8069647badc0cfcc31a89/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=10606c3caf42124bf5b8069647badc0cfcc31a89", "patch": "@@ -44,7 +44,7 @@ struct LocalSourcesCollector<'a, 'tcx> {\n }\n \n fn is_real_and_local(span: clean::Span, sess: &Session) -> bool {\n-    span.filename(sess).is_real() && span.cnum(sess) == LOCAL_CRATE\n+    span.cnum(sess) == LOCAL_CRATE && span.filename(sess).is_real()\n }\n \n impl LocalSourcesCollector<'_, '_> {\n@@ -56,12 +56,13 @@ impl LocalSourcesCollector<'_, '_> {\n             return;\n         }\n         let filename = span.filename(sess);\n-        let p = match filename {\n-            FileName::Real(ref file) => match file.local_path() {\n-                Some(p) => p.to_path_buf(),\n-                _ => return,\n-            },\n-            _ => return,\n+        let p = if let FileName::Real(file) = filename {\n+            match file.into_local_path() {\n+                Some(p) => p,\n+                None => return,\n+            }\n+        } else {\n+            return;\n         };\n         if self.local_sources.contains_key(&*p) {\n             // We've already emitted this source"}]}