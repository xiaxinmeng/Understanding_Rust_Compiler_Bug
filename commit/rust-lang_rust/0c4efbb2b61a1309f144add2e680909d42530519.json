{"sha": "0c4efbb2b61a1309f144add2e680909d42530519", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNGVmYmIyYjYxYTEzMDlmMTQ0YWRkMmU2ODA5MDlkNDI1MzA1MTk=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-05-04T13:57:20Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-05-04T13:57:20Z"}, "message": "Error out when parse_subtree is not a subtree", "tree": {"sha": "58bf92ac4826c991a9dbe7c91098c5baa90c63dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58bf92ac4826c991a9dbe7c91098c5baa90c63dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c4efbb2b61a1309f144add2e680909d42530519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c4efbb2b61a1309f144add2e680909d42530519", "html_url": "https://github.com/rust-lang/rust/commit/0c4efbb2b61a1309f144add2e680909d42530519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c4efbb2b61a1309f144add2e680909d42530519/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1febf2e6d4606a7e0eb422cdeba5dd286b10794", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1febf2e6d4606a7e0eb422cdeba5dd286b10794", "html_url": "https://github.com/rust-lang/rust/commit/b1febf2e6d4606a7e0eb422cdeba5dd286b10794"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "11078368900866f4d9aba949d1ceebdc3bb6f496", "filename": "crates/ra_mbe/src/mbe_parser.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0c4efbb2b61a1309f144add2e680909d42530519/crates%2Fra_mbe%2Fsrc%2Fmbe_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4efbb2b61a1309f144add2e680909d42530519/crates%2Fra_mbe%2Fsrc%2Fmbe_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_parser.rs?ref=0c4efbb2b61a1309f144add2e680909d42530519", "patch": "@@ -34,11 +34,14 @@ fn parse_subtree(tt: &tt::Subtree, transcriber: bool) -> Result<crate::Subtree,\n     while let Some(tt) = p.eat() {\n         let child: crate::TokenTree = match tt {\n             tt::TokenTree::Leaf(leaf) => match leaf {\n-                tt::Leaf::Punct(tt::Punct { char: '$', .. }) => {\n+                tt::Leaf::Punct(tt::Punct { char: '$', spacing }) => {\n                     if p.at_ident().is_some() {\n                         crate::Leaf::from(parse_var(&mut p, transcriber)?).into()\n-                    } else {\n+                    } else if let Some(tt::TokenTree::Subtree(_)) = p.current() {\n                         parse_repeat(&mut p, transcriber)?.into()\n+                    } else {\n+                        // Treat it as normal punct\n+                        crate::Leaf::from(tt::Punct { char: '$', spacing: *spacing }).into()\n                     }\n                 }\n                 tt::Leaf::Punct(punct) => crate::Leaf::from(*punct).into(),\n@@ -89,7 +92,7 @@ fn mk_repeat(\n }\n \n fn parse_repeat(p: &mut TtCursor, transcriber: bool) -> Result<crate::Repeat, ParseError> {\n-    let subtree = p.eat_subtree().unwrap();\n+    let subtree = p.eat_subtree()?;\n     let mut subtree = parse_subtree(subtree, transcriber)?;\n     subtree.delimiter = crate::Delimiter::None;\n "}]}