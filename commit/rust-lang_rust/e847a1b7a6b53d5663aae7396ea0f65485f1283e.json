{"sha": "e847a1b7a6b53d5663aae7396ea0f65485f1283e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NDdhMWI3YTZiNTNkNTY2M2FhZTczOTZlYTBmNjU0ODVmMTI4M2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-09T09:47:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-09T09:47:34Z"}, "message": "hihglihgitng tests", "tree": {"sha": "b501e3330b77368c28533fcccfbcb64bb785b107", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b501e3330b77368c28533fcccfbcb64bb785b107"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e847a1b7a6b53d5663aae7396ea0f65485f1283e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e847a1b7a6b53d5663aae7396ea0f65485f1283e", "html_url": "https://github.com/rust-lang/rust/commit/e847a1b7a6b53d5663aae7396ea0f65485f1283e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e847a1b7a6b53d5663aae7396ea0f65485f1283e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34bf0a0b180a4c56cf43c34080a074e6e7537e18", "url": "https://api.github.com/repos/rust-lang/rust/commits/34bf0a0b180a4c56cf43c34080a074e6e7537e18", "html_url": "https://github.com/rust-lang/rust/commit/34bf0a0b180a4c56cf43c34080a074e6e7537e18"}], "stats": {"total": 68, "additions": 49, "deletions": 19}, "files": [{"sha": "750d800386c6a110ea97f19b213604f8d7c9e8db", "filename": "libeditor/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e847a1b7a6b53d5663aae7396ea0f65485f1283e/libeditor%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e847a1b7a6b53d5663aae7396ea0f65485f1283e/libeditor%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/libeditor%2FCargo.toml?ref=e847a1b7a6b53d5663aae7396ea0f65485f1283e", "patch": "@@ -6,3 +6,4 @@ publish = false\n \n [dependencies]\n libsyntax2 = { path = \"../\" }\n+itertools = \"0.7.8\""}, {"sha": "ef31efe35ea2624c51acfa7a979685e577450f5e", "filename": "libeditor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e847a1b7a6b53d5663aae7396ea0f65485f1283e/libeditor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e847a1b7a6b53d5663aae7396ea0f65485f1283e/libeditor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/libeditor%2Fsrc%2Flib.rs?ref=e847a1b7a6b53d5663aae7396ea0f65485f1283e", "patch": "@@ -13,6 +13,7 @@ pub struct File {\n     inner: libsyntax2::File\n }\n \n+#[derive(Debug)]\n pub struct HighlightedRange {\n     pub range: TextRange,\n     pub tag: &'static str,\n@@ -102,22 +103,3 @@ impl<'f> Declaration<'f> {\n         self.0.range()\n     }\n }\n-\n-#[cfg(test)]\n-mod tests {\n-    use super::*;\n-\n-    #[test]\n-    fn test_extend_selection() {\n-        let text = r#\"fn foo() {\n-    1 + 1\n-}\n-\"#;\n-        let file = File::new(text);\n-        let range = TextRange::offset_len(18.into(), 0.into());\n-        let range = file.extend_selection(range).unwrap();\n-        assert_eq!(range, TextRange::from_to(17.into(), 18.into()));\n-        let range = file.extend_selection(range).unwrap();\n-        assert_eq!(range, TextRange::from_to(15.into(), 20.into()));\n-    }\n-}"}, {"sha": "e1c8aee4bfc79c94b8e175d996110e7165af6091", "filename": "libeditor/tests/test.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/e847a1b7a6b53d5663aae7396ea0f65485f1283e/libeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e847a1b7a6b53d5663aae7396ea0f65485f1283e/libeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/libeditor%2Ftests%2Ftest.rs?ref=e847a1b7a6b53d5663aae7396ea0f65485f1283e", "patch": "@@ -0,0 +1,47 @@\n+extern crate libeditor;\n+extern crate itertools;\n+\n+use std::fmt;\n+use itertools::Itertools;\n+use libeditor::{File, TextRange};\n+\n+#[test]\n+fn test_extend_selection() {\n+    let file = file(r#\"fn foo() {\n+    1 + 1\n+}\n+\"#);\n+    let range = TextRange::offset_len(18.into(), 0.into());\n+    let range = file.extend_selection(range).unwrap();\n+    assert_eq!(range, TextRange::from_to(17.into(), 18.into()));\n+    let range = file.extend_selection(range).unwrap();\n+    assert_eq!(range, TextRange::from_to(15.into(), 20.into()));\n+}\n+\n+#[test]\n+fn test_highlighting() {\n+    let file = file(r#\"\n+// comment\n+fn main() {}\n+    println!(\"Hello, {}!\", 92);\n+\"#);\n+    let hls = file.highlight();\n+    dbg_eq(\n+        &hls,\n+        r#\"[HighlightedRange { range: [1; 11), tag: \"comment\" },\n+            HighlightedRange { range: [12; 14), tag: \"keyword\" },\n+            HighlightedRange { range: [15; 19), tag: \"function\" },\n+            HighlightedRange { range: [29; 36), tag: \"text\" },\n+            HighlightedRange { range: [38; 50), tag: \"string\" },\n+            HighlightedRange { range: [52; 54), tag: \"literal\" }]\"#\n+    );\n+}\n+\n+fn file(text: &str) -> File {\n+    File::new(text)\n+}\n+\n+fn dbg_eq(actual: &impl fmt::Debug, expected: &str) {\n+    let expected = expected.lines().map(|l| l.trim()).join(\" \");\n+    assert_eq!(actual, expected);\n+}"}]}