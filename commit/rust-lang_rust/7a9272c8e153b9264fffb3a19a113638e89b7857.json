{"sha": "7a9272c8e153b9264fffb3a19a113638e89b7857", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhOTI3MmM4ZTE1M2I5MjY0ZmZmYjNhMTlhMTEzNjM4ZTg5Yjc4NTc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-21T07:43:45Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-21T07:43:45Z"}, "message": "no need to cast chars as u32 before casting to u64", "tree": {"sha": "847ef5a191baae13cf6dc27668a82e1abb846483", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/847ef5a191baae13cf6dc27668a82e1abb846483"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a9272c8e153b9264fffb3a19a113638e89b7857", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXaPAxAAoJEFbW7qD8Z6xGXvYQAJMag2O7dqDQT7UfHYX/wYMv\nk7WC2OnwEKV2NFAjk07I/31DPlCIbt7UekFZ2SEIbKXPkjYscbBV2DAYexX5LbUu\nPx70/l+QJT4LsmBm2sZ4e7eQzXu1r9niuaq6E8TBuQ4iWzKFPQvw3QkLddF8PjUg\nmpuHPYcY3b7PcZYp7tifXxMflcZKaTvDUKWmMzjKokj595E4t3td5MtDERKGZYA8\ne3hyyfmv3ly3+S/ZCgRmt5GuYL7PP868HMugiQndMAdHqyx9an0a1GLLLQzNsZqL\nSw/045OLlHcSwjK/LYMUGM2qVjQhwvIL4nC2oxJdE3mleDvyJNrQ5+p9VPtD5R+d\nW20Hw2Fdm7K5xO0pzn+X/HOOaGfM84MB5WDeLI+RNYRibL9NyDUdgvmhoG0IyRRq\npGLGDD0+I99Nsd54j+GkKfotEbVu6zrnV5mgBUswtkVpp050UDwqa4MPOiqMsHqk\n/ecUlfTy/tfnnaIJBt5HoT6aDCPG5I2vC9EtYnHvtzVdsvQLPt2ov3WZNjDVPkD4\n4GHA5y1n2R3vJ2VuUNnDZJs9K9t3ePX3/pV2sqmDsNPLmUkPyPpdLsKN84wq9C3j\nCkm65uBDcvmldOCI2HyB4Ctu0PKn0oaBEQ9Z5SeW73VFr5FrY22pb+CWYAz78+ie\nBhE39C9C5pv1HINV69gC\n=pndB\n-----END PGP SIGNATURE-----", "payload": "tree 847ef5a191baae13cf6dc27668a82e1abb846483\nparent 422e5edd28bba8599bf3e816f67d2746528c1af8\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466495025 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466495025 +0200\n\nno need to cast chars as u32 before casting to u64"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a9272c8e153b9264fffb3a19a113638e89b7857", "html_url": "https://github.com/rust-lang/rust/commit/7a9272c8e153b9264fffb3a19a113638e89b7857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a9272c8e153b9264fffb3a19a113638e89b7857/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "422e5edd28bba8599bf3e816f67d2746528c1af8", "url": "https://api.github.com/repos/rust-lang/rust/commits/422e5edd28bba8599bf3e816f67d2746528c1af8", "html_url": "https://github.com/rust-lang/rust/commit/422e5edd28bba8599bf3e816f67d2746528c1af8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "18f97f02697d76cc2406e6fcce1d049aebe96c20", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a9272c8e153b9264fffb3a19a113638e89b7857/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a9272c8e153b9264fffb3a19a113638e89b7857/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=7a9272c8e153b9264fffb3a19a113638e89b7857", "patch": "@@ -210,7 +210,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             }\n             Char(c) => {\n                 let ptr = self.memory.allocate(4);\n-                self.memory.write_uint(ptr, c as u32 as u64, 4)?;\n+                self.memory.write_uint(ptr, c as u64, 4)?;\n                 Ok(ptr)\n             },\n             Struct(_node_id)  => unimplemented!(),"}, {"sha": "a16fbc57a612a980bd97ca96d1a034758807f205", "filename": "src/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a9272c8e153b9264fffb3a19a113638e89b7857/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a9272c8e153b9264fffb3a19a113638e89b7857/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=7a9272c8e153b9264fffb3a19a113638e89b7857", "patch": "@@ -369,7 +369,7 @@ impl<'tcx> Memory<'tcx> {\n             PrimVal::U16(n)  => self.write_uint(ptr, n as u64, 2),\n             PrimVal::U32(n)  => self.write_uint(ptr, n as u64, 4),\n             PrimVal::U64(n)  => self.write_uint(ptr, n as u64, 8),\n-            PrimVal::Char(c) => self.write_uint(ptr, c as u32 as u64, 4),\n+            PrimVal::Char(c) => self.write_uint(ptr, c as u64, 4),\n             PrimVal::IntegerPtr(n) => self.write_uint(ptr, n as u64, pointer_size),\n             PrimVal::FnPtr(_p) |\n             PrimVal::AbstractPtr(_p) => unimplemented!(),"}]}