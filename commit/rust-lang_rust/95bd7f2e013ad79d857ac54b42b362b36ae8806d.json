{"sha": "95bd7f2e013ad79d857ac54b42b362b36ae8806d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YmQ3ZjJlMDEzYWQ3OWQ4NTdhYzU0YjQyYjM2MmIzNmFlODgwNmQ=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2017-03-16T20:10:04Z"}, "committer": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2017-03-16T20:10:04Z"}, "message": "add missing global metadata", "tree": {"sha": "0f09b103165f0fcc5ae282e94e21a32c97a262d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f09b103165f0fcc5ae282e94e21a32c97a262d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95bd7f2e013ad79d857ac54b42b362b36ae8806d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95bd7f2e013ad79d857ac54b42b362b36ae8806d", "html_url": "https://github.com/rust-lang/rust/commit/95bd7f2e013ad79d857ac54b42b362b36ae8806d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95bd7f2e013ad79d857ac54b42b362b36ae8806d/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "222ca3c4a550e001e0b1bb957f0035d6bd753d4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/222ca3c4a550e001e0b1bb957f0035d6bd753d4a", "html_url": "https://github.com/rust-lang/rust/commit/222ca3c4a550e001e0b1bb957f0035d6bd753d4a"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5ab786f40b9335aca5b7a36d5e0af99c8869e995", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/95bd7f2e013ad79d857ac54b42b362b36ae8806d/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/95bd7f2e013ad79d857ac54b42b362b36ae8806d/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=95bd7f2e013ad79d857ac54b42b362b36ae8806d", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #include \"rustllvm.h\"\n+#include \"llvm/IR/DebugInfoMetadata.h\"\n #include \"llvm/IR/DiagnosticInfo.h\"\n #include \"llvm/IR/DiagnosticPrinter.h\"\n #include \"llvm/IR/Instructions.h\"\n@@ -594,7 +595,7 @@ extern \"C\" LLVMRustMetadataRef LLVMRustDIBuilderCreateStaticVariable(\n     const char *LinkageName, LLVMRustMetadataRef File, unsigned LineNo,\n     LLVMRustMetadataRef Ty, bool IsLocalToUnit, LLVMValueRef V,\n     LLVMRustMetadataRef Decl = nullptr, uint32_t AlignInBits = 0) {\n-  Constant *InitVal = cast<Constant>(unwrap(V));\n+  llvm::GlobalVariable *InitVal = cast<llvm::GlobalVariable>(unwrap(V));\n \n #if LLVM_VERSION_GE(4, 0)\n   llvm::DIExpression *InitExpr = nullptr;\n@@ -607,10 +608,14 @@ extern \"C\" LLVMRustMetadataRef LLVMRustDIBuilderCreateStaticVariable(\n         FPVal->getValueAPF().bitcastToAPInt().getZExtValue());\n   }\n \n-  return wrap(Builder->createGlobalVariableExpression(\n+  llvm::DIGlobalVariableExpression *VarExpr = Builder->createGlobalVariableExpression(\n       unwrapDI<DIDescriptor>(Context), Name, LinkageName,\n       unwrapDI<DIFile>(File), LineNo, unwrapDI<DIType>(Ty), IsLocalToUnit,\n-      InitExpr, unwrapDIPtr<MDNode>(Decl), AlignInBits));\n+      InitExpr, unwrapDIPtr<MDNode>(Decl), AlignInBits);\n+\n+  InitVal->setMetadata(\"dbg\", VarExpr);\n+\n+  return wrap(VarExpr);\n #else\n   return wrap(Builder->createGlobalVariable(\n       unwrapDI<DIDescriptor>(Context), Name, LinkageName,"}]}