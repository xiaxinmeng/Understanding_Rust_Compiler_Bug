{"sha": "fb4f9a0ad7a4656beb01c85b02b3e6ef15d914ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNGY5YTBhZDdhNDY1NmJlYjAxYzg1YjAyYjNlNmVmMTVkOTE0ZWM=", "commit": {"author": {"name": "Teddy_Wang", "email": "wangtheo662@gmail.com", "date": "2020-06-23T15:40:38Z"}, "committer": {"name": "Teddy_Wang", "email": "wangtheo662@gmail.com", "date": "2020-06-23T15:40:38Z"}, "message": "Fix pattern match of ExprKind::MethodCall", "tree": {"sha": "ed356bf08562c682def98cae56ffa63cd6bdf11a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed356bf08562c682def98cae56ffa63cd6bdf11a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb4f9a0ad7a4656beb01c85b02b3e6ef15d914ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4f9a0ad7a4656beb01c85b02b3e6ef15d914ec", "html_url": "https://github.com/rust-lang/rust/commit/fb4f9a0ad7a4656beb01c85b02b3e6ef15d914ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb4f9a0ad7a4656beb01c85b02b3e6ef15d914ec/comments", "author": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40ee620e51c86c72e3c2b65df71f5f0a4a79797f", "url": "https://api.github.com/repos/rust-lang/rust/commits/40ee620e51c86c72e3c2b65df71f5f0a4a79797f", "html_url": "https://github.com/rust-lang/rust/commit/40ee620e51c86c72e3c2b65df71f5f0a4a79797f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6607a26b130ddd13b381f793a014e12865d53540", "filename": "clippy_lints/src/map_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb4f9a0ad7a4656beb01c85b02b3e6ef15d914ec/clippy_lints%2Fsrc%2Fmap_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb4f9a0ad7a4656beb01c85b02b3e6ef15d914ec/clippy_lints%2Fsrc%2Fmap_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_identity.rs?ref=fb4f9a0ad7a4656beb01c85b02b3e6ef15d914ec", "patch": "@@ -61,7 +61,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MapIdentity {\n /// map(). Otherwise, returns None.\n fn get_map_argument<'a>(cx: &LateContext<'_, '_>, expr: &'a Expr<'a>) -> Option<&'a [Expr<'a>]> {\n     if_chain! {\n-        if let ExprKind::MethodCall(ref method, _, ref args) = expr.kind;\n+        if let ExprKind::MethodCall(ref method, _, ref args, _) = expr.kind;\n         if args.len() == 2 && method.ident.as_str() == \"map\";\n         let caller_ty = cx.tables.expr_ty(&args[0]);\n         if match_trait_method(cx, expr, &paths::ITERATOR)"}]}