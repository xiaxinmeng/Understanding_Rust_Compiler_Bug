{"sha": "e910d40e6a650c06edc6e43a77a823170c47b4f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MTBkNDBlNmE2NTBjMDZlZGM2ZTQzYTc3YTgyMzE3MGM0N2I0ZjI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-18T18:11:39Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-18T18:11:39Z"}, "message": "Add error message for missing MIR.", "tree": {"sha": "e78654b3f110f8b48b7cbba030c4915e55880203", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e78654b3f110f8b48b7cbba030c4915e55880203"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e910d40e6a650c06edc6e43a77a823170c47b4f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e910d40e6a650c06edc6e43a77a823170c47b4f2", "html_url": "https://github.com/rust-lang/rust/commit/e910d40e6a650c06edc6e43a77a823170c47b4f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e910d40e6a650c06edc6e43a77a823170c47b4f2/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31b8c1777037a92ba818e9461e2927b2791eb7b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/31b8c1777037a92ba818e9461e2927b2791eb7b5", "html_url": "https://github.com/rust-lang/rust/commit/31b8c1777037a92ba818e9461e2927b2791eb7b5"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "80a86764c44bf5c292d745531a13981ed1fbcc95", "filename": "src/interpreter.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e910d40e6a650c06edc6e43a77a823170c47b4f2/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e910d40e6a650c06edc6e43a77a823170c47b4f2/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=e910d40e6a650c06edc6e43a77a823170c47b4f2", "patch": "@@ -743,7 +743,9 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n \n                 use rustc::middle::cstore::CrateStore;\n                 let cs = &self.tcx.sess.cstore;\n-                let mir = cs.maybe_get_item_mir(self.tcx, def_id).unwrap();\n+                let mir = cs.maybe_get_item_mir(self.tcx, def_id).unwrap_or_else(|| {\n+                    panic!(\"no mir for {:?}\", def_id);\n+                });\n                 let cached = Rc::new(mir);\n                 mir_cache.insert(def_id, cached.clone());\n                 CachedMir::Owned(cached)"}]}