{"sha": "795673ae2060198cdb09c6ded8d303c244dac6fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NTY3M2FlMjA2MDE5OGNkYjA5YzZkZWQ4ZDMwM2MyNDRkYWM2ZmQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-01-07T21:07:22Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-02-16T11:02:37Z"}, "message": "Remove librustc_infer crate re-exports.", "tree": {"sha": "2ccd6e0977b6aa047131f843969a365e5f4ed490", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ccd6e0977b6aa047131f843969a365e5f4ed490"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/795673ae2060198cdb09c6ded8d303c244dac6fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/795673ae2060198cdb09c6ded8d303c244dac6fd", "html_url": "https://github.com/rust-lang/rust/commit/795673ae2060198cdb09c6ded8d303c244dac6fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/795673ae2060198cdb09c6ded8d303c244dac6fd/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bee6a5ac1274201e7da2081a5aff6b3b1f407185", "url": "https://api.github.com/repos/rust-lang/rust/commits/bee6a5ac1274201e7da2081a5aff6b3b1f407185", "html_url": "https://github.com/rust-lang/rust/commit/bee6a5ac1274201e7da2081a5aff6b3b1f407185"}], "stats": {"total": 306, "additions": 150, "deletions": 156}, "files": [{"sha": "156b5a8b0b50bd593e4c581c3b6175b206d1f4ee", "filename": "src/librustc_infer/infer/at.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fat.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -27,8 +27,8 @@\n \n use super::*;\n \n-use crate::ty::relate::{Relate, TypeRelation};\n-use crate::ty::Const;\n+use rustc::ty::relate::{Relate, TypeRelation};\n+use rustc::ty::Const;\n \n pub struct At<'a, 'tcx> {\n     pub infcx: &'a InferCtxt<'a, 'tcx>,"}, {"sha": "ecd7281351def8766ce1b15f381baae547270667", "filename": "src/librustc_infer/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -10,10 +10,10 @@ use crate::infer::canonical::{\n     OriginalQueryValues,\n };\n use crate::infer::InferCtxt;\n-use crate::ty::flags::FlagComputation;\n-use crate::ty::fold::{TypeFoldable, TypeFolder};\n-use crate::ty::subst::GenericArg;\n-use crate::ty::{self, BoundVar, InferConst, List, Ty, TyCtxt, TypeFlags};\n+use rustc::ty::flags::FlagComputation;\n+use rustc::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc::ty::subst::GenericArg;\n+use rustc::ty::{self, BoundVar, InferConst, List, Ty, TyCtxt, TypeFlags};\n use std::sync::atomic::Ordering;\n \n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "f4196e576054af9fc2224d71d5abb8db8d040746", "filename": "src/librustc_infer/infer/canonical/query_response.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -7,7 +7,6 @@\n //!\n //! [c]: https://rust-lang.github.io/rustc-guide/traits/canonicalization.html\n \n-use crate::arena::ArenaAllocatable;\n use crate::infer::canonical::substitute::{substitute_value, CanonicalExt};\n use crate::infer::canonical::{\n     Canonical, CanonicalVarValues, CanonicalizedQueryResponse, Certainty, OriginalQueryValues,\n@@ -19,6 +18,7 @@ use crate::infer::{InferCtxt, InferOk, InferResult};\n use crate::traits::query::{Fallible, NoSolution};\n use crate::traits::TraitEngine;\n use crate::traits::{Obligation, ObligationCause, PredicateObligation};\n+use rustc::arena::ArenaAllocatable;\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::{GenericArg, GenericArgKind};\n use rustc::ty::{self, BoundVar, Ty, TyCtxt};"}, {"sha": "99ddedfe8815ba50941c10fb3da78b4e6822835f", "filename": "src/librustc_infer/infer/canonical/substitute.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -7,9 +7,9 @@\n //! [c]: https://rust-lang.github.io/rustc-guide/traits/canonicalization.html\n \n use crate::infer::canonical::{Canonical, CanonicalVarValues};\n-use crate::ty::fold::TypeFoldable;\n-use crate::ty::subst::GenericArgKind;\n-use crate::ty::{self, TyCtxt};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::subst::GenericArgKind;\n+use rustc::ty::{self, TyCtxt};\n \n pub(super) trait CanonicalExt<'tcx, V> {\n     /// Instantiate the wrapped value, replacing each canonical value"}, {"sha": "a10af56a0f0a8d02eebf5386d548bb54f022a5e1", "filename": "src/librustc_infer/infer/combine.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcombine.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -33,12 +33,12 @@ use super::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use super::{InferCtxt, MiscVariable, TypeTrace};\n \n use crate::traits::{Obligation, PredicateObligations};\n-use crate::ty::error::TypeError;\n-use crate::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use crate::ty::subst::SubstsRef;\n-use crate::ty::{self, InferConst, Ty, TyCtxt};\n-use crate::ty::{IntType, UintType};\n \n+use rustc::ty::error::TypeError;\n+use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc::ty::subst::SubstsRef;\n+use rustc::ty::{self, InferConst, Ty, TyCtxt};\n+use rustc::ty::{IntType, UintType};\n use rustc_hir::def_id::DefId;\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast;"}, {"sha": "c1eec6832b82663593cedf1f8628979de07ebb57", "filename": "src/librustc_infer/infer/equate.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fequate.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,10 +1,10 @@\n use super::combine::{CombineFields, RelationDir};\n use super::Subtype;\n \n-use crate::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use crate::ty::subst::SubstsRef;\n-use crate::ty::TyVar;\n-use crate::ty::{self, Ty, TyCtxt};\n+use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc::ty::subst::SubstsRef;\n+use rustc::ty::TyVar;\n+use rustc::ty::{self, Ty, TyCtxt};\n \n use rustc_hir::def_id::DefId;\n "}, {"sha": "c8a465654b63fbeb6785e21eabf71f66ccbe0487", "filename": "src/librustc_infer/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,8 +1,8 @@\n-use crate::hir::map::Map;\n use crate::infer::type_variable::TypeVariableOriginKind;\n use crate::infer::InferCtxt;\n-use crate::ty::print::Print;\n-use crate::ty::{self, DefIdTree, Infer, Ty, TyVar};\n+use rustc::hir::map::Map;\n+use rustc::ty::print::Print;\n+use rustc::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace};"}, {"sha": "1a09729ef6443dde38b1e979c93e79004a01f0c4", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/different_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -3,7 +3,7 @@\n \n use crate::infer::error_reporting::nice_region_error::util::AnonymousParamInfo;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use crate::util::common::ErrorReported;\n+use rustc::util::common::ErrorReported;\n \n use rustc_errors::struct_span_err;\n "}, {"sha": "2ae7f4cc04f981611aa6220dc7cf96d280a7fba5", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/find_anon_type.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n-use crate::hir::map::Map;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use crate::middle::resolve_lifetime as rl;\n-use crate::ty::{self, Region, TyCtxt};\n+use rustc::hir::map::Map;\n+use rustc::middle::resolve_lifetime as rl;\n+use rustc::ty::{self, Region, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::Node;"}, {"sha": "d8c314a0d2f1f67867f6786498dae06d1d0a1d43", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,8 +1,8 @@\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::*;\n use crate::infer::InferCtxt;\n-use crate::ty::{self, TyCtxt};\n-use crate::util::common::ErrorReported;\n+use rustc::ty::{self, TyCtxt};\n+use rustc::util::common::ErrorReported;\n use rustc_errors::DiagnosticBuilder;\n use rustc_span::source_map::Span;\n "}, {"sha": "b31975560530537be8ce9153aab7d24a9c14c568", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n //! Error Reporting for Anonymous Region Lifetime Errors\n //! where one region is named and the other is anonymous.\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use crate::ty;\n+use rustc::ty;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir::{FunctionRetTy, TyKind};\n "}, {"sha": "d88e6555af93e9a1b4b8937f8dc298899407d537", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/outlives_closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -4,8 +4,8 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::SubSupConflict;\n use crate::infer::SubregionOrigin;\n-use crate::ty::RegionKind;\n-use crate::util::common::ErrorReported;\n+use rustc::ty::RegionKind;\n+use rustc::util::common::ErrorReported;\n use rustc_hir::{Expr, ExprKind::Closure, Node};\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "57313dbab420f43cdab675f5986fec0a6c209790", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/placeholder_error.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -3,10 +3,10 @@ use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::ValuePairs;\n use crate::infer::{SubregionOrigin, TypeTrace};\n use crate::traits::{ObligationCause, ObligationCauseCode};\n-use crate::ty::error::ExpectedFound;\n-use crate::ty::print::{FmtPrinter, Print, RegionHighlightMode};\n-use crate::ty::subst::SubstsRef;\n-use crate::ty::{self, TyCtxt};\n+use rustc::ty::error::ExpectedFound;\n+use rustc::ty::print::{FmtPrinter, Print, RegionHighlightMode};\n+use rustc::ty::subst::SubstsRef;\n+use rustc::ty::{self, TyCtxt};\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir::def::Namespace;\n use rustc_hir::def_id::DefId;"}, {"sha": "655e28bbd3d9204b9a4948cc0959796605094246", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -3,8 +3,8 @@\n use crate::infer::error_reporting::msg_span_from_free_region;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n-use crate::ty::{BoundRegion, FreeRegion, RegionKind};\n-use crate::util::common::ErrorReported;\n+use rustc::ty::{BoundRegion, FreeRegion, RegionKind};\n+use rustc::util::common::ErrorReported;\n use rustc_errors::Applicability;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "f8cab9f84c8417c3666d0b0510446775b3549a5a", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/trait_impl_difference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -4,8 +4,8 @@ use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::{Subtype, ValuePairs};\n use crate::traits::ObligationCauseCode::CompareImplMethodObligation;\n-use crate::ty::Ty;\n-use crate::util::common::ErrorReported;\n+use rustc::ty::Ty;\n+use rustc::util::common::ErrorReported;\n use rustc_span::Span;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "4dc9096533b843f71de8835ee557f789392993a1", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -2,7 +2,7 @@\n //! anonymous regions.\n \n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use crate::ty::{self, DefIdTree, Region, Ty};\n+use rustc::ty::{self, DefIdTree, Region, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_span::Span;"}, {"sha": "63dded3b43d10941c933fd5222f85980ffccbaa2", "filename": "src/librustc_infer/infer/freshen.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -31,8 +31,8 @@\n //! variable only once, and it does so as soon as it can, so it is reasonable to ask what the type\n //! inferencer knows \"so far\".\n \n-use crate::ty::fold::TypeFolder;\n-use crate::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::fold::TypeFolder;\n+use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n \n use rustc_data_structures::fx::FxHashMap;\n "}, {"sha": "16bf0f3d1c682915e817927bc39b4eabed691a71", "filename": "src/librustc_infer/infer/fudge.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ffudge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ffudge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ffudge.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,5 +1,5 @@\n-use crate::ty::fold::{TypeFoldable, TypeFolder};\n-use crate::ty::{self, ConstVid, FloatVid, IntVid, RegionVid, Ty, TyCtxt, TyVid};\n+use rustc::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc::ty::{self, ConstVid, FloatVid, IntVid, RegionVid, Ty, TyCtxt, TyVid};\n \n use super::type_variable::TypeVariableOrigin;\n use super::InferCtxt;"}, {"sha": "2634d9cac3e99a6bdbb27f775198aabe4b78d32d", "filename": "src/librustc_infer/infer/glb.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fglb.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -4,8 +4,8 @@ use super::InferCtxt;\n use super::Subtype;\n \n use crate::traits::ObligationCause;\n-use crate::ty::relate::{Relate, RelateResult, TypeRelation};\n-use crate::ty::{self, Ty, TyCtxt};\n+use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc::ty::{self, Ty, TyCtxt};\n \n /// \"Greatest lower bound\" (common subtype)\n pub struct Glb<'combine, 'infcx, 'tcx> {"}, {"sha": "33781188a95509bd4d7b81eae080fa80ed9756e6", "filename": "src/librustc_infer/infer/higher_ranked/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -5,8 +5,8 @@ use super::combine::CombineFields;\n use super::{HigherRankedType, InferCtxt, PlaceholderMap};\n \n use crate::infer::CombinedSnapshot;\n-use crate::ty::relate::{Relate, RelateResult, TypeRelation};\n-use crate::ty::{self, Binder, TypeFoldable};\n+use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc::ty::{self, Binder, TypeFoldable};\n \n impl<'a, 'tcx> CombineFields<'a, 'tcx> {\n     pub fn higher_ranked_sub<T>("}, {"sha": "42f9b3ab7709eea622c07e5eea9d7c82e6e22280", "filename": "src/librustc_infer/infer/lattice.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Flattice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Flattice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flattice.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -23,9 +23,9 @@ use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::InferCtxt;\n \n use crate::traits::ObligationCause;\n-use crate::ty::relate::{RelateResult, TypeRelation};\n-use crate::ty::TyVar;\n-use crate::ty::{self, Ty};\n+use rustc::ty::relate::{RelateResult, TypeRelation};\n+use rustc::ty::TyVar;\n+use rustc::ty::{self, Ty};\n \n pub trait LatticeDir<'f, 'tcx>: TypeRelation<'tcx> {\n     fn infcx(&self) -> &'f InferCtxt<'f, 'tcx>;"}, {"sha": "eb52f10e40893ae07ac048e897c42fa330fc3d57", "filename": "src/librustc_infer/infer/lexical_region_resolve/graphviz.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -11,9 +11,9 @@ use graphviz as dot;\n use super::Constraint;\n use crate::infer::region_constraints::RegionConstraintData;\n use crate::infer::SubregionOrigin;\n-use crate::middle::free_region::RegionRelations;\n-use crate::middle::region;\n-use crate::ty;\n+use rustc::middle::free_region::RegionRelations;\n+use rustc::middle::region;\n+use rustc::ty;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def_id::DefIndex;\n "}, {"sha": "0b5536219e566283adea5a981667ec06dd696a96", "filename": "src/librustc_infer/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -8,12 +8,12 @@ use crate::infer::region_constraints::VarInfos;\n use crate::infer::region_constraints::VerifyBound;\n use crate::infer::RegionVariableOrigin;\n use crate::infer::SubregionOrigin;\n-use crate::middle::free_region::RegionRelations;\n-use crate::ty::fold::TypeFoldable;\n-use crate::ty::{self, Ty, TyCtxt};\n-use crate::ty::{ReEarlyBound, ReEmpty, ReErased, ReFree, ReStatic};\n-use crate::ty::{ReLateBound, RePlaceholder, ReScope, ReVar};\n-use crate::ty::{Region, RegionVid};\n+use rustc::middle::free_region::RegionRelations;\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::{ReEarlyBound, ReEmpty, ReErased, ReFree, ReStatic};\n+use rustc::ty::{ReLateBound, RePlaceholder, ReScope, ReVar};\n+use rustc::ty::{Region, RegionVid};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{\n     Direction, Graph, NodeIndex, INCOMING, OUTGOING,"}, {"sha": "b6d20ba1f3f12f3f736e8870a16fcb7ba54d916f", "filename": "src/librustc_infer/infer/lub.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flub.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -4,8 +4,8 @@ use super::InferCtxt;\n use super::Subtype;\n \n use crate::traits::ObligationCause;\n-use crate::ty::relate::{Relate, RelateResult, TypeRelation};\n-use crate::ty::{self, Ty, TyCtxt};\n+use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc::ty::{self, Ty, TyCtxt};\n \n /// \"Least upper bound\" (common supertype)\n pub struct Lub<'combine, 'infcx, 'tcx> {"}, {"sha": "c9e58c2aa734724232dcc62822fc102d8a69003b", "filename": "src/librustc_infer/infer/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -5,7 +5,7 @@ pub use self::LateBoundRegionConversionTime::*;\n pub use self::RegionVariableOrigin::*;\n pub use self::SubregionOrigin::*;\n pub use self::ValuePairs::*;\n-pub use crate::ty::IntVarValue;\n+pub use rustc::ty::IntVarValue;\n \n use crate::traits::{self, ObligationCause, PredicateObligations, TraitEngine};\n \n@@ -650,8 +650,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     }\n \n     pub fn type_is_unconstrained_numeric(&'a self, ty: Ty<'_>) -> UnconstrainedNumeric {\n-        use crate::ty::error::UnconstrainedNumeric::Neither;\n-        use crate::ty::error::UnconstrainedNumeric::{UnconstrainedFloat, UnconstrainedInt};\n+        use rustc::ty::error::UnconstrainedNumeric::Neither;\n+        use rustc::ty::error::UnconstrainedNumeric::{UnconstrainedFloat, UnconstrainedInt};\n         match ty.kind {\n             ty::Infer(ty::IntVar(vid)) => {\n                 if self.inner.borrow_mut().int_unification_table.probe_value(vid).is_some() {"}, {"sha": "e35b8f9c8ecd41d64d198fa1ef6c60b976ab206d", "filename": "src/librustc_infer/infer/nll_relate/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -24,11 +24,11 @@\n use crate::infer::InferCtxt;\n use crate::infer::{ConstVarValue, ConstVariableValue};\n use crate::traits::DomainGoal;\n-use crate::ty::error::TypeError;\n-use crate::ty::fold::{TypeFoldable, TypeVisitor};\n-use crate::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use crate::ty::subst::GenericArg;\n-use crate::ty::{self, InferConst, Ty, TyCtxt};\n+use rustc::ty::error::TypeError;\n+use rustc::ty::fold::{TypeFoldable, TypeVisitor};\n+use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc::ty::subst::GenericArg;\n+use rustc::ty::{self, InferConst, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use std::fmt::Debug;\n "}, {"sha": "06d45690e4134245da61bb54a76f8d2726dd27e5", "filename": "src/librustc_infer/infer/opaque_types/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fopaque_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fopaque_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fopaque_types%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,12 +1,12 @@\n use crate::infer::error_reporting::{note_and_explain_free_region, note_and_explain_region};\n use crate::infer::{self, InferCtxt, InferOk, TypeVariableOrigin, TypeVariableOriginKind};\n-use crate::middle::region;\n use crate::traits::{self, PredicateObligation};\n-use crate::ty::fold::{BottomUpFolder, TypeFoldable, TypeFolder, TypeVisitor};\n-use crate::ty::free_region_map::FreeRegionRelations;\n-use crate::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n-use crate::ty::{self, GenericParamDefKind, Ty, TyCtxt};\n+use rustc::middle::region;\n use rustc::session::config::nightly_options;\n+use rustc::ty::fold::{BottomUpFolder, TypeFoldable, TypeFolder, TypeVisitor};\n+use rustc::ty::free_region_map::FreeRegionRelations;\n+use rustc::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n+use rustc::ty::{self, GenericParamDefKind, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{struct_span_err, DiagnosticBuilder};"}, {"sha": "aac6c7640ca6b953cfb4152e7dc5d220b3543925", "filename": "src/librustc_infer/infer/outlives/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n use crate::infer::{GenericKind, InferCtxt};\n use crate::traits::query::outlives_bounds::{self, OutlivesBound};\n-use crate::ty::free_region_map::FreeRegionMap;\n-use crate::ty::{self, Ty};\n+use rustc::ty::free_region_map::FreeRegionMap;\n+use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_span::Span;"}, {"sha": "e3790b027348ecdca282679d8e2d72d518de0a78", "filename": "src/librustc_infer/infer/outlives/obligations.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -63,9 +63,9 @@ use crate::infer::outlives::env::RegionBoundPairs;\n use crate::infer::outlives::verify::VerifyBoundCx;\n use crate::infer::{self, GenericKind, InferCtxt, RegionObligation, SubregionOrigin, VerifyBound};\n use crate::traits::ObligationCause;\n-use crate::ty::outlives::Component;\n-use crate::ty::subst::GenericArgKind;\n-use crate::ty::{self, Region, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::outlives::Component;\n+use rustc::ty::subst::GenericArgKind;\n+use rustc::ty::{self, Region, Ty, TyCtxt, TypeFoldable};\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;"}, {"sha": "be6f868430d4ca0213cc025c044c014f4e3289e2", "filename": "src/librustc_infer/infer/outlives/verify.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,8 +1,8 @@\n use crate::infer::outlives::env::RegionBoundPairs;\n use crate::infer::{GenericKind, VerifyBound};\n use crate::traits;\n-use crate::ty::subst::{InternalSubsts, Subst};\n-use crate::ty::{self, Ty, TyCtxt};\n+use rustc::ty::subst::{InternalSubsts, Subst};\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::captures::Captures;\n use rustc_hir::def_id::DefId;\n "}, {"sha": "74ffdc7a4f0872c1091a37fe3a88e978615691cd", "filename": "src/librustc_infer/infer/region_constraints/leak_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n use super::*;\n use crate::infer::{CombinedSnapshot, PlaceholderMap};\n-use crate::ty::error::TypeError;\n-use crate::ty::relate::RelateResult;\n+use rustc::ty::error::TypeError;\n+use rustc::ty::relate::RelateResult;\n \n impl<'tcx> RegionConstraintCollector<'tcx> {\n     /// Searches region constraints created since `snapshot` that"}, {"sha": "3510b927d960436d265c8235e6a7f530acc84307", "filename": "src/librustc_infer/infer/resolve.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fresolve.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::{FixupError, FixupResult, InferCtxt, Span};\n-use crate::ty::fold::{TypeFolder, TypeVisitor};\n-use crate::ty::{self, Const, InferConst, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::fold::{TypeFolder, TypeVisitor};\n+use rustc::ty::{self, Const, InferConst, Ty, TyCtxt, TypeFoldable};\n \n ///////////////////////////////////////////////////////////////////////////\n // OPPORTUNISTIC VAR RESOLVER"}, {"sha": "2b770ced42a55838f461543a4e82d0421abfa933", "filename": "src/librustc_infer/infer/sub.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fsub.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -2,10 +2,10 @@ use super::combine::{CombineFields, RelationDir};\n use super::SubregionOrigin;\n \n use crate::traits::Obligation;\n-use crate::ty::fold::TypeFoldable;\n-use crate::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n-use crate::ty::TyVar;\n-use crate::ty::{self, Ty, TyCtxt};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n+use rustc::ty::TyVar;\n+use rustc::ty::{self, Ty, TyCtxt};\n use std::mem;\n \n /// Ensures `a` is made a subtype of `b`. Returns `a` on success."}, {"sha": "b59c5606691810841d997af8d7ca8718ff6823e5", "filename": "src/librustc_infer/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,4 +1,4 @@\n-use crate::ty::{self, Ty, TyVid};\n+use rustc::ty::{self, Ty, TyVid};\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;"}, {"sha": "d6619e5f7f83a5c3908c5dc7c9181bb548c84fb6", "filename": "src/librustc_infer/lib.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Flib.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -56,12 +56,5 @@ extern crate log;\n #[macro_use]\n extern crate rustc;\n \n-use rustc::arena;\n-use rustc::dep_graph;\n-use rustc::hir;\n pub mod infer;\n-use rustc::middle;\n-pub use rustc_session as session;\n pub mod traits;\n-use rustc::ty;\n-use rustc::util;"}, {"sha": "1a4f899ac859270eeb7eedc011d249758029f111", "filename": "src/librustc_infer/traits/auto_trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fauto_trait.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -5,8 +5,8 @@ use super::*;\n \n use crate::infer::region_constraints::{Constraint, RegionConstraintData};\n use crate::infer::InferCtxt;\n-use crate::ty::fold::TypeFolder;\n-use crate::ty::{Region, RegionVid};\n+use rustc::ty::fold::TypeFolder;\n+use rustc::ty::{Region, RegionVid};\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n "}, {"sha": "82fa683a290c5d6f7b16c602996295651e86f1ce", "filename": "src/librustc_infer/traits/chalk_fulfill.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fchalk_fulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fchalk_fulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fchalk_fulfill.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -5,7 +5,7 @@ use crate::traits::{\n     Environment, FulfillmentError, FulfillmentErrorCode, InEnvironment, ObligationCause,\n     PredicateObligation, SelectionError, TraitEngine,\n };\n-use crate::ty::{self, Ty};\n+use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n \n pub use rustc::traits::ChalkCanonicalGoal as CanonicalGoal;"}, {"sha": "bd4129a4de76c56184981304c672b10fba539c0f", "filename": "src/librustc_infer/traits/codegen/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fcodegen%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fcodegen%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fcodegen%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -7,8 +7,8 @@ use crate::infer::{InferCtxt, TyCtxtInferExt};\n use crate::traits::{\n     FulfillmentContext, Obligation, ObligationCause, SelectionContext, TraitEngine, Vtable,\n };\n-use crate::ty::fold::TypeFoldable;\n-use crate::ty::{self, TyCtxt};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::{self, TyCtxt};\n \n /// Attempts to resolve an obligation to a vtable. The result is\n /// a shallow vtable resolution, meaning that we do not"}, {"sha": "43c0fbc27e620f597757360c930b5ebb44dc9000", "filename": "src/librustc_infer/traits/coherence.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fcoherence.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -8,9 +8,9 @@ use crate::infer::{CombinedSnapshot, InferOk, TyCtxtInferExt};\n use crate::traits::select::IntercrateAmbiguityCause;\n use crate::traits::SkipLeakCheck;\n use crate::traits::{self, Normalized, Obligation, ObligationCause, SelectionContext};\n-use crate::ty::fold::TypeFoldable;\n-use crate::ty::subst::Subst;\n-use crate::ty::{self, Ty, TyCtxt};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::subst::Subst;\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;"}, {"sha": "ba1443796162fdfad330ea6ef413afc7633ad328", "filename": "src/librustc_infer/traits/engine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fengine.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,6 +1,6 @@\n use crate::infer::InferCtxt;\n use crate::traits::Obligation;\n-use crate::ty::{self, ToPredicate, Ty, TyCtxt, WithConstness};\n+use rustc::ty::{self, ToPredicate, Ty, TyCtxt, WithConstness};\n use rustc_hir::def_id::DefId;\n \n use super::{ChalkFulfillmentContext, FulfillmentContext, FulfillmentError};"}, {"sha": "87c1107bd427d6eb97567ed381ca807fd2b55ecd", "filename": "src/librustc_infer/traits/error_reporting/on_unimplemented.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -2,8 +2,8 @@ use super::{\n     ObligationCauseCode, OnUnimplementedDirective, OnUnimplementedNote, PredicateObligation,\n };\n use crate::infer::InferCtxt;\n-use crate::ty::subst::Subst;\n-use crate::ty::{self, GenericParamDefKind};\n+use rustc::ty::subst::Subst;\n+use rustc::ty::{self, GenericParamDefKind};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::sym;"}, {"sha": "4a78bcf4a8778876b75bef57584e9242ff220ce0", "filename": "src/librustc_infer/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -6,8 +6,9 @@ use super::{\n use crate::infer::InferCtxt;\n use crate::traits::error_reporting::suggest_constraining_type_param;\n use crate::traits::object_safety::object_safety_violations;\n-use crate::ty::TypeckTables;\n-use crate::ty::{self, AdtKind, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n+\n+use rustc::ty::TypeckTables;\n+use rustc::ty::{self, AdtKind, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_errors::{\n     error_code, pluralize, struct_span_err, Applicability, DiagnosticBuilder, Style,\n };"}, {"sha": "6055b0e74df54c8a255a32c13393bdcb9911c9c6", "filename": "src/librustc_infer/traits/fulfill.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Ffulfill.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,6 +1,6 @@\n use crate::infer::{InferCtxt, ShallowResolver};\n-use crate::ty::error::ExpectedFound;\n-use crate::ty::{self, ToPolyTraitRef, Ty, TypeFoldable};\n+use rustc::ty::error::ExpectedFound;\n+use rustc::ty::{self, ToPolyTraitRef, Ty, TypeFoldable};\n use rustc_data_structures::obligation_forest::ProcessResult;\n use rustc_data_structures::obligation_forest::{DoCompleted, Error, ForestObligation};\n use rustc_data_structures::obligation_forest::{ObligationForest, ObligationProcessor};"}, {"sha": "06c6d6518134893e0f7c6bb51dc836862552f9e3", "filename": "src/librustc_infer/traits/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -24,12 +24,12 @@ pub mod wf;\n \n use crate::infer::outlives::env::OutlivesEnvironment;\n use crate::infer::{InferCtxt, SuppressRegionErrors, TyCtxtInferExt};\n-use crate::middle::region;\n-use crate::ty::error::{ExpectedFound, TypeError};\n-use crate::ty::fold::TypeFoldable;\n-use crate::ty::subst::{InternalSubsts, SubstsRef};\n-use crate::ty::{self, GenericParamDefKind, ToPredicate, Ty, TyCtxt, WithConstness};\n-use crate::util::common::ErrorReported;\n+use rustc::middle::region;\n+use rustc::ty::error::{ExpectedFound, TypeError};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::subst::{InternalSubsts, SubstsRef};\n+use rustc::ty::{self, GenericParamDefKind, ToPredicate, Ty, TyCtxt, WithConstness};\n+use rustc::util::common::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "d36d66e4e2555cc7940aa06bb77bc9fb982154e8", "filename": "src/librustc_infer/traits/object_safety.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fobject_safety.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -12,8 +12,8 @@ use super::elaborate_predicates;\n \n use crate::infer::TyCtxtInferExt;\n use crate::traits::{self, Obligation, ObligationCause};\n-use crate::ty::subst::{InternalSubsts, Subst};\n-use crate::ty::{self, Predicate, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n+use rustc::ty::subst::{InternalSubsts, Subst};\n+use rustc::ty::{self, Predicate, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n@@ -553,7 +553,7 @@ fn virtual_call_violation_for_method<'tcx>(\n         } else {\n             // Do sanity check to make sure the receiver actually has the layout of a pointer.\n \n-            use crate::ty::layout::Abi;\n+            use rustc::ty::layout::Abi;\n \n             let param_env = tcx.param_env(method.def_id);\n "}, {"sha": "41201c1c7ae7c4657dac2dbc0356cbfd6b0026fe", "filename": "src/librustc_infer/traits/on_unimplemented.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fon_unimplemented.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n use fmt_macros::{Parser, Piece, Position};\n \n-use crate::ty::{self, GenericParamDefKind, TyCtxt};\n-use crate::util::common::ErrorReported;\n+use rustc::ty::{self, GenericParamDefKind, TyCtxt};\n+use rustc::util::common::ErrorReported;\n \n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "a7c3e9110abd2a3db98c406760ced6cba0f854b0", "filename": "src/librustc_infer/traits/project.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fproject.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -14,9 +14,9 @@ use super::{VtableClosureData, VtableFnPointerData, VtableGeneratorData, VtableI\n \n use crate::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use crate::infer::{InferCtxt, InferOk, LateBoundRegionConversionTime};\n-use crate::ty::fold::{TypeFoldable, TypeFolder};\n-use crate::ty::subst::{InternalSubsts, Subst};\n-use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, WithConstness};\n+use rustc::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc::ty::subst::{InternalSubsts, Subst};\n+use rustc::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, WithConstness};\n use rustc_data_structures::snapshot_map::{Snapshot, SnapshotMap};\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::sym;"}, {"sha": "4577e3d2e1cf87c8af73a84415d1e26d0b68c11b", "filename": "src/librustc_infer/traits/query/normalize.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Fnormalize.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -7,9 +7,9 @@ use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::{InferCtxt, InferOk};\n use crate::traits::project::Normalized;\n use crate::traits::{Obligation, ObligationCause, PredicateObligation, Reveal};\n-use crate::ty::fold::{TypeFoldable, TypeFolder};\n-use crate::ty::subst::Subst;\n-use crate::ty::{self, Ty, TyCtxt};\n+use rustc::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc::ty::subst::Subst;\n+use rustc::ty::{self, Ty, TyCtxt};\n \n use super::NoSolution;\n "}, {"sha": "eb32ebf5c4db4ff499c9a4a0b73b9f79b4d59906", "filename": "src/librustc_infer/traits/query/outlives_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Foutlives_bounds.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -2,7 +2,7 @@ use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::InferCtxt;\n use crate::traits::query::NoSolution;\n use crate::traits::{FulfillmentContext, ObligationCause, TraitEngine, TraitEngineExt};\n-use crate::ty::{self, Ty};\n+use rustc::ty::{self, Ty};\n use rustc_hir as hir;\n use rustc_span::source_map::Span;\n "}, {"sha": "3b6fbc7d8dd729cb30b10d676a26c5e2ac192167", "filename": "src/librustc_infer/traits/query/type_op/eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Feq.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,6 +1,6 @@\n use crate::infer::canonical::{Canonicalized, CanonicalizedQueryResponse};\n use crate::traits::query::Fallible;\n-use crate::ty::{ParamEnvAnd, TyCtxt};\n+use rustc::ty::{ParamEnvAnd, TyCtxt};\n \n pub use rustc::traits::query::type_op::Eq;\n "}, {"sha": "3dad546872e5a54569244faefbab2b2f3ce8ed01", "filename": "src/librustc_infer/traits/query/type_op/implied_outlives_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fimplied_outlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fimplied_outlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fimplied_outlives_bounds.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n use crate::infer::canonical::{Canonicalized, CanonicalizedQueryResponse};\n use crate::traits::query::outlives_bounds::OutlivesBound;\n use crate::traits::query::Fallible;\n-use crate::ty::{ParamEnvAnd, Ty, TyCtxt};\n+use rustc::ty::{ParamEnvAnd, Ty, TyCtxt};\n \n #[derive(Clone, Debug, HashStable, TypeFoldable, Lift)]\n pub struct ImpliedOutlivesBounds<'tcx> {"}, {"sha": "eb4c0a029e1b9cd1feb230a4cb37f052dae955fb", "filename": "src/librustc_infer/traits/query/type_op/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -4,8 +4,8 @@ use crate::infer::canonical::{\n use crate::infer::{InferCtxt, InferOk};\n use crate::traits::query::Fallible;\n use crate::traits::ObligationCause;\n-use crate::ty::fold::TypeFoldable;\n-use crate::ty::{ParamEnvAnd, TyCtxt};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::{ParamEnvAnd, TyCtxt};\n use std::fmt;\n use std::rc::Rc;\n "}, {"sha": "d2eec53bf80feac0a8cc5f4ef1c46fafa9797daa", "filename": "src/librustc_infer/traits/query/type_op/normalize.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fnormalize.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n use crate::infer::canonical::{Canonicalized, CanonicalizedQueryResponse};\n use crate::traits::query::Fallible;\n-use crate::ty::fold::TypeFoldable;\n-use crate::ty::{self, Lift, ParamEnvAnd, Ty, TyCtxt};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::{self, Lift, ParamEnvAnd, Ty, TyCtxt};\n use std::fmt;\n \n pub use rustc::traits::query::type_op::Normalize;"}, {"sha": "b94948cffd68f657ce7c27d238f40580e69121ba", "filename": "src/librustc_infer/traits/query/type_op/outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Foutlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Foutlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Foutlives.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n use crate::infer::canonical::{Canonicalized, CanonicalizedQueryResponse};\n use crate::traits::query::dropck_outlives::{trivial_dropck_outlives, DropckOutlivesResult};\n use crate::traits::query::Fallible;\n-use crate::ty::{ParamEnvAnd, Ty, TyCtxt};\n+use rustc::ty::{ParamEnvAnd, Ty, TyCtxt};\n \n #[derive(Copy, Clone, Debug, HashStable, TypeFoldable, Lift)]\n pub struct DropckOutlives<'tcx> {"}, {"sha": "8c68f7db9e5bca0da39b5abd86f30c28a181d315", "filename": "src/librustc_infer/traits/query/type_op/prove_predicate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,6 +1,6 @@\n use crate::infer::canonical::{Canonicalized, CanonicalizedQueryResponse};\n use crate::traits::query::Fallible;\n-use crate::ty::{ParamEnvAnd, Predicate, TyCtxt};\n+use rustc::ty::{ParamEnvAnd, Predicate, TyCtxt};\n \n pub use rustc::traits::query::type_op::ProvePredicate;\n "}, {"sha": "053411b0cac2e4ea0a0a14930f0482da5cda798f", "filename": "src/librustc_infer/traits/query/type_op/subtype.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fsubtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fsubtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fquery%2Ftype_op%2Fsubtype.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,6 +1,6 @@\n use crate::infer::canonical::{Canonicalized, CanonicalizedQueryResponse};\n use crate::traits::query::Fallible;\n-use crate::ty::{ParamEnvAnd, TyCtxt};\n+use rustc::ty::{ParamEnvAnd, TyCtxt};\n \n pub use rustc::traits::query::type_op::Subtype;\n "}, {"sha": "371268b5ee4710bbfed86a33ec3a900cfb8a992d", "filename": "src/librustc_infer/traits/select.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fselect.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -33,13 +33,13 @@ use super::{\n     VtableGeneratorData, VtableImplData, VtableObjectData, VtableTraitAliasData,\n };\n \n-use crate::dep_graph::{DepKind, DepNodeIndex};\n use crate::infer::{CombinedSnapshot, InferCtxt, InferOk, PlaceholderMap, TypeFreshener};\n-use crate::middle::lang_items;\n-use crate::ty::fast_reject;\n-use crate::ty::relate::TypeRelation;\n-use crate::ty::subst::{Subst, SubstsRef};\n-use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n+use rustc::dep_graph::{DepKind, DepNodeIndex};\n+use rustc::middle::lang_items;\n+use rustc::ty::fast_reject;\n+use rustc::ty::relate::TypeRelation;\n+use rustc::ty::subst::{Subst, SubstsRef};\n+use rustc::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "ee1c737c208f73d0dbaa5e35eda40edc8de09689", "filename": "src/librustc_infer/traits/specialize/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fspecialize%2Fmod.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -15,9 +15,9 @@ use specialization_graph::GraphExt;\n use crate::infer::{InferCtxt, InferOk, TyCtxtInferExt};\n use crate::traits::select::IntercrateAmbiguityCause;\n use crate::traits::{self, coherence, FutureCompatOverlapErrorKind, ObligationCause, TraitEngine};\n-use crate::ty::subst::{InternalSubsts, Subst, SubstsRef};\n-use crate::ty::{self, TyCtxt, TypeFoldable};\n use rustc::lint::LintDiagnosticBuilder;\n+use rustc::ty::subst::{InternalSubsts, Subst, SubstsRef};\n+use rustc::ty::{self, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::DefId;"}, {"sha": "6630f664f96e4ac9d93049e51d04f7b107003dfd", "filename": "src/librustc_infer/traits/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,7 +1,7 @@\n use crate::traits;\n use crate::traits::project::Normalized;\n-use crate::ty;\n-use crate::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n+use rustc::ty;\n+use rustc::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n \n use std::fmt;\n "}, {"sha": "c1612a3b9a7498c713a88e56116da57179d0b4e8", "filename": "src/librustc_infer/traits/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Futil.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -3,9 +3,9 @@ use rustc_span::Span;\n use smallvec::smallvec;\n use smallvec::SmallVec;\n \n-use crate::ty::outlives::Component;\n-use crate::ty::subst::{GenericArg, Subst, SubstsRef};\n-use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, WithConstness};\n+use rustc::ty::outlives::Component;\n+use rustc::ty::subst::{GenericArg, Subst, SubstsRef};\n+use rustc::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, WithConstness};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "89a271d0111af5480e456012d7e6ac65eb5ed2b6", "filename": "src/librustc_infer/traits/wf.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/795673ae2060198cdb09c6ded8d303c244dac6fd/src%2Flibrustc_infer%2Ftraits%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fwf.rs?ref=795673ae2060198cdb09c6ded8d303c244dac6fd", "patch": "@@ -1,9 +1,9 @@\n use crate::infer::opaque_types::required_region_bounds;\n use crate::infer::InferCtxt;\n-use crate::middle::lang_items;\n use crate::traits::{self, AssocTypeBoundData};\n-use crate::ty::subst::SubstsRef;\n-use crate::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n+use rustc::middle::lang_items;\n+use rustc::ty::subst::SubstsRef;\n+use rustc::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::{kw, Ident};"}]}