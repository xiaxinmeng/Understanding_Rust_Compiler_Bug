{"sha": "7581bae99615f0b7b3dd973a59448659d2946656", "node_id": "C_kwDOAAsO6NoAKDc1ODFiYWU5OTYxNWYwYjdiM2RkOTczYTU5NDQ4NjU5ZDI5NDY2NTY", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-10-19T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-10-19T00:00:00Z"}, "message": "Fix const qualification when executed after promotion\n\nThe const qualification was so far performed before the promotion and\nthe implementation assumed that it will never encounter a promoted.\n\nWith `const_precise_live_drops` feature, checking for live drops is\ndelayed until after drop elaboration, which in turn runs after\npromotion. so the assumption is no longer true. When evaluating\n`NeedsNonConstDrop` it is now possible to encounter promoteds.\n\nUse type base qualification for the promoted. It is a sound\napproximation in general, and in the specific case of promoteds and\n`NeedsNonConstDrop` it is precise.", "tree": {"sha": "a0e987f850373d178c2e330f9e7e53edae1e35e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0e987f850373d178c2e330f9e7e53edae1e35e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7581bae99615f0b7b3dd973a59448659d2946656", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7581bae99615f0b7b3dd973a59448659d2946656", "html_url": "https://github.com/rust-lang/rust/commit/7581bae99615f0b7b3dd973a59448659d2946656", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7581bae99615f0b7b3dd973a59448659d2946656/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af55d19c7a9189374d89472f97dc119659bb67e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af55d19c7a9189374d89472f97dc119659bb67e", "html_url": "https://github.com/rust-lang/rust/commit/1af55d19c7a9189374d89472f97dc119659bb67e"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "0a57d9adc46a93c1bb0d27f438fe10b67f2c48c8", "filename": "compiler/rustc_const_eval/src/transform/check_consts/qualifs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7581bae99615f0b7b3dd973a59448659d2946656/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7581bae99615f0b7b3dd973a59448659d2946656/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=7581bae99615f0b7b3dd973a59448659d2946656", "patch": "@@ -309,8 +309,9 @@ where\n \n     // Check the qualifs of the value of `const` items.\n     if let Some(ct) = constant.literal.const_for_ty() {\n-        if let ty::ConstKind::Unevaluated(ty::Unevaluated { def, substs_: _, promoted }) = ct.val {\n-            assert!(promoted.is_none());\n+        if let ty::ConstKind::Unevaluated(ty::Unevaluated { def, substs_: _, promoted: None }) =\n+            ct.val\n+        {\n             // Don't peek inside trait associated constants.\n             if cx.tcx.trait_of_item(def.did).is_none() {\n                 let qualifs = if let Some((did, param_did)) = def.as_const_arg() {"}, {"sha": "6f2317a5a27a802aac4580ba0380114c45b6dc10", "filename": "src/test/ui/consts/precise-drop-with-promoted.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7581bae99615f0b7b3dd973a59448659d2946656/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-promoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7581bae99615f0b7b3dd973a59448659d2946656/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-promoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-promoted.rs?ref=7581bae99615f0b7b3dd973a59448659d2946656", "patch": "@@ -0,0 +1,9 @@\n+// Regression test for issue #89938.\n+// check-pass\n+// compile-flags: --crate-type=lib\n+#![feature(const_precise_live_drops)]\n+\n+pub const fn f() {\n+    let _: Option<String> = None;\n+    let _: &'static Option<String> = &None;\n+}"}]}