{"sha": "f5b30211c8fe3acb93be9a748004ee835adaa6e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YjMwMjExYzhmZTNhY2I5M2JlOWE3NDgwMDRlZTgzNWFkYWE2ZTQ=", "commit": {"author": {"name": "Valentin Tolmer", "email": "valentin.tolmer@gmail.com", "date": "2019-03-27T14:57:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-07T07:31:41Z"}, "message": "Handle null from LLVMRustGetSectionName", "tree": {"sha": "cd04468df2c42ff4cfe9763804a9289ec2eaf6af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd04468df2c42ff4cfe9763804a9289ec2eaf6af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5b30211c8fe3acb93be9a748004ee835adaa6e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5b30211c8fe3acb93be9a748004ee835adaa6e4", "html_url": "https://github.com/rust-lang/rust/commit/f5b30211c8fe3acb93be9a748004ee835adaa6e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5b30211c8fe3acb93be9a748004ee835adaa6e4/comments", "author": {"login": "nitnelave", "id": 796633, "node_id": "MDQ6VXNlcjc5NjYzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/796633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitnelave", "html_url": "https://github.com/nitnelave", "followers_url": "https://api.github.com/users/nitnelave/followers", "following_url": "https://api.github.com/users/nitnelave/following{/other_user}", "gists_url": "https://api.github.com/users/nitnelave/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitnelave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitnelave/subscriptions", "organizations_url": "https://api.github.com/users/nitnelave/orgs", "repos_url": "https://api.github.com/users/nitnelave/repos", "events_url": "https://api.github.com/users/nitnelave/events{/privacy}", "received_events_url": "https://api.github.com/users/nitnelave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4393768faa104b9879c601feee71eb0207dc4fe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4393768faa104b9879c601feee71eb0207dc4fe1", "html_url": "https://github.com/rust-lang/rust/commit/4393768faa104b9879c601feee71eb0207dc4fe1"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "708ba79ec3ab238b4051f2071c4c4311f560282a", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5b30211c8fe3acb93be9a748004ee835adaa6e4/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5b30211c8fe3acb93be9a748004ee835adaa6e4/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=f5b30211c8fe3acb93be9a748004ee835adaa6e4", "patch": "@@ -1736,7 +1736,9 @@ extern \"C\" {\n     pub fn LLVMRustArchiveIteratorFree(AIR: &'a mut ArchiveIterator<'a>);\n     pub fn LLVMRustDestroyArchive(AR: &'static mut Archive);\n \n-    pub fn LLVMRustGetSectionName(SI: &SectionIterator<'_>, data: &mut *const c_char) -> size_t;\n+    #[allow(improper_ctypes)]\n+    pub fn LLVMRustGetSectionName(SI: &SectionIterator<'_>,\n+                                  data: &mut Option<std::ptr::NonNull<c_char>>) -> size_t;\n \n     #[allow(improper_ctypes)]\n     pub fn LLVMRustWriteTwineToString(T: &Twine, s: &RustString);"}, {"sha": "9bddd29d2e88f309061ad54d585b23923dacd8ad", "filename": "src/librustc_codegen_llvm/metadata.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f5b30211c8fe3acb93be9a748004ee835adaa6e4/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5b30211c8fe3acb93be9a748004ee835adaa6e4/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmetadata.rs?ref=f5b30211c8fe3acb93be9a748004ee835adaa6e4", "patch": "@@ -8,7 +8,6 @@ use rustc_data_structures::owning_ref::OwningRef;\n use rustc_codegen_ssa::METADATA_FILENAME;\n \n use std::path::Path;\n-use std::ptr;\n use std::slice;\n use rustc_fs_util::path_to_c_string;\n \n@@ -67,10 +66,14 @@ fn search_meta_section<'a>(of: &'a ObjectFile,\n     unsafe {\n         let si = mk_section_iter(of.llof);\n         while llvm::LLVMIsSectionIteratorAtEnd(of.llof, si.llsi) == False {\n-            let mut name_buf = ptr::null();\n+            let mut name_buf = None;\n             let name_len = llvm::LLVMRustGetSectionName(si.llsi, &mut name_buf);\n-            let name = slice::from_raw_parts(name_buf as *const u8, name_len as usize).to_vec();\n-            let name = String::from_utf8(name).unwrap();\n+            let name = name_buf.map_or(\n+                \"\".to_string(),\n+                |buf| String::from_utf8(\n+                    slice::from_raw_parts(buf.as_ptr() as *const u8,\n+                                          name_len as usize)\n+                    .to_vec()).unwrap());\n             debug!(\"get_metadata_section: name {}\", name);\n             if read_metadata_section_name(target) == name {\n                 let cbuf = llvm::LLVMGetSectionContents(si.llsi);"}]}