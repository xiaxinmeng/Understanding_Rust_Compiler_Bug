{"sha": "fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNzRkNjRmN2QxYjRkYWE5NWIyMWZmOTNjYjc4YmJhZjk3OThlODE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-12-11T11:40:37Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-12-11T11:40:37Z"}, "message": "More small test case fixes. grr. cc #9629.", "tree": {"sha": "b73a29e1a1c8377acad73f5c042a9b9ae01a81d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b73a29e1a1c8377acad73f5c042a9b9ae01a81d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81", "html_url": "https://github.com/rust-lang/rust/commit/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76d9a9671bf456407c1b8fd029a4a1149684fb5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/76d9a9671bf456407c1b8fd029a4a1149684fb5b", "html_url": "https://github.com/rust-lang/rust/commit/76d9a9671bf456407c1b8fd029a4a1149684fb5b"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "38e93cd39fad7c9fe64e988de1d664c260cf1179", "filename": "src/librustc/middle/borrowck/doc.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs?ref=fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81", "patch": "@@ -790,7 +790,15 @@ particular, if the referent is frozen, there is no harm in it:\n \n In this case, creating the alias `t2` of `t0` is safe because the only\n thing `t2` can be used for is to further freeze `*t0`, which is\n-already frozen.\n+already frozen. In particular, we cannot assign to `*t0` through the\n+new alias `t2`, as demonstrated in this test case:\n+\n+       // src/test/run-pass/borrowck-borrow-mut-base-ptr-in-aliasable-loc.rs\n+       fn foo(t0: & &mut int) {\n+           let t1 = t0;\n+           let p: &int = &**t0;\n+           **t1 = 22; //~ ERROR cannot assign\n+       }\n \n This distinction is reflected in the rules. When doing an `&mut`\n borrow -- as in the first example -- the set `ACTIONS` will be\n@@ -805,6 +813,8 @@ the referent implies that it cannot be claimed or mutated but permits\n others to freeze. Hence when these restrictions are propagated back to\n the base path, it will still be considered freezable.\n \n+\n+\n **FIXME #10520: Restrictions against mutating the base pointer.** When\n an `&mut` pointer is frozen or claimed, we currently pass along the\n restriction against MUTATE to the base pointer. I do not believe this"}, {"sha": "f72dacc2d813c6c58be605d80135b25dada90d70", "filename": "src/test/compile-fail/borrowck-borrow-mut-base-ptr-in-aliasable-loc.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-mut-base-ptr-in-aliasable-loc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-mut-base-ptr-in-aliasable-loc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-mut-base-ptr-in-aliasable-loc.rs?ref=fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n // Test that attempt to reborrow an `&mut` pointer in an aliasable\n // location yields an error.\n //\n@@ -7,7 +17,7 @@ use std::util::swap;\n \n fn foo(t0: & &mut int) {\n     let t1 = t0;\n-    let p: &int = &**t0; //~ ERROR cannot borrow an `&mut` in a `&` pointer\n+    let p: &int = &**t0;\n     **t1 = 22; //~ ERROR cannot assign\n }\n "}, {"sha": "3f67952fa8ef026c436f4c4665cb58d5cb0271ab", "filename": "src/test/compile-fail/borrowck-borrow-of-mut-base-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-of-mut-base-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-of-mut-base-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-of-mut-base-ptr.rs?ref=fc74d64f7d1b4daa95b21ff93cb78bbaf9798e81", "patch": "@@ -19,7 +19,7 @@ fn foo<'a>(mut t0: &'a mut int,\n            mut t1: &'a mut int) {\n     let p: &mut int = &mut *t0; // Claims `*t0`\n     let mut t2 = &t0;           //~ ERROR cannot borrow `t0`\n-    let q: &int = &*t2;         // Freezes `*t0` but not through `*p`\n+    let q: &int = &**t2;        // Freezes `*t0` but not through `*p`\n     *p += 1;                    // violates type of `*q`\n }\n "}]}