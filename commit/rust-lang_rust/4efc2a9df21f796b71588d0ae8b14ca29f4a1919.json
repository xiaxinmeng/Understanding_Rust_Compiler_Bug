{"sha": "4efc2a9df21f796b71588d0ae8b14ca29f4a1919", "node_id": "C_kwDOAAsO6NoAKDRlZmMyYTlkZjIxZjc5NmI3MTU4OGQwYWU4YjE0Y2EyOWY0YTE5MTk", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2022-05-15T07:55:13Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2022-05-15T07:55:13Z"}, "message": "ide: insert whitespace between 'mut' and 'self' in macro expansion", "tree": {"sha": "5b66673ad020456be6e41407c6f062483e0a9395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b66673ad020456be6e41407c6f062483e0a9395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4efc2a9df21f796b71588d0ae8b14ca29f4a1919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4efc2a9df21f796b71588d0ae8b14ca29f4a1919", "html_url": "https://github.com/rust-lang/rust/commit/4efc2a9df21f796b71588d0ae8b14ca29f4a1919", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4efc2a9df21f796b71588d0ae8b14ca29f4a1919/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ff5b2cab48716e263f3e9c39cf1efa9bb907795", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ff5b2cab48716e263f3e9c39cf1efa9bb907795", "html_url": "https://github.com/rust-lang/rust/commit/1ff5b2cab48716e263f3e9c39cf1efa9bb907795"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "16e609b1a7eb63f73fb00cec31299eed6c22ca06", "filename": "crates/ide-db/src/syntax_helpers/insert_whitespace_into_node.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4efc2a9df21f796b71588d0ae8b14ca29f4a1919/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Finsert_whitespace_into_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4efc2a9df21f796b71588d0ae8b14ca29f4a1919/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Finsert_whitespace_into_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Finsert_whitespace_into_node.rs?ref=4efc2a9df21f796b71588d0ae8b14ca29f4a1919", "patch": "@@ -88,6 +88,9 @@ pub fn insert_ws_into(syn: SyntaxNode) -> SyntaxNode {\n             LIFETIME_IDENT if is_next(is_text, true) => {\n                 mods.push(do_ws(after, tok));\n             }\n+            MUT_KW if is_next(|it| it == SELF_KW, false) => {\n+                mods.push(do_ws(after, tok));\n+            }\n             AS_KW | DYN_KW | IMPL_KW | CONST_KW => {\n                 mods.push(do_ws(after, tok));\n             }"}]}