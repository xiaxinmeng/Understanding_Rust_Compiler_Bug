{"sha": "6971727d45494b8362262bb41a45f2c0c5f162bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NzE3MjdkNDU0OTRiODM2MjI2MmJiNDFhNDVmMmMwYzVmMTYyYmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-04T07:20:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-04T07:20:04Z"}, "message": "Auto merge of #24009 - Manishearth:rollup, r=Manishearth", "tree": {"sha": "4e5fcbf512e9c285756d84bdf15b77c03d800b63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e5fcbf512e9c285756d84bdf15b77c03d800b63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6971727d45494b8362262bb41a45f2c0c5f162bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6971727d45494b8362262bb41a45f2c0c5f162bc", "html_url": "https://github.com/rust-lang/rust/commit/6971727d45494b8362262bb41a45f2c0c5f162bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6971727d45494b8362262bb41a45f2c0c5f162bc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcae782aa8acfba62d3446c61f17290c17e7de05", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcae782aa8acfba62d3446c61f17290c17e7de05", "html_url": "https://github.com/rust-lang/rust/commit/bcae782aa8acfba62d3446c61f17290c17e7de05"}, {"sha": "b62c11023c4fdbb1e6ef9f074310a8e95db7827e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b62c11023c4fdbb1e6ef9f074310a8e95db7827e", "html_url": "https://github.com/rust-lang/rust/commit/b62c11023c4fdbb1e6ef9f074310a8e95db7827e"}], "stats": {"total": 446, "additions": 386, "deletions": 60}, "files": [{"sha": "7a800b70e4a381f7ce9b91c0ac59a5449310fe25", "filename": "AUTHORS.txt", "status": "modified", "additions": 92, "deletions": 4, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/AUTHORS.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/AUTHORS.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/AUTHORS.txt?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -9,17 +9,19 @@ Aaron Todd <github@opprobrio.us>\n Aaron Turon <aturon@mozilla.com>\n Aaron Weiss <aaronweiss74@gmail.com>\n Adam Bozanich <adam.boz@gmail.com>\n+Adam Jacob <adam@opscode.com>\n Adam Roben <adam@roben.org>\n Adam Szkoda <adaszko@gmail.com>\n+Adenilson Cavalcanti <cavalcantii@gmail.com>\n Adolfo Ochagav\u00eda <aochagavia92@gmail.com>\n Adrien Brault <adrien.brault@gmail.com>\n Adrien T\u00e9tar <adri-from-59@hotmail.fr>\n-Ahmed Charles <acharles@outlook.com>\n Ahmed Charles <ahmedcharles@gmail.com>\n Aidan Cully <github@aidan.users.panix.com>\n Aidan Hobson Sayers <aidanhs@cantab.net>\n Akos Kiss <akiss@inf.u-szeged.hu>\n Alan Andrade <alan.andradec@gmail.com>\n+Alan Cutter <alancutter@chromium.org>\n Alan Williams <mralert@gmail.com>\n Aleksander Balicki <balicki.aleksander@gmail.com>\n Aleksandr Koshlo <sash7ko@gmail.com>\n@@ -29,6 +31,8 @@ Alex Lyon <arcterus@mail.com>\n Alex R\u00f8nne Petersen <alex@lycus.org>\n Alex Whitney <aw1209@ic.ac.uk>\n Alexander Bliskovsky <alexander.bliskovsky@gmail.com>\n+Alexander Campbell <alexanderhcampbell@gmail.com>\n+Alexander Chernyakhovsky <achernya@mit.edu>\n Alexander Korolkov <alexander.korolkov@gmail.com>\n Alexander Light <allight@cs.brown.edu>\n Alexander Stavonin <a.stavonin@gmail.com>\n@@ -41,6 +45,7 @@ Alfie John <alfiej@fastmail.fm>\n Ali Smesseim <smesseim.ali@gmail.com>\n Alisdair Owens <awo101@zepler.net>\n Aljaz\u030c \"g5pw\" Srebrnic\u030c <a2piratesoft@gmail.com>\n+Amol Mundayoor <amol.com@gmail.com>\n Amy Unger <amy.e.unger@gmail.com>\n Anders Kaseorg <andersk@mit.edu>\n Andre Arko <andre@arko.net>\n@@ -56,6 +61,7 @@ Andrew Cann <shum@canndrew.org>\n Andrew Chin <achin@eminence32.net>\n Andrew Dunham <andrew@du.nham.ca>\n Andrew Gallant <jamslam@gmail.com>\n+Andrew Hobden <andrew@hoverbear.org>\n Andrew Paseltiner <apaseltiner@gmail.com>\n Andrew Poelstra <asp11@sfu.ca>\n Andrew Wagner <drewm1980@gmail.com>\n@@ -110,6 +116,8 @@ Brendan McLoughlin <btmcloughlin@gmail.com>\n Brendan Zabarauskas <bjzaba@yahoo.com.au>\n Brett Cannon <brett@python.org>\n Brian Anderson <banderson@mozilla.com>\n+Brian Brooks <brooks.brian@gmail.com>\n+Brian Campbell <lambda@continuation.org>\n Brian Dawn <brian.t.dawn@gmail.com>\n Brian J Brennan <brianloveswords@gmail.com>\n Brian J. Burg <burg@cs.washington.edu>\n@@ -122,6 +130,8 @@ Cadence Marseille <cadencemarseille@gmail.com>\n Caitlin Potter <snowball@defpixel.com>\n Cam Jackson <camjackson89@gmail.com>\n Cameron Zwarich <zwarich@mozilla.com>\n+Camille Roussel <camille@rousselfamily.com>\n+Camille TJHOA <camille.tjhoa@outlook.com>\n CarVac <c.lo.to.da.down.lo@gmail.com>\n Carl Lerche <me@carllerche.com>\n Carl-Anton Ingmarsson <mail@carlanton.se>\n@@ -132,6 +142,8 @@ Carter Hinsley <carterhinsley@gmail.com>\n Carter Tazio Schonwald <carter.schonwald@gmail.com>\n Caspar Krieger <caspar@asparck.com>\n Chase Southwood <chase.southwood@gmail.com>\n+Ches Martin <ches@whiskeyandgrits.net>\n+Chloe <5paceToast@users.noreply.github.com>\n Chris Double <chris.double@double.co.nz>\n Chris Morgan <me@chrismorgan.info>\n Chris Nixon <chris.nixon@sigma.me.uk>\n@@ -158,7 +170,9 @@ Corey Farwell <coreyf+rust@rwell.org>\n Corey Ford <corey@coreyford.name>\n Corey Richardson <corey@octayn.net>\n Cristi Burc\u0103 <scribu@gmail.com>\n+Cristian Kubis <cristian.kubis@tsunix.de>\n DJUrsus <colinvh@divitu.com>\n+Dabo Ross <daboross@daboross.net>\n Damian Gryski <damian@gryski.com>\n Damien Grassart <damien@grassart.com>\n Damien Radtke <dradtke@channeliq.com>\n@@ -167,13 +181,16 @@ Dan Albert <danalbert@google.com>\n Dan Burkert <dan@danburkert.com>\n Dan Connolly <dckc@madmode.com>\n Dan Luu <danluu@gmail.com>\n+Dan Schatzberg <schatzberg.dan@gmail.com>\n+Dan W. <1danwade@gmail.com>\n Dan Yang <dsyang@fb.com>\n Daniel Brooks <db48x@db48x.net>\n Daniel Fagnan <dnfagnan@gmail.com>\n Daniel Farina <daniel@fdr.io>\n Daniel Griffen <daniel@dgriffen.com>\n Daniel Grunwald <daniel@danielgrunwald.de>\n Daniel Hofstetter <daniel.hofstetter@42dh.com>\n+Daniel Lobato Garc\u00eda <elobatocs@gmail.com>\n Daniel Luz <dev@mernen.com>\n Daniel MacDougall <dmacdougall@gmail.com>\n Daniel Micay <danielmicay@gmail.com>\n@@ -183,17 +200,23 @@ Daniel Ralston <Wubbulous@gmail.com>\n Daniel Rosenwasser <DanielRosenwasser@gmail.com>\n Daniel Ursache Dogariu <contact@danniel.net>\n Daniil Smirnov <danslapman@gmail.com>\n+Darin Morrison <darinmorrison+git@gmail.com>\n+Darrell Hamilton <darrell.noice@gmail.com>\n Dave Herman <dherman@mozilla.com>\n Dave Hodder <dmh@dmh.org.uk>\n+Dave Huseby <dhuseby@mozilla.com>\n David Creswick <dcrewi@gyrae.net>\n David Forsythe <dforsythe@gmail.com>\n David Halperin <halperin.dr@gmail.com>\n+David King <dave@davbo.org>\n David Klein <david.klein@baesystemsdetica.com>\n+David Mally <djmally@gmail.com>\n David Manescu <david.manescu@gmail.com>\n David Rajchenbach-Teller <dteller@mozilla.com>\n David Renshaw <dwrenshaw@gmail.com>\n David Vazgenovich Shakaryan <dvshakaryan@gmail.com>\n Davis Silverman <sinistersnare@gmail.com>\n+Denis Defreyne <denis.defreyne@stoneship.org>\n Derecho <derecho@sector5d.org>\n Derek Chiang <derekchiang93@gmail.com>\n Derek Guenther <dguenther9@gmail.com>\n@@ -214,10 +237,12 @@ Do Nhat Minh <mrordinaire@gmail.com>\n Dominik Inf\u00fchr <dominik.infuehr@gmail.com>\n Donovan Preston <donovanpreston@gmail.com>\n Douglas Young <rcxdude@gmail.com>\n+Drew Crawford <drew@sealedabstract.com>\n Drew Willcoxon <adw@mozilla.com>\n Duane Edwards <mail@duaneedwards.net>\n Duncan Regan <duncanregan@gmail.com>\n Dylan Braithwaite <dylanbraithwaite1@gmail.com>\n+Dylan Ede <dylanede@googlemail.com>\n Dzmitry Malyshau <kvarkus@gmail.com>\n Earl St Sauver <estsauver@gmail.com>\n Eduard Bopp <eduard.bopp@aepsil0n.de>\n@@ -230,12 +255,14 @@ Elantsev Serj <elantsev@yandex-team.ru>\n Elliott Slaughter <elliottslaughter@gmail.com>\n Elly Fong-Jones <elly@leptoquark.net>\n Emanuel Rylke <ema-fox@web.de>\n+Emeliov Dmitrii <demelev1990@gmail.com>\n Eric Allen <ericpallen@gmail.com>\n Eric Biggers <ebiggers3@gmail.com>\n Eric Holk <eric.holk@gmail.com>\n Eric Holmes <eric@ejholmes.net>\n Eric Kidd <git@randomhacks.net>\n Eric Martin <e.a.martin1337@gmail.com>\n+Eric Platon <eric.platon@waku-waku.ne.jp>\n Eric Reed <ecreed@cs.washington.edu>\n Erick Rivas <chemical.rivas@gmail.com>\n Erick Tryzelaar <erick.tryzelaar@gmail.com>\n@@ -268,6 +295,7 @@ Florian Wilkens <floya@live.de>\n Florian Zeitz <florob@babelmonkeys.de>\n Francisco Souza <f@souza.cc>\n Franklin Chen <franklinchen@franklinchen.com>\n+FuGangqiang <fu_gangqiang@163.com>\n Gabriel <g2p.code@gmail.com>\n Gareth Daniel Smith <garethdanielsmith@gmail.com>\n Garrett Heel <garrettheel@gmail.com>\n@@ -279,8 +307,10 @@ Geoffrey Thomas <geofft@ldpreload.com>\n Geoffroy Couprie <geo.couprie@gmail.com>\n George Papanikolaou <g3orge.app@gmail.com>\n Georges Dubus <georges.dubus@gmail.com>\n+Germano Gabbianelli <tyrion@users.noreply.github.com>\n Gil Cottle <rc@redtown.org>\n Gioele Barabucci <gioele@svario.it>\n+GlacJAY <glacjay@gmail.com>\n Gleb Kozyrev <gleb@gkoz.com>\n Glenn Willen <gwillen@nerdnet.org>\n Gon\u00e7alo Cabrita <_@gmcabrita.com>\n@@ -303,9 +333,11 @@ Herman J. Radtke III <hermanradtke@gmail.com>\n HeroesGrave <heroesgrave@gmail.com>\n Hong Chulju <ang0123dev@gmail.com>\n Honza Strnad <hanny.strnad@gmail.com>\n+Huachao Huang <huachao.huang@gmail.com>\n Hugo Jobling <hello@thisishugo.com>\n Hugo van der Wijst <hugo@wij.st>\n Huon Wilson <dbau.pp+github@gmail.com>\n+Hyeon Kim <simnalamburt@gmail.com>\n Ian Connolly <iconnolly@mozilla.com>\n Ian D. Bollinger <ian.bollinger@gmail.com>\n Ian Daniher <it.daniher@gmail.com>\n@@ -318,12 +350,14 @@ Isaac Aggrey <isaac.aggrey@gmail.com>\n Isaac Dupree <antispam@idupree.com>\n Ivan Enderlin <ivan.enderlin@hoa-project.net>\n Ivan Petkov <ivanppetkov@gmail.com>\n+Ivan Radanov Ivanov <ivanradanov@yahoo.co.uk>\n Ivan Ukhov <ivan.ukhov@gmail.com>\n Ivano Coppola <rgbfirefox@gmail.com>\n J. J. Weber <jjweber@gmail.com>\n J.C. Moyer <jmoyer1992@gmail.com>\n JONNALAGADDA Srinivas <js@ojuslabs.com>\n JP Sugarbroad <jpsugar@google.com>\n+JP-Ellis <coujellis@gmail.com>\n Jack Heizer <jack.heizer@gmail.com>\n Jack Moffitt <jack@metajack.im>\n Jacob Edelman <edelman.jd@gmail.com>\n@@ -338,6 +372,7 @@ Jake Kerr <kodafox@gmail.com>\n Jake Scott <jake.net@gmail.com>\n Jakub Bukaj <jakub@jakub.cc>\n Jakub Wieczorek <jakubw@jakubw.net>\n+Jakub Vr\u00e1na <jakub@vrana.cz>\n James Deng <cnjamesdeng@gmail.com>\n James Hurst <jamesrhurst@users.noreply.github.com>\n James Lal <james@lightsofapollo.com>\n@@ -359,6 +394,7 @@ Jason Toffaletti <jason@topsy.com>\n Jauhien Piatlicki <jauhien@gentoo.org>\n Jay Anderson <jayanderson0@gmail.com>\n Jay True <glacjay@gmail.com>\n+Jeaye <jeaye@arrownext.com>\n Jed Davis <jld@panix.com>\n Jed Estep <aje@jhu.edu>\n Jeff Balogh <jbalogh@mozilla.com>\n@@ -375,29 +411,36 @@ Jesse Jones <jesse9jones@gmail.com>\n Jesse Luehrs <doy@tozt.net>\n Jesse Ray <jesse@localhost.localdomain>\n Jesse Ruderman <jruderman@gmail.com>\n-Jihyun Yu <jihyun@nclab.kaist.ac.kr>\n+Jessy Diamond Exum <jessy.diamondman@gmail.com>\n+Jihyeok Seo <me@limeburst.net>\n+Jihyun Yu <j.yu@navercorp.com>\n Jim Apple <jbapple+rust@google.com>\n Jim Blandy <jimb@red-bean.com>\n Jim Radford <radford@blackbean.org>\n Jimmie Elvenmark <flugsio@gmail.com>\n Jimmy Lu <jimmy.lu.2011@gmail.com>\n Jimmy Zelinskie <jimmyzelinskie@gmail.com>\n+Ji\u0159\u00ed Str\u00e1nsk\u00fd <jistr@jistr.com>\n Joe Pletcher <joepletcher@gmail.com>\n Joe Schafer <joe@jschaf.com>\n Johannes Hoff <johshoff@gmail.com>\n Johannes L\u00f6thberg <johannes@kyriasis.com>\n Johannes Muenzel <jmuenzel@gmail.com>\n+Johannes Oertel <johannes.oertel@uni-due.de>\n John Albietz <inthecloud247@gmail.com>\n John Barker <jebarker@gmail.com>\n John Clements <clements@racket-lang.org>\n+John Ericson <Ericson2314@Yahoo.com>\n John Fresco <john.fresco@utah.edu>\n John Gallagher <jgallagher@bignerdranch.com>\n John Hodge <acessdev@gmail.com>\n John Ka\u030are Alsaker <john.kare.alsaker@gmail.com>\n John Kleint <jk@hinge.co>\n+John K\u00e5re Alsaker <john.kare.alsaker@gmail.com>\n John Louis Walker <injyuw@gmail.com>\n John Schmidt <john.schmidt.h@gmail.com>\n John Simon <john@johnsoft.com>\n+John Zhang <john@zhang.io>\n Jon Haddad <jon@jonhaddad.com>\n Jon Morton <jonanin@gmail.com>\n Jonas Hietala <tradet.h@gmail.com>\n@@ -407,6 +450,7 @@ Jonathan Reem <jonathan.reem@gmail.com>\n Jonathan S <gereeter@gmail.com>\n Jonathan Sternberg <jonathansternberg@gmail.com>\n Joonas Javanainen <joonas.javanainen@gmail.com>\n+Jordan Woehr <jordanwoehr@gmail.com>\n Jordi Boggiano <j.boggiano@seld.be>\n Jorge Aparicio <japaricious@gmail.com>\n Jorge Israel Pe\u00f1a <jorge.israel.p@gmail.com>\n@@ -423,16 +467,17 @@ Joshua Wise <joshua@joshuawise.com>\n Joshua Yanovski <pythonesque@gmail.com>\n Julia Evans <julia@jvns.ca>\n Julian Orth <ju.orth@gmail.com>\n+Julian Viereck <julian.viereck@gmail.com>\n Junseok Lee <lee.junseok@berkeley.edu>\n Junyoung Cho <june0.cho@samsung.com>\n JustAPerson <jpriest8@ymail.com>\n Justin Noah <justinnoah@gmail.com>\n Jyun-Yan You <jyyou.tw@gmail.com>\n Kang Seonghoon <kang.seonghoon@mearie.org>\n-Kang Seonghoon <public+git@mearie.org>\n Kasey Carrothers <kaseyc.808@gmail.com>\n Keegan McAllister <mcallister.keegan@gmail.com>\n Kelly Wilson <wilsonk@cpsc.ucalgary.ca>\n+Kelvin Ly <kelvin.ly1618@gmail.com>\n Ken Tossell <ken@tossell.net>\n KernelJ <kernelj@epixxware.com>\n Keshav Kini <keshav.kini@gmail.com>\n@@ -442,6 +487,7 @@ Kevin Butler <haqkrs@gmail.com>\n Kevin Cantu <me@kevincantu.org>\n Kevin Mehall <km@kevinmehall.net>\n Kevin Murphy <kemurphy.cmu@gmail.com>\n+Kevin Rauwolf <sweetpea-git@tentacle.net>\n Kevin Walter <kevin.walter.private@googlemail.com>\n Kevin Yap <me@kevinyap.ca>\n Kiet Tran <ktt3ja@gmail.com>\n@@ -459,6 +505,8 @@ Lee Wondong <wdlee91@gmail.com>\n LemmingAvalanche <haugsbakk@yahoo.no>\n Lennart Kudling <github@kudling.de>\n Leo Testard <leo.testard@gmail.com>\n+Leonids Maslovs <leonids.maslovs@galeoconsulting.com>\n+Liam Monahan <liam@monahan.io>\n Liigo Zhuang <com.liigo@gmail.com>\n Lindsey Kuper <lindsey@composition.al>\n Lionel Flandrin <lionel.flandrin@parrot.com>\n@@ -495,6 +543,7 @@ Mathijs van de Nes <git@mathijs.vd-nes.nl>\n Matt Brubeck <mbrubeck@limpet.net>\n Matt Carberry <carberry.matt@gmail.com>\n Matt Coffin <mcoffin13@gmail.com>\n+Matt Cox <mattcoxpdx@gmail.com>\n Matt McPherrin <git@mcpherrin.ca>\n Matt Murphy <matthew.john.murphy@gmail.com>\n Matt Roche <angst7@gmail.com>\n@@ -532,6 +581,7 @@ Michael Sullivan <sully@msully.net>\n Michael Williams <m.t.williams@live.com>\n Michael Woerister <michaelwoerister@posteo>\n Michael Zhou <moz@google.com>\n+Micha\u0142 Krasnoborski <mkrdln@gmail.com>\n Mick Koch <kchmck@gmail.com>\n Micka\u00ebl Delahaye <mickael.delahaye@gmail.com>\n Mihnea Dobrescu-Balaur <mihnea@linux.com>\n@@ -559,7 +609,9 @@ Nathaniel Theis <nttheis@gmail.com>\n Neil Pankey <npankey@gmail.com>\n Nelson Chen <crazysim@gmail.com>\n NiccosSystem <niccossystem@gmail.com>\n+Nicholas <npmazzuca@gmail.com>\n Nicholas Bishop <nicholasbishop@gmail.com>\n+Nicholas Mazzuca <npmazzuca@gmail.com>\n Nick Cameron <ncameron@mozilla.com>\n Nick Desaulniers <ndesaulniers@mozilla.com>\n Nick Howell <howellnick@gmail.com>\n@@ -579,8 +631,10 @@ Oliver Schneider <oliver.schneider@kit.edu>\n Olivier Saut <osaut@airpost.net>\n Olle Jonsson <olle.jonsson@gmail.com>\n Or Brostovski <tohava@gmail.com>\n+Or Neeman <oneeman@gmail.com>\n Oren Hazi <oren.hazi@gmail.com>\n Orpheus Lummis <o@orpheuslummis.com>\n+Orph\u00e9e Lafond-Lummis <o@orftz.com>\n P1start <rewi-github@whanau.org>\n Pablo Brasero <pablo@pablobm.com>\n Palmer Cox <p@lmercox.com>\n@@ -590,8 +644,11 @@ Patrick Reisert <kpreisert@gmail.com>\n Patrick Walton <pcwalton@mimiga.net>\n Patrick Yevsukov <patrickyevsukov@users.noreply.github.com>\n Patrik K\u00e5rlin <patrik.karlin@gmail.com>\n+Paul ADENOT <paul@paul.cx>\n Paul Collier <paul@paulcollier.ca>\n+Paul Collins <paul@ondioline.org>\n Paul Crowley <paulcrowley@google.com>\n+Paul Osborne <osbpau@gmail.com>\n Paul Stansifer <paul.stansifer@gmail.com>\n Paul Woolcock <pwoolcoc+github@gmail.com>\n Pavel Panchekha <me@pavpanchekha.com>\n@@ -602,6 +659,7 @@ Peter Atashian <retep998@gmail.com>\n Peter Elmers <peter.elmers@yahoo.com>\n Peter Hull <peterhull90@gmail.com>\n Peter Marheine <peter@taricorp.net>\n+Peter Minten <peter@pminten.nl>\n Peter Schuller <peter.schuller@infidyne.com>\n Peter Williams <peter@newton.cx>\n Peter Zotov <whitequark@whitequark.org>\n@@ -620,14 +678,17 @@ Potpourri <pot_pourri@mail.ru>\n Pradeep Kumar <gohanpra@gmail.com>\n Prudhvi Krishna Surapaneni <me@prudhvi.net>\n Pyfisch <pyfisch@gmail.com>\n+Pyry Kontio <pyry.kontio@drasa.eu>\n Pythoner6 <pythoner6@gmail.com>\n Q.P.Liu <qpliu@yahoo.com>\n Rafael \u00c1vila de Esp\u00edndola <respindola@mozilla.com>\n+Rahul Hor\u00e9 <hore.rahul@gmail.com>\n Ralph Bodenner <rkbodenner+github@gmail.com>\n Ralph Giles <giles@thaumas.net>\n Ramkumar Ramachandra <artagnon@gmail.com>\n Randati <anttivan@gmail.com>\n Raphael Catolino <raphael.catolino@gmail.com>\n+Raphael Nestler <raphael.nestler@gmail.com>\n Raphael Speyer <rspeyer@gmail.com>\n Raul Gutierrez S <rgs@itevenworks.net>\n Ray Clanan <rclanan@utopianconcept.com>\n@@ -637,6 +698,7 @@ Renato Riccieri Santos Zannon <renato@rrsz.com.br>\n Renato Zannon <renato@rrsz.com.br>\n Reuben Morais <reuben.morais@gmail.com>\n Ricardo M. Correia <rcorreia@wizy.org>\n+Ricardo Martins <ricardo@scarybox.net>\n Rich Lane <rlane@club.cc.cmu.edu>\n Richard Diamond <wichard@vitalitystudios.com>\n Richo Healey <richo@psych0tik.net>\n@@ -663,10 +725,13 @@ Russell <rpjohnst@gmail.com>\n Ruud van Asseldonk <dev@veniogames.com>\n Ryan Levick <ryan@6wunderkinder.com>\n Ryan Mulligan <ryan@ryantm.com>\n+Ryan Prichard <ryan.prichard@gmail.com>\n+Ryan Riginding <marc.riginding@gmail.com>\n Ryan Scheel <ryan.havvy@gmail.com>\n Ryman <haqkrs@gmail.com>\n R\u00fcdiger Sonderfeld <ruediger@c-plusplus.de>\n S Pradeep Kumar <gohanpra@gmail.com>\n+Sae-bom Kim <sae-bom.kim@samsung.com>\n Salem Talha <salem.a.talha@gmail.com>\n Samuel Chase <samebchase@gmail.com>\n Samuel Neves <sneves@dei.uc.pt>\n@@ -678,6 +743,7 @@ Santiago Rodriguez <sanrodari@gmail.com>\n Saurabh Anand <saurabhanandiit@gmail.com>\n Scott Jenkins <scottdjwales@gmail.com>\n Scott Lawrence <bytbox@gmail.com>\n+Scott Olson <scott@scott-olson.org>\n Sean Chalmers <sclhiannan@gmail.com>\n Sean Collins <sean@cllns.com>\n Sean Gillespie <sean.william.g@gmail.com>\n@@ -730,10 +796,13 @@ Tamir Duberstein <tamird@squareup.com>\n Taras Shpot <mrshpot@gmail.com>\n Taylor Hutchison <seanthutchison@gmail.com>\n Ted Horst <ted.horst@earthlink.net>\n+Tero H\u00e4nninen <tejohann@kapsi.fi>\n Thad Guidry <thadguidry@gmail.com>\n Thiago Carvalho <thiago.carvalho@westwing.de>\n+Thiago Pontes <email@thiago.me>\n Thomas Backman <serenity@exscape.org>\n Thomas Daede <daede003@umn.edu>\n+Tiago Nobrega <tigarmo@gmail.com>\n Till Hoeppner <till@hoeppner.ws>\n Tim Brooks <brooks@cern.ch>\n Tim Chevalier <chevalier@alum.wellesley.edu>\n@@ -760,6 +829,7 @@ Toni C\u00e1rdenas <toni@tcardenas.me>\n Tony Young <tony@rfw.name>\n Torsten Weber <TorstenWeber12@gmail.com>\n Travis Watkins <amaranth@ubuntu.com>\n+Trent Nadeau <tanadeau@gmail.com>\n Trent Ogren <tedwardo2@gmail.com>\n Trinick <slicksilver555@mac.com>\n Tristan Storch <tstorch@math.uni-bielefeld.de>\n@@ -769,9 +839,9 @@ TyOverby <ty@pre-alpha.com>\n Tycho Sci <tychosci@gmail.com>\n Tyler Bindon <martica@martica.org>\n Tyler Thrailkill <tylerbthrailkill@gmail.com>\n-U-NOV2010\\eugals\n Ulrik Sverdrup <root@localhost>\n Ulysse Carion <ulysse@ulysse.io>\n+User Jyyou <jyyou@plaslab.cs.nctu.edu.tw>\n Utkarsh Kukreti <utkarshkukreti@gmail.com>\n Uwe Dauernheim <uwe@dauernheim.net>\n Vadim Chugunov <vadimcn@gmail.com>\n@@ -797,6 +867,7 @@ Wade Mealing <wmealing@gmail.com>\n Wangshan Lu <wisagan@gmail.com>\n WebeWizard <webewizard@gmail.com>\n Wendell Smith <wendell.smith@yale.edu>\n+Wesley Wiser <wwiser@gmail.com>\n Will <will@glozer.net>\n William Ting <io@williamting.com>\n Willson Mock <willson.mock@gmail.com>\n@@ -817,12 +888,16 @@ Zack Slayton <zack.slayton@gmail.com>\n Zbigniew Siciarz <zbigniew@siciarz.net>\n Ziad Hatahet <hatahet@gmail.com>\n Zooko Wilcox-O'Hearn <zooko@zooko.com>\n+adridu59 <adri-from-59@hotmail.fr>\n aochagavia <aochagavia92@gmail.com>\n areski <areski@gmail.com>\n arturo <arturo@openframeworks.cc>\n auREAX <mark@xn--hwg34fba.ws>\n+awlnx <alecweber1994@gmail.com>\n+aydin.kim <aydin.kim@samsung.com>\n b1nd <clint.ryan3@gmail.com>\n bachm <Ab@vapor.com>\n+bcoopers <coopersmithbrian@gmail.com>\n blackbeam <aikorsky@gmail.com>\n blake2-ppc <ulrik.sverdrup@gmail.com>\n bluss <bluss>\n@@ -835,6 +910,7 @@ comex <comexk@gmail.com>\n crhino <piraino.chris@gmail.com>\n dan@daramos.com <dan@daramos.com>\n darkf <lw9k123@gmail.com>\n+defuz <defuz.net@gmail.com>\n dgoon <dgoon@dgoon.net>\n donkopotamus <general@chocolate-fish.com>\n eliovir <eliovir@gmail.com>\n@@ -845,6 +921,7 @@ fort <e@mail.com>\n free-Runner <aali07@students.poly.edu>\n g3xzh <g3xzh@yahoo.com>\n gamazeps <gamaz3ps@gmail.com>\n+gareth <gareth@gareth-N56VM.(none)>\n gentlefolk <cemacken@gmail.com>\n gifnksm <makoto.nksm@gmail.com>\n hansjorg <hansjorg@gmail.com>\n@@ -860,6 +937,8 @@ joaoxsouls <joaoxsouls@gmail.com>\n jrincayc <jrincayc@users.noreply.github.com>\n juxiliary <juxiliary@gmail.com>\n jxv <joevargas@hush.com>\n+kgv <mail@kgv.name>\n+kjpgit <kjpgit@users.noreply.github.com>\n klutzy <klutzytheklutzy@gmail.com>\n korenchkin <korenchkin2@gmail.com>\n kud1ing <github@kudling.de>\n@@ -868,6 +947,7 @@ kvark <kvarkus@gmail.com>\n kwantam <kwantam@gmail.com>\n lpy <pylaurent1314@gmail.com>\n lucy <ne.tetewi@gmail.com>\n+lummax <luogpg@googlemail.com>\n lyuts <dioxinu@gmail.com>\n m-r-r <raybaudroigm@gmail.com>\n madmalik <matthias.tellen@googlemail.com>\n@@ -882,20 +962,26 @@ mrec <mike.capp@gmail.com>\n musitdev <philippe.delrieu@free.fr>\n nathan dotz <nathan.dotz@gmail.com>\n nham <hamann.nick@gmail.com>\n+niftynif <nif.ward@gmail.com>\n noam <noam@clusterfoo.com>\n novalis <novalis@novalis.org>\n+nsf <no.smile.face@gmail.com>\n+nwin <nwin@users.noreply.github.com>\n oli-obk <github6541940@oli-obk.de>\n olivren <o.renaud@gmx.fr>\n osa1 <omeragacan@gmail.com>\n posixphreak <posixphreak@gmail.com>\n qwitwa <qwitwa@gmail.com>\n+ray glover <ray@rayglover.net>\n reedlepee <reedlepee123@gmail.com>\n+reus <reusee@ymail.com>\n rjz <rj@rjzaworski.com>\n sevrak <sevrak@rediffmail.com>\n sheroze1123 <mss385@cornell.edu>\n smenardpw <sebastien@knoglr.com>\n sp3d <sp3d@github>\n startling <tdixon51793@gmail.com>\n+tav <tav@espians.com>\n th0114nd <th0114nd@gmail.com>\n theptrk <patrick.tran06@gmail.com>\n thiagopnts <thiagopnts@gmail.com>\n@@ -911,3 +997,5 @@ xales <xales@naveria.com>\n zofrex <zofrex@gmail.com>\n zslayton <zack.slayton@gmail.com>\n zzmp <zmp@umich.edu>\n+\u0141ukasz Niemier <lukasz@niemier.pl>\n+\u514b\u96f7 <geekcraik@users.noreply.github.com>"}, {"sha": "ef474fcf79dabaadf92c1a4c3af284973aa4f778", "filename": "configure", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/configure", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -545,7 +545,6 @@ opt verify-install 1 \"verify installed binaries work\"\n # This is used by the automation to produce single-target nightlies\n opt dist-host-only 0 \"only install bins for the host architecture\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n-opt jemalloc 1 \"build liballoc with jemalloc\"\n opt llvm-version-check 1 \"don't check if the LLVM version is supported, build anyway\"\n \n valopt localstatedir \"/var/lib\" \"local state directory\"\n@@ -562,6 +561,7 @@ valopt android-cross-path \"/opt/ndk_standalone\" \"Android NDK standalone path\"\n # (others are conditionally saved).\n opt_nosave manage-submodules 1 \"let the build manage the git submodules\"\n opt_nosave clang 0 \"prefer clang to gcc for building the runtime\"\n+opt_nosave jemalloc 1 \"build liballoc with jemalloc\"\n \n valopt_nosave prefix \"/usr/local\" \"set installation prefix\"\n valopt_nosave local-rust-root \"/usr/local\" \"set prefix for local rust binary\"\n@@ -669,7 +669,6 @@ probe CFG_LD               ld\n probe CFG_VALGRIND         valgrind\n probe CFG_PERF             perf\n probe CFG_ISCC             iscc\n-probe CFG_JAVAC            javac\n probe CFG_ANTLR4           antlr4\n probe CFG_GRUN             grun\n probe CFG_FLEX             flex\n@@ -679,6 +678,14 @@ probe CFG_XELATEX          xelatex\n probe CFG_GDB              gdb\n probe CFG_LLDB             lldb\n \n+# On MacOS X, invoking `javac` pops up a dialog if the JDK is not\n+# installed. Since `javac` is only used if `antlr4` is available,\n+# probe for it only in this case.\n+if [ ! -z \"$CFG_ANTLR4\" ]\n+then\n+   probe CFG_JAVAC            javac\n+fi\n+\n if [ ! -z \"$CFG_GDB\" ]\n then\n     # Store GDB's version\n@@ -775,7 +782,7 @@ if [ $CFG_OSTYPE = unknown-bitrig ]\n then\n     step_msg \"on Bitrig, forcing use of clang, disabling jemalloc\"\n     CFG_ENABLE_CLANG=1\n-    CFG_ENABLE_JEMALLOC=0\n+    CFG_DISABLE_JEMALLOC=1\n fi\n \n if [ -z \"$CFG_ENABLE_CLANG\" -a -z \"$CFG_GCC\" ]\n@@ -828,6 +835,12 @@ then\n     putvar CFG_ENABLE_CLANG\n fi\n \n+# Same with jemalloc.  save the setting here.\n+if [ ! -z \"$CFG_DISABLE_JEMALLOC\" ]\n+then\n+    putvar CFG_DISABLE_JEMALLOC\n+fi\n+\n if [ ! -z \"$CFG_LLVM_ROOT\" -a -z \"$CFG_DISABLE_LLVM_VERSION_CHECK\" -a -e \"$CFG_LLVM_ROOT/bin/llvm-config\" ]\n then\n     step_msg \"using custom LLVM at $CFG_LLVM_ROOT\""}, {"sha": "52d07ae465f4412e976909917d0412b3973a1513", "filename": "src/doc/trpl/closures.md", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fdoc%2Ftrpl%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fdoc%2Ftrpl%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fclosures.md?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -175,9 +175,6 @@ we called `add_num`, it mutated the underlying value, as we'd expect. We also\n needed to declare `add_num` as `mut` too, because we\u2019re mutating its\n environment.\n \n-We also had to declare `add_num` as mut, since we will be modifying its\n-environment.\n-\n If we change to a `move` closure, it's different:\n \n ```rust"}, {"sha": "f9358f28b01945fcd2f389376361676d00180c13", "filename": "src/doc/trpl/concurrency.md", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fdoc%2Ftrpl%2Fconcurrency.md", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fdoc%2Ftrpl%2Fconcurrency.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fconcurrency.md?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -88,17 +88,14 @@ When `guard` goes out of scope, it will block execution until the thread is\n finished. If we didn't want this behaviour, we could use `thread::spawn()`:\n \n ```\n-# #![feature(old_io, std_misc)]\n use std::thread;\n-use std::old_io::timer;\n-use std::time::Duration;\n \n fn main() {\n     thread::spawn(|| {\n         println!(\"Hello from a thread!\");\n     });\n \n-    timer::sleep(Duration::milliseconds(50));\n+    thread::sleep_ms(50);\n }\n ```\n \n@@ -147,10 +144,7 @@ As an example, here is a Rust program that would have a data race in many\n languages. It will not compile:\n \n ```ignore\n-# #![feature(old_io, std_misc)]\n use std::thread;\n-use std::old_io::timer;\n-use std::time::Duration;\n \n fn main() {\n     let mut data = vec![1u32, 2, 3];\n@@ -161,14 +155,14 @@ fn main() {\n         });\n     }\n \n-    timer::sleep(Duration::milliseconds(50));\n+    thread::sleep_ms(50);\n }\n ```\n \n This gives us an error:\n \n ```text\n-12:17 error: capture of moved value: `data`\n+8:17 error: capture of moved value: `data`\n         data[i] += 1;\n         ^~~~\n ```\n@@ -187,10 +181,7 @@ only one person at a time can mutate what's inside. For that, we can use the\n but for a different reason:\n \n ```ignore\n-# #![feature(old_io, std_misc)]\n use std::thread;\n-use std::old_io::timer;\n-use std::time::Duration;\n use std::sync::Mutex;\n \n fn main() {\n@@ -203,17 +194,17 @@ fn main() {\n         });\n     }\n \n-    timer::sleep(Duration::milliseconds(50));\n+    thread::sleep_ms(50);\n }\n ```\n \n Here's the error:\n \n ```text\n-<anon>:11:9: 11:22 error: the trait `core::marker::Send` is not implemented for the type `std::sync::mutex::MutexGuard<'_, collections::vec::Vec<u32>>` [E0277]\n+<anon>:9:9: 9:22 error: the trait `core::marker::Send` is not implemented for the type `std::sync::mutex::MutexGuard<'_, collections::vec::Vec<u32>>` [E0277]\n <anon>:11         thread::spawn(move || {\n                   ^~~~~~~~~~~~~\n-<anon>:11:9: 11:22 note: `std::sync::mutex::MutexGuard<'_, collections::vec::Vec<u32>>` cannot be sent between threads safely\n+<anon>:9:9: 9:22 note: `std::sync::mutex::MutexGuard<'_, collections::vec::Vec<u32>>` cannot be sent between threads safely\n <anon>:11         thread::spawn(move || {\n                   ^~~~~~~~~~~~~\n ```\n@@ -232,11 +223,8 @@ guard across thread boundaries, which gives us our error.\n We can use `Arc<T>` to fix this. Here's the working version:\n \n ```\n-# #![feature(old_io, std_misc)]\n use std::sync::{Arc, Mutex};\n use std::thread;\n-use std::old_io::timer;\n-use std::time::Duration;\n \n fn main() {\n     let data = Arc::new(Mutex::new(vec![1u32, 2, 3]));\n@@ -249,20 +237,17 @@ fn main() {\n         });\n     }\n \n-    timer::sleep(Duration::milliseconds(50));\n+    thread::sleep_ms(50);\n }\n ```\n \n We now call `clone()` on our `Arc`, which increases the internal count. This\n handle is then moved into the new thread. Let's examine the body of the\n thread more closely:\n \n-```\n-# #![feature(old_io, std_misc)]\n+```rust\n # use std::sync::{Arc, Mutex};\n # use std::thread;\n-# use std::old_io::timer;\n-# use std::time::Duration;\n # fn main() {\n #     let data = Arc::new(Mutex::new(vec![1u32, 2, 3]));\n #     for i in 0..2 {\n@@ -272,6 +257,7 @@ thread::spawn(move || {\n     data[i] += 1;\n });\n #     }\n+#     thread::sleep_ms(50);\n # }\n ```\n "}, {"sha": "c839688047aa6b28013fbf413da3dfea04ea19f6", "filename": "src/doc/trpl/installing-rust.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fdoc%2Ftrpl%2Finstalling-rust.md", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fdoc%2Ftrpl%2Finstalling-rust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Finstalling-rust.md?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -18,9 +18,9 @@ $ sudo sh rustup.sh\n ```\n \n If you're on Windows, please download either the [32-bit\n-installer](https://static.rust-lang.org/dist/rust-nightly-i686-pc-windows-gnu.exe)\n+installer](https://static.rust-lang.org/dist/rust-1.0.0-beta-i686-pc-windows-gnu.exe)\n or the [64-bit\n-installer](https://static.rust-lang.org/dist/rust-nightly-x86_64-pc-windows-gnu.exe)\n+installer](https://static.rust-lang.org/dist/rust-1.0.0-beta-x86_64-pc-windows-gnu.exe)\n and run it.\n \n If you decide you don't want Rust anymore, we'll be a bit sad, but that's okay."}, {"sha": "d69831c23783814fb6e60f7c48de024dd1bf7b02", "filename": "src/doc/trpl/unstable.md", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fdoc%2Ftrpl%2Funstable.md", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fdoc%2Ftrpl%2Funstable.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Funstable.md?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -1 +1,51 @@\n % Unstable Rust\n+\n+Rust provides three distribution channels for Rust: nightly, beta, and stable.\n+Unstable features are only available on nightly Rust. For more details on this\n+process, see [this post](http://blog.rust-lang.org/2014/10/30/Stability.html).\n+\n+To install nightly Rust, you can use `rustup.sh`:\n+\n+```bash\n+$ curl -s https://static.rust-lang.org/rustup.sh | sudo sh -s -- --channel=nightly\n+```\n+\n+If you're concerned about the [potential insecurity](http://curlpipesh.tumblr.com/) of using `curl | sudo sh`,\n+please keep reading and see our disclaimer below. And feel free to use a two-step version of the installation and examine our installation script:\n+\n+```bash\n+$ curl -f -L https://static.rust-lang.org/rustup.sh -O\n+$ sudo sh rustup.sh --channel=nightly\n+```\n+\n+If you're on Windows, please download either the [32-bit\n+installer](https://static.rust-lang.org/dist/rust-nightly-i686-pc-windows-gnu.exe)\n+or the [64-bit\n+installer](https://static.rust-lang.org/dist/rust-nightly-x86_64-pc-windows-gnu.exe)\n+and run it.\n+\n+If you decide you don't want Rust anymore, we'll be a bit sad, but that's okay.\n+Not every programming language is great for everyone. Just run the uninstall\n+script:\n+\n+```bash\n+$ sudo /usr/local/lib/rustlib/uninstall.sh\n+```\n+\n+If you used the Windows installer, just re-run the `.exe` and it will give you\n+an uninstall option.\n+\n+You can re-run this script any time you want to update Rust. Which, at this\n+point, is often. Rust is still pre-1.0, and so people assume that you're using\n+a very recent Rust.\n+\n+This brings me to one other point: some people, and somewhat rightfully so, get\n+very upset when we tell you to `curl | sudo sh`. And they should be! Basically,\n+when you do this, you are trusting that the good people who maintain Rust\n+aren't going to hack your computer and do bad things. That's a good instinct!\n+If you're one of those people, please check out the documentation on [building\n+Rust from Source](https://github.com/rust-lang/rust#building-from-source), or\n+[the official binary downloads](http://www.rust-lang.org/install.html). And we\n+promise that this method will not be the way to install Rust forever: it's just\n+the easiest way to keep people updated while Rust is in its alpha state.\n+"}, {"sha": "a39f125e01cd3faefcbe23c8db4967378bfd8dae", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -446,7 +446,7 @@ impl<T> Weak<T> {\n     /// ```\n     pub fn upgrade(&self) -> Option<Arc<T>> {\n         // We use a CAS loop to increment the strong count instead of a\n-        // fetch_add because once the count hits 0 is must never be above 0.\n+        // fetch_add because once the count hits 0 it must never be above 0.\n         let inner = self.inner();\n         loop {\n             let n = inner.strong.load(SeqCst);"}, {"sha": "4503ad14e92b49b9bea7b625a31289c131771fae", "filename": "src/libcollections/borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibcollections%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibcollections%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fborrow.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -342,7 +342,7 @@ impl<'a,  B: ?Sized> IntoCow<'a, B> for Cow<'a, B> where B: ToOwned {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, T: Clone> AsRef<T> for Cow<'a, T> {\n+impl<'a, T: ?Sized + ToOwned> AsRef<T> for Cow<'a, T> {\n     fn as_ref(&self) -> &T {\n         self\n     }"}, {"sha": "b767a1ea054c15fb5b23a88a0565ff3316b1ee69", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -185,7 +185,7 @@ impl<T> Vec<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// let mut vec: Vec<_> = Vec::with_capacity(10);\n+    /// let mut vec = Vec::with_capacity(10);\n     ///\n     /// // The vector contains no items, even though it has capacity for more\n     /// assert_eq!(vec.len(), 0);"}, {"sha": "b5f16b6ccf2603d0b5718c29dc6952bfd887e765", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -1065,7 +1065,7 @@ pub trait IntoIterator {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     type Item;\n \n-    /// A container for iterating over elements of type Item\n+    /// A container for iterating over elements of type `Item`\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     type IntoIter: Iterator<Item=Self::Item>;\n "}, {"sha": "47a8bf838997dffcb91a69127093844fec384757", "filename": "src/libcore/result.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -34,24 +34,18 @@\n //! enum Version { Version1, Version2 }\n //!\n //! fn parse_version(header: &[u8]) -> Result<Version, &'static str> {\n-//!     if header.len() < 1 {\n-//!         return Err(\"invalid header length\");\n-//!     }\n-//!     match header[0] {\n-//!         1 => Ok(Version::Version1),\n-//!         2 => Ok(Version::Version2),\n-//!         _ => Err(\"invalid version\")\n+//!     match header.get(0) {\n+//!         None => Err(\"invalid header length\"),\n+//!         Some(&1) => Ok(Version::Version1),\n+//!         Some(&2) => Ok(Version::Version2),\n+//!         Some(_) => Err(\"invalid version\")\n //!     }\n //! }\n //!\n //! let version = parse_version(&[1, 2, 3, 4]);\n //! match version {\n-//!     Ok(v) => {\n-//!         println!(\"working with version: {:?}\", v);\n-//!     }\n-//!     Err(e) => {\n-//!         println!(\"error parsing header: {:?}\", e);\n-//!     }\n+//!     Ok(v) => println!(\"working with version: {:?}\", v),\n+//!     Err(e) => println!(\"error parsing header: {:?}\", e),\n //! }\n //! ```\n //!"}, {"sha": "4f8488cca682b0d7679b962de0150b1971829a8f", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -713,10 +713,12 @@\n                 if (crates[i] == window.currentCrate) {\n                     klass += ' current';\n                 }\n-                var desc = rawSearchIndex[crates[i]].items[0][3];\n-                div.append($('<a>', {'href': '../' + crates[i] + '/index.html',\n-                                     'title': plainSummaryLine(desc),\n-                                     'class': klass}).text(crates[i]));\n+                if (rawSearchIndex[crates[i]].items[0]) {\n+                    var desc = rawSearchIndex[crates[i]].items[0][3];\n+                    div.append($('<a>', {'href': '../' + crates[i] + '/index.html',\n+                                         'title': plainSummaryLine(desc),\n+                                         'class': klass}).text(crates[i]));\n+                }\n             }\n             sidebar.append(div);\n         }"}, {"sha": "df81981c3f4451eb2f9e8dd4c8963fff82a37d80", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -77,9 +77,8 @@\n //! including [`atomic`](sync/atomic/index.html), and [`mpsc`](sync/mpsc/index.html),\n //! which contains the channel types for message passing.\n //!\n-//! Common types of I/O, including files, TCP, UDP, pipes, Unix domain sockets,\n-//! timers, and process spawning, are defined in the\n-//! [`old_io`](old_io/index.html) module.\n+//! Common types of I/O, including files, TCP, UDP, pipes, Unix domain sockets, and\n+//! process spawning, are defined in the [`io`](io/index.html) module.\n //!\n //! Rust's I/O and concurrency depends on a small runtime interface\n //! that lives, along with its support code, in mod [`rt`](rt/index.html)."}, {"sha": "ebc6b04c29591108d3f28e724b4b9b74cd1232e6", "filename": "src/rust-installer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frust-installer?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -1 +1 @@\n-Subproject commit 49cc7f6fef12bdd77a0f8b182d9a64c371cb17c8\n+Subproject commit ebc6b04c29591108d3f28e724b4b9b74cd1232e6"}, {"sha": "6d3d1207788303f7036e206441060274724d0707", "filename": "src/test/parse-fail/pat-lt-bracket-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-1.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "previous_filename": "src/test/compile-fail/issue-22426-1.rs"}, {"sha": "6a0653041d45b194d344a7cb6ab9d34dfae78c5c", "filename": "src/test/parse-fail/pat-lt-bracket-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-2.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "previous_filename": "src/test/compile-fail/issue-22426-2.rs"}, {"sha": "8ea2bcf900c97066e7f4f798328b45bd57343acd", "filename": "src/test/parse-fail/pat-lt-bracket-3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-3.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "previous_filename": "src/test/compile-fail/issue-22426-3.rs"}, {"sha": "3d9b492307a7cd7493b66e6dbfab58b5e5ecd652", "filename": "src/test/parse-fail/pat-lt-bracket-4.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-4.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum BtNode {\n+    Node(u32,Box<BtNode>,Box<BtNode>),\n+    Leaf(u32),\n+}\n+\n+fn main() {\n+    let y = match x {\n+        Foo<T>::A(value) => value, //~ error: expected one of `=>`, `@`, `if`, or `|`, found `<`\n+        Foo<T>::B => 7,\n+    };\n+}"}, {"sha": "3345845eee9ae0e5784472421fba06ccebef0ea3", "filename": "src/test/parse-fail/pat-lt-bracket-5.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-5.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let v[0] = v[1]; //~ error: expected one of `:`, `;`, `=`, or `@`, found `[`\n+}"}, {"sha": "72fdae82260eafed8485fa05c69f8b347836dda6", "filename": "src/test/parse-fail/pat-lt-bracket-6.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-6.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let Test(&desc[..]) = x; //~ error: expected one of `,` or `@`, found `[`\n+}"}, {"sha": "c7731d156ad626fd345cb2ba5895e373f848e0de", "filename": "src/test/parse-fail/pat-lt-bracket-7.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-7.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    for thing(x[]) {} //~ error: expected one of `,` or `@`, found `[`\n+}"}, {"sha": "e1cbb961b1bcc5c0e769827889f8acc982663c53", "filename": "src/test/parse-fail/pat-ranges-1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-ranges-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-ranges-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-ranges-1.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Parsing of range patterns\n+\n+fn main() {\n+    let macropus!() ... 11 = 12; //~ error: expected one of `:`, `;`, or `=`, found `...`\n+}"}, {"sha": "04ad5ff083bc8f98e8d98c55fe6d90ab3b09d738", "filename": "src/test/parse-fail/pat-ranges-2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-ranges-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-ranges-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-ranges-2.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Parsing of range patterns\n+\n+fn main() {\n+    let 10 ... makropulos!() = 12; //~ error: expected one of `::`, `:`, `;`, or `=`, found `!`\n+}"}, {"sha": "5f7aac71d29b25bc129377fc09bdfb1e5ffcfdc2", "filename": "src/test/parse-fail/pat-ranges-3.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-ranges-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-ranges-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-ranges-3.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Parsing of range patterns\n+\n+fn main() {\n+    let 10 ... 10 + 3 = 12; //~ expected one of `:`, `;`, or `=`, found `+`\n+}"}, {"sha": "50dcb8995279c8a74d8396369142c16d35bdd8de", "filename": "src/test/parse-fail/pat-ranges-4.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-ranges-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Fparse-fail%2Fpat-ranges-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-ranges-4.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Parsing of range patterns\n+\n+fn main() {\n+    let 10 - 3 ... 10 = 8; //~ error: expected one of `...`, `:`, `;`, or `=`, found `-`\n+}"}, {"sha": "b3cb8a78213b8ff64a0f857483bb0d177ff3702a", "filename": "src/test/run-pass/issue-22546.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Frun-pass%2Fissue-22546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Frun-pass%2Fissue-22546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-22546.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Parsing patterns with paths with type parameters (issue #22544)\n+\n+use std::default::Default;\n+\n+#[derive(Default)]\n+pub struct Foo<T>(T, T);\n+\n+impl<T: ::std::fmt::Display> Foo<T> {\n+    fn foo(&self) {\n+        match *self {\n+            Foo::<T>(ref x, ref y) => println!(\"Goodbye, World! {} {}\", x, y)\n+        }\n+    }\n+}\n+\n+trait Tr {\n+    type U;\n+}\n+\n+impl<T> Tr for Foo<T> {\n+    type U = T;\n+}\n+\n+struct Wrapper<T> {\n+    value: T\n+}\n+\n+fn main() {\n+    let Foo::<i32>(a, b) = Default::default();\n+\n+    let f = Foo(2,3);\n+    f.foo();\n+\n+    let w = Wrapper { value: Foo(10u8, 11u8) };\n+    match w {\n+        Wrapper::<Foo<u8>> { value: Foo(10, 11) } => {},\n+        ::Wrapper::<<Foo<_> as Tr>::U> { value: Foo::<u8>(11, 16) } => { panic!() },\n+        _ => { panic!() }\n+    }\n+\n+    if let None::<u8> = Some(8) {\n+        panic!();\n+    }\n+}"}, {"sha": "964989508ccf290f37509f5b5dd66b4f18f16069", "filename": "src/test/run-pass/pat-ranges.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Frun-pass%2Fpat-ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6971727d45494b8362262bb41a45f2c0c5f162bc/src%2Ftest%2Frun-pass%2Fpat-ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpat-ranges.rs?ref=6971727d45494b8362262bb41a45f2c0c5f162bc", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Parsing of range patterns\n+\n+const NUM1: i32 = 10;\n+\n+mod m {\n+    pub const NUM2: i32 = 16;\n+}\n+\n+fn main() {\n+    if let NUM1 ... m::NUM2 = 10 {} else { panic!() }\n+    if let ::NUM1 ... ::m::NUM2 = 11 {} else { panic!() }\n+    if let -13 ... -10 = 12 { panic!() } else {}\n+}"}]}