{"sha": "8b2147b4970a06377defd142fa932d2264d2aa5d", "node_id": "C_kwDOAAsO6NoAKDhiMjE0N2I0OTcwYTA2Mzc3ZGVmZDE0MmZhOTMyZDIyNjRkMmFhNWQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-05-02T22:50:01Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-05-05T16:39:45Z"}, "message": "rustdoc: fix keyboard shortcuts and console log on search page", "tree": {"sha": "dafd833773ffb75da947250f3d61a1507e4bb82e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dafd833773ffb75da947250f3d61a1507e4bb82e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b2147b4970a06377defd142fa932d2264d2aa5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b2147b4970a06377defd142fa932d2264d2aa5d", "html_url": "https://github.com/rust-lang/rust/commit/8b2147b4970a06377defd142fa932d2264d2aa5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b2147b4970a06377defd142fa932d2264d2aa5d/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21a121332b4c5e2302c46956564879c447d555b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/21a121332b4c5e2302c46956564879c447d555b2", "html_url": "https://github.com/rust-lang/rust/commit/21a121332b4c5e2302c46956564879c447d555b2"}], "stats": {"total": 56, "additions": 44, "deletions": 12}, "files": [{"sha": "2bb850f994d0dffc2d81b42d030ef9ba7120005f", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8b2147b4970a06377defd142fa932d2264d2aa5d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/8b2147b4970a06377defd142fa932d2264d2aa5d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=8b2147b4970a06377defd142fa932d2264d2aa5d", "patch": "@@ -43,26 +43,33 @@ const TY_KEYWORD = itemTypes.indexOf(\"keyword\");\n \n // In the search display, allows to switch between tabs.\n function printTab(nb) {\n-    if (nb === 0 || nb === 1 || nb === 2) {\n-        searchState.currentTab = nb;\n-    }\n-    let nb_copy = nb;\n+    let iter = 0;\n+    let foundCurrentTab = false;\n+    let foundCurrentResultSet = false;\n     onEachLazy(document.getElementById(\"titles\").childNodes, elem => {\n-        if (nb_copy === 0) {\n+        if (nb === iter) {\n             addClass(elem, \"selected\");\n+            foundCurrentTab = true;\n         } else {\n             removeClass(elem, \"selected\");\n         }\n-        nb_copy -= 1;\n+        iter += 1;\n     });\n+    iter = 0;\n     onEachLazy(document.getElementById(\"results\").childNodes, elem => {\n-        if (nb === 0) {\n+        if (nb === iter) {\n             addClass(elem, \"active\");\n+            foundCurrentResultSet = true;\n         } else {\n             removeClass(elem, \"active\");\n         }\n-        nb -= 1;\n+        iter += 1;\n     });\n+    if (foundCurrentTab && foundCurrentResultSet) {\n+        searchState.currentTab = nb;\n+    } else if (nb != 0) {\n+        printTab(0);\n+    }\n }\n \n /**\n@@ -1731,6 +1738,7 @@ window.initSearch = rawSearchIndex => {\n             output += '<div id=\"titles\">' +\n                 makeTabHeader(0, signatureTabTitle, ret_others[1]) +\n                 \"</div>\";\n+            currentTab = 0;\n         }\n \n         const resultsElem = document.createElement(\"div\");\n@@ -1746,12 +1754,16 @@ window.initSearch = rawSearchIndex => {\n         }\n         search.appendChild(resultsElem);\n         // Reset focused elements.\n-        searchState.focusedByTab = [null, null, null];\n         searchState.showResults(search);\n         const elems = document.getElementById(\"titles\").childNodes;\n-        elems[0].onclick = () => { printTab(0); };\n-        elems[1].onclick = () => { printTab(1); };\n-        elems[2].onclick = () => { printTab(2); };\n+        searchState.focusedByTab = [];\n+        let i = 0;\n+        for (const elem of elems) {\n+            const j = i;\n+            elem.onclick = () => { printTab(j); };\n+            searchState.focusedByTab.push(null);\n+            i += 1;\n+        }\n         printTab(currentTab);\n     }\n "}, {"sha": "7bc837bfaeb68bc8a1b98df8521b76c7f3211ebd", "filename": "src/test/rustdoc-gui/search-tab-change-title-fn-sig.goml", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8b2147b4970a06377defd142fa932d2264d2aa5d/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml", "raw_url": "https://github.com/rust-lang/rust/raw/8b2147b4970a06377defd142fa932d2264d2aa5d/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml?ref=8b2147b4970a06377defd142fa932d2264d2aa5d", "patch": "@@ -6,6 +6,16 @@ write: (\".search-input\", \"Foo\")\n wait-for: \"#titles\"\n assert-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n assert-text: (\"#titles > button:nth-of-type(1)\", \"In Names\", STARTS_WITH)\n+// Use left-right keys\n+press-key: \"ArrowDown\"\n+press-key: \"ArrowRight\"\n+wait-for-attribute: (\"#titles > button:nth-of-type(2)\", {\"class\": \"selected\"})\n+press-key: \"ArrowRight\"\n+wait-for-attribute: (\"#titles > button:nth-of-type(3)\", {\"class\": \"selected\"})\n+press-key: \"ArrowRight\"\n+wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+press-key: \"ArrowLeft\"\n+wait-for-attribute: (\"#titles > button:nth-of-type(3)\", {\"class\": \"selected\"})\n \n // Now try search-by-return\n goto: file://|DOC_PATH|/test_docs/index.html\n@@ -14,6 +24,16 @@ write: (\".search-input\", \"-> String\")\n wait-for: \"#titles\"\n assert-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n assert-text: (\"#titles > button:nth-of-type(1)\", \"In Function Return Types\", STARTS_WITH)\n+// Use left-right keys\n+press-key: \"ArrowDown\"\n+press-key: \"ArrowRight\"\n+wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+press-key: \"ArrowRight\"\n+wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+press-key: \"ArrowRight\"\n+wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+press-key: \"ArrowLeft\"\n+wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n \n // Try with a search-by-return with no results\n goto: file://|DOC_PATH|/test_docs/index.html"}]}