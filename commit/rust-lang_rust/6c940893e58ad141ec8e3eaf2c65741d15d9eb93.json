{"sha": "6c940893e58ad141ec8e3eaf2c65741d15d9eb93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOTQwODkzZTU4YWQxNDFlYzhlM2VhZjJjNjU3NDFkMTVkOWViOTM=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-01-16T21:28:58Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-01-16T21:28:58Z"}, "message": "branchless .filter(_).count()", "tree": {"sha": "9f069fed736e55e640f5dffa37c585f0f894b846", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f069fed736e55e640f5dffa37c585f0f894b846"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c940893e58ad141ec8e3eaf2c65741d15d9eb93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c940893e58ad141ec8e3eaf2c65741d15d9eb93", "html_url": "https://github.com/rust-lang/rust/commit/6c940893e58ad141ec8e3eaf2c65741d15d9eb93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c940893e58ad141ec8e3eaf2c65741d15d9eb93/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d0baa71b94e15ac43532987777959edbaee098d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0baa71b94e15ac43532987777959edbaee098d", "html_url": "https://github.com/rust-lang/rust/commit/2d0baa71b94e15ac43532987777959edbaee098d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "5dce60b79c99f4aaffd4e313f8402b473f666b8d", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6c940893e58ad141ec8e3eaf2c65741d15d9eb93/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c940893e58ad141ec8e3eaf2c65741d15d9eb93/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=6c940893e58ad141ec8e3eaf2c65741d15d9eb93", "patch": "@@ -1099,6 +1099,16 @@ impl<I: Iterator, P> Iterator for Filter<I, P> where P: FnMut(&I::Item) -> bool\n         let (_, upper) = self.iter.size_hint();\n         (0, upper) // can't know a lower bound, due to the predicate\n     }\n+\n+    #[inline]\n+    fn count(self) -> usize {\n+        let (mut c, mut predicate, mut iter) = (0, self.predicate, self.iter);\n+        for x in iter.by_ref() {\n+            // branchless count\n+            c += (&mut predicate)(&x) as usize;\n+        }\n+        c\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}