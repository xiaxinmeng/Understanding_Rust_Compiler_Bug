{"sha": "17b3712487a4cf2be30e6bd43e89a736a7d86908", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YjM3MTI0ODdhNGNmMmJlMzBlNmJkNDNlODlhNzM2YTdkODY5MDg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-06-20T19:11:20Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-07-08T17:53:44Z"}, "message": "Update existing tests to account for stricter, more correct handling of irrefutable patterns", "tree": {"sha": "aa0aeea0a289104a276632ea0e72cb0063fb553a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa0aeea0a289104a276632ea0e72cb0063fb553a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17b3712487a4cf2be30e6bd43e89a736a7d86908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17b3712487a4cf2be30e6bd43e89a736a7d86908", "html_url": "https://github.com/rust-lang/rust/commit/17b3712487a4cf2be30e6bd43e89a736a7d86908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17b3712487a4cf2be30e6bd43e89a736a7d86908/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed69ef0b6625efa652864eda2d5469eb92dcb682", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed69ef0b6625efa652864eda2d5469eb92dcb682", "html_url": "https://github.com/rust-lang/rust/commit/ed69ef0b6625efa652864eda2d5469eb92dcb682"}], "stats": {"total": 89, "additions": 48, "deletions": 41}, "files": [{"sha": "91a3d843cd4ac2f57d1de1d68c629a5967737f5d", "filename": "src/test/compile-fail/borrowck-move-out-of-vec-tail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs?ref=17b3712487a4cf2be30e6bd43e89a736a7d86908", "patch": "@@ -11,7 +11,7 @@ pub fn main() {\n         Foo { string: ~\"baz\" }\n     ];\n     match x {\n-        [first, ..tail] => {\n+        [_, ..tail] => {\n             match tail {\n                 [Foo { string: a }, Foo { string: b }] => {\n                     //~^ ERROR cannot move out of dereference of & pointer"}, {"sha": "36ae5f88208929397a0c82a73c237f30e15c3186", "filename": "src/test/compile-fail/borrowck-vec-pattern-nesting.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs?ref=17b3712487a4cf2be30e6bd43e89a736a7d86908", "patch": "@@ -17,4 +17,41 @@ fn b() {\n     }\n }\n \n+fn c() {\n+    let mut vec = [~1, ~2, ~3];\n+    match vec {\n+        [_a, .._b] => {\n+            //~^ ERROR cannot move out\n+\n+            // Note: `_a` is *moved* here, but `b` is borrowing,\n+            // hence illegal.\n+            //\n+            // See comment in middle/borrowck/gather_loans/mod.rs\n+            // in the case covering these sorts of vectors.\n+        }\n+        _ => {}\n+    }\n+    let a = vec[0]; //~ ERROR use of partially moved value: `vec`\n+}\n+\n+fn d() {\n+    let mut vec = [~1, ~2, ~3];\n+    match vec {\n+        [.._a, _b] => {\n+            //~^ ERROR cannot move out\n+        }\n+        _ => {}\n+    }\n+    let a = vec[0]; //~ ERROR use of partially moved value: `vec`\n+}\n+\n+fn e() {\n+    let mut vec = [~1, ~2, ~3];\n+    match vec {\n+        [_a, _b, _c] => {}\n+        _ => {}\n+    }\n+    let a = vec[0]; //~ ERROR use of partially moved value: `vec`\n+}\n+\n fn main() {}"}, {"sha": "5f0c7cad6191c532805ac9cde04c5f3dd9a53b13", "filename": "src/test/run-pass/borrowck-newtype-issue-2573.rs", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ed69ef0b6625efa652864eda2d5469eb92dcb682/src%2Ftest%2Frun-pass%2Fborrowck-newtype-issue-2573.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed69ef0b6625efa652864eda2d5469eb92dcb682/src%2Ftest%2Frun-pass%2Fborrowck-newtype-issue-2573.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-newtype-issue-2573.rs?ref=ed69ef0b6625efa652864eda2d5469eb92dcb682", "patch": "@@ -1,32 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-struct foo {bar: baz}\n-\n-struct baz_ {baz: int}\n-\n-type baz = @mut baz_;\n-\n-trait frob {\n-    fn frob(&self);\n-}\n-\n-impl frob for foo {\n-    fn frob(&self) {\n-        really_impure(self.bar);\n-    }\n-}\n-\n-// Override default mode so that we are passing by value\n-fn really_impure(bar: baz) {\n-    bar.baz = 3;\n-}\n-\n-pub fn main() {}"}, {"sha": "c343258264748f5aa03fb87c9c5e7d39c361a8b8", "filename": "src/test/run-pass/borrowck-wg-autoderef-and-autoborrowvec-combined-issue-6272.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Frun-pass%2Fborrowck-wg-autoderef-and-autoborrowvec-combined-issue-6272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Frun-pass%2Fborrowck-wg-autoderef-and-autoborrowvec-combined-issue-6272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-wg-autoderef-and-autoborrowvec-combined-issue-6272.rs?ref=17b3712487a4cf2be30e6bd43e89a736a7d86908", "patch": "@@ -28,14 +28,14 @@\n \n \n fn main() {\n-    let a = @mut [3i];\n-    let b = @mut [a];\n-    let c = @mut b;\n+    let a = @mut 3i;\n+    // let b = @mut [a];\n+    // let c = @mut [3];\n \n     // this should freeze `a` only\n-    let _x: &mut [int] = c[0];\n+    let _x: &mut int = a;\n \n     // hence these writes should not fail:\n-    b[0] = b[0];\n-    c[0] = c[0];\n+    // b[0] = b[0];\n+    // c[0] = c[0];\n }"}, {"sha": "3ce4ef8a94cd589c903976330d0893ae0ddafa40", "filename": "src/test/run-pass/match-pattern-drop.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs?ref=17b3712487a4cf2be30e6bd43e89a736a7d86908", "patch": "@@ -14,8 +14,11 @@\n enum t { make_t(@int), clam, }\n \n fn foo(s: @int) {\n+    debug!(::std::sys::refcount(s));\n     let count = ::std::sys::refcount(s);\n     let x: t = make_t(s); // ref up\n+    assert_eq!(::std::sys::refcount(s), count + 1u);\n+    debug!(::std::sys::refcount(s));\n \n     match x {\n       make_t(y) => {\n@@ -38,6 +41,5 @@ pub fn main() {\n \n     debug!(\"%u\", ::std::sys::refcount(s));\n     let count2 = ::std::sys::refcount(s);\n-    let _ = ::std::sys::refcount(s); // don't get bitten by last-use.\n     assert_eq!(count, count2);\n }"}, {"sha": "27f4fc833511ae7cf49b00e19cec0131e6199782", "filename": "src/test/run-pass/vec-tail-matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Frun-pass%2Fvec-tail-matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b3712487a4cf2be30e6bd43e89a736a7d86908/src%2Ftest%2Frun-pass%2Fvec-tail-matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-tail-matching.rs?ref=17b3712487a4cf2be30e6bd43e89a736a7d86908", "patch": "@@ -9,7 +9,7 @@ pub fn main() {\n         Foo { string: ~\"baz\" }\n     ];\n     match x {\n-        [first, ..tail] => {\n+        [ref first, ..tail] => {\n             assert!(first.string == ~\"foo\");\n             assert_eq!(tail.len(), 2);\n             assert!(tail[0].string == ~\"bar\");"}]}