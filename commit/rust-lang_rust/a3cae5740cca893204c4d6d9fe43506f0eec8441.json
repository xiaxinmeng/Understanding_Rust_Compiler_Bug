{"sha": "a3cae5740cca893204c4d6d9fe43506f0eec8441", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzY2FlNTc0MGNjYTg5MzIwNGM0ZDZkOWZlNDM1MDZmMGVlYzg0NDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T19:19:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-28T19:19:58Z"}, "message": "Rollup merge of #62995 - estebank:issue-62973, r=varkor\n\nAvoid ICE when suggestion span is at Eof\n\nFix #62973.", "tree": {"sha": "b0103b2066011b4eb1c38cbce85291b9190f0f0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0103b2066011b4eb1c38cbce85291b9190f0f0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3cae5740cca893204c4d6d9fe43506f0eec8441", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdPfVeCRBK7hj4Ov3rIwAAdHIIAKJpduDq4GIFFk9Pr6Fh+cRr\nmtNLJUKpCx0bTfMPlxHsX7E/Pohah1q1FwL+tMjpOo2VQEOxtIxAuJV0xOSE5mvT\n+YDMsEHgzRAF1ZlFGLvyUAGGKytaH6pki7A3CdtIBPFsseFyS3vLk+BiTogCaEdX\n4klNWCglQqkxcUEuyw69WyOTLrbuxr9lBMafnWGpbfYnagRC1M83nsR/DL3ZXZsq\ng3K19TseVdVBfSYWLzR8SAATr2FBWmLiaEmdLYccN8X13/r1MhpKGZYM5mLrVjNl\nBOkHOetyNDyp0HMhP72XGNrnpilgqHsNnzq3cBD4POWHanhM9X8fF68l7Z4gf30=\n=21NB\n-----END PGP SIGNATURE-----\n", "payload": "tree b0103b2066011b4eb1c38cbce85291b9190f0f0b\nparent 2ac9b89d7b18ba68ec9d362bcae010045572988b\nparent 6263eb438def79c393e372eac1237b4d4f97772f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564341598 +0200\ncommitter GitHub <noreply@github.com> 1564341598 +0200\n\nRollup merge of #62995 - estebank:issue-62973, r=varkor\n\nAvoid ICE when suggestion span is at Eof\n\nFix #62973.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3cae5740cca893204c4d6d9fe43506f0eec8441", "html_url": "https://github.com/rust-lang/rust/commit/a3cae5740cca893204c4d6d9fe43506f0eec8441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3cae5740cca893204c4d6d9fe43506f0eec8441/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ac9b89d7b18ba68ec9d362bcae010045572988b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ac9b89d7b18ba68ec9d362bcae010045572988b", "html_url": "https://github.com/rust-lang/rust/commit/2ac9b89d7b18ba68ec9d362bcae010045572988b"}, {"sha": "6263eb438def79c393e372eac1237b4d4f97772f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6263eb438def79c393e372eac1237b4d4f97772f", "html_url": "https://github.com/rust-lang/rust/commit/6263eb438def79c393e372eac1237b4d4f97772f"}], "stats": {"total": 88, "additions": 85, "deletions": 3}, "files": [{"sha": "15c4dfb67d0704e18f989161ce1a18a5fc7163a6", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a3cae5740cca893204c4d6d9fe43506f0eec8441/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cae5740cca893204c4d6d9fe43506f0eec8441/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=a3cae5740cca893204c4d6d9fe43506f0eec8441", "patch": "@@ -226,7 +226,8 @@ impl CodeSuggestion {\n                         }\n                     }\n                     if let Some(cur_line) = fm.get_line(cur_lo.line - 1) {\n-                        buf.push_str(&cur_line[..cur_lo.col.to_usize()]);\n+                        let end = std::cmp::min(cur_line.len(), cur_lo.col.to_usize());\n+                        buf.push_str(&cur_line[..end]);\n                     }\n                 }\n                 buf.push_str(&part.snippet);"}, {"sha": "18bc51e7ba7cdf4713668d9c01e64559f319b274", "filename": "src/test/ui/parser/issue-62973.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a3cae5740cca893204c4d6d9fe43506f0eec8441/src%2Ftest%2Fui%2Fparser%2Fissue-62973.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cae5740cca893204c4d6d9fe43506f0eec8441/src%2Ftest%2Fui%2Fparser%2Fissue-62973.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62973.rs?ref=a3cae5740cca893204c4d6d9fe43506f0eec8441", "patch": "@@ -0,0 +1,8 @@\n+// ignore-tidy-trailing-newlines\n+// error-pattern: aborting due to 6 previous errors\n+\n+fn main() {}\n+\n+fn p() { match s { v, E { [) {) }\n+\n+"}, {"sha": "141076bf6b6388c5ceab1184dc0cd50a7dc4b8d3", "filename": "src/test/ui/parser/issue-62973.stderr", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/a3cae5740cca893204c4d6d9fe43506f0eec8441/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3cae5740cca893204c4d6d9fe43506f0eec8441/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr?ref=a3cae5740cca893204c4d6d9fe43506f0eec8441", "patch": "@@ -0,0 +1,61 @@\n+error: this file contains an un-closed delimiter\n+  --> $DIR/issue-62973.rs:8:2\n+   |\n+LL | fn p() { match s { v, E { [) {) }\n+   |        -         - un-closed delimiter\n+   |        |\n+   |        un-closed delimiter\n+LL | \n+LL | \n+   |  ^\n+\n+error: expected one of `,` or `}`, found `{`\n+  --> $DIR/issue-62973.rs:6:25\n+   |\n+LL | fn p() { match s { v, E { [) {) }\n+   |                -        ^ expected one of `,` or `}` here\n+   |                |\n+   |                while parsing this struct\n+\n+error: struct literals are not allowed here\n+  --> $DIR/issue-62973.rs:6:16\n+   |\n+LL |   fn p() { match s { v, E { [) {) }\n+   |  ________________^\n+LL | |\n+LL | |\n+   | |_^\n+help: surround the struct literal with parentheses\n+   |\n+LL | fn p() { match (s { v, E { [) {) }\n+LL | \n+LL | )\n+   |\n+\n+error: expected one of `.`, `?`, `{`, or an operator, found `}`\n+  --> $DIR/issue-62973.rs:8:1\n+   |\n+LL | fn p() { match s { v, E { [) {) }\n+   |          ----- while parsing this match expression\n+LL | \n+LL | \n+   | ^ expected one of `.`, `?`, `{`, or an operator here\n+\n+error: incorrect close delimiter: `)`\n+  --> $DIR/issue-62973.rs:6:28\n+   |\n+LL | fn p() { match s { v, E { [) {) }\n+   |                           -^ incorrect close delimiter\n+   |                           |\n+   |                           un-closed delimiter\n+\n+error: incorrect close delimiter: `)`\n+  --> $DIR/issue-62973.rs:6:31\n+   |\n+LL | fn p() { match s { v, E { [) {) }\n+   |                              -^ incorrect close delimiter\n+   |                              |\n+   |                              un-closed delimiter\n+\n+error: aborting due to 6 previous errors\n+"}, {"sha": "6a0d530e2362a27b55d5b44f8b54928e25945e68", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a3cae5740cca893204c4d6d9fe43506f0eec8441/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cae5740cca893204c4d6d9fe43506f0eec8441/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=a3cae5740cca893204c4d6d9fe43506f0eec8441", "patch": "@@ -152,6 +152,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n         let mut skip_file_length = contains_ignore_directive(can_contain, &contents, \"filelength\");\n         let mut skip_end_whitespace =\n             contains_ignore_directive(can_contain, &contents, \"end-whitespace\");\n+        let mut skip_trailing_newlines =\n+            contains_ignore_directive(can_contain, &contents, \"trailing-newlines\");\n         let mut skip_copyright = contains_ignore_directive(can_contain, &contents, \"copyright\");\n         let mut leading_new_lines = false;\n         let mut trailing_new_lines = 0;\n@@ -214,10 +216,17 @@ pub fn check(path: &Path, bad: &mut bool) {\n         if leading_new_lines {\n             tidy_error!(bad, \"{}: leading newline\", file.display());\n         }\n+        let mut err = |msg: &str| {\n+            tidy_error!(bad, \"{}: {}\", file.display(), msg);\n+        };\n         match trailing_new_lines {\n-            0 => tidy_error!(bad, \"{}: missing trailing newline\", file.display()),\n+            0 => suppressible_tidy_err!(err, skip_trailing_newlines, \"missing trailing newline\"),\n             1 => {}\n-            n => tidy_error!(bad, \"{}: too many trailing newlines ({})\", file.display(), n),\n+            n => suppressible_tidy_err!(\n+                err,\n+                skip_trailing_newlines,\n+                &format!(\"too many trailing newlines ({})\", n)\n+            ),\n         };\n         if lines > LINES {\n             let mut err = |_| {\n@@ -247,6 +256,9 @@ pub fn check(path: &Path, bad: &mut bool) {\n         if let Directive::Ignore(false) = skip_end_whitespace {\n             tidy_error!(bad, \"{}: ignoring trailing whitespace unnecessarily\", file.display());\n         }\n+        if let Directive::Ignore(false) = skip_trailing_newlines {\n+            tidy_error!(bad, \"{}: ignoring trailing newlines unnecessarily\", file.display());\n+        }\n         if let Directive::Ignore(false) = skip_copyright {\n             tidy_error!(bad, \"{}: ignoring copyright unnecessarily\", file.display());\n         }"}]}