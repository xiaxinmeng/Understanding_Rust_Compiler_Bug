{"sha": "77d33c1707277931e81ad0dea058e4bfc0b89b91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZDMzYzE3MDcyNzc5MzFlODFhZDBkZWEwNThlNGJmYzBiODliOTE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-15T16:15:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-15T16:35:56Z"}, "message": "Fix trans_ptr_binop for fn()", "tree": {"sha": "8ed7fdd8921f2fcdbc69b73de946a4c126f6c45f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ed7fdd8921f2fcdbc69b73de946a4c126f6c45f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77d33c1707277931e81ad0dea058e4bfc0b89b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77d33c1707277931e81ad0dea058e4bfc0b89b91", "html_url": "https://github.com/rust-lang/rust/commit/77d33c1707277931e81ad0dea058e4bfc0b89b91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77d33c1707277931e81ad0dea058e4bfc0b89b91/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c34ada7cca0607831dfae955214bc0b95f2ec312", "url": "https://api.github.com/repos/rust-lang/rust/commits/c34ada7cca0607831dfae955214bc0b95f2ec312", "html_url": "https://github.com/rust-lang/rust/commit/c34ada7cca0607831dfae955214bc0b95f2ec312"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "49df9b3ac9c5e73c36e642ba1b2155a2aef14e17", "filename": "src/num.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/77d33c1707277931e81ad0dea058e4bfc0b89b91/src%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77d33c1707277931e81ad0dea058e4bfc0b89b91/src%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnum.rs?ref=77d33c1707277931e81ad0dea058e4bfc0b89b91", "patch": "@@ -347,9 +347,11 @@ pub fn trans_ptr_binop<'tcx>(\n     in_lhs: CValue<'tcx>,\n     in_rhs: CValue<'tcx>,\n ) -> CValue<'tcx> {\n-    let pointee_ty = in_lhs.layout().ty.builtin_deref(true).unwrap().ty;\n+    let is_thin_ptr = in_lhs.layout().ty.builtin_deref(true).map(|TypeAndMut { ty, mutbl: _}| {\n+        !has_ptr_meta(fx.tcx, ty)\n+    }).unwrap_or(true);\n \n-    if !has_ptr_meta(fx.tcx, pointee_ty) {\n+    if is_thin_ptr {\n         match bin_op {\n             BinOp::Eq | BinOp::Lt | BinOp::Le | BinOp::Ne | BinOp::Ge | BinOp::Gt => {\n                 let lhs = in_lhs.load_scalar(fx);\n@@ -358,6 +360,7 @@ pub fn trans_ptr_binop<'tcx>(\n                 return codegen_compare_bin_op(fx, bin_op, false, lhs, rhs);\n             }\n             BinOp::Offset => {\n+                let pointee_ty = in_lhs.layout().ty.builtin_deref(true).unwrap().ty;\n                 let (base, offset) = (in_lhs, in_rhs.load_scalar(fx));\n                 let pointee_size = fx.layout_of(pointee_ty).size.bytes();\n                 let ptr_diff = fx.bcx.ins().imul_imm(offset, pointee_size as i64);"}]}