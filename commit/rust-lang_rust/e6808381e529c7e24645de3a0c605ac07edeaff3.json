{"sha": "e6808381e529c7e24645de3a0c605ac07edeaff3", "node_id": "C_kwDOAAsO6NoAKGU2ODA4MzgxZTUyOWM3ZTI0NjQ1ZGUzYTBjNjA1YWMwN2VkZWFmZjM", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-01-27T06:58:33Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-01-27T06:58:33Z"}, "message": "update pass_by_value", "tree": {"sha": "6216d93e30d1b4d760fe4353b9247067f769e0d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6216d93e30d1b4d760fe4353b9247067f769e0d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6808381e529c7e24645de3a0c605ac07edeaff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6808381e529c7e24645de3a0c605ac07edeaff3", "html_url": "https://github.com/rust-lang/rust/commit/e6808381e529c7e24645de3a0c605ac07edeaff3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6808381e529c7e24645de3a0c605ac07edeaff3/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "563250a65c884c6767dc2ee2e2580360d33d561c", "url": "https://api.github.com/repos/rust-lang/rust/commits/563250a65c884c6767dc2ee2e2580360d33d561c", "html_url": "https://github.com/rust-lang/rust/commit/563250a65c884c6767dc2ee2e2580360d33d561c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "fc7f01f041d34cbb14065600e3a34bfeaea00fa1", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6808381e529c7e24645de3a0c605ac07edeaff3/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6808381e529c7e24645de3a0c605ac07edeaff3/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=e6808381e529c7e24645de3a0c605ac07edeaff3", "patch": "@@ -625,7 +625,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     ),\n     rustc_attr!(\n         rustc_pass_by_value, Normal,\n-        template!(Word), WarnFollowing,\n+        template!(Word), ErrorFollowing,\n         \"#[rustc_pass_by_value] is used to mark types that must be passed by value instead of reference.\"\n     ),\n     BuiltinAttribute {"}, {"sha": "2caf929788f182f6efbc873525aa92a7824633fc", "filename": "compiler/rustc_lint/src/pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6808381e529c7e24645de3a0c605ac07edeaff3/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6808381e529c7e24645de3a0c605ac07edeaff3/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs?ref=e6808381e529c7e24645de3a0c605ac07edeaff3", "patch": "@@ -76,10 +76,10 @@ fn gen_args(cx: &LateContext<'_>, segment: &PathSegment<'_>) -> String {\n             .map(|arg| match arg {\n                 GenericArg::Lifetime(lt) => lt.name.ident().to_string(),\n                 GenericArg::Type(ty) => {\n-                    cx.tcx.sess.source_map().span_to_snippet(ty.span).unwrap_or_default()\n+                    cx.tcx.sess.source_map().span_to_snippet(ty.span).unwrap_or_else(|_| \"_\".into())\n                 }\n                 GenericArg::Const(c) => {\n-                    cx.tcx.sess.source_map().span_to_snippet(c.span).unwrap_or_default()\n+                    cx.tcx.sess.source_map().span_to_snippet(c.span).unwrap_or_else(|_| \"_\".into())\n                 }\n                 GenericArg::Infer(_) => String::from(\"_\"),\n             })"}]}