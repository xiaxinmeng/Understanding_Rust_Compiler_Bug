{"sha": "65c064b2a99fb9c0589672ae6c9848aaa9e0efcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YzA2NGIyYTk5ZmI5YzA1ODk2NzJhZTZjOTg0OGFhYTllMGVmY2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T23:22:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T23:22:25Z"}, "message": "introduce SymbolsDatabase", "tree": {"sha": "5327715b5c1ada71b1b7411922444e63dabf7bf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5327715b5c1ada71b1b7411922444e63dabf7bf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf", "html_url": "https://github.com/rust-lang/rust/commit/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73", "url": "https://api.github.com/repos/rust-lang/rust/commits/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73", "html_url": "https://github.com/rust-lang/rust/commit/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73"}], "stats": {"total": 67, "additions": 40, "deletions": 27}, "files": [{"sha": "0901c2bbaea05e4124c91038e851e1e90935995e", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=65c064b2a99fb9c0589672ae6c9848aaa9e0efcf", "patch": "@@ -7,7 +7,7 @@ use salsa::{self, Database};\n \n use crate::{\n     hir,\n-    symbol_index::SymbolIndex,\n+    symbol_index,\n     loc2id::{IdMaps},\n     Cancelable, Canceled, FileId,\n };\n@@ -114,23 +114,25 @@ salsa::database_storage! {\n             fn file_source_root() for crate::input::FileSourceRootQuery;\n             fn source_root() for crate::input::SourceRootQuery;\n             fn libraries() for crate::input::LibrariesQuery;\n-            fn library_symbols() for crate::input::LibrarySymbolsQuery;\n             fn crate_graph() for crate::input::CrateGraphQuery;\n         }\n         impl SyntaxDatabase {\n             fn file_syntax() for FileSyntaxQuery;\n             fn file_lines() for FileLinesQuery;\n-            fn file_symbols() for FileSymbolsQuery;\n+        }\n+        impl symbol_index::SymbolsDatabase {\n+            fn file_symbols() for symbol_index::FileSymbolsQuery;\n+            fn library_symbols() for symbol_index::LibrarySymbolsQuery;\n         }\n         impl hir::db::HirDatabase {\n             fn module_tree() for hir::db::ModuleTreeQuery;\n             fn fn_scopes() for hir::db::FnScopesQuery;\n-            fn _file_items() for hir::db::SourceFileItemsQuery;\n-            fn _file_item() for hir::db::FileItemQuery;\n-            fn _input_module_items() for hir::db::InputModuleItemsQuery;\n-            fn _item_map() for hir::db::ItemMapQuery;\n-            fn _fn_syntax() for hir::db::FnSyntaxQuery;\n-            fn _submodules() for hir::db::SubmodulesQuery;\n+            fn file_items() for hir::db::SourceFileItemsQuery;\n+            fn file_item() for hir::db::FileItemQuery;\n+            fn input_module_items() for hir::db::InputModuleItemsQuery;\n+            fn item_map() for hir::db::ItemMapQuery;\n+            fn fn_syntax() for hir::db::FnSyntaxQuery;\n+            fn submodules() for hir::db::SubmodulesQuery;\n         }\n     }\n }\n@@ -143,9 +145,6 @@ salsa::query_group! {\n         fn file_lines(file_id: FileId) -> Arc<LineIndex> {\n             type FileLinesQuery;\n         }\n-        fn file_symbols(file_id: FileId) -> Cancelable<Arc<SymbolIndex>> {\n-            type FileSymbolsQuery;\n-        }\n     }\n }\n \n@@ -157,8 +156,3 @@ fn file_lines(db: &impl SyntaxDatabase, file_id: FileId) -> Arc<LineIndex> {\n     let text = db.file_text(file_id);\n     Arc::new(LineIndex::new(&*text))\n }\n-fn file_symbols(db: &impl SyntaxDatabase, file_id: FileId) -> Cancelable<Arc<SymbolIndex>> {\n-    db.check_canceled()?;\n-    let syntax = db.file_syntax(file_id);\n-    Ok(Arc::new(SymbolIndex::for_file(file_id, syntax)))\n-}"}, {"sha": "e3b78bb1a81688f1ed7cb7a03701d2f178f9e949", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=65c064b2a99fb9c0589672ae6c9848aaa9e0efcf", "patch": "@@ -25,7 +25,7 @@ use crate::{\n         Problem,\n     },\n     input::{FilesDatabase, SourceRoot, SourceRootId, WORKSPACE},\n-    symbol_index::SymbolIndex,\n+    symbol_index::{SymbolIndex, SymbolsDatabase},\n     AnalysisChange, Cancelable, CrateGraph, CrateId, Diagnostic, FileId, FileResolver,\n     FileSystemEdit, FilePosition, Query, SourceChange, SourceFileNodeEdit,\n };\n@@ -161,7 +161,7 @@ impl AnalysisHostImpl {\n                     .query_mut(crate::input::SourceRootQuery)\n                     .set(source_root_id, Arc::new(source_root));\n                 self.db\n-                    .query_mut(crate::input::LibrarySymbolsQuery)\n+                    .query_mut(crate::symbol_index::LibrarySymbolsQuery)\n                     .set(source_root_id, Arc::new(library.symbol_index));\n             }\n             self.db"}, {"sha": "e601cd58a702a69491a3e6631da4b7e9078133aa", "filename": "crates/ra_analysis/src/input.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/crates%2Fra_analysis%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/crates%2Fra_analysis%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Finput.rs?ref=65c064b2a99fb9c0589672ae6c9848aaa9e0efcf", "patch": "@@ -5,7 +5,7 @@ use rustc_hash::FxHashMap;\n use rustc_hash::FxHashSet;\n use salsa;\n \n-use crate::{symbol_index::SymbolIndex, FileResolverImp};\n+use crate::FileResolverImp;\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct FileId(pub u32);\n@@ -56,10 +56,6 @@ salsa::query_group! {\n             type LibrariesQuery;\n             storage input;\n         }\n-        fn library_symbols(id: SourceRootId) -> Arc<SymbolIndex> {\n-            type LibrarySymbolsQuery;\n-            storage input;\n-        }\n         fn crate_graph() -> Arc<CrateGraph> {\n             type CrateGraphQuery;\n             storage input;"}, {"sha": "a6937d7f2c01043224283dae6b5b73031a49240b", "filename": "crates/ra_analysis/src/symbol_index.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65c064b2a99fb9c0589672ae6c9848aaa9e0efcf/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs?ref=65c064b2a99fb9c0589672ae6c9848aaa9e0efcf", "patch": "@@ -4,14 +4,37 @@ use std::{\n };\n \n use fst::{self, Streamer};\n-use ra_editor::{file_symbols, FileSymbol};\n+use ra_editor::{self, FileSymbol};\n use ra_syntax::{\n     SourceFileNode,\n     SyntaxKind::{self, *},\n };\n use rayon::prelude::*;\n \n-use crate::{FileId, Query};\n+use crate::{\n+    Cancelable,\n+    FileId, Query,\n+    db::SyntaxDatabase,\n+    input::SourceRootId,\n+};\n+\n+salsa::query_group! {\n+    pub(crate) trait SymbolsDatabase: SyntaxDatabase {\n+        fn file_symbols(file_id: FileId) -> Cancelable<Arc<SymbolIndex>> {\n+            type FileSymbolsQuery;\n+        }\n+        fn library_symbols(id: SourceRootId) -> Arc<SymbolIndex> {\n+            type LibrarySymbolsQuery;\n+            storage input;\n+        }\n+    }\n+}\n+\n+fn file_symbols(db: &impl SyntaxDatabase, file_id: FileId) -> Cancelable<Arc<SymbolIndex>> {\n+    db.check_canceled()?;\n+    let syntax = db.file_syntax(file_id);\n+    Ok(Arc::new(SymbolIndex::for_file(file_id, syntax)))\n+}\n \n #[derive(Default, Debug)]\n pub(crate) struct SymbolIndex {\n@@ -39,7 +62,7 @@ impl SymbolIndex {\n     ) -> SymbolIndex {\n         let mut symbols = files\n             .flat_map(|(file_id, file)| {\n-                file_symbols(&file)\n+                ra_editor::file_symbols(&file)\n                     .into_iter()\n                     .map(move |symbol| (symbol.name.as_str().to_lowercase(), (file_id, symbol)))\n                     .collect::<Vec<_>>()"}]}