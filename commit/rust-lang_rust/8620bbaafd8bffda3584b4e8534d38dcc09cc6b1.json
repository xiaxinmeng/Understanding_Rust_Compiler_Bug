{"sha": "8620bbaafd8bffda3584b4e8534d38dcc09cc6b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MjBiYmFhZmQ4YmZmZGEzNTg0YjRlODUzNGQzOGRjYzA5Y2M2YjE=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2016-03-31T14:28:12Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2016-04-03T22:14:48Z"}, "message": "Add compile-fail test", "tree": {"sha": "34bc53a40df33a82bbf189157232f94da3cb8e10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34bc53a40df33a82bbf189157232f94da3cb8e10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8620bbaafd8bffda3584b4e8534d38dcc09cc6b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8620bbaafd8bffda3584b4e8534d38dcc09cc6b1", "html_url": "https://github.com/rust-lang/rust/commit/8620bbaafd8bffda3584b4e8534d38dcc09cc6b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8620bbaafd8bffda3584b4e8534d38dcc09cc6b1/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78eae9bf23fc589d79ba402267b377f972140d19", "url": "https://api.github.com/repos/rust-lang/rust/commits/78eae9bf23fc589d79ba402267b377f972140d19", "html_url": "https://github.com/rust-lang/rust/commit/78eae9bf23fc589d79ba402267b377f972140d19"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "d2376eecd9b504295aaf90f81fc932187847c3eb", "filename": "src/test/compile-fail/non-interger-atomic.rs", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/8620bbaafd8bffda3584b4e8534d38dcc09cc6b1/src%2Ftest%2Fcompile-fail%2Fnon-interger-atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8620bbaafd8bffda3584b4e8534d38dcc09cc6b1/src%2Ftest%2Fcompile-fail%2Fnon-interger-atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnon-interger-atomic.rs?ref=8620bbaafd8bffda3584b4e8534d38dcc09cc6b1", "patch": "@@ -0,0 +1,117 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(core_intrinsics, rustc_attrs)]\n+#![allow(warnings)]\n+\n+use std::intrinsics;\n+\n+#[derive(Copy, Clone)]\n+struct Foo(i64);\n+type Bar = &'static Fn();\n+type Quux = [u8; 100];\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_bool_load(p: &mut bool, v: bool) {\n+    intrinsics::atomic_load(p);\n+    //~^ ERROR `atomic_load` intrinsic: expected basic integer type, found `bool`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_bool_store(p: &mut bool, v: bool) {\n+    intrinsics::atomic_store(p, v);\n+    //~^ ERROR `atomic_store` intrinsic: expected basic integer type, found `bool`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_bool_xchg(p: &mut bool, v: bool) {\n+    intrinsics::atomic_xchg(p, v);\n+    //~^ ERROR `atomic_xchg` intrinsic: expected basic integer type, found `bool`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_bool_cxchg(p: &mut bool, v: bool) {\n+    intrinsics::atomic_cxchg(p, v, v);\n+    //~^ ERROR `atomic_cxchg` intrinsic: expected basic integer type, found `bool`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Foo_load(p: &mut Foo, v: Foo) {\n+    intrinsics::atomic_load(p);\n+    //~^ ERROR `atomic_load` intrinsic: expected basic integer type, found `Foo`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Foo_store(p: &mut Foo, v: Foo) {\n+    intrinsics::atomic_store(p, v);\n+    //~^ ERROR `atomic_store` intrinsic: expected basic integer type, found `Foo`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Foo_xchg(p: &mut Foo, v: Foo) {\n+    intrinsics::atomic_xchg(p, v);\n+    //~^ ERROR `atomic_xchg` intrinsic: expected basic integer type, found `Foo`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Foo_cxchg(p: &mut Foo, v: Foo) {\n+    intrinsics::atomic_cxchg(p, v, v);\n+    //~^ ERROR `atomic_cxchg` intrinsic: expected basic integer type, found `Foo`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Bar_load(p: &mut Bar, v: Bar) {\n+    intrinsics::atomic_load(p);\n+    //~^ ERROR expected basic integer type, found `&'static std::ops::Fn() + 'static`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Bar_store(p: &mut Bar, v: Bar) {\n+    intrinsics::atomic_store(p, v);\n+    //~^ ERROR expected basic integer type, found `&'static std::ops::Fn() + 'static`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Bar_xchg(p: &mut Bar, v: Bar) {\n+    intrinsics::atomic_xchg(p, v);\n+    //~^ ERROR expected basic integer type, found `&'static std::ops::Fn() + 'static`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Bar_cxchg(p: &mut Bar, v: Bar) {\n+    intrinsics::atomic_cxchg(p, v, v);\n+    //~^ ERROR expected basic integer type, found `&'static std::ops::Fn() + 'static`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Quux_load(p: &mut Quux, v: Quux) {\n+    intrinsics::atomic_load(p);\n+    //~^ ERROR `atomic_load` intrinsic: expected basic integer type, found `[u8; 100]`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Quux_store(p: &mut Quux, v: Quux) {\n+    intrinsics::atomic_store(p, v);\n+    //~^ ERROR `atomic_store` intrinsic: expected basic integer type, found `[u8; 100]`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Quux_xchg(p: &mut Quux, v: Quux) {\n+    intrinsics::atomic_xchg(p, v);\n+    //~^ ERROR `atomic_xchg` intrinsic: expected basic integer type, found `[u8; 100]`\n+}\n+\n+#[rustc_no_mir] // FIXME #27840 MIR doesn't provide precise spans for calls.\n+unsafe fn test_Quux_cxchg(p: &mut Quux, v: Quux) {\n+    intrinsics::atomic_cxchg(p, v, v);\n+    //~^ ERROR `atomic_cxchg` intrinsic: expected basic integer type, found `[u8; 100]`\n+}\n+\n+fn main() {}"}]}