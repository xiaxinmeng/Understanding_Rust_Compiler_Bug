{"sha": "be2fa2b31b9e6b01ed96f41061a231ea45a54216", "node_id": "C_kwDOAAsO6NoAKGJlMmZhMmIzMWI5ZTZiMDFlZDk2ZjQxMDYxYTIzMWVhNDVhNTQyMTY", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-05-29T07:20:44Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-05-29T07:22:33Z"}, "message": "fix overflow during tuple struct type inference", "tree": {"sha": "8981372169c9dfa5dcc6c6025af06d7e2a282d10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8981372169c9dfa5dcc6c6025af06d7e2a282d10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be2fa2b31b9e6b01ed96f41061a231ea45a54216", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmKTHz4ACgkQ4laYqTBY\nYXFhmA//VfmGTWeTS8m5r68p5iJgbCV5hp/C55iu1wAi2RuTsONKNRFL4EQ6+Epk\nwqPAcDWUDAN1unsHzIqcKtklDdTjxakF6b3uYYBiGzUoUDmDrydVvNjQ6ewIyB0K\nDaAIuVewEw4PPb0xzKEBvc/HGDLRM8AGMDYU9u/FrLttqxhhgdU6OIVn0VB0ZFqN\nNV6tNY9Uo2mIhuShysJZRjmqf6RbhKPiCjKuvq2MmsN4dSf+viasf7R7Vv5Q/SZ7\nK9uBNt4ca8IgPXCZI4ngbvriWyt/72D/m4e8mT0EU2kBBcwiTgtdzXL3llvvcniD\neggvaJrY9pqkLfuq6Nyz2H/VVUHfbobW40GRw1GXPEGzf/5hhu0sGoPIlfcPx74x\nCBUivLrPSJ70No8DMtHSKxq08UNuhRWH9s5hbGZsu50QkwzfY3r96Mh13l63nHaM\nvs0B9zcVFQ2Ocg73qMUWLAimFnSicbyJlbTU9ljFUkvte1yC4YNVoG8t003FfrAG\n3hYw31FBYvkPioZMMRmVZK+/C12MzCPplvdrzfqmODbtPqn0PDjDB67/JbX42qXh\nnQD/83y2VcnJ3BzPRkKH7Q92YBiF7fytH+E+F/8sUQLHrCg7e2t0lOgvlVrRSGFZ\n8yo0Ef/4JmKgRtQwKoYu8YcObIOY8uEmlEKGLGVaJgRtC1Vf1PQ=\n=UMt1\n-----END PGP SIGNATURE-----", "payload": "tree 8981372169c9dfa5dcc6c6025af06d7e2a282d10\nparent 6c9fc4fec2193ebfa7ed7eb163b6eea925b56f7b\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1653808844 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1653808953 +0900\n\nfix overflow during tuple struct type inference\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be2fa2b31b9e6b01ed96f41061a231ea45a54216", "html_url": "https://github.com/rust-lang/rust/commit/be2fa2b31b9e6b01ed96f41061a231ea45a54216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be2fa2b31b9e6b01ed96f41061a231ea45a54216/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c9fc4fec2193ebfa7ed7eb163b6eea925b56f7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9fc4fec2193ebfa7ed7eb163b6eea925b56f7b", "html_url": "https://github.com/rust-lang/rust/commit/6c9fc4fec2193ebfa7ed7eb163b6eea925b56f7b"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "c06d262f5e3c2f2fcf6656939b725b163864eae6", "filename": "crates/hir-ty/src/infer/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be2fa2b31b9e6b01ed96f41061a231ea45a54216/crates%2Fhir-ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be2fa2b31b9e6b01ed96f41061a231ea45a54216/crates%2Fhir-ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fpat.rs?ref=be2fa2b31b9e6b01ed96f41061a231ea45a54216", "patch": "@@ -42,7 +42,7 @@ impl<'a> InferenceContext<'a> {\n             Some(idx) => subpats.split_at(idx),\n             None => (subpats, &[][..]),\n         };\n-        let post_idx_offset = field_tys.iter().count() - post.len();\n+        let post_idx_offset = field_tys.iter().count().saturating_sub(post.len());\n \n         let pre_iter = pre.iter().enumerate();\n         let post_iter = (post_idx_offset..).zip(post.iter());"}, {"sha": "93f765f703ca0354dc4e6620a26d3148aee16f99", "filename": "crates/hir-ty/src/tests/regression.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/be2fa2b31b9e6b01ed96f41061a231ea45a54216/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be2fa2b31b9e6b01ed96f41061a231ea45a54216/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs?ref=be2fa2b31b9e6b01ed96f41061a231ea45a54216", "patch": "@@ -1620,3 +1620,30 @@ pub trait Destruct {}\n \"#,\n     );\n }\n+\n+#[test]\n+fn tuple_struct_pattern_with_unmatched_args_crash() {\n+    check_infer(\n+        r#\"\n+struct S(usize);\n+fn main() {\n+    let S(.., a, b) = S(1);\n+    let (.., a, b) = (1,);\n+}\n+        \"#,\n+        expect![[r#\"\n+        27..85 '{     ...1,); }': ()\n+        37..48 'S(.., a, b)': S\n+        43..44 'a': usize\n+        46..47 'b': {unknown}\n+        51..52 'S': S(usize) -> S\n+        51..55 'S(1)': S\n+        53..54 '1': usize\n+        65..75 '(.., a, b)': (i32, {unknown})\n+        70..71 'a': i32\n+        73..74 'b': {unknown}\n+        78..82 '(1,)': (i32,)\n+        79..80 '1': i32\n+        \"#]],\n+    );\n+}"}]}