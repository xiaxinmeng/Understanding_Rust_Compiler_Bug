{"sha": "c492355aa5282522f8653a4517506a9c0be31164", "node_id": "C_kwDOAAsO6NoAKGM0OTIzNTVhYTUyODI1MjJmODY1M2E0NTE3NTA2YTljMGJlMzExNjQ", "commit": {"author": {"name": "Ralf Sager", "email": "rsa@3fnc.org", "date": "2022-01-31T22:09:26Z"}, "committer": {"name": "Ralf Sager", "email": "rsa@3fnc.org", "date": "2022-01-31T22:09:26Z"}, "message": "fix error handling for pthread_sigmask(3)\n\nErrors from pthread_sigmask(3) were handled using cvt(), which expects a\nreturn value of -1 on error and uses errno.\nHowever, pthread_sigmask(3) returns 0 on success and an error number\notherwise.\nFix it by replacing cvt() with cvt_nz().", "tree": {"sha": "d35ee68ac7bb143e8ca9a3774c95407cfbbdab64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d35ee68ac7bb143e8ca9a3774c95407cfbbdab64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c492355aa5282522f8653a4517506a9c0be31164", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c492355aa5282522f8653a4517506a9c0be31164", "html_url": "https://github.com/rust-lang/rust/commit/c492355aa5282522f8653a4517506a9c0be31164", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c492355aa5282522f8653a4517506a9c0be31164/comments", "author": {"login": "anonion0", "id": 11861766, "node_id": "MDQ6VXNlcjExODYxNzY2", "avatar_url": "https://avatars.githubusercontent.com/u/11861766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anonion0", "html_url": "https://github.com/anonion0", "followers_url": "https://api.github.com/users/anonion0/followers", "following_url": "https://api.github.com/users/anonion0/following{/other_user}", "gists_url": "https://api.github.com/users/anonion0/gists{/gist_id}", "starred_url": "https://api.github.com/users/anonion0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anonion0/subscriptions", "organizations_url": "https://api.github.com/users/anonion0/orgs", "repos_url": "https://api.github.com/users/anonion0/repos", "events_url": "https://api.github.com/users/anonion0/events{/privacy}", "received_events_url": "https://api.github.com/users/anonion0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anonion0", "id": 11861766, "node_id": "MDQ6VXNlcjExODYxNzY2", "avatar_url": "https://avatars.githubusercontent.com/u/11861766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anonion0", "html_url": "https://github.com/anonion0", "followers_url": "https://api.github.com/users/anonion0/followers", "following_url": "https://api.github.com/users/anonion0/following{/other_user}", "gists_url": "https://api.github.com/users/anonion0/gists{/gist_id}", "starred_url": "https://api.github.com/users/anonion0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anonion0/subscriptions", "organizations_url": "https://api.github.com/users/anonion0/orgs", "repos_url": "https://api.github.com/users/anonion0/repos", "events_url": "https://api.github.com/users/anonion0/events{/privacy}", "received_events_url": "https://api.github.com/users/anonion0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbad745a688c933a43d1bd977756bd6fc7f034f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbad745a688c933a43d1bd977756bd6fc7f034f2", "html_url": "https://github.com/rust-lang/rust/commit/bbad745a688c933a43d1bd977756bd6fc7f034f2"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "bf0f52af410538163aa4f429b56ab59b3a51f596", "filename": "library/std/src/sys/unix/process/process_common/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c492355aa5282522f8653a4517506a9c0be31164/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c492355aa5282522f8653a4517506a9c0be31164/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs?ref=c492355aa5282522f8653a4517506a9c0be31164", "patch": "@@ -3,7 +3,7 @@ use super::*;\n use crate::ffi::OsStr;\n use crate::mem;\n use crate::ptr;\n-use crate::sys::cvt;\n+use crate::sys::{cvt, cvt_nz};\n \n macro_rules! t {\n     ($e:expr) => {\n@@ -39,7 +39,7 @@ fn test_process_mask() {\n         let mut old_set = mem::MaybeUninit::<libc::sigset_t>::uninit();\n         t!(cvt(sigemptyset(set.as_mut_ptr())));\n         t!(cvt(sigaddset(set.as_mut_ptr(), libc::SIGINT)));\n-        t!(cvt(libc::pthread_sigmask(libc::SIG_SETMASK, set.as_ptr(), old_set.as_mut_ptr())));\n+        t!(cvt_nz(libc::pthread_sigmask(libc::SIG_SETMASK, set.as_ptr(), old_set.as_mut_ptr())));\n \n         cmd.stdin(Stdio::MakePipe);\n         cmd.stdout(Stdio::MakePipe);\n@@ -48,7 +48,7 @@ fn test_process_mask() {\n         let stdin_write = pipes.stdin.take().unwrap();\n         let stdout_read = pipes.stdout.take().unwrap();\n \n-        t!(cvt(libc::pthread_sigmask(libc::SIG_SETMASK, old_set.as_ptr(), ptr::null_mut())));\n+        t!(cvt_nz(libc::pthread_sigmask(libc::SIG_SETMASK, old_set.as_ptr(), ptr::null_mut())));\n \n         t!(cvt(libc::kill(cat.id() as libc::pid_t, libc::SIGINT)));\n         // We need to wait until SIGINT is definitely delivered. The"}, {"sha": "82f6b5ce5199270598c556c999bc5ed10722243a", "filename": "library/std/src/sys/unix/process/process_unix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c492355aa5282522f8653a4517506a9c0be31164/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c492355aa5282522f8653a4517506a9c0be31164/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=c492355aa5282522f8653a4517506a9c0be31164", "patch": "@@ -279,7 +279,7 @@ impl Command {\n         stdio: ChildPipes,\n         maybe_envp: Option<&CStringArray>,\n     ) -> Result<!, io::Error> {\n-        use crate::sys::{self, cvt_r};\n+        use crate::sys::{self, cvt_nz, cvt_r};\n \n         if let Some(fd) = stdio.stdin.fd() {\n             cvt_r(|| libc::dup2(fd, libc::STDIN_FILENO))?;\n@@ -333,7 +333,7 @@ impl Command {\n             // we're about to run.\n             let mut set = MaybeUninit::<libc::sigset_t>::uninit();\n             cvt(sigemptyset(set.as_mut_ptr()))?;\n-            cvt(libc::pthread_sigmask(libc::SIG_SETMASK, set.as_ptr(), ptr::null_mut()))?;\n+            cvt_nz(libc::pthread_sigmask(libc::SIG_SETMASK, set.as_ptr(), ptr::null_mut()))?;\n \n             #[cfg(target_os = \"android\")] // see issue #88585\n             {"}]}