{"sha": "5eb51c1e6049c61be60a28894b80a7753f06cfeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYjUxYzFlNjA0OWM2MWJlNjBhMjg4OTRiODBhNzc1M2YwNmNmZWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-23T21:58:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-23T21:58:52Z"}, "message": "Merge #4106\n\n4106: Fix wrong substitution code r=matklad a=flodiebold\n\nWe need to shift in when we're substituting inside a binder.\r\n\r\nThis should fix #4053 (it doesn't fix the occasional overflow that also occurs on the Diesel codebase though).\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "bea94c755a606ef3261331c1556249bd76abbcaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bea94c755a606ef3261331c1556249bd76abbcaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eb51c1e6049c61be60a28894b80a7753f06cfeb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeog+cCRBK7hj4Ov3rIwAAdHIIAJRkv1A18K1Vchds2UmCZmQC\nOQmHeCdTWyNeKoMuL6EOdNS7NPfNZANMluxh6yFxK48rPNxiA8YIpijjzGQmBdkZ\nAzPoZ1JH9IMkvhFND3x3UiDq8J7Rz74H22kuZXKiY38xCdH+w1mn7Ish19v9f8GJ\np6hOfmMmX6hutUpXRcfWueW5ESggXisJ+WWBKVli7OIPbrbHHmnxRSrCKCIersdU\nLi0UWftOMRaZZTbA4LIlCTh5gQ5eYDu2/ULsjLF5ymsrrr0qCjX7DB8EGgqX3btt\njtIDi6Bk67HcsvM5k14Uj7q+tRbTuLne9gIFe9RSK8hpbCulUJhR0aOQ7aBOURI=\n=dzI7\n-----END PGP SIGNATURE-----\n", "payload": "tree bea94c755a606ef3261331c1556249bd76abbcaf\nparent e833e037834102c829dadeff0069b9219efc047b\nparent 0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587679132 +0000\ncommitter GitHub <noreply@github.com> 1587679132 +0000\n\nMerge #4106\n\n4106: Fix wrong substitution code r=matklad a=flodiebold\n\nWe need to shift in when we're substituting inside a binder.\r\n\r\nThis should fix #4053 (it doesn't fix the occasional overflow that also occurs on the Diesel codebase though).\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb51c1e6049c61be60a28894b80a7753f06cfeb", "html_url": "https://github.com/rust-lang/rust/commit/5eb51c1e6049c61be60a28894b80a7753f06cfeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eb51c1e6049c61be60a28894b80a7753f06cfeb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e833e037834102c829dadeff0069b9219efc047b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e833e037834102c829dadeff0069b9219efc047b", "html_url": "https://github.com/rust-lang/rust/commit/e833e037834102c829dadeff0069b9219efc047b"}, {"sha": "0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb", "html_url": "https://github.com/rust-lang/rust/commit/0c01b4eb6aaf86dd6a67cae7bc810916bfc20aeb"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "279c06d65d197e2ed8bc97e4a50e691fb850964c", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eb51c1e6049c61be60a28894b80a7753f06cfeb/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb51c1e6049c61be60a28894b80a7753f06cfeb/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=5eb51c1e6049c61be60a28894b80a7753f06cfeb", "patch": "@@ -863,7 +863,7 @@ pub trait TypeWalk {\n             &mut |ty, binders| {\n                 if let &mut Ty::Bound(bound) = ty {\n                     if bound.debruijn >= binders {\n-                        *ty = substs.0[bound.index].clone();\n+                        *ty = substs.0[bound.index].clone().shift_bound_vars(binders);\n                     }\n                 }\n             },"}, {"sha": "61a6801fc645c0cb9a8579d06bc1c78338c8de66", "filename": "crates/ra_hir_ty/src/tests/regression.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/5eb51c1e6049c61be60a28894b80a7753f06cfeb/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb51c1e6049c61be60a28894b80a7753f06cfeb/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=5eb51c1e6049c61be60a28894b80a7753f06cfeb", "patch": "@@ -533,3 +533,44 @@ fn foo(b: Bar) {\n     \"###\n     );\n }\n+\n+#[test]\n+fn issue_4053_diesel_where_clauses() {\n+    assert_snapshot!(\n+        infer(r#\"\n+trait BoxedDsl<DB> {\n+    type Output;\n+    fn internal_into_boxed(self) -> Self::Output;\n+}\n+\n+struct SelectStatement<From, Select, Distinct, Where, Order, LimitOffset, GroupBy, Locking> {\n+    order: Order,\n+}\n+\n+trait QueryFragment<DB: Backend> {}\n+\n+trait Into<T> { fn into(self) -> T; }\n+\n+impl<F, S, D, W, O, LOf, DB> BoxedDsl<DB>\n+    for SelectStatement<F, S, D, W, O, LOf, G>\n+where\n+    O: Into<dyn QueryFragment<DB>>,\n+{\n+    type Output = XXX;\n+\n+    fn internal_into_boxed(self) -> Self::Output {\n+        self.order.into();\n+    }\n+}\n+\"#),\n+        @r###\"\n+    [66; 70) 'self': Self\n+    [268; 272) 'self': Self\n+    [467; 471) 'self': SelectStatement<F, S, D, W, O, LOf, {unknown}, {unknown}>\n+    [489; 523) '{     ...     }': ()\n+    [499; 503) 'self': SelectStatement<F, S, D, W, O, LOf, {unknown}, {unknown}>\n+    [499; 509) 'self.order': O\n+    [499; 516) 'self.o...into()': dyn QueryFragment<DB>\n+    \"###\n+    );\n+}"}]}