{"sha": "7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYzE4N2FmZDhhMTlkYWQwNWRiZjFhNjg5ZTZiNmY0MDBmN2JjMGE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-02-09T22:13:47Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-13T20:50:25Z"}, "message": "Remove a source of O(n^2) running time in bigints.\n\n::num::bigint, Remove a source of O(n^2) running time in `fn shr_bits`.\n\nI'll cut to the chase: On my laptop, this brings the running time on\n`pidigits 2000` (from src/test/bench/shootout-pidigits.rs) from this:\n```\n% time ./pidigits 2000 > /dev/null\n\nreal\t0m7.695s\nuser\t0m7.690s\nsys\t0m0.005s\n```\nto this:\n```\n% time ./pidigits 2000 > /dev/null\n\nreal\t0m0.322s\nuser\t0m0.318s\nsys\t0m0.004s\n```\n\nThe previous code was building up a vector by repeatedly making a\nfresh copy for each element that was unshifted onto the front,\nyielding quadratic running time.  This fixes that by building up the\nvector in reverse order (pushing elements onto the end) and then\nreversing it.\n\n(Another option would be to build up a zero-initialized vector of the\ndesired length and then installing all of the shifted result elements\ninto their target index, but this was easier to hack up quickly, and\nyields the desired asymptotic improvement.  I have been thinking of\nadding a `vec::from_fn_rev` to handle this case, maybe I will try that\nthis weekend.)", "tree": {"sha": "f0fab6b6449e2f1259e587dbd74c69b2ed68f3bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0fab6b6449e2f1259e587dbd74c69b2ed68f3bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a", "html_url": "https://github.com/rust-lang/rust/commit/7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "606c23a78920c03758e200004fd9d1f4257f0325", "url": "https://api.github.com/repos/rust-lang/rust/commits/606c23a78920c03758e200004fd9d1f4257f0325", "html_url": "https://github.com/rust-lang/rust/commit/606c23a78920c03758e200004fd9d1f4257f0325"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "8f632ae639dcca61f11e728fb0f330f476e6537a", "filename": "src/libnum/bigint.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a/src%2Flibnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a/src%2Flibnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Fbigint.rs?ref=7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a", "patch": "@@ -784,11 +784,12 @@ impl BigUint {\n         if n_bits == 0 || self.data.is_empty() { return (*self).clone(); }\n \n         let mut borrow = 0;\n-        let mut shifted = ~[];\n+        let mut shifted_rev = vec::with_capacity(self.data.len());\n         for elem in self.data.rev_iter() {\n-            shifted = ~[(*elem >> n_bits) | borrow] + shifted;\n+            shifted_rev.push((*elem >> n_bits) | borrow);\n             borrow = *elem << (BigDigit::bits - n_bits);\n         }\n+        let shifted = { shifted_rev.reverse(); shifted_rev };\n         return BigUint::new(shifted);\n     }\n \n@@ -2637,4 +2638,15 @@ mod bench {\n             fib.to_str();\n         });\n     }\n+\n+    #[bench]\n+    fn shr(bh: &mut BenchHarness) {\n+        let n = { let one : BigUint = One::one(); one << 1000 };\n+        bh.iter(|| {\n+            let mut m = n.clone();\n+            for _ in range(0, 10) {\n+                m = m >> 1;\n+            }\n+        })\n+    }\n }"}]}