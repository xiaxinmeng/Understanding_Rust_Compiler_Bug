{"sha": "422856d70f934b49f5b35043f3b51b6da08a61fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMjg1NmQ3MGY5MzRiNDlmNWIzNTA0M2YzYjUxYjZkYTA4YTYxZmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-19T11:51:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-19T11:51:47Z"}, "message": "Merge #5812\n\n5812: Minor cleanups\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "78fa29f5d455f29224ef2d8342835d404240d14f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78fa29f5d455f29224ef2d8342835d404240d14f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/422856d70f934b49f5b35043f3b51b6da08a61fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfPRJTCRBK7hj4Ov3rIwAAdHIIAED22SYRI0RSushO+6ARKQHw\nlO86fstw7ZUzf6IFrJSHT0YBdzRmhKTvBPZGlvIurt0aJ6j5A2MH1y8RCCHvXf9R\n9Xfz6SMavvZshXSge9/gOdp7JjQTxQrnYYqFozOsUI+BlBbzP7N/T7T08/hiLRZ7\neLosPueIKxxipjcY7g7iGkftCHZAaDnkhsVhlh+ymoI7OOD95pyRc/CelQXgymlC\n8ea24TbvfCaB1lryte8g8mUemmFOy0qDMoPA6+34qEo3eyC85sEqFBpV4FxxsAr1\nolRRKD+m2WzpWIODm5Ir45zQaYf2oA8ImTO8M94lNvABTAhoFA34IY3hdivgGPA=\n=NWwD\n-----END PGP SIGNATURE-----\n", "payload": "tree 78fa29f5d455f29224ef2d8342835d404240d14f\nparent 63ac896655b75bc42d488cb5d4153ba770535ac5\nparent a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597837907 +0000\ncommitter GitHub <noreply@github.com> 1597837907 +0000\n\nMerge #5812\n\n5812: Minor cleanups\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/422856d70f934b49f5b35043f3b51b6da08a61fa", "html_url": "https://github.com/rust-lang/rust/commit/422856d70f934b49f5b35043f3b51b6da08a61fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/422856d70f934b49f5b35043f3b51b6da08a61fa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ac896655b75bc42d488cb5d4153ba770535ac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ac896655b75bc42d488cb5d4153ba770535ac5", "html_url": "https://github.com/rust-lang/rust/commit/63ac896655b75bc42d488cb5d4153ba770535ac5"}, {"sha": "a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b", "html_url": "https://github.com/rust-lang/rust/commit/a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "621ebcbe3868c59176ed23438289699d6001f5c9", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/422856d70f934b49f5b35043f3b51b6da08a61fa/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/422856d70f934b49f5b35043f3b51b6da08a61fa/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=422856d70f934b49f5b35043f3b51b6da08a61fa", "patch": "@@ -613,14 +613,13 @@ impl<'db> SemanticsImpl<'db> {\n         InFile::new(file_id, node)\n     }\n \n-    pub fn is_unsafe_method_call(&self, method_call_expr: &ast::MethodCallExpr) -> bool {\n+    fn is_unsafe_method_call(&self, method_call_expr: &ast::MethodCallExpr) -> bool {\n         method_call_expr\n             .expr()\n             .and_then(|expr| {\n-                let field_expr = if let ast::Expr::FieldExpr(field_expr) = expr {\n-                    field_expr\n-                } else {\n-                    return None;\n+                let field_expr = match expr {\n+                    ast::Expr::FieldExpr(field_expr) => field_expr,\n+                    _ => return None,\n                 };\n                 let ty = self.type_of_expr(&field_expr.expr()?)?;\n                 if !ty.is_packed(self.db) {\n@@ -635,7 +634,7 @@ impl<'db> SemanticsImpl<'db> {\n             .unwrap_or(false)\n     }\n \n-    pub fn is_unsafe_ref_expr(&self, ref_expr: &ast::RefExpr) -> bool {\n+    fn is_unsafe_ref_expr(&self, ref_expr: &ast::RefExpr) -> bool {\n         ref_expr\n             .expr()\n             .and_then(|expr| {\n@@ -654,7 +653,7 @@ impl<'db> SemanticsImpl<'db> {\n         // more than it should with the current implementation.\n     }\n \n-    pub fn is_unsafe_ident_pat(&self, ident_pat: &ast::IdentPat) -> bool {\n+    fn is_unsafe_ident_pat(&self, ident_pat: &ast::IdentPat) -> bool {\n         if !ident_pat.ref_token().is_some() {\n             return false;\n         }"}]}