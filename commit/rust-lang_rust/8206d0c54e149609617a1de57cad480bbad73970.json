{"sha": "8206d0c54e149609617a1de57cad480bbad73970", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMDZkMGM1NGUxNDk2MDk2MTdhMWRlNTdjYWQ0ODBiYmFkNzM5NzA=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2017-03-28T21:49:05Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2017-03-28T21:49:05Z"}, "message": "rustdoc: format fns like format rfc 39", "tree": {"sha": "813828ec3c65fce6306512e959a615345cff38c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/813828ec3c65fce6306512e959a615345cff38c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8206d0c54e149609617a1de57cad480bbad73970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8206d0c54e149609617a1de57cad480bbad73970", "html_url": "https://github.com/rust-lang/rust/commit/8206d0c54e149609617a1de57cad480bbad73970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8206d0c54e149609617a1de57cad480bbad73970/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f77ee2ff0ff93a3af205e4fa564f9f52cc066009", "url": "https://api.github.com/repos/rust-lang/rust/commits/f77ee2ff0ff93a3af205e4fa564f9f52cc066009", "html_url": "https://github.com/rust-lang/rust/commit/f77ee2ff0ff93a3af205e4fa564f9f52cc066009"}], "stats": {"total": 36, "additions": 16, "deletions": 20}, "files": [{"sha": "3589cc8fac617c4da706b68087a2953a097257d3", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8206d0c54e149609617a1de57cad480bbad73970/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8206d0c54e149609617a1de57cad480bbad73970/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=8206d0c54e149609617a1de57cad480bbad73970", "patch": "@@ -945,6 +945,10 @@ impl<'a> fmt::Display for Method<'a> {\n         let mut args = String::new();\n         let mut args_plain = String::new();\n         for (i, input) in decl.inputs.values.iter().enumerate() {\n+            if i == 0 {\n+                args.push_str(\"<br>\");\n+            }\n+\n             if let Some(selfty) = input.to_self() {\n                 match selfty {\n                     clean::SelfValue => {\n@@ -986,8 +990,8 @@ impl<'a> fmt::Display for Method<'a> {\n                 args_plain.push_str(&format!(\"{:#}\", input.type_));\n             }\n             if i + 1 < decl.inputs.values.len() {\n-                args.push_str(\",\");\n-                args_plain.push_str(\",\");\n+                args.push(',');\n+                args_plain.push(',');\n             }\n         }\n \n@@ -1003,27 +1007,19 @@ impl<'a> fmt::Display for Method<'a> {\n             format!(\"{}\", decl.output)\n         };\n \n-        let mut output: String;\n-        let plain: String;\n         let pad = repeat(\" \").take(indent).collect::<String>();\n-        if arrow.is_empty() {\n-            output = format!(\"({})\", args);\n-            plain = format!(\"{}({})\", pad, args_plain);\n+        let plain = format!(\"{pad}({args}){arrow}\",\n+                        pad = pad,\n+                        args = args_plain,\n+                        arrow = arrow_plain);\n+\n+        let output = if plain.len() > 80 {\n+            let pad = \"<br>&nbsp;&nbsp;&nbsp;&nbsp;\";\n+            format!(\"({args}<br>){arrow}\", args = args.replace(\"<br>\", pad), arrow = arrow)\n         } else {\n-            output = format!(\"({args})<br>{arrow}\", args = args, arrow = arrow);\n-            plain = format!(\"{pad}({args}){arrow}\",\n-                            pad = pad,\n-                            args = args_plain,\n-                            arrow = arrow_plain);\n-        }\n+            format!(\"({args}){arrow}\", args = args.replace(\"<br>\", \"\"), arrow = arrow)\n+        };\n \n-        if plain.len() > 80 {\n-            let pad = repeat(\"&nbsp;\").take(indent).collect::<String>();\n-            let pad = format!(\"<br>{}\", pad);\n-            output = output.replace(\"<br>\", &pad);\n-        } else {\n-            output = output.replace(\"<br>\", \"\");\n-        }\n         if f.alternate() {\n             write!(f, \"{}\", output.replace(\"<br>\", \"\\n\"))\n         } else {"}]}