{"sha": "7efe24c3ed070193ca64f402036166c8ab0c44b3", "node_id": "C_kwDOAAsO6NoAKDdlZmUyNGMzZWQwNzAxOTNjYTY0ZjQwMjAzNjE2NmM4YWIwYzQ0YjM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-09T12:04:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-09T12:04:52Z"}, "message": "Rollup merge of #100181 - RalfJung:alloc-ref-mutability, r=jackh726\n\nadd method to get the mutability of an AllocId\n\nMiri needs this for https://github.com/rust-lang/miri/issues/2463.", "tree": {"sha": "5881ceeaf183e0ae93dc9cef08f5a5bf819a5320", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5881ceeaf183e0ae93dc9cef08f5a5bf819a5320"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7efe24c3ed070193ca64f402036166c8ab0c44b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi8k1kCRBK7hj4Ov3rIwAAg7kIADVleunaXsoTq1lukEB19RKN\nCRxehkxFEBLJr+juHKK79x2SQF80JdiyKKrs368xCZi4cnXO+7zTd8jD6GQwNQXA\n6n6k8lE1gG4VjTuyS3zPGHZANRJsaXr6OhY/oi5otD9ol73kDQrWE2i20aqVjw0X\ngCMUETkdm5psIeBlwQB/pz0bdBHJJ0Q2x1drRQZXEHJXQtng7HhFC4vf859S2+hH\nNsGmVYpepamYaYhaFDZU1/6ePkIIa6Pqa5Sx8qpZm/FkzRxQsgU6c75zvRK8e8sS\nsDMI68t+QFK9BG4ztSbBLm7LvzqciXWBnKRzt1YeRBw+hk+OO7HuXKnRs2/EuIA=\n=EKGc\n-----END PGP SIGNATURE-----\n", "payload": "tree 5881ceeaf183e0ae93dc9cef08f5a5bf819a5320\nparent e41be25f0664566c6b3a8105ff306c40713047de\nparent 54b122e9132937bb0aa3514b3d5852b68e7ddf04\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1660046692 +0530\ncommitter GitHub <noreply@github.com> 1660046692 +0530\n\nRollup merge of #100181 - RalfJung:alloc-ref-mutability, r=jackh726\n\nadd method to get the mutability of an AllocId\n\nMiri needs this for https://github.com/rust-lang/miri/issues/2463.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7efe24c3ed070193ca64f402036166c8ab0c44b3", "html_url": "https://github.com/rust-lang/rust/commit/7efe24c3ed070193ca64f402036166c8ab0c44b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7efe24c3ed070193ca64f402036166c8ab0c44b3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41be25f0664566c6b3a8105ff306c40713047de", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41be25f0664566c6b3a8105ff306c40713047de", "html_url": "https://github.com/rust-lang/rust/commit/e41be25f0664566c6b3a8105ff306c40713047de"}, {"sha": "54b122e9132937bb0aa3514b3d5852b68e7ddf04", "url": "https://api.github.com/repos/rust-lang/rust/commits/54b122e9132937bb0aa3514b3d5852b68e7ddf04", "html_url": "https://github.com/rust-lang/rust/commit/54b122e9132937bb0aa3514b3d5852b68e7ddf04"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "75528d6140ce5da524076c5de688394326687cde", "filename": "compiler/rustc_const_eval/src/interpret/memory.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7efe24c3ed070193ca64f402036166c8ab0c44b3/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7efe24c3ed070193ca64f402036166c8ab0c44b3/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs?ref=7efe24c3ed070193ca64f402036166c8ab0c44b3", "patch": "@@ -520,6 +520,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n     /// Gives raw access to the `Allocation`, without bounds or alignment checks.\n     /// The caller is responsible for calling the access hooks!\n+    ///\n+    /// You almost certainly want to use `get_ptr_alloc`/`get_ptr_alloc_mut` instead.\n     fn get_alloc_raw(\n         &self,\n         id: AllocId,\n@@ -589,6 +591,11 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         Ok(&self.get_alloc_raw(id)?.extra)\n     }\n \n+    /// Return the `mutability` field of the given allocation.\n+    pub fn get_alloc_mutability<'a>(&'a self, id: AllocId) -> InterpResult<'tcx, Mutability> {\n+        Ok(self.get_alloc_raw(id)?.mutability)\n+    }\n+\n     /// Gives raw mutable access to the `Allocation`, without bounds or alignment checks.\n     /// The caller is responsible for calling the access hooks!\n     ///"}, {"sha": "ed1d883d0dca6f4d678448eea67240e82aec3bd1", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7efe24c3ed070193ca64f402036166c8ab0c44b3/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7efe24c3ed070193ca64f402036166c8ab0c44b3/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=7efe24c3ed070193ca64f402036166c8ab0c44b3", "patch": "@@ -628,6 +628,10 @@ impl Step for Miri {\n             cargo.env(\"MIRI_HOST_SYSROOT\", sysroot);\n             cargo.env(\"RUSTC_LIB_PATH\", builder.rustc_libdir(compiler));\n             cargo.env(\"MIRI\", miri);\n+            // propagate --bless\n+            if builder.config.cmd.bless() {\n+                cargo.env(\"MIRI_BLESS\", \"Gesundheit\");\n+            }\n \n             cargo.arg(\"--\").args(builder.config.cmd.test_args());\n "}]}