{"sha": "21be09448b21c25570f28ddd597f3d30ccc6fabf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYmUwOTQ0OGIyMWMyNTU3MGYyOGRkZDU5N2YzZDMwY2NjNmZhYmY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-07-29T20:18:39Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-07-29T20:18:39Z"}, "message": "Improve code emitted for inserting padding before unsized field.\n\nHat-tip to eddyb for the appropriate bit-trickery here.", "tree": {"sha": "27bd67e2f8d59e33b8e4e4169a65b6e822cc1a19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27bd67e2f8d59e33b8e4e4169a65b6e822cc1a19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21be09448b21c25570f28ddd597f3d30ccc6fabf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21be09448b21c25570f28ddd597f3d30ccc6fabf", "html_url": "https://github.com/rust-lang/rust/commit/21be09448b21c25570f28ddd597f3d30ccc6fabf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21be09448b21c25570f28ddd597f3d30ccc6fabf/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26f4ebe7a0b166cbfb04f6e8df16cb799f81058b", "url": "https://api.github.com/repos/rust-lang/rust/commits/26f4ebe7a0b166cbfb04f6e8df16cb799f81058b", "html_url": "https://github.com/rust-lang/rust/commit/26f4ebe7a0b166cbfb04f6e8df16cb799f81058b"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "18fedda49193cfcabbf8bd28384dc360c7c59128", "filename": "src/librustc_trans/trans/glue.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/21be09448b21c25570f28ddd597f3d30ccc6fabf/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21be09448b21c25570f28ddd597f3d30ccc6fabf/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fglue.rs?ref=21be09448b21c25570f28ddd597f3d30ccc6fabf", "patch": "@@ -475,21 +475,13 @@ pub fn size_and_align_of_dst<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, t: Ty<'tcx>, in\n             //\n             //   `size + ((size & (align-1)) ? align : 0)`\n             //\n-            // Currently I am emulating the above via:\n+            // emulated via the semi-standard fast bit trick:\n             //\n-            //   `size + ((size & (align-1)) * align-(size & (align-1)))`\n-            //\n-            // because I am not sure which is cheaper between a branch\n-            // or a multiply.\n-\n-            let mask = Sub(bcx, align, C_uint(bcx.ccx(), 1_u64), dbloc);\n-            let lowbits = And(bcx, size, mask, DebugLoc::None);\n-            let nonzero = ICmp(bcx, llvm::IntNE, lowbits, C_uint(bcx.ccx(), 0_u64), dbloc);\n-            let add_size = Mul(bcx,\n-                               ZExt(bcx, nonzero, Type::i64(bcx.ccx())),\n-                               Sub(bcx, align, lowbits, dbloc),\n-                               dbloc);\n-            let size = Add(bcx, size, add_size, dbloc);\n+            //   `(size + (align-1)) & !align`\n+\n+            let addend = Sub(bcx, align, C_uint(bcx.ccx(), 1_u64), dbloc);\n+            let size = And(\n+                bcx, Add(bcx, size, addend, dbloc), Neg(bcx, align, dbloc), dbloc);\n \n             (size, align)\n         }"}]}