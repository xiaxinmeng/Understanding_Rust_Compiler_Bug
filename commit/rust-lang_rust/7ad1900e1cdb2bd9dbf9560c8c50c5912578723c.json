{"sha": "7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZDE5MDBlMWNkYjJiZDlkYmY5NTYwYzhjNTBjNTkxMjU3ODcyM2M=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-04-19T13:40:21Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-05-03T09:48:34Z"}, "message": "Remove unused trait imports flagged by lint", "tree": {"sha": "45b157326d20e186929909483a4705634e06a303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45b157326d20e186929909483a4705634e06a303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "html_url": "https://github.com/rust-lang/rust/commit/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d8100a068151512774caf15a6a88766ca9cf434", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d8100a068151512774caf15a6a88766ca9cf434", "html_url": "https://github.com/rust-lang/rust/commit/7d8100a068151512774caf15a6a88766ca9cf434"}], "stats": {"total": 63, "additions": 13, "deletions": 50}, "files": [{"sha": "dc01a9b5c780380e81c3c437e0c7198dde34cd9f", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -15,7 +15,6 @@\n #![feature(box_syntax)]\n #![feature(cell_extras)]\n #![feature(const_fn)]\n-#![feature(core_float)]\n #![feature(core_private_bignum)]\n #![feature(core_private_diy_float)]\n #![feature(dec2flt)]"}, {"sha": "d5a6e0f87d69b5886d2ab465ea8981a2b34372ad", "filename": "src/libcoretest/num/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibcoretest%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibcoretest%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fmod.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -52,7 +52,6 @@ pub fn test_num<T>(ten: T, two: T) where\n mod tests {\n     use core::option::Option;\n     use core::option::Option::{Some, None};\n-    use core::num::Float;\n \n     #[test]\n     fn from_str_issue7588() {"}, {"sha": "adce0f5d45a479d0a20608d41f4a973f9fdbe622", "filename": "src/librustc_const_eval/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_const_eval%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_const_eval%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Feval.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -17,7 +17,7 @@ use self::EvalHint::*;\n \n use rustc::hir::map as ast_map;\n use rustc::hir::map::blocks::FnLikeNode;\n-use rustc::middle::cstore::{self, CrateStore, InlinedItem};\n+use rustc::middle::cstore::{self, InlinedItem};\n use rustc::{infer, traits};\n use rustc::hir::def::Def;\n use rustc::hir::def_id::DefId;"}, {"sha": "b31c7ab6678189627e5c682c962413427e7b8fb9", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -70,7 +70,6 @@ use rustc_trans::back::link;\n use rustc::session::{self, config, Session, build_session, CompileResult};\n use rustc::session::config::{Input, PrintRequest, OutputType, ErrorOutputType};\n use rustc::session::config::{get_unstable_features_setting, nightly_options};\n-use rustc::middle::cstore::CrateStore;\n use rustc::lint::Lint;\n use rustc::lint;\n use rustc_metadata::loader;"}, {"sha": "37d5f8937f174edaad81c53647398acde5415ce6", "filename": "src/librustc_incremental/persist/data.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -11,7 +11,6 @@\n //! The data that we will serialize and deserialize.\n \n use rustc::dep_graph::DepNode;\n-use rustc_serialize::{Decoder as RustcDecoder, Encoder as RustcEncoder};\n \n use super::directory::DefPathIndex;\n "}, {"sha": "796812556d2a7e2caf6346e1d6f93d8e1a0ded6f", "filename": "src/librustc_incremental/persist/directory.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_incremental%2Fpersist%2Fdirectory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_incremental%2Fpersist%2Fdirectory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirectory.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -18,7 +18,6 @@ use rustc::hir::map::DefPath;\n use rustc::hir::def_id::DefId;\n use rustc::ty;\n use rustc::util::nodemap::DefIdMap;\n-use rustc_serialize::{Decoder as RustcDecoder, Encoder as RustcEncoder};\n use std::fmt::{self, Debug};\n \n /// Index into the DefIdDirectory"}, {"sha": "6a51b1a43adfad3ad799ebd5aae018fbcfadc368", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -29,7 +29,6 @@\n //! a `pub fn new()`.\n \n use rustc::hir::def::Def;\n-use middle::cstore::CrateStore;\n use rustc::hir::def_id::DefId;\n use middle::stability;\n use rustc::{cfg, infer};"}, {"sha": "b81a4a0efe741d6b88d91da71b116ebcde617ab5", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -26,7 +26,7 @@ use std::{i8, i16, i32, i64, u8, u16, u32, u64, f32, f64};\n \n use syntax::ast;\n use syntax::abi::Abi;\n-use syntax::attr::{self, AttrMetaMethods};\n+use syntax::attr;\n use syntax::codemap::{self, Span};\n \n use rustc::hir;"}, {"sha": "6a79d5df80ae23f7528a78b8d44fae6bc16c5b6b", "filename": "src/librustc_metadata/csearch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_metadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_metadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcsearch.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -536,7 +536,7 @@ impl<'tcx> CrateStore<'tcx> for cstore::CStore {\n         let mut visible_parent_map = self.visible_parent_map.borrow_mut();\n         if !visible_parent_map.is_empty() { return visible_parent_map; }\n \n-        use rustc::middle::cstore::{CrateStore, ChildItem};\n+        use rustc::middle::cstore::ChildItem;\n         use std::collections::vec_deque::VecDeque;\n         use std::collections::hash_map::Entry;\n         for cnum in 1 .. self.next_crate_num() {"}, {"sha": "58bc4e2a193faa22e896588345c9facea6f7099d", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -43,7 +43,6 @@ use rustc::mir;\n use rustc::mir::visit::MutVisitor;\n \n use std::cell::Cell;\n-use std::io::prelude::*;\n use std::io;\n use std::rc::Rc;\n use std::str;"}, {"sha": "7558e0774b3625c08ae2287ca4ec4ce5e2b5126c", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -21,7 +21,7 @@ use def_key;\n use tyencode;\n use index::{self, IndexData};\n \n-use middle::cstore::{LOCAL_CRATE, CrateStore, InlinedItemRef, LinkMeta, tls};\n+use middle::cstore::{LOCAL_CRATE, InlinedItemRef, LinkMeta, tls};\n use rustc::hir::def;\n use rustc::hir::def_id::{CRATE_DEF_INDEX, DefId};\n use middle::dependency_format::Linkage;\n@@ -46,7 +46,6 @@ use syntax::abi::Abi;\n use syntax::ast::{self, NodeId, Name, CRATE_NODE_ID, CrateNum};\n use syntax::codemap::BytePos;\n use syntax::attr;\n-use syntax::attr::AttrMetaMethods;\n use syntax::errors::Handler;\n use syntax;\n use rbml::writer::Encoder;"}, {"sha": "4ecb7a28ef76fcf84c2da81ba271342e307ba18a", "filename": "src/librustc_metadata/loader.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_metadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_metadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Floader.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -233,7 +233,6 @@ use std::cmp;\n use std::collections::HashMap;\n use std::fmt;\n use std::fs;\n-use std::io::prelude::*;\n use std::io;\n use std::path::{Path, PathBuf};\n use std::ptr;"}, {"sha": "4a4b7caf478ea44f92ea394be23c6e6e38505804", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -34,7 +34,6 @@ use rustc::hir::intravisit::{self, Visitor};\n \n use rustc::dep_graph::DepNode;\n use rustc::lint;\n-use rustc::middle::cstore::CrateStore;\n use rustc::hir::def::{self, Def};\n use rustc::hir::def_id::DefId;\n use rustc::middle::privacy::{AccessLevel, AccessLevels};"}, {"sha": "f5e72195bc35628855cfdf1938ca6c1f0f41ddbe", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -21,7 +21,7 @@ use ParentLink::{ModuleParentLink, BlockParentLink};\n use Resolver;\n use {resolve_error, resolve_struct_error, ResolutionError};\n \n-use rustc::middle::cstore::{CrateStore, ChildItem, DlDef};\n+use rustc::middle::cstore::{ChildItem, DlDef};\n use rustc::lint;\n use rustc::hir::def::*;\n use rustc::hir::def_id::{CRATE_DEF_INDEX, DefId};"}, {"sha": "9ef927b66106d1fc6e4cb380dd24fb94daf42919", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -47,7 +47,6 @@ use rustc::dep_graph::DepNode;\n use rustc::hir::map as hir_map;\n use rustc::session::Session;\n use rustc::lint;\n-use rustc::middle::cstore::CrateStore;\n use rustc::hir::def::*;\n use rustc::hir::def_id::DefId;\n use rustc::hir::pat_util::pat_bindings;\n@@ -58,7 +57,6 @@ use rustc::util::nodemap::{NodeMap, FnvHashMap, FnvHashSet};\n \n use syntax::ast::{self, FloatTy};\n use syntax::ast::{CRATE_NODE_ID, Name, NodeId, CrateNum, IntTy, UintTy};\n-use syntax::attr::AttrMetaMethods;\n use syntax::codemap::{self, Span, Pos};\n use syntax::errors::DiagnosticBuilder;\n use syntax::parse::token::{self, keywords};"}, {"sha": "e37dd4cbc6eda653811acae2de5719884934da4a", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -25,7 +25,6 @@ use rustc::lint;\n use rustc::hir::def::*;\n \n use syntax::ast::{NodeId, Name};\n-use syntax::attr::AttrMetaMethods;\n use syntax::codemap::{Span, DUMMY_SP};\n use syntax::util::lev_distance::find_best_match_for_name;\n "}, {"sha": "e654cef0c30562f6a41fa3bf25a1c6a2ae4321e1", "filename": "src/librustc_save_analysis/data.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_save_analysis%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_save_analysis%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdata.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -13,8 +13,6 @@\n //! The `Dump` trait can be used together with `DumpVisitor` in order to\n //! retrieve the data from a crate.\n \n-use std::hash::Hasher;\n-\n use rustc::hir::def_id::DefId;\n use rustc::ty;\n use syntax::ast::{CrateNum, NodeId};"}, {"sha": "aea61da18a0a1c59a67721b43670c6fc147e442b", "filename": "src/librustc_trans/back/archive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Farchive.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -21,8 +21,6 @@ use std::process::{Command, Output, Stdio};\n use std::ptr;\n use std::str;\n \n-use middle::cstore::CrateStore;\n-\n use libc;\n use llvm::archive_ro::{ArchiveRO, Child};\n use llvm::{self, ArchiveKind};"}, {"sha": "3e69bb204b92db525c5e09de347eaf824fd8aea3", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -19,7 +19,7 @@ use session::config::{OutputFilenames, Input, OutputType};\n use session::filesearch;\n use session::search_paths::PathKind;\n use session::Session;\n-use middle::cstore::{self, CrateStore, LinkMeta};\n+use middle::cstore::{self, LinkMeta};\n use middle::cstore::{LinkagePreference, NativeLibraryKind};\n use middle::dependency_format::Linkage;\n use CrateTranslation;"}, {"sha": "8055e97034e3f2f2a4b714cff9b5ae9d0daa01e9", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -16,7 +16,6 @@ use std::path::{Path, PathBuf};\n use std::process::Command;\n \n use back::archive;\n-use middle::cstore::CrateStore;\n use middle::dependency_format::Linkage;\n use session::Session;\n use session::config::CrateTypeDylib;"}, {"sha": "dd453bf996916e2afe6324fd9d7b94e3049003a4", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -35,7 +35,6 @@ use lint;\n use llvm::{BasicBlockRef, Linkage, ValueRef, Vector, get_param};\n use llvm;\n use rustc::cfg;\n-use middle::cstore::CrateStore;\n use rustc::hir::def_id::DefId;\n use rustc::infer;\n use middle::lang_items::{LangItem, ExchangeMallocFnLangItem, StartFnLangItem};"}, {"sha": "70348cf35e5f5a2c99a385bbf9674d244e14e1e7", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -39,7 +39,7 @@ use type_::Type;\n use value::Value;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::traits::{self, SelectionContext, ProjectionMode};\n-use rustc::ty::fold::{TypeFolder, TypeFoldable};\n+use rustc::ty::fold::TypeFoldable;\n use rustc::hir;\n use util::nodemap::NodeMap;\n "}, {"sha": "af175fbf88256eecb57cebe6f0863d909d94cc0f", "filename": "src/librustc_trans/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_trans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Finline.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use llvm::{AvailableExternallyLinkage, InternalLinkage, SetLinkage};\n-use middle::cstore::{CrateStore, FoundAst, InlinedItem};\n+use middle::cstore::{FoundAst, InlinedItem};\n use rustc::hir::def_id::DefId;\n use rustc::ty::subst::Substs;\n use base::{push_ctxt, trans_item, trans_fn};"}, {"sha": "711d695a6ef1dab5103537bb02012afb84730a94", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -71,7 +71,7 @@ use rustc::ty::adjustment::{AdjustUnsafeFnPointer, AdjustMutToConstPointer};\n use rustc::ty::{self, LvaluePreference, TypeAndMut, Ty, TyCtxt};\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::error::TypeError;\n-use rustc::ty::relate::{RelateResult, TypeRelation};\n+use rustc::ty::relate::RelateResult;\n use util::common::indent;\n \n use std::cell::RefCell;"}, {"sha": "29a9ae9e5162d7ffb934f0c1e36c08b1301dc754", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -11,18 +11,15 @@\n //! Type-checking for the rust-intrinsic and platform-intrinsic\n //! intrinsics that the compiler exposes.\n \n-use astconv::AstConv;\n use intrinsics;\n use rustc::ty::subst::{self, Substs};\n use rustc::ty::FnSig;\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::fold::TypeFolder;\n use {CrateCtxt, require_same_types};\n \n use std::collections::{HashMap};\n use syntax::abi::Abi;\n use syntax::ast;\n-use syntax::attr::AttrMetaMethods;\n use syntax::codemap::Span;\n use syntax::parse::token;\n "}, {"sha": "367cac6850985de47da8a5b97a7822d770aefdfe", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -10,7 +10,6 @@\n \n //! Method lookup: the secret sauce of Rust. See `README.md`.\n \n-use astconv::AstConv;\n use check::FnCtxt;\n use hir::def::Def;\n use hir::def_id::DefId;"}, {"sha": "cf1b609884b1c33f2d0c053ffb3d8c6e4cf80500", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -13,11 +13,10 @@\n \n use CrateCtxt;\n \n-use astconv::AstConv;\n use check::{self, FnCtxt, UnresolvedTypeAction, autoderef};\n use rustc::hir::map as hir_map;\n use rustc::ty::{self, Ty, ToPolyTraitRef, ToPredicate, TypeFoldable};\n-use middle::cstore::{self, CrateStore};\n+use middle::cstore;\n use hir::def::Def;\n use hir::def_id::DefId;\n use middle::lang_items::FnOnceTraitLangItem;"}, {"sha": "14394d91e610f5adc166fbb0acd4d68738376a99", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -99,8 +99,7 @@ use rustc::ty::{self, ToPolyTraitRef, Ty, TyCtxt, Visibility};\n use rustc::ty::{MethodCall, MethodCallee};\n use rustc::ty::adjustment;\n use rustc::ty::error::TypeError;\n-use rustc::ty::fold::{TypeFolder, TypeFoldable};\n-use rustc::ty::relate::TypeRelation;\n+use rustc::ty::fold::TypeFoldable;\n use rustc::ty::util::{Representability, IntTypeExt};\n use require_c_abi_if_variadic;\n use rscope::{ElisionFailureInfo, RegionScope};"}, {"sha": "bda4c422880209e21a900e0b1d314dbeab5e9dbc", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -82,7 +82,6 @@\n //! relation, except that a borrowed pointer never owns its\n //! contents.\n \n-use astconv::AstConv;\n use check::dropck;\n use check::FnCtxt;\n use middle::free_region::FreeRegionMap;"}, {"sha": "ffdae2339705e2674a77bcef10ff2cb74e976b5b", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use astconv::AstConv;\n use check::{FnCtxt, Inherited, blank_fn_ctxt, regionck};\n use constrained_type_params::{identify_constrained_type_params, Parameter};\n use CrateCtxt;\n@@ -17,7 +16,6 @@ use middle::region::{CodeExtent};\n use rustc::ty::subst::{self, TypeSpace, FnSpace, ParamSpace, SelfSpace};\n use rustc::traits;\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::fold::{TypeFolder};\n \n use std::cell::RefCell;\n use std::collections::HashSet;"}, {"sha": "4341ae5dac1cf984f98984dbbd852cb105d2ab92", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -13,7 +13,6 @@\n // substitutions.\n use self::ResolveReason::*;\n \n-use astconv::AstConv;\n use check::FnCtxt;\n use hir::def_id::DefId;\n use hir::pat_util;"}, {"sha": "30d181abb9e9d1d6890024d56322dfe821866c19", "filename": "src/librustc_typeck/coherence/overlap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -12,7 +12,6 @@\n //! same type. Likewise, no two inherent impls for a given type\n //! constructor provide a method with the same name.\n \n-use middle::cstore::CrateStore;\n use hir::def_id::DefId;\n use rustc::traits::{self, ProjectionMode};\n use rustc::infer;"}, {"sha": "d88bfd95367b96679246676f15e067cdd6a91bd1", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -73,7 +73,6 @@ use rustc::ty::subst::{Substs, FnSpace, ParamSpace, SelfSpace, TypeSpace, VecPer\n use rustc::ty::{ToPredicate, ImplContainer, ImplOrTraitItemContainer, TraitContainer};\n use rustc::ty::{self, ToPolyTraitRef, Ty, TyCtxt, TypeScheme};\n use rustc::ty::{VariantKind};\n-use rustc::ty::fold::{TypeFolder};\n use rustc::ty::util::IntTypeExt;\n use rscope::*;\n use rustc::dep_graph::DepNode;"}, {"sha": "68e4ed000b038c43b88aa0f45c8bf8aad9faaa16", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -14,10 +14,9 @@ use std::collections::HashSet;\n use std::iter::once;\n \n use syntax::ast;\n-use syntax::attr::AttrMetaMethods;\n use rustc::hir;\n \n-use rustc::middle::cstore::{self, CrateStore};\n+use rustc::middle::cstore;\n use rustc::hir::def::Def;\n use rustc::hir::def_id::DefId;\n use rustc::ty::{self, TyCtxt};"}, {"sha": "caf02d73e47dafecdb53a6a742c3f5c457881530", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -35,7 +35,7 @@ use syntax::parse::token::{self, InternedString, keywords};\n use syntax::ptr::P;\n \n use rustc_trans::back::link;\n-use rustc::middle::cstore::{self, CrateStore};\n+use rustc::middle::cstore;\n use rustc::middle::privacy::AccessLevels;\n use rustc::hir::def::Def;\n use rustc::hir::def_id::{DefId, DefIndex, CRATE_DEF_INDEX};"}, {"sha": "a168fe98a94cf8d2c3548ee4cacfe849493f6e1a", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use std::fmt;\n-use std::io::prelude::*;\n use std::io;\n \n use externalfiles::ExternalHtml;"}, {"sha": "a1275d23d5710fec3f651a7a5eec32204bc7800a", "filename": "src/libstd/collections/hash/bench.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibstd%2Fcollections%2Fhash%2Fbench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibstd%2Fcollections%2Fhash%2Fbench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fbench.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -11,7 +11,6 @@\n #![cfg(test)]\n \n extern crate test;\n-use prelude::v1::*;\n \n use self::test::Bencher;\n "}, {"sha": "e142c78569bd7ad597e3b71bfcb6db88df487023", "filename": "src/libstd/io/error.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibstd%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Flibstd%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ferror.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -350,7 +350,6 @@ mod test {\n     use prelude::v1::*;\n     use super::{Error, ErrorKind};\n     use error;\n-    use error::Error as error_Error;\n     use fmt;\n     use sys::os::error_string;\n "}, {"sha": "e0092f8e29e732b86d78369a833e9c4cb28d278d", "filename": "src/tools/rustbook/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Ftools%2Frustbook%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1900e1cdb2bd9dbf9560c8c50c5912578723c/src%2Ftools%2Frustbook%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2Fmain.rs?ref=7ad1900e1cdb2bd9dbf9560c8c50c5912578723c", "patch": "@@ -19,10 +19,8 @@ extern crate rustdoc;\n extern crate rustc_back;\n \n use std::env;\n-use std::error::Error;\n use std::process;\n use std::sync::atomic::{AtomicIsize, ATOMIC_ISIZE_INIT, Ordering};\n-use subcommand::Subcommand;\n use term::Term;\n \n mod term;"}]}