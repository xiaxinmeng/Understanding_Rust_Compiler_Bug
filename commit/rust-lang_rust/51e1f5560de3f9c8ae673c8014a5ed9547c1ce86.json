{"sha": "51e1f5560de3f9c8ae673c8014a5ed9547c1ce86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZTFmNTU2MGRlM2Y5YzhhZTY3M2M4MDE0YTVlZDk1NDdjMWNlODY=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-07T08:48:37Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-07T08:48:37Z"}, "message": "add unstable attribute", "tree": {"sha": "129955c34bf585b63cdc50009cd51de4da97a827", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/129955c34bf585b63cdc50009cd51de4da97a827"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51e1f5560de3f9c8ae673c8014a5ed9547c1ce86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51e1f5560de3f9c8ae673c8014a5ed9547c1ce86", "html_url": "https://github.com/rust-lang/rust/commit/51e1f5560de3f9c8ae673c8014a5ed9547c1ce86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51e1f5560de3f9c8ae673c8014a5ed9547c1ce86/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0bac148f7ae149ea93b1610fd2398fc1f00da65", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bac148f7ae149ea93b1610fd2398fc1f00da65", "html_url": "https://github.com/rust-lang/rust/commit/d0bac148f7ae149ea93b1610fd2398fc1f00da65"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "71617347e4c8a577d01804334b2a685e53a417ad", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51e1f5560de3f9c8ae673c8014a5ed9547c1ce86/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51e1f5560de3f9c8ae673c8014a5ed9547c1ce86/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=51e1f5560de3f9c8ae673c8014a5ed9547c1ce86", "patch": "@@ -4796,6 +4796,10 @@ pub enum IntErrorKind {\n \n impl ParseIntError {\n     /// Outputs the detailed cause of parsing an integer failing.\n+    #[unstable(feature = \"int_error_matching\",\n+               reason = \"it can be useful to match errors when making error messages \\\n+                         for integer parsing\",\n+               issue = \"22639\")]\n     pub fn kind(self) -> IntErrorKind {\n         self.kind\n     }"}]}