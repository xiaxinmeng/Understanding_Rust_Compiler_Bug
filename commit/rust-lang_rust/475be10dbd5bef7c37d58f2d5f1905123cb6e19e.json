{"sha": "475be10dbd5bef7c37d58f2d5f1905123cb6e19e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NWJlMTBkYmQ1YmVmN2MzN2Q1OGYyZDVmMTkwNTEyM2NiNmUxOWU=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-10-17T04:36:02Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-10-17T04:36:02Z"}, "message": "in which unused-parens suggestions heed what the user actually wrote\n\nAaron Hill pointed out that unnecessary parens around a macro call\n(paradigmatically, `format!`) yielded a suggestion of hideous\nmacro-expanded code. (The slightly unusual choice of using the\npretty-printer to compose suggestions was quite recently commented on\nin the commit message for 1081bbbfc (\"abolish ICE when pretty-printing\nasync block\"), but without any grounds to condemn it as a \ud835\ude23\ud835\ude22\ud835\ude25\nchoice. Hill's report provides the grounds.) `span_to_snippet` is\nfallable as far as the type system is concerned (because, who knows,\nmacros or something), so the pretty-printing can live on in the\noft-neglected `else` branch.\n\nResolves #55109.", "tree": {"sha": "0dde10a02c8711ab79fa8436cf7b87a3fdb16a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dde10a02c8711ab79fa8436cf7b87a3fdb16a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/475be10dbd5bef7c37d58f2d5f1905123cb6e19e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/475be10dbd5bef7c37d58f2d5f1905123cb6e19e", "html_url": "https://github.com/rust-lang/rust/commit/475be10dbd5bef7c37d58f2d5f1905123cb6e19e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/475be10dbd5bef7c37d58f2d5f1905123cb6e19e/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01ca85becd45a4115bd5a1b367a1667c06f0906b", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ca85becd45a4115bd5a1b367a1667c06f0906b", "html_url": "https://github.com/rust-lang/rust/commit/01ca85becd45a4115bd5a1b367a1667c06f0906b"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "e6909697322913ecf1a950cc6576801b8981ec4d", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/475be10dbd5bef7c37d58f2d5f1905123cb6e19e/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/475be10dbd5bef7c37d58f2d5f1905123cb6e19e/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=475be10dbd5bef7c37d58f2d5f1905123cb6e19e", "patch": "@@ -281,8 +281,13 @@ impl UnusedParens {\n             let necessary = struct_lit_needs_parens &&\n                             parser::contains_exterior_struct_lit(&inner);\n             if !necessary {\n-                let pattern = pprust::expr_to_string(value);\n-                Self::remove_outer_parens(cx, value.span, &pattern, msg);\n+                let expr_text = if let Ok(snippet) = cx.sess().source_map()\n+                    .span_to_snippet(value.span) {\n+                        snippet\n+                    } else {\n+                        pprust::expr_to_string(value)\n+                    };\n+                Self::remove_outer_parens(cx, value.span, &expr_text, msg);\n             }\n         }\n     }\n@@ -292,8 +297,13 @@ impl UnusedParens {\n                                 value: &ast::Pat,\n                                 msg: &str) {\n         if let ast::PatKind::Paren(_) = value.node {\n-            let pattern = pprust::pat_to_string(value);\n-            Self::remove_outer_parens(cx, value.span, &pattern, msg);\n+            let pattern_text = if let Ok(snippet) = cx.sess().source_map()\n+                .span_to_snippet(value.span) {\n+                    snippet\n+                } else {\n+                    pprust::pat_to_string(value)\n+                };\n+            Self::remove_outer_parens(cx, value.span, &pattern_text, msg);\n         }\n     }\n "}, {"sha": "77d546a00ecd47fd8b2df908227a8191f475f68d", "filename": "src/test/ui/lint/suggestions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/475be10dbd5bef7c37d58f2d5f1905123cb6e19e/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/475be10dbd5bef7c37d58f2d5f1905123cb6e19e/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs?ref=475be10dbd5bef7c37d58f2d5f1905123cb6e19e", "patch": "@@ -56,7 +56,7 @@ fn main() {\n     while true {\n     //~^ WARN denote infinite loops\n     //~| HELP use `loop`\n-        let mut a = (1);\n+        let mut registry_no = (format!(\"NX-{}\", 74205));\n         //~^ WARN does not need to be mutable\n         //~| HELP remove this `mut`\n         //~| WARN unnecessary parentheses\n@@ -72,6 +72,6 @@ fn main() {\n             //~^ WARN this pattern is redundant\n             //~| HELP remove this\n         }\n-        println!(\"{} {}\", a, b);\n+        println!(\"{} {}\", registry_no, b);\n     }\n }"}, {"sha": "73704614815bed69407bed2750f4603dc042b3d1", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/475be10dbd5bef7c37d58f2d5f1905123cb6e19e/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/475be10dbd5bef7c37d58f2d5f1905123cb6e19e/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=475be10dbd5bef7c37d58f2d5f1905123cb6e19e", "patch": "@@ -1,8 +1,8 @@\n warning: unnecessary parentheses around assigned value\n-  --> $DIR/suggestions.rs:59:21\n+  --> $DIR/suggestions.rs:59:31\n    |\n-LL |         let mut a = (1);\n-   |                     ^^^ help: remove these parentheses\n+LL |         let mut registry_no = (format!(\"NX-{}\", 74205));\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n    |\n note: lint level defined here\n   --> $DIR/suggestions.rs:13:21\n@@ -21,8 +21,8 @@ LL | #[no_debug] // should suggest removal of deprecated attribute\n warning: variable does not need to be mutable\n   --> $DIR/suggestions.rs:59:13\n    |\n-LL |         let mut a = (1);\n-   |             ----^\n+LL |         let mut registry_no = (format!(\"NX-{}\", 74205));\n+   |             ----^^^^^^^^^^^\n    |             |\n    |             help: remove this `mut`\n    |"}]}