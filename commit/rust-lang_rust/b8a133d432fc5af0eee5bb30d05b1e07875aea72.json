{"sha": "b8a133d432fc5af0eee5bb30d05b1e07875aea72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4YTEzM2Q0MzJmYzVhZjBlZWU1YmIzMGQwNWIxZTA3ODc1YWVhNzI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-11-01T21:08:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-01T21:08:39Z"}, "message": "Merge pull request #3145 from otavio/allow-failure-for-crater\n\nCI: only run unit tests for `crater`", "tree": {"sha": "283bd3edfc1abd0940b75f3e37672df72d736294", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/283bd3edfc1abd0940b75f3e37672df72d736294"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8a133d432fc5af0eee5bb30d05b1e07875aea72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb22tXCRBK7hj4Ov3rIwAAdHIIAK6kofAstd0l4S8CEApXKOE6\nypO13ngeb3PXuUSPrauwyVnqrxpJrtgcU9skcbgyFNhs57kGj2TWyf1kI23rCP1R\nfNW69nkRzRhUOByD/wlgGA0GFvNTWxfOAEgut/etnUTVLZ4p7WzR6ffXSewuG4XQ\nt8UA90joHKRlS7hwDj/BsAiAA391Yu0PaHmwhhGGsUhDmzVl8KjzF6dt1jPm6ICC\n+7+s0Y1W98T9hHJptNfdkgXRILDWXjijjoU0x1wkh+yEQkyBgbXH0Lb1/Or00VZI\n7R2CDYjvcn1U5U2dgCcP/hPCOnifd/+3djk8f9b2JQ/0w8FMJKB8toX4lBrE+/w=\n=edny\n-----END PGP SIGNATURE-----\n", "payload": "tree 283bd3edfc1abd0940b75f3e37672df72d736294\nparent 8506f5e5ce2f4e27f3e1a6a924f66859e2474dd5\nparent c4dd45060de3a0c07b93e6f99b30806216c68cf9\nauthor Nick Cameron <nrc@ncameron.org> 1541106519 +1300\ncommitter GitHub <noreply@github.com> 1541106519 +1300\n\nMerge pull request #3145 from otavio/allow-failure-for-crater\n\nCI: only run unit tests for `crater`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a133d432fc5af0eee5bb30d05b1e07875aea72", "html_url": "https://github.com/rust-lang/rust/commit/b8a133d432fc5af0eee5bb30d05b1e07875aea72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8a133d432fc5af0eee5bb30d05b1e07875aea72/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8506f5e5ce2f4e27f3e1a6a924f66859e2474dd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8506f5e5ce2f4e27f3e1a6a924f66859e2474dd5", "html_url": "https://github.com/rust-lang/rust/commit/8506f5e5ce2f4e27f3e1a6a924f66859e2474dd5"}, {"sha": "c4dd45060de3a0c07b93e6f99b30806216c68cf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4dd45060de3a0c07b93e6f99b30806216c68cf9", "html_url": "https://github.com/rust-lang/rust/commit/c4dd45060de3a0c07b93e6f99b30806216c68cf9"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "e38ed696d17b22a7e04933d38b5926369291388e", "filename": ".travis.yml", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8a133d432fc5af0eee5bb30d05b1e07875aea72/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b8a133d432fc5af0eee5bb30d05b1e07875aea72/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=b8a133d432fc5af0eee5bb30d05b1e07875aea72", "patch": "@@ -35,8 +35,6 @@ matrix:\n     - env: INTEGRATION=stdsimd\n     - env: INTEGRATION=tempdir\n   allow_failures:\n-    # Doesn't build\n-    - env: INTEGRATION=futures-rs\n     # Doesn't build - seems to be because of an option\n     - env: INTEGRATION=packed_simd\n     # Test failure"}, {"sha": "1e050218905a66c90e67dcbb6c497da343f4ab39", "filename": "ci/integration.sh", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b8a133d432fc5af0eee5bb30d05b1e07875aea72/ci%2Fintegration.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b8a133d432fc5af0eee5bb30d05b1e07875aea72/ci%2Fintegration.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fintegration.sh?ref=b8a133d432fc5af0eee5bb30d05b1e07875aea72", "patch": "@@ -24,9 +24,25 @@ cargo fmt -- --version\n #\n # * `cargo fmt --all` succeeds without any warnings or errors\n # * `cargo fmt --all -- --check` after formatting returns success\n-# * `cargo test -all` still passes (formatting did not break the build)\n-function check_fmt {\n-    cargo test --all\n+# * `cargo test --all` still passes (formatting did not break the build)\n+function check_fmt_with_all_tests {\n+    check_fmt_base \"--all\"\n+    return $?\n+}\n+\n+# Checks that:\n+#\n+# * `cargo fmt --all` succeeds without any warnings or errors\n+# * `cargo fmt --all -- --check` after formatting returns success\n+# * `cargo test --lib` still passes (formatting did not break the build)\n+function check_fmt_with_lib_tests {\n+    check_fmt_base \"--lib\"\n+    return $?\n+}\n+\n+function check_fmt_base {\n+    local test_args=\"$1\"\n+    cargo test $test_args\n     if [[ $? != 0 ]]; then\n           return 0\n     fi\n@@ -54,7 +70,7 @@ function check_fmt {\n         cat rustfmt_check_output\n         return 1\n     fi\n-    cargo test --all\n+    cargo test $test_args\n     if [[ $? != 0 ]]; then\n         return $?\n     fi\n@@ -65,13 +81,19 @@ case ${INTEGRATION} in\n         git clone --depth=1 https://github.com/rust-lang/${INTEGRATION}.git\n         cd ${INTEGRATION}\n         export CFG_DISABLE_CROSS_TESTS=1\n-        check_fmt\n+        check_fmt_with_all_tests\n+        cd -\n+        ;;\n+    crater)\n+        git clone --depth=1 https://github.com/rust-lang-nursery/${INTEGRATION}.git\n+        cd ${INTEGRATION}\n+        check_fmt_with_lib_tests\n         cd -\n         ;;\n     *)\n         git clone --depth=1 https://github.com/rust-lang-nursery/${INTEGRATION}.git\n         cd ${INTEGRATION}\n-        check_fmt\n+        check_fmt_with_all_tests\n         cd -\n         ;;\n esac"}]}