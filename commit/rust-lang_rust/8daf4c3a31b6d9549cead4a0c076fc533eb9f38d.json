{"sha": "8daf4c3a31b6d9549cead4a0c076fc533eb9f38d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYWY0YzNhMzFiNmQ5NTQ5Y2VhZDRhMGMwNzZmYzUzM2ViOWYzOGQ=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-10-08T20:04:17Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-10-08T20:04:17Z"}, "message": "Prevent panics on list-like macro uses with trailing commas", "tree": {"sha": "04b4d28c75a767ba2599827af0faa2b5cfd60199", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04b4d28c75a767ba2599827af0faa2b5cfd60199"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8daf4c3a31b6d9549cead4a0c076fc533eb9f38d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8daf4c3a31b6d9549cead4a0c076fc533eb9f38d", "html_url": "https://github.com/rust-lang/rust/commit/8daf4c3a31b6d9549cead4a0c076fc533eb9f38d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8daf4c3a31b6d9549cead4a0c076fc533eb9f38d/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "915f27f177260ab8a9c4916e06272082e485e1d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/915f27f177260ab8a9c4916e06272082e485e1d8", "html_url": "https://github.com/rust-lang/rust/commit/915f27f177260ab8a9c4916e06272082e485e1d8"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "58b2c5db25f8cc3f2275d16c92f0a8a2fc0b94b4", "filename": "src/macros.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8daf4c3a31b6d9549cead4a0c076fc533eb9f38d/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8daf4c3a31b6d9549cead4a0c076fc533eb9f38d/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=8daf4c3a31b6d9549cead4a0c076fc533eb9f38d", "patch": "@@ -64,7 +64,8 @@ pub fn rewrite_macro(mac: &ast::Mac,\n \n     let wrapped_tt_vec = ForceSend(mac.node.tts.clone());\n     // Wrap expression parsing logic in a thread since the libsyntax parser\n-    // panicks on failure, which we do not want to propagate.\n+    // panics on failure, which we do not want to propagate.\n+    // The expression vector is wrapped in an Option inside a Result.\n     let expr_vec_result = thread::catch_panic(move || {\n         let parse_session = ParseSess::new();\n         let mut parser = tts_to_parser(&parse_session, wrapped_tt_vec.0, vec![]);\n@@ -80,11 +81,15 @@ pub fn rewrite_macro(mac: &ast::Mac,\n             }\n \n             let _ = parser.bump();\n+\n+            if parser.token == Token::Eof {\n+                return None;\n+            }\n         }\n \n-        expr_vec\n+        Some(expr_vec)\n     });\n-    let expr_vec = try_opt!(expr_vec_result.ok());\n+    let expr_vec = try_opt!(try_opt!(expr_vec_result.ok()));\n \n     match style {\n         MacroStyle::Parens => {"}]}