{"sha": "70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb", "node_id": "C_kwDOAAsO6NoAKDcwZmMxMTRjY2NjN2VkN2ZiODVmOWM4NDFjNWE3Yjc0MTI1ZGJmYmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-29T05:14:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-29T05:14:18Z"}, "message": "Rollup merge of #107401 - lenko-d:remove_the_usize_field_from_CandidateSource_AliasBound, r=compiler-errors\n\nremove the usize field from CandidateSource::AliasBound\n\nFixes [#107380](https://github.com/rust-lang/rust/issues/107380)", "tree": {"sha": "9ac6101d345f844f2430d53bde04eb9f0d6d6c47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ac6101d345f844f2430d53bde04eb9f0d6d6c47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj1gCqCRBK7hj4Ov3rIwAArvYIAB4bmHk02Do0lDU2sYdag3cS\nqJWmz8MreMKnrgVj/jGFINFkuY/SunZ0qiQedWc40/KCQKlAAGoMIluF1c3RJJ3P\n4ffBmBpBEj5s55/ROcRwNvRMIxoLBVGc6jIq+Kg9mK6nOSL+nFKInne9sgllRbQ9\n3gLfoXNW2AUDnU4VgX58wSKeF91jt4AWxaUvPz7OMZrdBoE7zb9TqCLlf8BNtSJd\nxQRubrNb7EuhJKwDdwOy8T8UqtwXyWQN6a3YtgaAHgamusCQ4GWoTbxsKAOD/7L+\nxd6NHmkCjsrugPzL2E876IqrjAqbi7aAQFDseOW0lShJbnWo6zq3Wed0p7IiWsk=\n=SnHt\n-----END PGP SIGNATURE-----\n", "payload": "tree 9ac6101d345f844f2430d53bde04eb9f0d6d6c47\nparent 40b63d03a35d86e175ab9931499e893fa52a93f8\nparent d3cf813b8d778fe80b59e5d1d09e1ad2d5ba4edb\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1674969258 +0100\ncommitter GitHub <noreply@github.com> 1674969258 +0100\n\nRollup merge of #107401 - lenko-d:remove_the_usize_field_from_CandidateSource_AliasBound, r=compiler-errors\n\nremove the usize field from CandidateSource::AliasBound\n\nFixes [#107380](https://github.com/rust-lang/rust/issues/107380)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb", "html_url": "https://github.com/rust-lang/rust/commit/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40b63d03a35d86e175ab9931499e893fa52a93f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/40b63d03a35d86e175ab9931499e893fa52a93f8", "html_url": "https://github.com/rust-lang/rust/commit/40b63d03a35d86e175ab9931499e893fa52a93f8"}, {"sha": "d3cf813b8d778fe80b59e5d1d09e1ad2d5ba4edb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3cf813b8d778fe80b59e5d1d09e1ad2d5ba4edb", "html_url": "https://github.com/rust-lang/rust/commit/d3cf813b8d778fe80b59e5d1d09e1ad2d5ba4edb"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "e44fd82ba22362d1b26e06032c275027e36c39a2", "filename": "compiler/rustc_trait_selection/src/solve/assembly.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs?ref=70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb", "patch": "@@ -78,7 +78,7 @@ pub(super) enum CandidateSource {\n     ///     let _y = x.clone();\n     /// }\n     /// ```\n-    AliasBound(usize),\n+    AliasBound,\n }\n \n pub(super) trait GoalKind<'tcx>: TypeFoldable<'tcx> + Copy + Eq {\n@@ -242,8 +242,6 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             // NOTE: Alternatively we could call `evaluate_goal` here and only have a `Normalized` candidate.\n             // This doesn't work as long as we use `CandidateSource` in winnowing.\n             let goal = goal.with(tcx, goal.predicate.with_self_ty(tcx, normalized_ty));\n-            // FIXME: This is broken if we care about the `usize` of `AliasBound` because the self type\n-            // could be normalized to yet another projection with different item bounds.\n             let normalized_candidates = self.assemble_and_evaluate_candidates(goal);\n             for mut normalized_candidate in normalized_candidates {\n                 normalized_candidate.result =\n@@ -368,15 +366,14 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             ty::Alias(_, alias_ty) => alias_ty,\n         };\n \n-        for (i, (assumption, _)) in self\n+        for (assumption, _) in self\n             .tcx()\n             .bound_explicit_item_bounds(alias_ty.def_id)\n             .subst_iter_copied(self.tcx(), alias_ty.substs)\n-            .enumerate()\n         {\n             match G::consider_assumption(self, goal, assumption) {\n                 Ok(result) => {\n-                    candidates.push(Candidate { source: CandidateSource::AliasBound(i), result })\n+                    candidates.push(Candidate { source: CandidateSource::AliasBound, result })\n                 }\n                 Err(NoSolution) => (),\n             }"}, {"sha": "b175a6dde179f1378ab0570c69607a5bbce246df", "filename": "compiler/rustc_trait_selection/src/solve/project_goals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs?ref=70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb", "patch": "@@ -171,7 +171,7 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             (CandidateSource::Impl(_), _)\n             | (CandidateSource::ParamEnv(_), _)\n             | (CandidateSource::BuiltinImpl, _)\n-            | (CandidateSource::AliasBound(_), _) => unimplemented!(),\n+            | (CandidateSource::AliasBound, _) => unimplemented!(),\n         }\n     }\n }"}, {"sha": "1ea8fb8fd3dcc8d0d40a2c9dd415e46d808bc101", "filename": "compiler/rustc_trait_selection/src/solve/trait_goals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs?ref=70fc114cccc7ed7fb85f9c841c5a7b74125dbfbb", "patch": "@@ -322,7 +322,7 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n         match (candidate.source, other.source) {\n             (CandidateSource::Impl(_), _)\n             | (CandidateSource::ParamEnv(_), _)\n-            | (CandidateSource::AliasBound(_), _)\n+            | (CandidateSource::AliasBound, _)\n             | (CandidateSource::BuiltinImpl, _) => unimplemented!(),\n         }\n     }"}]}