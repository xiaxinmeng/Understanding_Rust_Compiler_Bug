{"sha": "3441ffb15eb1869425a2513b945e58bb762a5267", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NDFmZmIxNWViMTg2OTQyNWEyNTEzYjk0NWU1OGJiNzYyYTUyNjc=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-12-19T22:41:03Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-12-19T22:41:03Z"}, "message": "Point at def span in \"missing in impl\" error", "tree": {"sha": "4ed1c91ce411d0caeeaa4062a34c9d16bf666aa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ed1c91ce411d0caeeaa4062a34c9d16bf666aa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3441ffb15eb1869425a2513b945e58bb762a5267", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3441ffb15eb1869425a2513b945e58bb762a5267", "html_url": "https://github.com/rust-lang/rust/commit/3441ffb15eb1869425a2513b945e58bb762a5267", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3441ffb15eb1869425a2513b945e58bb762a5267/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b39c4bc12358078f77ddd01288b24252f757f37d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b39c4bc12358078f77ddd01288b24252f757f37d", "html_url": "https://github.com/rust-lang/rust/commit/b39c4bc12358078f77ddd01288b24252f757f37d"}], "stats": {"total": 82, "additions": 26, "deletions": 56}, "files": [{"sha": "7ebdb876ed02f54ce20de59cfead13cc0b26a893", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=3441ffb15eb1869425a2513b945e58bb762a5267", "patch": "@@ -1274,6 +1274,8 @@ fn check_impl_items_against_trait<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                             impl_id: DefId,\n                                             impl_trait_ref: ty::TraitRef<'tcx>,\n                                             impl_item_refs: &[hir::ImplItemRef]) {\n+    let impl_span = tcx.sess.codemap().def_span(impl_span);\n+\n     // If the trait reference itself is erroneous (so the compilation is going\n     // to fail), skip checking the items here -- the `impl_item` table in `tcx`\n     // isn't populated for such impls."}, {"sha": "7a0d01a8ec2156234c3ed4b82aa90af25830d8a3", "filename": "src/test/ui/impl-trait/trait_type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fimpl-trait%2Ftrait_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fimpl-trait%2Ftrait_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftrait_type.stderr?ref=3441ffb15eb1869425a2513b945e58bb762a5267", "patch": "@@ -27,7 +27,7 @@ error[E0046]: not all trait items implemented, missing: `fmt`\n   --> $DIR/trait_type.rs:31:1\n    |\n 31 | impl std::fmt::Display for MyType4 {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `fmt` in implementation\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `fmt` in implementation\n    |\n    = note: `fmt` from trait: `fn(&Self, &mut std::fmt::Formatter<'_>) -> std::result::Result<(), std::fmt::Error>`\n "}, {"sha": "8c57214ec771f91a7472905104caf735a6b4e66c", "filename": "src/test/ui/missing-items/m2.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr?ref=3441ffb15eb1869425a2513b945e58bb762a5267", "patch": "@@ -3,9 +3,8 @@ error[E0601]: main function not found\n error[E0046]: not all trait items implemented, missing: `CONSTANT`, `Type`, `method`\n   --> $DIR/m2.rs:19:1\n    |\n-19 | / impl m1::X for X { //~ ERROR not all trait items implemented\n-20 | | }\n-   | |_^ missing `CONSTANT`, `Type`, `method` in implementation\n+19 | impl m1::X for X { //~ ERROR not all trait items implemented\n+   | ^^^^^^^^^^^^^^^^ missing `CONSTANT`, `Type`, `method` in implementation\n    |\n    = note: `CONSTANT` from trait: `const CONSTANT: u32;`\n    = note: `Type` from trait: `type Type;`"}, {"sha": "fb13f21fe00f70ecdfbdd4c5c7c7f0faa6ef653f", "filename": "src/test/ui/span/E0046.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2FE0046.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2FE0046.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0046.stderr?ref=3441ffb15eb1869425a2513b945e58bb762a5267", "patch": "@@ -5,7 +5,7 @@ error[E0046]: not all trait items implemented, missing: `foo`\n    |     --------- `foo` from trait\n ...\n 17 | impl Foo for Bar {}\n-   | ^^^^^^^^^^^^^^^^^^^ missing `foo` in implementation\n+   | ^^^^^^^^^^^^^^^^ missing `foo` in implementation\n \n error: aborting due to previous error\n "}, {"sha": "6473b24dec5b32dc1c3e021e6a30863c7b3733cf", "filename": "src/test/ui/span/impl-wrong-item-for-trait.stderr", "status": "modified", "additions": 14, "deletions": 31, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr?ref=3441ffb15eb1869425a2513b945e58bb762a5267", "patch": "@@ -16,16 +16,11 @@ error[E0323]: item `bar` is an associated const, which doesn't match its trait `\n error[E0046]: not all trait items implemented, missing: `bar`\n   --> $DIR/impl-wrong-item-for-trait.rs:21:1\n    |\n-15 |       fn bar(&self);\n-   |       -------------- `bar` from trait\n+15 |     fn bar(&self);\n+   |     -------------- `bar` from trait\n ...\n-21 | / impl Foo for FooConstForMethod {\n-22 | |     //~^ ERROR E0046\n-23 | |     const bar: u64 = 1;\n-24 | |     //~^ ERROR E0323\n-25 | |     const MY_CONST: u32 = 1;\n-26 | | }\n-   | |_^ missing `bar` in implementation\n+21 | impl Foo for FooConstForMethod {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `bar` in implementation\n \n error[E0324]: item `MY_CONST` is an associated method, which doesn't match its trait `Foo`\n   --> $DIR/impl-wrong-item-for-trait.rs:33:5\n@@ -39,16 +34,11 @@ error[E0324]: item `MY_CONST` is an associated method, which doesn't match its t\n error[E0046]: not all trait items implemented, missing: `MY_CONST`\n   --> $DIR/impl-wrong-item-for-trait.rs:30:1\n    |\n-16 |       const MY_CONST: u32;\n-   |       -------------------- `MY_CONST` from trait\n+16 |     const MY_CONST: u32;\n+   |     -------------------- `MY_CONST` from trait\n ...\n-30 | / impl Foo for FooMethodForConst {\n-31 | |     //~^ ERROR E0046\n-32 | |     fn bar(&self) {}\n-33 | |     fn MY_CONST() {}\n-34 | |     //~^ ERROR E0324\n-35 | | }\n-   | |_^ missing `MY_CONST` in implementation\n+30 | impl Foo for FooMethodForConst {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `MY_CONST` in implementation\n \n error[E0325]: item `bar` is an associated type, which doesn't match its trait `Foo`\n   --> $DIR/impl-wrong-item-for-trait.rs:41:5\n@@ -62,24 +52,17 @@ error[E0325]: item `bar` is an associated type, which doesn't match its trait `F\n error[E0046]: not all trait items implemented, missing: `bar`\n   --> $DIR/impl-wrong-item-for-trait.rs:39:1\n    |\n-15 |       fn bar(&self);\n-   |       -------------- `bar` from trait\n+15 |     fn bar(&self);\n+   |     -------------- `bar` from trait\n ...\n-39 | / impl Foo for FooTypeForMethod {\n-40 | |     //~^ ERROR E0046\n-41 | |     type bar = u64;\n-42 | |     //~^ ERROR E0325\n-43 | |     //~| ERROR E0437\n-44 | |     const MY_CONST: u32 = 1;\n-45 | | }\n-   | |_^ missing `bar` in implementation\n+39 | impl Foo for FooTypeForMethod {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `bar` in implementation\n \n error[E0046]: not all trait items implemented, missing: `fmt`\n   --> $DIR/impl-wrong-item-for-trait.rs:47:1\n    |\n-47 | / impl Debug for FooTypeForMethod {\n-48 | | }\n-   | |_^ missing `fmt` in implementation\n+47 | impl Debug for FooTypeForMethod {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `fmt` in implementation\n    |\n    = note: `fmt` from trait: `fn(&Self, &mut std::fmt::Formatter<'_>) -> std::result::Result<(), std::fmt::Error>`\n "}, {"sha": "60bf804ff30c4d2dcdcff8fede42303e405cd7c6", "filename": "src/test/ui/span/issue-23729.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr?ref=3441ffb15eb1869425a2513b945e58bb762a5267", "patch": "@@ -1,14 +1,8 @@\n error[E0046]: not all trait items implemented, missing: `Item`\n   --> $DIR/issue-23729.rs:20:9\n    |\n-20 | /         impl Iterator for Recurrence {\n-21 | |             //~^ ERROR E0046\n-22 | |             #[inline]\n-23 | |             fn next(&mut self) -> Option<u64> {\n-...  |\n-34 | |             }\n-35 | |         }\n-   | |_________^ missing `Item` in implementation\n+20 |         impl Iterator for Recurrence {\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `Item` in implementation\n    |\n    = note: `Item` from trait: `type Item;`\n "}, {"sha": "d06d6c03616e31455722ece5f395b283c615f284", "filename": "src/test/ui/span/issue-23827.stderr", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr?ref=3441ffb15eb1869425a2513b945e58bb762a5267", "patch": "@@ -1,13 +1,8 @@\n error[E0046]: not all trait items implemented, missing: `Output`\n   --> $DIR/issue-23827.rs:36:1\n    |\n-36 | / impl<C: Component> FnOnce<(C,)> for Prototype {\n-37 | |     //~^ ERROR E0046\n-38 | |     extern \"rust-call\" fn call_once(self, (comp,): (C,)) -> Prototype {\n-39 | |         Fn::call(&self, (comp,))\n-40 | |     }\n-41 | | }\n-   | |_^ missing `Output` in implementation\n+36 | impl<C: Component> FnOnce<(C,)> for Prototype {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `Output` in implementation\n    |\n    = note: `Output` from trait: `type Output;`\n "}, {"sha": "58fb943fef827a249feedf12c8786bc5d40bd6d3", "filename": "src/test/ui/span/issue-24356.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3441ffb15eb1869425a2513b945e58bb762a5267/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr?ref=3441ffb15eb1869425a2513b945e58bb762a5267", "patch": "@@ -1,11 +1,8 @@\n error[E0046]: not all trait items implemented, missing: `Target`\n   --> $DIR/issue-24356.rs:30:9\n    |\n-30 | /         impl Deref for Thing {\n-31 | |             //~^ ERROR E0046\n-32 | |             fn deref(&self) -> i8 { self.0 }\n-33 | |         }\n-   | |_________^ missing `Target` in implementation\n+30 |         impl Deref for Thing {\n+   |         ^^^^^^^^^^^^^^^^^^^^ missing `Target` in implementation\n    |\n    = note: `Target` from trait: `type Target;`\n "}]}