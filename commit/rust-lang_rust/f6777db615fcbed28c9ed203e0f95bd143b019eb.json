{"sha": "f6777db615fcbed28c9ed203e0f95bd143b019eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2Nzc3ZGI2MTVmY2JlZDI4YzllZDIwM2UwZjk1YmQxNDNiMDE5ZWI=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T05:03:09Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T16:28:20Z"}, "message": "stdlib: Add regression tests for std::map", "tree": {"sha": "61ba8e6aa1279f475383669b0061cd366b9eb2bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61ba8e6aa1279f475383669b0061cd366b9eb2bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6777db615fcbed28c9ed203e0f95bd143b019eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6777db615fcbed28c9ed203e0f95bd143b019eb", "html_url": "https://github.com/rust-lang/rust/commit/f6777db615fcbed28c9ed203e0f95bd143b019eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6777db615fcbed28c9ed203e0f95bd143b019eb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1c1887cabcb98ea1873427024e495ad64ae35f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1c1887cabcb98ea1873427024e495ad64ae35f8", "html_url": "https://github.com/rust-lang/rust/commit/f1c1887cabcb98ea1873427024e495ad64ae35f8"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "9123e05eb5105ecabcb16bf3161f6625cdd807af", "filename": "src/test/run-pass/lib-map.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f6777db615fcbed28c9ed203e0f95bd143b019eb/src%2Ftest%2Frun-pass%2Flib-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6777db615fcbed28c9ed203e0f95bd143b019eb/src%2Ftest%2Frun-pass%2Flib-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-map.rs?ref=f6777db615fcbed28c9ed203e0f95bd143b019eb", "patch": "@@ -342,8 +342,26 @@ fn test_removal() {\n   log \"*** finished test_removal\";\n }\n \n+fn test_contains_key() {\n+  auto key = \"k\";\n+  auto map = map::mk_hashmap[str, str](str::hash, str::eq);\n+  assert (!map.contains_key(key));\n+  map.insert(key, \"val\");\n+  assert (map.contains_key(key));\n+}\n+\n+fn test_find() {\n+  auto key = \"k\";\n+  auto map = map::mk_hashmap[str, str](str::hash, str::eq);\n+  assert (std::option::is_none(map.find(key)));\n+  map.insert(key, \"val\");\n+  assert (std::option::get(map.find(key)) == \"val\");\n+}\n+\n fn main() {\n   test_simple();\n   test_growth();\n   test_removal();\n+  test_contains_key();\n+  test_find();\n }"}]}