{"sha": "4a51f37bcb58b37afb8ea0ac4b8696714787a305", "node_id": "C_kwDOAAsO6NoAKDRhNTFmMzdiY2I1OGIzN2FmYjhlYTBhYzRiODY5NjcxNDc4N2EzMDU", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-03T16:19:03Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-23T20:17:47Z"}, "message": "Do not suggest `ref` multiple times for the same binding", "tree": {"sha": "b663f1fa5c918dd44964829b2eb06f818f064309", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b663f1fa5c918dd44964829b2eb06f818f064309"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a51f37bcb58b37afb8ea0ac4b8696714787a305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a51f37bcb58b37afb8ea0ac4b8696714787a305", "html_url": "https://github.com/rust-lang/rust/commit/4a51f37bcb58b37afb8ea0ac4b8696714787a305", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a51f37bcb58b37afb8ea0ac4b8696714787a305/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e72e35ceb2af024e8ca6a74442269f7ec739173", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e72e35ceb2af024e8ca6a74442269f7ec739173", "html_url": "https://github.com/rust-lang/rust/commit/9e72e35ceb2af024e8ca6a74442269f7ec739173"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "8a4b0ebe737e465dc751c046c102e34f7d709770", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4a51f37bcb58b37afb8ea0ac4b8696714787a305/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a51f37bcb58b37afb8ea0ac4b8696714787a305/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=4a51f37bcb58b37afb8ea0ac4b8696714787a305", "patch": "@@ -171,6 +171,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n             let mut is_loop_move = false;\n             let mut in_pattern = false;\n+            let mut seen_spans = FxHashSet::default();\n \n             for move_site in &move_site_vec {\n                 let move_out = self.move_data.moves[(*move_site).moi];\n@@ -320,14 +321,15 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                             self.suggest_cloning(&mut err, ty, move_span);\n                         }\n                     }\n-                    if let Some(pat) = finder.pat {\n+                    if let Some(pat) = finder.pat && !seen_spans.contains(&pat.span) {\n                         in_pattern = true;\n                         err.span_suggestion_verbose(\n                             pat.span.shrink_to_lo(),\n                             \"borrow this binding in the pattern to avoid moving the value\",\n                             \"ref \".to_string(),\n                             Applicability::MachineApplicable,\n                         );\n+                        seen_spans.insert(pat.span);\n                     }\n                 }\n "}, {"sha": "d06b3bc1c3e6076aa9f5193413f32423d963f27f", "filename": "src/test/ui/borrowck/bindings-after-at-or-patterns-slice-patterns-box-patterns.stderr", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a51f37bcb58b37afb8ea0ac4b8696714787a305/src%2Ftest%2Fui%2Fborrowck%2Fbindings-after-at-or-patterns-slice-patterns-box-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a51f37bcb58b37afb8ea0ac4b8696714787a305/src%2Ftest%2Fui%2Fborrowck%2Fbindings-after-at-or-patterns-slice-patterns-box-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fbindings-after-at-or-patterns-slice-patterns-box-patterns.stderr?ref=4a51f37bcb58b37afb8ea0ac4b8696714787a305", "patch": "@@ -88,10 +88,6 @@ help: borrow this binding in the pattern to avoid moving the value\n    |\n LL |         ref foo @ Some(Test::Foo | Test::Bar) => (),\n    |         +++\n-help: borrow this binding in the pattern to avoid moving the value\n-   |\n-LL |         ref foo @ Some(Test::Foo | Test::Bar) => (),\n-   |         +++\n \n error[E0502]: cannot borrow `x` as mutable because it is also borrowed as immutable\n   --> $DIR/bindings-after-at-or-patterns-slice-patterns-box-patterns.rs:86:5\n@@ -148,10 +144,6 @@ help: borrow this binding in the pattern to avoid moving the value\n    |\n LL |         ref a @ [.., Some(Test::Foo | Test::Bar)] => (),\n    |         +++\n-help: borrow this binding in the pattern to avoid moving the value\n-   |\n-LL |         ref a @ [.., Some(Test::Foo | Test::Bar)] => (),\n-   |         +++\n \n error[E0502]: cannot borrow `x` as mutable because it is also borrowed as immutable\n   --> $DIR/bindings-after-at-or-patterns-slice-patterns-box-patterns.rs:144:5"}]}