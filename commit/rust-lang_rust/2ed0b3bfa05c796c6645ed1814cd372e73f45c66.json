{"sha": "2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlZDBiM2JmYTA1Yzc5NmM2NjQ1ZWQxODE0Y2QzNzJlNzNmNDVjNjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-01T21:07:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-01T21:07:44Z"}, "message": "Auto merge of #4056 - matthiaskrgr:rustup__, r=Manishearth\n\n more Use->DropTemps fixes\n\nchangelog: none", "tree": {"sha": "a833467aa068149b9c23c00d9e3d9bed698c2e3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a833467aa068149b9c23c00d9e3d9bed698c2e3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "html_url": "https://github.com/rust-lang/rust/commit/2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "990d6833b24d585035ca42dbc25e990ce589917b", "url": "https://api.github.com/repos/rust-lang/rust/commits/990d6833b24d585035ca42dbc25e990ce589917b", "html_url": "https://github.com/rust-lang/rust/commit/990d6833b24d585035ca42dbc25e990ce589917b"}, {"sha": "f195680edb1d0ba2c04bfd6ba4fccfca184e8dbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f195680edb1d0ba2c04bfd6ba4fccfca184e8dbe", "html_url": "https://github.com/rust-lang/rust/commit/f195680edb1d0ba2c04bfd6ba4fccfca184e8dbe"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d82be14e40cdbad2608f87d4b6d211be9ab3c551", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "patch": "@@ -677,7 +677,7 @@ fn never_loop_expr(expr: &Expr, main_loop_id: HirId) -> NeverLoopResult {\n         | ExprKind::AddrOf(_, ref e)\n         | ExprKind::Struct(_, _, Some(ref e))\n         | ExprKind::Repeat(ref e, _)\n-        | ExprKind::Use(ref e) => never_loop_expr(e, main_loop_id),\n+        | ExprKind::DropTemps(ref e) => never_loop_expr(e, main_loop_id),\n         ExprKind::Array(ref es) | ExprKind::MethodCall(_, _, ref es) | ExprKind::Tup(ref es) => {\n             never_loop_expr_all(&mut es.iter(), main_loop_id)\n         },"}, {"sha": "63f946286307ed7ea998d631526481d9f7cbde6c", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "patch": "@@ -495,9 +495,9 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n             ExprKind::Err => {\n                 println!(\"Err = {}\", current);\n             },\n-            ExprKind::Use(ref expr) => {\n+            ExprKind::DropTemps(ref expr) => {\n                 let expr_pat = self.next(\"expr\");\n-                println!(\"Use(ref {}) = {};\", expr_pat, current);\n+                println!(\"DropTemps(ref {}) = {};\", expr_pat, current);\n                 self.current = expr_pat;\n                 self.visit_expr(expr);\n             },"}, {"sha": "d915e8fdedd24d6ef20a73e30adec8213d2c9827", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "patch": "@@ -156,7 +156,7 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n                     && self.eq_block(lb, rb)\n                     && both(ll, rl, |l, r| l.ident.as_str() == r.ident.as_str())\n             },\n-            (&ExprKind::Use(ref le), &ExprKind::Use(ref re)) => self.eq_expr(le, re),\n+            (&ExprKind::DropTemps(ref le), &ExprKind::DropTemps(ref re)) => self.eq_expr(le, re),\n             _ => false,\n         }\n     }\n@@ -607,8 +607,8 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                 }\n             },\n             ExprKind::Err => {},\n-            ExprKind::Use(ref e) => {\n-                let c: fn(_) -> _ = ExprKind::Use;\n+            ExprKind::DropTemps(ref e) => {\n+                let c: fn(_) -> _ = ExprKind::DropTemps;\n                 c.hash(&mut self.s);\n                 self.hash_expr(e);\n             },"}, {"sha": "cde911940dc1011589f36ddf7fec1c2a3eebebad", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "patch": "@@ -330,8 +330,8 @@ fn print_expr(cx: &LateContext<'_, '_>, expr: &hir::Expr, indent: usize) {\n         hir::ExprKind::Err => {\n             println!(\"{}Err\", ind);\n         },\n-        hir::ExprKind::Use(ref e) => {\n-            println!(\"{}Use\", ind);\n+        hir::ExprKind::DropTemps(ref e) => {\n+            println!(\"{}DropTemps\", ind);\n             print_expr(cx, e, indent + 1);\n         },\n     }"}, {"sha": "3fa08e0a11cbc5e678cd304a919f109e0a74b428", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "patch": "@@ -115,7 +115,7 @@ impl<'a> Sugg<'a> {\n             | hir::ExprKind::Struct(..)\n             | hir::ExprKind::Tup(..)\n             | hir::ExprKind::While(..)\n-            | hir::ExprKind::Use(_)\n+            | hir::ExprKind::DropTemps(_)\n             | hir::ExprKind::Err => Sugg::NonParen(snippet),\n             hir::ExprKind::Assign(..) => Sugg::BinOp(AssocOp::Assign, snippet),\n             hir::ExprKind::AssignOp(op, ..) => Sugg::BinOp(hirbinop2assignop(op), snippet),"}, {"sha": "a9651c2f718b1f2d09b740244459aebcf414024b", "filename": "tests/ui/author/for_loop.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/tests%2Fui%2Fauthor%2Ffor_loop.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/2ed0b3bfa05c796c6645ed1814cd372e73f45c66/tests%2Fui%2Fauthor%2Ffor_loop.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Ffor_loop.stdout?ref=2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "patch": "@@ -1,5 +1,5 @@\n if_chain! {\n-    if let ExprKind::Use(ref expr) = expr.node;\n+    if let ExprKind::DropTemps(ref expr) = expr.node;\n     if let ExprKind::Match(ref expr1, ref arms, MatchSource::ForLoopDesugar) = expr.node;\n     if let ExprKind::Call(ref func, ref args) = expr1.node;\n     if let ExprKind::Path(ref path) = func.node;"}]}