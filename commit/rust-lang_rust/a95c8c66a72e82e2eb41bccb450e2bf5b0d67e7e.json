{"sha": "a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NWM4YzY2YTcyZTgyZTJlYjQxYmNjYjQ1MGUyYmY1YjBkNjdlN2U=", "commit": {"author": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2018-03-12T17:11:59Z"}, "committer": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2018-03-25T01:30:05Z"}, "message": "librustc_llvm: Show PGO diagnostics properly.\n\nSigned-off-by: Emilio Cobos \u00c1lvarez <emilio@crisal.io>", "tree": {"sha": "4e7d3c8f4eae33a9c05546f6856bdfa6a3df1ded", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e7d3c8f4eae33a9c05546f6856bdfa6a3df1ded"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE+uMrE+H37zcdV8pyBWtye7nBAnwFAlq2+50ACgkQBWtye7nB\nAnytiAf9Gt57DX82TmkRfUVdtBvhWjS3xTyWXHHrBY1XU9QyZ7xIi0x2fPcNgvAS\nZF3NPYkJpmfNDo6DHmv5D3eb9DY89zR6K+Y6QHJ/X/gqEdTdwJeizi5p7zoxWdod\nP8sylbPvKzV5m6DTxe2htA3CkHydxtlFggh0GQS3dX6/tNTQZcNksxlPHcWa/tpy\ndI+GzZ0QdmdxY2zjs6HfFjkv8NyHrFGWKGdp87gawNRpKPd12EEO3pvrrV7rBd49\nqgNmLMmkwMUWmDdgpB0wpo7I8KHGe39EFEaKAKVDSuF20W87ON27eHURhkokihWW\nwHvgVLQ8V6qRy/Y8hprdpdx25NvrBA==\n=S09z\n-----END PGP SIGNATURE-----", "payload": "tree 4e7d3c8f4eae33a9c05546f6856bdfa6a3df1ded\nparent aaeb40ab3b13d02ae148104ca6defffe6e77851f\nauthor Emilio Cobos \u00c1lvarez <emilio@crisal.io> 1520874719 +0100\ncommitter Emilio Cobos \u00c1lvarez <emilio@crisal.io> 1521941405 +0200\n\nlibrustc_llvm: Show PGO diagnostics properly.\n\nSigned-off-by: Emilio Cobos \u00c1lvarez <emilio@crisal.io>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e", "html_url": "https://github.com/rust-lang/rust/commit/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/comments", "author": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaeb40ab3b13d02ae148104ca6defffe6e77851f", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaeb40ab3b13d02ae148104ca6defffe6e77851f", "html_url": "https://github.com/rust-lang/rust/commit/aaeb40ab3b13d02ae148104ca6defffe6e77851f"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "e73c570ed82310e4ff6bb5c9ec332aac7ce52859", "filename": "src/librustc_llvm/diagnostic.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/src%2Flibrustc_llvm%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/src%2Flibrustc_llvm%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fdiagnostic.rs?ref=a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e", "patch": "@@ -121,6 +121,7 @@ impl InlineAsmDiagnostic {\n pub enum Diagnostic {\n     Optimization(OptimizationDiagnostic),\n     InlineAsm(InlineAsmDiagnostic),\n+    PGO(DiagnosticInfoRef),\n \n     /// LLVM has other types that we do not wrap here.\n     UnknownDiagnostic(DiagnosticInfoRef),\n@@ -160,6 +161,10 @@ impl Diagnostic {\n                 Optimization(OptimizationDiagnostic::unpack(OptimizationFailure, di))\n             }\n \n+            Dk::PGOProfile => {\n+                PGO(di)\n+            }\n+\n             _ => UnknownDiagnostic(di),\n         }\n     }"}, {"sha": "1271773fa02b3c4816743f2e23f25cab5d1cef23", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e", "patch": "@@ -322,6 +322,7 @@ pub enum DiagnosticKind {\n     OptimizationRemarkAnalysisAliasing,\n     OptimizationRemarkOther,\n     OptimizationFailure,\n+    PGOProfile,\n }\n \n /// LLVMRustArchiveKind"}, {"sha": "99558652d69097563103eede355c0db7a61d9ba5", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e", "patch": "@@ -498,8 +498,13 @@ unsafe extern \"C\" fn diagnostic_handler(info: DiagnosticInfoRef, user: *mut c_vo\n                                                 opt.message));\n             }\n         }\n-\n-        _ => (),\n+        llvm::diagnostic::PGO(diagnostic_ref) => {\n+            let msg = llvm::build_string(|s| {\n+                llvm::LLVMRustWriteDiagnosticInfoToString(diagnostic_ref, s)\n+            }).expect(\"non-UTF8 PGO diagnostic\");\n+            diag_handler.note_without_error(&msg);\n+        }\n+        llvm::diagnostic::UnknownDiagnostic(..) => {},\n     }\n }\n "}, {"sha": "970c1c6a0110bed04b95ca38c382c61ee94c23ad", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=a95c8c66a72e82e2eb41bccb450e2bf5b0d67e7e", "patch": "@@ -1021,6 +1021,7 @@ enum class LLVMRustDiagnosticKind {\n   OptimizationRemarkAnalysisAliasing,\n   OptimizationRemarkOther,\n   OptimizationFailure,\n+  PGOProfile,\n };\n \n static LLVMRustDiagnosticKind toRust(DiagnosticKind Kind) {\n@@ -1043,6 +1044,8 @@ static LLVMRustDiagnosticKind toRust(DiagnosticKind Kind) {\n     return LLVMRustDiagnosticKind::OptimizationRemarkAnalysisFPCommute;\n   case DK_OptimizationRemarkAnalysisAliasing:\n     return LLVMRustDiagnosticKind::OptimizationRemarkAnalysisAliasing;\n+  case DK_PGOProfile:\n+    return LLVMRustDiagnosticKind::PGOProfile;\n   default:\n     return (Kind >= DK_FirstRemark && Kind <= DK_LastRemark)\n                ? LLVMRustDiagnosticKind::OptimizationRemarkOther"}]}