{"sha": "a2bd79a6acc9fc9f1dba6e718c9d9eda7791a277", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYmQ3OWE2YWNjOWZjOWYxZGJhNmU3MThjOWQ5ZWRhNzc5MWEyNzc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-20T22:37:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-20T22:37:20Z"}, "message": "Redo _uint.to_str to work with chars and only one tmp str, built left-to-right.", "tree": {"sha": "1a520b5c0047b03a5d090123db1443e0d664aa17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a520b5c0047b03a5d090123db1443e0d664aa17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2bd79a6acc9fc9f1dba6e718c9d9eda7791a277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2bd79a6acc9fc9f1dba6e718c9d9eda7791a277", "html_url": "https://github.com/rust-lang/rust/commit/a2bd79a6acc9fc9f1dba6e718c9d9eda7791a277", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2bd79a6acc9fc9f1dba6e718c9d9eda7791a277/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db377bae3a1d9b980ea6eb6f1daf3a72bdeb7b25", "url": "https://api.github.com/repos/rust-lang/rust/commits/db377bae3a1d9b980ea6eb6f1daf3a72bdeb7b25", "html_url": "https://github.com/rust-lang/rust/commit/db377bae3a1d9b980ea6eb6f1daf3a72bdeb7b25"}], "stats": {"total": 56, "additions": 37, "deletions": 19}, "files": [{"sha": "897f0da684efc63b1de7bfd8df1c5f8a7127118d", "filename": "src/lib/_uint.rs", "status": "modified", "additions": 37, "deletions": 19, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/a2bd79a6acc9fc9f1dba6e718c9d9eda7791a277/src%2Flib%2F_uint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2bd79a6acc9fc9f1dba6e718c9d9eda7791a277/src%2Flib%2F_uint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_uint.rs?ref=a2bd79a6acc9fc9f1dba6e718c9d9eda7791a277", "patch": "@@ -36,33 +36,51 @@ fn next_power_of_two(uint n) -> uint {\n fn to_str(mutable uint n, uint radix) -> str\n {\n   check (0u < radix && radix <= 16u);\n-  fn digit(uint n) -> str {\n+  fn digit(uint n) -> char {\n     alt (n) {\n-      case (0u) { ret \"0\"; }\n-      case (1u) { ret \"1\"; }\n-      case (2u) { ret \"2\"; }\n-      case (3u) { ret \"3\"; }\n-      case (4u) { ret \"4\"; }\n-      case (5u) { ret \"5\"; }\n-      case (6u) { ret \"6\"; }\n-      case (7u) { ret \"7\"; }\n-      case (8u) { ret \"8\"; }\n-      case (9u) { ret \"9\"; }\n-      case (10u) { ret \"a\"; }\n-      case (11u) { ret \"b\"; }\n-      case (12u) { ret \"c\"; }\n-      case (13u) { ret \"d\"; }\n-      case (14u) { ret \"e\"; }\n-      case (15u) { ret \"f\"; }\n+      case (0u) { ret '0'; }\n+      case (1u) { ret '1'; }\n+      case (2u) { ret '2'; }\n+      case (3u) { ret '3'; }\n+      case (4u) { ret '4'; }\n+      case (5u) { ret '5'; }\n+      case (6u) { ret '6'; }\n+      case (7u) { ret '7'; }\n+      case (8u) { ret '8'; }\n+      case (9u) { ret '9'; }\n+      case (10u) { ret 'a'; }\n+      case (11u) { ret 'b'; }\n+      case (12u) { ret 'c'; }\n+      case (13u) { ret 'd'; }\n+      case (14u) { ret 'e'; }\n+      case (15u) { ret 'f'; }\n     }\n   }\n \n   if (n == 0u) { ret \"0\"; }\n \n+  let uint r = 1u;\n+  if (n > r) {\n+    while ((r*radix) < n) {\n+      r *= radix;\n+    }\n+  }\n+\n   let str s = \"\";\n   while (n > 0u) {\n-    s = digit(n % radix) + s;\n-    n /= radix;\n+\n+    auto i = n/r;\n+\n+    n -= (i * r);\n+    r /= radix;\n+\n+    s += digit(i) as u8;\n+  }\n+\n+  while (r > 0u) {\n+    s += '0' as u8;\n+    r /= radix;\n   }\n+\n   ret s;\n }"}]}