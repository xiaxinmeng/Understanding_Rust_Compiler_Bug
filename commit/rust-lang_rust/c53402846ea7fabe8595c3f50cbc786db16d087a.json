{"sha": "c53402846ea7fabe8595c3f50cbc786db16d087a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MzQwMjg0NmVhN2ZhYmU4NTk1YzNmNTBjYmM3ODZkYjE2ZDA4N2E=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-03T06:46:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-03T17:55:59Z"}, "message": "Remove all xfail-stage0 directives\n\nWhile it is still technically possible to test stage 0, it is not part of any\nof the main testing rules and maintaining xfail-stage0 is a chore. Nobody\nshould worry about how tests fare in stage0.", "tree": {"sha": "fa7f9154e49a046bf0e63e23d2886f71967b0b74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa7f9154e49a046bf0e63e23d2886f71967b0b74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c53402846ea7fabe8595c3f50cbc786db16d087a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c53402846ea7fabe8595c3f50cbc786db16d087a", "html_url": "https://github.com/rust-lang/rust/commit/c53402846ea7fabe8595c3f50cbc786db16d087a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c53402846ea7fabe8595c3f50cbc786db16d087a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92a4c0cee701a91702d4295eef37fc2ea12bc153", "url": "https://api.github.com/repos/rust-lang/rust/commits/92a4c0cee701a91702d4295eef37fc2ea12bc153", "html_url": "https://github.com/rust-lang/rust/commit/92a4c0cee701a91702d4295eef37fc2ea12bc153"}], "stats": {"total": 334, "additions": 0, "deletions": 334}, "files": [{"sha": "26296dc6faad7fdb667d05f354836343b097f4a9", "filename": "src/test/compile-fail/and-init.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fand-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fand-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fand-init.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: Unsatisfied precondition constraint (for example, init(i\n \n fn main() {"}, {"sha": "bf4fa3bcf7328f0ddd0555852cfa25e0b5d45247", "filename": "src/test/compile-fail/attr-bad-crate-attr.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-bad-crate-attr.rc", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-bad-crate-attr.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-bad-crate-attr.rc?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: expecting mod\n \n #[attr = \"val\"];"}, {"sha": "51b62a5912fa9c5abe060ba8763881dda1d14ed4", "filename": "src/test/compile-fail/attr-bad-meta.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-bad-meta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-bad-meta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-bad-meta.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expecting ]\n \n // asterisk is bogus"}, {"sha": "e5ff2cc1356b951e4df315507847080fbcd32d36", "filename": "src/test/compile-fail/attr-before-stmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-before-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-before-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-before-stmt.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expected item\n \n fn f() {"}, {"sha": "60788d65b825e12584f1afee869060a1259484b0", "filename": "src/test/compile-fail/attr-before-view-item.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-before-view-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-before-view-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-before-view-item.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expected item\n \n #[foo = \"bar\"]"}, {"sha": "539f028d61123bb52d3813660320ea4d7f21bfd4", "filename": "src/test/compile-fail/attr-before-view-item2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-before-view-item2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-before-view-item2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-before-view-item2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expected item\n \n mod m {"}, {"sha": "3cd5d943d09b2fced6513f887c7b4f8c7912a61b", "filename": "src/test/compile-fail/attr-dangling-in-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-dangling-in-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-dangling-in-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-dangling-in-fn.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expected item\n \n fn f() {"}, {"sha": "261ed3913afd73bdd1f5c7a3be1ea5790dd03586", "filename": "src/test/compile-fail/attr-dangling-in-mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-dangling-in-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fattr-dangling-in-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-dangling-in-mod.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expected item\n \n fn main() {"}, {"sha": "908e30a79c6cabefbdc34b38c28bdaf96dc8266c", "filename": "src/test/compile-fail/bad-main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbad-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbad-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-main.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "2919fa49dbeaba87b4b3e04bcba7212062444d6e", "filename": "src/test/compile-fail/bad-type-env-capture.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "87afc1bd401e4417ae4bbb56ce5bf28ac7876f9d", "filename": "src/test/compile-fail/bang-tailexpr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbang-tailexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbang-tailexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbang-tailexpr.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: some control paths may return\n fn f() -> ! { 3 }\n fn main(){}"}, {"sha": "6470ae353a87f8d1d6e37931ea6d1e91222eecf3", "filename": "src/test/compile-fail/binop-add-tup-assign.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-add-tup-assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-add-tup-assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-add-tup-assign.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:+ cannot be applied to type `{x: bool}`\n \n fn main() { let x = {x: true}; x += {x: false}; }\n\\ No newline at end of file"}, {"sha": "96dc63fef01e3213ee97d51b4a6672b9c54b8d7a", "filename": "src/test/compile-fail/binop-add-tup.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-add-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-add-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-add-tup.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:+ cannot be applied to type `{x: bool}`\n \n fn main() { let x = {x: true} + {x: false}; }\n\\ No newline at end of file"}, {"sha": "0f1e220241942eb1ada5788bde7c3baf7aa81b37", "filename": "src/test/compile-fail/binop-bitxor-str.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-bitxor-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-bitxor-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-bitxor-str.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:^ cannot be applied to type `str`\n \n fn main() { let x = \"a\" ^ \"b\"; }\n\\ No newline at end of file"}, {"sha": "900c290b07ee708035163288e067cba2656983c3", "filename": "src/test/compile-fail/binop-logic-float.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-logic-float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-logic-float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-logic-float.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:|| cannot be applied to type `f32`\n \n fn main() { let x = 1.0_f32 || 2.0_f32; }\n\\ No newline at end of file"}, {"sha": "ffe05f1649ce175e57c9f448c98ca59adb86e21d", "filename": "src/test/compile-fail/binop-logic-int.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:&& cannot be applied to type `int`\n \n fn main() { let x = 1 && 2; }\n\\ No newline at end of file"}, {"sha": "78e7cbe23b5ed06dd8bec6e0825553a776cc7e79", "filename": "src/test/compile-fail/binop-mul-bool.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-mul-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-mul-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-mul-bool.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:* cannot be applied to type `bool`\n \n fn main() { let x = true * false; }\n\\ No newline at end of file"}, {"sha": "e1b49d75ddbeb382a719194fd1d899deb45dff88", "filename": "src/test/compile-fail/binop-shift-port.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-shift-port.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-shift-port.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-shift-port.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:>> cannot be applied to type `port[int]`\n \n fn main() {"}, {"sha": "f5010dbbe052ed08d329063a17c19287d89935cd", "filename": "src/test/compile-fail/binop-sub-obj.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-sub-obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-sub-obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-sub-obj.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:- cannot be applied to type `obj\n \n fn main() { let x = obj () {  } - obj () {  }; }\n\\ No newline at end of file"}, {"sha": "caa844516fb67a97a8b45b187b58bf5014577719", "filename": "src/test/compile-fail/binop-typeck.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-typeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbinop-typeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-typeck.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:mismatched types\n // issue #500\n "}, {"sha": "42b1504562a313b4fe723db48b8b0e762ecfa2c6", "filename": "src/test/compile-fail/block-coerce-no.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // error-pattern: mismatched types\n-// xfail-stage0\n \n // Make sure that fn-to-block coercion isn't incorrectly lifted over\n // other tycons."}, {"sha": "f0e510e87a7ab343be2a18e6300d33ff26573534", "filename": "src/test/compile-fail/block-copy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fblock-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fblock-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-copy.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // error-pattern: non-copyable\n-// xfail-stage0\n \n fn lol(f: &block() ) -> block()  { ret f; }\n fn main() { let i = 8; let f = lol(block () { log_err i; }); f(); }\n\\ No newline at end of file"}, {"sha": "4fa112762e860633ba200d788541f93923ff657d", "filename": "src/test/compile-fail/block-uninit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fblock-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fblock-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-uninit.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // error-pattern: Unsatisfied precondition constraint\n-// xfail-stage0\n \n fn force(f: &block() ) { f(); }\n fn main() { let x: int; force(block () { log_err x; }); }\n\\ No newline at end of file"}, {"sha": "adf6413ed628af185f09d34c1bbc7bf581017f2d", "filename": "src/test/compile-fail/break-outside-loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbreak-outside-loop.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:Break outside a loop\n fn main() {\n     let pth = break;"}, {"sha": "1568e143cd00fc2cbda05d243a199a163edcb1e6", "filename": "src/test/compile-fail/chan-parameterized-args.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fchan-parameterized-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fchan-parameterized-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fchan-parameterized-args.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:spawning functions with type params not allowed\n fn main() {\n     fn echo[T](c: chan[T], oc: chan[chan[T]]) {"}, {"sha": "4ad2380a788f84914a752257c9d0f8124e700dc7", "filename": "src/test/compile-fail/constrained-type-missing-check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fconstrained-type-missing-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fconstrained-type-missing-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconstrained-type-missing-check.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // -*- rust -*-\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "333ca40f7cc2add492cf57bf06a1ca57cb9df0d4", "filename": "src/test/compile-fail/cross-crate-glob-collision.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fcross-crate-glob-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fcross-crate-glob-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcross-crate-glob-collision.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:'swap' is glob-imported from multiple different modules\n // issue #482\n "}, {"sha": "a40d78b17a9ee355664871dcf4c28df297641041", "filename": "src/test/compile-fail/dead-code-be.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "3200a6825ac861280b516112f9debeb1355e26e1", "filename": "src/test/compile-fail/dead-code-ret.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "cfea71fc7ef3860acec0ed3ce81b0869d64818e7", "filename": "src/test/compile-fail/do-while-constraints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdo-while-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdo-while-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdo-while-constraints.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: Unsatisfied precondition constraint (for example, init(y\n fn main() {\n "}, {"sha": "31d3e82796e4388fa94911916fbb1bbe68f758c5", "filename": "src/test/compile-fail/do-while-pred-constraints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdo-while-pred-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdo-while-pred-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdo-while-pred-constraints.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: Unsatisfied precondition constraint (for example, even(y\n \n fn print_even(y: int) : even(y) {"}, {"sha": "346588392ee40103449286d2d4d8f2c72489998c", "filename": "src/test/compile-fail/dup-link-name.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdup-link-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fdup-link-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdup-link-name.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:duplicate meta item `name`\n \n #[link(name = \"test\", name)];"}, {"sha": "ef15958c3fc84784235d31a3517150f0befca07f", "filename": "src/test/compile-fail/ext-after-attrib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fext-after-attrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fext-after-attrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fext-after-attrib.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expecting [, found fmt\n \n // Don't know how to deal with a syntax extension appearing after an"}, {"sha": "7b1b4db73780b117667648cbfefe119d9f626087", "filename": "src/test/compile-fail/extfmt-non-literal.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-non-literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-non-literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-non-literal.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: literal\n \n fn main() {"}, {"sha": "5bb730c8aa660885cf51e4b0740531d4f6afe18e", "filename": "src/test/compile-fail/extfmt-non-literal2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-non-literal2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-non-literal2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-non-literal2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: literal\n \n fn main() {"}, {"sha": "9e3012bbc49d1d04ac8f002e3c135ee528b517e8", "filename": "src/test/compile-fail/extfmt-not-enough-args.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-not-enough-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-not-enough-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-not-enough-args.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:not enough arguments\n \n use std;"}, {"sha": "617a109117376e483e392a2c41ad45e709ea162d", "filename": "src/test/compile-fail/extfmt-too-many-args.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-too-many-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-too-many-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-too-many-args.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:too many arguments\n \n use std;"}, {"sha": "7715305e829cdc690d658c93577dcacb14d237fd", "filename": "src/test/compile-fail/extfmt-unsigned-plus.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-unsigned-plus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-unsigned-plus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-unsigned-plus.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:only valid in signed #fmt conversion\n \n fn main() {"}, {"sha": "0a99a4b6c5e66777d5657f4867c13ede2a0c490d", "filename": "src/test/compile-fail/extfmt-unsigned-space.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-unsigned-space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fextfmt-unsigned-space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-unsigned-space.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:only valid in signed #fmt conversion\n \n fn main() {"}, {"sha": "b52de627ef33e84b41a0ac0628c5090d7d2caf6c", "filename": "src/test/compile-fail/fail-type-err.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,3 +1,2 @@\n // error-pattern:expected str but found vec\n-// xfail-stage0\n fn main() { fail []; }\n\\ No newline at end of file"}, {"sha": "ba82efcf750f5467f1a40ef3bae6ec40d96ded62", "filename": "src/test/compile-fail/fn-bad-block-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffn-bad-block-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffn-bad-block-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-bad-block-type.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:mismatched types\n \n fn f() -> int { true }"}, {"sha": "a2bb326c548e883eee109542f78e2d3d9fc78e91", "filename": "src/test/compile-fail/fn-compare-mismatch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expected fn() but found fn(int)\n \n fn main() {"}, {"sha": "02650b45d88fea1d8df606a41769fb55057ac897", "filename": "src/test/compile-fail/fn-expr-type-state.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffn-expr-type-state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffn-expr-type-state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-expr-type-state.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // error-pattern:Unsatisfied precondition\n-// xfail-stage0\n \n fn main() {\n     // Typestate should work even in a lambda. we should reject this program."}, {"sha": "299b11cb7436d8c1066315c821876ec45cea28f4", "filename": "src/test/compile-fail/fn-expr-typestate-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffn-expr-typestate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ffn-expr-typestate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-expr-typestate-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n // error-pattern:Unsatisfied precondition\n-// xfail-stage0\n \n fn main() { let j = fn () -> int { let i: int; ret i; }(); log_err j; }\n\\ No newline at end of file"}, {"sha": "af7658b4f942ad621bf2525fee411e9eb80ac2ef", "filename": "src/test/compile-fail/if-check-precond-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fif-check-precond-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fif-check-precond-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fif-check-precond-fail.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:Unsatisfied precondition constraint\n pred even(x: uint) -> bool {\n     if x < 2u {"}, {"sha": "c88a1c8c9e6cbf9e6d91a7809eae6481edd141ff", "filename": "src/test/compile-fail/if-typeck.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fif-typeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fif-typeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fif-typeck.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:mismatched types\n // issue #513\n "}, {"sha": "06592b1e96310cde38d7abce3e4add98461013fe", "filename": "src/test/compile-fail/infinite-tag-type-recursion.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "94d516910f7f1a65ab33e730a60cd95208a1ad28", "filename": "src/test/compile-fail/infinite-vec-type-recursion.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // -*- rust -*-\n-// xfail-stage0\n // error-pattern: illegal recursive type\n \n type x = vec[x];"}, {"sha": "218f54ed20ca87f6c83c88c88f66c0554df70cd6", "filename": "src/test/compile-fail/item-name-overload.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fitem-name-overload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fitem-name-overload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fitem-name-overload.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // -*- rust -*-\n-// xfail-stage0\n // error-pattern: Dynamically sized arguments must be passed by alias\n \n mod foo {"}, {"sha": "a11dd1f95f9400c098c4a894e22efe4bfce1ef0e", "filename": "src/test/compile-fail/macro-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmacro-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmacro-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n //error-pattern:is an expr, expected an identifier\n fn main() {\n   #macro([#mylambda(x, body), {fn f(x: int) -> int {ret body}; f}]);"}, {"sha": "a3f2df4f1871b34b1853c6b1882ad03a01d049ff", "filename": "src/test/compile-fail/macro.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmacro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmacro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n //error-pattern:no clauses match\n \n fn main() {"}, {"sha": "9fed73a315100159c6c5c9ae7742d38741f03413", "filename": "src/test/compile-fail/main-wrong-type-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,3 +1,2 @@\n-// xfail-stage0\n // error-pattern:Wrong type in main function: found fn() -> char\n fn main() -> char { }\n\\ No newline at end of file"}, {"sha": "c035e61662aafa5a983c11e88e5ca95be40684ba", "filename": "src/test/compile-fail/main-wrong-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,3 +1,2 @@\n-// xfail-stage0\n // error-pattern:Wrong type in main function: found fn(\n fn main(foo: {x: int, y: int}) { }\n\\ No newline at end of file"}, {"sha": "9baf7b5ac63f129542bf531bc03c0f5b99b45aef", "filename": "src/test/compile-fail/missing-main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmissing-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fmissing-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-main.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,3 +1,2 @@\n-// xfail-stage0\n // error-pattern:Main function not found\n fn mian() { }\n\\ No newline at end of file"}, {"sha": "f70623e9e02f914d5fa62b99ce2ce6f8506fd8b1", "filename": "src/test/compile-fail/nested-ty-params.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:Attempt to use a type argument out of scope\n fn hd[U](v: &vec[U]) -> U {\n     fn hd1(w: &vec[U]) -> U { ret w.(0); }"}, {"sha": "2f98c4917b0e688f7047cf53d99bb6599fbff2cb", "filename": "src/test/compile-fail/no-constraint-prop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // error-pattern:Unsatisfied precondition constraint (for example, le(b, d\n-// xfail-stage0\n use std;\n import std::str::*;\n import std::uint::*;"}, {"sha": "3e76ef9601c9310075461579a1bea55eec9b7edd", "filename": "src/test/compile-fail/not-a-pred.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fnot-a-pred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fnot-a-pred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnot-a-pred.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // -*- rust -*-\n-// xfail-stage0\n // error-pattern: Non-predicate in constraint: lt\n \n fn f(a: int, b: int) : lt(a,b) { }"}, {"sha": "8c952b0d93f33b88b6cea7145a3a1a3c0af14a4c", "filename": "src/test/compile-fail/or-init.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2For-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2For-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2For-init.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: Unsatisfied precondition constraint (for example, init(i\n \n fn main() {"}, {"sha": "0e5ddf23a47df3bc253de1dd6424cb3c7f6acd8f", "filename": "src/test/compile-fail/pred-assign.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fpred-assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fpred-assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpred-assign.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: Unsatisfied precondition constraint (for example, lt(a, b)"}, {"sha": "de0faef653b73a41e19c458dbcf542a501f0ef2e", "filename": "src/test/compile-fail/pred-on-wrong-slots.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fpred-on-wrong-slots.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fpred-on-wrong-slots.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpred-on-wrong-slots.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: lt(a, c)"}, {"sha": "9e96b74ad696bbafaf7b1bf9c467278ce418503e", "filename": "src/test/compile-fail/pred-swap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fpred-swap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fpred-swap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpred-swap.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: Unsatisfied precondition constraint (for example, lt(a, b)"}, {"sha": "75b2614ec2f952df267b8293786ce90c213d2363", "filename": "src/test/compile-fail/put-in-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fput-in-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fput-in-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fput-in-fn.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "773f06fb20546d2f83f11cc898b750e572bbb6fe", "filename": "src/test/compile-fail/rec-extend.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Frec-extend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Frec-extend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frec-extend.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expected int but found bool\n \n fn main() {"}, {"sha": "6fd8bee270b6205ff101a9efb37b7af09e2f63fe", "filename": "src/test/compile-fail/self-call-non-obj.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fself-call-non-obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fself-call-non-obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fself-call-non-obj.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-//xfail-stage0\n-\n // error-pattern:self-call in non-object context\n \n // Fix for issue #707."}, {"sha": "0220a16f0876d49dce6efcdc7e66263c35e72857", "filename": "src/test/compile-fail/slot-as-pred.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fslot-as-pred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fslot-as-pred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslot-as-pred.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // -*- rust -*-\n-// xfail-stage0\n // error-pattern: unresolved name: lt\n \n fn f(a: int, b: int) : lt(a,b) { }"}, {"sha": "d1622f46085e0c85c865402379090eef667c1ea7", "filename": "src/test/compile-fail/spawn-non-nil-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: mismatched types\n \n fn f(x: int) -> int { ret x; }"}, {"sha": "b43e5329dc25054f8c681fdcead3eb8e6899b97c", "filename": "src/test/compile-fail/tag-type-args.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: Wrong number of type arguments\n \n tag quux[T] { }"}, {"sha": "c79c3607b0a1247a93ebc7f1fa9d8c631ce0200a", "filename": "src/test/compile-fail/type-arg-out-of-scope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:Attempt to use a type argument out of scope\n fn foo[T](x: &T) {\n     fn bar(f: fn(&T) -> T ) { }"}, {"sha": "a0e257dcd8f395a5f5dec173736291780cd3766c", "filename": "src/test/compile-fail/type-mismatch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ftype-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ftype-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-mismatch.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:expected bool but found int\n // issue #516\n "}, {"sha": "d7ba8faa288a15f9a264f84bf86ef76c6ceb7d1a", "filename": "src/test/compile-fail/type-recursive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:illegal recursive type\n type t1 = {foo: int, foolish: t1};\n "}, {"sha": "bf34c5175eb43bae62e55ff4eba2db0fb997d26a", "filename": "src/test/compile-fail/uninit-after-item.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Funinit-after-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Funinit-after-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funinit-after-item.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,4 @@\n // error-pattern:Unsatisfied precondition constraint (for example, init(bar\n-// xfail-stage0\n fn main() {\n     let bar;\n     fn baz(x: int) { }"}, {"sha": "f438d021a252dff6a20232d2659477147458034f", "filename": "src/test/compile-fail/unsafe-mutable-alias.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Funsafe-mutable-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Funsafe-mutable-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsafe-mutable-alias.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:mutable alias to a variable that roots another alias\n \n fn f(a: &int, b: &mutable int) -> int { b += 1; ret a + b; }"}, {"sha": "5e44999b595a6468346b1d1c0099d7dbd9a0825c", "filename": "src/test/compile-fail/use-meta-dup.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fuse-meta-dup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fuse-meta-dup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-meta-dup.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:duplicate meta item `name`\n \n use std(name = \"std\", name = \"nonstd\");"}, {"sha": "5e74a5fd1cff282b7673c106384d6ed0f1134145", "filename": "src/test/compile-fail/vec-field.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fvec-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fvec-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-field.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:attempted field access on type vec[int]\n // issue #367\n "}, {"sha": "9d936f62fdb0ad980cb9463aafbe32b03de22c03", "filename": "src/test/compile-fail/while-loop-constraints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwhile-loop-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwhile-loop-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwhile-loop-constraints.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: Unsatisfied precondition constraint (for example, init(y\n fn main() {\n "}, {"sha": "43e662d643c3e741ed9bf93ccc48b61d5494ee0a", "filename": "src/test/compile-fail/while-loop-pred-constraints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwhile-loop-pred-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwhile-loop-pred-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwhile-loop-pred-constraints.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern: Unsatisfied precondition constraint (for example, even(y\n \n fn print_even(y: int) : even(y) { log y; }"}, {"sha": "bc3f9037da97697e1aa9c9a0aa0b60fb37cd6c1a", "filename": "src/test/compile-fail/writing-through-read-alias.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwriting-through-read-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwriting-through-read-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-through-read-alias.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n // error-pattern:assignment to immutable field"}, {"sha": "484afd91a3e9b05d3245c13fd8ad057c0af7e97b", "filename": "src/test/compile-fail/writing-to-immutable-obj.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-obj.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:assigning to immutable obj field\n obj objy(x: int) {\n     fn foo() { x = 5; }"}, {"sha": "db2a8633cd6ac3b7d448bc2865660d61f4352d2e", "filename": "src/test/compile-fail/writing-to-immutable-vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-vec.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,3 +1,2 @@\n-// xfail-stage0\n // error-pattern:assignment to immutable vec content\n fn main() { let v: vec[int] = [1, 2, 3]; v.(1) = 4; }\n\\ No newline at end of file"}, {"sha": "9dc6ecc7413a595b928374db53e2b63acbe71346", "filename": "src/test/run-fail/args-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Fargs-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Fargs-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fargs-fail.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:meep\n fn f(a: int, b: int, c: @int) { fail \"moop\"; }\n "}, {"sha": "ef43fea8694e1b283df0ba9b739d82cfcd7be33b", "filename": "src/test/run-fail/fail-arg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ffail-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ffail-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-arg.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:woe\n fn f(a: int) { log a; }\n "}, {"sha": "0ac56613439bac9569aa22932eb5fcaac3ad9c64", "filename": "src/test/run-fail/fail-main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ffail-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ffail-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-main.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:moop\n use std;\n import std::uint;"}, {"sha": "4428b496e642a046ad7ece3a3552e6bb7d606d27", "filename": "src/test/run-fail/fmt-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ffmt-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ffmt-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffmt-fail.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:meh\n use std;\n import std::str;"}, {"sha": "efeb27ff3417d6ae331bd94e32c9348c649144b3", "filename": "src/test/run-fail/for-each-loop-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:moop\n use std;\n import std::uint;"}, {"sha": "677240d076337abc0f0b95456cfcf3f9d7a567a3", "filename": "src/test/run-fail/if-check-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Fif-check-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Fif-check-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fif-check-fail.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:Number is odd\n pred even(x: uint) -> bool {\n     if x < 2u {"}, {"sha": "cadb8ef387dea77a4dfd7c4e5afa2ef1d86f1478", "filename": "src/test/run-fail/port-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Fport-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Fport-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fport-type.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // error-pattern:meep\n fn echo[T](c: chan[T], oc: chan[chan[T]]) {\n     // Tests that the type argument in port gets"}, {"sha": "14e46976113c28f7ed89a55249ef06066adeb30e", "filename": "src/test/run-fail/pred.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Fpred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Fpred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fpred.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,8 +1,4 @@\n-\n-\n-\n // -*- rust -*-\n-// xfail-stage0\n // error-pattern:Predicate lt(b, a) failed\n fn f(a: int, b: int) { }\n "}, {"sha": "0277d83d39300277e4087b250142981fde767911", "filename": "src/test/run-fail/rhs-type.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Frhs-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Frhs-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frhs-type.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,8 +1,4 @@\n-\n-\n-\n // Tests that trans treats the rhs of pth's decl\n // as a _|_-typed thing, not a str-typed thing\n-// xfail-stage0\n // error-pattern:bye\n fn main() { let pth = fail \"bye\"; let rs: {t: str} = {t: pth}; }\n\\ No newline at end of file"}, {"sha": "3a2406c389d1897bdb03e8f90008d89f31c59a87", "filename": "src/test/run-fail/task-comm-14.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "685a905509cdbad2956456fad12836947c6975a6", "filename": "src/test/run-fail/trivial-message2.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "dd28f57d5aa9188db3542f6b9d3166c902c484f5", "filename": "src/test/run-pass/acyclic-unwind.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "bc4aa52ce97d1f5f0a3343f5402478b531a61d1a", "filename": "src/test/run-pass/alloca-from-derived-tydesc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n tag option[T] { some(T); none; }\n \n type r[T] = {mutable v: (option[T])[]};"}, {"sha": "fdd6f1d326603abc52c5cd11cb0bf6be84fa3a0a", "filename": "src/test/run-pass/alt-bot.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Falt-bot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Falt-bot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-bot.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,6 +1,3 @@\n-\n-\n-// xfail-stage0\n use std;\n import std::option::*;\n "}, {"sha": "e158b1ca64c5866c06fb89188de1d655ecf87d7b", "filename": "src/test/run-pass/alt-pattern-no-type-params.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Falt-pattern-no-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Falt-pattern-no-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-pattern-no-type-params.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n tag maybe[T] { nothing; just(T); }\n \n fn foo(x: maybe[int]) {"}, {"sha": "62e3f209c6802e82fdd019897d55bf51d11c5527", "filename": "src/test/run-pass/alt-type-simple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Falt-type-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Falt-type-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-type-simple.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "f954a589fb5a254386e01a9d7695f37b9a90c3dd", "filename": "src/test/run-pass/anon-obj-backwarding-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-//xfail-stage0\n //xfail-stage1\n //xfail-stage2\n //xfail-stage3"}, {"sha": "fd4781a18df4ee2afe304b444f2ec38659254c6e", "filename": "src/test/run-pass/anon-obj-backwarding.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-//xfail-stage0\n //xfail-stage1\n //xfail-stage2\n //xfail-stage3"}, {"sha": "c63f8ac585a479047835c961e5fdba20f066e20f", "filename": "src/test/run-pass/anon-objs-with-fields.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fanon-objs-with-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fanon-objs-with-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-objs-with-fields.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-//xfail-stage0\n //xfail-stage1\n //xfail-stage2\n //xfail-stage3"}, {"sha": "3944a0e9da5a4a1a09da8b54e4ce7886a10a4472", "filename": "src/test/run-pass/artificial-block.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fartificial-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fartificial-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fartificial-block.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n fn f() -> int { { ret 3; } }\n \n fn main() { assert (f() == 3); }\n\\ No newline at end of file"}, {"sha": "cdf5a6f18bdb9243740afd1f38c6b81c0043697b", "filename": "src/test/run-pass/assign-assign.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fassign-assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fassign-assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassign-assign.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,8 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n-\n // Issue 483 - Assignment expressions result in nil\n fn test_assign() {\n     let x: int;"}, {"sha": "717d79ad18e5b7159a3e3e40692ec4c01084c798", "filename": "src/test/run-pass/auto-deref-fn.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fauto-deref-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fauto-deref-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-deref-fn.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn add1(i: int) -> int { ret i + 1; }\n fn main() {\n     let f = @add1;"}, {"sha": "60e14dfa428491979f5f64d832c49332a0c7654d", "filename": "src/test/run-pass/basic-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-1.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n fn a(c: chan[int]) { c <| 10; }"}, {"sha": "fa0419b0d80a4044c6afd4b9a4d3927db0338162", "filename": "src/test/run-pass/basic-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n fn a(c: chan[int]) { log \"task a0\"; log \"task a1\"; c <| 10; }"}, {"sha": "87564fb4d102e7541f8a663ec1325bfc105d0165", "filename": "src/test/run-pass/basic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n fn a(c: chan[int]) {"}, {"sha": "f890c1e0e8a6a95d571a25ad031e437160818f25", "filename": "src/test/run-pass/bind-parameterized-args-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbind-parameterized-args-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbind-parameterized-args-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-parameterized-args-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n fn main() {\n     fn echo[T](c: int, x: fn(&T)) { log_err \"wee\"; }\n "}, {"sha": "cf9013918dc5b6ae166b85df77b693ba79108375", "filename": "src/test/run-pass/bind-parameterized-args.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbind-parameterized-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbind-parameterized-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-parameterized-args.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n fn main() {\n     fn echo[T](c: int, x: vec[T]) { }\n "}, {"sha": "74bd7dcd0ef7f986809d413c62a29591220dfb6d", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n // Binop corner cases\n \n fn test_nil() {"}, {"sha": "c9dd29f7d001197e8bed14d64a1b17b2ed60d887", "filename": "src/test/run-pass/block-fn-coerce.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fblock-fn-coerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fblock-fn-coerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-fn-coerce.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn force(f: &block() -> int ) -> int { ret f(); }\n fn main() {\n     let f = fn () -> int { ret 7 };"}, {"sha": "7479474a9de537a02e3b3ef0643cfe1abebe023c", "filename": "src/test/run-pass/block-iter-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn iter_vec[T](v: &vec[T], f: &block(&T) ) { for x: T  in v { f(x); } }\n \n fn main() {"}, {"sha": "a106f1507c91c11cdbaa67a6b22383dd3667f350", "filename": "src/test/run-pass/block-iter-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn iter_vec[T](v: &vec[T], f: &block(&T) ) { for x: T  in v { f(x); } }\n \n fn main() {"}, {"sha": "6c20cdd805dee3bba0d64cb2fda3097f5dec1aca", "filename": "src/test/run-pass/box-pattern.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbox-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbox-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-pattern.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n type foo = {a: int, b: uint};\n tag bar { u(@foo); w(int); }\n "}, {"sha": "9db96e85782debfd1ea8eb9a719d8fab99f0f49a", "filename": "src/test/run-pass/break-value.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbreak-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fbreak-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbreak-value.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n fn int_id(x: int) -> int { ret x; }\n \n fn main() { while true { int_id(break); } }\n\\ No newline at end of file"}, {"sha": "6cc87ae7b95e2be3668aee008c4f9062bd390fc6", "filename": "src/test/run-pass/call-autoderef-tag.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fcall-autoderef-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fcall-autoderef-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcall-autoderef-tag.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n tag int_fn { f(fn(int) -> int ); }\n tag int_box_fn { fb(@fn(int) -> int ); }\n fn add1(i: int) -> int { ret i + 1; }"}, {"sha": "0c68538006b4315ca9236303fd086e52310dec8f", "filename": "src/test/run-pass/child-outlives-parent.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // Reported as issue #126, child leaks the string.\n fn child2(s: str) { }\n "}, {"sha": "e0cf93b9b2dcd7bac24236eab072072510ff9136", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "853d14373bf03696b307c18c4a8c6775da5fe406", "filename": "src/test/run-pass/comm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomm.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n fn main() {"}, {"sha": "92d8bf4dfe13e49a0b69926705cf1ee1e87c46fb", "filename": "src/test/run-pass/conditional-compile.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-compile.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n #[cfg(bogus)]\n const b: bool = false;\n "}, {"sha": "48114a057847764b2947b79dfd9bd6b0e106a44c", "filename": "src/test/run-pass/constrained-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstrained-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstrained-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstrained-type.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-pretty\n // -*- rust -*-\n "}, {"sha": "c9104f3e7890160a01b08492c2d43e24890df7d5", "filename": "src/test/run-pass/constraint-prop-expr-move.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n use std;\n import std::str::*;\n import std::uint::*;"}, {"sha": "9418d3dff7ffe94cc4daa581bf4fd2f721cad306", "filename": "src/test/run-pass/constraint-prop-move.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n use std;\n import std::str::*;\n import std::uint::*;"}, {"sha": "3212ad54e2a7731fb820fa6d463499ec777a51bb", "filename": "src/test/run-pass/constraint-prop-swap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n use std;\n import std::str::*;\n import std::uint::*;"}, {"sha": "720f2ff5631209163527ab2d3ed13e6cc823b269", "filename": "src/test/run-pass/constraint-prop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n use std;\n import std::str::*;\n import std::uint::*;"}, {"sha": "e0218146e3d9a2c6e1cf32b1c88752c6d8086e23", "filename": "src/test/run-pass/expr-alt-fail.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-alt-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-alt-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-alt-fail.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n fn test_simple() {\n     let r = alt true { true { true } false { fail } };\n     assert (r == true);"}, {"sha": "6db5970b8ab1b74c6f6644c4adf709fc0a0602eb", "filename": "src/test/run-pass/expr-block-ref.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-block-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-block-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-ref.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,2 @@\n-\n-\n-\n-// xfail-stage0\n-\n // Regression test for issue #388\n fn main() { let x = { { [10] } }; }\n\\ No newline at end of file"}, {"sha": "d36330f287f74bfebe27316be89d4b3714d52c4b", "filename": "src/test/run-pass/expr-block-slot.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-block-slot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-block-slot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-slot.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,8 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n-\n // Regression test for issue #377\n fn main() {\n     let a = { let b = {a: 3}; b };"}, {"sha": "6260c7daff56021d7aa07dc35e0f62cd00709763", "filename": "src/test/run-pass/expr-elseif-ref.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,8 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n-\n // Make sure we drop the refs of the temporaries needed to return the\n // values from the else if branch\n fn main() {"}, {"sha": "458f4e76ab3af36b049af0eac610713ab0bc9d76", "filename": "src/test/run-pass/expr-elseif-ref2.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,8 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n-\n // Regression test for issue #388\n fn main() {\n     let x = if false { [0u] } else if (true) { [10u] } else { [0u] };"}, {"sha": "99ce1fac7b7448cd5d2e3a2ee4c5aa27722dc7de", "filename": "src/test/run-pass/expr-empty-ret.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // Issue #521\n \n fn f() { let x = alt true { true { 10 } false { ret } }; }"}, {"sha": "9eb486795523cf694f1c6f82c59e2b13820d7bda", "filename": "src/test/run-pass/expr-fn.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-fn.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n fn test_int() {\n     fn f() -> int { 10 }\n     assert (f() == 10);"}, {"sha": "f9ad10756057199d29654ad801a4fbade2315d69", "filename": "src/test/run-pass/expr-if-fail-all.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-if-fail-all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-if-fail-all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-fail-all.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,8 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n-\n // When all branches of an if expression result in fail, the entire if\n // expression results in fail.\n fn main() { let x = if true { 10 } else { if true { fail } else { fail } }; }\n\\ No newline at end of file"}, {"sha": "4c9c8e07d4cc566a838e2817246e2b0116fb0327", "filename": "src/test/run-pass/expr-if-fail.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-if-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fexpr-if-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-fail.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n fn test_if_fail() { let x = if false { fail } else { 10 }; assert (x == 10); }\n \n fn test_else_fail() {"}, {"sha": "a836b458602f2ffbe3e06df24e10234111b19d26", "filename": "src/test/run-pass/fixed-point-bind-box.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ffixed-point-bind-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ffixed-point-bind-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffixed-point-bind-box.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn fix_help[A, B](f: @fn(@fn(&A) -> B , &A) -> B , x: &A) -> B {\n     ret f(@bind fix_help(f, _), x);\n }"}, {"sha": "dfe4d2bd9a7b6421cc14fc0d4f3c728bd968105c", "filename": "src/test/run-pass/fn-expr.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ffn-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ffn-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffn-expr.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1 @@\n-\n-\n-\n-// xfail-stage0\n fn main() { let x = fn (a: int) -> int { ret a + 1; }; assert (x(4) == 5); }\n\\ No newline at end of file"}, {"sha": "c3513bdff8a8dafc4142eccf1a1024f81b1779ba", "filename": "src/test/run-pass/fn-type-infer.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ffn-type-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ffn-type-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffn-type-infer.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn main() {\n     // We should be able to type infer inside of lambdas.\n     let f = fn () { let i = 10; };"}, {"sha": "5542a11b7cd516e59a3fd3dad5e342a623ef3a40", "filename": "src/test/run-pass/for-loop-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ffor-loop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ffor-loop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-fail.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,2 +1 @@\n-// xfail-stage0\n fn main() { let x: vec[int] = []; for i: int  in x { fail \"moop\"; } }\n\\ No newline at end of file"}, {"sha": "725b6870431529003dd0985a2b17c0c023675415", "filename": "src/test/run-pass/generic-ivec-leak.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fgeneric-ivec-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fgeneric-ivec-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-ivec-leak.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n tag wrapper[T] { wrapped(T); }\n \n fn main() { let w = wrapped(~[1, 2, 3, 4, 5]); }"}, {"sha": "e05edc5c2d77927fb90527a6495542e2f76916f0", "filename": "src/test/run-pass/generic-ivec.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fgeneric-ivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fgeneric-ivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-ivec.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn f[T](v: @T) { }\n fn main() { f(@~[1, 2, 3, 4, 5]); }\n "}, {"sha": "d7c1ab785ff45eb3b1c626c33704c9108ea90aaa", "filename": "src/test/run-pass/global-scope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fglobal-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fglobal-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fglobal-scope.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-fast\n \n fn f() -> int { ret 1; }"}, {"sha": "88c744642d0f6832c6f503d300aaf92268817bea", "filename": "src/test/run-pass/if-check-precond.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fif-check-precond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fif-check-precond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-check-precond.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n pred even(x: uint) -> bool {\n     if x < 2u {\n         ret false;"}, {"sha": "220b784e12e3eb71d8de64edf575923dbbacf523", "filename": "src/test/run-pass/if-check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fif-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fif-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-check.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n pred even(x: uint) -> bool {\n     if x < 2u {\n         ret false;"}, {"sha": "3237c23e8df9e7ccb66e1ff122e478bb8b4c85d2", "filename": "src/test/run-pass/if-ret.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fif-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fif-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-ret.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-pretty\n fn foo() { if (ret) { } }\n "}, {"sha": "311bfdb5301a32d5081cd2ddc94fe0ca1b2f0488", "filename": "src/test/run-pass/infer-fn-tail-expr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // issue #680\n \n fn f() -> int[] { ~[] }"}, {"sha": "f5b7e5ad6b238c220233674de9368620c5b2c07c", "filename": "src/test/run-pass/infinite-loops.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfinite-loops.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -2,8 +2,6 @@\n   A simple way to make sure threading works. This should use all the\n   CPU cycles an any machines that we're likely to see for a while.\n */\n-\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "50cb704b88166e3353e814c9eb3eabd40466d86d", "filename": "src/test/run-pass/interior-vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Finterior-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Finterior-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finterior-vec.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-pretty\n \n import rusti::ivec_len;"}, {"sha": "2868449be4a59431d81ae29c39fee3c6d80c95c3", "filename": "src/test/run-pass/issue-506.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fissue-506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fissue-506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-506.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -2,8 +2,6 @@\n   A reduced test case for Issue #506, provided by Rob Arnold.\n */\n \n-// xfail-stage0\n-\n native \"rust\" mod rustrt {\n     fn task_yield();\n }"}, {"sha": "200dd6273035f49234be3bdf79f2aa2625ab6134", "filename": "src/test/run-pass/issue-687.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fissue-687.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fissue-687.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-687.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::ivec;\n "}, {"sha": "05d24023613822fd35f61871a13de45dc45fa435", "filename": "src/test/run-pass/issue-718.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fissue-718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fissue-718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-718.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-//xfail-stage0\n //xfail-stage1\n //xfail-stage2\n //xfail-stage3"}, {"sha": "37187338d19ddf89b5aa23082e80436b5676be47", "filename": "src/test/run-pass/item-attributes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fitem-attributes.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n // These are attributes of the implicit crate. Really this just needs to parse\n // for completeness since .rs files linked from .rc files support this\n // notation to specify their module's attributes"}, {"sha": "18ea2f23273c2823ffca426106cc7de46033e831", "filename": "src/test/run-pass/ivec-add.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fivec-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fivec-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fivec-add.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn double[T](a: &T) -> T[] { ret ~[a] + ~[a]; }\n \n fn double_int(a: int) -> int[] { ret ~[a] + ~[a]; }"}, {"sha": "cd0eadc45954867204c9e7dfb7604264555f7db6", "filename": "src/test/run-pass/ivec-pass-by-value.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fivec-pass-by-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fivec-pass-by-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fivec-pass-by-value.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn f(a: int[]) { }\n fn main() { f(~[1, 2, 3, 4, 5]); }\n "}, {"sha": "d30abad948792ae95b0af43f90a8ad9020c98c72", "filename": "src/test/run-pass/join.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fjoin.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "748d84e6d7d98f3d98ea480eb29b98c176534592", "filename": "src/test/run-pass/lazychan.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Flazychan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Flazychan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flazychan.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n fn main() {"}, {"sha": "4aae975a5e95b4c03028e075efd1aa5c2210ec9b", "filename": "src/test/run-pass/macro-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmacro-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmacro-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn main() {\n   #macro([#mylambda[x,body], {fn f(x: int) -> int { ret body }; f}]);\n "}, {"sha": "f143c4f058f64d1a8b9da7bb1bb2c3a96d378db6", "filename": "src/test/run-pass/macro-3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmacro-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmacro-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-3.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn main() {\n   #macro([#trivial[], 1*2*4*2*1]);\n "}, {"sha": "1b561e3c487432685ac9d6b6a66954bdce4d33b0", "filename": "src/test/run-pass/macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmacro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmacro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn main() {\n   #macro[[#m1[a], a*4]];\n   assert (#m1[2] == 8);"}, {"sha": "ea7291ce0a0f29490c8a33021f721bc9072178ad", "filename": "src/test/run-pass/many.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmany.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "3055792c0d46c6887e7e9b9a5ee7595f7ceb0084", "filename": "src/test/run-pass/mlist-cycle.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,6 +1,3 @@\n-\n-\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "9537942a4eadcbd2989714561318fe29be6550a2", "filename": "src/test/run-pass/native-mod.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fnative-mod.rc", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fnative-mod.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-mod.rc?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "7a4c20e6fbbb25859e4c3a265a3c727869d981a0", "filename": "src/test/run-pass/native.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fnative.rc", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fnative.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative.rc?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "af499adee5712b06fb104a59199c67001241b47a", "filename": "src/test/run-pass/nil-pattern.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fnil-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fnil-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnil-pattern.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,2 +1 @@\n-// xfail-stage0\n fn main() { let x = (); alt x { () { } } }\n\\ No newline at end of file"}, {"sha": "42c80b4a8834f460e73199701a131208f46e93f4", "filename": "src/test/run-pass/obj-as.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fobj-as.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fobj-as.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fobj-as.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "c9ac288ef15423d1072de5d7a4cab677541e2143", "filename": "src/test/run-pass/pattern-bound-var-in-for-each.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fpattern-bound-var-in-for-each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fpattern-bound-var-in-for-each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpattern-bound-var-in-for-each.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // Tests that trans_path checks whether a\n // pattern-bound var is an upvar (when translating\n // the for-each body)"}, {"sha": "4f7d6e92ec9c0911ff48ae301bf4f4748acc00b2", "filename": "src/test/run-pass/pred-check.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fpred-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fpred-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpred-check.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,8 +1,4 @@\n-\n-\n-\n // -*- rust -*-\n-// xfail-stage0\n pred f(q: int) -> bool { ret true; }\n \n fn main() { let x = 0; check (f(x)); }\n\\ No newline at end of file"}, {"sha": "e1ddf1c2eced8ea6e58e1b8d6bdb02f6297c8da0", "filename": "src/test/run-pass/pred.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fpred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fpred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpred.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n // -*- rust -*-\n fn f(a: int, b: int) { }\n "}, {"sha": "84d9d429af8f63cfc15667fee21d7ae9549df446", "filename": "src/test/run-pass/preempt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fpreempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fpreempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpreempt.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "b10054de0cda7c629ceaa2865e95e8cba139f480", "filename": "src/test/run-pass/rebind-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Frebind-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Frebind-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frebind-fn.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n fn add(i: int, j: int) -> int { ret i + j; }\n fn binder(n: int) -> fn() -> int {\n     let f = bind add(n, _);"}, {"sha": "794a1a9ee04cf8544821b9250b0c1ded71caba8b", "filename": "src/test/run-pass/record-pat.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Frecord-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Frecord-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frecord-pat.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n tag t1 { a(int); b(uint); }\n type t2 = {x: t1, y: int};\n tag t3 { c(t2, uint); }"}, {"sha": "62380988336fce059b7d0d200ac19b1084d4f59d", "filename": "src/test/run-pass/send-type-inference.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // tests that ctrl's type gets inferred properly\n type command[K, V] = {key: K, val: V};\n "}, {"sha": "9b6564e7f0a2c07521104b892cb91c4afea33ed9", "filename": "src/test/run-pass/spawn-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-fn.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "513b8aacdd4de57e8d2391fe900f61cb57d0486e", "filename": "src/test/run-pass/spawn-module-qualified.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn-module-qualified.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn-module-qualified.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-module-qualified.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "e99006273d53cdbeb78330f19dc045bbfa8bac4e", "filename": "src/test/run-pass/spawn-types.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-types.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -4,8 +4,6 @@\n   Arnold.\n  */\n \n-// xfail-stage0\n-\n use std;\n \n import std::str;"}, {"sha": "f15e7889e08b433107cd121f8f7f6529d59610c6", "filename": "src/test/run-pass/spawn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "a0488fafaba9f3ec2afb98c871db57d061f4aa0d", "filename": "src/test/run-pass/spawn2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fspawn2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // -*- rust -*-\n \n fn main() { spawn child(10, 20, 30, 40, 50, 60, 70, 80, 90); }"}, {"sha": "8be869b793501ea10ebaa5ecad0573cab2047cfb", "filename": "src/test/run-pass/standalone-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fstandalone-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fstandalone-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstandalone-method.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-//xfail-stage0\n //xfail-stage1\n //xfail-stage2\n //xfail-stage3"}, {"sha": "3b15df94ce4a31c1573626354dd47b2b90809140", "filename": "src/test/run-pass/string-self-append.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fstring-self-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fstring-self-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstring-self-append.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::str;\n "}, {"sha": "27c4a302b7ad7998efa431db729857db0122c455", "filename": "src/test/run-pass/syntax-extension-shell.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "0c99db73fb802dc4c2feb318e9d45a7b4e429b22", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n fn main() { test05(); }\n \n fn test05_start(ch: chan[int]) { ch <| 10; ch <| 20; ch <| 30; }"}, {"sha": "360f4d7feae3bef56cb8fc8ee663a8710d4c7f7c", "filename": "src/test/run-pass/task-comm-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n \n import std::task::join;"}, {"sha": "65a1bc2b91d34ecd647c340f91aa798911d068c9", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::task;\n "}, {"sha": "682b6d2a430e13bc8b4afb6a56604f0431ce2dc7", "filename": "src/test/run-pass/task-comm-11.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage3\n \n fn start(c: chan[chan[str]]) { let p: port[str] = port(); c <| chan(p); }"}, {"sha": "516225567a6497cafdeb9958e695002e8a4ed66c", "filename": "src/test/run-pass/task-comm-12.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::task;\n "}, {"sha": "9cc5e7504c3d8d64165f013756b01dc1aa54a0ed", "filename": "src/test/run-pass/task-comm-13.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::task;\n "}, {"sha": "f7748ca2427193df43ac39a0a13d803346280014", "filename": "src/test/run-pass/task-comm-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n \n import std::task;"}, {"sha": "9494bcc5d5de18e6a42b0d0f857a1a7cb8bcdb5e", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::task;\n "}, {"sha": "d6db6724226596e6e253ca0dcdf707b4b432dae8", "filename": "src/test/run-pass/task-comm-7.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::task;\n "}, {"sha": "d6db6724226596e6e253ca0dcdf707b4b432dae8", "filename": "src/test/run-pass/task-comm-8.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::task;\n "}, {"sha": "c8a0626e82bc9ac0ada564f34f41dbfaf306cf8c", "filename": "src/test/run-pass/task-comm-9.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::task;\n "}, {"sha": "ed3fb5fb18d482c34966ae71468071d97f4cf47a", "filename": "src/test/run-pass/task-comm.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n \n import std::task;"}, {"sha": "1028d38435010b39f6c3f54eae4f1135ec38e146", "filename": "src/test/run-pass/task-compare.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-compare.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "178e84a4ee96c70d3a240edb2d6a9baede6941dc", "filename": "src/test/run-pass/task-killjoin.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "70e7785f961b889052a0ccecf46a4ff9b08f2d89", "filename": "src/test/run-pass/task-life-0.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-life-0.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n fn main() { spawn child(\"Hello\"); }\n \n fn child(s: str) {"}, {"sha": "a6592b885eb472fb981014f1fae719c9184fc87f", "filename": "src/test/run-pass/task-pin.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-pin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftask-pin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-pin.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n /**\n    Exercises task pinning and unpinning. Doesn't really ensure it\n    works, just makes sure it runs."}, {"sha": "9c2aaf4ac4e39707849e3e4286e7fdee027cb97a", "filename": "src/test/run-pass/ternary.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fternary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fternary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fternary.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn test_simple() { let x = true ? 10 : 11; assert (x == 10); }\n \n fn test_precedence() {"}, {"sha": "46d6a173c785298553f213c301b30e5293937a7f", "filename": "src/test/run-pass/threads.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fthreads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fthreads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthreads.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "f173ec0a69d6aa5db712329dac1292d09e5ce7f9", "filename": "src/test/run-pass/type-namespace.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftype-namespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftype-namespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-namespace.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,7 +1,3 @@\n-\n-\n-\n-// xfail-stage0\n type a = {a: int};\n \n fn a(a: a) -> int { ret a.a; }"}, {"sha": "8dbdba619d89ae6752da2d43b39000bb99da7b3b", "filename": "src/test/run-pass/type-sizes.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-sizes.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,6 +1,3 @@\n-\n-\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "2c4539e3534f3900065294d8e2a59a09228061d0", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,6 +1,3 @@\n-\n-\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "b0313aa4dce446f843a25e96bcfe36e2f80c1eb1", "filename": "src/test/run-pass/user.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fuser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fuser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuser.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "62f25c50baa41f6840e50b79bb1c95f6f7b8e2d8", "filename": "src/test/run-pass/utf8.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Futf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Futf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n fn main() {\n     let yen: char = '\u00a5'; // 0xa5\n     let c_cedilla: char = '\u00e7'; // 0xe7"}, {"sha": "50bb8996f87b33226ff345c23ba22b6bba22119a", "filename": "src/test/run-pass/utf8_chars.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8_chars.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::str;\n import std::vec;"}, {"sha": "21fe0e87da59ef7c36eb5b58bd7e4dd913ee688f", "filename": "src/test/run-pass/vec-ivec-deadlock.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fvec-ivec-deadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fvec-ivec-deadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-ivec-deadlock.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,3 +1 @@\n-// xfail-stage0\n-\n fn main() { let a = ~[1, 2, 3, 4, 5]; let b = [a, a]; b += b; }\n\\ No newline at end of file"}, {"sha": "7c0fa4a566e6d3cdf9ec743bea72710a05d174d8", "filename": "src/test/run-pass/vec-self-append.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fvec-self-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fvec-self-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-self-append.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n use std;\n import std::vec;\n "}, {"sha": "8a11f55aa57ab7f7fbdad5d6e5e55573ac998837", "filename": "src/test/run-pass/vec-slice.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fvec-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fvec-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-slice.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3"}, {"sha": "6cceeb557ad8d9dc33380567d1e428e29d70df3c", "filename": "src/test/run-pass/vector-no-ann-2.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1 @@\n-\n-\n-\n-// xfail-stage0\n fn main() { let quux: @vec[uint] = @[]; }\n\\ No newline at end of file"}, {"sha": "e124ed58042b5ee85c66e55bea6f03d2161cd7d6", "filename": "src/test/run-pass/while-loop-constraints-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fwhile-loop-constraints-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fwhile-loop-constraints-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwhile-loop-constraints-2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n fn main() {\n \n     let y: int = 42;"}, {"sha": "dcc525d652f2d3bfc7a8577c33ee52adf7de7a4e", "filename": "src/test/run-pass/x86stdcall.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,5 +1,3 @@\n-// xfail-stage0\n-\n #[cfg(target_os = \"win32\")]\n native \"x86stdcall\" mod kernel32 {\n     fn SetLastError(err: uint);"}, {"sha": "f230ede85c159dad06d40d6207748ad6498cdc42", "filename": "src/test/run-pass/yield.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fyield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fyield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,6 +1,3 @@\n-\n-\n-// xfail-stage0\n // -*- rust -*-\n use std;\n import std::task::*;"}, {"sha": "c56fef8ff15deda3adfa6e3332b4e38ec870514a", "filename": "src/test/run-pass/yield1.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fyield1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fyield1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield1.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,6 +1,3 @@\n-\n-\n-// xfail-stage0\n // -*- rust -*-\n use std;\n import std::task::*;"}, {"sha": "ae1858c88bbb5ff0a93d3ca8342384c799a473aa", "filename": "src/test/run-pass/yield2.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fyield2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53402846ea7fabe8595c3f50cbc786db16d087a/src%2Ftest%2Frun-pass%2Fyield2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield2.rs?ref=c53402846ea7fabe8595c3f50cbc786db16d087a", "patch": "@@ -1,6 +1,3 @@\n-\n-\n-// xfail-stage0\n // -*- rust -*-\n use std;\n "}]}