{"sha": "35edf7d8cbd49aa4ea516c6b60615927a722dfd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZWRmN2Q4Y2JkNDlhYTRlYTUxNmM2YjYwNjE1OTI3YTcyMmRmZDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-21T09:41:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-21T09:41:26Z"}, "message": "Auto merge of #44627 - zackmdavis:the_capgate_perogative, r=nrc\n\n`--cap-lints allow` switches off `can_emit_warnings`\n\nThis boolean field on the error `Handler` is toggled to silence\nwarnings when `-A warnings` is passed. (This is actually a separate\nmechanism from the global lint level\u2014whether there's some redundancy\nto be factored away here is an important question, but not one we\nconcern ourselves with in this commit.)  But the same rationale\napplies for `--cap-lints allow`. In particular, this makes the \"soft\"\nfeature-gate warning introduced in 8492ad24 (which is not a lint, but\njust calls `struct_span_warn`) not pollute the builds of dependent\ncrates.\n\nThanks to @kennytm for pointing out the potential of\n`can_emit_warnings` for this purpose.\n\nResolves #44213.", "tree": {"sha": "278fa197c9326159eaed1cba20e38fd10c0ed82f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/278fa197c9326159eaed1cba20e38fd10c0ed82f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35edf7d8cbd49aa4ea516c6b60615927a722dfd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35edf7d8cbd49aa4ea516c6b60615927a722dfd6", "html_url": "https://github.com/rust-lang/rust/commit/35edf7d8cbd49aa4ea516c6b60615927a722dfd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35edf7d8cbd49aa4ea516c6b60615927a722dfd6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2504cfc7615b9247d4546672e31a9803f4b88ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2504cfc7615b9247d4546672e31a9803f4b88ba", "html_url": "https://github.com/rust-lang/rust/commit/e2504cfc7615b9247d4546672e31a9803f4b88ba"}, {"sha": "d02ceacb25d851a0dce67a3120f247558493c6ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/d02ceacb25d851a0dce67a3120f247558493c6ad", "html_url": "https://github.com/rust-lang/rust/commit/d02ceacb25d851a0dce67a3120f247558493c6ad"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "96f46b270a13f42215e6d28d988dac495d25a258", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/35edf7d8cbd49aa4ea516c6b60615927a722dfd6/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35edf7d8cbd49aa4ea516c6b60615927a722dfd6/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=35edf7d8cbd49aa4ea516c6b60615927a722dfd6", "patch": "@@ -660,12 +660,16 @@ pub fn build_session_with_codemap(sopts: config::Options,\n     // FIXME: This is not general enough to make the warning lint completely override\n     // normal diagnostic warnings, since the warning lint can also be denied and changed\n     // later via the source code.\n-    let can_print_warnings = sopts.lint_opts\n+    let warnings_allow = sopts.lint_opts\n         .iter()\n         .filter(|&&(ref key, _)| *key == \"warnings\")\n-        .map(|&(_, ref level)| *level != lint::Allow)\n+        .map(|&(_, ref level)| *level == lint::Allow)\n         .last()\n-        .unwrap_or(true);\n+        .unwrap_or(false);\n+    let cap_lints_allow = sopts.lint_cap.map_or(false, |cap| cap == lint::Allow);\n+\n+    let can_print_warnings = !(warnings_allow || cap_lints_allow);\n+\n     let treat_err_as_bug = sopts.debugging_opts.treat_err_as_bug;\n \n     let emitter: Box<Emitter> = match (sopts.error_format, emitter_dest) {"}, {"sha": "1c04199c05f7c7ec60e1af295be21fe3de263d3e", "filename": "src/test/compile-fail/feature-gate-fn_must_use-cap-lints-allow.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/35edf7d8cbd49aa4ea516c6b60615927a722dfd6/src%2Ftest%2Fcompile-fail%2Ffeature-gate-fn_must_use-cap-lints-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35edf7d8cbd49aa4ea516c6b60615927a722dfd6/src%2Ftest%2Fcompile-fail%2Ffeature-gate-fn_must_use-cap-lints-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-fn_must_use-cap-lints-allow.rs?ref=35edf7d8cbd49aa4ea516c6b60615927a722dfd6", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --cap-lints allow\n+\n+// This tests that the fn_must_use feature-gate warning respects the lint\n+// cap. (See discussion in Issue #44213.)\n+\n+#![feature(rustc_attrs)]\n+\n+#[must_use] // (no feature-gate warning because of the lint cap!)\n+fn need_to_use_it() -> bool { true }\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}]}