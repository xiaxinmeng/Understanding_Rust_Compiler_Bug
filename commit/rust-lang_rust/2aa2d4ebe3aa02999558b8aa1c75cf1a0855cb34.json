{"sha": "2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYTJkNGViZTNhYTAyOTk5NTU4YjhhYTFjNzVjZjFhMDg1NWNiMzQ=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-10-04T12:14:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-04T12:14:10Z"}, "message": "Merge pull request #2011 from topecongiro/rewrite_call_inner\n\nChange return type of rewrite_call_inner() to Option<String>", "tree": {"sha": "4822804d7604bdaeec95c29dba5cedc4b63e8d68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4822804d7604bdaeec95c29dba5cedc4b63e8d68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34", "html_url": "https://github.com/rust-lang/rust/commit/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "687acdf84ed90493b9fe4f54bb315b74a5889713", "url": "https://api.github.com/repos/rust-lang/rust/commits/687acdf84ed90493b9fe4f54bb315b74a5889713", "html_url": "https://github.com/rust-lang/rust/commit/687acdf84ed90493b9fe4f54bb315b74a5889713"}, {"sha": "436a083fceae8e0f71605aa07dce047a316576c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/436a083fceae8e0f71605aa07dce047a316576c6", "html_url": "https://github.com/rust-lang/rust/commit/436a083fceae8e0f71605aa07dce047a316576c6"}], "stats": {"total": 54, "additions": 23, "deletions": 31}, "files": [{"sha": "c3fd5609458a800e2be3405d1ca4e145ef713548", "filename": "src/expr.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::cmp::{min, Ordering};\n+use std::cmp::min;\n use std::borrow::Cow;\n use std::fmt::Write;\n use std::iter::{repeat, ExactSizeIterator};\n@@ -2033,7 +2033,7 @@ pub fn rewrite_call(\n         shape,\n         context.config.fn_call_width(),\n         force_trailing_comma,\n-    ).ok()\n+    )\n }\n \n pub fn rewrite_call_inner<'a, T>(\n@@ -2044,7 +2044,7 @@ pub fn rewrite_call_inner<'a, T>(\n     shape: Shape,\n     args_max_width: usize,\n     force_trailing_comma: bool,\n-) -> Result<String, Ordering>\n+) -> Option<String>\n where\n     T: Rewrite + Spanned + ToExpr + 'a,\n {\n@@ -2055,30 +2055,27 @@ where\n         1\n     };\n     let used_width = extra_offset(callee_str, shape);\n-    let one_line_width = shape\n-        .width\n-        .checked_sub(used_width + 2 * paren_overhead)\n-        .ok_or(Ordering::Greater)?;\n+    let one_line_width = try_opt!(shape.width.checked_sub(used_width + 2 * paren_overhead));\n \n-    let nested_shape = shape_from_fn_call_style(\n+    let nested_shape = try_opt!(shape_from_fn_call_style(\n         context,\n         shape,\n         used_width + 2 * paren_overhead,\n         used_width + paren_overhead,\n-    ).ok_or(Ordering::Greater)?;\n+    ));\n \n     let span_lo = context.codemap.span_after(span, \"(\");\n     let args_span = mk_sp(span_lo, span.hi());\n \n-    let (extendable, list_str) = rewrite_call_args(\n+    let (extendable, list_str) = try_opt!(rewrite_call_args(\n         context,\n         args,\n         args_span,\n         nested_shape,\n         one_line_width,\n         args_max_width,\n         force_trailing_comma,\n-    ).ok_or(Ordering::Less)?;\n+    ));\n \n     if !context.use_block_indent() && need_block_indent(&list_str, nested_shape) && !extendable {\n         let mut new_context = context.clone();\n@@ -2094,10 +2091,8 @@ where\n         );\n     }\n \n-    let args_shape = shape\n-        .sub_width(last_line_width(callee_str))\n-        .ok_or(Ordering::Less)?;\n-    Ok(format!(\n+    let args_shape = try_opt!(shape.sub_width(last_line_width(callee_str)));\n+    Some(format!(\n         \"{}{}\",\n         callee_str,\n         wrap_args_with_parens(context, &list_str, extendable, args_shape, nested_shape)\n@@ -2805,7 +2800,7 @@ where\n             shape,\n             context.config.fn_call_width(),\n             force_trailing_comma,\n-        ).ok()\n+        )\n     } else {\n         rewrite_tuple_in_visual_indent_style(context, items, span, shape)\n     }"}, {"sha": "f3cefca7175b004ff0ab3297a04e4ab4b14d9d53", "filename": "src/items.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34", "patch": "@@ -1212,17 +1212,15 @@ fn format_tuple_struct(\n         result.push(')');\n     } else {\n         // 3 = `();`\n-        let body = try_opt!(\n-            rewrite_call_inner(\n-                context,\n-                \"\",\n-                &fields.iter().map(|field| field).collect::<Vec<_>>()[..],\n-                span,\n-                Shape::legacy(context.budget(last_line_width(&result) + 3), offset),\n-                context.config.fn_call_width(),\n-                false,\n-            ).ok()\n-        );\n+        let body = try_opt!(rewrite_call_inner(\n+            context,\n+            \"\",\n+            &fields.iter().map(|field| field).collect::<Vec<_>>()[..],\n+            span,\n+            Shape::legacy(context.budget(last_line_width(&result) + 3), offset),\n+            context.config.fn_call_width(),\n+            false,\n+        ));\n         result.push_str(&body);\n     }\n "}, {"sha": "4eaf97dd254c6ad632625de0861a4ace8a271889", "filename": "src/macros.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34", "patch": "@@ -202,16 +202,15 @@ pub fn rewrite_macro(\n         MacroStyle::Parens => {\n             // Format macro invocation as function call, forcing no trailing\n             // comma because not all macros support them.\n-            let rw = rewrite_call_inner(\n+            rewrite_call_inner(\n                 context,\n                 &macro_name,\n                 &arg_vec.iter().map(|e| &*e).collect::<Vec<_>>()[..],\n                 mac.span,\n                 shape,\n                 context.config.fn_call_width(),\n                 trailing_comma,\n-            );\n-            rw.ok().map(|rw| match position {\n+            ).map(|rw| match position {\n                 MacroPosition::Item => format!(\"{};\", rw),\n                 _ => rw,\n             })"}, {"sha": "6d289736c51e9c713220963bc60dce2b8264603d", "filename": "src/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=2aa2d4ebe3aa02999558b8aa1c75cf1a0855cb34", "patch": "@@ -346,7 +346,7 @@ fn rewrite_tuple_pat(\n         shape,\n         shape.width,\n         add_comma,\n-    ).ok()\n+    )\n }\n \n fn count_wildcard_suffix_len("}]}