{"sha": "fd4d50d4429f16edbc61d509bd3a31e28180b851", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNGQ1MGQ0NDI5ZjE2ZWRiYzYxZDUwOWJkM2EzMWUyODE4MGI4NTE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-12-26T22:33:40Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-12-29T09:45:20Z"}, "message": "Move diagnostic_items queries to librustc_passes.", "tree": {"sha": "bb8d1c037df3329f7665c0319e882f2d7a550f57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb8d1c037df3329f7665c0319e882f2d7a550f57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd4d50d4429f16edbc61d509bd3a31e28180b851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4d50d4429f16edbc61d509bd3a31e28180b851", "html_url": "https://github.com/rust-lang/rust/commit/fd4d50d4429f16edbc61d509bd3a31e28180b851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd4d50d4429f16edbc61d509bd3a31e28180b851/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a14d1658367ecb9e465d1b45d4f4258982dd372", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a14d1658367ecb9e465d1b45d4f4258982dd372", "html_url": "https://github.com/rust-lang/rust/commit/2a14d1658367ecb9e465d1b45d4f4258982dd372"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "38dcbc8e3fbb5a5202d3afaa6841e6d1834f8481", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd4d50d4429f16edbc61d509bd3a31e28180b851/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4d50d4429f16edbc61d509bd3a31e28180b851/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=fd4d50d4429f16edbc61d509bd3a31e28180b851", "patch": "@@ -99,7 +99,6 @@ pub mod lint;\n pub mod middle {\n     pub mod cstore;\n     pub mod dependency_format;\n-    pub mod diagnostic_items;\n     pub mod exported_symbols;\n     pub mod free_region;\n     pub mod lang_items;"}, {"sha": "566c814f947f346e2158bb1a4e6577bd96f035c7", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fd4d50d4429f16edbc61d509bd3a31e28180b851/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4d50d4429f16edbc61d509bd3a31e28180b851/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=fd4d50d4429f16edbc61d509bd3a31e28180b851", "patch": "@@ -2759,14 +2759,6 @@ pub fn provide(providers: &mut ty::query::Providers<'_>) {\n         assert_eq!(id, LOCAL_CRATE);\n         tcx.arena.alloc(middle::lang_items::collect(tcx))\n     };\n-    providers.diagnostic_items = |tcx, id| {\n-        assert_eq!(id, LOCAL_CRATE);\n-        middle::diagnostic_items::collect(tcx)\n-    };\n-    providers.all_diagnostic_items = |tcx, id| {\n-        assert_eq!(id, LOCAL_CRATE);\n-        middle::diagnostic_items::collect_all(tcx)\n-    };\n     providers.maybe_unused_trait_import = |tcx, id| tcx.maybe_unused_trait_imports.contains(&id);\n     providers.maybe_unused_extern_crates = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);"}, {"sha": "65138fad43bd8cf9b2cd99ea8445c00c6eef6d45", "filename": "src/librustc_passes/diagnostic_items.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fd4d50d4429f16edbc61d509bd3a31e28180b851/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4d50d4429f16edbc61d509bd3a31e28180b851/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostic_items.rs?ref=fd4d50d4429f16edbc61d509bd3a31e28180b851", "patch": "@@ -9,12 +9,13 @@\n //!\n //! * Compiler internal types like `Ty` and `TyCtxt`\n \n-use crate::hir::def_id::{DefId, LOCAL_CRATE};\n-use crate::ty::TyCtxt;\n-use crate::util::nodemap::FxHashMap;\n+use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc::ty::query::Providers;\n+use rustc::ty::TyCtxt;\n+use rustc::util::nodemap::FxHashMap;\n \n-use crate::hir;\n-use crate::hir::itemlikevisit::ItemLikeVisitor;\n+use rustc::hir;\n+use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use syntax::ast;\n use syntax::symbol::{sym, Symbol};\n \n@@ -93,7 +94,7 @@ fn extract(attrs: &[ast::Attribute]) -> Option<Symbol> {\n }\n \n /// Traverse and collect the diagnostic items in the current\n-pub fn collect<'tcx>(tcx: TyCtxt<'tcx>) -> &'tcx FxHashMap<Symbol, DefId> {\n+fn collect<'tcx>(tcx: TyCtxt<'tcx>) -> &'tcx FxHashMap<Symbol, DefId> {\n     // Initialize the collector.\n     let mut collector = DiagnosticItemCollector::new(tcx);\n \n@@ -104,7 +105,7 @@ pub fn collect<'tcx>(tcx: TyCtxt<'tcx>) -> &'tcx FxHashMap<Symbol, DefId> {\n }\n \n /// Traverse and collect all the diagnostic items in all crates.\n-pub fn collect_all<'tcx>(tcx: TyCtxt<'tcx>) -> &'tcx FxHashMap<Symbol, DefId> {\n+fn collect_all<'tcx>(tcx: TyCtxt<'tcx>) -> &'tcx FxHashMap<Symbol, DefId> {\n     // Initialize the collector.\n     let mut collector = FxHashMap::default();\n \n@@ -117,3 +118,14 @@ pub fn collect_all<'tcx>(tcx: TyCtxt<'tcx>) -> &'tcx FxHashMap<Symbol, DefId> {\n \n     tcx.arena.alloc(collector)\n }\n+\n+pub fn provide(providers: &mut Providers<'_>) {\n+    providers.diagnostic_items = |tcx, id| {\n+        assert_eq!(id, LOCAL_CRATE);\n+        collect(tcx)\n+    };\n+    providers.all_diagnostic_items = |tcx, id| {\n+        assert_eq!(id, LOCAL_CRATE);\n+        collect_all(tcx)\n+    };\n+}"}, {"sha": "1ac03122c4a3e667f5b36072bd0ae7ff8123f429", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4d50d4429f16edbc61d509bd3a31e28180b851/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4d50d4429f16edbc61d509bd3a31e28180b851/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=fd4d50d4429f16edbc61d509bd3a31e28180b851", "patch": "@@ -22,6 +22,7 @@ use rustc::ty::query::Providers;\n pub mod ast_validation;\n mod check_const;\n pub mod dead;\n+mod diagnostic_items;\n pub mod entry;\n pub mod hir_stats;\n mod intrinsicck;\n@@ -32,6 +33,7 @@ mod reachable;\n \n pub fn provide(providers: &mut Providers<'_>) {\n     check_const::provide(providers);\n+    diagnostic_items::provide(providers);\n     entry::provide(providers);\n     loops::provide(providers);\n     liveness::provide(providers);"}]}