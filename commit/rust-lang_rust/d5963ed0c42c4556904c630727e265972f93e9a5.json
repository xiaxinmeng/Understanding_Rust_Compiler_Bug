{"sha": "d5963ed0c42c4556904c630727e265972f93e9a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1OTYzZWQwYzQyYzQ1NTY5MDRjNjMwNzI3ZTI2NTk3MmY5M2U5YTU=", "commit": {"author": {"name": "Cameron Taggart", "email": "cameron.taggart@gmail.com", "date": "2020-04-21T22:36:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-21T22:36:08Z"}, "message": "accept cfg_if suggestion\n\nCo-Authored-By: bjorn3 <bjorn3@users.noreply.github.com>", "tree": {"sha": "79b7e37e3e3504378745515344480c8849ca9384", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79b7e37e3e3504378745515344480c8849ca9384"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5963ed0c42c4556904c630727e265972f93e9a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJen3VYCRBK7hj4Ov3rIwAAdHIIAKw0/B5v0VytbUo5sO3NKo3m\ngjiKYUScfsCXimSFwRiGiigzddkOves+Qk+VdyzxtbxkUIe7mMvGKLP9TPSyEHIw\nypyO2uENE8BIoeW0ZSkLB05pvVhupAFNke5rpgJXY6HKBMD1EaMfMlBPKOUmiloG\nCDHC95uXwaBYY68vLNiznOiAL4pDkPjrnSk6sMC78Jy7xRiYr2r0b5FZpgnXA07H\njqLx7uSZsOceldiaS13NgzyedOHPhuFCoxD+RcDVwWk2ZqjqqcIqKlO6wbaUlCbT\nzhkdBgMUI780uTybLvMnJ8J+TIkJcJ5szGhAseskHcKH+rxTNfPPNfqM2brawpQ=\n=YRZH\n-----END PGP SIGNATURE-----\n", "payload": "tree 79b7e37e3e3504378745515344480c8849ca9384\nparent f72de476b72d05934b0f375a1f94e580ed7b803b\nauthor Cameron Taggart <cameron.taggart@gmail.com> 1587508568 -0600\ncommitter GitHub <noreply@github.com> 1587508568 -0600\n\naccept cfg_if suggestion\n\nCo-Authored-By: bjorn3 <bjorn3@users.noreply.github.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5963ed0c42c4556904c630727e265972f93e9a5", "html_url": "https://github.com/rust-lang/rust/commit/d5963ed0c42c4556904c630727e265972f93e9a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5963ed0c42c4556904c630727e265972f93e9a5/comments", "author": {"login": "ctaggart", "id": 80104, "node_id": "MDQ6VXNlcjgwMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/80104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctaggart", "html_url": "https://github.com/ctaggart", "followers_url": "https://api.github.com/users/ctaggart/followers", "following_url": "https://api.github.com/users/ctaggart/following{/other_user}", "gists_url": "https://api.github.com/users/ctaggart/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctaggart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctaggart/subscriptions", "organizations_url": "https://api.github.com/users/ctaggart/orgs", "repos_url": "https://api.github.com/users/ctaggart/repos", "events_url": "https://api.github.com/users/ctaggart/events{/privacy}", "received_events_url": "https://api.github.com/users/ctaggart/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f72de476b72d05934b0f375a1f94e580ed7b803b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f72de476b72d05934b0f375a1f94e580ed7b803b", "html_url": "https://github.com/rust-lang/rust/commit/f72de476b72d05934b0f375a1f94e580ed7b803b"}], "stats": {"total": 24, "additions": 7, "deletions": 17}, "files": [{"sha": "1a841cc8a0cfcc05d9f35222187f7ac0d0de9782", "filename": "src/librustc_data_structures/profiling.rs", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d5963ed0c42c4556904c630727e265972f93e9a5/src%2Flibrustc_data_structures%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5963ed0c42c4556904c630727e265972f93e9a5/src%2Flibrustc_data_structures%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fprofiling.rs?ref=d5963ed0c42c4556904c630727e265972f93e9a5", "patch": "@@ -98,24 +98,14 @@ use measureme::{EventId, EventIdBuilder, SerializableString, StringId};\n use parking_lot::RwLock;\n \n cfg_if! {\n-    if #[cfg(target_arch = \"wasm32\")] {\n-        cfg_if! {\n-            if #[cfg(target_os = \"wasi\")] {\n-                type SerializationSink = measureme::FileSerializationSink;\n-            } else {\n-                type SerializationSink = measureme::ByteVecSink;\n-            }\n-        }\n+    if #[cfg(any(windows, target_os = \"wasi\"))] {\n+        /// FileSerializationSink is faster on Windows\n+        type SerializationSink = measureme::FileSerializationSink;\n+    } else if #[cfg(target_arch = \"wasm32\")] {\n+        type SerializationSink = measureme::ByteVecSink;\n     } else {\n-        cfg_if! {\n-            if #[cfg(windows)] {\n-                /// FileSerializationSink is faster on Windows\n-                type SerializationSink = measureme::FileSerializationSink;\n-            } else {\n-                /// MmapSerializatioSink is faster on macOS and Linux\n-                type SerializationSink = measureme::MmapSerializationSink;\n-            }\n-        }\n+        /// MmapSerializatioSink is faster on macOS and Linux\n+        type SerializationSink = measureme::MmapSerializationSink;\n     }\n }\n "}]}