{"sha": "a4ee3ca1e4f1177516139a4704456958c7d08c91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZWUzY2ExZTRmMTE3NzUxNjEzOWE0NzA0NDU2OTU4YzdkMDhjOTE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-10-22T02:08:28Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-10-23T15:02:58Z"}, "message": "Suggest semicolon removal on prior match arm", "tree": {"sha": "aebc14c2bd85647d35adf001959a602639f6ae98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aebc14c2bd85647d35adf001959a602639f6ae98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4ee3ca1e4f1177516139a4704456958c7d08c91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ee3ca1e4f1177516139a4704456958c7d08c91", "html_url": "https://github.com/rust-lang/rust/commit/a4ee3ca1e4f1177516139a4704456958c7d08c91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4ee3ca1e4f1177516139a4704456958c7d08c91/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86df9039b2a49dde3a2453d75c4c58540a568a1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/86df9039b2a49dde3a2453d75c4c58540a568a1a", "html_url": "https://github.com/rust-lang/rust/commit/86df9039b2a49dde3a2453d75c4c58540a568a1a"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "94e886be54dcf2534ba60501479aa467a5c486b5", "filename": "compiler/rustc_typeck/src/check/_match.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a4ee3ca1e4f1177516139a4704456958c7d08c91/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4ee3ca1e4f1177516139a4704456958c7d08c91/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs?ref=a4ee3ca1e4f1177516139a4704456958c7d08c91", "patch": "@@ -188,11 +188,18 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 }\n             } else {\n-                let (arm_span, semi_span) = if let hir::ExprKind::Block(blk, _) = &arm.body.kind {\n+                let (arm_span, mut semi_span) = if let hir::ExprKind::Block(blk, _) = &arm.body.kind\n+                {\n                     self.find_block_span(blk, prior_arm_ty)\n                 } else {\n                     (arm.body.span, None)\n                 };\n+                if semi_span.is_none() && i > 0 {\n+                    if let hir::ExprKind::Block(blk, _) = &arms[i - 1].body.kind {\n+                        let (_, semi_span_prev) = self.find_block_span(blk, Some(arm_ty));\n+                        semi_span = semi_span_prev;\n+                    }\n+                }\n                 let (span, code) = match i {\n                     // The reason for the first arm to fail is not that the match arms diverge,\n                     // but rather that there's a prior obligation that doesn't hold."}, {"sha": "d8d6de4bf5591a08a4b1ffaf69db000c593fee75", "filename": "src/test/ui/suggestions/match-prev-arm-needing-semi.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a4ee3ca1e4f1177516139a4704456958c7d08c91/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-prev-arm-needing-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4ee3ca1e4f1177516139a4704456958c7d08c91/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-prev-arm-needing-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-prev-arm-needing-semi.rs?ref=a4ee3ca1e4f1177516139a4704456958c7d08c91", "patch": "@@ -0,0 +1,32 @@\n+// edition:2018\n+\n+fn dummy() -> i32 { 42 }\n+\n+fn extra_semicolon() {\n+    let _ = match true { //~ NOTE `match` arms have incompatible types\n+        true => {\n+            dummy(); //~ NOTE this is found to be\n+            //~^ HELP consider removing this semicolon\n+        }\n+        false => dummy(), //~ ERROR `match` arms have incompatible types\n+        //~^ NOTE expected `()`, found `i32`\n+    };\n+}\n+\n+async fn async_dummy() {} //~ NOTE the `Output` of this `async fn`'s found opaque type\n+\n+async fn async_extra_semicolon_same() {\n+    let _ = match true { //~ NOTE `match` arms have incompatible types\n+        true => {\n+            async_dummy(); //~ NOTE this is found to be\n+            //~^ HELP consider removing this semicolon\n+        }\n+        false => async_dummy(), //~ ERROR `match` arms have incompatible types\n+        //~^ NOTE expected `()`, found opaque type\n+        //~| NOTE expected type `()`\n+        //~| HELP consider `await`ing on the `Future`\n+    };\n+}\n+\n+fn main() {}\n+"}, {"sha": "e242a018843a2865a3772ddc6069cb701330ea2f", "filename": "src/test/ui/suggestions/match-prev-arm-needing-semi.stderr", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/a4ee3ca1e4f1177516139a4704456958c7d08c91/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-prev-arm-needing-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ee3ca1e4f1177516139a4704456958c7d08c91/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-prev-arm-needing-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-prev-arm-needing-semi.stderr?ref=a4ee3ca1e4f1177516139a4704456958c7d08c91", "patch": "@@ -0,0 +1,53 @@\n+error[E0308]: `match` arms have incompatible types\n+  --> $DIR/match-prev-arm-needing-semi.rs:24:18\n+   |\n+LL |   async fn async_dummy() {}\n+   |                          - the `Output` of this `async fn`'s found opaque type\n+...\n+LL |       let _ = match true {\n+   |  _____________-\n+LL | |         true => {\n+LL | |             async_dummy();\n+   | |             -------------- this is found to be of type `()`\n+LL | |\n+LL | |         }\n+LL | |         false => async_dummy(),\n+   | |                  ^^^^^^^^^^^^^ expected `()`, found opaque type\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____- `match` arms have incompatible types\n+   |\n+   = note:     expected type `()`\n+           found opaque type `impl Future`\n+help: consider removing this semicolon\n+   |\n+LL |             async_dummy()\n+   |                         --\n+help: consider `await`ing on the `Future`\n+   |\n+LL |         false => async_dummy().await,\n+   |                               ^^^^^^\n+\n+error[E0308]: `match` arms have incompatible types\n+  --> $DIR/match-prev-arm-needing-semi.rs:11:18\n+   |\n+LL |       let _ = match true {\n+   |  _____________-\n+LL | |         true => {\n+LL | |             dummy();\n+   | |             --------\n+   | |             |      |\n+   | |             |      help: consider removing this semicolon\n+   | |             this is found to be of type `()`\n+LL | |\n+LL | |         }\n+LL | |         false => dummy(),\n+   | |                  ^^^^^^^ expected `()`, found `i32`\n+LL | |\n+LL | |     };\n+   | |_____- `match` arms have incompatible types\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}