{"sha": "5ead9731737ecfbd19a80d9aac2d34d0ac95711c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYWQ5NzMxNzM3ZWNmYmQxOWE4MGQ5YWFjMmQzNGQwYWM5NTcxMWM=", "commit": {"author": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2017-01-05T23:00:07Z"}, "committer": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2017-01-05T23:00:07Z"}, "message": "Add back in previous logic and remove span shrinking", "tree": {"sha": "bf30987cc33e7cc2b0279319a0a3509dbf0c72a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf30987cc33e7cc2b0279319a0a3509dbf0c72a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ead9731737ecfbd19a80d9aac2d34d0ac95711c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ead9731737ecfbd19a80d9aac2d34d0ac95711c", "html_url": "https://github.com/rust-lang/rust/commit/5ead9731737ecfbd19a80d9aac2d34d0ac95711c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ead9731737ecfbd19a80d9aac2d34d0ac95711c/comments", "author": null, "committer": null, "parents": [{"sha": "74e5b7d96af721b98474f6d4982b5eb594cd022c", "url": "https://api.github.com/repos/rust-lang/rust/commits/74e5b7d96af721b98474f6d4982b5eb594cd022c", "html_url": "https://github.com/rust-lang/rust/commit/74e5b7d96af721b98474f6d4982b5eb594cd022c"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "e1cfc64f3c728dca26042de2fe77e8d9a45a9bbc", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5ead9731737ecfbd19a80d9aac2d34d0ac95711c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ead9731737ecfbd19a80d9aac2d34d0ac95711c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=5ead9731737ecfbd19a80d9aac2d34d0ac95711c", "patch": "@@ -4565,7 +4565,6 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         // Check provided lifetime parameters.\n         let lifetime_defs = segment.map_or(&[][..], |(_, generics)| &generics.regions);\n         if lifetimes.len() > lifetime_defs.len() {\n-            let span = lifetimes[lifetime_defs.len()].span;\n             struct_span_err!(self.tcx.sess, span, E0088,\n                              \"too many lifetime parameters provided: \\\n                               expected {}, found {}\",\n@@ -4574,6 +4573,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 .span_label(span, &format!(\"unexpected lifetime parameter{}\",\n                                            match lifetimes.len() { 1 => \"\", _ => \"s\" }))\n                 .emit();\n+        } else if lifetimes.len() > 0 && lifetimes.len() < lifetime_defs.len() {\n+            struct_span_err!(self.tcx.sess, span, E0090,\n+                             \"too few lifetime parameters provided: \\\n+                             expected {}, found {}\",\n+                             count(lifetime_defs.len()),\n+                             count(lifetimes.len()))\n+                .span_label(span, &format!(\"too few lifetime parameters\"))\n+                .emit();\n         }\n \n         // The case where there is not enough lifetime parameters is not checked,"}]}