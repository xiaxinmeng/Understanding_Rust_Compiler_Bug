{"sha": "4765d1e358b86ea118c3aae0ff3b01bebbf9b5cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NjVkMWUzNThiODZlYTExOGMzYWFlMGZmM2IwMWJlYmJmOWI1Y2I=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-30T22:26:34Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-30T22:26:34Z"}, "message": "Fix another type bug I introduced yesterday; found through wondrous logging technology.", "tree": {"sha": "cd0666b6755a562ccd181b5e7d52b24c6127b8cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd0666b6755a562ccd181b5e7d52b24c6127b8cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4765d1e358b86ea118c3aae0ff3b01bebbf9b5cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4765d1e358b86ea118c3aae0ff3b01bebbf9b5cb", "html_url": "https://github.com/rust-lang/rust/commit/4765d1e358b86ea118c3aae0ff3b01bebbf9b5cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4765d1e358b86ea118c3aae0ff3b01bebbf9b5cb/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "335053eb68a33061f50e8bd8bfb1e5c2ddaaf763", "url": "https://api.github.com/repos/rust-lang/rust/commits/335053eb68a33061f50e8bd8bfb1e5c2ddaaf763", "html_url": "https://github.com/rust-lang/rust/commit/335053eb68a33061f50e8bd8bfb1e5c2ddaaf763"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0d4081af3dc679a911744abb7009a4d2ea4756c8", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4765d1e358b86ea118c3aae0ff3b01bebbf9b5cb/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/4765d1e358b86ea118c3aae0ff3b01bebbf9b5cb/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=4765d1e358b86ea118c3aae0ff3b01bebbf9b5cb", "patch": "@@ -522,7 +522,7 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n               let rec unify ty =\n                 match ty with\n                     Ast.TY_tup (elem_tys:Ast.ty array) ->\n-                      if (Array.length elem_tys) <> (Array.length tvs)\n+                      if (Array.length elem_tys) < (Array.length tvs)\n                       then fail ()\n                       else\n                         let check_elem i tv ="}]}