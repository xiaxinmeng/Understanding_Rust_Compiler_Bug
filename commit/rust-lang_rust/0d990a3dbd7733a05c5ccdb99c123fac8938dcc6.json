{"sha": "0d990a3dbd7733a05c5ccdb99c123fac8938dcc6", "node_id": "C_kwDOAAsO6NoAKDBkOTkwYTNkYmQ3NzMzYTA1YzVjY2RiOTljMTIzZmFjODkzOGRjYzY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-19T03:40:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-19T03:40:51Z"}, "message": "Rollup merge of #89867 - Urgau:fix-double-definition, r=GuillaumeGomez\n\nFix macro_rules! duplication when reexported in the same module\n\nThis can append if within the same module a `#[macro_export] macro_rules!`\nis declared but also a reexport of itself producing two export of the same\nmacro in the same module. In that case we only want to document it once.\n\nBefore:\n```\nModule {\n    is_crate: true,\n    items: [\n        Id(\"0:4\"),   // pub use crate::repro as repro2;\n        Id(\"0:3\"),   // macro_rules! repro\n        Id(\"0:3\"),   // duplicate, same as above\n    ],\n}\n```\n\nAfter:\n```\nModule {\n    is_crate: true,\n    items: [\n        Id(\"0:4\"),   // pub use crate::repro as repro2;\n        Id(\"0:3\"),   // macro_rules! repro\n    ],\n}\n```\n\nFixes https://github.com/rust-lang/rust/issues/89852", "tree": {"sha": "619a2d3d57669a78fc72b72d073df8391526b123", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/619a2d3d57669a78fc72b72d073df8391526b123"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhbj5DCRBK7hj4Ov3rIwAAP0cIAF3Zdktn1z0Y3Hc0HmFlZGqk\n/mymjN9AcLERA9Zz48oVSLUFGceAP+z9XbQ4oKzN3mZEiDK6Zv2VBSxBkSQzI5b/\n7WiCbAnogRZ0O3NJf2fpwr7RnInxxhsts5vvoESUkMnYCNbIdClIIb+R4UQrQm8o\nkjXWbhuHImKJsu8nTCryGypbCGtwYQ81jqFsYHpiAxnzdEyMGi264Lw8kxu5yucA\nS4odgNMsMHs8P6NrpoHwfc81iwTqzqVkiEOqejcaZgWJMn/a9dIbFe9Bv/z8C5ML\nplQTuEUfkDxSk/u9xsJJb3H8hNuVLXhv3OLGE/SYLUTDegdQvnT1qWZ8v4a9WB8=\n=0kTF\n-----END PGP SIGNATURE-----\n", "payload": "tree 619a2d3d57669a78fc72b72d073df8391526b123\nparent 54aa5477ac081e5675fdd29565ae0d27ffd13cab\nparent db5b64a484dbea09f1f39e0640662b50c6e934cd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634614851 +0200\ncommitter GitHub <noreply@github.com> 1634614851 +0200\n\nRollup merge of #89867 - Urgau:fix-double-definition, r=GuillaumeGomez\n\nFix macro_rules! duplication when reexported in the same module\n\nThis can append if within the same module a `#[macro_export] macro_rules!`\nis declared but also a reexport of itself producing two export of the same\nmacro in the same module. In that case we only want to document it once.\n\nBefore:\n```\nModule {\n    is_crate: true,\n    items: [\n        Id(\"0:4\"),   // pub use crate::repro as repro2;\n        Id(\"0:3\"),   // macro_rules! repro\n        Id(\"0:3\"),   // duplicate, same as above\n    ],\n}\n```\n\nAfter:\n```\nModule {\n    is_crate: true,\n    items: [\n        Id(\"0:4\"),   // pub use crate::repro as repro2;\n        Id(\"0:3\"),   // macro_rules! repro\n    ],\n}\n```\n\nFixes https://github.com/rust-lang/rust/issues/89852\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6", "html_url": "https://github.com/rust-lang/rust/commit/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54aa5477ac081e5675fdd29565ae0d27ffd13cab", "url": "https://api.github.com/repos/rust-lang/rust/commits/54aa5477ac081e5675fdd29565ae0d27ffd13cab", "html_url": "https://github.com/rust-lang/rust/commit/54aa5477ac081e5675fdd29565ae0d27ffd13cab"}, {"sha": "db5b64a484dbea09f1f39e0640662b50c6e934cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/db5b64a484dbea09f1f39e0640662b50c6e934cd", "html_url": "https://github.com/rust-lang/rust/commit/db5b64a484dbea09f1f39e0640662b50c6e934cd"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "3e853456fad77d48ee20e74dd20ab5d2ad862b0c", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=0d990a3dbd7733a05c5ccdb99c123fac8938dcc6", "patch": "@@ -87,13 +87,21 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         // the rexport defines the path that a user will actually see. Accordingly,\n         // we add the rexport as an item here, and then skip over the original\n         // definition in `visit_item()` below.\n+        //\n+        // We also skip `#[macro_export] macro_rules!` that have already been inserted,\n+        // it can happen if within the same module a `#[macro_export] macro_rules!`\n+        // is declared but also a reexport of itself producing two exports of the same\n+        // macro in the same module.\n+        let mut inserted = FxHashSet::default();\n         for export in self.cx.tcx.module_exports(CRATE_DEF_ID).unwrap_or(&[]) {\n             if let Res::Def(DefKind::Macro(_), def_id) = export.res {\n                 if let Some(local_def_id) = def_id.as_local() {\n                     if self.cx.tcx.has_attr(def_id, sym::macro_export) {\n-                        let hir_id = self.cx.tcx.hir().local_def_id_to_hir_id(local_def_id);\n-                        let item = self.cx.tcx.hir().expect_item(hir_id);\n-                        top_level_module.items.push((item, None));\n+                        if inserted.insert(def_id) {\n+                            let hir_id = self.cx.tcx.hir().local_def_id_to_hir_id(local_def_id);\n+                            let item = self.cx.tcx.hir().expect_item(hir_id);\n+                            top_level_module.items.push((item, None));\n+                        }\n                     }\n                 }\n             }"}, {"sha": "b86614ffbad68d874c37c88e248a9120fca76cb1", "filename": "src/test/rustdoc-json/reexport/macro.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6/src%2Ftest%2Frustdoc-json%2Freexport%2Fmacro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6/src%2Ftest%2Frustdoc-json%2Freexport%2Fmacro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fmacro.rs?ref=0d990a3dbd7733a05c5ccdb99c123fac8938dcc6", "patch": "@@ -0,0 +1,17 @@\n+// edition:2018\n+\n+#![no_core]\n+#![feature(no_core)]\n+\n+// @count macro.json \"$.index[*][?(@.name=='macro')].inner.items[*]\" 2\n+\n+// @set repro_id = macro.json \"$.index[*][?(@.name=='repro')].id\"\n+// @has - \"$.index[*][?(@.name=='macro')].inner.items[*]\" $repro_id\n+#[macro_export]\n+macro_rules! repro {\n+    () => {};\n+}\n+\n+// @set repro2_id = macro.json \"$.index[*][?(@.inner.name=='repro2')].id\"\n+// @has - \"$.index[*][?(@.name=='macro')].inner.items[*]\" $repro2_id\n+pub use crate::repro as repro2;"}, {"sha": "45544dbeea6a0e18346f383954affd95a3a07e1b", "filename": "src/test/rustdoc/issue-89852.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6/src%2Ftest%2Frustdoc%2Fissue-89852.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d990a3dbd7733a05c5ccdb99c123fac8938dcc6/src%2Ftest%2Frustdoc%2Fissue-89852.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-89852.rs?ref=0d990a3dbd7733a05c5ccdb99c123fac8938dcc6", "patch": "@@ -0,0 +1,14 @@\n+// edition:2018\n+\n+#![no_core]\n+#![feature(no_core)]\n+\n+// @matches 'issue_89852/sidebar-items.js' '\"repro\"'\n+// @!matches 'issue_89852/sidebar-items.js' '\"repro\".*\"repro\"'\n+\n+#[macro_export]\n+macro_rules! repro {\n+    () => {};\n+}\n+\n+pub use crate::repro as repro2;"}]}