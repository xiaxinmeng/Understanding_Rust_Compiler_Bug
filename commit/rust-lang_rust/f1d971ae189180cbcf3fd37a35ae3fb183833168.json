{"sha": "f1d971ae189180cbcf3fd37a35ae3fb183833168", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZDk3MWFlMTg5MTgwY2JjZjNmZDM3YTM1YWUzZmIxODM4MzMxNjg=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-17T07:05:51Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-17T07:05:51Z"}, "message": "std: add Zero impls for &[] and &str.", "tree": {"sha": "74274e80f0cf17ed86b195351b77cdebd53569a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74274e80f0cf17ed86b195351b77cdebd53569a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1d971ae189180cbcf3fd37a35ae3fb183833168", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1d971ae189180cbcf3fd37a35ae3fb183833168", "html_url": "https://github.com/rust-lang/rust/commit/f1d971ae189180cbcf3fd37a35ae3fb183833168", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1d971ae189180cbcf3fd37a35ae3fb183833168/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1a2360b36fc43b818877d80a1bc8fd907032d00", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a2360b36fc43b818877d80a1bc8fd907032d00", "html_url": "https://github.com/rust-lang/rust/commit/d1a2360b36fc43b818877d80a1bc8fd907032d00"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "d8aab1a8dcc5f7fc6ca64079ecf3d0e297ffb7d8", "filename": "src/libstd/str.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f1d971ae189180cbcf3fd37a35ae3fb183833168/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1d971ae189180cbcf3fd37a35ae3fb183833168/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=f1d971ae189180cbcf3fd37a35ae3fb183833168", "patch": "@@ -2202,6 +2202,12 @@ impl<'self> Iterator<u8> for StrBytesRevIterator<'self> {\n     }\n }\n \n+// This works because every lifetime is a sub-lifetime of 'static\n+impl<'self> Zero for &'self str {\n+    fn zero() -> &'self str { \"\" }\n+    fn is_zero(&self) -> bool { self.is_empty() }\n+}\n+\n impl Zero for ~str {\n     fn zero() -> ~str { ~\"\" }\n     fn is_zero(&self) -> bool { self.len() == 0 }\n@@ -3317,4 +3323,18 @@ mod tests {\n         t(\"zzz\", \"zz\", ~[\"\",\"z\"]);\n         t(\"zzzzz\", \"zz\", ~[\"\",\"\",\"z\"]);\n     }\n+\n+    #[test]\n+    fn test_str_zero() {\n+        use num::Zero;\n+        fn t<S: Zero + Str>() {\n+            let s: S = Zero::zero();\n+            assert_eq!(s.as_slice(), \"\");\n+            assert!(s.is_zero());\n+        }\n+\n+        t::<&str>();\n+        t::<@str>();\n+        t::<~str>();\n+    }\n }"}, {"sha": "cdd9d71273aecefde41216f7247c133bbdcc13ed", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f1d971ae189180cbcf3fd37a35ae3fb183833168/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1d971ae189180cbcf3fd37a35ae3fb183833168/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=f1d971ae189180cbcf3fd37a35ae3fb183833168", "patch": "@@ -2629,6 +2629,12 @@ impl<A:Clone> Clone for ~[A] {\n     }\n }\n \n+// This works because every lifetime is a sub-lifetime of 'static\n+impl<'self, A> Zero for &'self [A] {\n+    fn zero() -> &'self [A] { &'self [] }\n+    fn is_zero(&self) -> bool { self.is_empty() }\n+}\n+\n impl<A> Zero for ~[A] {\n     fn zero() -> ~[A] { ~[] }\n     fn is_zero(&self) -> bool { self.len() == 0 }\n@@ -4293,4 +4299,20 @@ mod tests {\n         }\n         assert_eq!(v, ~[~[1,2,3],~[1,3,2],~[2,1,3],~[2,3,1],~[3,1,2],~[3,2,1]]);\n     }\n+\n+    #[test]\n+    fn test_vec_zero() {\n+        use num::Zero;\n+        macro_rules! t (\n+            ($ty:ty) => {\n+                let v: $ty = Zero::zero();\n+                assert!(v.is_empty());\n+                assert!(v.is_zero());\n+            }\n+        );\n+\n+        t!(&[int]);\n+        t!(@[int]);\n+        t!(~[int]);\n+    }\n }"}]}