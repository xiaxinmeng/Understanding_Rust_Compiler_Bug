{"sha": "3372b899d894a4f5c05f6deaa25889b384a4a12f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNzJiODk5ZDg5NGE0ZjVjMDVmNmRlYWEyNTg4OWIzODRhNGExMmY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-10-10T17:25:04Z"}, "committer": {"name": "Paul Daniel Faria", "email": "pfaria@localhost.localdomain", "date": "2017-10-13T12:42:54Z"}, "message": "Mark free regions handling as TODO", "tree": {"sha": "a026d80a4541e54aeeff6469fd752fc6db14b6f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a026d80a4541e54aeeff6469fd752fc6db14b6f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3372b899d894a4f5c05f6deaa25889b384a4a12f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3372b899d894a4f5c05f6deaa25889b384a4a12f", "html_url": "https://github.com/rust-lang/rust/commit/3372b899d894a4f5c05f6deaa25889b384a4a12f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3372b899d894a4f5c05f6deaa25889b384a4a12f/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc2a1c7bd8e3271919dad8719e53c9d3ff007e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc2a1c7bd8e3271919dad8719e53c9d3ff007e2a", "html_url": "https://github.com/rust-lang/rust/commit/cc2a1c7bd8e3271919dad8719e53c9d3ff007e2a"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "3ffe6b9f4fc51a699e8b79596ac66cdfccad2e4f", "filename": "src/librustc_mir/transform/nll/infer.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3372b899d894a4f5c05f6deaa25889b384a4a12f/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3372b899d894a4f5c05f6deaa25889b384a4a12f/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs?ref=3372b899d894a4f5c05f6deaa25889b384a4a12f", "patch": "@@ -184,18 +184,19 @@ impl<'a, 'gcx: 'tcx, 'tcx: 'a> Dfs<'a, 'gcx, 'tcx> {\n             };\n \n             if successor_points.is_empty() {\n+                // TODO handle free regions\n                 // If we reach the END point in the graph, then copy\n                 // over any skolemized end points in the `from_region`\n                 // and make sure they are included in the `to_region`.\n-                for region_decl in self.infcx.tcx.tables.borrow().free_region_map() {\n-                    // TODO(nashenas88) figure out skolemized_end points\n-                    let block = self.env.graph.skolemized_end(region_decl.name);\n-                    let skolemized_end_point = Location {\n-                        block,\n-                        statement_index: 0,\n-                    };\n-                    changed |= to_region.add_point(skolemized_end_point);\n-                }\n+                // for region_decl in self.infcx.tcx.tables.borrow().free_region_map() {\n+                //     // TODO(nashenas88) figure out skolemized_end points\n+                //     let block = self.env.graph.skolemized_end(region_decl.name);\n+                //     let skolemized_end_point = Location {\n+                //         block,\n+                //         statement_index: 0,\n+                //     };\n+                //     changed |= to_region.add_point(skolemized_end_point);\n+                // }\n             } else {\n                 stack.extend(successor_points);\n             }"}]}