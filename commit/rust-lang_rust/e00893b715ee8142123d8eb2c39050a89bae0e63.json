{"sha": "e00893b715ee8142123d8eb2c39050a89bae0e63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMDg5M2I3MTVlZTgxNDIxMjNkOGViMmMzOTA1MGE4OWJhZTBlNjM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-06T15:42:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-06T15:42:31Z"}, "message": "Rollup merge of #83895 - eggyal:issue-83883, r=jyn514\n\nAdd listing of lints (eg via `-W help`) to rustdoc\n\nFixes #83883\n\nr? `@jyn514`", "tree": {"sha": "0fabcc903bf9865ffa8a37a7097a49ed5a028ecb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fabcc903bf9865ffa8a37a7097a49ed5a028ecb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e00893b715ee8142123d8eb2c39050a89bae0e63", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgbIFnCRBK7hj4Ov3rIwAAdHIIAKYecAyYGqtrX91OhcJ/V8Yk\nIgb0FC2WngSFqCm+P9gjhoXlexMl5yI5Z9uPm6nbncPtaMsKTfkc80egpPow1ccT\n6kh3NVficK0y54RcZ6XEsUFsh8OhVlDjxEUW7jqbysdVU8BD60tw7cDlDuLVMQTg\nAZJujawzaKIcondD9pcTpI+jKurts0Zzwtsi+/heyP3H5JtK6YxengyBPCTDx5Kw\n6s9LLcXuyCBQMHEcVJiv2P9+VaiZDC5JJQBwB4F+xMBY43ULZ+u6nB4lT/HAmHjN\nBKVstv+IeRrV9PdEhLPeXrx3xyB00EtgP7knNA2djkeDGycMZMaERMl2X49Xwvk=\n=If37\n-----END PGP SIGNATURE-----\n", "payload": "tree 0fabcc903bf9865ffa8a37a7097a49ed5a028ecb\nparent 93b506c6fad803dade4872ef3e1d9cef9e7afd15\nparent 4d23c8e9a162a91c4e25f75285353be938ea1f25\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617723751 +0200\ncommitter GitHub <noreply@github.com> 1617723751 +0200\n\nRollup merge of #83895 - eggyal:issue-83883, r=jyn514\n\nAdd listing of lints (eg via `-W help`) to rustdoc\n\nFixes #83883\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e00893b715ee8142123d8eb2c39050a89bae0e63", "html_url": "https://github.com/rust-lang/rust/commit/e00893b715ee8142123d8eb2c39050a89bae0e63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e00893b715ee8142123d8eb2c39050a89bae0e63/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93b506c6fad803dade4872ef3e1d9cef9e7afd15", "url": "https://api.github.com/repos/rust-lang/rust/commits/93b506c6fad803dade4872ef3e1d9cef9e7afd15", "html_url": "https://github.com/rust-lang/rust/commit/93b506c6fad803dade4872ef3e1d9cef9e7afd15"}, {"sha": "4d23c8e9a162a91c4e25f75285353be938ea1f25", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d23c8e9a162a91c4e25f75285353be938ea1f25", "html_url": "https://github.com/rust-lang/rust/commit/4d23c8e9a162a91c4e25f75285353be938ea1f25"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "51699403a3705dd0d77321da2d1c309bcad6192b", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e00893b715ee8142123d8eb2c39050a89bae0e63/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00893b715ee8142123d8eb2c39050a89bae0e63/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=e00893b715ee8142123d8eb2c39050a89bae0e63", "patch": "@@ -845,7 +845,8 @@ the command line flag directly.\n     );\n }\n \n-fn describe_lints(sess: &Session, lint_store: &LintStore, loaded_plugins: bool) {\n+/// Write to stdout lint command options, together with a list of all available lints\n+pub fn describe_lints(sess: &Session, lint_store: &LintStore, loaded_plugins: bool) {\n     println!(\n         \"\n Available lint options:"}, {"sha": "c374e1f8d102cc8473848a8d54085052480c0de1", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e00893b715ee8142123d8eb2c39050a89bae0e63/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00893b715ee8142123d8eb2c39050a89bae0e63/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=e00893b715ee8142123d8eb2c39050a89bae0e63", "patch": "@@ -97,8 +97,7 @@ crate struct Options {\n     crate maybe_sysroot: Option<PathBuf>,\n     /// Lint information passed over the command-line.\n     crate lint_opts: Vec<(String, Level)>,\n-    /// Whether to ask rustc to describe the lints it knows. Practically speaking, this will not be\n-    /// used, since we abort if we have no input file, but it's included for completeness.\n+    /// Whether to ask rustc to describe the lints it knows.\n     crate describe_lints: bool,\n     /// What level to cap lints at.\n     crate lint_cap: Option<Level>,"}, {"sha": "241aa1f12df7e5e61d4e29265237915a53b1ae80", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e00893b715ee8142123d8eb2c39050a89bae0e63/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00893b715ee8142123d8eb2c39050a89bae0e63/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e00893b715ee8142123d8eb2c39050a89bae0e63", "patch": "@@ -74,7 +74,7 @@ use std::default::Default;\n use std::env;\n use std::process;\n \n-use rustc_driver::abort_on_err;\n+use rustc_driver::{abort_on_err, describe_lints};\n use rustc_errors::ErrorReported;\n use rustc_interface::interface;\n use rustc_middle::ty::TyCtxt;\n@@ -705,6 +705,12 @@ fn main_options(options: config::Options) -> MainResult {\n         compiler.enter(|queries| {\n             let sess = compiler.session();\n \n+            if sess.opts.describe_lints {\n+                let (_, lint_store) = &*queries.register_plugins()?.peek();\n+                describe_lints(sess, lint_store, true);\n+                return Ok(());\n+            }\n+\n             // We need to hold on to the complete resolver, so we cause everything to be\n             // cloned for the analysis passes to use. Suboptimal, but necessary in the\n             // current architecture."}, {"sha": "a261b782d48593aa4e68122f88a07e4c96fed15c", "filename": "src/test/rustdoc-ui/issue-83883-describe-lints.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e00893b715ee8142123d8eb2c39050a89bae0e63/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00893b715ee8142123d8eb2c39050a89bae0e63/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs?ref=e00893b715ee8142123d8eb2c39050a89bae0e63", "patch": "@@ -0,0 +1,8 @@\n+// compile-flags: -W help\n+// check-pass\n+//\n+// ignore-tidy-linelength\n+//\n+// normalize-stdout-test: \"( +name  default  meaning\\n +----  -------  -------\\n)?( *[[:word:]:-]+  (allow  |warn   |deny   |forbid )  [^\\n]+\\n)+\" -> \"    $$NAMES  $$LEVELS  $$MEANINGS\"\n+// normalize-stdout-test: \" +name  sub-lints\\n +----  ---------\\n( *[[:word:]:-]+  [^\\n]+\\n)+\" -> \"    $$NAMES  $$SUB_LINTS\"\n+// normalize-stdout-test: \" +rustdoc::all(  (rustdoc::[[:word:]-]+, )*rustdoc::[[:word:]-]+)?\" -> \"    rustdoc::all  $$GROUPS$4\""}, {"sha": "651faf5761f18ff22b94fbc07ecdfb298efcfa9b", "filename": "src/test/rustdoc-ui/issue-83883-describe-lints.stdout", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e00893b715ee8142123d8eb2c39050a89bae0e63/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e00893b715ee8142123d8eb2c39050a89bae0e63/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout?ref=e00893b715ee8142123d8eb2c39050a89bae0e63", "patch": "@@ -0,0 +1,25 @@\n+\n+Available lint options:\n+    -W <foo>           Warn about <foo>\n+    -A <foo>           Allow <foo>\n+    -D <foo>           Deny <foo>\n+    -F <foo>           Forbid <foo> (deny <foo> and all attempts to override)\n+\n+\n+Lint checks provided by rustc:\n+\n+    $NAMES  $LEVELS  $MEANINGS\n+\n+Lint groups provided by rustc:\n+\n+    $NAMES  $SUB_LINTS\n+\n+Lint checks provided by plugins loaded by this crate:\n+\n+    $NAMES  $LEVELS  $MEANINGS\n+\n+Lint groups provided by plugins loaded by this crate:\n+\n+    rustdoc::all  $GROUPS\n+\n+"}]}