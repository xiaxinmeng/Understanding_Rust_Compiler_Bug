{"sha": "8f4417faf24e18359a344945ff1072b54f354f77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNDQxN2ZhZjI0ZTE4MzU5YTM0NDk0NWZmMTA3MmI1NGYzNTRmNzc=", "commit": {"author": {"name": "daxpedda", "email": "daxpedda@gmail.com", "date": "2021-04-10T15:45:55Z"}, "committer": {"name": "daxpedda", "email": "daxpedda@gmail.com", "date": "2021-04-10T15:45:55Z"}, "message": "Fix rustfmt", "tree": {"sha": "42b414a52c23aed8658d98bb06f993ce61761aa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42b414a52c23aed8658d98bb06f993ce61761aa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f4417faf24e18359a344945ff1072b54f354f77", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3qx/rJh59vdc2+v9Q9YqPqOI5G8FAmBxyDMACgkQQ9YqPqOI\n5G/QgBAAiTQ0rskHMGQUWx3nyL1gaenHV56Klpoxl1jugiS6hmZaHbFfjUv5R5Ow\nhpw0A3FQfJtW4JUsoMHSDjHL2IKtNmJ+YabNwu5cNBthRMsh5zMuahw6DIS1PGLu\nW76/LtIYGnVg1Gd0Qqh6ddTJ2GPMLUU7/jYOF9NfkYtaYJ0ILclhnjtr8FTCeGu1\n8GmoxnRPU3HAqBwtyy16GEhhBNGD2uoWOd9VH9ocohoLIAROhM5nRwhsK3FTskuk\nwi1/qtCc+iGVEvx6PmFLS3M4HiqBrQWUm86Hv1fBj4aKgFIJKoz1+hGfZ+PqzLFh\ntic6VZx8BvuIVftA/UawQ4vh0qwzULd/RORTQmZkplFmCINxsNz36UVw/LaGtLhr\n4+mqywmGLc+1eN9rBu1tVYEr0BxMVf2RlV5QSdLQ4ZRMoIVBqkdFP/6qLF+1y0OF\nlweDXTMW0Vlf3v+AqBA1mtmoWWemAbxhW6rr9f6FtN6vw+e9hLO4pdrHS/VNfaHp\npgm1eg/pM9K4UU1QSEFXO34eVtl0hrXQFveqaM8pbiuVdBZZdTBI1vAAHUoKtKQu\n03FEHSMKz19NHoobszJR72jfrCpubRV1K8X5wDvFx8+pcORDM7ea5cOO155SLq5W\nUxMHkkubT2r/oXkENRFOpt/gWYi+IoTjaqhIt+o7BKaHAOM9Sc8=\n=pJ7n\n-----END PGP SIGNATURE-----", "payload": "tree 42b414a52c23aed8658d98bb06f993ce61761aa5\nparent 43e6c656ba0f221caace290b8a8deace2abd89cd\nauthor daxpedda <daxpedda@gmail.com> 1618069555 +0200\ncommitter daxpedda <daxpedda@gmail.com> 1618069555 +0200\n\nFix rustfmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4417faf24e18359a344945ff1072b54f354f77", "html_url": "https://github.com/rust-lang/rust/commit/8f4417faf24e18359a344945ff1072b54f354f77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f4417faf24e18359a344945ff1072b54f354f77/comments", "author": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e6c656ba0f221caace290b8a8deace2abd89cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/43e6c656ba0f221caace290b8a8deace2abd89cd", "html_url": "https://github.com/rust-lang/rust/commit/43e6c656ba0f221caace290b8a8deace2abd89cd"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "c4fcd7e70944c5ebc974916f88b81877a6c83102", "filename": "tests/ui/panic_in_result_fn_debug_assertions.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8f4417faf24e18359a344945ff1072b54f354f77/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4417faf24e18359a344945ff1072b54f354f77/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs?ref=8f4417faf24e18359a344945ff1072b54f354f77", "patch": "@@ -6,41 +6,34 @@\n struct A;\n \n impl A {\n-    fn result_with_debug_assert_with_message(x: i32) -> Result<bool, String>\n-    {\n+    fn result_with_debug_assert_with_message(x: i32) -> Result<bool, String> {\n         debug_assert!(x == 5, \"wrong argument\");\n         Ok(true)\n     }\n \n-    fn result_with_debug_assert_eq(x: i32) -> Result<bool, String>\n-    {\n+    fn result_with_debug_assert_eq(x: i32) -> Result<bool, String> {\n         debug_assert_eq!(x, 5);\n         Ok(true)\n     }\n \n-    fn result_with_debug_assert_ne(x: i32) -> Result<bool, String>\n-    {\n+    fn result_with_debug_assert_ne(x: i32) -> Result<bool, String> {\n         debug_assert_ne!(x, 1);\n         Ok(true)\n     }\n \n-    fn other_with_debug_assert_with_message(x: i32)\n-    {\n+    fn other_with_debug_assert_with_message(x: i32) {\n         debug_assert!(x == 5, \"wrong argument\");\n     }\n \n-    fn other_with_debug_assert_eq(x: i32)\n-    {\n+    fn other_with_debug_assert_eq(x: i32) {\n         debug_assert_eq!(x, 5);\n     }\n \n-    fn other_with_debug_assert_ne(x: i32)\n-    {\n+    fn other_with_debug_assert_ne(x: i32) {\n         debug_assert_ne!(x, 1);\n     }\n \n-    fn result_without_banned_functions() -> Result<bool, String>\n-    {\n+    fn result_without_banned_functions() -> Result<bool, String> {\n         let debug_assert = \"debug_assert!\";\n         println!(\"No {}\", debug_assert);\n         Ok(true)"}]}