{"sha": "d3518058e2d47ec04aa8b9756b5d4398bce19faf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNTE4MDU4ZTJkNDdlYzA0YWE4Yjk3NTZiNWQ0Mzk4YmNlMTlmYWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-25T21:46:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-25T21:46:15Z"}, "message": "Auto merge of #49212 - kyrias:strip-debug-no-debuginfo, r=michaelwoerister\n\nPass --strip-debug to GccLinker when building without debuginfo\n\nC.f. #46034\n\n---\n\nThis brings a hello-world built by passing rustc no command line options from 2.9M to 592K on Linux.\n\n(This might need to special case MacOS or Windows, not sure if the linkers there support `--strip-debug`, and there is an annoying lack of dependable docs for the linkers there.)", "tree": {"sha": "2133d30b43b03d5f2c847817636527d4560c8554", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2133d30b43b03d5f2c847817636527d4560c8554"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3518058e2d47ec04aa8b9756b5d4398bce19faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3518058e2d47ec04aa8b9756b5d4398bce19faf", "html_url": "https://github.com/rust-lang/rust/commit/d3518058e2d47ec04aa8b9756b5d4398bce19faf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3518058e2d47ec04aa8b9756b5d4398bce19faf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "482a913fb337855072a53c0d602cd19947f45285", "url": "https://api.github.com/repos/rust-lang/rust/commits/482a913fb337855072a53c0d602cd19947f45285", "html_url": "https://github.com/rust-lang/rust/commit/482a913fb337855072a53c0d602cd19947f45285"}, {"sha": "2f0dd4a8f0717bc50430817552cd8c9890fc60aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f0dd4a8f0717bc50430817552cd8c9890fc60aa", "html_url": "https://github.com/rust-lang/rust/commit/2f0dd4a8f0717bc50430817552cd8c9890fc60aa"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "31795d0ff4c9083da1f3f9f216250a594c0a750f", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3518058e2d47ec04aa8b9756b5d4398bce19faf/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3518058e2d47ec04aa8b9756b5d4398bce19faf/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=d3518058e2d47ec04aa8b9756b5d4398bce19faf", "patch": "@@ -1294,6 +1294,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"format compiler diagnostics in a way that's better suitable for UI testing\"),\n     embed_bitcode: bool = (false, parse_bool, [TRACKED],\n           \"embed LLVM bitcode in object files\"),\n+    strip_debuginfo_if_disabled: Option<bool> = (None, parse_opt_bool, [TRACKED],\n+        \"tell the linker to strip debuginfo when building without debuginfo enabled.\"),\n }\n \n pub fn default_lib_output() -> CrateType {"}, {"sha": "53a9dd6a76fcd5b58316cab54a66c69c4d5dbebc", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d3518058e2d47ec04aa8b9756b5d4398bce19faf/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3518058e2d47ec04aa8b9756b5d4398bce19faf/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=d3518058e2d47ec04aa8b9756b5d4398bce19faf", "patch": "@@ -281,7 +281,18 @@ impl<'a> Linker for GccLinker<'a> {\n     }\n \n     fn debuginfo(&mut self) {\n-        // Don't do anything special here for GNU-style linkers.\n+        match self.sess.opts.debuginfo {\n+            DebugInfoLevel::NoDebugInfo => {\n+                // If we are building without debuginfo enabled and we were called with\n+                // `-Zstrip-debuginfo-if-disabled=yes`, tell the linker to strip any debuginfo\n+                // found when linking to get rid of symbols from libstd.\n+                match self.sess.opts.debugging_opts.strip_debuginfo_if_disabled {\n+                    Some(true) => { self.linker_arg(\"-S\"); },\n+                    _ => {},\n+                }\n+            },\n+            _ => {},\n+        };\n     }\n \n     fn no_default_libraries(&mut self) {"}]}