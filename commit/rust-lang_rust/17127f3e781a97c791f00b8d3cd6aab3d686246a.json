{"sha": "17127f3e781a97c791f00b8d3cd6aab3d686246a", "node_id": "C_kwDOAAsO6NoAKDE3MTI3ZjNlNzgxYTk3Yzc5MWYwMGI4ZDNjZDZhYWIzZDY4NjI0NmE", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-02-21T21:11:16Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-13T13:31:54Z"}, "message": "resolve: Remove `visibility_untracked`", "tree": {"sha": "fed83ff0937cdc26e58feba5375ebbeb321042ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fed83ff0937cdc26e58feba5375ebbeb321042ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17127f3e781a97c791f00b8d3cd6aab3d686246a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17127f3e781a97c791f00b8d3cd6aab3d686246a", "html_url": "https://github.com/rust-lang/rust/commit/17127f3e781a97c791f00b8d3cd6aab3d686246a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17127f3e781a97c791f00b8d3cd6aab3d686246a/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d610b0c514b9ccb0dad5d0b77ce4c518f71b92c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d610b0c514b9ccb0dad5d0b77ce4c518f71b92c8", "html_url": "https://github.com/rust-lang/rust/commit/d610b0c514b9ccb0dad5d0b77ce4c518f71b92c8"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "119011a9726d2b78dc90965ea615c993effe1704", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17127f3e781a97c791f00b8d3cd6aab3d686246a/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17127f3e781a97c791f00b8d3cd6aab3d686246a/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=17127f3e781a97c791f00b8d3cd6aab3d686246a", "patch": "@@ -526,10 +526,6 @@ impl CStore {\n         self.get_crate_data(def.krate).get_ctor(def.index)\n     }\n \n-    pub fn visibility_untracked(&self, def: DefId) -> Visibility<DefId> {\n-        self.get_crate_data(def.krate).get_visibility(def.index)\n-    }\n-\n     pub fn module_children_untracked<'a>(\n         &'a self,\n         def_id: DefId,"}, {"sha": "586c4b022ab2d87559b188e8b04571e5cc3b265d", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/17127f3e781a97c791f00b8d3cd6aab3d686246a/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17127f3e781a97c791f00b8d3cd6aab3d686246a/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=17127f3e781a97c791f00b8d3cd6aab3d686246a", "patch": "@@ -1007,18 +1007,15 @@ impl<'a, 'b, 'tcx> BuildReducedGraphVisitor<'a, 'b, 'tcx> {\n         // Record some extra data for better diagnostics.\n         match res {\n             Res::Def(DefKind::Struct, def_id) => {\n-                let cstore = self.r.cstore();\n-                if let Some((ctor_kind, ctor_def_id)) = cstore.ctor_untracked(def_id) {\n+                let ctor = self.r.cstore().ctor_untracked(def_id);\n+                if let Some((ctor_kind, ctor_def_id)) = ctor {\n                     let ctor_res = Res::Def(DefKind::Ctor(CtorOf::Struct, ctor_kind), ctor_def_id);\n-                    let ctor_vis = cstore.visibility_untracked(ctor_def_id);\n+                    let ctor_vis = self.r.tcx.visibility(ctor_def_id);\n                     let field_visibilities =\n-                        cstore.struct_field_visibilities_untracked(def_id).collect();\n-                    drop(cstore);\n+                        self.r.cstore().struct_field_visibilities_untracked(def_id).collect();\n                     self.r\n                         .struct_constructors\n                         .insert(def_id, (ctor_res, ctor_vis, field_visibilities));\n-                } else {\n-                    drop(cstore);\n                 }\n                 self.insert_field_names_extern(def_id)\n             }"}]}