{"sha": "a9979c0ae45eee5e6446b389b7f5cc12bfaf5519", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OTc5YzBhZTQ1ZWVlNWU2NDQ2YjM4OWI3ZjVjYzEyYmZhZjU1MTk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-08-10T15:29:03Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-08-12T03:24:11Z"}, "message": "switch over some newtyped enums to structs", "tree": {"sha": "e77e9dc9cdd924664a585c704076f0f967d42b74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e77e9dc9cdd924664a585c704076f0f967d42b74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9979c0ae45eee5e6446b389b7f5cc12bfaf5519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9979c0ae45eee5e6446b389b7f5cc12bfaf5519", "html_url": "https://github.com/rust-lang/rust/commit/a9979c0ae45eee5e6446b389b7f5cc12bfaf5519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9979c0ae45eee5e6446b389b7f5cc12bfaf5519/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d2bef53aa99564c2da205fb7e17271707d0a03b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d2bef53aa99564c2da205fb7e17271707d0a03b", "html_url": "https://github.com/rust-lang/rust/commit/6d2bef53aa99564c2da205fb7e17271707d0a03b"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "9d34e67e52a4b6f2256f0772e3144999c2e5d428", "filename": "src/rustc/middle/typeck/infer.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a9979c0ae45eee5e6446b389b7f5cc12bfaf5519/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9979c0ae45eee5e6446b389b7f5cc12bfaf5519/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs?ref=a9979c0ae45eee5e6446b389b7f5cc12bfaf5519", "patch": "@@ -291,16 +291,16 @@ enum var_value<V:copy, T:copy> {\n     root(T, uint),\n }\n \n-type vals_and_bindings<V:copy, T:copy> = {\n-    vals: smallintmap<var_value<V, T>>,\n-    mut bindings: ~[(V, var_value<V, T>)]\n-};\n+struct vals_and_bindings<V:copy, T:copy> {\n+    vals: smallintmap<var_value<V, T>>;\n+    mut bindings: ~[(V, var_value<V, T>)];\n+}\n \n-enum node<V:copy, T:copy> = {\n-    root: V,\n-    possible_types: T,\n-    rank: uint,\n-};\n+struct node<V:copy, T:copy> {\n+    root: V;\n+    possible_types: T;\n+    rank: uint;\n+}\n \n enum infer_ctxt = @{\n     tcx: ty::ctxt,\n@@ -353,7 +353,10 @@ type ures = result::result<(), ty::type_err>;\n type fres<T> = result::result<T, fixup_err>;\n \n fn new_vals_and_bindings<V:copy, T:copy>() -> vals_and_bindings<V, T> {\n-    {vals: smallintmap::mk(), mut bindings: ~[]}\n+    vals_and_bindings {\n+        vals: smallintmap::mk(),\n+        mut bindings: ~[]\n+    }\n }\n \n fn new_infer_ctxt(tcx: ty::ctxt) -> infer_ctxt {\n@@ -727,15 +730,15 @@ impl infer_ctxt {\n           some(var_val) => {\n             match var_val {\n               redirect(vid) => {\n-                let nde = self.get(vb, vid);\n-                if nde.root != vid {\n+                let node = self.get(vb, vid);\n+                if node.root != vid {\n                     // Path compression\n-                    vb.vals.insert(vid.to_uint(), redirect(nde.root));\n+                    vb.vals.insert(vid.to_uint(), redirect(node.root));\n                 }\n-                nde\n+                node\n               }\n               root(pt, rk) => {\n-                node({root: vid, possible_types: pt, rank: rk})\n+                node {root: vid, possible_types: pt, rank: rk}\n               }\n             }\n           }"}]}