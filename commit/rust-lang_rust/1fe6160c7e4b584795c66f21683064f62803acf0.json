{"sha": "1fe6160c7e4b584795c66f21683064f62803acf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZTYxNjBjN2U0YjU4NDc5NWM2NmYyMTY4MzA2NGY2MjgwM2FjZjA=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-07-09T07:59:34Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-08-19T08:49:54Z"}, "message": "Fix ICE with `impl Trait` in type bounds", "tree": {"sha": "55fcfc79105b54cc97a1f2c4df1d98236a3f9fc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55fcfc79105b54cc97a1f2c4df1d98236a3f9fc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fe6160c7e4b584795c66f21683064f62803acf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fe6160c7e4b584795c66f21683064f62803acf0", "html_url": "https://github.com/rust-lang/rust/commit/1fe6160c7e4b584795c66f21683064f62803acf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fe6160c7e4b584795c66f21683064f62803acf0/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3620456fafa04505c23511aa07d34f704ee7c84b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3620456fafa04505c23511aa07d34f704ee7c84b", "html_url": "https://github.com/rust-lang/rust/commit/3620456fafa04505c23511aa07d34f704ee7c84b"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "ba792a413b3c44a1f0840d694b43d2e59251c244", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1fe6160c7e4b584795c66f21683064f62803acf0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fe6160c7e4b584795c66f21683064f62803acf0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=1fe6160c7e4b584795c66f21683064f62803acf0", "patch": "@@ -1725,7 +1725,7 @@ impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics,\n         let mut impl_trait_proj =\n             FxHashMap::<u32, Vec<(DefId, String, Ty<'tcx>)>>::default();\n \n-        let mut where_predicates = preds.predicates.iter()\n+        let where_predicates = preds.predicates.iter()\n             .flat_map(|(p, _)| {\n                 let mut projection = None;\n                 let param_idx = (|| {\n@@ -1747,10 +1747,10 @@ impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics,\n                     None\n                 })();\n \n-                let p = p.clean(cx)?;\n-\n                 if let Some(param_idx) = param_idx {\n                     if let Some(b) = impl_trait.get_mut(&param_idx.into()) {\n+                        let p = p.clean(cx)?;\n+\n                         b.extend(\n                             p.get_bounds()\n                                 .into_iter()\n@@ -1805,6 +1805,13 @@ impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics,\n             cx.impl_trait_bounds.borrow_mut().insert(param, bounds);\n         }\n \n+        // Now that `cx.impl_trait_bounds` is populated, we can process\n+        // remaining predicates which could contain `impl Trait`.\n+        let mut where_predicates = where_predicates\n+            .into_iter()\n+            .flat_map(|p| p.clean(cx))\n+            .collect::<Vec<_>>();\n+\n         // Type parameters and have a Sized bound by default unless removed with\n         // ?Sized. Scan through the predicates and mark any type parameter with\n         // a Sized bound, removing the bounds as we find them."}, {"sha": "21c733a9bc98e8d4f799390ff93f41aa9af6bd3a", "filename": "src/test/rustdoc/inline_cross/auxiliary/impl_trait_aux.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fe6160c7e4b584795c66f21683064f62803acf0/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fimpl_trait_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fe6160c7e4b584795c66f21683064f62803acf0/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fimpl_trait_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fimpl_trait_aux.rs?ref=1fe6160c7e4b584795c66f21683064f62803acf0", "patch": "@@ -9,6 +9,8 @@ pub fn func2<T>(\n \n pub fn func3(_x: impl Iterator<Item = impl Iterator<Item = u8>> + Clone) {}\n \n+pub fn func4<T: Iterator<Item = impl Clone>>(_x: T) {}\n+\n pub struct Foo;\n \n impl Foo {"}, {"sha": "b1e3f8d145b5f2c203a2c6a0302d04836d9c4175", "filename": "src/test/rustdoc/inline_cross/impl_trait.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1fe6160c7e4b584795c66f21683064f62803acf0/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fe6160c7e4b584795c66f21683064f62803acf0/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs?ref=1fe6160c7e4b584795c66f21683064f62803acf0", "patch": "@@ -20,6 +20,12 @@ pub use impl_trait_aux::func2;\n // @!has - '//pre[@class=\"rust fn\"]' 'where'\n pub use impl_trait_aux::func3;\n \n+\n+// @has impl_trait/fn.func4.html\n+// @has - '//pre[@class=\"rust fn\"]' \"func4<T>(\"\n+// @has - '//pre[@class=\"rust fn\"]' \"T: Iterator<Item = impl Clone>,\"\n+pub use impl_trait_aux::func4;\n+\n // @has impl_trait/struct.Foo.html\n // @has - '//code[@id=\"method.v\"]' \"pub fn method<'a>(_x: impl Clone + Into<Vec<u8>> + 'a)\"\n // @!has - '//code[@id=\"method.v\"]' 'where'"}]}