{"sha": "05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "node_id": "C_kwDOAAsO6NoAKDA1ZDIyMjEyZTg5NTg4ZTdjNDQzY2M2YjliYzBlNGUwMmZkZmJjOGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-29T15:18:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-29T15:18:57Z"}, "message": "Auto merge of #94566 - yanganto:show-ignore-message, r=m-ou-se\n\nShow ignore message in console and json output\n\n- Provide ignore the message in console and JSON output\n- Modify the ignore message style in the log file\n\nrelated: #92714", "tree": {"sha": "830964c1ab4da553b40547027e81f0ca8a23156b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/830964c1ab4da553b40547027e81f0ca8a23156b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "html_url": "https://github.com/rust-lang/rust/commit/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11909e3588319235e28e99294e17cca11db1d7e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/11909e3588319235e28e99294e17cca11db1d7e2", "html_url": "https://github.com/rust-lang/rust/commit/11909e3588319235e28e99294e17cca11db1d7e2"}, {"sha": "b1c3494d88548222b7af7e8309a5446ea474319e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1c3494d88548222b7af7e8309a5446ea474319e", "html_url": "https://github.com/rust-lang/rust/commit/b1c3494d88548222b7af7e8309a5446ea474319e"}], "stats": {"total": 45, "additions": 33, "deletions": 12}, "files": [{"sha": "56eef8314fbdee5ae6b61fbe7cc1bdcd6baaa2d4", "filename": "library/test/src/console.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/library%2Ftest%2Fsrc%2Fconsole.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/library%2Ftest%2Fsrc%2Fconsole.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fconsole.rs?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -118,7 +118,7 @@ impl ConsoleTestState {\n                     TestResult::TrIgnored => {\n                         #[cfg(not(bootstrap))]\n                         if let Some(msg) = ignore_message {\n-                            format!(\"ignored, {msg}\")\n+                            format!(\"ignored: {msg}\")\n                         } else {\n                             \"ignored\".to_owned()\n                         }"}, {"sha": "737921c1e10dce57fd17a8817b8cab92ba93308b", "filename": "library/test/src/formatters/json.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/library%2Ftest%2Fsrc%2Fformatters%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/library%2Ftest%2Fsrc%2Fformatters%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fjson.rs?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -121,6 +121,19 @@ impl<T: Write> OutputFormatter for JsonFormatter<T> {\n             ),\n \n             TestResult::TrIgnored => {\n+                #[cfg(not(bootstrap))]\n+                return self.write_event(\n+                    \"test\",\n+                    desc.name.as_slice(),\n+                    \"ignored\",\n+                    exec_time,\n+                    stdout,\n+                    desc.ignore_message\n+                        .map(|msg| format!(r#\"\"message\": \"{}\"\"#, EscapedString(msg)))\n+                        .as_deref(),\n+                );\n+\n+                #[cfg(bootstrap)]\n                 self.write_event(\"test\", desc.name.as_slice(), \"ignored\", exec_time, stdout, None)\n             }\n "}, {"sha": "9b407df2190f389452a7f1f54f276d7349303206", "filename": "library/test/src/formatters/pretty.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -45,8 +45,12 @@ impl<T: Write> PrettyFormatter<T> {\n         self.write_short_result(\"FAILED\", term::color::RED)\n     }\n \n-    pub fn write_ignored(&mut self) -> io::Result<()> {\n-        self.write_short_result(\"ignored\", term::color::YELLOW)\n+    pub fn write_ignored(&mut self, message: Option<&'static str>) -> io::Result<()> {\n+        if let Some(message) = message {\n+            self.write_short_result(&format!(\"ignored, {}\", message), term::color::YELLOW)\n+        } else {\n+            self.write_short_result(\"ignored\", term::color::YELLOW)\n+        }\n     }\n \n     pub fn write_time_failed(&mut self) -> io::Result<()> {\n@@ -214,7 +218,12 @@ impl<T: Write> OutputFormatter for PrettyFormatter<T> {\n         match *result {\n             TestResult::TrOk => self.write_ok()?,\n             TestResult::TrFailed | TestResult::TrFailedMsg(_) => self.write_failed()?,\n-            TestResult::TrIgnored => self.write_ignored()?,\n+            TestResult::TrIgnored => {\n+                #[cfg(not(bootstrap))]\n+                self.write_ignored(desc.ignore_message)?;\n+                #[cfg(bootstrap)]\n+                self.write_ignored(None)?;\n+            }\n             TestResult::TrBench(ref bs) => {\n                 self.write_bench()?;\n                 self.write_plain(&format!(\": {}\", fmt_bench_samples(bs)))?;"}, {"sha": "67b5fc2ed32dcba0a77026dbaeabc095eb862074", "filename": "src/test/run-make-fulldeps/libtest-json/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2FMakefile?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -5,7 +5,7 @@\n OUTPUT_FILE_DEFAULT := $(TMPDIR)/libtest-json-output-default.json\n OUTPUT_FILE_STDOUT_SUCCESS := $(TMPDIR)/libtest-json-output-stdout-success.json\n \n-all:\n+all: f.rs validate_json.py output-default.json output-stdout-success.json\n \t$(RUSTC) --test f.rs\n \tRUST_BACKTRACE=0 $(call RUN,f) -Z unstable-options --test-threads=1 --format=json > $(OUTPUT_FILE_DEFAULT) || true\n \tRUST_BACKTRACE=0 $(call RUN,f) -Z unstable-options --test-threads=1 --format=json --show-output > $(OUTPUT_FILE_STDOUT_SUCCESS) || true"}, {"sha": "edfe25086ae9a83e5f07145ffdd27bb59e8e6331", "filename": "src/test/run-make-fulldeps/libtest-json/f.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Ff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Ff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Ff.rs?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -16,7 +16,7 @@ fn c() {\n }\n \n #[test]\n-#[ignore]\n+#[ignore = \"msg\"]\n fn d() {\n     assert!(false);\n }"}, {"sha": "63342abc6ef71679a6b50f4634b1a77eda3f2446", "filename": "src/test/run-make-fulldeps/libtest-json/output-default.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Foutput-default.json", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Foutput-default.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Foutput-default.json?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -6,5 +6,5 @@\n { \"type\": \"test\", \"event\": \"started\", \"name\": \"c\" }\n { \"type\": \"test\", \"name\": \"c\", \"event\": \"ok\" }\n { \"type\": \"test\", \"event\": \"started\", \"name\": \"d\" }\n-{ \"type\": \"test\", \"name\": \"d\", \"event\": \"ignored\" }\n+{ \"type\": \"test\", \"name\": \"d\", \"event\": \"ignored\", \"message\": \"msg\" }\n { \"type\": \"suite\", \"event\": \"failed\", \"passed\": 2, \"failed\": 1, \"ignored\": 1, \"measured\": 0, \"filtered_out\": 0, \"exec_time\": $TIME }"}, {"sha": "8f19114460e8911316c4dd1270bdce0e4bec4e3a", "filename": "src/test/run-make-fulldeps/libtest-json/output-stdout-success.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Foutput-stdout-success.json", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Foutput-stdout-success.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flibtest-json%2Foutput-stdout-success.json?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -6,5 +6,5 @@\n { \"type\": \"test\", \"event\": \"started\", \"name\": \"c\" }\n { \"type\": \"test\", \"name\": \"c\", \"event\": \"ok\", \"stdout\": \"thread 'main' panicked at 'assertion failed: false', f.rs:15:5\\n\" }\n { \"type\": \"test\", \"event\": \"started\", \"name\": \"d\" }\n-{ \"type\": \"test\", \"name\": \"d\", \"event\": \"ignored\" }\n+{ \"type\": \"test\", \"name\": \"d\", \"event\": \"ignored\", \"message\": \"msg\" }\n { \"type\": \"suite\", \"event\": \"failed\", \"passed\": 2, \"failed\": 1, \"ignored\": 1, \"measured\": 0, \"filtered_out\": 0, \"exec_time\": $TIME }"}, {"sha": "f99e476eabae3702557e61c7608f85d2afce64bb", "filename": "src/test/ui/test-attrs/test-type.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.rs?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -5,7 +5,6 @@\n // ignore-emscripten no threads support\n // run-pass\n \n-\n #[test]\n fn test_ok() {\n     let _a = true;\n@@ -18,9 +17,9 @@ fn test_panic() {\n }\n \n #[test]\n-#[ignore]\n+#[ignore = \"msg\"]\n fn test_no_run() {\n-    loop{\n+    loop {\n         println!(\"Hello, world\");\n     }\n }"}, {"sha": "143c13a36b7e7e77e19591990bb8c321ff1dd4c0", "filename": "src/test/ui/test-attrs/test-type.run.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.run.stdout?ref=05d22212e89588e7c443cc6b9bc0e4e02fdfbc8d", "patch": "@@ -1,6 +1,6 @@\n \n running 3 tests\n-test test_no_run ... ignored\n+test test_no_run ... ignored, msg\n test test_ok ... ok\n test test_panic - should panic ... ok\n "}]}