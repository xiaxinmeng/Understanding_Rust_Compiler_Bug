{"sha": "3c8cf6d80204d0963cc91965042b00655a1c676d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjOGNmNmQ4MDIwNGQwOTYzY2M5MTk2NTA0MmIwMDY1NWExYzY3NmQ=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-11-19T22:03:59Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-11-27T14:23:48Z"}, "message": "Avoid ICEing when associated type bound trait is missing", "tree": {"sha": "1cb3b06a029fdd0c82b2bef913e9d7d15985d163", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cb3b06a029fdd0c82b2bef913e9d7d15985d163"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c8cf6d80204d0963cc91965042b00655a1c676d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl/BC/QACgkQgTGiTgx5\n7684ZBAAvuplId9f6CneuuYd+UqBvZ31qy9kX4Qzi+4Bmd9666wlfWeRkpgeiT6w\nKb2+f7HPbvCNfX2FdY5PDXybziBGAmTdO7/xcDkClmxcTMIBvaX1n4FwrIkJ27Gj\nuIChKRfRql1MwZDA4dkIgDQrXdbJUoDmpVqWyJSCo9N43Ph3I29iWInsAWxPQEpj\nicrx/+BvKhcCImi7Y15os+rrwSzERtrt+6/EQU/sCN4AuRXtIQGCYQVJ7xy5Cvc3\nMiFPJaVKH5sCzT6BSzbDgoda7EXiItiIice6ONMQV3atGGu2tp8axsAZitduc2Vb\nFT3SH1VakD3oeBMoOFGylo13l4lVmHgHLPVt9xR1tX2558KvuVNgK6D7ubm3PO8B\nGxQZ+0pGTOLiWhQ/D2biaK9jlVQCXvPApjjYlhwi4WXMsEVaw8ipZ8GwM6XteyZ8\nVkpBE9dn540ZaAW18c06ZPpu5UQSqGarWWxrMXyP5d4yL5NeSKWu3RUNsAM+cRUe\nysHu9EEYQ4fxI4oH8e24Zwuq5pFBqBbZ9lbg/JsgnCpcZRzRvyajqoRpAsolBnsh\na2e88Guxakt/mFYexspRbUBcsZ7Ese4tlxnJBRl+QdeuH3AiQu3iADj0pRtTQb22\nGkeaq/DWTYfAhDPK3QIjhcxPtizGW6Wrh1kRh/R26N0TbNYWWII=\n=IRb3\n-----END PGP SIGNATURE-----", "payload": "tree 1cb3b06a029fdd0c82b2bef913e9d7d15985d163\nparent 5b6f206d23b003b89a0883d2c0e5461330ab1068\nauthor Santiago Pastorino <spastorino@gmail.com> 1605823439 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1606487028 -0300\n\nAvoid ICEing when associated type bound trait is missing\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c8cf6d80204d0963cc91965042b00655a1c676d", "html_url": "https://github.com/rust-lang/rust/commit/3c8cf6d80204d0963cc91965042b00655a1c676d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c8cf6d80204d0963cc91965042b00655a1c676d/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b6f206d23b003b89a0883d2c0e5461330ab1068", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6f206d23b003b89a0883d2c0e5461330ab1068", "html_url": "https://github.com/rust-lang/rust/commit/5b6f206d23b003b89a0883d2c0e5461330ab1068"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "eef80478531c3ff5087692408eaa693480244f18", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3c8cf6d80204d0963cc91965042b00655a1c676d/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c8cf6d80204d0963cc91965042b00655a1c676d/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=3c8cf6d80204d0963cc91965042b00655a1c676d", "patch": "@@ -652,13 +652,21 @@ impl ItemCtxt<'tcx> {\n         match b {\n             hir::GenericBound::Trait(poly_trait_ref, _) => {\n                 let trait_ref = &poly_trait_ref.trait_ref;\n-                let trait_did = trait_ref.trait_def_id().unwrap();\n-                super_traits_of(self.tcx, trait_did).any(|trait_did| {\n-                    self.tcx\n-                        .associated_items(trait_did)\n-                        .find_by_name_and_kind(self.tcx, assoc_name, ty::AssocKind::Type, trait_did)\n-                        .is_some()\n-                })\n+                if let Some(trait_did) = trait_ref.trait_def_id() {\n+                    super_traits_of(self.tcx, trait_did).any(|trait_did| {\n+                        self.tcx\n+                            .associated_items(trait_did)\n+                            .find_by_name_and_kind(\n+                                self.tcx,\n+                                assoc_name,\n+                                ty::AssocKind::Type,\n+                                trait_did,\n+                            )\n+                            .is_some()\n+                    })\n+                } else {\n+                    false\n+                }\n             }\n             _ => false,\n         }"}, {"sha": "07d0f8f8769e5f2bd46ed23e24a718b315a8b44f", "filename": "src/test/ui/associated-type-bounds/missing-trait-bound-for-assoc-fails.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3c8cf6d80204d0963cc91965042b00655a1c676d/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fmissing-trait-bound-for-assoc-fails.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c8cf6d80204d0963cc91965042b00655a1c676d/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fmissing-trait-bound-for-assoc-fails.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fmissing-trait-bound-for-assoc-fails.rs?ref=3c8cf6d80204d0963cc91965042b00655a1c676d", "patch": "@@ -0,0 +1,10 @@\n+#[allow(dead_code)]\n+fn foo<M>(_m: M)\n+where\n+    M::Item: Temp,\n+    //~^ ERROR cannot find trait `Temp` in this scope [E0405]\n+    //~| ERROR associated type `Item` not found for `M` [E0220]\n+{\n+}\n+\n+fn main() {}"}, {"sha": "bc2807b03961c0db6f79a3d93f41741272f5ab38", "filename": "src/test/ui/associated-type-bounds/missing-trait-bound-for-assoc-fails.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3c8cf6d80204d0963cc91965042b00655a1c676d/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fmissing-trait-bound-for-assoc-fails.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c8cf6d80204d0963cc91965042b00655a1c676d/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fmissing-trait-bound-for-assoc-fails.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fmissing-trait-bound-for-assoc-fails.stderr?ref=3c8cf6d80204d0963cc91965042b00655a1c676d", "patch": "@@ -0,0 +1,16 @@\n+error[E0405]: cannot find trait `Temp` in this scope\n+  --> $DIR/missing-trait-bound-for-assoc-fails.rs:4:14\n+   |\n+LL |     M::Item: Temp,\n+   |              ^^^^ not found in this scope\n+\n+error[E0220]: associated type `Item` not found for `M`\n+  --> $DIR/missing-trait-bound-for-assoc-fails.rs:4:8\n+   |\n+LL |     M::Item: Temp,\n+   |        ^^^^ associated type `Item` not found\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0220, E0405.\n+For more information about an error, try `rustc --explain E0220`."}]}