{"sha": "3ef0b0de2c8018037d2efcba547bab1b84e25419", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZjBiMGRlMmM4MDE4MDM3ZDJlZmNiYTU0N2JhYjFiODRlMjU0MTk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-22T16:51:43Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-22T16:51:43Z"}, "message": "Dropping slices works again", "tree": {"sha": "1bf1b7c36daac9498ff5ee2ef6d0bd4671e37101", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bf1b7c36daac9498ff5ee2ef6d0bd4671e37101"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ef0b0de2c8018037d2efcba547bab1b84e25419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ef0b0de2c8018037d2efcba547bab1b84e25419", "html_url": "https://github.com/rust-lang/rust/commit/3ef0b0de2c8018037d2efcba547bab1b84e25419", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ef0b0de2c8018037d2efcba547bab1b84e25419/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4090794420b789bc8566fc7757711c9019ea096", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4090794420b789bc8566fc7757711c9019ea096", "html_url": "https://github.com/rust-lang/rust/commit/c4090794420b789bc8566fc7757711c9019ea096"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "a7dcb614bbb92a7c7bfa961133da5176c5497867", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ef0b0de2c8018037d2efcba547bab1b84e25419/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef0b0de2c8018037d2efcba547bab1b84e25419/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=3ef0b0de2c8018037d2efcba547bab1b84e25419", "patch": "@@ -116,7 +116,17 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         arg = Value::ByValPair(PrimVal::Ptr(src_ptr), PrimVal::Bytes(n as u128));\n                         ::eval_context::MirRef::clone(&self.seq_drop_glue)\n                     },\n-                    ty::TySlice(ref elem) => unimplemented!(),\n+                    ty::TySlice(elem) => {\n+                        instance.substs = self.tcx.mk_substs([\n+                            Kind::from(elem),\n+                        ].iter().cloned());\n+                        if let Lvalue::Ptr { ptr, extra: LvalueExtra::Length(len) } = lval {\n+                            arg = Value::ByValPair(PrimVal::Ptr(ptr), PrimVal::Bytes(len as u128));\n+                            ::eval_context::MirRef::clone(&self.seq_drop_glue)\n+                        } else {\n+                            panic!(\"slice without length: {:?}\", lval);\n+                        }\n+                    },\n                     _ => {\n                         let src_ptr = self.force_allocation(lval)?.to_ptr();\n                         arg = Value::ByVal(PrimVal::Ptr(src_ptr));"}]}