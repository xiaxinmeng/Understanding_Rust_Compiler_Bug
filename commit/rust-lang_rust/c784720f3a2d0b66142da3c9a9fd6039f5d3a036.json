{"sha": "c784720f3a2d0b66142da3c9a9fd6039f5d3a036", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ODQ3MjBmM2EyZDBiNjYxNDJkYTNjOWE5ZmQ2MDM5ZjVkM2EwMzY=", "commit": {"author": {"name": "ksqsf", "email": "i@ksqsf.moe", "date": "2019-07-31T16:55:36Z"}, "committer": {"name": "ksqsf", "email": "i@ksqsf.moe", "date": "2019-07-31T16:55:36Z"}, "message": "Fix issue and impl", "tree": {"sha": "40669abc51bbbc15ba58ce3f5efb6a199fe26f3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40669abc51bbbc15ba58ce3f5efb6a199fe26f3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c784720f3a2d0b66142da3c9a9fd6039f5d3a036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c784720f3a2d0b66142da3c9a9fd6039f5d3a036", "html_url": "https://github.com/rust-lang/rust/commit/c784720f3a2d0b66142da3c9a9fd6039f5d3a036", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c784720f3a2d0b66142da3c9a9fd6039f5d3a036/comments", "author": {"login": "ksqsf", "id": 23358293, "node_id": "MDQ6VXNlcjIzMzU4Mjkz", "avatar_url": "https://avatars.githubusercontent.com/u/23358293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksqsf", "html_url": "https://github.com/ksqsf", "followers_url": "https://api.github.com/users/ksqsf/followers", "following_url": "https://api.github.com/users/ksqsf/following{/other_user}", "gists_url": "https://api.github.com/users/ksqsf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksqsf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksqsf/subscriptions", "organizations_url": "https://api.github.com/users/ksqsf/orgs", "repos_url": "https://api.github.com/users/ksqsf/repos", "events_url": "https://api.github.com/users/ksqsf/events{/privacy}", "received_events_url": "https://api.github.com/users/ksqsf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ksqsf", "id": 23358293, "node_id": "MDQ6VXNlcjIzMzU4Mjkz", "avatar_url": "https://avatars.githubusercontent.com/u/23358293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksqsf", "html_url": "https://github.com/ksqsf", "followers_url": "https://api.github.com/users/ksqsf/followers", "following_url": "https://api.github.com/users/ksqsf/following{/other_user}", "gists_url": "https://api.github.com/users/ksqsf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksqsf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksqsf/subscriptions", "organizations_url": "https://api.github.com/users/ksqsf/orgs", "repos_url": "https://api.github.com/users/ksqsf/repos", "events_url": "https://api.github.com/users/ksqsf/events{/privacy}", "received_events_url": "https://api.github.com/users/ksqsf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0ab5a3651f5cb30efa2f82a3ee15a7df479080a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0ab5a3651f5cb30efa2f82a3ee15a7df479080a", "html_url": "https://github.com/rust-lang/rust/commit/a0ab5a3651f5cb30efa2f82a3ee15a7df479080a"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "31584972b9f680c6ad0763f7940a7de23a324285", "filename": "src/libcore/result.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c784720f3a2d0b66142da3c9a9fd6039f5d3a036/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c784720f3a2d0b66142da3c9a9fd6039f5d3a036/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=c784720f3a2d0b66142da3c9a9fd6039f5d3a036", "patch": "@@ -834,7 +834,7 @@ impl<T: Copy, E> Result<&T, E> {\n     /// let copied = x.copied();\n     /// assert_eq!(copied, Ok(12));\n     /// ```\n-    #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"XXXXX\")]\n+    #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"63168\")]\n     fn copied(self) -> Result<T, E> {\n         self.map(|&t| t)\n     }\n@@ -854,7 +854,7 @@ impl<T: Copy, E> Result<&mut T, E> {\n     /// let copied = x.copied();\n     /// assert_eq!(copied, Ok(12));\n     /// ```\n-    #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"XXXXX\")]\n+    #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"63168\")]\n     fn copied(self) -> Result<T, E> {\n         self.map(|&mut t| t)\n     }\n@@ -874,7 +874,7 @@ impl<T, E: Copy> Result<T, &E> {\n     /// let copied = x.copied_err();\n     /// assert_eq!(copied, Err(12));\n     /// ```\n-    #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"XXXXX\")]\n+    #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"63168\")]\n     fn copied_err(self) -> Result<T, E> {\n         self.map_err(|&e| e)\n     }\n@@ -894,7 +894,7 @@ impl<T, E: Copy> Result<T, &mut E> {\n     /// let copied = x.copied();\n     /// assert_eq!(cloned, Err(12));\n     /// ```\n-    #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"XXXXX\")]\n+    #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"63168\")]\n     fn copied_err(self) -> Result<T, E> {\n         self.map_err(|&mut e| e)\n     }\n@@ -914,7 +914,7 @@ impl<T: Clone, E> Result<&T, E> {\n     /// let cloned = x.cloned();\n     /// assert_eq!(cloned, Ok(12));\n     /// ```\n-    #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"XXXXX\")]\n+    #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"63168\")]\n     fn cloned(self) -> Result<T, E> {\n         self.map(|t| t.clone())\n     }\n@@ -934,13 +934,13 @@ impl<T: Clone, E> Result<&mut T, E> {\n     /// let cloned = x.cloned();\n     /// assert_eq!(cloned, Ok(12));\n     /// ```\n-    #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"XXXXX\")]\n+    #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"63168\")]\n     fn cloned(self) -> Result<T, E> {\n         self.map(|t| t.clone())\n     }\n }\n \n-impl<T, E: Clone> Result<T, &mut E> {\n+impl<T, E: Clone> Result<T, &E> {\n     /// Maps a `Result<T, &E>` to a `Result<T, E>` by cloning the contents of the\n     /// `Err` part.\n     ///\n@@ -954,7 +954,7 @@ impl<T, E: Clone> Result<T, &mut E> {\n     /// let cloned = x.cloned();\n     /// assert_eq!(cloned, Err(12));\n     /// ```\n-    #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"XXXXX\")]\n+    #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"63168\")]\n     fn cloned_err(self) -> Result<T, E> {\n         self.map_err(|e| e.clone())\n     }\n@@ -974,7 +974,7 @@ impl<T, E: Clone> Result<T, &mut E> {\n     /// let cloned = x.cloned();\n     /// assert_eq!(cloned, Err(12));\n     /// ```\n-    #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"XXXXX\")]\n+    #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"63168\")]\n     fn cloned_err(self) -> Result<T, E> {\n         self.map_err(|e| e.clone())\n     }"}]}