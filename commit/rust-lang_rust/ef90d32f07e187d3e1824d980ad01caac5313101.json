{"sha": "ef90d32f07e187d3e1824d980ad01caac5313101", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmOTBkMzJmMDdlMTg3ZDNlMTgyNGQ5ODBhZDAxY2FhYzUzMTMxMDE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-15T15:09:59Z"}, "committer": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2017-03-21T20:47:10Z"}, "message": "rustc: Always emit the `uwtable` attribute on Windows\n\nThis commit alters the translation layer to unconditionally emit the `uwtable`\nLLVM attribute on Windows regardless of the `no_landing_pads` setting.\nPreviously I believe we omitted this attribute as an optimization when the\n`-Cpanic=abort` flag was passed, but this unfortunately caused problems for\nGecko.\n\nIt [was discovered] that there was trouble unwinding through Rust functions due\nto foreign exceptions such as illegal instructions or otherwise in-practice\nmethods used to abort a process. In testing it looked like the major difference\nbetween a working binary and a non-working binary is indeed this `uwtable`\nattribute, but this PR has unfortunately not been thoroughly tested in terms of\ncompiling Gecko with `-C panic=abort` *and* this PR to see whether it works, so\nthis is still somewhat working on just suspicion.\n\n[was discovered]: https://bugzilla.mozilla.org/show_bug.cgi?id=1302078", "tree": {"sha": "805a1522ec0590526e578b0f01960525a6feb3e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/805a1522ec0590526e578b0f01960525a6feb3e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef90d32f07e187d3e1824d980ad01caac5313101", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJY0ZFSAAoJEN4E2eJ1WbyKyjcH/3IR7zPkc5jCuQHHgtz6UGdO\nGIOgWAfDjzrx8osT4FyN4l/i878Pn/DrAlEMzDpAKIe7Uv8vz3bpNlgflWq2ldt1\nV6Gx6pe7+/n8Mg0e7eCPNHru9pDGyqP1Ff8ihL8hs+A0GxiG6XH4XHCcqChs7+BZ\n+8uyaLvFEiFurCu1n+KFX5uhmhn+yetY+Nx8QFyoOkry1pMbbVQn3gL/zXc+S5tU\n3VTn0vhRSZsc+9tJPkK2izI0LOx8eZLUuyJbkcsQfta7RnQF1p5RQERMr84JEueC\ne081WdcVmSRa+Hh3bMUrPxp3WWdHMwXeIGN+6EotQ6FJziFv7YZYzlui9xgtk5Y=\n=Mvu4\n-----END PGP SIGNATURE-----", "payload": "tree 805a1522ec0590526e578b0f01960525a6feb3e5\nparent 58c701f5c7dc26d9b55c631006ece52abe1ddce2\nauthor Alex Crichton <alex@alexcrichton.com> 1489590599 -0700\ncommitter Peter Atashian <retep998@gmail.com> 1490129230 -0400\n\nrustc: Always emit the `uwtable` attribute on Windows\n\nThis commit alters the translation layer to unconditionally emit the `uwtable`\nLLVM attribute on Windows regardless of the `no_landing_pads` setting.\nPreviously I believe we omitted this attribute as an optimization when the\n`-Cpanic=abort` flag was passed, but this unfortunately caused problems for\nGecko.\n\nIt [was discovered] that there was trouble unwinding through Rust functions due\nto foreign exceptions such as illegal instructions or otherwise in-practice\nmethods used to abort a process. In testing it looked like the major difference\nbetween a working binary and a non-working binary is indeed this `uwtable`\nattribute, but this PR has unfortunately not been thoroughly tested in terms of\ncompiling Gecko with `-C panic=abort` *and* this PR to see whether it works, so\nthis is still somewhat working on just suspicion.\n\n[was discovered]: https://bugzilla.mozilla.org/show_bug.cgi?id=1302078\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef90d32f07e187d3e1824d980ad01caac5313101", "html_url": "https://github.com/rust-lang/rust/commit/ef90d32f07e187d3e1824d980ad01caac5313101", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef90d32f07e187d3e1824d980ad01caac5313101/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58c701f5c7dc26d9b55c631006ece52abe1ddce2", "url": "https://api.github.com/repos/rust-lang/rust/commits/58c701f5c7dc26d9b55c631006ece52abe1ddce2", "html_url": "https://github.com/rust-lang/rust/commit/58c701f5c7dc26d9b55c631006ece52abe1ddce2"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "80b563729f5ce3678a641d900e8559834d15037f", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ef90d32f07e187d3e1824d980ad01caac5313101/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef90d32f07e187d3e1824d980ad01caac5313101/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=ef90d32f07e187d3e1824d980ad01caac5313101", "patch": "@@ -583,7 +583,24 @@ pub fn trans_instance<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, instance: Instance\n \n     ccx.stats().n_closures.set(ccx.stats().n_closures.get() + 1);\n \n-    if !ccx.sess().no_landing_pads() {\n+    // The `uwtable` attribute according to LLVM is:\n+    //\n+    //     This attribute indicates that the ABI being targeted requires that an\n+    //     unwind table entry be produced for this function even if we can show\n+    //     that no exceptions passes by it. This is normally the case for the\n+    //     ELF x86-64 abi, but it can be disabled for some compilation units.\n+    //\n+    // Typically when we're compiling with `-C panic=abort` (which implies this\n+    // `no_landing_pads` check) we don't need `uwtable` because we can't\n+    // generate any exceptions! On Windows, however, exceptions include other\n+    // events such as illegal instructions, segfaults, etc. This means that on\n+    // Windows we end up still needing the `uwtable` attribute even if the `-C\n+    // panic=abort` flag is passed.\n+    //\n+    // You can also find more info on why Windows is whitelisted here in:\n+    //      https://bugzilla.mozilla.org/show_bug.cgi?id=1302078\n+    if !ccx.sess().no_landing_pads() ||\n+       ccx.sess().target.target.options.is_like_windows {\n         attributes::emit_uwtable(lldecl, true);\n     }\n "}, {"sha": "2ab15277084ca645b813fe762a680eadcb6ea00b", "filename": "src/test/codegen/panic-abort-windows.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ef90d32f07e187d3e1824d980ad01caac5313101/src%2Ftest%2Fcodegen%2Fpanic-abort-windows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef90d32f07e187d3e1824d980ad01caac5313101/src%2Ftest%2Fcodegen%2Fpanic-abort-windows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpanic-abort-windows.rs?ref=ef90d32f07e187d3e1824d980ad01caac5313101", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-tidy-linelength\n+\n+// This test is for *-windows-msvc only.\n+// ignore-android\n+// ignore-bitrig\n+// ignore-macos\n+// ignore-dragonfly\n+// ignore-freebsd\n+// ignore-haiku\n+// ignore-ios\n+// ignore-linux\n+// ignore-netbsd\n+// ignore-openbsd\n+// ignore-solaris\n+// ignore-emscripten\n+\n+// compile-flags: -C no-prepopulate-passes -C panic=abort -O\n+\n+#![crate_type = \"lib\"]\n+\n+// CHECK: Function Attrs: uwtable\n+// CHECK-NEXT: define void @normal_uwtable()\n+#[no_mangle]\n+pub fn normal_uwtable() {\n+}\n+\n+// CHECK: Function Attrs: nounwind uwtable\n+// CHECK-NEXT: define void @extern_uwtable()\n+#[no_mangle]\n+pub extern fn extern_uwtable() {\n+}"}]}