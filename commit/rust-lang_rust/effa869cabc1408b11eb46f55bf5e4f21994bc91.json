{"sha": "effa869cabc1408b11eb46f55bf5e4f21994bc91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZmE4NjljYWJjMTQwOGIxMWViNDZmNTViZjVlNGYyMTk5NGJjOTE=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-29T23:22:41Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-18T16:36:07Z"}, "message": "Update transmute size lints.\n\nAlso moves a few transmute tests to UI tests to better test their\noutput.", "tree": {"sha": "f769b02c08c6cd48e1842f9be5a5100a2fbcaaab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f769b02c08c6cd48e1842f9be5a5100a2fbcaaab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/effa869cabc1408b11eb46f55bf5e4f21994bc91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/effa869cabc1408b11eb46f55bf5e4f21994bc91", "html_url": "https://github.com/rust-lang/rust/commit/effa869cabc1408b11eb46f55bf5e4f21994bc91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/effa869cabc1408b11eb46f55bf5e4f21994bc91/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28cc0c5a7b538452c7495b42b32e09b006c38b82", "url": "https://api.github.com/repos/rust-lang/rust/commits/28cc0c5a7b538452c7495b42b32e09b006c38b82", "html_url": "https://github.com/rust-lang/rust/commit/28cc0c5a7b538452c7495b42b32e09b006c38b82"}], "stats": {"total": 280, "additions": 247, "deletions": 33}, "files": [{"sha": "4d378b0bf7dd3ae9596b2f678ddf260165b9d811", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -1631,7 +1631,7 @@ fn takes_u8(_: u8) {}\n \n fn main() {\n     unsafe { takes_u8(::std::mem::transmute(0u16)); }\n-    // error: transmute called with differently sized types\n+    // error: transmute called with types of different sizes\n }\n ```\n "}, {"sha": "de92395ac6955b316ec88640d16f01af490baf42", "filename": "src/librustc/middle/intrinsicck.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -86,17 +86,16 @@ impl<'a, 'tcx> ExprVisitor<'a, 'tcx> {\n             // Special-case transmutting from `typeof(function)` and\n             // `Option<typeof(function)>` to present a clearer error.\n             let from = unpack_option_like(self.tcx.global_tcx(), from);\n-            match (&from.sty, sk_to) {\n-                (&ty::TyFnDef(..), SizeSkeleton::Known(size_to))\n-                        if size_to == Pointer.size(self.tcx) => {\n+            if let (&ty::TyFnDef(..), SizeSkeleton::Known(size_to)) = (&from.sty, sk_to) {\n+                if size_to == Pointer.size(self.tcx) => {\n                     struct_span_err!(self.tcx.sess, span, E0591,\n-                                     \"`{}` is zero-sized and can't be transmuted to `{}`\",\n-                                     from, to)\n-                        .span_note(span, \"cast with `as` to a pointer instead\")\n+                                     \"can't transmute zero-sized type\")\n+                        .note(&format!(\"source type: {}\", from))\n+                        .note(&format!(\"target type: {}\", to))\n+                        .help(\"cast with `as` to a pointer instead\")\n                         .emit();\n                     return;\n                 }\n-                _ => {}\n             }\n         }\n \n@@ -111,7 +110,7 @@ impl<'a, 'tcx> ExprVisitor<'a, 'tcx> {\n                 }\n                 Err(LayoutError::Unknown(bad)) => {\n                     if bad == ty {\n-                        format!(\"size can vary\")\n+                        format!(\"this type's size can vary\")\n                     } else {\n                         format!(\"size can vary because of {}\", bad)\n                     }\n@@ -121,14 +120,9 @@ impl<'a, 'tcx> ExprVisitor<'a, 'tcx> {\n         };\n \n         struct_span_err!(self.tcx.sess, span, E0512,\n-                  \"transmute called with differently sized types: \\\n-                   {} ({}) to {} ({})\",\n-                  from, skeleton_string(from, sk_from),\n-                  to, skeleton_string(to, sk_to))\n-            .span_label(span,\n-                format!(\"transmuting between {} and {}\",\n-                    skeleton_string(from, sk_from),\n-                    skeleton_string(to, sk_to)))\n+            \"transmute called with types of different sizes\")\n+            .note(&format!(\"source type: {} ({})\", from, skeleton_string(from, sk_from)))\n+            .note(&format!(\"target type: {} ({})\", to, skeleton_string(to, sk_to)))\n             .emit();\n     }\n }"}, {"sha": "25f962716413119eed2f6df8851b13a72c2fafb6", "filename": "src/test/compile-fail/E0512.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2FE0512.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2FE0512.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0512.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -12,5 +12,4 @@ fn takes_u8(_: u8) {}\n \n fn main() {\n     unsafe { takes_u8(::std::mem::transmute(0u16)); } //~ ERROR E0512\n-                                                      //~| transmuting between 16 bits and 8 bits\n }"}, {"sha": "9d9b7e48043540bc19ccd37af270b5e573915c14", "filename": "src/test/compile-fail/issue-21174.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fissue-21174.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fissue-21174.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21174.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -15,7 +15,7 @@ trait Trait<'a> {\n \n fn foo<'a, T: Trait<'a>>(value: T::A) {\n     let new: T::B = unsafe { std::mem::transmute(value) };\n-//~^ ERROR: transmute called with differently sized types\n+//~^ ERROR: transmute called with types of different sizes\n }\n \n fn main() { }"}, {"sha": "dc9155ed66c6e1dd8ea4935532c7ec8b81f7df37", "filename": "src/test/compile-fail/issue-28625.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fissue-28625.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fissue-28625.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28625.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -17,7 +17,7 @@ struct ArrayPeano<T: Bar> {\n }\n \n fn foo<T>(a: &ArrayPeano<T>) -> &[T] where T: Bar {\n-    unsafe { std::mem::transmute(a) } //~ ERROR transmute called with differently sized types\n+    unsafe { std::mem::transmute(a) } //~ ERROR transmute called with types of different sizes\n }\n \n impl Bar for () {"}, {"sha": "5091ba4ee1aa4254801563bb6732c1750a9709cc", "filename": "src/test/compile-fail/issue-32377.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fissue-32377.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fissue-32377.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32377.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -21,7 +21,7 @@ struct Bar<U: Foo> {\n \n fn foo<U: Foo>(x: [usize; 2]) -> Bar<U> {\n     unsafe { mem::transmute(x) }\n-    //~^ ERROR transmute called with differently sized types\n+    //~^ ERROR transmute called with types of different sizes\n }\n \n fn main() {}"}, {"sha": "c96184d5988437dfbf450d6c4cb60d4b42ea7884", "filename": "src/test/compile-fail/packed-struct-generic-transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -13,7 +13,7 @@\n // the error points to the start of the file, not the line with the\n // transmute\n \n-// error-pattern: transmute called with differently sized types\n+// error-pattern: transmute called with types of different sizes\n \n use std::mem;\n "}, {"sha": "abb02dd39e67d705bb01bd1795c2362b804deee9", "filename": "src/test/compile-fail/packed-struct-transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fpacked-struct-transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Fpacked-struct-transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpacked-struct-transmute.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -13,7 +13,7 @@\n // the error points to the start of the file, not the line with the\n // transmute\n \n-// error-pattern: transmute called with differently sized types\n+// error-pattern: transmute called with types of different sizes\n \n use std::mem;\n "}, {"sha": "113e2ed4c80f44d85ff4eb500f05e8cef7382ade", "filename": "src/test/compile-fail/transmute-different-sizes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Ftransmute-different-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Ftransmute-different-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftransmute-different-sizes.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -17,12 +17,12 @@ use std::mem::transmute;\n \n unsafe fn f() {\n     let _: i8 = transmute(16i16);\n-    //~^ ERROR transmute called with differently sized types\n+    //~^ ERROR transmute called with types of different sizes\n }\n \n unsafe fn g<T>(x: &T) {\n     let _: i8 = transmute(x);\n-    //~^ ERROR transmute called with differently sized types\n+    //~^ ERROR transmute called with types of different sizes\n }\n \n trait Specializable { type Output; }\n@@ -33,7 +33,7 @@ impl<T> Specializable for T {\n \n unsafe fn specializable<T>(x: u16) -> <T as Specializable>::Output {\n     transmute(x)\n-    //~^ ERROR transmute called with differently sized types\n+    //~^ ERROR transmute called with types of different sizes\n }\n \n fn main() {}"}, {"sha": "59027fc7787f846603046b04ce548020e794dee9", "filename": "src/test/compile-fail/transmute-fat-pointers.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Ftransmute-fat-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Ftransmute-fat-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftransmute-fat-pointers.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -15,11 +15,11 @@\n use std::mem::transmute;\n \n fn a<T, U: ?Sized>(x: &[T]) -> &U {\n-    unsafe { transmute(x) } //~ ERROR transmute called with differently sized types\n+    unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n }\n \n fn b<T: ?Sized, U: ?Sized>(x: &T) -> &U {\n-    unsafe { transmute(x) } //~ ERROR transmute called with differently sized types\n+    unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n }\n \n fn c<T, U>(x: &T) -> &U {\n@@ -31,11 +31,11 @@ fn d<T, U>(x: &[T]) -> &[U] {\n }\n \n fn e<T: ?Sized, U>(x: &T) -> &U {\n-    unsafe { transmute(x) } //~ ERROR transmute called with differently sized types\n+    unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n }\n \n fn f<T, U: ?Sized>(x: &T) -> &U {\n-    unsafe { transmute(x) } //~ ERROR transmute called with differently sized types\n+    unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n }\n \n fn main() { }"}, {"sha": "2f8f9e46e1aeeb6f21d9fe508e9f4f069fe20ebb", "filename": "src/test/compile-fail/transmute-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Ftransmute-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fcompile-fail%2Ftransmute-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftransmute-impl.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -26,7 +26,7 @@ impl<T: ?Sized> Foo<T> {\n \n     fn n(x: &T) -> &isize {\n         // Not OK here, because T : Sized is not in scope.\n-        unsafe { transmute(x) } //~ ERROR transmute called with differently sized types\n+        unsafe { transmute(x) } //~ ERROR transmute called with types of different sizes\n     }\n }\n "}, {"sha": "28cac90c69d9b8e363536e6da2245b500a130541", "filename": "src/test/ui/transmute/main.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Fmain.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(untagged_unions)]\n+use std::mem::transmute;\n+\n+pub trait TypeConstructor<'a> {\n+    type T;\n+}\n+\n+unsafe fn transmute_lifetime<'a, 'b, C>(x: <C as TypeConstructor<'a>>::T)\n+                                        -> <C as TypeConstructor<'b>>::T\n+where for<'z> C: TypeConstructor<'z> {\n+    transmute(x) //~ ERROR transmute called with types of different sizes\n+}\n+\n+unsafe fn sizes() {\n+    let x: u8 = transmute(10u16); //~ ERROR transmute called with types of different sizes\n+}\n+\n+unsafe fn ptrs() {\n+    let x: u8 = transmute(\"test\"); //~ ERROR transmute called with types of different sizes\n+}\n+\n+union Foo { x: () }\n+unsafe fn vary() {\n+    let x: Foo = transmute(10); //~ ERROR transmute called with types of different sizes\n+}\n+\n+fn main() {}"}, {"sha": "2ae4252cfa2b776a72f83bfe7581e3a86df4381e", "filename": "src/test/ui/transmute/main.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Fmain.stderr?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -0,0 +1,38 @@\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/main.rs:20:5\n+   |\n+20 |     transmute(x) //~ ERROR transmute called with types of different sizes\n+   |     ^^^^^^^^^\n+   |\n+   = note: source type: <C as TypeConstructor<'a>>::T (size can vary because of <C as TypeConstructor>::T)\n+   = note: target type: <C as TypeConstructor<'b>>::T (size can vary because of <C as TypeConstructor>::T)\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/main.rs:24:17\n+   |\n+24 |     let x: u8 = transmute(10u16); //~ ERROR transmute called with types of different sizes\n+   |                 ^^^^^^^^^\n+   |\n+   = note: source type: u16 (16 bits)\n+   = note: target type: u8 (8 bits)\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/main.rs:28:17\n+   |\n+28 |     let x: u8 = transmute(\"test\"); //~ ERROR transmute called with types of different sizes\n+   |                 ^^^^^^^^^\n+   |\n+   = note: source type: &str (128 bits)\n+   = note: target type: u8 (8 bits)\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/main.rs:33:18\n+   |\n+33 |     let x: Foo = transmute(10); //~ ERROR transmute called with types of different sizes\n+   |                  ^^^^^^^^^\n+   |\n+   = note: source type: i32 (32 bits)\n+   = note: target type: Foo (0 bits)\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "808be8beede928362187cd4c51f74d427f27fd04", "filename": "src/test/ui/transmute/transmute-from-fn-item-types-error.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-from-fn-item-types-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-from-fn-item-types-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-from-fn-item-types-error.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -29,8 +29,8 @@ unsafe fn foo() -> (isize, *const (), Option<fn()>) {\n unsafe fn bar() {\n     // Error as usual if the resulting type is not pointer-sized.\n     mem::transmute::<_, u8>(main);\n-    //~^ ERROR transmute called with differently sized types\n-    //~^^ NOTE transmuting between 0 bits and 8 bits\n+    //~^ ERROR transmute called with types of different sizes\n+    //~^^ NOTE transmuting between fn() {main} and u8\n \n     mem::transmute::<_, *mut ()>(foo);\n     //~^ ERROR is zero-sized and can't be transmuted", "previous_filename": "src/test/compile-fail/transmute-from-fn-item-types-error.rs"}, {"sha": "efd60630aa26503279659abd357acf1f6c3c027d", "filename": "src/test/ui/transmute/transmute-from-fn-item-types-error.stderr", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-from-fn-item-types-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-from-fn-item-types-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-from-fn-item-types-error.stderr?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -0,0 +1,91 @@\n+error[E0591]: can't transmute zero-sized type\n+  --> $DIR/transmute-from-fn-item-types-error.rs:14:13\n+   |\n+14 |     let i = mem::transmute(bar);\n+   |             ^^^^^^^^^^^^^^\n+   |\n+   = note: source type: unsafe fn() {bar}\n+   = note: target type: isize\n+   = help: cast with `as` to a pointer instead\n+\n+error[E0591]: can't transmute zero-sized type\n+  --> $DIR/transmute-from-fn-item-types-error.rs:18:13\n+   |\n+18 |     let p = mem::transmute(foo);\n+   |             ^^^^^^^^^^^^^^\n+   |\n+   = note: source type: unsafe fn() -> (isize, *const (), std::option::Option<fn()>) {foo}\n+   = note: target type: *const ()\n+   = help: cast with `as` to a pointer instead\n+\n+error[E0591]: can't transmute zero-sized type\n+  --> $DIR/transmute-from-fn-item-types-error.rs:22:14\n+   |\n+22 |     let of = mem::transmute(main);\n+   |              ^^^^^^^^^^^^^^\n+   |\n+   = note: source type: fn() {main}\n+   = note: target type: std::option::Option<fn()>\n+   = help: cast with `as` to a pointer instead\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/transmute-from-fn-item-types-error.rs:31:5\n+   |\n+31 |     mem::transmute::<_, u8>(main);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: source type: fn() {main} (0 bits)\n+   = note: target type: u8 (8 bits)\n+\n+error[E0591]: can't transmute zero-sized type\n+  --> $DIR/transmute-from-fn-item-types-error.rs:35:5\n+   |\n+35 |     mem::transmute::<_, *mut ()>(foo);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: source type: unsafe fn() -> (isize, *const (), std::option::Option<fn()>) {foo}\n+   = note: target type: *mut ()\n+   = help: cast with `as` to a pointer instead\n+\n+error[E0591]: can't transmute zero-sized type\n+  --> $DIR/transmute-from-fn-item-types-error.rs:39:5\n+   |\n+39 |     mem::transmute::<_, fn()>(bar);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: source type: unsafe fn() {bar}\n+   = note: target type: fn()\n+   = help: cast with `as` to a pointer instead\n+\n+error[E0591]: can't transmute zero-sized type\n+  --> $DIR/transmute-from-fn-item-types-error.rs:48:5\n+   |\n+48 |     mem::transmute::<_, *mut ()>(Some(foo));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: source type: unsafe fn() -> (isize, *const (), std::option::Option<fn()>) {foo}\n+   = note: target type: *mut ()\n+   = help: cast with `as` to a pointer instead\n+\n+error[E0591]: can't transmute zero-sized type\n+  --> $DIR/transmute-from-fn-item-types-error.rs:52:5\n+   |\n+52 |     mem::transmute::<_, fn()>(Some(bar));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: source type: unsafe fn() {bar}\n+   = note: target type: fn()\n+   = help: cast with `as` to a pointer instead\n+\n+error[E0591]: can't transmute zero-sized type\n+  --> $DIR/transmute-from-fn-item-types-error.rs:56:5\n+   |\n+56 |     mem::transmute::<_, Option<fn()>>(Some(baz));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: source type: unsafe fn() {baz}\n+   = note: target type: std::option::Option<fn()>\n+   = help: cast with `as` to a pointer instead\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "b6e7e32663ec122669b3bd2e50cf257f9903afe7", "filename": "src/test/ui/transmute/transmute-type-parameters.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-type-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-type-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-type-parameters.rs?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "previous_filename": "src/test/compile-fail/transmute-type-parameters.rs"}, {"sha": "39f18efe97a84d88a9b90aa235fbea5d236aa3db", "filename": "src/test/ui/transmute/transmute-type-parameters.stderr", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-type-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/effa869cabc1408b11eb46f55bf5e4f21994bc91/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-type-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-type-parameters.stderr?ref=effa869cabc1408b11eb46f55bf5e4f21994bc91", "patch": "@@ -0,0 +1,56 @@\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/transmute-type-parameters.rs:16:20\n+   |\n+16 |     let _: isize = transmute(x);\n+   |                    ^^^^^^^^^\n+   |\n+   = note: source type: T (this type's size can vary)\n+   = note: target type: isize (64 bits)\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/transmute-type-parameters.rs:21:20\n+   |\n+21 |     let _: isize = transmute(x);\n+   |                    ^^^^^^^^^\n+   |\n+   = note: source type: (T, isize) (size can vary because of T)\n+   = note: target type: isize (64 bits)\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/transmute-type-parameters.rs:26:20\n+   |\n+26 |     let _: isize = transmute(x);\n+   |                    ^^^^^^^^^\n+   |\n+   = note: source type: [T; 10] (size can vary because of T)\n+   = note: target type: isize (64 bits)\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/transmute-type-parameters.rs:35:20\n+   |\n+35 |     let _: isize = transmute(x);\n+   |                    ^^^^^^^^^\n+   |\n+   = note: source type: Bad<T> (size can vary because of T)\n+   = note: target type: isize (64 bits)\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/transmute-type-parameters.rs:45:20\n+   |\n+45 |     let _: isize = transmute(x);\n+   |                    ^^^^^^^^^\n+   |\n+   = note: source type: Worse<T> (size can vary because of T)\n+   = note: target type: isize (64 bits)\n+\n+error[E0512]: transmute called with types of different sizes\n+  --> $DIR/transmute-type-parameters.rs:50:20\n+   |\n+50 |     let _: isize = transmute(x);\n+   |                    ^^^^^^^^^\n+   |\n+   = note: source type: std::option::Option<T> (size can vary because of T)\n+   = note: target type: isize (64 bits)\n+\n+error: aborting due to previous error(s)\n+"}]}