{"sha": "f6497ca3fbec4474084b8d13b39bd1bd1a87208d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDk3Y2EzZmJlYzQ0NzQwODRiOGQxM2IzOWJkMWJkMWE4NzIwOGQ=", "commit": {"author": {"name": "Victor M. Suarez", "email": "svmnotn@gmail.com", "date": "2016-01-03T01:47:10Z"}, "committer": {"name": "Victor M. Suarez", "email": "svmnotn@gmail.com", "date": "2016-01-03T01:47:58Z"}, "message": "ignore case for config enums. Fixes #738", "tree": {"sha": "e8b8ab55767dcf9932d36518b56e076c95772e28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8b8ab55767dcf9932d36518b56e076c95772e28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6497ca3fbec4474084b8d13b39bd1bd1a87208d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6497ca3fbec4474084b8d13b39bd1bd1a87208d", "html_url": "https://github.com/rust-lang/rust/commit/f6497ca3fbec4474084b8d13b39bd1bd1a87208d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6497ca3fbec4474084b8d13b39bd1bd1a87208d/comments", "author": {"login": "svmnotn", "id": 12618337, "node_id": "MDQ6VXNlcjEyNjE4MzM3", "avatar_url": "https://avatars.githubusercontent.com/u/12618337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svmnotn", "html_url": "https://github.com/svmnotn", "followers_url": "https://api.github.com/users/svmnotn/followers", "following_url": "https://api.github.com/users/svmnotn/following{/other_user}", "gists_url": "https://api.github.com/users/svmnotn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svmnotn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svmnotn/subscriptions", "organizations_url": "https://api.github.com/users/svmnotn/orgs", "repos_url": "https://api.github.com/users/svmnotn/repos", "events_url": "https://api.github.com/users/svmnotn/events{/privacy}", "received_events_url": "https://api.github.com/users/svmnotn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "svmnotn", "id": 12618337, "node_id": "MDQ6VXNlcjEyNjE4MzM3", "avatar_url": "https://avatars.githubusercontent.com/u/12618337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svmnotn", "html_url": "https://github.com/svmnotn", "followers_url": "https://api.github.com/users/svmnotn/followers", "following_url": "https://api.github.com/users/svmnotn/following{/other_user}", "gists_url": "https://api.github.com/users/svmnotn/gists{/gist_id}", "starred_url": "https://api.github.com/users/svmnotn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svmnotn/subscriptions", "organizations_url": "https://api.github.com/users/svmnotn/orgs", "repos_url": "https://api.github.com/users/svmnotn/repos", "events_url": "https://api.github.com/users/svmnotn/events{/privacy}", "received_events_url": "https://api.github.com/users/svmnotn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0698f0255a1895460b0f497dd17b2ab809529d0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0698f0255a1895460b0f497dd17b2ab809529d0a", "html_url": "https://github.com/rust-lang/rust/commit/0698f0255a1895460b0f497dd17b2ab809529d0a"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "83018a25ebb74170ce795dd3d48c185694862553", "filename": "src/utils.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f6497ca3fbec4474084b8d13b39bd1bd1a87208d/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6497ca3fbec4474084b8d13b39bd1bd1a87208d/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=f6497ca3fbec4474084b8d13b39bd1bd1a87208d", "patch": "@@ -198,26 +198,28 @@ macro_rules! impl_enum_decodable {\n     ( $e:ident, $( $x:ident ),* ) => {\n         impl ::rustc_serialize::Decodable for $e {\n             fn decode<D: ::rustc_serialize::Decoder>(d: &mut D) -> Result<Self, D::Error> {\n+                use std::ascii::AsciiExt;\n                 let s = try!(d.read_str());\n-                match &*s {\n-                    $(\n-                        stringify!($x) => Ok($e::$x),\n-                    )*\n-                    _ => Err(d.error(\"Bad variant\")),\n-                }\n+                $(\n+                    if stringify!($x).eq_ignore_ascii_case(&s) {\n+                      return Ok($e::$x);\n+                    }\n+                )*\n+                Err(d.error(\"Bad variant\"))\n             }\n         }\n \n         impl ::std::str::FromStr for $e {\n             type Err = &'static str;\n \n             fn from_str(s: &str) -> Result<Self, Self::Err> {\n-                match &*s {\n-                    $(\n-                        stringify!($x) => Ok($e::$x),\n-                    )*\n-                    _ => Err(\"Bad variant\"),\n-                }\n+                use std::ascii::AsciiExt;\n+                $(\n+                    if stringify!($x).eq_ignore_ascii_case(s) {\n+                        return Ok($e::$x);\n+                    }\n+                )*\n+                Err(\"Bad variant\")\n             }\n         }\n "}]}