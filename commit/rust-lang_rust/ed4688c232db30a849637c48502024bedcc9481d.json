{"sha": "ed4688c232db30a849637c48502024bedcc9481d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNDY4OGMyMzJkYjMwYTg0OTYzN2M0ODUwMjAyNGJlZGNjOTQ4MWQ=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-06-02T14:18:11Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-06-02T17:09:59Z"}, "message": "Fix the test to use explicit argument types\n\nHopefully this pacifies the 32bit windows. Apparently there\u2019s an ABI out there that not only allows\nnon-64 bit variadic arguments, but also has differing ABI for them!\n\nGood thing all variadic functions are unsafe.", "tree": {"sha": "ae945768d618a8aaae97998486289211c21bfb0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae945768d618a8aaae97998486289211c21bfb0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed4688c232db30a849637c48502024bedcc9481d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed4688c232db30a849637c48502024bedcc9481d", "html_url": "https://github.com/rust-lang/rust/commit/ed4688c232db30a849637c48502024bedcc9481d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed4688c232db30a849637c48502024bedcc9481d/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f18118702f088ee2d4726e1e1e6e87d17b105f5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f18118702f088ee2d4726e1e1e6e87d17b105f5d", "html_url": "https://github.com/rust-lang/rust/commit/f18118702f088ee2d4726e1e1e6e87d17b105f5d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "0131563d36d35e05838561731a5ca21c156b7fbd", "filename": "src/test/run-pass/variadic-ffi.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ed4688c232db30a849637c48502024bedcc9481d/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4688c232db30a849637c48502024bedcc9481d/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs?ref=ed4688c232db30a849637c48502024bedcc9481d", "patch": "@@ -10,7 +10,7 @@\n \n #[link(name = \"rust_test_helpers\")]\n extern {\n-    fn rust_interesting_average(_: i64, ...) -> f64;\n+    fn rust_interesting_average(_: u64, ...) -> f64;\n }\n \n pub fn main() {\n@@ -21,26 +21,26 @@ pub fn main() {\n \n     // Call with direct arguments\n     unsafe {\n-        assert_eq!(rust_interesting_average(1, 10, 10.0) as i64, 20);\n+        assert_eq!(rust_interesting_average(1, 10i64, 10.0f64) as i64, 20);\n     }\n \n     // Call with named arguments, variable number of them\n-    let (x1, x2, x3, x4) = (10, 10.0, 20, 20.0);\n+    let (x1, x2, x3, x4) = (10i64, 10.0f64, 20i64, 20.0f64);\n     unsafe {\n         assert_eq!(rust_interesting_average(2, x1, x2, x3, x4) as i64, 30);\n     }\n \n     // A function that takes a function pointer\n-    unsafe fn call(fp: unsafe extern fn(i64, ...) -> f64) {\n-        let (x1, x2, x3, x4) = (10, 10.0, 20, 20.0);\n+    unsafe fn call(fp: unsafe extern fn(u64, ...) -> f64) {\n+        let (x1, x2, x3, x4) = (10i64, 10.0f64, 20i64, 20.0f64);\n         assert_eq!(fp(2, x1, x2, x3, x4) as i64, 30);\n     }\n \n     unsafe {\n         call(rust_interesting_average);\n \n         // Make a function pointer, pass indirectly\n-        let x: unsafe extern fn(i64, ...) -> f64 = rust_interesting_average;\n+        let x: unsafe extern fn(u64, ...) -> f64 = rust_interesting_average;\n         call(x);\n     }\n }"}]}