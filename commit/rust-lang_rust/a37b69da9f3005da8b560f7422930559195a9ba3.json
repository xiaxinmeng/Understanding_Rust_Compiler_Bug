{"sha": "a37b69da9f3005da8b560f7422930559195a9ba3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzN2I2OWRhOWYzMDA1ZGE4YjU2MGY3NDIyOTMwNTU5MTk1YTliYTM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-24T08:44:47Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-24T11:24:42Z"}, "message": "Rollup merge of #53618 - GuillaumeGomez:fmt-examples, r=QuietMisdreavus\n\nAdd missing fmt examples\n\nr? @QuietMisdreavus", "tree": {"sha": "5427393c5a32ed471d6dc9ec7206f46c13be82d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5427393c5a32ed471d6dc9ec7206f46c13be82d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a37b69da9f3005da8b560f7422930559195a9ba3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlt/6voACgkQ/vbIBR0O\nATyscBAArliVQzStTxPD5lySLsrNw9+kiH0kp4Rt1PLxChpdddgqdg8fNhjTDfah\nOfQYpkV/LKJxcmTcc3EqsbQO3zlJx18X+rItWmoVITQMaQxyihzNSbsaPfsUppbu\nZQPBc8e9ePl6ZOabYyhvKAblquW89ts+W5U/yXkiqMKJ7XWZk8h2CF6L/pNp2OJ9\nO3NokshNXpytByrH7JUNr1pO2Rd4txk5Bo0/hrLsyo34iECpX7xHGXUkVlEi1Xsf\nnJGrvA4t7qioGBLrk8zPIk2Po0U3vgzXHExGCW3UyC9wj0ZAxJMi4jjnaWs+87Xz\n+lJzFwJyQcaiGw4RMJznGc9gau2FyFbVnWeN9s1XM6c1tQg5W9lhMzrkdslHCTKm\nFdrPWVr9qJJaM6VOpl3PdhPUkEFtHS/sV62VHTAo0rOinM/C4fOFJHCm1SBnFQWS\neNfynpnYozTOpeqgDmS3/v0y6DFPUtxpwcDNxBWNsbT0gKc/atiq1KDW9m4W/K8/\ntvVs5QlwJIbWY0V9AK3zqPO6/z9jo8Zr/rVRU8bYR8dOLF91AQ//+EkySzqThuZv\nMcRdVG4+gg4FoSwajuq87w6951Ia/aqH01/i2k2pofDzuQ5sJi9uD0RO5e2GPUIx\nShcZEeg/c6Qf/TB8RK5b7G41rX5N6JV26Y6e+BU1JJjVsTuZfWI=\n=7VtW\n-----END PGP SIGNATURE-----", "payload": "tree 5427393c5a32ed471d6dc9ec7206f46c13be82d3\nparent cf90fd04dc91a14ec522d2203dcf99c482e69357\nparent 2cc2e01e04ee7706139347f5e067595af9c8ee03\nauthor kennytm <kennytm@gmail.com> 1535100287 +0800\ncommitter kennytm <kennytm@gmail.com> 1535109882 +0800\n\nRollup merge of #53618 - GuillaumeGomez:fmt-examples, r=QuietMisdreavus\n\nAdd missing fmt examples\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a37b69da9f3005da8b560f7422930559195a9ba3", "html_url": "https://github.com/rust-lang/rust/commit/a37b69da9f3005da8b560f7422930559195a9ba3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a37b69da9f3005da8b560f7422930559195a9ba3/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf90fd04dc91a14ec522d2203dcf99c482e69357", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf90fd04dc91a14ec522d2203dcf99c482e69357", "html_url": "https://github.com/rust-lang/rust/commit/cf90fd04dc91a14ec522d2203dcf99c482e69357"}, {"sha": "2cc2e01e04ee7706139347f5e067595af9c8ee03", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cc2e01e04ee7706139347f5e067595af9c8ee03", "html_url": "https://github.com/rust-lang/rust/commit/2cc2e01e04ee7706139347f5e067595af9c8ee03"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "6493f5b39a7d736720256e5214194582c3b93e87", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/a37b69da9f3005da8b560f7422930559195a9ba3/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a37b69da9f3005da8b560f7422930559195a9ba3/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=a37b69da9f3005da8b560f7422930559195a9ba3", "patch": "@@ -1132,6 +1132,36 @@ impl<'a> Formatter<'a> {\n     ///\n     /// This function will correctly account for the flags provided as well as\n     /// the minimum width. It will not take precision into account.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::fmt;\n+    ///\n+    /// struct Foo { nb: i32 };\n+    ///\n+    /// impl Foo {\n+    ///     fn new(nb: i32) -> Foo {\n+    ///         Foo {\n+    ///             nb,\n+    ///         }\n+    ///     }\n+    /// }\n+    ///\n+    /// impl fmt::Display for Foo {\n+    ///     fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n+    ///         // We need to remove \"-\" from the number output.\n+    ///         let tmp = self.nb.abs().to_string();\n+    ///\n+    ///         formatter.pad_integral(self.nb > 0, \"Foo \", &tmp)\n+    ///     }\n+    /// }\n+    ///\n+    /// assert_eq!(&format!(\"{}\", Foo::new(2)), \"2\");\n+    /// assert_eq!(&format!(\"{}\", Foo::new(-1)), \"-1\");\n+    /// assert_eq!(&format!(\"{:#}\", Foo::new(-1)), \"-Foo 1\");\n+    /// assert_eq!(&format!(\"{:0>#8}\", Foo::new(-1)), \"00-Foo 1\");\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn pad_integral(&mut self,\n                         is_nonnegative: bool,\n@@ -1381,12 +1411,48 @@ impl<'a> Formatter<'a> {\n \n     /// Writes some data to the underlying buffer contained within this\n     /// formatter.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::fmt;\n+    ///\n+    /// struct Foo;\n+    ///\n+    /// impl fmt::Display for Foo {\n+    ///     fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n+    ///         formatter.write_str(\"Foo\")\n+    ///         // This is equivalent to:\n+    ///         // write!(formatter, \"Foo\")\n+    ///     }\n+    /// }\n+    ///\n+    /// assert_eq!(&format!(\"{}\", Foo), \"Foo\");\n+    /// assert_eq!(&format!(\"{:0>8}\", Foo), \"Foo\");\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn write_str(&mut self, data: &str) -> Result {\n         self.buf.write_str(data)\n     }\n \n     /// Writes some formatted information into this instance.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::fmt;\n+    ///\n+    /// struct Foo(i32);\n+    ///\n+    /// impl fmt::Display for Foo {\n+    ///     fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n+    ///         formatter.write_fmt(format_args!(\"Foo {}\", self.0))\n+    ///     }\n+    /// }\n+    ///\n+    /// assert_eq!(&format!(\"{}\", Foo(-1)), \"Foo -1\");\n+    /// assert_eq!(&format!(\"{:0>8}\", Foo(2)), \"Foo 2\");\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn write_fmt(&mut self, fmt: Arguments) -> Result {\n         write(self.buf, fmt)"}]}