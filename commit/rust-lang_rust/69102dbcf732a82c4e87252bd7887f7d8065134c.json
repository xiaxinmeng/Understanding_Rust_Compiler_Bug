{"sha": "69102dbcf732a82c4e87252bd7887f7d8065134c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MTAyZGJjZjczMmE4MmM0ZTg3MjUyYmQ3ODg3ZjdkODA2NTEzNGM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-09T09:55:46Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-14T13:16:02Z"}, "message": "Add some documentation", "tree": {"sha": "5942178415987b5f3b789c3b970f1c17825f0d53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5942178415987b5f3b789c3b970f1c17825f0d53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69102dbcf732a82c4e87252bd7887f7d8065134c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69102dbcf732a82c4e87252bd7887f7d8065134c", "html_url": "https://github.com/rust-lang/rust/commit/69102dbcf732a82c4e87252bd7887f7d8065134c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69102dbcf732a82c4e87252bd7887f7d8065134c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff38b37769dde7b41957157a80ab97b3e985d432", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff38b37769dde7b41957157a80ab97b3e985d432", "html_url": "https://github.com/rust-lang/rust/commit/ff38b37769dde7b41957157a80ab97b3e985d432"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "e59a0cb0a23237bfe0b4fd0164909db4d8a98e49", "filename": "src/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/69102dbcf732a82c4e87252bd7887f7d8065134c/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69102dbcf732a82c4e87252bd7887f7d8065134c/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=69102dbcf732a82c4e87252bd7887f7d8065134c", "patch": "@@ -5,10 +5,14 @@ fn bool_env_var(key: &str) -> bool {\n     env::var(key).as_ref().map(|val| &**val) == Ok(\"1\")\n }\n \n+/// The mode to use for compilation.\n #[derive(Copy, Clone, Debug)]\n pub enum CodegenMode {\n+    /// AOT compile the crate. This is the default.\n     Aot,\n+    /// JIT compile and execute the crate.\n     Jit,\n+    /// JIT compile and execute the crate, but only compile functions the first time they are used.\n     JitLazy,\n }\n \n@@ -25,6 +29,7 @@ impl FromStr for CodegenMode {\n     }\n }\n \n+/// Configuration of cg_clif as passed in through `-Cllvm-args` and various env vars.\n #[derive(Clone, Debug)]\n pub struct BackendConfig {\n     /// Should the crate be AOT compiled or JIT executed.\n@@ -76,6 +81,7 @@ impl Default for BackendConfig {\n }\n \n impl BackendConfig {\n+    /// Parse the configuration passed in using `-Cllvm-args`.\n     pub fn from_opts(opts: &[String]) -> Result<Self, String> {\n         fn parse_bool(name: &str, value: &str) -> Result<bool, String> {\n             value.parse().map_err(|_| format!(\"failed to parse value `{}` for {}\", value, name))"}, {"sha": "5a75b9be0cb690d96e6b5866a81cf938f82f9be5", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/69102dbcf732a82c4e87252bd7887f7d8065134c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69102dbcf732a82c4e87252bd7887f7d8065134c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=69102dbcf732a82c4e87252bd7887f7d8065134c", "patch": "@@ -119,6 +119,8 @@ impl<F: Fn() -> String> Drop for PrintOnPanic<F> {\n     }\n }\n \n+/// The codegen context holds any information shared between the codegen of individual functions\n+/// inside a single codegen unit with the exception of the Cranelift [`Module`](cranelift_module::Module).\n struct CodegenCx<'tcx> {\n     tcx: TyCtxt<'tcx>,\n     global_asm: String,"}, {"sha": "978a1e722ddd29e385880f0a2617b13392144e5c", "filename": "src/metadata.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/69102dbcf732a82c4e87252bd7887f7d8065134c/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69102dbcf732a82c4e87252bd7887f7d8065134c/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=69102dbcf732a82c4e87252bd7887f7d8065134c", "patch": "@@ -14,6 +14,18 @@ use rustc_target::spec::Target;\n \n use crate::backend::WriteMetadata;\n \n+/// The metadata loader used by cg_clif.\n+///\n+/// The metadata is stored in the same format as cg_llvm.\n+///\n+/// # Metadata location\n+///\n+/// <dl>\n+/// <dt>rlib</dt>\n+/// <dd>The metadata can be found in the `lib.rmeta` file inside of the ar archive.</dd>\n+/// <dt>dylib</dt>\n+/// <dd>The metadata can be found in the `.rustc` section of the shared library.</dd>\n+/// </dl>\n pub(crate) struct CraneliftMetadataLoader;\n \n fn load_metadata_with("}]}