{"sha": "de9413bd3403f1b95c717a839b7612e3cfe83b03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlOTQxM2JkMzQwM2YxYjk1YzcxN2E4MzliNzYxMmUzY2ZlODNiMDM=", "commit": {"author": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-10-27T23:57:25Z"}, "committer": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-10-27T23:57:25Z"}, "message": "changing non-empty glob must import something to a lint", "tree": {"sha": "163d621362e07f9fe3797f3ff6ed682ae705685e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/163d621362e07f9fe3797f3ff6ed682ae705685e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de9413bd3403f1b95c717a839b7612e3cfe83b03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de9413bd3403f1b95c717a839b7612e3cfe83b03", "html_url": "https://github.com/rust-lang/rust/commit/de9413bd3403f1b95c717a839b7612e3cfe83b03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de9413bd3403f1b95c717a839b7612e3cfe83b03/comments", "author": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e369d87b015a84653343032833d65d0545fd3f26", "url": "https://api.github.com/repos/rust-lang/rust/commits/e369d87b015a84653343032833d65d0545fd3f26", "html_url": "https://github.com/rust-lang/rust/commit/e369d87b015a84653343032833d65d0545fd3f26"}], "stats": {"total": 42, "additions": 27, "deletions": 15}, "files": [{"sha": "daee4d4e9b26895a74d5ddab5023cd46f1b91118", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de9413bd3403f1b95c717a839b7612e3cfe83b03/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9413bd3403f1b95c717a839b7612e3cfe83b03/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=de9413bd3403f1b95c717a839b7612e3cfe83b03", "patch": "@@ -972,8 +972,9 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                 if !is_prelude &&\n                    max_vis.get() != ty::Visibility::Invisible && // Allow empty globs.\n                    !max_vis.get().is_at_least(directive.vis.get(), &*self) {\n-                    let msg = \"A non-empty glob must import something with the glob's visibility\";\n-                    self.r.session.span_err(directive.span, msg);\n+                    let msg =\n+                        \"glob import doesn't reexport anything because no candidate is public enough\";\n+                    self.r.session.buffer_lint(UNUSED_IMPORTS, directive.id, directive.span, msg);\n                 }\n                 return None;\n             }"}, {"sha": "d76cc41be4e5558bb1eae991c8edb866fef9a4b5", "filename": "src/test/ui/imports/reexports.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/de9413bd3403f1b95c717a839b7612e3cfe83b03/src%2Ftest%2Fui%2Fimports%2Freexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9413bd3403f1b95c717a839b7612e3cfe83b03/src%2Ftest%2Fui%2Fimports%2Freexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.rs?ref=de9413bd3403f1b95c717a839b7612e3cfe83b03", "patch": "@@ -1,16 +1,21 @@\n+#![warn(unused_imports)]\n+\n mod a {\n     fn foo() {}\n     mod foo {}\n \n     mod a {\n         pub use super::foo; //~ ERROR cannot be re-exported\n-        pub use super::*; //~ ERROR must import something with the glob's visibility\n+        pub use super::*;\n+        //~^ WARNING glob import doesn't reexport anything because no candidate is public enough\n     }\n }\n \n mod b {\n     pub fn foo() {}\n-    mod foo { pub struct S; }\n+    mod foo {\n+        pub struct S;\n+    }\n \n     pub mod a {\n         pub use super::foo; // This is OK since the value `foo` is visible enough."}, {"sha": "382b181f45b7bb2db571cc414168717608f66c33", "filename": "src/test/ui/imports/reexports.stderr", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/de9413bd3403f1b95c717a839b7612e3cfe83b03/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de9413bd3403f1b95c717a839b7612e3cfe83b03/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.stderr?ref=de9413bd3403f1b95c717a839b7612e3cfe83b03", "patch": "@@ -1,34 +1,40 @@\n error[E0364]: `foo` is private, and cannot be re-exported\n-  --> $DIR/reexports.rs:6:17\n+  --> $DIR/reexports.rs:10:17\n    |\n LL |         pub use super::foo;\n    |                 ^^^^^^^^^^\n    |\n note: consider marking `foo` as `pub` in the imported module\n-  --> $DIR/reexports.rs:6:17\n+  --> $DIR/reexports.rs:10:17\n    |\n LL |         pub use super::foo;\n    |                 ^^^^^^^^^^\n \n-error: A non-empty glob must import something with the glob's visibility\n-  --> $DIR/reexports.rs:7:17\n-   |\n-LL |         pub use super::*;\n-   |                 ^^^^^^^^\n-\n error[E0603]: module `foo` is private\n-  --> $DIR/reexports.rs:28:15\n+  --> $DIR/reexports.rs:35:15\n    |\n LL |     use b::a::foo::S;\n    |               ^^^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/reexports.rs:29:15\n+  --> $DIR/reexports.rs:36:15\n    |\n LL |     use b::b::foo::S as T;\n    |               ^^^\n \n-error: aborting due to 4 previous errors\n+warning: this glob doesn't reexport anything because no canditate is public enough\n+  --> $DIR/reexports.rs:11:17\n+   |\n+LL |         pub use super::*;\n+   |                 ^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/reexports.rs:1:9\n+   |\n+LL | #![warn(unused_imports)]\n+   |         ^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0364, E0603.\n For more information about an error, try `rustc --explain E0364`."}]}