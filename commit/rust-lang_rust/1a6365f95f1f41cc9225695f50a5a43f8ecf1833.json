{"sha": "1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNjM2NWY5NWYxZjQxY2M5MjI1Njk1ZjUwYTVhNDNmOGVjZjE4MzM=", "commit": {"author": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2020-08-22T13:25:36Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2020-08-22T13:25:36Z"}, "message": "FunctionCx: WIP: Fix overzealous sed usage", "tree": {"sha": "4395371406aceed0671f8380176ceeddb74f48bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4395371406aceed0671f8380176ceeddb74f48bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "html_url": "https://github.com/rust-lang/rust/commit/1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad4a7a1f0c87ecd0a520fce2078d1bcdb900f574", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad4a7a1f0c87ecd0a520fce2078d1bcdb900f574", "html_url": "https://github.com/rust-lang/rust/commit/ad4a7a1f0c87ecd0a520fce2078d1bcdb900f574"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "bdcb931b827b715ba924440423998cc330f2ec7b", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "patch": "@@ -49,7 +49,7 @@ pub(crate) fn trans_fn<'tcx, B: Backend + 'static>(\n         cold_blocks: EntitySet::new(),\n \n         clif_comments,\n-        constants_cx: &mut cx.codegen_cx.constants_cx,\n+        constants_cx: &mut cx.constants_cx,\n         vtables: &mut cx.vtables,\n         source_info_set: indexmap::IndexSet::new(),\n         next_ssa_var: 0,"}, {"sha": "df91668c1e975789d3b22f82872ab1424f80727a", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "patch": "@@ -265,7 +265,7 @@ pub(crate) fn type_sign(ty: Ty<'_>) -> bool {\n }\n \n pub(crate) struct FunctionCx<'clif, 'tcx, B: Backend + 'static> {\n-    pub(crate) .codegen_cx: &'clif CodegenCx<'tcx, B>,\n+    pub(crate) codegen_cx: &'clif mut crate::CodegenCx<'tcx, B>,\n     pub(crate) global_asm: &'clif mut String,\n     pub(crate) pointer_type: Type, // Cached from module\n "}, {"sha": "3c05e4aa793ed17b1a7be0d7ce529e77fb9f3671", "filename": "src/constant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "patch": "@@ -167,7 +167,7 @@ pub(crate) fn trans_const_value<'tcx>(\n                     let alloc_kind = fx.codegen_cx.tcx.get_global_alloc(ptr.alloc_id);\n                     let base_addr = match alloc_kind {\n                         Some(GlobalAlloc::Memory(alloc)) => {\n-                            fx.codegen_cx.constants_cx.todo.push(TodoItem::Alloc(ptr.alloc_id));\n+                            fx.constants_cx.todo.push(TodoItem::Alloc(ptr.alloc_id));\n                             let data_id = data_id_for_alloc_id(fx.codegen_cx.module, ptr.alloc_id, alloc.align, alloc.mutability);\n                             let local_data_id = fx.codegen_cx.module.declare_data_in_func(data_id, &mut fx.bcx.func);\n                             #[cfg(debug_assertions)]\n@@ -216,7 +216,7 @@ fn pointer_for_allocation<'tcx>(\n     alloc: &'tcx Allocation,\n ) -> crate::pointer::Pointer {\n     let alloc_id = fx.codegen_cx.tcx.create_memory_alloc(alloc);\n-    fx.codegen_cx.constants_cx.todo.push(TodoItem::Alloc(alloc_id));\n+    fx.constants_cx.todo.push(TodoItem::Alloc(alloc_id));\n     let data_id = data_id_for_alloc_id(fx.codegen_cx.module, alloc_id, alloc.align, alloc.mutability);\n \n     let local_data_id = fx.codegen_cx.module.declare_data_in_func(data_id, &mut fx.bcx.func);"}, {"sha": "797039d0fd2ecd57488117559cf4e56ddca3aff2", "filename": "src/driver/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fmod.rs?ref=1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "patch": "@@ -88,7 +88,7 @@ fn trans_mono_item<'tcx, B: Backend + 'static>(\n             cx.codegen_cx.tcx.sess.time(\"codegen fn\", || crate::base::trans_fn(cx, inst, linkage));\n         }\n         MonoItem::Static(def_id) => {\n-            crate::constant::codegen_static(&mut cx.codegen_cx.constants_cx, def_id);\n+            crate::constant::codegen_static(&mut cx.constants_cx, def_id);\n         }\n         MonoItem::GlobalAsm(hir_id) => {\n             let item = tcx.hir().expect_item(hir_id);"}, {"sha": "b9acc27efdf9594403fd559c2933cb1a79437682", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6365f95f1f41cc9225695f50a5a43f8ecf1833/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=1a6365f95f1f41cc9225695f50a5a43f8ecf1833", "patch": "@@ -160,7 +160,7 @@ impl<'tcx, B: Backend + 'static> CodegenCx<'tcx, B> {\n     }\n \n     fn finalize(mut self) -> (Module<B>, String, Option<DebugContext<'tcx>>, UnwindContext<'tcx>) {\n-        self.codegen_cx.constants_cx.finalize(self.codegen_cx.tcx, &mut self.codegen_cx.module);\n+        self.constants_cx.finalize(self.codegen_cx.tcx, &mut self.codegen_cx.module);\n         (self.codegen_cx.module, self.global_asm, self.debug_context, self.unwind_context)\n     }\n }"}]}