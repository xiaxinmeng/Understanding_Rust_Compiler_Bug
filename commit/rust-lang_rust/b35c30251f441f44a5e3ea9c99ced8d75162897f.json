{"sha": "b35c30251f441f44a5e3ea9c99ced8d75162897f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNWMzMDI1MWY0NDFmNDRhNWUzZWE5Yzk5Y2VkOGQ3NTE2Mjg5N2Y=", "commit": {"author": {"name": "Alex Tokarev", "email": "aleksator@gmail.com", "date": "2020-03-23T08:02:46Z"}, "committer": {"name": "Alex Tokarev", "email": "aleksator@gmail.com", "date": "2020-03-23T09:14:45Z"}, "message": "Reword unused variable warning", "tree": {"sha": "120e549e91d10981c66aa5f06a972cd132f04762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/120e549e91d10981c66aa5f06a972cd132f04762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b35c30251f441f44a5e3ea9c99ced8d75162897f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b35c30251f441f44a5e3ea9c99ced8d75162897f", "html_url": "https://github.com/rust-lang/rust/commit/b35c30251f441f44a5e3ea9c99ced8d75162897f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b35c30251f441f44a5e3ea9c99ced8d75162897f/comments", "author": {"login": "aleksator", "id": 2221354, "node_id": "MDQ6VXNlcjIyMjEzNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2221354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksator", "html_url": "https://github.com/aleksator", "followers_url": "https://api.github.com/users/aleksator/followers", "following_url": "https://api.github.com/users/aleksator/following{/other_user}", "gists_url": "https://api.github.com/users/aleksator/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksator/subscriptions", "organizations_url": "https://api.github.com/users/aleksator/orgs", "repos_url": "https://api.github.com/users/aleksator/repos", "events_url": "https://api.github.com/users/aleksator/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksator/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aleksator", "id": 2221354, "node_id": "MDQ6VXNlcjIyMjEzNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2221354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksator", "html_url": "https://github.com/aleksator", "followers_url": "https://api.github.com/users/aleksator/followers", "following_url": "https://api.github.com/users/aleksator/following{/other_user}", "gists_url": "https://api.github.com/users/aleksator/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksator/subscriptions", "organizations_url": "https://api.github.com/users/aleksator/orgs", "repos_url": "https://api.github.com/users/aleksator/repos", "events_url": "https://api.github.com/users/aleksator/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksator/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ff785011be6625e32afceee3a08e5cff7470feb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ff785011be6625e32afceee3a08e5cff7470feb", "html_url": "https://github.com/rust-lang/rust/commit/8ff785011be6625e32afceee3a08e5cff7470feb"}], "stats": {"total": 138, "additions": 69, "deletions": 69}, "files": [{"sha": "c46380f1505dfe14a886d6bc46a5ad89b4055d88", "filename": "src/doc/rustc/src/json.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Fdoc%2Frustc%2Fsrc%2Fjson.md", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Fdoc%2Frustc%2Fsrc%2Fjson.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fjson.md?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -168,7 +168,7 @@ Diagnostics have the following format:\n             \"rendered\": null\n         },\n         {\n-            \"message\": \"consider prefixing with an underscore\",\n+            \"message\": \"if this is intentional, prefix it with an underscore\",\n             \"code\": null,\n             \"level\": \"help\",\n             \"spans\": [\n@@ -201,7 +201,7 @@ Diagnostics have the following format:\n     /* Optional string of the rendered version of the diagnostic as displayed\n        by rustc. Note that this may be influenced by the `--json` flag.\n     */\n-    \"rendered\": \"warning: unused variable: `x`\\n --> lib.rs:2:9\\n  |\\n2 |     let x = 123;\\n  |         ^ help: consider prefixing with an underscore: `_x`\\n  |\\n  = note: `#[warn(unused_variables)]` on by default\\n\\n\"\n+    \"rendered\": \"warning: unused variable: `x`\\n --> lib.rs:2:9\\n  |\\n2 |     let x = 123;\\n  |         ^ help: if this is intentional, prefix it with an underscore: `_x`\\n  |\\n  = note: `#[warn(unused_variables)]` on by default\\n\\n\"\n }\n ```\n "}, {"sha": "97f6457d397367b37d1553f5721abdd32bc6d11d", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -1565,7 +1565,7 @@ impl<'tcx> Liveness<'_, 'tcx> {\n                             }\n                         } else {\n                             err.multipart_suggestion(\n-                                \"consider prefixing with an underscore\",\n+                                \"if this is intentional, prefix it with an underscore\",\n                                 spans.iter().map(|span| (*span, format!(\"_{}\", name))).collect(),\n                                 Applicability::MachineApplicable,\n                             );"}, {"sha": "72f0b333c5a356046d36276eea0c4b49e0089caf", "filename": "src/test/ui/const-generics/issues/issue-62187-encountered-polymorphic-const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -10,7 +10,7 @@ warning: unused variable: `foo`\n   --> $DIR/issue-62187-encountered-polymorphic-const.rs:15:9\n    |\n LL |     let foo = <[u8; 2]>::BIT_LEN;\n-   |         ^^^ help: consider prefixing with an underscore: `_foo`\n+   |         ^^^ help: if this is intentional, prefix it with an underscore: `_foo`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n "}, {"sha": "4a1ef7350b8cbacd97e03fce85cce75e239e9d06", "filename": "src/test/ui/issues/issue-17999.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fissues%2Fissue-17999.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fissues%2Fissue-17999.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17999.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ error: unused variable: `x`\n   --> $DIR/issue-17999.rs:5:13\n    |\n LL |         let x = ();\n-   |             ^ help: consider prefixing with an underscore: `_x`\n+   |             ^ help: if this is intentional, prefix it with an underscore: `_x`\n    |\n note: the lint level is defined here\n   --> $DIR/issue-17999.rs:1:9\n@@ -14,7 +14,7 @@ error: unused variable: `a`\n   --> $DIR/issue-17999.rs:7:13\n    |\n LL |             a => {}\n-   |             ^ help: consider prefixing with an underscore: `_a`\n+   |             ^ help: if this is intentional, prefix it with an underscore: `_a`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "2b34830d08427c9235701b00d7ce3af983d9c8b4", "filename": "src/test/ui/issues/issue-22599.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fissues%2Fissue-22599.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fissues%2Fissue-22599.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22599.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ error: unused variable: `a`\n   --> $DIR/issue-22599.rs:8:19\n    |\n LL |     v = match 0 { a => 0 };\n-   |                   ^ help: consider prefixing with an underscore: `_a`\n+   |                   ^ help: if this is intentional, prefix it with an underscore: `_a`\n    |\n note: the lint level is defined here\n   --> $DIR/issue-22599.rs:1:9"}, {"sha": "eccb71095acc70df351051d1c8fb00f0b18543df", "filename": "src/test/ui/issues/issue-56685.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fissues%2Fissue-56685.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fissues%2Fissue-56685.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56685.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -9,7 +9,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(unused_variables)]\n    |         ^^^^^^^^^^^^^^^^\n-help: consider prefixing with an underscore\n+help: if this is intentional, prefix it with an underscore\n    |\n LL |         E::A(_x) | E::B(_x) => {}\n    |              ^^         ^^\n@@ -20,7 +20,7 @@ error: unused variable: `x`\n LL |         F::A(x, y) | F::B(x, y) => { y },\n    |              ^            ^\n    |\n-help: consider prefixing with an underscore\n+help: if this is intentional, prefix it with an underscore\n    |\n LL |         F::A(_x, y) | F::B(_x, y) => { y },\n    |              ^^            ^^\n@@ -29,21 +29,21 @@ error: unused variable: `a`\n   --> $DIR/issue-56685.rs:27:14\n    |\n LL |         F::C(a, b) => { 3 }\n-   |              ^ help: consider prefixing with an underscore: `_a`\n+   |              ^ help: if this is intentional, prefix it with an underscore: `_a`\n \n error: unused variable: `b`\n   --> $DIR/issue-56685.rs:27:17\n    |\n LL |         F::C(a, b) => { 3 }\n-   |                 ^ help: consider prefixing with an underscore: `_b`\n+   |                 ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `x`\n   --> $DIR/issue-56685.rs:32:25\n    |\n LL |     let _ = if let F::A(x, y) | F::B(x, y) = F::A(1, 2) {\n    |                         ^            ^\n    |\n-help: consider prefixing with an underscore\n+help: if this is intentional, prefix it with an underscore\n    |\n LL |     let _ = if let F::A(_x, y) | F::B(_x, y) = F::A(1, 2) {\n    |                         ^^            ^^\n@@ -54,7 +54,7 @@ error: unused variable: `x`\n LL |     while let F::A(x, y) | F::B(x, y) = F::A(1, 2) {\n    |                    ^            ^\n    |\n-help: consider prefixing with an underscore\n+help: if this is intentional, prefix it with an underscore\n    |\n LL |     while let F::A(_x, y) | F::B(_x, y) = F::A(1, 2) {\n    |                    ^^            ^^"}, {"sha": "cc675a709a2c6a90d5634c85e88015f510ce4984", "filename": "src/test/ui/lint/issue-47390-unused-variable-in-struct-pattern.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ warning: unused variable: `i_think_continually`\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:26:9\n    |\n LL |     let i_think_continually = 2;\n-   |         ^^^^^^^^^^^^^^^^^^^ help: consider prefixing with an underscore: `_i_think_continually`\n+   |         ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_i_think_continually`\n    |\n note: the lint level is defined here\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:5:9\n@@ -15,19 +15,19 @@ warning: unused variable: `mut_unused_var`\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:33:13\n    |\n LL |     let mut mut_unused_var = 1;\n-   |             ^^^^^^^^^^^^^^ help: consider prefixing with an underscore: `_mut_unused_var`\n+   |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_mut_unused_var`\n \n warning: unused variable: `var`\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:37:14\n    |\n LL |     let (mut var, unused_var) = (1, 2);\n-   |              ^^^ help: consider prefixing with an underscore: `_var`\n+   |              ^^^ help: if this is intentional, prefix it with an underscore: `_var`\n \n warning: unused variable: `unused_var`\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:37:19\n    |\n LL |     let (mut var, unused_var) = (1, 2);\n-   |                   ^^^^^^^^^^ help: consider prefixing with an underscore: `_unused_var`\n+   |                   ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused_var`\n \n warning: unused variable: `corridors_of_light`\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:45:26"}, {"sha": "1bc0e41fd550c2318c764bc1735859f73a0b16cc", "filename": "src/test/ui/lint/lint-match-arms.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-match-arms.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-match-arms.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-match-arms.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ error: unused variable: `y`\n   --> $DIR/lint-match-arms.rs:5:9\n    |\n LL |         y => (),\n-   |         ^ help: consider prefixing with an underscore: `_y`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_y`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-match-arms.rs:3:16"}, {"sha": "029334c2eb67c3cb283b79bc53f82b77bfcf6f08", "filename": "src/test/ui/lint/lint-removed-allow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-removed-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-removed-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed-allow.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ error: unused variable: `unused`\n   --> $DIR/lint-removed-allow.rs:8:17\n    |\n LL | fn main() { let unused = (); }\n-   |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n+   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-removed-allow.rs:7:8"}, {"sha": "4adc18cc2ce5d70b5d4d1234a1fc69d91b963a8e", "filename": "src/test/ui/lint/lint-removed-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -18,7 +18,7 @@ error: unused variable: `unused`\n   --> $DIR/lint-removed-cmdline.rs:12:17\n    |\n LL | fn main() { let unused = (); }\n-   |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n+   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-removed-cmdline.rs:11:8"}, {"sha": "190e10c8a9944c9dc023e9c6ca83def0cbbf9ecd", "filename": "src/test/ui/lint/lint-removed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -10,7 +10,7 @@ error: unused variable: `unused`\n   --> $DIR/lint-removed.rs:8:17\n    |\n LL | fn main() { let unused = (); }\n-   |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n+   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-removed.rs:7:8"}, {"sha": "46f6a10de2743c291a6cfb5dbbcc846e38059d86", "filename": "src/test/ui/lint/lint-renamed-allow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-renamed-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-renamed-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed-allow.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ error: unused variable: `unused`\n   --> $DIR/lint-renamed-allow.rs:8:17\n    |\n LL | fn main() { let unused = (); }\n-   |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n+   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-renamed-allow.rs:7:8"}, {"sha": "ef617dfe31f025b27c3e74b9b51990a49a130da0", "filename": "src/test/ui/lint/lint-renamed-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -18,7 +18,7 @@ error: unused variable: `unused`\n   --> $DIR/lint-renamed-cmdline.rs:8:17\n    |\n LL | fn main() { let unused = (); }\n-   |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n+   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-renamed-cmdline.rs:7:8"}, {"sha": "0225e22623424c4ee861e6587860fd79cc91b212", "filename": "src/test/ui/lint/lint-renamed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -10,7 +10,7 @@ error: unused variable: `unused`\n   --> $DIR/lint-renamed.rs:4:17\n    |\n LL | fn main() { let unused = (); }\n-   |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n+   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-renamed.rs:3:8"}, {"sha": "d6e684e83065177f280897ecd9db7ebaef900ccc", "filename": "src/test/ui/lint/lint-unused-variables.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-unused-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-unused-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-variables.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ error: unused variable: `a`\n   --> $DIR/lint-unused-variables.rs:8:5\n    |\n LL |     a: i32,\n-   |     ^ help: consider prefixing with an underscore: `_a`\n+   |     ^ help: if this is intentional, prefix it with an underscore: `_a`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-unused-variables.rs:5:9\n@@ -14,61 +14,61 @@ error: unused variable: `b`\n   --> $DIR/lint-unused-variables.rs:14:5\n    |\n LL |     b: i32,\n-   |     ^ help: consider prefixing with an underscore: `_b`\n+   |     ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `a`\n   --> $DIR/lint-unused-variables.rs:68:9\n    |\n LL |         a: i32,\n-   |         ^ help: consider prefixing with an underscore: `_a`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n \n error: unused variable: `b`\n   --> $DIR/lint-unused-variables.rs:74:9\n    |\n LL |         b: i32,\n-   |         ^ help: consider prefixing with an underscore: `_b`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `b`\n   --> $DIR/lint-unused-variables.rs:42:9\n    |\n LL |         b: i32,\n-   |         ^ help: consider prefixing with an underscore: `_b`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `b`\n   --> $DIR/lint-unused-variables.rs:47:9\n    |\n LL |         b: i32,\n-   |         ^ help: consider prefixing with an underscore: `_b`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `a`\n   --> $DIR/lint-unused-variables.rs:22:9\n    |\n LL |         a: i32,\n-   |         ^ help: consider prefixing with an underscore: `_a`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n \n error: unused variable: `b`\n   --> $DIR/lint-unused-variables.rs:29:9\n    |\n LL |         b: i32,\n-   |         ^ help: consider prefixing with an underscore: `_b`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `b`\n   --> $DIR/lint-unused-variables.rs:34:9\n    |\n LL |         b: i32,\n-   |         ^ help: consider prefixing with an underscore: `_b`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `b`\n   --> $DIR/lint-unused-variables.rs:55:9\n    |\n LL |         b: i32,\n-   |         ^ help: consider prefixing with an underscore: `_b`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `b`\n   --> $DIR/lint-unused-variables.rs:60:9\n    |\n LL |         b: i32,\n-   |         ^ help: consider prefixing with an underscore: `_b`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "1d7e0909e40abdb260aafcf8ebcf5f51698f6f3a", "filename": "src/test/ui/lint/lint-uppercase-variables.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -22,7 +22,7 @@ warning: unused variable: `Foo`\n   --> $DIR/lint-uppercase-variables.rs:22:9\n    |\n LL |         Foo => {}\n-   |         ^^^ help: consider prefixing with an underscore: `_Foo`\n+   |         ^^^ help: if this is intentional, prefix it with an underscore: `_Foo`\n    |\n note: the lint level is defined here\n   --> $DIR/lint-uppercase-variables.rs:1:9\n@@ -35,13 +35,13 @@ warning: unused variable: `Foo`\n   --> $DIR/lint-uppercase-variables.rs:28:9\n    |\n LL |     let Foo = foo::Foo::Foo;\n-   |         ^^^ help: consider prefixing with an underscore: `_Foo`\n+   |         ^^^ help: if this is intentional, prefix it with an underscore: `_Foo`\n \n warning: unused variable: `Foo`\n   --> $DIR/lint-uppercase-variables.rs:33:17\n    |\n LL |     fn in_param(Foo: foo::Foo) {}\n-   |                 ^^^ help: consider prefixing with an underscore: `_Foo`\n+   |                 ^^^ help: if this is intentional, prefix it with an underscore: `_Foo`\n \n error: structure field `X` should have a snake case name\n   --> $DIR/lint-uppercase-variables.rs:10:5"}, {"sha": "42187330a3eb1ef88569e6f3d2e6b4e4626d6cf6", "filename": "src/test/ui/liveness/liveness-unused.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -17,7 +17,7 @@ error: unused variable: `x`\n   --> $DIR/liveness-unused.rs:8:7\n    |\n LL | fn f1(x: isize) {\n-   |       ^ help: consider prefixing with an underscore: `_x`\n+   |       ^ help: if this is intentional, prefix it with an underscore: `_x`\n    |\n note: the lint level is defined here\n   --> $DIR/liveness-unused.rs:2:9\n@@ -29,19 +29,19 @@ error: unused variable: `x`\n   --> $DIR/liveness-unused.rs:12:8\n    |\n LL | fn f1b(x: &mut isize) {\n-   |        ^ help: consider prefixing with an underscore: `_x`\n+   |        ^ help: if this is intentional, prefix it with an underscore: `_x`\n \n error: unused variable: `x`\n   --> $DIR/liveness-unused.rs:20:9\n    |\n LL |     let x: isize;\n-   |         ^ help: consider prefixing with an underscore: `_x`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_x`\n \n error: unused variable: `x`\n   --> $DIR/liveness-unused.rs:25:9\n    |\n LL |     let x = 3;\n-   |         ^ help: consider prefixing with an underscore: `_x`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_x`\n \n error: variable `x` is assigned to, but never used\n   --> $DIR/liveness-unused.rs:30:13\n@@ -76,25 +76,25 @@ error: unused variable: `i`\n   --> $DIR/liveness-unused.rs:59:12\n    |\n LL |       Some(i) => {\n-   |            ^ help: consider prefixing with an underscore: `_i`\n+   |            ^ help: if this is intentional, prefix it with an underscore: `_i`\n \n error: unused variable: `x`\n   --> $DIR/liveness-unused.rs:79:9\n    |\n LL |     for x in 1..10 { }\n-   |         ^ help: consider prefixing with an underscore: `_x`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_x`\n \n error: unused variable: `x`\n   --> $DIR/liveness-unused.rs:84:10\n    |\n LL |     for (x, _) in [1, 2, 3].iter().enumerate() { }\n-   |          ^ help: consider prefixing with an underscore: `_x`\n+   |          ^ help: if this is intentional, prefix it with an underscore: `_x`\n \n error: unused variable: `x`\n   --> $DIR/liveness-unused.rs:89:13\n    |\n LL |     for (_, x) in [1, 2, 3].iter().enumerate() {\n-   |             ^ help: consider prefixing with an underscore: `_x`\n+   |             ^ help: if this is intentional, prefix it with an underscore: `_x`\n \n error: variable `x` is assigned to, but never used\n   --> $DIR/liveness-unused.rs:112:9"}, {"sha": "5525802c2511a59047f24d1bfa13bc5769bcd0aa", "filename": "src/test/ui/never_type/never-assign-dead-code.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -25,7 +25,7 @@ warning: unused variable: `x`\n   --> $DIR/never-assign-dead-code.rs:9:9\n    |\n LL |     let x: ! = panic!(\"aah\");\n-   |         ^ help: consider prefixing with an underscore: `_x`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_x`\n    |\n note: the lint level is defined here\n   --> $DIR/never-assign-dead-code.rs:6:9"}, {"sha": "bfbcf68b6c7e6bab1d15914f6cbf6ee2919d7dd6", "filename": "src/test/ui/proc-macro/attributes-included.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ warning: unused variable: `a`\n   --> $DIR/attributes-included.rs:17:9\n    |\n LL |     let a: i32 = \"foo\";\n-   |         ^ help: consider prefixing with an underscore: `_a`\n+   |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n    |\n note: the lint level is defined here\n   --> $DIR/attributes-included.rs:4:9"}, {"sha": "1ced8d8a14a53e1c2430455510c162bf8048f6de", "filename": "src/test/ui/rfc-2565-param-attrs/param-attrs-cfg.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-cfg.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ error: unused variable: `a`\n   --> $DIR/param-attrs-cfg.rs:24:23\n    |\n LL |     #[cfg(something)] a: i32,\n-   |                       ^ help: consider prefixing with an underscore: `_a`\n+   |                       ^ help: if this is intentional, prefix it with an underscore: `_a`\n    |\n note: the lint level is defined here\n   --> $DIR/param-attrs-cfg.rs:5:9\n@@ -14,109 +14,109 @@ error: unused variable: `b`\n   --> $DIR/param-attrs-cfg.rs:30:23\n    |\n LL |     #[cfg(something)] b: i32,\n-   |                       ^ help: consider prefixing with an underscore: `_b`\n+   |                       ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `c`\n   --> $DIR/param-attrs-cfg.rs:32:40\n    |\n LL |     #[cfg_attr(nothing, cfg(nothing))] c: i32,\n-   |                                        ^ help: consider prefixing with an underscore: `_c`\n+   |                                        ^ help: if this is intentional, prefix it with an underscore: `_c`\n \n error: unused variable: `a`\n   --> $DIR/param-attrs-cfg.rs:107:27\n    |\n LL |         #[cfg(something)] a: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_a`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_a`\n \n error: unused variable: `b`\n   --> $DIR/param-attrs-cfg.rs:113:27\n    |\n LL |         #[cfg(something)] b: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_b`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `c`\n   --> $DIR/param-attrs-cfg.rs:115:44\n    |\n LL |         #[cfg_attr(nothing, cfg(nothing))] c: i32,\n-   |                                            ^ help: consider prefixing with an underscore: `_c`\n+   |                                            ^ help: if this is intentional, prefix it with an underscore: `_c`\n \n error: unused variable: `b`\n   --> $DIR/param-attrs-cfg.rs:67:27\n    |\n LL |         #[cfg(something)] b: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_b`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `c`\n   --> $DIR/param-attrs-cfg.rs:69:44\n    |\n LL |         #[cfg_attr(nothing, cfg(nothing))] c: i32,\n-   |                                            ^ help: consider prefixing with an underscore: `_c`\n+   |                                            ^ help: if this is intentional, prefix it with an underscore: `_c`\n \n error: unused variable: `b`\n   --> $DIR/param-attrs-cfg.rs:75:27\n    |\n LL |         #[cfg(something)] b: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_b`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `c`\n   --> $DIR/param-attrs-cfg.rs:77:44\n    |\n LL |         #[cfg_attr(nothing, cfg(nothing))] c: i32,\n-   |                                            ^ help: consider prefixing with an underscore: `_c`\n+   |                                            ^ help: if this is intentional, prefix it with an underscore: `_c`\n \n error: unused variable: `a`\n   --> $DIR/param-attrs-cfg.rs:41:27\n    |\n LL |         #[cfg(something)] a: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_a`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_a`\n \n error: unused variable: `b`\n   --> $DIR/param-attrs-cfg.rs:48:27\n    |\n LL |         #[cfg(something)] b: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_b`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `c`\n   --> $DIR/param-attrs-cfg.rs:50:44\n    |\n LL |         #[cfg_attr(nothing, cfg(nothing))] c: i32,\n-   |                                            ^ help: consider prefixing with an underscore: `_c`\n+   |                                            ^ help: if this is intentional, prefix it with an underscore: `_c`\n \n error: unused variable: `b`\n   --> $DIR/param-attrs-cfg.rs:56:27\n    |\n LL |         #[cfg(something)] b: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_b`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `c`\n   --> $DIR/param-attrs-cfg.rs:58:44\n    |\n LL |         #[cfg_attr(nothing, cfg(nothing))] c: i32,\n-   |                                            ^ help: consider prefixing with an underscore: `_c`\n+   |                                            ^ help: if this is intentional, prefix it with an underscore: `_c`\n \n error: unused variable: `b`\n   --> $DIR/param-attrs-cfg.rs:86:27\n    |\n LL |         #[cfg(something)] b: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_b`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `c`\n   --> $DIR/param-attrs-cfg.rs:88:44\n    |\n LL |         #[cfg_attr(nothing, cfg(nothing))] c: i32,\n-   |                                            ^ help: consider prefixing with an underscore: `_c`\n+   |                                            ^ help: if this is intentional, prefix it with an underscore: `_c`\n \n error: unused variable: `b`\n   --> $DIR/param-attrs-cfg.rs:94:27\n    |\n LL |         #[cfg(something)] b: i32,\n-   |                           ^ help: consider prefixing with an underscore: `_b`\n+   |                           ^ help: if this is intentional, prefix it with an underscore: `_b`\n \n error: unused variable: `c`\n   --> $DIR/param-attrs-cfg.rs:96:44\n    |\n LL |         #[cfg_attr(nothing, cfg(nothing))] c: i32,\n-   |                                            ^ help: consider prefixing with an underscore: `_c`\n+   |                                            ^ help: if this is intentional, prefix it with an underscore: `_c`\n \n error: aborting due to 19 previous errors\n "}, {"sha": "2a090f442cc5f66930357aa86aebafcb23b54a6b", "filename": "src/test/ui/span/issue-24690.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -2,7 +2,7 @@ warning: unused variable: `theOtherTwo`\n   --> $DIR/issue-24690.rs:13:9\n    |\n LL |     let theOtherTwo = 2;\n-   |         ^^^^^^^^^^^ help: consider prefixing with an underscore: `_theOtherTwo`\n+   |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_theOtherTwo`\n    |\n note: the lint level is defined here\n   --> $DIR/issue-24690.rs:8:9"}, {"sha": "55195ce50a13ec364fe6b74250652e9b0f671ecc", "filename": "src/test/ui/suggestions/unused-closure-argument.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b35c30251f441f44a5e3ea9c99ced8d75162897f/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.stderr?ref=b35c30251f441f44a5e3ea9c99ced8d75162897f", "patch": "@@ -14,7 +14,7 @@ error: unused variable: `x`\n   --> $DIR/unused-closure-argument.rs:17:15\n    |\n LL |         .map(|x| 4)\n-   |               ^ help: consider prefixing with an underscore: `_x`\n+   |               ^ help: if this is intentional, prefix it with an underscore: `_x`\n \n error: aborting due to 2 previous errors\n "}]}