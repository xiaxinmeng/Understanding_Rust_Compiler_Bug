{"sha": "bcf44f8cc1b6f4b53e806a3280b0dcd599767416", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZjQ0ZjhjYzFiNmY0YjUzZTgwNmEzMjgwYjBkY2Q1OTk3Njc0MTY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-15T23:49:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-16T00:10:39Z"}, "message": "core: Optimize str::unsafe::slice_bytes. Closes #1995", "tree": {"sha": "8678d62fdfc07cf85e5ef12a442e2452669a9363", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8678d62fdfc07cf85e5ef12a442e2452669a9363"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcf44f8cc1b6f4b53e806a3280b0dcd599767416", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf44f8cc1b6f4b53e806a3280b0dcd599767416", "html_url": "https://github.com/rust-lang/rust/commit/bcf44f8cc1b6f4b53e806a3280b0dcd599767416", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcf44f8cc1b6f4b53e806a3280b0dcd599767416/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29fa4a60fbfa002ab277f40b7dffebdfe8df2740", "url": "https://api.github.com/repos/rust-lang/rust/commits/29fa4a60fbfa002ab277f40b7dffebdfe8df2740", "html_url": "https://github.com/rust-lang/rust/commit/29fa4a60fbfa002ab277f40b7dffebdfe8df2740"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "2affc9e361f69d904b3360bc4078c39d8c17dd10", "filename": "src/libcore/str.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bcf44f8cc1b6f4b53e806a3280b0dcd599767416/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf44f8cc1b6f4b53e806a3280b0dcd599767416/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=bcf44f8cc1b6f4b53e806a3280b0dcd599767416", "patch": "@@ -1331,7 +1331,16 @@ mod unsafe {\n        assert (begin <= end);\n        assert (end <= len(s));\n \n-       let mut v = as_bytes(s) { |v| vec::slice(v, begin, end) };\n+       let mut v = as_buf(s) { |sbuf|\n+           let mut v = [];\n+           vec::reserve(v, end - begin + 1u);\n+           vec::as_buf(v) { |vbuf|\n+               let src = ptr::offset(sbuf, begin);\n+               ptr::memcpy(vbuf, src, end - begin);\n+           }\n+           vec::unsafe::set_len(v, end - begin);\n+           v\n+       };\n        v += [0u8];\n        let s: str = ::unsafe::reinterpret_cast(v);\n        ::unsafe::leak(v);"}]}