{"sha": "cc800531cc79b76b37a1e0f1f58f807ea7aee68b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjODAwNTMxY2M3OWI3NmIzN2ExZTBmMWY1OGY4MDdlYTdhZWU2OGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-20T23:41:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-20T23:41:31Z"}, "message": "Auto merge of #43368 - Aaronepower:patch-3, r=alexcrichton\n\nUpdate release notes for 1.19.0\n\nThis is just #42503 there is some problems with submodules I can't seem to fix so I just created a new PR.", "tree": {"sha": "50e0861b013c82ba813c04a713cc8c3faa1b37ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50e0861b013c82ba813c04a713cc8c3faa1b37ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc800531cc79b76b37a1e0f1f58f807ea7aee68b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc800531cc79b76b37a1e0f1f58f807ea7aee68b", "html_url": "https://github.com/rust-lang/rust/commit/cc800531cc79b76b37a1e0f1f58f807ea7aee68b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc800531cc79b76b37a1e0f1f58f807ea7aee68b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae98ebfcb9ad5a5384fd229a6ee91315b02ca969", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae98ebfcb9ad5a5384fd229a6ee91315b02ca969", "html_url": "https://github.com/rust-lang/rust/commit/ae98ebfcb9ad5a5384fd229a6ee91315b02ca969"}, {"sha": "077deadb85163cd9338587a71bcd8e58639e93b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/077deadb85163cd9338587a71bcd8e58639e93b1", "html_url": "https://github.com/rust-lang/rust/commit/077deadb85163cd9338587a71bcd8e58639e93b1"}], "stats": {"total": 184, "additions": 184, "deletions": 0}, "files": [{"sha": "5bb23149f2a745122c84c754f71cb16402c1a8b6", "filename": "RELEASES.md", "status": "modified", "additions": 184, "deletions": 0, "changes": 184, "blob_url": "https://github.com/rust-lang/rust/blob/cc800531cc79b76b37a1e0f1f58f807ea7aee68b/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/cc800531cc79b76b37a1e0f1f58f807ea7aee68b/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=cc800531cc79b76b37a1e0f1f58f807ea7aee68b", "patch": "@@ -1,3 +1,187 @@\n+Version 1.19.0 (2017-07-20)\n+===========================\n+\n+Language\n+--------\n+\n+- [Numeric fields can now be used for creating tuple structs.][41145] [RFC 1506]\n+  For example `struct Point(u32, u32); let x = Point { 0: 7, 1: 0 };`.\n+- [Macro recursion limit increased to 1024 from 64.][41676]\n+- [Added lint for detecting unused macros.][41907]\n+- [`loop` can now return a value with `break`.][42016] [RFC 1624]\n+  For example: `let x = loop { break 7; };`\n+- [C compatible `union`s are now available.][42068] [RFC 1444] They can only\n+  contain `Copy` types and cannot have a `Drop` implementation.\n+  Example: `union Foo { bar: u8, baz: usize }`\n+- [Non capturing closures can now be coerced into `fn`s,][42162] [RFC 1558]\n+  Example: `let foo: fn(u8) -> u8 = |v: u8| { v };`\n+\n+Compiler\n+--------\n+\n+- [Add support for bootstrapping the Rust compiler toolchain on Android.][41370]\n+- [Change `arm-linux-androideabi` to correspond to the `armeabi`\n+  official ABI.][41656] If you wish to continue targeting the `armeabi-v7a` ABI\n+  you should use `--target armv7-linux-androideabi`.\n+- [Fixed ICE when removing a source file between compilation sessions.][41873]\n+- [Minor optimisation of string operations.][42037]\n+- [Compiler error message is now `aborting due to previous error(s)` instead of\n+  `aborting due to N previous errors`][42150] This was previously inaccurate and\n+  would only count certain kinds of errors.\n+- [The compiler now supports Visual Studio 2017][42225]\n+- [The compiler is now built against LLVM 4.0.1 by default][42948]\n+- [Added a lot][42264] of [new error codes][42302]\n+- [Added `target-feature=+crt-static` option][37406] [RFC 1721] Which allows\n+  libraries with C Run-time Libraries(CRT) to be statically linked.\n+- [Fixed various ARM codegen bugs][42740]\n+\n+Libraries\n+---------\n+\n+- [`String` now implements `FromIterator<Cow<'a, str>>` and\n+  `Extend<Cow<'a, str>>`][41449]\n+- [`Vec` now implements `From<&mut [T]>`][41530]\n+- [`Box<[u8]>` now implements `From<Box<str>>`][41258]\n+- [`SplitWhitespace` now implements `Clone`][41659]\n+- [`[u8]::reverse` is now 5x faster and `[u16]::reverse` is now\n+  1.5x faster][41764]\n+- [`eprint!` and `eprintln!` macros added to prelude.][41192] Same as the `print!`\n+  macros, but for printing to stderr.\n+\n+Stabilized APIs\n+---------------\n+\n+- [`OsString::shrink_to_fit`]\n+- [`cmp::Reverse`]\n+- [`Command::envs`]\n+- [`thread::ThreadId`]\n+\n+Cargo\n+-----\n+\n+- [Build scripts can now add environment variables to the environment\n+  the crate is being compiled in.\n+  Example: `println!(\"cargo:rustc-env=FOO=bar\");`][cargo/3929]\n+- [Subcommands now replace the current process rather than spawning a new\n+  child process][cargo/3970]\n+- [Workspace members can now accept glob file patterns][cargo/3979]\n+- [Added `--all` flag to the `cargo bench` subcommand to run benchmarks of all\n+  the members in a given workspace.][cargo/3988]\n+- [Updated `libssh2-sys` to 0.2.6][cargo/4008]\n+- [Target directory path is now in the cargo metadata][cargo/4022]\n+- [Cargo no longer checks out a local working directory for the\n+  crates.io index][cargo/4026] This should provide smaller file size for the\n+  registry, and improve cloning times, especially on Windows machines.\n+- [Added an `--exclude` option for excluding certain packages when using the\n+  `--all` option][cargo/4031]\n+- [Cargo will now automatically retry when receiving a 5xx error\n+  from crates.io][cargo/4032]\n+- [The `--features` option now accepts multiple comma or space\n+  delimited values.][cargo/4084]\n+- [Added support for custom target specific runners][cargo/3954]\n+\n+Misc\n+----\n+\n+- [Added `rust-windbg.cmd`][39983] for loading rust `.natvis` files in the\n+  Windows Debugger.\n+- [Rust will now release XZ compressed packages][rust-installer/57]\n+- [rustup will now prefer to download rust packages with\n+  XZ compression][rustup/1100] over GZip packages.\n+- [Added the ability to escape `#` in rust documentation][41785] By adding\n+  additional `#`'s ie. `##` is now `#`\n+\n+Compatibility Notes\n+-------------------\n+\n+- [`MutexGuard<T>` may only be `Sync` if `T` is `Sync`.][41624]\n+- [`-Z` flags are now no longer allowed to be used on the stable\n+  compiler.][41751] This has been a warning for a year previous to this.\n+- [As a result of the `-Z` flag change, the `cargo-check` plugin no\n+  longer works][42844]. Users should migrate to the built-in `check`\n+  command, which has been available since 1.16.\n+- [Ending a float literal with `._` is now a hard error.\n+  Example: `42._` .][41946]\n+- [Any use of a private `extern crate` outside of its module is now a\n+  hard error.][36886] This was previously a warning.\n+- [`use ::self::foo;` is now a hard error.][36888] `self` paths are always\n+  relative while the `::` prefix makes a path absolute, but was ignored and the\n+  path was relative regardless.\n+- [Floating point constants in match patterns is now a hard error][36890]\n+  This was previously a warning.\n+- [Struct or enum constants that don't derive `PartialEq` & `Eq` used\n+  match patterns is now a hard error][36891] This was previously a warning.\n+- [Lifetimes named `'_` are no longer allowed.][36892] This was previously\n+  a warning.\n+- [From the pound escape, lines consisting of multiple `#`s are\n+  now visible][41785]\n+- [It is an error to reexport private enum variants][42460]. This is\n+  known to break a number of crates that depend on an older version of\n+  mustache.\n+- [On Windows, if `VCINSTALLDIR` is set incorrectly, `rustc` will try\n+  to use it to find the linker, and the build will fail where it did\n+  not previously][42607]\n+\n+[36886]: https://github.com/rust-lang/rust/issues/36886\n+[36888]: https://github.com/rust-lang/rust/issues/36888\n+[36890]: https://github.com/rust-lang/rust/issues/36890\n+[36891]: https://github.com/rust-lang/rust/issues/36891\n+[36892]: https://github.com/rust-lang/rust/issues/36892\n+[37406]: https://github.com/rust-lang/rust/issues/37406\n+[39983]: https://github.com/rust-lang/rust/pull/39983\n+[41145]: https://github.com/rust-lang/rust/pull/41145\n+[41192]: https://github.com/rust-lang/rust/pull/41192\n+[41258]: https://github.com/rust-lang/rust/pull/41258\n+[41370]: https://github.com/rust-lang/rust/pull/41370\n+[41449]: https://github.com/rust-lang/rust/pull/41449\n+[41530]: https://github.com/rust-lang/rust/pull/41530\n+[41624]: https://github.com/rust-lang/rust/pull/41624\n+[41656]: https://github.com/rust-lang/rust/pull/41656\n+[41659]: https://github.com/rust-lang/rust/pull/41659\n+[41676]: https://github.com/rust-lang/rust/pull/41676\n+[41751]: https://github.com/rust-lang/rust/pull/41751\n+[41764]: https://github.com/rust-lang/rust/pull/41764\n+[41785]: https://github.com/rust-lang/rust/pull/41785\n+[41873]: https://github.com/rust-lang/rust/pull/41873\n+[41907]: https://github.com/rust-lang/rust/pull/41907\n+[41946]: https://github.com/rust-lang/rust/pull/41946\n+[42016]: https://github.com/rust-lang/rust/pull/42016\n+[42037]: https://github.com/rust-lang/rust/pull/42037\n+[42068]: https://github.com/rust-lang/rust/pull/42068\n+[42150]: https://github.com/rust-lang/rust/pull/42150\n+[42162]: https://github.com/rust-lang/rust/pull/42162\n+[42225]: https://github.com/rust-lang/rust/pull/42225\n+[42264]: https://github.com/rust-lang/rust/pull/42264\n+[42302]: https://github.com/rust-lang/rust/pull/42302\n+[42460]: https://github.com/rust-lang/rust/issues/42460\n+[42607]: https://github.com/rust-lang/rust/issues/42607\n+[42740]: https://github.com/rust-lang/rust/pull/42740\n+[42844]: https://github.com/rust-lang/rust/issues/42844\n+[42948]: https://github.com/rust-lang/rust/pull/42948\n+[RFC 1444]: https://github.com/rust-lang/rfcs/pull/1444\n+[RFC 1506]: https://github.com/rust-lang/rfcs/pull/1506\n+[RFC 1558]: https://github.com/rust-lang/rfcs/pull/1558\n+[RFC 1624]: https://github.com/rust-lang/rfcs/pull/1624\n+[RFC 1721]: https://github.com/rust-lang/rfcs/pull/1721\n+[`Command::envs`]: https://doc.rust-lang.org/std/process/struct.Command.html#method.envs\n+[`OsString::shrink_to_fit`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html#method.shrink_to_fit\n+[`cmp::Reverse`]: https://doc.rust-lang.org/std/cmp/struct.Reverse.html\n+[`thread::ThreadId`]: https://doc.rust-lang.org/std/thread/struct.ThreadId.html\n+[cargo/3929]: https://github.com/rust-lang/cargo/pull/3929\n+[cargo/3954]: https://github.com/rust-lang/cargo/pull/3954\n+[cargo/3970]: https://github.com/rust-lang/cargo/pull/3970\n+[cargo/3979]: https://github.com/rust-lang/cargo/pull/3979\n+[cargo/3988]: https://github.com/rust-lang/cargo/pull/3988\n+[cargo/4008]: https://github.com/rust-lang/cargo/pull/4008\n+[cargo/4022]: https://github.com/rust-lang/cargo/pull/4022\n+[cargo/4026]: https://github.com/rust-lang/cargo/pull/4026\n+[cargo/4031]: https://github.com/rust-lang/cargo/pull/4031\n+[cargo/4032]: https://github.com/rust-lang/cargo/pull/4032\n+[cargo/4084]: https://github.com/rust-lang/cargo/pull/4084\n+[rust-installer/57]: https://github.com/rust-lang/rust-installer/pull/57\n+[rustup/1100]: https://github.com/rust-lang-nursery/rustup.rs/pull/1100\n+\n+\n Version 1.18.0 (2017-06-08)\n ===========================\n "}]}