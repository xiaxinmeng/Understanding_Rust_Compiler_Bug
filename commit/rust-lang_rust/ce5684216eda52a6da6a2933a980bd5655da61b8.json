{"sha": "ce5684216eda52a6da6a2933a980bd5655da61b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNTY4NDIxNmVkYTUyYTZkYTZhMjkzM2E5ODBiZDU2NTVkYTYxYjg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-02T22:17:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-02T22:17:59Z"}, "message": "Merge #3413\n\n3413: Update chalk for RawId removal, Ty interners r=flodiebold a=lnicola\n\nr? @flodiebold \n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "d6b195957696a8a4be9727d33f3ef3adc03ed8a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6b195957696a8a4be9727d33f3ef3adc03ed8a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce5684216eda52a6da6a2933a980bd5655da61b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeXYYXCRBK7hj4Ov3rIwAAdHIIAB93d9DKnQasiZIyHiYu4lHj\n3X+FYTZ6ERnKHQyrJG0SGvZCMceEyl2hprF+u+cVCVIopO7jlUZaDtuhEbRLg/Ly\nd7ciNUgZgt319rRHqQZC+84udMRe0LGssPjhuUFNUfhPq4jVwkJiOzJu/q/N1Kd9\nORgQWuLaeAUeYi3cj3qhbmF0a8DF2js/ftrJGlWKEQY1FTjE5MAg0bjin0ra0Qb9\n1CwWBOogGQLalXoT77anloWTQyTP/LzMFfHf25r30k4a0754sfRX4/G17Yt/jwi7\n9thUYU5C/tuwPh17rzTmIgp7LCW3PI7OSHH5sZF69noiJBi0sAtFUDo+XsiXFrI=\n=ZC2O\n-----END PGP SIGNATURE-----\n", "payload": "tree d6b195957696a8a4be9727d33f3ef3adc03ed8a8\nparent 1eeb7a79bb0d47566c82c70e424084fb0dfec1bc\nparent f60cf882a858e0d9f6df07f661021814d7872690\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1583187479 +0000\ncommitter GitHub <noreply@github.com> 1583187479 +0000\n\nMerge #3413\n\n3413: Update chalk for RawId removal, Ty interners r=flodiebold a=lnicola\n\nr? @flodiebold \n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce5684216eda52a6da6a2933a980bd5655da61b8", "html_url": "https://github.com/rust-lang/rust/commit/ce5684216eda52a6da6a2933a980bd5655da61b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce5684216eda52a6da6a2933a980bd5655da61b8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eeb7a79bb0d47566c82c70e424084fb0dfec1bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eeb7a79bb0d47566c82c70e424084fb0dfec1bc", "html_url": "https://github.com/rust-lang/rust/commit/1eeb7a79bb0d47566c82c70e424084fb0dfec1bc"}, {"sha": "f60cf882a858e0d9f6df07f661021814d7872690", "url": "https://api.github.com/repos/rust-lang/rust/commits/f60cf882a858e0d9f6df07f661021814d7872690", "html_url": "https://github.com/rust-lang/rust/commit/f60cf882a858e0d9f6df07f661021814d7872690"}], "stats": {"total": 58, "additions": 27, "deletions": 31}, "files": [{"sha": "cab28ad496ca4ef76bae103d7d8657d3a35de813", "filename": "Cargo.lock", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ce5684216eda52a6da6a2933a980bd5655da61b8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ce5684216eda52a6da6a2933a980bd5655da61b8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ce5684216eda52a6da6a2933a980bd5655da61b8", "patch": "@@ -129,7 +129,7 @@ checksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n [[package]]\n name = \"chalk-derive\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=2939913fb7bb94ac2a6721087dc086be11410702#2939913fb7bb94ac2a6721087dc086be11410702\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=177d71340acc7a7204a33115fc63075d86452179#177d71340acc7a7204a33115fc63075d86452179\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -139,7 +139,7 @@ dependencies = [\n [[package]]\n name = \"chalk-engine\"\n version = \"0.9.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=2939913fb7bb94ac2a6721087dc086be11410702#2939913fb7bb94ac2a6721087dc086be11410702\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=177d71340acc7a7204a33115fc63075d86452179#177d71340acc7a7204a33115fc63075d86452179\"\n dependencies = [\n  \"chalk-macros\",\n  \"rustc-hash\",\n@@ -148,26 +148,25 @@ dependencies = [\n [[package]]\n name = \"chalk-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=2939913fb7bb94ac2a6721087dc086be11410702#2939913fb7bb94ac2a6721087dc086be11410702\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=177d71340acc7a7204a33115fc63075d86452179#177d71340acc7a7204a33115fc63075d86452179\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-engine\",\n  \"chalk-macros\",\n- \"lalrpop-intern\",\n ]\n \n [[package]]\n name = \"chalk-macros\"\n version = \"0.1.1\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=2939913fb7bb94ac2a6721087dc086be11410702#2939913fb7bb94ac2a6721087dc086be11410702\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=177d71340acc7a7204a33115fc63075d86452179#177d71340acc7a7204a33115fc63075d86452179\"\n dependencies = [\n  \"lazy_static\",\n ]\n \n [[package]]\n name = \"chalk-rust-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=2939913fb7bb94ac2a6721087dc086be11410702#2939913fb7bb94ac2a6721087dc086be11410702\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=177d71340acc7a7204a33115fc63075d86452179#177d71340acc7a7204a33115fc63075d86452179\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-engine\",\n@@ -178,7 +177,7 @@ dependencies = [\n [[package]]\n name = \"chalk-solve\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=2939913fb7bb94ac2a6721087dc086be11410702#2939913fb7bb94ac2a6721087dc086be11410702\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=177d71340acc7a7204a33115fc63075d86452179#177d71340acc7a7204a33115fc63075d86452179\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-engine\","}, {"sha": "202eca50717683cca7cafe5b09cb2fc3e3fdf63d", "filename": "crates/ra_hir_ty/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce5684216eda52a6da6a2933a980bd5655da61b8/crates%2Fra_hir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ce5684216eda52a6da6a2933a980bd5655da61b8/crates%2Fra_hir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2FCargo.toml?ref=ce5684216eda52a6da6a2933a980bd5655da61b8", "patch": "@@ -21,9 +21,9 @@ ra_prof = { path = \"../ra_prof\" }\n ra_syntax = { path = \"../ra_syntax\" }\n test_utils = { path = \"../test_utils\" }\n \n-chalk-solve =   { git = \"https://github.com/rust-lang/chalk.git\", rev = \"2939913fb7bb94ac2a6721087dc086be11410702\" }\n-chalk-rust-ir = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"2939913fb7bb94ac2a6721087dc086be11410702\" }\n-chalk-ir =      { git = \"https://github.com/rust-lang/chalk.git\", rev = \"2939913fb7bb94ac2a6721087dc086be11410702\" }\n+chalk-solve =   { git = \"https://github.com/rust-lang/chalk.git\", rev = \"177d71340acc7a7204a33115fc63075d86452179\" }\n+chalk-rust-ir = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"177d71340acc7a7204a33115fc63075d86452179\" }\n+chalk-ir =      { git = \"https://github.com/rust-lang/chalk.git\", rev = \"177d71340acc7a7204a33115fc63075d86452179\" }\n \n lalrpop-intern = \"0.15.1\"\n "}, {"sha": "7f7fe93b73c4b0d87eda990568d2ff3fe7b37b76", "filename": "crates/ra_hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ce5684216eda52a6da6a2933a980bd5655da61b8/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5684216eda52a6da6a2933a980bd5655da61b8/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=ce5684216eda52a6da6a2933a980bd5655da61b8", "patch": "@@ -18,7 +18,7 @@ use crate::{\n };\n \n #[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]\n-pub struct Interner {}\n+pub struct Interner;\n \n impl chalk_ir::interner::Interner for Interner {\n     type InternedType = Box<chalk_ir::TyData<Self>>;\n@@ -27,6 +27,7 @@ impl chalk_ir::interner::Interner for Interner {\n     type InternedGoal = Arc<GoalData<Self>>;\n     type InternedGoals = Vec<Goal<Self>>;\n     type InternedSubstitution = Vec<Parameter<Self>>;\n+    type Identifier = lalrpop_intern::InternedString;\n     type DefId = InternId;\n \n     // FIXME: implement these\n@@ -58,7 +59,7 @@ impl chalk_ir::interner::Interner for Interner {\n         None\n     }\n \n-    fn intern_ty(ty: chalk_ir::TyData<Self>) -> Box<chalk_ir::TyData<Self>> {\n+    fn intern_ty(&self, ty: chalk_ir::TyData<Self>) -> Box<chalk_ir::TyData<Self>> {\n         Box::new(ty)\n     }\n \n@@ -121,7 +122,7 @@ pub type StructId = chalk_ir::StructId<Interner>;\n pub type StructDatum = chalk_rust_ir::StructDatum<Interner>;\n pub type ImplId = chalk_ir::ImplId<Interner>;\n pub type ImplDatum = chalk_rust_ir::ImplDatum<Interner>;\n-pub type AssociatedTyValueId = chalk_rust_ir::AssociatedTyValueId;\n+pub type AssociatedTyValueId = chalk_rust_ir::AssociatedTyValueId<Interner>;\n pub type AssociatedTyValue = chalk_rust_ir::AssociatedTyValue<Interner>;\n \n pub(super) trait ToChalk {\n@@ -144,22 +145,22 @@ impl ToChalk for Ty {\n             Ty::Apply(apply_ty) => {\n                 let name = apply_ty.ctor.to_chalk(db);\n                 let substitution = apply_ty.parameters.to_chalk(db);\n-                chalk_ir::ApplicationTy { name, substitution }.cast().intern()\n+                chalk_ir::ApplicationTy { name, substitution }.cast().intern(&Interner)\n             }\n             Ty::Projection(proj_ty) => {\n                 let associated_ty_id = proj_ty.associated_ty.to_chalk(db);\n                 let substitution = proj_ty.parameters.to_chalk(db);\n-                chalk_ir::AliasTy { associated_ty_id, substitution }.cast().intern()\n+                chalk_ir::AliasTy { associated_ty_id, substitution }.cast().intern(&Interner)\n             }\n             Ty::Placeholder(id) => {\n                 let interned_id = db.intern_type_param_id(id);\n                 PlaceholderIndex {\n                     ui: UniverseIndex::ROOT,\n                     idx: interned_id.as_intern_id().as_usize(),\n                 }\n-                .to_ty::<Interner>()\n+                .to_ty::<Interner>(&Interner)\n             }\n-            Ty::Bound(idx) => chalk_ir::TyData::BoundVar(idx as usize).intern(),\n+            Ty::Bound(idx) => chalk_ir::TyData::BoundVar(idx as usize).intern(&Interner),\n             Ty::Infer(_infer_ty) => panic!(\"uncanonicalized infer ty\"),\n             Ty::Dyn(predicates) => {\n                 let where_clauses = predicates\n@@ -169,12 +170,12 @@ impl ToChalk for Ty {\n                     .map(|p| p.to_chalk(db))\n                     .collect();\n                 let bounded_ty = chalk_ir::DynTy { bounds: make_binders(where_clauses, 1) };\n-                chalk_ir::TyData::Dyn(bounded_ty).intern()\n+                chalk_ir::TyData::Dyn(bounded_ty).intern(&Interner)\n             }\n             Ty::Opaque(_) | Ty::Unknown => {\n                 let substitution = chalk_ir::Substitution::empty();\n                 let name = TypeName::Error;\n-                chalk_ir::ApplicationTy { name, substitution }.cast().intern()\n+                chalk_ir::ApplicationTy { name, substitution }.cast().intern(&Interner)\n             }\n         }\n     }\n@@ -611,6 +612,9 @@ where\n             _ => None,\n         }\n     }\n+    fn interner(&self) -> &Interner {\n+        &Interner\n+    }\n }\n \n pub(crate) fn associated_ty_data_query(\n@@ -822,13 +826,6 @@ fn type_alias_associated_ty_value(\n     Arc::new(value)\n }\n \n-fn id_from_chalk<T: InternKey>(chalk_id: chalk_ir::RawId) -> T {\n-    T::from_intern_id(InternId::from(chalk_id.index))\n-}\n-fn id_to_chalk<T: InternKey>(salsa_id: T) -> chalk_ir::RawId {\n-    chalk_ir::RawId { index: salsa_id.as_intern_id().as_u32() }\n-}\n-\n impl From<StructId> for crate::TypeCtorId {\n     fn from(struct_id: StructId) -> Self {\n         InternKey::from_intern_id(struct_id.0)\n@@ -853,14 +850,14 @@ impl From<crate::traits::GlobalImplId> for ImplId {\n     }\n }\n \n-impl From<chalk_rust_ir::AssociatedTyValueId> for crate::traits::AssocTyValueId {\n-    fn from(id: chalk_rust_ir::AssociatedTyValueId) -> Self {\n-        id_from_chalk(id.0)\n+impl From<chalk_rust_ir::AssociatedTyValueId<Interner>> for crate::traits::AssocTyValueId {\n+    fn from(id: chalk_rust_ir::AssociatedTyValueId<Interner>) -> Self {\n+        Self::from_intern_id(id.0)\n     }\n }\n \n-impl From<crate::traits::AssocTyValueId> for chalk_rust_ir::AssociatedTyValueId {\n+impl From<crate::traits::AssocTyValueId> for chalk_rust_ir::AssociatedTyValueId<Interner> {\n     fn from(assoc_ty_value_id: crate::traits::AssocTyValueId) -> Self {\n-        chalk_rust_ir::AssociatedTyValueId(id_to_chalk(assoc_ty_value_id))\n+        chalk_rust_ir::AssociatedTyValueId(assoc_ty_value_id.as_intern_id())\n     }\n }"}]}