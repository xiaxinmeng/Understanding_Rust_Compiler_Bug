{"sha": "80386ca5be78d8ea65483df3edeec1a89b09a5a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMzg2Y2E1YmU3OGQ4ZWE2NTQ4M2RmM2VkZWVjMWE4OWIwOWE1YTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-01T08:03:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-01T08:03:07Z"}, "message": "Use Strings for display names", "tree": {"sha": "6e58b419e0d877c4ab9f784ab85e6ca564c1cf04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e58b419e0d877c4ab9f784ab85e6ca564c1cf04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80386ca5be78d8ea65483df3edeec1a89b09a5a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80386ca5be78d8ea65483df3edeec1a89b09a5a3", "html_url": "https://github.com/rust-lang/rust/commit/80386ca5be78d8ea65483df3edeec1a89b09a5a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80386ca5be78d8ea65483df3edeec1a89b09a5a3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "307c6fec618d5e509c754362687253ef44bb5f3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/307c6fec618d5e509c754362687253ef44bb5f3f", "html_url": "https://github.com/rust-lang/rust/commit/307c6fec618d5e509c754362687253ef44bb5f3f"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "2097139877960dd52a6a6a476b61502f2a6e9aaa", "filename": "crates/ra_db/src/fixture.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Ffixture.rs?ref=80386ca5be78d8ea65483df3edeec1a89b09a5a3", "patch": "@@ -149,15 +149,17 @@ fn with_files(\n             let crate_id = crate_graph.add_crate_root(\n                 file_id,\n                 meta.edition,\n-                Some(CrateName::new(&krate).unwrap()),\n+                Some(krate.clone()),\n                 meta.cfg,\n                 meta.env,\n                 Default::default(),\n             );\n-            let prev = crates.insert(krate.clone(), crate_id);\n+            let crate_name = CrateName::new(&krate).unwrap();\n+            let prev = crates.insert(crate_name.clone(), crate_id);\n             assert!(prev.is_none());\n             for dep in meta.deps {\n-                crate_deps.push((krate.clone(), dep))\n+                let dep = CrateName::new(&dep).unwrap();\n+                crate_deps.push((crate_name.clone(), dep))\n             }\n         } else if meta.path == \"/main.rs\" || meta.path == \"/lib.rs\" {\n             assert!(default_crate_root.is_none());"}, {"sha": "445a1ee48e0a6826f5347a0b4cde4b06f50b8947", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=80386ca5be78d8ea65483df3edeec1a89b09a5a3", "patch": "@@ -67,7 +67,7 @@ pub struct CrateGraph {\n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct CrateId(pub u32);\n \n-#[derive(Debug, Clone, PartialEq, Eq)]\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct CrateName(SmolStr);\n \n impl CrateName {\n@@ -124,7 +124,7 @@ pub struct CrateData {\n     /// The name to display to the end user.\n     /// This actual crate name can be different in a particular dependent crate\n     /// or may even be missing for some cases, such as a dummy crate for the code snippet.\n-    pub display_name: Option<CrateName>,\n+    pub display_name: Option<String>,\n     pub cfg_options: CfgOptions,\n     pub env: Env,\n     pub dependencies: Vec<Dependency>,\n@@ -153,7 +153,7 @@ impl CrateGraph {\n         &mut self,\n         file_id: FileId,\n         edition: Edition,\n-        display_name: Option<CrateName>,\n+        display_name: Option<String>,\n         cfg_options: CfgOptions,\n         env: Env,\n         proc_macro: Vec<(SmolStr, Arc<dyn ra_tt::TokenExpander>)>,"}, {"sha": "e09eb77c2c159c4a1acbe7a10c96981b590cfeaf", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=80386ca5be78d8ea65483df3edeec1a89b09a5a3", "patch": "@@ -31,7 +31,7 @@ use hir_ty::{\n     ApplicationTy, Canonical, GenericPredicate, InEnvironment, Substs, TraitEnvironment, Ty,\n     TyDefId, TypeCtor,\n };\n-use ra_db::{CrateId, CrateName, Edition, FileId};\n+use ra_db::{CrateId, Edition, FileId};\n use ra_prof::profile;\n use ra_syntax::ast::{self, AttrsOwner, NameOwner};\n use rustc_hash::FxHashSet;\n@@ -94,8 +94,8 @@ impl Crate {\n         db.crate_graph()[self.id].edition\n     }\n \n-    pub fn display_name(self, db: &dyn HirDatabase) -> Option<CrateName> {\n-        db.crate_graph()[self.id].display_name.as_ref().cloned()\n+    pub fn display_name(self, db: &dyn HirDatabase) -> Option<String> {\n+        db.crate_graph()[self.id].display_name.clone()\n     }\n \n     pub fn query_external_importables("}, {"sha": "a393d3dba247548a1d9ce42e84c1b0dfedc7d1bb", "filename": "crates/ra_ide/src/mock_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs?ref=80386ca5be78d8ea65483df3edeec1a89b09a5a3", "patch": "@@ -130,7 +130,7 @@ impl MockAnalysis {\n                 let other_crate = crate_graph.add_crate_root(\n                     file_id,\n                     edition,\n-                    Some(CrateName::new(crate_name).unwrap()),\n+                    Some(crate_name.to_string()),\n                     cfg,\n                     env,\n                     Default::default(),"}, {"sha": "8dbf4e6eadad08778f19c54735b7994b17d934ce", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80386ca5be78d8ea65483df3edeec1a89b09a5a3/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=80386ca5be78d8ea65483df3edeec1a89b09a5a3", "patch": "@@ -309,13 +309,11 @@ impl ProjectWorkspace {\n \n                         let env = Env::default();\n                         let proc_macro = vec![];\n-                        let crate_name = CrateName::new(&sysroot[krate].name)\n-                            .expect(\"Sysroot crate names should not contain dashes\");\n-\n+                        let name = sysroot[krate].name.clone();\n                         let crate_id = crate_graph.add_crate_root(\n                             file_id,\n                             Edition::Edition2018,\n-                            Some(crate_name),\n+                            Some(name),\n                             cfg_options.clone(),\n                             env,\n                             proc_macro,\n@@ -389,7 +387,7 @@ impl ProjectWorkspace {\n                             let crate_id = crate_graph.add_crate_root(\n                                 file_id,\n                                 edition,\n-                                Some(CrateName::normalize_dashes(&cargo[pkg].name)),\n+                                Some(cargo[pkg].name.clone()),\n                                 cfg_options,\n                                 env,\n                                 proc_macro.clone(),"}]}