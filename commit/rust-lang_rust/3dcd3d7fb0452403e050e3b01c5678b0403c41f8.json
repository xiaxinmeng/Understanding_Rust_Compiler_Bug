{"sha": "3dcd3d7fb0452403e050e3b01c5678b0403c41f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkY2QzZDdmYjA0NTI0MDNlMDUwZTNiMDFjNTY3OGIwNDAzYzQxZjg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-17T12:11:55Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-18T05:27:58Z"}, "message": "Combine condition and body of control flow\n\nIf the condition of control flow expressions ends with closing parens and alike,\nput the opening bracket of the body on the same line with closing parens.", "tree": {"sha": "c1274509d58497e78afcee45d62795f99a1779d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1274509d58497e78afcee45d62795f99a1779d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dcd3d7fb0452403e050e3b01c5678b0403c41f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dcd3d7fb0452403e050e3b01c5678b0403c41f8", "html_url": "https://github.com/rust-lang/rust/commit/3dcd3d7fb0452403e050e3b01c5678b0403c41f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dcd3d7fb0452403e050e3b01c5678b0403c41f8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be18e7af90f48ee1518f32f3e1aefe1955e1d403", "url": "https://api.github.com/repos/rust-lang/rust/commits/be18e7af90f48ee1518f32f3e1aefe1955e1d403", "html_url": "https://github.com/rust-lang/rust/commit/be18e7af90f48ee1518f32f3e1aefe1955e1d403"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "1729505d63b616b334b09b79fa01b634a2cd4946", "filename": "src/chains.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3dcd3d7fb0452403e050e3b01c5678b0403c41f8/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dcd3d7fb0452403e050e3b01c5678b0403c41f8/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=3dcd3d7fb0452403e050e3b01c5678b0403c41f8", "patch": "@@ -78,7 +78,7 @@\n \n use Shape;\n use rewrite::{Rewrite, RewriteContext};\n-use utils::{wrap_str, first_line_width, last_line_width, mk_sp};\n+use utils::{wrap_str, first_line_width, last_line_width, mk_sp, last_line_extendable};\n use expr::rewrite_call;\n use config::IndentStyle;\n use macros::convert_try_mac;\n@@ -322,12 +322,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n }\n \n fn is_extendable_parent(context: &RewriteContext, parent_str: &str) -> bool {\n-    context.config.chain_indent() == IndentStyle::Block &&\n-        parent_str.lines().last().map_or(false, |s| {\n-            s.trim()\n-                .chars()\n-                .all(|c| c == ')' || c == ']' || c == '}' || c == '?')\n-        })\n+    context.config.chain_indent() == IndentStyle::Block && last_line_extendable(parent_str)\n }\n \n // True if the chain is only `?`s."}, {"sha": "c299ffadad5b874c9e998c92cd20a3df4c3a579b", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3dcd3d7fb0452403e050e3b01c5678b0403c41f8/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dcd3d7fb0452403e050e3b01c5678b0403c41f8/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=3dcd3d7fb0452403e050e3b01c5678b0403c41f8", "patch": "@@ -21,7 +21,7 @@ use lists::{write_list, itemize_list, ListFormatting, SeparatorTactic, ListTacti\n use string::{StringFormat, rewrite_string};\n use utils::{extra_offset, last_line_width, wrap_str, binary_search, first_line_width,\n             semicolon_for_stmt, trimmed_last_line_width, left_most_sub_expr, stmt_expr,\n-            colon_spaces, contains_skip, mk_sp};\n+            colon_spaces, contains_skip, mk_sp, last_line_extendable};\n use visitor::FmtVisitor;\n use config::{Config, IndentStyle, MultilineStyle, ControlBraceStyle, Style};\n use comment::{FindUncommented, rewrite_comment, contains_comment, recover_comment_removed};\n@@ -1145,7 +1145,8 @@ impl<'a> ControlFlow<'a> {\n         };\n \n         let force_newline_brace = context.config.control_style() == Style::Rfc &&\n-            pat_expr_string.contains('\\n');\n+            pat_expr_string.contains('\\n') &&\n+            !last_line_extendable(&pat_expr_string);\n \n         // Try to format if-else on single line.\n         if self.allow_single_line && context.config.single_line_if_else_max_width() > 0 {"}, {"sha": "1be83d01babacad7726227d67aad20095ae1afb5", "filename": "src/utils.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3dcd3d7fb0452403e050e3b01c5678b0403c41f8/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dcd3d7fb0452403e050e3b01c5678b0403c41f8/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=3dcd3d7fb0452403e050e3b01c5678b0403c41f8", "patch": "@@ -108,6 +108,15 @@ pub fn trimmed_last_line_width(s: &str) -> usize {\n     }\n }\n \n+#[inline]\n+pub fn last_line_extendable(s: &str) -> bool {\n+    s.lines().last().map_or(false, |s| {\n+        s.trim()\n+            .chars()\n+            .all(|c| c == ')' || c == ']' || c == '}' || c == '?')\n+    })\n+}\n+\n #[inline]\n fn is_skip(meta_item: &MetaItem) -> bool {\n     match meta_item.node {"}]}