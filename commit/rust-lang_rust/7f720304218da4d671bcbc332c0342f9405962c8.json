{"sha": "7f720304218da4d671bcbc332c0342f9405962c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNzIwMzA0MjE4ZGE0ZDY3MWJjYmMzMzJjMDM0MmY5NDA1OTYyYzg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-21T19:50:40Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-16T19:09:04Z"}, "message": "Fix range splitting", "tree": {"sha": "ccb9b327c4d9b58e924f5c7ea81cefd04532a0b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccb9b327c4d9b58e924f5c7ea81cefd04532a0b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f720304218da4d671bcbc332c0342f9405962c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f720304218da4d671bcbc332c0342f9405962c8", "html_url": "https://github.com/rust-lang/rust/commit/7f720304218da4d671bcbc332c0342f9405962c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f720304218da4d671bcbc332c0342f9405962c8/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20cb1084a5a90cf76ca3207d42b16b9c3ab1c76", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20cb1084a5a90cf76ca3207d42b16b9c3ab1c76", "html_url": "https://github.com/rust-lang/rust/commit/a20cb1084a5a90cf76ca3207d42b16b9c3ab1c76"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "eae2bd7a40422dd1dcc9ca0898e3f3b7830a2cb1", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f720304218da4d671bcbc332c0342f9405962c8/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f720304218da4d671bcbc332c0342f9405962c8/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=7f720304218da4d671bcbc332c0342f9405962c8", "patch": "@@ -725,8 +725,8 @@ fn ranges_subtract_pattern<'a, 'tcx>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n             } else {\n                 // The pattern intersects the middle of the subrange,\n                 // so we create two ranges either side of the intersection.)\n-                remaining_ranges.push((subrange_lo, pat_interval.lo));\n-                remaining_ranges.push((pat_interval.hi, subrange_hi));\n+                remaining_ranges.push((subrange_lo, pat_interval.lo - 1));\n+                remaining_ranges.push((pat_interval.hi + 1, subrange_hi));\n             }\n         }\n         // Convert the remaining ranges from pairs to inclusive `ConstantRange`s."}, {"sha": "85f12dad04736aaf9f38d74bb96f171579db89c9", "filename": "src/test/ui/exhaustive_integer_patterns.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f720304218da4d671bcbc332c0342f9405962c8/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f720304218da4d671bcbc332c0342f9405962c8/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr?ref=7f720304218da4d671bcbc332c0342f9405962c8", "patch": "@@ -16,23 +16,23 @@ error[E0004]: non-exhaustive patterns: `128u8...255u8` not covered\n LL |     match x { //~ ERROR non-exhaustive patterns: `128u8...255u8` not covered\n    |           ^ pattern `128u8...255u8` not covered\n \n-error[E0004]: non-exhaustive patterns: `11u8...20u8`, `30u8...35u8`, `35u8...70u8` and 1 more not covered\n+error[E0004]: non-exhaustive patterns: `11u8...19u8`, `31u8...34u8`, `36u8...69u8` and 1 more not covered\n   --> $DIR/exhaustive_integer_patterns.rs:42:11\n    |\n LL |     match x { //~ ERROR non-exhaustive patterns\n-   |           ^ patterns `11u8...20u8`, `30u8...35u8`, `35u8...70u8` and 1 more not covered\n+   |           ^ patterns `11u8...19u8`, `31u8...34u8`, `36u8...69u8` and 1 more not covered\n \n error: unreachable pattern\n   --> $DIR/exhaustive_integer_patterns.rs:53:9\n    |\n LL |         -2..=20 => {} //~ ERROR unreachable pattern\n    |         ^^^^^^^\n \n-error[E0004]: non-exhaustive patterns: `-128i8...-5i8`, `120i8...121i8` and `121i8...127i8` not covered\n+error[E0004]: non-exhaustive patterns: `-128i8...-6i8` and `122i8...127i8` not covered\n   --> $DIR/exhaustive_integer_patterns.rs:50:11\n    |\n LL |     match x { //~ ERROR non-exhaustive patterns\n-   |           ^ patterns `-128i8...-5i8`, `120i8...121i8` and `121i8...127i8` not covered\n+   |           ^ patterns `-128i8...-6i8` and `122i8...127i8` not covered\n \n error: aborting due to 5 previous errors\n "}]}