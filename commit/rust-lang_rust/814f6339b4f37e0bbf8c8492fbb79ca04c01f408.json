{"sha": "814f6339b4f37e0bbf8c8492fbb79ca04c01f408", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNGY2MzM5YjRmMzdlMGJiZjhjODQ5MmZiYjc5Y2EwNGMwMWY0MDg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-07-27T04:24:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-27T04:24:11Z"}, "message": "Merge pull request #2862 from topecongiro/issue-2852\n\nPreserve parens in trait bounds", "tree": {"sha": "da46ce10a88a897c565b57bd34c1a5adfb215062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da46ce10a88a897c565b57bd34c1a5adfb215062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/814f6339b4f37e0bbf8c8492fbb79ca04c01f408", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbWp5rCRBK7hj4Ov3rIwAAdHIIAEntwOtgggpR+QiTDEIja2H4\nCrjq2gKo/j+1zgJcpjtpX3NLDNQnoeCJu+rdKhb8/jGVqhvuzzS6koyVZM9C1K1+\nBhb+eMWyVMKmV/CYDQILOWczpxxlp5+Ma1cJETZAUta3sTOx9gq3i/rcuSKeIgTE\n7MGVlk0+JkYVKP+mox76Jv6hFjIkiG+ogoOa1taxRtVk1/cIkPzAV8Y7QxEDTscw\ncB26Fs+uD9kPrGIMc6+iEmbZl2QcbkQq1EajKNfADfwXF9LiOEiCO7WNX/HX2asW\nBsMCFeb43PyMTlG4t5VUYiL+FK+yVyD6eU7JDVDaZTKLUg23ncWyS30W+x6GEx4=\n=MVVJ\n-----END PGP SIGNATURE-----\n", "payload": "tree da46ce10a88a897c565b57bd34c1a5adfb215062\nparent 7e3dc8fae7ed84cc1879ef4e0bc6f00dfe059e1b\nparent e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c\nauthor Nick Cameron <nrc@ncameron.org> 1532665451 +1200\ncommitter GitHub <noreply@github.com> 1532665451 +1200\n\nMerge pull request #2862 from topecongiro/issue-2852\n\nPreserve parens in trait bounds"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/814f6339b4f37e0bbf8c8492fbb79ca04c01f408", "html_url": "https://github.com/rust-lang/rust/commit/814f6339b4f37e0bbf8c8492fbb79ca04c01f408", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e3dc8fae7ed84cc1879ef4e0bc6f00dfe059e1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e3dc8fae7ed84cc1879ef4e0bc6f00dfe059e1b", "html_url": "https://github.com/rust-lang/rust/commit/7e3dc8fae7ed84cc1879ef4e0bc6f00dfe059e1b"}, {"sha": "e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c", "html_url": "https://github.com/rust-lang/rust/commit/e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "5d57b99d32d8d10855acf635668f8c3d80832582", "filename": "src/types.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=814f6339b4f37e0bbf8c8492fbb79ca04c01f408", "patch": "@@ -521,7 +521,24 @@ impl Rewrite for ast::GenericBound {\n \n impl Rewrite for ast::GenericBounds {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n-        join_bounds(context, shape, self, true)\n+        if self.is_empty() {\n+            return Some(String::new());\n+        }\n+\n+        let span = mk_sp(self.get(0)?.span().lo(), self.last()?.span().hi());\n+        let has_paren = context.snippet(span).starts_with(\"(\");\n+        let bounds_shape = if has_paren {\n+            shape.offset_left(1)?.sub_width(1)?\n+        } else {\n+            shape\n+        };\n+        join_bounds(context, bounds_shape, self, true).map(|s| {\n+            if has_paren {\n+                format!(\"({})\", s)\n+            } else {\n+                s\n+            }\n+        })\n     }\n }\n "}, {"sha": "012643be92c29ae968776b7199b44934bf2a8a87", "filename": "tests/source/dyn_trait.rs", "status": "renamed", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/tests%2Fsource%2Fdyn_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/tests%2Fsource%2Fdyn_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fdyn_trait.rs?ref=814f6339b4f37e0bbf8c8492fbb79ca04c01f408", "patch": "@@ -1,5 +1,7 @@\n #![feature(dyn_trait)]\n+\n fn main() {\n+    // #2506\n     // checks rustfmt doesn't remove dyn\n     trait MyTrait {\n         fn method(&self) -> u64;\n@@ -13,4 +15,6 @@ fn main() {\n \n     fn f2(a: Box<dyn Very_______________________Long__________________Name____________________Trait+ 'static,>) {}\n \n+    // #2582\n+    let _: &dyn (::std::any::Any) = &msg;\n }", "previous_filename": "tests/source/issue-2506.rs"}, {"sha": "b6e2810a57cb5faa7f7705c7dcdf80a176ee7b52", "filename": "tests/target/dyn_trait.rs", "status": "renamed", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/tests%2Ftarget%2Fdyn_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/tests%2Ftarget%2Fdyn_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fdyn_trait.rs?ref=814f6339b4f37e0bbf8c8492fbb79ca04c01f408", "patch": "@@ -1,5 +1,7 @@\n #![feature(dyn_trait)]\n+\n fn main() {\n+    // #2506\n     // checks rustfmt doesn't remove dyn\n     trait MyTrait {\n         fn method(&self) -> u64;\n@@ -19,4 +21,7 @@ fn main() {\n         >,\n     ) {\n     }\n+\n+    // #2582\n+    let _: &dyn (::std::any::Any) = &msg;\n }", "previous_filename": "tests/target/issue-2506.rs"}, {"sha": "60b18a978ed9fb0b9016c4a732f8a1a37aa85650", "filename": "tests/target/fn-simple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/tests%2Ftarget%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/814f6339b4f37e0bbf8c8492fbb79ca04c01f408/tests%2Ftarget%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-simple.rs?ref=814f6339b4f37e0bbf8c8492fbb79ca04c01f408", "patch": "@@ -107,4 +107,4 @@ pub(crate) fn init() {}\n crate fn init() {}\n \n // #2630\n-fn make_map<T, F: Fn(&T) -> String>(records: &Vec<T>, key_fn: F) -> HashMap<String, usize> {}\n+fn make_map<T, F: (Fn(&T) -> String)>(records: &Vec<T>, key_fn: F) -> HashMap<String, usize> {}"}]}