{"sha": "160eebec21387c13e4966f5744b998e75e647fb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MGVlYmVjMjEzODdjMTNlNDk2NmY1NzQ0Yjk5OGU3NWU2NDdmYjg=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-04-13T16:45:12Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-05-17T16:38:19Z"}, "message": "Only need TyErr for uninhabited types", "tree": {"sha": "663848a5746d64bd64c7cf060b33b1cb303f74b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/663848a5746d64bd64c7cf060b33b1cb303f74b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/160eebec21387c13e4966f5744b998e75e647fb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/160eebec21387c13e4966f5744b998e75e647fb8", "html_url": "https://github.com/rust-lang/rust/commit/160eebec21387c13e4966f5744b998e75e647fb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/160eebec21387c13e4966f5744b998e75e647fb8/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5294b6486ea4930e0d16518851dffa51917a8e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5294b6486ea4930e0d16518851dffa51917a8e5", "html_url": "https://github.com/rust-lang/rust/commit/a5294b6486ea4930e0d16518851dffa51917a8e5"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b2b7959f0ba22d4fcb4cd24905b629fa39591426", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/160eebec21387c13e4966f5744b998e75e647fb8/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/160eebec21387c13e4966f5744b998e75e647fb8/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=160eebec21387c13e4966f5744b998e75e647fb8", "patch": "@@ -880,15 +880,15 @@ impl<'tcx> Constructor<'tcx> {\n                                 let ty = field.ty(cx.tcx, substs);\n                                 let is_visible = adt.is_enum()\n                                     || field.vis.is_accessible_from(cx.module, cx.tcx);\n-                                let is_uninhabited = cx.is_uninhabited(ty);\n-                                // Treat all non-visible fields as `TyErr`. They can't appear\n-                                // in any other pattern from this match (because they are\n+                                let is_inhabited = !cx.is_uninhabited(ty);\n+                                // Treat all uninhabited non-visible fields as `TyErr`. They can't\n+                                // appear in any other pattern from this match (because they are\n                                 // private), so their type does not matter - but we don't want\n                                 // to know they are uninhabited.\n                                 // Also treat all uninhabited types in non-exhaustive variants as\n                                 // `TyErr`.\n                                 let allowed_to_inspect =\n-                                    is_visible && !(is_non_exhaustive && is_uninhabited);\n+                                    is_inhabited || (is_visible && !is_non_exhaustive);\n \n                                 if allowed_to_inspect {\n                                     Pat::wildcard_from_ty(ty)"}]}