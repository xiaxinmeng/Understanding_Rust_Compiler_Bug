{"sha": "76d0a13ae5a82aaaa1eff409d873cca29bdcb88e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZDBhMTNhZTVhODJhYWFhMWVmZjQwOWQ4NzNjY2EyOWJkY2I4OGU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-03-26T19:53:34Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-03-30T02:41:09Z"}, "message": "resolve type variables with no constraints to bot", "tree": {"sha": "567ebc1c0f4717b59b16e015f6cf05d6720252c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/567ebc1c0f4717b59b16e015f6cf05d6720252c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e", "html_url": "https://github.com/rust-lang/rust/commit/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f452973a7fa8dcd3c7846c3eb333f968748443f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f452973a7fa8dcd3c7846c3eb333f968748443f6", "html_url": "https://github.com/rust-lang/rust/commit/f452973a7fa8dcd3c7846c3eb333f968748443f6"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "f0e2bcf40fe1bc54a263871fe5d7b15b221dc2da", "filename": "src/rustc/middle/infer.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e/src%2Frustc%2Fmiddle%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e/src%2Frustc%2Fmiddle%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Finfer.rs?ref=76d0a13ae5a82aaaa1eff409d873cca29bdcb88e", "patch": "@@ -707,7 +707,7 @@ impl resolve_methods for infer_ctxt {\n \n     fn resolve_var<T:copy to_str>(\n         vb: vals_and_bindings<T>, bot_guard: fn(T)->bool,\n-        vid: int) -> fres<T> {\n+        vid: int, unbound: fn() -> fres<T>) -> fres<T> {\n \n         let {root:_, bounds} = self.get(vb, vid as uint);\n \n@@ -724,16 +724,24 @@ impl resolve_methods for infer_ctxt {\n           { ub:_, lb:some(t) } if !bot_guard(t) { ok(t) }\n           { ub:some(t), lb:_ } { ok(t) }\n           { ub:_, lb:some(t) } { ok(t) }\n-          { ub:none, lb:none } { self.rerr(vid) }\n+          { ub:none, lb:none } { unbound() }\n         }\n     }\n \n     fn resolve_ty_var(vid: int) -> fres<ty::t> {\n-        ret self.resolve_var(self.vb, {|t| type_is_bot(t)}, vid);\n+        ret self.resolve_var(\n+            self.vb,\n+            {|t| type_is_bot(t) },\n+            vid,\n+            {|| ok(ty::mk_bot(self.tcx)) });\n     }\n \n     fn resolve_region_var(rid: int) -> fres<ty::region> {\n-        ret self.resolve_var(self.rb, {|_t| false}, rid);\n+        ret self.resolve_var(\n+            self.rb,\n+            {|_t| false },\n+            rid,\n+            {|| err(rid) });\n     }\n \n     fn resolve_ty(typ: ty::t) -> fres<ty::t> {"}, {"sha": "80463e3ead383f1ae1ea53d71a590b2fd6bb0283", "filename": "src/test/compile-fail/vector-no-ann.rs", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f452973a7fa8dcd3c7846c3eb333f968748443f6/src%2Ftest%2Fcompile-fail%2Fvector-no-ann.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f452973a7fa8dcd3c7846c3eb333f968748443f6/src%2Ftest%2Fcompile-fail%2Fvector-no-ann.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvector-no-ann.rs?ref=f452973a7fa8dcd3c7846c3eb333f968748443f6", "patch": "@@ -1,2 +0,0 @@\n-// error-pattern:cannot determine a type\n-fn main() { let foo = []; }"}, {"sha": "dec8ca27db608a3aa155fbdcd667be43f0b552fd", "filename": "src/test/run-pass/vector-no-ann.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e/src%2Ftest%2Frun-pass%2Fvector-no-ann.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e/src%2Ftest%2Frun-pass%2Fvector-no-ann.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvector-no-ann.rs?ref=76d0a13ae5a82aaaa1eff409d873cca29bdcb88e", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    // We will infer this to have the type vec[bot]\n+    let _foo = [];\n+}"}, {"sha": "e13c1a0d6af3ed1df4b07e066bda9ff699b6bc33", "filename": "src/test/run-pass/weird-exprs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e/src%2Ftest%2Frun-pass%2Fweird-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d0a13ae5a82aaaa1eff409d873cca29bdcb88e/src%2Ftest%2Frun-pass%2Fweird-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fweird-exprs.rs?ref=76d0a13ae5a82aaaa1eff409d873cca29bdcb88e", "patch": "@@ -1,6 +1,6 @@\n // Just a grab bag of stuff that you wouldn't want to actually write.\n \n-fn strange() -> bool { let _x: bool = ret true; }\n+fn strange() -> bool { let _x = ret true; }\n \n fn funny() {\n     fn f(_x: ()) { }\n@@ -19,8 +19,8 @@ fn zombiejesus() {\n     do  {\n         while (ret) {\n             if (ret) {\n-                alt check (ret) {\n-                    1 {\n+                alt (ret) {\n+                    _ {\n                         if (ret) {\n                             ret\n                         } else {\n@@ -51,7 +51,7 @@ fn canttouchthis() -> uint {\n     pure fn p() -> bool { true }\n     let _a = (assert (true)) == (check (p()));\n     let _c = (check (p())) == ();\n-    let _b: bool = (log(debug, 0) == (ret 0u));\n+    let _b = (log(debug, 0) == (ret 0u));\n }\n \n fn angrydome() {"}]}