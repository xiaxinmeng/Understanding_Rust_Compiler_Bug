{"sha": "78fe75a7415f1073917b5202b83dad6f2ce0c2d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZmU3NWE3NDE1ZjEwNzM5MTdiNTIwMmI4M2RhZDZmMmNlMGMyZDY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-05T06:26:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-05T07:21:19Z"}, "message": "rt: Fix iaac_init using wrong type and not seeding correctly\n\nThis was a result of changing the vector representation to contain\na box header.", "tree": {"sha": "c743c36dfd7016d41e9ac2070cc3a6d99ea52cd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c743c36dfd7016d41e9ac2070cc3a6d99ea52cd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78fe75a7415f1073917b5202b83dad6f2ce0c2d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78fe75a7415f1073917b5202b83dad6f2ce0c2d6", "html_url": "https://github.com/rust-lang/rust/commit/78fe75a7415f1073917b5202b83dad6f2ce0c2d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78fe75a7415f1073917b5202b83dad6f2ce0c2d6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e04e9488adfd06128e9fda3ff423e5e35f3357f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e04e9488adfd06128e9fda3ff423e5e35f3357f5", "html_url": "https://github.com/rust-lang/rust/commit/e04e9488adfd06128e9fda3ff423e5e35f3357f5"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "26cf00bbcd10c156207d034108b5c990fc4f2ac5", "filename": "src/libcore/rand.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/78fe75a7415f1073917b5202b83dad6f2ce0c2d6/src%2Flibcore%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78fe75a7415f1073917b5202b83dad6f2ce0c2d6/src%2Flibcore%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frand.rs?ref=78fe75a7415f1073917b5202b83dad6f2ce0c2d6", "patch": "@@ -303,6 +303,17 @@ mod tests {\n         assert ra.gen_str(100u) == rb.gen_str(100u);\n     }\n \n+    #[test]\n+    fn rng_seeded_custom_seed2() {\n+        let seed = [2u8, 32u8, 4u8, 32u8, 51u8];\n+        let ra = rand::seeded_rng(seed);\n+        // Regression test that isaac is actually using the above vector\n+        let r = ra.next();\n+        #error(\"%?\", r);\n+        assert r == 890007737u32 // on x86_64\n+            || r == 2935188040u32; // on x86\n+    }\n+\n     #[test]\n     fn gen_int_range() {\n         let r = rand::rng();"}, {"sha": "0af08c84f196359b7c715b76e06d0b02f59cce28", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78fe75a7415f1073917b5202b83dad6f2ce0c2d6/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/78fe75a7415f1073917b5202b83dad6f2ce0c2d6/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=78fe75a7415f1073917b5202b83dad6f2ce0c2d6", "patch": "@@ -204,7 +204,7 @@ rand_new() {\n }\n \n extern \"C\" CDECL void *\n-rand_new_seeded(rust_vec* seed) {\n+rand_new_seeded(rust_vec_box* seed) {\n     rust_task *task = rust_get_current_task();\n     rust_sched_loop *thread = task->sched_loop;\n     randctx *rctx = (randctx *) task->malloc(sizeof(randctx),"}, {"sha": "3e0a343f5e9de0da897a8f47a6be53624d4aed0e", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/78fe75a7415f1073917b5202b83dad6f2ce0c2d6/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/78fe75a7415f1073917b5202b83dad6f2ce0c2d6/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=78fe75a7415f1073917b5202b83dad6f2ce0c2d6", "patch": "@@ -128,16 +128,16 @@ inline void isaac_seed(rust_kernel* kernel, uint8_t* dest)\n }\n \n inline void\n-isaac_init(rust_kernel *kernel, randctx *rctx, rust_vec* user_seed)\n+isaac_init(rust_kernel *kernel, randctx *rctx, rust_vec_box* user_seed)\n {\n     memset(rctx, 0, sizeof(randctx));\n \n     char *env_seed = kernel->env->rust_seed;\n     if (user_seed != NULL) {\n         // ignore bytes after the required length\n-        size_t seed_len = user_seed->fill < sizeof(rctx->randrsl)\n-            ? user_seed->fill : sizeof(rctx->randrsl);\n-        memcpy(&rctx->randrsl, user_seed->data, seed_len);\n+        size_t seed_len = user_seed->body.fill < sizeof(rctx->randrsl)\n+            ? user_seed->body.fill : sizeof(rctx->randrsl);\n+        memcpy(&rctx->randrsl, user_seed->body.data, seed_len);\n     } else if (env_seed != NULL) {\n         ub4 seed = (ub4) atoi(env_seed);\n         for (size_t i = 0; i < RANDSIZ; i ++) {"}]}