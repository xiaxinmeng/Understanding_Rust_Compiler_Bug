{"sha": "22befab611db45f5448d09db63e67fb72bd9af0c", "node_id": "C_kwDOAAsO6NoAKDIyYmVmYWI2MTFkYjQ1ZjU0NDhkMDlkYjYzZTY3ZmI3MmJkOWFmMGM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-12T14:28:09Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-22T17:17:05Z"}, "message": "Avoid hard-coding rustc path in prepare.rs", "tree": {"sha": "c4d7776f74b6374f0a00fa46ab6271171ac0a9cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4d7776f74b6374f0a00fa46ab6271171ac0a9cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22befab611db45f5448d09db63e67fb72bd9af0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22befab611db45f5448d09db63e67fb72bd9af0c", "html_url": "https://github.com/rust-lang/rust/commit/22befab611db45f5448d09db63e67fb72bd9af0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22befab611db45f5448d09db63e67fb72bd9af0c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d8b7186ccee2ef57886dc3bf17225d11a3935f", "html_url": "https://github.com/rust-lang/rust/commit/b1d8b7186ccee2ef57886dc3bf17225d11a3935f"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "58b21f64d37b036e582760617c007b90d636b0a6", "filename": "build_system/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22befab611db45f5448d09db63e67fb72bd9af0c/build_system%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22befab611db45f5448d09db63e67fb72bd9af0c/build_system%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fmod.rs?ref=22befab611db45f5448d09db63e67fb72bd9af0c", "patch": "@@ -149,7 +149,7 @@ pub(crate) fn main() {\n     }\n \n     if command == Command::Prepare {\n-        prepare::prepare(&dirs);\n+        prepare::prepare(&dirs, &bootstrap_host_compiler.rustc);\n         process::exit(0);\n     }\n "}, {"sha": "ac2dc47dd7fd54a9f0fd4e6b759c2ff2577413f4", "filename": "build_system/prepare.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/22befab611db45f5448d09db63e67fb72bd9af0c/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22befab611db45f5448d09db63e67fb72bd9af0c/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=22befab611db45f5448d09db63e67fb72bd9af0c", "patch": "@@ -9,19 +9,19 @@ use super::rustc_info::{get_default_sysroot, get_rustc_version};\n use super::tests::LIBCORE_TESTS_SRC;\n use super::utils::{copy_dir_recursively, git_command, retry_spawn_and_wait, spawn_and_wait};\n \n-pub(crate) fn prepare(dirs: &Dirs) {\n+pub(crate) fn prepare(dirs: &Dirs, rustc: &Path) {\n     RelPath::DOWNLOAD.ensure_fresh(dirs);\n \n-    prepare_stdlib(dirs);\n-    prepare_coretests(dirs);\n+    prepare_stdlib(dirs, rustc);\n+    prepare_coretests(dirs, rustc);\n \n     super::tests::RAND_REPO.fetch(dirs);\n     super::tests::REGEX_REPO.fetch(dirs);\n     super::tests::PORTABLE_SIMD_REPO.fetch(dirs);\n }\n \n-fn prepare_stdlib(dirs: &Dirs) {\n-    let sysroot_src_orig = get_default_sysroot(Path::new(\"rustc\")).join(\"lib/rustlib/src/rust\");\n+fn prepare_stdlib(dirs: &Dirs, rustc: &Path) {\n+    let sysroot_src_orig = get_default_sysroot(rustc).join(\"lib/rustlib/src/rust\");\n     assert!(sysroot_src_orig.exists());\n \n     eprintln!(\"[COPY] stdlib src\");\n@@ -36,7 +36,7 @@ fn prepare_stdlib(dirs: &Dirs) {\n         &SYSROOT_SRC.to_path(dirs).join(\"library\"),\n     );\n \n-    let rustc_version = get_rustc_version(Path::new(\"rustc\"));\n+    let rustc_version = get_rustc_version(rustc);\n     fs::write(SYSROOT_RUSTC_VERSION.to_path(dirs), &rustc_version).unwrap();\n \n     eprintln!(\"[GIT] init\");\n@@ -45,8 +45,8 @@ fn prepare_stdlib(dirs: &Dirs) {\n     apply_patches(dirs, \"stdlib\", &SYSROOT_SRC.to_path(dirs));\n }\n \n-fn prepare_coretests(dirs: &Dirs) {\n-    let sysroot_src_orig = get_default_sysroot(Path::new(\"rustc\")).join(\"lib/rustlib/src/rust\");\n+fn prepare_coretests(dirs: &Dirs, rustc: &Path) {\n+    let sysroot_src_orig = get_default_sysroot(rustc).join(\"lib/rustlib/src/rust\");\n     assert!(sysroot_src_orig.exists());\n \n     eprintln!(\"[COPY] coretests src\");"}]}