{"sha": "d07c43af3129c8e160bb62d98ebcb8b9cf6f3ccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwN2M0M2FmMzEyOWM4ZTE2MGJiNjJkOThlYmNiOGI5Y2Y2ZjNjY2Q=", "commit": {"author": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2021-03-04T07:04:21Z"}, "committer": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2021-03-04T08:36:04Z"}, "message": "Alternative LUT rather than dividing.", "tree": {"sha": "ec05bfb1b8695749fd089a8e74053bc252413452", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec05bfb1b8695749fd089a8e74053bc252413452"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d07c43af3129c8e160bb62d98ebcb8b9cf6f3ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEElfpt1fswGixBWxap34UWHa4P82sFAmBAm/QACgkQ34UWHa4P\n82tM6hAAxYfI2yPFhFnlsPjKlliDr8UaPhg/mNBHrnU4Dw714pOiQmiaDP0w4fkU\n0e09ksLYsWvDz8vAYKHrnulsrQzCE420RqSTqICDEjeymbot6q5QzgNUqGsPHg0W\nb7PB4oPq3+/zOLBS73Z95AqelX0OcFIqlG5Bg+JyJ9R4WUVfX2VlKrWNQ0SDTZ6T\nIgqF4bc07TFW1am5XzOV7jcCFfM/t9ncO2KAP9cKBIzhDleW1yU8QPFaT/Vm1wiv\nGBBZJfpQLDRfJ/WWLdLbFnonuMbXn0oQVqjiQw3dR1t6PJ24gE2wqlu7zxUIHw7e\nZTeKFZtfNoyjRmq7zOTJxWCx7E72/7+BUMJBudR/QLqV0QNlNlGdWXzBgpjZpxIb\nNVb5RkL47b24EXyuqdd1mz1sBwh3QHYp6J2xZn0gO4gl5hpoxAyQW7vKGU+1XvGi\n8Z0/n6ib5ok9xZBo4Nm7LHMFGfjIJ4ku0EaE5X/u9cW/3mcQC6Bu0h+lCX7WasKx\nUb7hjmPelOuw8gL9GidoRaFeq2sdW5zmZWL3KhMKaw2wYXwxOEzY6X1yFf9c1Vko\nr1zaf/TMo/7Sv2Vy3GI5BI+x1Isd/aVqGVhSTxkcn+md5cFlGE5Rm+REmTGkxCQp\nXA2FIQ8KEbuLqA77NB16JAZzlRp8wvxd0OEwzmmvmNIUiKM4zMA=\n=KHW3\n-----END PGP SIGNATURE-----", "payload": "tree ec05bfb1b8695749fd089a8e74053bc252413452\nparent a69960a4ecf5d452bcebae3f75d056fd6c451a6e\nauthor Giles Cope <gilescope@gmail.com> 1614841461 +0000\ncommitter Giles Cope <gilescope@gmail.com> 1614846964 +0000\n\nAlternative LUT rather than dividing.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d07c43af3129c8e160bb62d98ebcb8b9cf6f3ccd", "html_url": "https://github.com/rust-lang/rust/commit/d07c43af3129c8e160bb62d98ebcb8b9cf6f3ccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d07c43af3129c8e160bb62d98ebcb8b9cf6f3ccd/comments", "author": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a69960a4ecf5d452bcebae3f75d056fd6c451a6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a69960a4ecf5d452bcebae3f75d056fd6c451a6e", "html_url": "https://github.com/rust-lang/rust/commit/a69960a4ecf5d452bcebae3f75d056fd6c451a6e"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "714c24a766585c1340c354f7cbd17332d445076c", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d07c43af3129c8e160bb62d98ebcb8b9cf6f3ccd/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d07c43af3129c8e160bb62d98ebcb8b9cf6f3ccd/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=d07c43af3129c8e160bb62d98ebcb8b9cf6f3ccd", "patch": "@@ -2224,7 +2224,7 @@ impl ToString for char {\n     }\n }\n \n-#[stable(feature = \"u8_to_string_specialization\", since=\"1.999.0\")]\n+#[stable(feature = \"u8_to_string_specialization\", since = \"1.999.0\")]\n impl ToString for u8 {\n     #[inline]\n     fn to_string(&self) -> String {\n@@ -2243,6 +2243,39 @@ impl ToString for u8 {\n     }\n }\n \n+// 2 digit decimal look up table\n+static DEC_DIGITS_LUT: &[u8; 200] = b\"0001020304050607080910111213141516171819\\\n+      2021222324252627282930313233343536373839\\\n+      4041424344454647484950515253545556575859\\\n+      6061626364656667686970717273747576777879\\\n+      8081828384858687888990919293949596979899\";\n+\n+#[stable(feature = \"i8_to_string_specialization\", since = \"1.999.0\")]\n+impl ToString for i8 {\n+    #[inline]\n+    fn to_string(&self) -> String {\n+        let mut vec: Vec<u8> = if *self < 0 {\n+            let mut v = Vec::with_capacity(4);\n+            v.push(b'-');\n+            v\n+        } else {\n+            Vec::with_capacity(3)\n+        };\n+        let mut n = self.abs();\n+        if n >= 10 {\n+            if n >= 100 {\n+                n -= 100;\n+                vec.push(b'1');\n+            }\n+            let nn = n * 2;\n+            vec.extend_from_slice(&DEC_DIGITS_LUT[nn as usize..=nn as usize + 1]);\n+        } else {\n+            vec.push(b'0' + (n as u8));\n+        }\n+        unsafe { String::from_utf8_unchecked(vec) }\n+    }\n+}\n+\n #[stable(feature = \"str_to_string_specialization\", since = \"1.9.0\")]\n impl ToString for str {\n     #[inline]"}]}