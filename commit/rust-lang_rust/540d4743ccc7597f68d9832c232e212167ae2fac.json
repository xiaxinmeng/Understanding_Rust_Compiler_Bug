{"sha": "540d4743ccc7597f68d9832c232e212167ae2fac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MGQ0NzQzY2NjNzU5N2Y2OGQ5ODMyYzIzMmUyMTIxNjdhZTJmYWM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-01T10:53:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-01T10:53:37Z"}, "message": "Rollup merge of #78603 - petrochenkov:fourdigits, r=matthewjasper\n\nexpand: Tweak a comment in implementation of `macro_rules`\n\nThe answer to the removed FIXME is that we don't apply mark to the span `sp` just because that span is no longer used. We could apply it, but that would just be unnecessary extra work.\n\nThe comments in code tell why the span is unused, it's a span of `$var` literally, which is lost for `tt` variables because their tokens are outputted directly, but kept for other variables which are outputted as [groups](https://doc.rust-lang.org/nightly/proc_macro/struct.Group.html) and `sp` is kept as the group's span.\n\nCloses https://github.com/rust-lang/rust/issues/2887", "tree": {"sha": "3bd9ea7fd1d84077382a1422d6e180898591e1cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bd9ea7fd1d84077382a1422d6e180898591e1cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/540d4743ccc7597f68d9832c232e212167ae2fac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfnpOyCRBK7hj4Ov3rIwAAdHIIAD2wrhfD/G/8WFf3JPBHmhBq\n562wPY9jXnRQlzylvPdwepCwgeFEbGlKMs5ABRhe/Whx5Jf1yF4T9GEMQBKmutau\nTIF+3WHQGRXegcBFu5SejZk3+OWNB+SwR/MEcOk1uvAWUQbkVBw8FOSMhgCxrzGo\nhxWrdZbDGV7QvtVTPwNe7QS0vIdVBVs7rue97Tyt1bfcO5SLjDk/o5ZKO8V/ogE/\n4ZnBe8h68ATyV5ogvk0vFwar6KxBcZkW9ubPCuiuAQb40SBWAWOWF9zgWGonOCs3\nnbhlqbcmTzCyNCk1Jdcx0tlPuNgOIdQoWqIhXssJH8IkWos88ng00jRX2PCh9mQ=\n=M7ql\n-----END PGP SIGNATURE-----\n", "payload": "tree 3bd9ea7fd1d84077382a1422d6e180898591e1cc\nparent 8ed31d278244d3db9d326b7480f53eaa02429e60\nparent 7652bc3f683d2d0a70ef4da47dc730bf41f2f87d\nauthor Mara Bos <m-ou.se@m-ou.se> 1604228017 +0100\ncommitter GitHub <noreply@github.com> 1604228017 +0100\n\nRollup merge of #78603 - petrochenkov:fourdigits, r=matthewjasper\n\nexpand: Tweak a comment in implementation of `macro_rules`\n\nThe answer to the removed FIXME is that we don't apply mark to the span `sp` just because that span is no longer used. We could apply it, but that would just be unnecessary extra work.\n\nThe comments in code tell why the span is unused, it's a span of `$var` literally, which is lost for `tt` variables because their tokens are outputted directly, but kept for other variables which are outputted as [groups](https://doc.rust-lang.org/nightly/proc_macro/struct.Group.html) and `sp` is kept as the group's span.\n\nCloses https://github.com/rust-lang/rust/issues/2887\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/540d4743ccc7597f68d9832c232e212167ae2fac", "html_url": "https://github.com/rust-lang/rust/commit/540d4743ccc7597f68d9832c232e212167ae2fac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/540d4743ccc7597f68d9832c232e212167ae2fac/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ed31d278244d3db9d326b7480f53eaa02429e60", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed31d278244d3db9d326b7480f53eaa02429e60", "html_url": "https://github.com/rust-lang/rust/commit/8ed31d278244d3db9d326b7480f53eaa02429e60"}, {"sha": "7652bc3f683d2d0a70ef4da47dc730bf41f2f87d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7652bc3f683d2d0a70ef4da47dc730bf41f2f87d", "html_url": "https://github.com/rust-lang/rust/commit/7652bc3f683d2d0a70ef4da47dc730bf41f2f87d"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "3d8a4bbff18339b94d9c82f08f903d3efed94085", "filename": "compiler/rustc_expand/src/mbe/transcribe.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/540d4743ccc7597f68d9832c232e212167ae2fac/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540d4743ccc7597f68d9832c232e212167ae2fac/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs?ref=540d4743ccc7597f68d9832c232e212167ae2fac", "patch": "@@ -232,17 +232,19 @@ pub(super) fn transcribe<'a>(\n                 // the meta-var.\n                 let ident = MacroRulesNormalizedIdent::new(orignal_ident);\n                 if let Some(cur_matched) = lookup_cur_matched(ident, interp, &repeats) {\n-                    if let MatchedNonterminal(ref nt) = cur_matched {\n-                        // FIXME #2887: why do we apply a mark when matching a token tree meta-var\n-                        // (e.g. `$x:tt`), but not when we are matching any other type of token\n-                        // tree?\n-                        if let NtTT(ref tt) = **nt {\n-                            result.push(tt.clone().into());\n+                    if let MatchedNonterminal(nt) = cur_matched {\n+                        let token = if let NtTT(tt) = &**nt {\n+                            // `tt`s are emitted into the output stream directly as \"raw tokens\",\n+                            // without wrapping them into groups.\n+                            tt.clone()\n                         } else {\n+                            // Other variables are emitted into the output stream as groups with\n+                            // `Delimiter::None` to maintain parsing priorities.\n+                            // `Interpolated` is currenty used for such groups in rustc parser.\n                             marker.visit_span(&mut sp);\n-                            let token = TokenTree::token(token::Interpolated(nt.clone()), sp);\n-                            result.push(token.into());\n-                        }\n+                            TokenTree::token(token::Interpolated(nt.clone()), sp)\n+                        };\n+                        result.push(token.into());\n                     } else {\n                         // We were unable to descend far enough. This is an error.\n                         return Err(cx.struct_span_err("}]}