{"sha": "fb00e60ab1e7d5dac3c750d0e84a70236c40a2c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMDBlNjBhYjFlN2Q1ZGFjM2M3NTBkMGU4NGE3MDIzNmM0MGEyYzM=", "commit": {"author": {"name": "Sean Leffler", "email": "sean@errno.com", "date": "2016-02-02T19:41:19Z"}, "committer": {"name": "Sean Leffler", "email": "sean@errno.com", "date": "2016-02-02T19:41:19Z"}, "message": "Added assertion ensuring zero-sized type.", "tree": {"sha": "979778dab524cd23ac7bdb3a4acd5690c1ed9816", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/979778dab524cd23ac7bdb3a4acd5690c1ed9816"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb00e60ab1e7d5dac3c750d0e84a70236c40a2c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb00e60ab1e7d5dac3c750d0e84a70236c40a2c3", "html_url": "https://github.com/rust-lang/rust/commit/fb00e60ab1e7d5dac3c750d0e84a70236c40a2c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb00e60ab1e7d5dac3c750d0e84a70236c40a2c3/comments", "author": {"login": "sdleffler", "id": 5241142, "node_id": "MDQ6VXNlcjUyNDExNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5241142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdleffler", "html_url": "https://github.com/sdleffler", "followers_url": "https://api.github.com/users/sdleffler/followers", "following_url": "https://api.github.com/users/sdleffler/following{/other_user}", "gists_url": "https://api.github.com/users/sdleffler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdleffler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdleffler/subscriptions", "organizations_url": "https://api.github.com/users/sdleffler/orgs", "repos_url": "https://api.github.com/users/sdleffler/repos", "events_url": "https://api.github.com/users/sdleffler/events{/privacy}", "received_events_url": "https://api.github.com/users/sdleffler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sdleffler", "id": 5241142, "node_id": "MDQ6VXNlcjUyNDExNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5241142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdleffler", "html_url": "https://github.com/sdleffler", "followers_url": "https://api.github.com/users/sdleffler/followers", "following_url": "https://api.github.com/users/sdleffler/following{/other_user}", "gists_url": "https://api.github.com/users/sdleffler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdleffler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdleffler/subscriptions", "organizations_url": "https://api.github.com/users/sdleffler/orgs", "repos_url": "https://api.github.com/users/sdleffler/repos", "events_url": "https://api.github.com/users/sdleffler/events{/privacy}", "received_events_url": "https://api.github.com/users/sdleffler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "418daa761e48c945a1efcd52dd6b98cef7bd4450", "url": "https://api.github.com/repos/rust-lang/rust/commits/418daa761e48c945a1efcd52dd6b98cef7bd4450", "html_url": "https://github.com/rust-lang/rust/commit/418daa761e48c945a1efcd52dd6b98cef7bd4450"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "34567c1178f4740b31f1b088e81a67800722c572", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb00e60ab1e7d5dac3c750d0e84a70236c40a2c3/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb00e60ab1e7d5dac3c750d0e84a70236c40a2c3/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=fb00e60ab1e7d5dac3c750d0e84a70236c40a2c3", "patch": "@@ -157,6 +157,7 @@ pub fn trans_into<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n             if let hir::ExprPath(..) = expr.node {\n                 match bcx.def(expr.id) {\n                     Def::Const(_) | Def::AssociatedConst(_) => {\n+                        assert!(type_is_zero_size(bcx.ccx(), bcx.tcx().node_id_to_type(expr.id)));\n                         return bcx;\n                     }\n                     _ => {}"}]}