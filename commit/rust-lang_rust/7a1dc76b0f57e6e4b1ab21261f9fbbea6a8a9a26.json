{"sha": "7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMWRjNzZiMGY1N2U2ZTRiMWFiMjEyNjFmOWZiYmVhNmE4YTlhMjY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-19T08:26:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-19T08:26:17Z"}, "message": "core: Move set_exit_status from sys to os", "tree": {"sha": "95175d1343ab850ed0f0e6991889546f45dc0f10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95175d1343ab850ed0f0e6991889546f45dc0f10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "html_url": "https://github.com/rust-lang/rust/commit/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cad6322c36f480aee7ea9f5a5776e1271abbf67", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cad6322c36f480aee7ea9f5a5776e1271abbf67", "html_url": "https://github.com/rust-lang/rust/commit/1cad6322c36f480aee7ea9f5a5776e1271abbf67"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "269744296f809d58ba510e53b0ac79ac01724000", "filename": "src/libcore/os.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "patch": "@@ -33,6 +33,7 @@ export homedir, list_dir, list_dir_path, path_is_dir, path_exists,\n        make_absolute, make_dir, remove_dir, change_dir, remove_file,\n        copy_file;\n export last_os_error;\n+export set_exit_status;\n \n // FIXME: move these to str perhaps?\n export as_c_charp, fill_charp_buf;\n@@ -45,6 +46,7 @@ native mod rustrt {\n     fn rust_list_files(path: str) -> [str];\n     fn rust_process_wait(handle: c_int) -> c_int;\n     fn last_os_error() -> str;\n+    fn rust_set_exit_status(code: libc::intptr_t);\n }\n \n \n@@ -630,6 +632,17 @@ fn last_os_error() -> str {\n     rustrt::last_os_error()\n }\n \n+#[doc = \"\n+Sets the process exit code\n+\n+Sets the exit code returned by the process if all supervised tasks terminate\n+successfully (without failing). If the current root task fails and is\n+supervised by the scheduler then any user-specified exit status is ignored and\n+the process exits with the default failure status\n+\"]\n+fn set_exit_status(code: int) {\n+    rustrt::rust_set_exit_status(code as libc::intptr_t);\n+}\n \n #[cfg(target_os = \"macos\")]\n mod consts {"}, {"sha": "0d9478f8b0bed818517f649eb1517e6c44f42a32", "filename": "src/libcore/sys.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Flibcore%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Flibcore%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsys.rs?ref=7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "patch": "@@ -6,7 +6,6 @@ export size_of;\n export align_of;\n export refcount;\n export log_str;\n-export set_exit_status;\n \n enum type_desc = {\n     first_param: **libc::c_int,\n@@ -20,7 +19,6 @@ native mod rustrt {\n     fn refcount<T>(t: @T) -> libc::intptr_t;\n     fn unsupervise();\n     fn shape_log_str<T>(t: *sys::type_desc, data: T) -> str;\n-    fn rust_set_exit_status(code: libc::intptr_t);\n }\n \n #[abi = \"rust-intrinsic\"]\n@@ -59,18 +57,6 @@ fn log_str<T>(t: T) -> str {\n     rustrt::shape_log_str(get_type_desc::<T>(), t)\n }\n \n-#[doc = \"\n-Sets the process exit code\n-\n-Sets the exit code returned by the process if all supervised tasks terminate\n-successfully (without failing). If the current root task fails and is\n-supervised by the scheduler then any user-specified exit status is ignored and\n-the process exits with the default failure status\n-\"]\n-fn set_exit_status(code: int) {\n-    rustrt::rust_set_exit_status(code as libc::intptr_t);\n-}\n-\n #[cfg(test)]\n mod tests {\n "}, {"sha": "52f152895ad7c5207e296869d09d1791caea120a", "filename": "src/test/run-fail/rt-set-exit-status-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs?ref=7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "patch": "@@ -5,6 +5,6 @@ fn main() {\n     // Setting the exit status only works when the scheduler terminates\n     // normally. In this case we're going to fail, so instead of of\n     // returning 50 the process will return the typical rt failure code.\n-    sys::set_exit_status(50);\n+    os::set_exit_status(50);\n     fail;\n }\n\\ No newline at end of file"}, {"sha": "8b685b7c712f58f9881603523f6021b35e7fb100", "filename": "src/test/run-fail/rt-set-exit-status-fail2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs?ref=7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "patch": "@@ -7,7 +7,7 @@ fn main() {\n             // Setting the exit status after the runtime has already\n             // failed has no effect and the process exits with the\n             // runtime's exit code\n-            sys::set_exit_status(50);\n+            os::set_exit_status(50);\n         }\n         let i = r(());\n     };"}, {"sha": "6b83256036bab70bbbf399a56ff8df5e753a80e6", "filename": "src/test/run-fail/rt-set-exit-status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs?ref=7a1dc76b0f57e6e4b1ab21261f9fbbea6a8a9a26", "patch": "@@ -4,5 +4,5 @@ fn main() {\n     log(error, \"whatever\");\n     // 101 is the code the runtime uses on task failure and the value\n     // compiletest expects run-fail tests to return.\n-    sys::set_exit_status(101);\n+    os::set_exit_status(101);\n }\n\\ No newline at end of file"}]}