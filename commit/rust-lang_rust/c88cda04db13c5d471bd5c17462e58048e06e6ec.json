{"sha": "c88cda04db13c5d471bd5c17462e58048e06e6ec", "node_id": "C_kwDOAAsO6NoAKGM4OGNkYTA0ZGIxM2M1ZDQ3MWJkNWMxNzQ2MmU1ODA0OGUwNmU2ZWM", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:44:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:44:46Z"}, "message": "move some tests", "tree": {"sha": "14541fa07105fa4eccc96831e6c6445dc950f189", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14541fa07105fa4eccc96831e6c6445dc950f189"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c88cda04db13c5d471bd5c17462e58048e06e6ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c88cda04db13c5d471bd5c17462e58048e06e6ec", "html_url": "https://github.com/rust-lang/rust/commit/c88cda04db13c5d471bd5c17462e58048e06e6ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c88cda04db13c5d471bd5c17462e58048e06e6ec/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3470a8114eb3db2e67a4876b04c70fb8f7ba712", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3470a8114eb3db2e67a4876b04c70fb8f7ba712", "html_url": "https://github.com/rust-lang/rust/commit/a3470a8114eb3db2e67a4876b04c70fb8f7ba712"}], "stats": {"total": 159, "additions": 76, "deletions": 83}, "files": [{"sha": "86110017a97fa2a6a451486114cf6f3475904058", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/c88cda04db13c5d471bd5c17462e58048e06e6ec/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c88cda04db13c5d471bd5c17462e58048e06e6ec/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=c88cda04db13c5d471bd5c17462e58048e06e6ec", "patch": "@@ -1043,3 +1043,79 @@ macro_rules! m {\n \"##]],\n     );\n }\n+\n+#[test]\n+fn test_tt_block() {\n+    check(\n+        r#\"\n+macro_rules! m { ($tt:tt) => { fn foo() $tt } }\n+m! { { 1; } }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m { ($tt:tt) => { fn foo() $tt } }\n+fn foo() {\n+    1;\n+}\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_tt_group() {\n+    check(\n+        r#\"\n+macro_rules! m { ($($tt:tt)*) => { $($tt)* } }\n+m! { fn foo() {} }\"\n+\"#,\n+        expect![[r#\"\n+macro_rules! m { ($($tt:tt)*) => { $($tt)* } }\n+fn foo() {}\"\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_tt_composite() {\n+    check(\n+        r#\"\n+macro_rules! m { ($tt:tt) => { ok!(); } }\n+m! { => }\n+m! { = > }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m { ($tt:tt) => { ok!(); } }\n+ok!();\n+/* error: leftover tokens */ok!();\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_tt_composite2() {\n+    check(\n+        r#\"\n+macro_rules! m { ($($tt:tt)*) => { abs!(=> $($tt)*); } }\n+m! {#}\n+\"#,\n+        expect![[r##\"\n+macro_rules! m { ($($tt:tt)*) => { abs!(=> $($tt)*); } }\n+abs!( = > #);\n+\"##]],\n+    );\n+}\n+\n+#[test]\n+fn test_tt_with_composite_without_space() {\n+    // Test macro input without any spaces\n+    // See https://github.com/rust-analyzer/rust-analyzer/issues/6692\n+    check(\n+        r#\"\n+macro_rules! m { ($ op:tt, $j:path) => ( ok!(); ) }\n+m!(==,Foo::Bool)\n+\"#,\n+        expect![[r#\"\n+macro_rules! m { ($ op:tt, $j:path) => ( ok!(); ) }\n+ok!();\n+\"#]],\n+    );\n+}"}, {"sha": "15a718402911abc6d95f62a8966caefbf13e6468", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/c88cda04db13c5d471bd5c17462e58048e06e6ec/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c88cda04db13c5d471bd5c17462e58048e06e6ec/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=c88cda04db13c5d471bd5c17462e58048e06e6ec", "patch": "@@ -101,89 +101,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_tt_block() {\n-    parse_macro(\n-        r#\"\n-            macro_rules! foo {\n-                ($ i:tt) => { fn foo() $ i }\n-            }\n-    \"#,\n-    )\n-    .assert_expand_items(r#\"foo! { { 1; } }\"#, r#\"fn foo () {1 ;}\"#);\n-}\n-\n-#[test]\n-fn test_tt_group() {\n-    parse_macro(\n-        r#\"\n-            macro_rules! foo {\n-                 ($($ i:tt)*) => { $($ i)* }\n-            }\n-    \"#,\n-    )\n-    .assert_expand_items(r#\"foo! { fn foo() {} }\"#, r#\"fn foo () {}\"#);\n-}\n-\n-#[test]\n-fn test_tt_composite() {\n-    parse_macro(\n-        r#\"\n-            macro_rules! foo {\n-                 ($i:tt) => { 0 }\n-            }\n-    \"#,\n-    )\n-    .assert_expand_items(r#\"foo! { => }\"#, r#\"0\"#);\n-}\n-\n-#[test]\n-fn test_tt_composite2() {\n-    let node = parse_macro(\n-        r#\"\n-            macro_rules! foo {\n-                ($($tt:tt)*) => { abs!(=> $($tt)*) }\n-            }\n-    \"#,\n-    )\n-    .expand_items(r#\"foo!{#}\"#);\n-\n-    let res = format!(\"{:#?}\", &node);\n-    assert_eq_text!(\n-        r###\"MACRO_ITEMS@0..10\n-  MACRO_CALL@0..10\n-    PATH@0..3\n-      PATH_SEGMENT@0..3\n-        NAME_REF@0..3\n-          IDENT@0..3 \"abs\"\n-    BANG@3..4 \"!\"\n-    TOKEN_TREE@4..10\n-      L_PAREN@4..5 \"(\"\n-      EQ@5..6 \"=\"\n-      R_ANGLE@6..7 \">\"\n-      WHITESPACE@7..8 \" \"\n-      POUND@8..9 \"#\"\n-      R_PAREN@9..10 \")\"\"###,\n-        res.trim()\n-    );\n-}\n-\n-#[test]\n-fn test_tt_with_composite_without_space() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ op:tt, $j:path) => (\n-                0\n-            )\n-        }\n-\"#,\n-    )\n-    // Test macro input without any spaces\n-    // See https://github.com/rust-analyzer/rust-analyzer/issues/6692\n-    .assert_expand_items(\"foo!(==,Foo::Bool)\", \"0\");\n-}\n-\n #[test]\n fn test_underscore() {\n     parse_macro("}]}