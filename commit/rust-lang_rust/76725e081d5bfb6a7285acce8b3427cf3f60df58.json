{"sha": "76725e081d5bfb6a7285acce8b3427cf3f60df58", "node_id": "C_kwDOAAsO6NoAKDc2NzI1ZTA4MWQ1YmZiNmE3Mjg1YWNjZThiMzQyN2NmM2Y2MGRmNTg", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-22T02:53:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-22T02:53:08Z"}, "message": "Rollup merge of #97245 - m-ou-se:rwlock-state-typo, r=JohnTitor\n\nFix typo in futex RwLock::write_contended.\n\nI wrote `state` where I should've used `s`.\n\nThis was spotted by `@Warrenren.`\n\nThis change removes the unnecessary `s` variable to prevent that mistake.\n\nFortunately, this typo didn't affect the correctness of the lock, as the\nsecond half of the condition (!has_writers_waiting) is enough for\ncorrectness, which explains why this mistake didn't show up during\ntesting.\n\nFixes https://github.com/rust-lang/rust/issues/97162", "tree": {"sha": "1a076f63c6bb1446d315f65dbe8de5bedcc5ff7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a076f63c6bb1446d315f65dbe8de5bedcc5ff7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76725e081d5bfb6a7285acce8b3427cf3f60df58", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiiaWUCRBK7hj4Ov3rIwAAYikIAHbKUdvrFDoEsQqxwvpBJvBk\nk/3lj8RHF1hw5mKnPuQQaaBvRfwj9HY7nIB2Ox1e7s3MU16rmOUxVVcHBUQD7b2v\np4GqN8q2iusxIshKcKxNRxZ9UM0Vl959vInOu198rXQ+MljpjVBK0eaTXKdaXl9y\nqkKjK4eNNkSTlRdN3TosTkiUGWWEDTdbMt12TUlT6CkTcVimoJ8GOJ3pT81tM8en\nxmiQ9uz1b3gfcfNlF5GBZAcKbEtBe/yNC2gNoIQ4EzSDVc1oB8zU6AM5JVkj+zYO\nKWEQPyYz93BXgyhaF38dddFVwBjXCr2XnNceoQEw6gmSPdPFVuDvzPKFR7W9iJ0=\n=7xKa\n-----END PGP SIGNATURE-----\n", "payload": "tree 1a076f63c6bb1446d315f65dbe8de5bedcc5ff7d\nparent 6ef4911b994a84591136d34185d3c17f2960a4df\nparent 3b70c29103cce7b03b6f0fe465e1197a3b212179\nauthor Yuki Okushi <jtitor@2k36.org> 1653187988 +0900\ncommitter GitHub <noreply@github.com> 1653187988 +0900\n\nRollup merge of #97245 - m-ou-se:rwlock-state-typo, r=JohnTitor\n\nFix typo in futex RwLock::write_contended.\n\nI wrote `state` where I should've used `s`.\n\nThis was spotted by `@Warrenren.`\n\nThis change removes the unnecessary `s` variable to prevent that mistake.\n\nFortunately, this typo didn't affect the correctness of the lock, as the\nsecond half of the condition (!has_writers_waiting) is enough for\ncorrectness, which explains why this mistake didn't show up during\ntesting.\n\nFixes https://github.com/rust-lang/rust/issues/97162\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76725e081d5bfb6a7285acce8b3427cf3f60df58", "html_url": "https://github.com/rust-lang/rust/commit/76725e081d5bfb6a7285acce8b3427cf3f60df58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76725e081d5bfb6a7285acce8b3427cf3f60df58/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ef4911b994a84591136d34185d3c17f2960a4df", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ef4911b994a84591136d34185d3c17f2960a4df", "html_url": "https://github.com/rust-lang/rust/commit/6ef4911b994a84591136d34185d3c17f2960a4df"}, {"sha": "3b70c29103cce7b03b6f0fe465e1197a3b212179", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b70c29103cce7b03b6f0fe465e1197a3b212179", "html_url": "https://github.com/rust-lang/rust/commit/3b70c29103cce7b03b6f0fe465e1197a3b212179"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "5ff1aba79747a44ac3b42cbb7cb98c5fed9876d7", "filename": "library/std/src/sys/unix/locks/futex_rwlock.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/76725e081d5bfb6a7285acce8b3427cf3f60df58/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex_rwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76725e081d5bfb6a7285acce8b3427cf3f60df58/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex_rwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex_rwlock.rs?ref=76725e081d5bfb6a7285acce8b3427cf3f60df58", "patch": "@@ -208,9 +208,8 @@ impl RwLock {\n \n             // Don't go to sleep if the lock has become available,\n             // or if the writers waiting bit is no longer set.\n-            let s = self.state.load(Relaxed);\n-            if is_unlocked(state) || !has_writers_waiting(s) {\n-                state = s;\n+            state = self.state.load(Relaxed);\n+            if is_unlocked(state) || !has_writers_waiting(state) {\n                 continue;\n             }\n "}]}