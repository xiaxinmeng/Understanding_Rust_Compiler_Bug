{"sha": "3d13f463045417903364c44a67b0963ececde79f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMTNmNDYzMDQ1NDE3OTAzMzY0YzQ0YTY3YjA5NjNlY2VjZGU3OWY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-09-09T17:21:15Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-09-23T16:34:44Z"}, "message": "Move handling of `{MUSL,WASI}_ROOT` to `compile.rs`\n\nNo longer any need for them to live in `rustc.rs`!", "tree": {"sha": "4d9b26497fdd16a7a1b1208cdb784e9d98dd9c6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d9b26497fdd16a7a1b1208cdb784e9d98dd9c6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d13f463045417903364c44a67b0963ececde79f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d13f463045417903364c44a67b0963ececde79f", "html_url": "https://github.com/rust-lang/rust/commit/3d13f463045417903364c44a67b0963ececde79f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d13f463045417903364c44a67b0963ececde79f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b6766d8d7461a1a8d632ff62ba2024be87fed76", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b6766d8d7461a1a8d632ff62ba2024be87fed76", "html_url": "https://github.com/rust-lang/rust/commit/0b6766d8d7461a1a8d632ff62ba2024be87fed76"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "8c460c59f07eb6569b8f9e2f2f4e217722731683", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3d13f463045417903364c44a67b0963ececde79f/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d13f463045417903364c44a67b0963ececde79f/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=3d13f463045417903364c44a67b0963ececde79f", "patch": "@@ -16,7 +16,6 @@\n //! never get replaced.\n \n use std::env;\n-use std::ffi::OsString;\n use std::io;\n use std::path::PathBuf;\n use std::process::Command;\n@@ -97,7 +96,7 @@ fn main() {\n         cmd.env(\"RUST_BACKTRACE\", \"1\");\n     }\n \n-    if let Some(target) = target {\n+    if target.is_some() {\n         // The stage0 compiler has a special sysroot distinct from what we\n         // actually downloaded, so we just always pass the `--sysroot` option,\n         // unless one is already set.\n@@ -112,23 +111,6 @@ fn main() {\n             cmd.arg(\"-Cprefer-dynamic\");\n         }\n \n-        // Help the libc crate compile by assisting it in finding various\n-        // sysroot native libraries.\n-        if let Some(s) = env::var_os(\"MUSL_ROOT\") {\n-            if target.contains(\"musl\") {\n-                let mut root = OsString::from(\"native=\");\n-                root.push(&s);\n-                root.push(\"/lib\");\n-                cmd.arg(\"-L\").arg(&root);\n-            }\n-        }\n-        if let Some(s) = env::var_os(\"WASI_ROOT\") {\n-            let mut root = OsString::from(\"native=\");\n-            root.push(&s);\n-            root.push(\"/lib/wasm32-wasi\");\n-            cmd.arg(\"-L\").arg(&root);\n-        }\n-\n         // If we're compiling specifically the `panic_abort` crate then we pass\n         // the `-C panic=abort` option. Note that we do not do this for any\n         // other crate intentionally as this is the only crate for now that we"}, {"sha": "6a483c1fafd914674f54d9c388e6700fd4792cfd", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3d13f463045417903364c44a67b0963ececde79f/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d13f463045417903364c44a67b0963ececde79f/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=3d13f463045417903364c44a67b0963ececde79f", "patch": "@@ -1375,6 +1375,11 @@ pub struct Cargo {\n }\n \n impl Cargo {\n+    pub fn rustflag(&mut self, arg: &str) -> &mut Cargo {\n+        self.rustflags.arg(arg);\n+        self\n+    }\n+\n     pub fn arg(&mut self, arg: impl AsRef<OsStr>) -> &mut Cargo {\n         self.command.arg(arg.as_ref());\n         self"}, {"sha": "dc0961d16e85dfe9fbc2e184bd054d34e172988a", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3d13f463045417903364c44a67b0963ececde79f/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d13f463045417903364c44a67b0963ececde79f/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=3d13f463045417903364c44a67b0963ececde79f", "patch": "@@ -220,15 +220,19 @@ pub fn std_cargo(builder: &Builder<'_>,\n             .arg(\"--manifest-path\")\n             .arg(builder.src.join(\"src/libtest/Cargo.toml\"));\n \n+        // Help the libc crate compile by assisting it in finding various\n+        // sysroot native libraries.\n         if target.contains(\"musl\") {\n             if let Some(p) = builder.musl_root(target) {\n-                cargo.env(\"MUSL_ROOT\", p);\n+                let root = format!(\"native={}/lib\", p.to_str().unwrap());\n+                cargo.rustflag(\"-L\").rustflag(&root);\n             }\n         }\n \n         if target.ends_with(\"-wasi\") {\n             if let Some(p) = builder.wasi_root(target) {\n-                cargo.env(\"WASI_ROOT\", p);\n+                let root = format!(\"native={}/lib/wasm32-wasi\", p.to_str().unwrap());\n+                cargo.rustflag(\"-L\").rustflag(&root);\n             }\n         }\n     }"}]}