{"sha": "d472f8e4624277163f33f9070bf0474669d3844e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NzJmOGU0NjI0Mjc3MTYzZjMzZjkwNzBiZjA0NzQ2NjlkMzg0NGU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-05-29T06:06:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-29T06:06:55Z"}, "message": "Rollup merge of #72288 - vorner:stabilize-weak-into-raw, r=dtolnay\n\nStabilization of weak-into-raw\n\nCloses #60728.\n\nThere are also two removals of `#![feature(weak_into_raw)]` in the `src/tools/miri` submodule. How should I synchronize the changes with there?\n\n* I can ignore it for now and once this gets merged, update the tool, send a pull request to that one and then reference the changes to rustc.\n* I could try submitting the changes to miri first, but then the build would fail there, because the attribute would still be needed.\n\nI think the first one is the correct one, extrapolating from the contributing guidelines (even though they speak about breaking the tools and this should not break it, as extra feature should not hurt).", "tree": {"sha": "a5125d43d54a6a6bc8a0a2a57414e730cbb5653c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5125d43d54a6a6bc8a0a2a57414e730cbb5653c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d472f8e4624277163f33f9070bf0474669d3844e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0KaACRBK7hj4Ov3rIwAAdHIIAC+6OLilhc/B3cG2wqU1+E8H\nWO4zBaeweTlpe+C9PY5V0vKAj0gaxYTwx66YELfYXVaBXgLA932JJZDGLVXk0ZfW\n7dsRAamJ7PdrPHnocZY+s45X2gTtGikri9Um6esKcB7xc6biKKewVDRmChVaMe1J\nxNF+TbK+gouX0bzDNzC1WNCtnZKx3f5KdFKfMNjAWTjuw7qR53+WZsS7cwkGpAHG\ncyAfISUB+gJPkEJkmtnrVf/7w0fnLNphjXDmcYDIgpuxsSaoBAfkpmCDvpaHzjnO\nzOaI7acPBVAgQUG0tvcTN7RT3A9iitcoM6ocFV1e5JiG0jsoSo7OzpibaDl4hW0=\n=svRa\n-----END PGP SIGNATURE-----\n", "payload": "tree a5125d43d54a6a6bc8a0a2a57414e730cbb5653c\nparent ea5848df4b6150a5d308af643968d54bb510ac03\nparent ba0d0c27df15b7a4d15d01eef3043ffb6cf65a8e\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1590732415 +0900\ncommitter GitHub <noreply@github.com> 1590732415 +0900\n\nRollup merge of #72288 - vorner:stabilize-weak-into-raw, r=dtolnay\n\nStabilization of weak-into-raw\n\nCloses #60728.\n\nThere are also two removals of `#![feature(weak_into_raw)]` in the `src/tools/miri` submodule. How should I synchronize the changes with there?\n\n* I can ignore it for now and once this gets merged, update the tool, send a pull request to that one and then reference the changes to rustc.\n* I could try submitting the changes to miri first, but then the build would fail there, because the attribute would still be needed.\n\nI think the first one is the correct one, extrapolating from the contributing guidelines (even though they speak about breaking the tools and this should not break it, as extra feature should not hurt).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d472f8e4624277163f33f9070bf0474669d3844e", "html_url": "https://github.com/rust-lang/rust/commit/d472f8e4624277163f33f9070bf0474669d3844e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d472f8e4624277163f33f9070bf0474669d3844e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea5848df4b6150a5d308af643968d54bb510ac03", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea5848df4b6150a5d308af643968d54bb510ac03", "html_url": "https://github.com/rust-lang/rust/commit/ea5848df4b6150a5d308af643968d54bb510ac03"}, {"sha": "ba0d0c27df15b7a4d15d01eef3043ffb6cf65a8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba0d0c27df15b7a4d15d01eef3043ffb6cf65a8e", "html_url": "https://github.com/rust-lang/rust/commit/ba0d0c27df15b7a4d15d01eef3043ffb6cf65a8e"}], "stats": {"total": 32, "additions": 8, "deletions": 24}, "files": [{"sha": "4edbc2ff3ac9b62dd7988e05e333af2fd72aad12", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d472f8e4624277163f33f9070bf0474669d3844e/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d472f8e4624277163f33f9070bf0474669d3844e/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=d472f8e4624277163f33f9070bf0474669d3844e", "patch": "@@ -580,8 +580,6 @@ impl<T: ?Sized> Rc<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_into_raw)]\n-    ///\n     /// use std::rc::Rc;\n     ///\n     /// let x = Rc::new(\"hello\".to_owned());\n@@ -590,7 +588,7 @@ impl<T: ?Sized> Rc<T> {\n     /// assert_eq!(x_ptr, Rc::as_ptr(&y));\n     /// assert_eq!(unsafe { &*x_ptr }, \"hello\");\n     /// ```\n-    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub fn as_ptr(this: &Self) -> *const T {\n         let ptr: *mut RcBox<T> = NonNull::as_ptr(this.ptr);\n         let fake_ptr = ptr as *mut T;\n@@ -1681,8 +1679,6 @@ impl<T> Weak<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_into_raw)]\n-    ///\n     /// use std::rc::Rc;\n     /// use std::ptr;\n     ///\n@@ -1700,7 +1696,7 @@ impl<T> Weak<T> {\n     /// ```\n     ///\n     /// [`null`]: ../../std/ptr/fn.null.html\n-    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub fn as_ptr(&self) -> *const T {\n         let offset = data_offset_sized::<T>();\n         let ptr = self.ptr.cast::<u8>().as_ptr().wrapping_offset(offset);\n@@ -1718,8 +1714,6 @@ impl<T> Weak<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_into_raw)]\n-    ///\n     /// use std::rc::{Rc, Weak};\n     ///\n     /// let strong = Rc::new(\"hello\".to_owned());\n@@ -1735,7 +1729,7 @@ impl<T> Weak<T> {\n     ///\n     /// [`from_raw`]: struct.Weak.html#method.from_raw\n     /// [`as_ptr`]: struct.Weak.html#method.as_ptr\n-    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub fn into_raw(self) -> *const T {\n         let result = self.as_ptr();\n         mem::forget(self);\n@@ -1762,8 +1756,6 @@ impl<T> Weak<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_into_raw)]\n-    ///\n     /// use std::rc::{Rc, Weak};\n     ///\n     /// let strong = Rc::new(\"hello\".to_owned());\n@@ -1788,7 +1780,7 @@ impl<T> Weak<T> {\n     /// [`Weak`]: struct.Weak.html\n     /// [`new`]: struct.Weak.html#method.new\n     /// [`forget`]: ../../std/mem/fn.forget.html\n-    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub unsafe fn from_raw(ptr: *const T) -> Self {\n         if ptr.is_null() {\n             Self::new()"}, {"sha": "5de3cac9d5382a249cddb5a9bb8dc835e0e0d6a7", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d472f8e4624277163f33f9070bf0474669d3844e/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d472f8e4624277163f33f9070bf0474669d3844e/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=d472f8e4624277163f33f9070bf0474669d3844e", "patch": "@@ -579,8 +579,6 @@ impl<T: ?Sized> Arc<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_into_raw)]\n-    ///\n     /// use std::sync::Arc;\n     ///\n     /// let x = Arc::new(\"hello\".to_owned());\n@@ -589,7 +587,7 @@ impl<T: ?Sized> Arc<T> {\n     /// assert_eq!(x_ptr, Arc::as_ptr(&y));\n     /// assert_eq!(unsafe { &*x_ptr }, \"hello\");\n     /// ```\n-    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub fn as_ptr(this: &Self) -> *const T {\n         let ptr: *mut ArcInner<T> = NonNull::as_ptr(this.ptr);\n         let fake_ptr = ptr as *mut T;\n@@ -1449,8 +1447,6 @@ impl<T> Weak<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_into_raw)]\n-    ///\n     /// use std::sync::Arc;\n     /// use std::ptr;\n     ///\n@@ -1468,7 +1464,7 @@ impl<T> Weak<T> {\n     /// ```\n     ///\n     /// [`null`]: ../../std/ptr/fn.null.html\n-    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub fn as_ptr(&self) -> *const T {\n         let offset = data_offset_sized::<T>();\n         let ptr = self.ptr.cast::<u8>().as_ptr().wrapping_offset(offset);\n@@ -1486,8 +1482,6 @@ impl<T> Weak<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_into_raw)]\n-    ///\n     /// use std::sync::{Arc, Weak};\n     ///\n     /// let strong = Arc::new(\"hello\".to_owned());\n@@ -1503,7 +1497,7 @@ impl<T> Weak<T> {\n     ///\n     /// [`from_raw`]: struct.Weak.html#method.from_raw\n     /// [`as_ptr`]: struct.Weak.html#method.as_ptr\n-    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub fn into_raw(self) -> *const T {\n         let result = self.as_ptr();\n         mem::forget(self);\n@@ -1531,8 +1525,6 @@ impl<T> Weak<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_into_raw)]\n-    ///\n     /// use std::sync::{Arc, Weak};\n     ///\n     /// let strong = Arc::new(\"hello\".to_owned());\n@@ -1557,7 +1549,7 @@ impl<T> Weak<T> {\n     /// [`Weak`]: struct.Weak.html\n     /// [`Arc`]: struct.Arc.html\n     /// [`forget`]: ../../std/mem/fn.forget.html\n-    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub unsafe fn from_raw(ptr: *const T) -> Self {\n         if ptr.is_null() {\n             Self::new()"}]}