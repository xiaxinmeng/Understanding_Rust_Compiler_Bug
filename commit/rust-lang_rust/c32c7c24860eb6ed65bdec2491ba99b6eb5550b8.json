{"sha": "c32c7c24860eb6ed65bdec2491ba99b6eb5550b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMmM3YzI0ODYwZWI2ZWQ2NWJkZWMyNDkxYmE5OWI2ZWI1NTUwYjg=", "commit": {"author": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-02-08T23:47:03Z"}, "committer": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-02-08T23:47:03Z"}, "message": "driver: Include invalid predicate in error message", "tree": {"sha": "61c875ac787a47196facdee14fe89408323b607c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61c875ac787a47196facdee14fe89408323b607c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c32c7c24860eb6ed65bdec2491ba99b6eb5550b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c32c7c24860eb6ed65bdec2491ba99b6eb5550b8", "html_url": "https://github.com/rust-lang/rust/commit/c32c7c24860eb6ed65bdec2491ba99b6eb5550b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c32c7c24860eb6ed65bdec2491ba99b6eb5550b8/comments", "author": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d2c866e22ad1999d4a16b6b7345e031ef74655c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d2c866e22ad1999d4a16b6b7345e031ef74655c", "html_url": "https://github.com/rust-lang/rust/commit/6d2c866e22ad1999d4a16b6b7345e031ef74655c"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "eb50e4ef99f6b8ded2c6b6c11a42bac00544abda", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c32c7c24860eb6ed65bdec2491ba99b6eb5550b8/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c32c7c24860eb6ed65bdec2491ba99b6eb5550b8/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=c32c7c24860eb6ed65bdec2491ba99b6eb5550b8", "patch": "@@ -350,15 +350,30 @@ fn handle_explain(code: &str,\n \n fn check_cfg(sopts: &config::Options,\n              output: ErrorOutputType) {\n-    fn is_meta_list(item: &ast::MetaItem) -> bool {\n+    let mut emitter: Box<Emitter> = match output {\n+        config::ErrorOutputType::HumanReadable(color_config) => {\n+            Box::new(errors::emitter::BasicEmitter::stderr(color_config))\n+        }\n+        config::ErrorOutputType::Json => Box::new(errors::json::JsonEmitter::basic()),\n+    };\n+\n+    let mut saw_invalid_predicate = false;\n+    for item in sopts.cfg.iter() {\n         match item.node {\n-            ast::MetaItem_::MetaList(..) => true,\n-            _ => false,\n+            ast::MetaList(ref pred, _) => {\n+                saw_invalid_predicate = true;\n+                emitter.emit(None,\n+                             &format!(\"invalid predicate in --cfg command line argument: `{}`\",\n+                                      pred),\n+                             None,\n+                             errors::Level::Fatal);\n+            }\n+            _ => {},\n         }\n     }\n \n-    if sopts.cfg.iter().any(|item| is_meta_list(&*item)) {\n-        early_error(output, \"predicates are not allowed in --cfg\");\n+    if saw_invalid_predicate {\n+        panic!(errors::FatalError);\n     }\n }\n "}, {"sha": "794b8bb86bb5741a3a9ac850ce563a87116b12a3", "filename": "src/test/compile-fail/issue-31495.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c32c7c24860eb6ed65bdec2491ba99b6eb5550b8/src%2Ftest%2Fcompile-fail%2Fissue-31495.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c32c7c24860eb6ed65bdec2491ba99b6eb5550b8/src%2Ftest%2Fcompile-fail%2Fissue-31495.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-31495.rs?ref=c32c7c24860eb6ed65bdec2491ba99b6eb5550b8", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n // compile-flags: --cfg foo(bar)\n-// error-pattern: predicates are not allowed in --cfg\n+// error-pattern: invalid predicate in --cfg command line argument: `foo`\n fn main() {}"}]}