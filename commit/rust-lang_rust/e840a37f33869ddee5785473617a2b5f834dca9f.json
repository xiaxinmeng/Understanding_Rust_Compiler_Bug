{"sha": "e840a37f33869ddee5785473617a2b5f834dca9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NDBhMzdmMzM4NjlkZGVlNTc4NTQ3MzYxN2EyYjVmODM0ZGNhOWY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-18T02:20:24Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-18T02:20:24Z"}, "message": "rustc: Remove typeck::check_item_fn(); it's entirely superfluous!", "tree": {"sha": "a4896d4a6a6de95ef2e6fee2cd8af8aae720596d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4896d4a6a6de95ef2e6fee2cd8af8aae720596d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e840a37f33869ddee5785473617a2b5f834dca9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e840a37f33869ddee5785473617a2b5f834dca9f", "html_url": "https://github.com/rust-lang/rust/commit/e840a37f33869ddee5785473617a2b5f834dca9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e840a37f33869ddee5785473617a2b5f834dca9f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87288a186d1753b25378e94b3626fe8009e92fde", "url": "https://api.github.com/repos/rust-lang/rust/commits/87288a186d1753b25378e94b3626fe8009e92fde", "html_url": "https://github.com/rust-lang/rust/commit/87288a186d1753b25378e94b3626fe8009e92fde"}], "stats": {"total": 26, "additions": 1, "deletions": 25}, "files": [{"sha": "f4ca575a80b210df5f3ac8b0d91e709f36cdbede", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e840a37f33869ddee5785473617a2b5f834dca9f/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e840a37f33869ddee5785473617a2b5f834dca9f/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=e840a37f33869ddee5785473617a2b5f834dca9f", "patch": "@@ -2717,29 +2717,6 @@ fn check_fn(&@crate_ctxt ccx, &ast::fn_decl decl, ast::proto proto,\n     ret rec(decl=decl, proto=proto, body=body);\n }\n \n-fn check_item_fn(&@crate_ctxt ccx, &span sp, &ast::ident ident, &ast::_fn f,\n-                 &vec[ast::ty_param] ty_params, &ast::def_id id,\n-                 &ast::ann ann) -> @ast::item {\n-\n-    // FIXME: duplicate work: the item annotation already has the arg types\n-    // and return type translated to typeck::ty values. We don't need do to it\n-    // again here, we can extract them.\n-\n-    let vec[arg] inputs = [];\n-    for (ast::arg arg in f.decl.inputs) {\n-        auto input_ty = ast_ty_to_ty_crate(ccx, arg.ty);\n-        inputs += [rec(mode=ast_mode_to_mode(arg.mode), ty=input_ty)];\n-    }\n-\n-    auto output_ty = ast_ty_to_ty_crate(ccx, f.decl.output);\n-    auto typ = ty::mk_fn(ccx.tcx, f.proto, inputs, output_ty);\n-    auto fn_ann = triv_ann(ann.id, typ);\n-    write_type_only(ccx.node_types, ann.id, typ);\n-\n-    auto item = ast::item_fn(ident, f, ty_params, id, fn_ann);\n-    ret @fold::respan[ast::item_](sp, item);\n-}\n-\n fn update_obj_fields(&@crate_ctxt ccx, &@ast::item i) -> @crate_ctxt {\n     alt (i.node) {\n         case (ast::item_obj(_, ?ob, _, ?obj_def_ids, _)) {\n@@ -2839,8 +2816,7 @@ fn check_crate(&ty::ctxt tcx, &@ast::crate crate) -> typecheck_result {\n     auto fld = fold::new_identity_fold[@crate_ctxt]();\n \n     fld = @rec(update_env_for_item = bind update_obj_fields(_, _),\n-               fold_fn      = bind check_fn(_,_,_,_),\n-               fold_item_fn = bind check_item_fn(_,_,_,_,_,_,_)\n+               fold_fn      = bind check_fn(_,_,_,_)\n                with *fld);\n \n     auto crate_1 = fold::fold_crate[@crate_ctxt](ccx, fld, crate);"}]}