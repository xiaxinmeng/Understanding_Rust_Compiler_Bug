{"sha": "9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhM2EyYTFjMzc4NDkwNWVlZTQwNWJlY2RiZDJlNWM3ZWJkNWRiY2U=", "commit": {"author": {"name": "Kevin Reid", "email": "kpreid@google.com", "date": "2021-09-04T18:19:59Z"}, "committer": {"name": "Kevin Reid", "email": "kpreid@google.com", "date": "2021-09-04T18:30:14Z"}, "message": "Clarify what \u201ca container\u201d is in `FromIterator<Option<A>> for Option<V>` doc.", "tree": {"sha": "2e2dcde5a84c5b19a645b876827eec49a06a77d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e2dcde5a84c5b19a645b876827eec49a06a77d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce", "html_url": "https://github.com/rust-lang/rust/commit/9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce/comments", "author": {"login": "kpreid", "id": 779501, "node_id": "MDQ6VXNlcjc3OTUwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/779501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpreid", "html_url": "https://github.com/kpreid", "followers_url": "https://api.github.com/users/kpreid/followers", "following_url": "https://api.github.com/users/kpreid/following{/other_user}", "gists_url": "https://api.github.com/users/kpreid/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpreid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpreid/subscriptions", "organizations_url": "https://api.github.com/users/kpreid/orgs", "repos_url": "https://api.github.com/users/kpreid/repos", "events_url": "https://api.github.com/users/kpreid/events{/privacy}", "received_events_url": "https://api.github.com/users/kpreid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kpreid", "id": 779501, "node_id": "MDQ6VXNlcjc3OTUwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/779501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpreid", "html_url": "https://github.com/kpreid", "followers_url": "https://api.github.com/users/kpreid/followers", "following_url": "https://api.github.com/users/kpreid/following{/other_user}", "gists_url": "https://api.github.com/users/kpreid/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpreid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpreid/subscriptions", "organizations_url": "https://api.github.com/users/kpreid/orgs", "repos_url": "https://api.github.com/users/kpreid/repos", "events_url": "https://api.github.com/users/kpreid/events{/privacy}", "received_events_url": "https://api.github.com/users/kpreid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2f432058c8dcf3d210ea673d178b3768815f80d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f432058c8dcf3d210ea673d178b3768815f80d", "html_url": "https://github.com/rust-lang/rust/commit/c2f432058c8dcf3d210ea673d178b3768815f80d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "907726f0c345c8a3736cbae493697e861aba609c", "filename": "library/core/src/option.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce", "patch": "@@ -1942,8 +1942,8 @@ unsafe impl<A> TrustedLen for IntoIter<A> {}\n impl<A, V: FromIterator<A>> FromIterator<Option<A>> for Option<V> {\n     /// Takes each element in the [`Iterator`]: if it is [`None`][Option::None],\n     /// no further elements are taken, and the [`None`][Option::None] is\n-    /// returned. Should no [`None`][Option::None] occur, a container with the\n-    /// values of each [`Option`] is returned.\n+    /// returned. Should no [`None`][Option::None] occur, a container of type\n+    /// `V` containing the values of each [`Option`] is returned.\n     ///\n     /// # Examples\n     ///"}]}