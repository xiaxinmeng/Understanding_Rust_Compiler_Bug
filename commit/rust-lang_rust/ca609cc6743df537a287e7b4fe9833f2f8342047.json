{"sha": "ca609cc6743df537a287e7b4fe9833f2f8342047", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNjA5Y2M2NzQzZGY1MzdhMjg3ZTdiNGZlOTgzM2YyZjgzNDIwNDc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-03-23T13:17:19Z"}, "committer": {"name": "ggomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-03-23T14:39:27Z"}, "message": "Add code examples for libstd/time", "tree": {"sha": "bb9f71d554d6b9a236c330e9897b28e606308658", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb9f71d554d6b9a236c330e9897b28e606308658"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca609cc6743df537a287e7b4fe9833f2f8342047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca609cc6743df537a287e7b4fe9833f2f8342047", "html_url": "https://github.com/rust-lang/rust/commit/ca609cc6743df537a287e7b4fe9833f2f8342047", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca609cc6743df537a287e7b4fe9833f2f8342047/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "html_url": "https://github.com/rust-lang/rust/commit/d6af19b89c477708ed0f5341ab7a26f1764f1ffa"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "0c32feebecbca2be00439c029c41e9dc981509a0", "filename": "src/libstd/time/mod.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/ca609cc6743df537a287e7b4fe9833f2f8342047/src%2Flibstd%2Ftime%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca609cc6743df537a287e7b4fe9833f2f8342047/src%2Flibstd%2Ftime%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime%2Fmod.rs?ref=ca609cc6743df537a287e7b4fe9833f2f8342047", "patch": "@@ -9,6 +9,16 @@\n // except according to those terms.\n \n //! Temporal quantification.\n+//!\n+//! Example:\n+//!\n+//! ```\n+//! use std::time::Duration;\n+//!\n+//! let five_seconds = Duration::new(5, 0);\n+//! // both declarations are equivalent\n+//! assert_eq!(Duration::new(5, 0), Duration::from_secs(5));\n+//! ```\n \n #![stable(feature = \"time\", since = \"1.3.0\")]\n \n@@ -40,6 +50,22 @@ mod duration;\n /// no method to get \"the number of seconds\" from an instant. Instead, it only\n /// allows measuring the duration between two instants (or comparing two\n /// instants).\n+///\n+/// Example:\n+///\n+/// ```no_run\n+/// use std::time::{Duration, Instant};\n+/// use std::thread::sleep;\n+///\n+/// fn main() {\n+///    let now = Instant::now();\n+///\n+///    // we sleep for 2 seconds\n+///    sleep(Duration::new(2, 0));\n+///    // it prints '2'\n+///    println!(\"{}\", now.elapsed().as_secs());\n+/// }\n+/// ```\n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n #[stable(feature = \"time2\", since = \"1.8.0\")]\n pub struct Instant(time::Instant);\n@@ -63,6 +89,30 @@ pub struct Instant(time::Instant);\n /// information about a `SystemTime`. By calculating the duration from this\n /// fixed point in time, a `SystemTime` can be converted to a human-readable time,\n /// or perhaps some other string representation.\n+///\n+/// Example:\n+///\n+/// ```no_run\n+/// use std::time::{Duration, SystemTime};\n+/// use std::thread::sleep;\n+///\n+/// fn main() {\n+///    let now = SystemTime::now();\n+///\n+///    // we sleep for 2 seconds\n+///    sleep(Duration::new(2, 0));\n+///    match now.elapsed() {\n+///        Ok(elapsed) => {\n+///            // it prints '2'\n+///            println!(\"{}\", elapsed.as_secs());\n+///        }\n+///        Err(e) => {\n+///            // an error occured!\n+///            println!(\"Error: {:?}\", e);\n+///        }\n+///    }\n+/// }\n+/// ```\n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n #[stable(feature = \"time2\", since = \"1.8.0\")]\n pub struct SystemTime(time::SystemTime);"}]}