{"sha": "73cb82384a9e97f5afd79c056ff5dba2454e6184", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczY2I4MjM4NGE5ZTk3ZjVhZmQ3OWMwNTZmZjVkYmEyNDU0ZTYxODQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-07-17T22:39:26Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-07-22T19:01:12Z"}, "message": "some improvements", "tree": {"sha": "bf321ff54a13292b1eb6b3828a49233cc43cb289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf321ff54a13292b1eb6b3828a49233cc43cb289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73cb82384a9e97f5afd79c056ff5dba2454e6184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73cb82384a9e97f5afd79c056ff5dba2454e6184", "html_url": "https://github.com/rust-lang/rust/commit/73cb82384a9e97f5afd79c056ff5dba2454e6184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73cb82384a9e97f5afd79c056ff5dba2454e6184/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccdf4ae814a91ff56a760580b21e59982ebe4d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccdf4ae814a91ff56a760580b21e59982ebe4d31", "html_url": "https://github.com/rust-lang/rust/commit/ccdf4ae814a91ff56a760580b21e59982ebe4d31"}], "stats": {"total": 86, "additions": 68, "deletions": 18}, "files": [{"sha": "09baaeadaee43b58d8d7ec7af1ed7e75b412aed0", "filename": "src/Cargo.lock", "status": "modified", "additions": 45, "deletions": 11, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/73cb82384a9e97f5afd79c056ff5dba2454e6184/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/73cb82384a9e97f5afd79c056ff5dba2454e6184/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=73cb82384a9e97f5afd79c056ff5dba2454e6184", "patch": "@@ -208,13 +208,14 @@ dependencies = [\n  \"ignore 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"jobserver 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lazycell 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazycell 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libgit2-sys 0.7.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustfix 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"same-file 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.70 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -243,6 +244,18 @@ dependencies = [\n  \"serde_json 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"cargo_metadata\"\n+version = \"0.6.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.70 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.70 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"cargotest2\"\n version = \"0.1.0\"\n@@ -629,6 +642,14 @@ dependencies = [\n  \"backtrace 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"error-chain\"\n+version = \"0.12.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"backtrace 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"error_index_generator\"\n version = \"0.0.0\"\n@@ -1011,7 +1032,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"lazycell\"\n-version = \"0.6.0\"\n+version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -1216,12 +1237,13 @@ name = \"miri\"\n version = \"0.1.0\"\n dependencies = [\n  \"byteorder 1.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"cargo_metadata 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cargo_metadata 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"colored 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"compiletest_rs 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.5.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1361,7 +1383,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"smallvec 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"smallvec 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -2342,6 +2364,18 @@ dependencies = [\n  \"serde_json 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"rustfix\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.70 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.70 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"rustfmt-nightly\"\n version = \"0.8.2\"\n@@ -2463,11 +2497,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"smallvec\"\n-version = \"0.6.3\"\n+version = \"0.6.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n \n [[package]]\n name = \"socket2\"\n@@ -3034,6 +3065,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum bufstream 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f2f382711e76b9de6c744cc00d0497baba02fb00a787f088c879f01d09468e32\"\n \"checksum byteorder 1.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"74c0b906e9446b0a2e4f760cdb3fa4b2c48cdc6db8766a845c54b6ff063fd2e9\"\n \"checksum cargo_metadata 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1efca0b863ca03ed4c109fb1c55e0bc4bbeb221d3e103d86251046b06a526bd0\"\n+\"checksum cargo_metadata 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d6809b327f87369e6f3651efd2c5a96c49847a3ed2559477ecba79014751ee1\"\n \"checksum cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2119ea4867bd2b8ed3aecab467709720b2d55b1bcfe09f772fd68066eaf15275\"\n \"checksum cfg-if 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"efe5c877e17a9c717a0bf3613b2709f723202c4e4675cc8f12926ded29bcb17e\"\n \"checksum chalk-engine 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a146c19172c7eea48ea55a7123ac95da786639bc665097f1e14034ee5f1d8699\"\n@@ -3065,6 +3097,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum env_logger 0.5.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0e6e40ebb0e66918a37b38c7acab4e10d299e0463fe2af5d29b9cc86710cfd2a\"\n \"checksum environment 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1f4b14e20978669064c33b4c1e0fb4083412e40fe56cbea2eae80fd7591503ee\"\n \"checksum error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff511d5dc435d703f4971bc399647c9bc38e20cb41452e3b9feb4765419ed3f3\"\n+\"checksum error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"07e791d3be96241c77c43846b665ef1384606da2cd2a48730abe606a12906e02\"\n \"checksum failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"934799b6c1de475a012a02dab0ace1ace43789ee4b99bcfbf1a2e3e8ced5de82\"\n \"checksum failure_derive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c7cdda555bb90c9bb67a3b670a0f42de8e73f5981524123ad8578aafec8ddb8b\"\n \"checksum filetime 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"da4b9849e77b13195302c174324b5ba73eec9b236b24c221a61000daefb95c5f\"\n@@ -3103,7 +3136,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum languageserver-types 0.45.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9d91d91d1c23db74187096d191967cb49f49bb175ad6d855fa9229d16ef2c982\"\n \"checksum lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76f033c7ad61445c5b347c7382dd1237847eb1bce590fe50365dcb33d546be73\"\n \"checksum lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fb497c35d362b6a331cfd94956a07fc2c78a4604cdbee844a81170386b996dd3\"\n-\"checksum lazycell 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a6f08839bc70ef4a3fe1d566d5350f519c5912ea86be0df1740a7d247c7fc0ef\"\n+\"checksum lazycell 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d33a48d0365c96081958cc663eef834975cb1e8d8bea3378513fc72bdbf11e50\"\n \"checksum libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b685088df2b950fccadf07a7187c8ef846a959c142338a48f9dc0b94517eb5f1\"\n \"checksum libgit2-sys 0.7.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9dcce5a1ecca1891ab06c1545a422fd4b35f65c19acec51ea638c66d5be0810d\"\n \"checksum libssh2-sys 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c628b499e8d1a4f4bd09a95d6cb1f8aeb231b46a9d40959bbd0408f14dd63adf\"\n@@ -3190,6 +3223,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dcf128d1287d2ea9d80910b5f1120d0b8eede3fbf1abe91c40d39ea7d51e6fda\"\n \"checksum rustc_version 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a54aa04a10c68c1c4eacb4337fd883b435997ede17a9385784b990777686b09a\"\n \"checksum rustfix 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9da3cf9b79dc889a2c9879643f26d7a53e37e9361c7566b7d2787d5ace0d8396\"\n+\"checksum rustfix 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6e2613df31a403754605dba168ded93d529a2b88c5a63b78cf2421bb5d62c936\"\n \"checksum same-file 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cfb6eded0b06a0b512c8ddbcf04089138c9b4362c2f696f3c3d76039d68f3637\"\n \"checksum schannel 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dc1fabf2a7b6483a141426e1afd09ad543520a77ac49bd03c286e7696ccfd77f\"\n \"checksum scoped-tls 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"332ffa32bf586782a3efaeb58f127980944bbc8c4d6913a86107ac2a5ab24b28\"\n@@ -3203,7 +3237,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum shell-escape 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"170a13e64f2a51b77a45702ba77287f5c6829375b04a69cf2222acd17d0cfab9\"\n \"checksum shlex 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7fdf1b9db47230893d76faad238fd6097fd6d6a9245cd7a4d90dbd639536bbd2\"\n \"checksum siphasher 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0df90a788073e8d0235a67e50441d47db7c8ad9debd91cbf43736a2a92d36537\"\n-\"checksum smallvec 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"26df3bb03ca5eac2e64192b723d51f56c1b1e0860e7c766281f4598f181acdc8\"\n+\"checksum smallvec 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"312a7df010092e73d6bbaf141957e868d4f30efd2bfd9bb1028ad91abec58514\"\n \"checksum socket2 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"962a516af4d3a7c272cb3a1d50a8cc4e5b41802e4ad54cfb7bee8ba61d37d703\"\n \"checksum stable_deref_trait 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ffbc596e092fe5f598b12ef46cc03754085ac2f4d8c739ad61c4ae266cc3b3fa\"\n \"checksum string_cache 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"25d70109977172b127fe834e5449e5ab1740b9ba49fa18a2020f509174f25423\""}, {"sha": "faa41c53d7360618437805a627683e1346623e43", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/73cb82384a9e97f5afd79c056ff5dba2454e6184/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73cb82384a9e97f5afd79c056ff5dba2454e6184/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=73cb82384a9e97f5afd79c056ff5dba2454e6184", "patch": "@@ -92,7 +92,11 @@ impl<'a, 'tcx, 'rcx> AutoTraitFinder<'a, 'tcx, 'rcx> {\n         let mut traits = FxHashMap();\n         if let ty::TyAdt(_adt, _) = ty.sty {\n             let param_env = self.cx.tcx.param_env(def_id);\n-            for &trait_def_id in self.cx.tcx.all_traits(LOCAL_CRATE).iter() {\n+            match _adt.adt_kind() {\n+                AdtKind::Struct => println!(\"|||||> {}\", self.cx.tcx.item_name(def_id).to_string()),\n+                _ => {}\n+            }\n+            for &trait_def_id in self.cx.all_traits.iter() {\n                 self.cx.tcx.for_each_relevant_impl(trait_def_id, ty, |impl_def_id| {\n                     self.cx.tcx.infer_ctxt().enter(|infcx| {\n                         let trait_ref = infcx.tcx.impl_trait_ref(impl_def_id).unwrap();\n@@ -120,6 +124,7 @@ impl<'a, 'tcx, 'rcx> AutoTraitFinder<'a, 'tcx, 'rcx> {\n                                 // FIXME: add crate's id before the name to avoid removing a\n                                 // trait which doesn't exist.\n                                 if traits.get(&trait_def_id).is_none() {\n+                                    println!(\"=> {}\", infcx.tcx.item_name(trait_def_id).to_string());\n                                     /*let generics = (infcx.tcx.generics_of(trait_def_id), &predicates).clean(cx);\n                                     get_path_for_type(self.cx.tcx, trait_def_id, hir::def::Def::Trait)*/\n                                     /*if let Some(i) = self.get_auto_trait_impl_for(\n@@ -221,11 +226,11 @@ impl<'a, 'tcx, 'rcx> AutoTraitFinder<'a, 'tcx, 'rcx> {\n             \"get_auto_traits: type {:?} auto_traits {:?}\",\n             def_id, auto_traits\n         );\n-        if ::std::env::var(\"LOL\").is_ok() {\n+        /*if ::std::env::var(\"LOL\").is_ok() {\n             for x in &auto_traits {\n                 println!(\"\\n=> {:?}\", x);\n             }\n-        }\n+        }*/\n         auto_traits\n     }\n "}, {"sha": "ac7dcc1306181b5b20c7057a0abf125761d904ca", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73cb82384a9e97f5afd79c056ff5dba2454e6184/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73cb82384a9e97f5afd79c056ff5dba2454e6184/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=73cb82384a9e97f5afd79c056ff5dba2454e6184", "patch": "@@ -11,7 +11,7 @@\n use rustc_lint;\n use rustc_driver::{self, driver, target_features, abort_on_err};\n use rustc::session::{self, config};\n-use rustc::hir::def_id::{DefId, CrateNum};\n+use rustc::hir::def_id::{DefId, CrateNum, LOCAL_CRATE};\n use rustc::hir::def::Def;\n use rustc::middle::cstore::CrateStore;\n use rustc::middle::privacy::AccessLevels;\n@@ -84,6 +84,7 @@ pub struct DocContext<'a, 'tcx: 'a, 'rcx: 'a> {\n     /// Maps (type_id, trait_id) -> auto trait impl\n     pub generated_synthetics: RefCell<FxHashSet<(DefId, DefId)>>,\n     pub current_item_name: RefCell<Option<Name>>,\n+    pub all_traits: Lrc<Vec<DefId>>,\n }\n \n impl<'a, 'tcx, 'rcx> DocContext<'a, 'tcx, 'rcx> {\n@@ -385,6 +386,7 @@ pub fn run_core(search_paths: SearchPaths,\n                 all_fake_def_ids: RefCell::new(FxHashSet()),\n                 generated_synthetics: RefCell::new(FxHashSet()),\n                 current_item_name: RefCell::new(None),\n+                all_traits: tcx.all_traits(LOCAL_CRATE),\n             };\n             debug!(\"crate: {:?}\", tcx.hir.krate());\n "}, {"sha": "5dc91882b5c9ae3019b833ac1685ecc2d0e46179", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/73cb82384a9e97f5afd79c056ff5dba2454e6184/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73cb82384a9e97f5afd79c056ff5dba2454e6184/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=73cb82384a9e97f5afd79c056ff5dba2454e6184", "patch": "@@ -3585,11 +3585,11 @@ fn render_assoc_items(w: &mut fmt::Formatter,\n         None => return Ok(()),\n     };\n     let (non_trait, traits): (Vec<_>, _) = v.iter().partition(|i| {\n-        if ::std::env::var(\"LOL\").is_ok() {\n+        /*if ::std::env::var(\"LOL\").is_ok() {\n             if let Some(ref t) = i.inner_impl().trait_ {\n                 println!(\"==> {:?}\", t);\n             }\n-        }\n+        }*/\n         i.inner_impl().trait_.is_none()\n     });\n     if !non_trait.is_empty() {\n@@ -3632,7 +3632,16 @@ fn render_assoc_items(w: &mut fmt::Formatter,\n \n         let (synthetic, concrete) = traits\n             .iter()\n-            .partition::<Vec<_>, _>(|t| t.inner_impl().synthetic);\n+            .partition::<Vec<&&Impl>, _>(|t| t.inner_impl().synthetic);\n+\n+        // ugly hacks to remove duplicates.\n+        let synthetic = synthetic.into_iter()\n+                                 .filter(|t| {\n+            !concrete.iter()\n+                     .any(|tt| {\n+                         tt.inner_impl().trait_.def_id() == t.inner_impl().trait_.def_id()\n+                     })\n+        }).collect::<Vec<_>>();\n \n         struct RendererStruct<'a, 'b, 'c>(&'a Context, Vec<&'b &'b Impl>, &'c clean::Item);\n "}]}