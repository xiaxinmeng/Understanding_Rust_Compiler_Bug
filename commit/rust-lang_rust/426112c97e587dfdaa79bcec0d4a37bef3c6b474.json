{"sha": "426112c97e587dfdaa79bcec0d4a37bef3c6b474", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNjExMmM5N2U1ODdkZmRhYTc5YmNlYzBkNGEzN2JlZjNjNmI0NzQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-15T00:05:12Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-15T00:08:22Z"}, "message": "Add `DotDotPat` to AST\n\nThis is modeled on `PlaceholderPat`.", "tree": {"sha": "6c97a93330a26f587482b32d5a95c2a292f7972a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c97a93330a26f587482b32d5a95c2a292f7972a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/426112c97e587dfdaa79bcec0d4a37bef3c6b474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/426112c97e587dfdaa79bcec0d4a37bef3c6b474", "html_url": "https://github.com/rust-lang/rust/commit/426112c97e587dfdaa79bcec0d4a37bef3c6b474", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/426112c97e587dfdaa79bcec0d4a37bef3c6b474/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "211171ffe6a4e8cbf31b9513972e59a8b9bdc811", "url": "https://api.github.com/repos/rust-lang/rust/commits/211171ffe6a4e8cbf31b9513972e59a8b9bdc811", "html_url": "https://github.com/rust-lang/rust/commit/211171ffe6a4e8cbf31b9513972e59a8b9bdc811"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "61535d24fe12dda9210d3612f393c0a9df839bf9", "filename": "crates/ra_hir/src/expr/lower.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/426112c97e587dfdaa79bcec0d4a37bef3c6b474/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426112c97e587dfdaa79bcec0d4a37bef3c6b474/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs?ref=426112c97e587dfdaa79bcec0d4a37bef3c6b474", "patch": "@@ -573,6 +573,7 @@ where\n             }\n \n             // FIXME: implement\n+            ast::Pat::DotDotPat(_) => Pat::Missing,\n             ast::Pat::BoxPat(_) => Pat::Missing,\n             ast::Pat::LiteralPat(_) => Pat::Missing,\n             ast::Pat::SlicePat(_) | ast::Pat::RangePat(_) => Pat::Missing,"}, {"sha": "23eb3c9cb5012594253914347464a88bb6c65bb3", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/426112c97e587dfdaa79bcec0d4a37bef3c6b474/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426112c97e587dfdaa79bcec0d4a37bef3c6b474/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=426112c97e587dfdaa79bcec0d4a37bef3c6b474", "patch": "@@ -152,6 +152,7 @@ pub enum SyntaxKind {\n     BOX_PAT,\n     BIND_PAT,\n     PLACEHOLDER_PAT,\n+    DOT_DOT_PAT,\n     PATH_PAT,\n     RECORD_PAT,\n     RECORD_FIELD_PAT_LIST,"}, {"sha": "591ac8ca3d88ac703e05ba0059f828d4d32c1445", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/426112c97e587dfdaa79bcec0d4a37bef3c6b474/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426112c97e587dfdaa79bcec0d4a37bef3c6b474/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=426112c97e587dfdaa79bcec0d4a37bef3c6b474", "patch": "@@ -532,6 +532,29 @@ impl AstNode for ContinueExpr {\n }\n impl ContinueExpr {}\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct DotDotPat {\n+    pub(crate) syntax: SyntaxNode,\n+}\n+impl AstNode for DotDotPat {\n+    fn can_cast(kind: SyntaxKind) -> bool {\n+        match kind {\n+            DOT_DOT_PAT => true,\n+            _ => false,\n+        }\n+    }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        if Self::can_cast(syntax.kind()) {\n+            Some(Self { syntax })\n+        } else {\n+            None\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode {\n+        &self.syntax\n+    }\n+}\n+impl DotDotPat {}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct DynTraitType {\n     pub(crate) syntax: SyntaxNode,\n }\n@@ -2128,6 +2151,7 @@ pub enum Pat {\n     BoxPat(BoxPat),\n     BindPat(BindPat),\n     PlaceholderPat(PlaceholderPat),\n+    DotDotPat(DotDotPat),\n     PathPat(PathPat),\n     RecordPat(RecordPat),\n     TupleStructPat(TupleStructPat),\n@@ -2156,6 +2180,11 @@ impl From<PlaceholderPat> for Pat {\n         Pat::PlaceholderPat(node)\n     }\n }\n+impl From<DotDotPat> for Pat {\n+    fn from(node: DotDotPat) -> Pat {\n+        Pat::DotDotPat(node)\n+    }\n+}\n impl From<PathPat> for Pat {\n     fn from(node: PathPat) -> Pat {\n         Pat::PathPat(node)\n@@ -2194,8 +2223,10 @@ impl From<LiteralPat> for Pat {\n impl AstNode for Pat {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            REF_PAT | BOX_PAT | BIND_PAT | PLACEHOLDER_PAT | PATH_PAT | RECORD_PAT\n-            | TUPLE_STRUCT_PAT | TUPLE_PAT | SLICE_PAT | RANGE_PAT | LITERAL_PAT => true,\n+            REF_PAT | BOX_PAT | BIND_PAT | PLACEHOLDER_PAT | DOT_DOT_PAT | PATH_PAT\n+            | RECORD_PAT | TUPLE_STRUCT_PAT | TUPLE_PAT | SLICE_PAT | RANGE_PAT | LITERAL_PAT => {\n+                true\n+            }\n             _ => false,\n         }\n     }\n@@ -2205,6 +2236,7 @@ impl AstNode for Pat {\n             BOX_PAT => Pat::BoxPat(BoxPat { syntax }),\n             BIND_PAT => Pat::BindPat(BindPat { syntax }),\n             PLACEHOLDER_PAT => Pat::PlaceholderPat(PlaceholderPat { syntax }),\n+            DOT_DOT_PAT => Pat::DotDotPat(DotDotPat { syntax }),\n             PATH_PAT => Pat::PathPat(PathPat { syntax }),\n             RECORD_PAT => Pat::RecordPat(RecordPat { syntax }),\n             TUPLE_STRUCT_PAT => Pat::TupleStructPat(TupleStructPat { syntax }),\n@@ -2222,6 +2254,7 @@ impl AstNode for Pat {\n             Pat::BoxPat(it) => &it.syntax,\n             Pat::BindPat(it) => &it.syntax,\n             Pat::PlaceholderPat(it) => &it.syntax,\n+            Pat::DotDotPat(it) => &it.syntax,\n             Pat::PathPat(it) => &it.syntax,\n             Pat::RecordPat(it) => &it.syntax,\n             Pat::TupleStructPat(it) => &it.syntax,"}, {"sha": "08cc6eeea76d9fc42c3f058cb748d0eca37d4459", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/426112c97e587dfdaa79bcec0d4a37bef3c6b474/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/426112c97e587dfdaa79bcec0d4a37bef3c6b474/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=426112c97e587dfdaa79bcec0d4a37bef3c6b474", "patch": "@@ -161,6 +161,7 @@ Grammar(\n         \"BOX_PAT\",\n         \"BIND_PAT\",\n         \"PLACEHOLDER_PAT\",\n+        \"DOT_DOT_PAT\",\n         \"PATH_PAT\",\n         \"RECORD_PAT\",\n         \"RECORD_FIELD_PAT_LIST\",\n@@ -532,6 +533,7 @@ Grammar(\n             traits: [\"NameOwner\"]\n         ),\n         \"PlaceholderPat\": (),\n+        \"DotDotPat\": (),\n         \"PathPat\": ( options: [ \"Path\" ] ),\n         \"RecordPat\": ( options: [\"RecordFieldPatList\", \"Path\"] ),\n         \"RecordFieldPatList\": (\n@@ -559,6 +561,7 @@ Grammar(\n                 \"BoxPat\",\n                 \"BindPat\",\n                 \"PlaceholderPat\",\n+                \"DotDotPat\",\n                 \"PathPat\",\n                 \"RecordPat\",\n                 \"TupleStructPat\","}]}