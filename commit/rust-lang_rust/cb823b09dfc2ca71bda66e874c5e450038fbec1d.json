{"sha": "cb823b09dfc2ca71bda66e874c5e450038fbec1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiODIzYjA5ZGZjMmNhNzFiZGE2NmU4NzRjNWU0NTAwMzhmYmVjMWQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-03T16:59:09Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-03T16:59:09Z"}, "message": "Search for libfoo.a on windows as well as foo.lib\n\nTurns out LLVM only builds libfoo.a libraries, so we're going to need this logic\nto statically link librustc", "tree": {"sha": "5dba3a57d609a2540e4379f0707058b488084b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dba3a57d609a2540e4379f0707058b488084b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb823b09dfc2ca71bda66e874c5e450038fbec1d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb823b09dfc2ca71bda66e874c5e450038fbec1d", "html_url": "https://github.com/rust-lang/rust/commit/cb823b09dfc2ca71bda66e874c5e450038fbec1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb823b09dfc2ca71bda66e874c5e450038fbec1d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18084be3164d2fe7c540662ea1e44cf73af9bf0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/18084be3164d2fe7c540662ea1e44cf73af9bf0f", "html_url": "https://github.com/rust-lang/rust/commit/18084be3164d2fe7c540662ea1e44cf73af9bf0f"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "4711381a7b8518207ea2168f7fb04c3fd3d9b89e", "filename": "src/librustc/back/archive.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cb823b09dfc2ca71bda66e874c5e450038fbec1d/src%2Flibrustc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb823b09dfc2ca71bda66e874c5e450038fbec1d/src%2Flibrustc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farchive.rs?ref=cb823b09dfc2ca71bda66e874c5e450038fbec1d", "patch": "@@ -119,18 +119,25 @@ impl Archive {\n     }\n \n     fn find_library(&self, name: &str) -> Path {\n-        let (prefix, ext) = match self.sess.targ_cfg.os {\n+        let (osprefix, osext) = match self.sess.targ_cfg.os {\n             abi::OsWin32 => (\"\", \"lib\"), _ => (\"lib\", \"a\"),\n         };\n-        let libname = format!(\"{}{}.{}\", prefix, name, ext);\n+        // On windows, static libraries sometimes show up as libfoo.a and other\n+        // times show up as foo.lib\n+        let oslibname = format!(\"{}{}.{}\", osprefix, name, osext);\n+        let unixlibname = format!(\"lib{}.a\", name);\n \n         let mut rustpath = filesearch::rust_path();\n         rustpath.push(self.sess.filesearch.get_target_lib_path());\n         let path = self.sess.opts.addl_lib_search_paths.iter();\n         for path in path.chain(rustpath.iter()) {\n             debug!(\"looking for {} inside {}\", name, path.display());\n-            let test = path.join(libname.clone());\n+            let test = path.join(oslibname.as_slice());\n             if test.exists() { return test }\n+            if oslibname != unixlibname {\n+                let test = path.join(unixlibname.as_slice());\n+                if test.exists() { return test }\n+            }\n         }\n         self.sess.fatal(format!(\"could not find native static library `{}`, \\\n                                  perhaps an -L flag is missing?\", name));"}]}