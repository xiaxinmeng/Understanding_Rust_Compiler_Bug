{"sha": "a549bbdc3230b44d18d8828610053c521fe95d9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NDliYmRjMzIzMGI0NGQxOGQ4ODI4NjEwMDUzYzUyMWZlOTVkOWU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-06-13T20:03:42Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-21T18:41:21Z"}, "message": "Add regression test for #54182", "tree": {"sha": "08dcf7b1e6311a9936237fd81808c42cbbc22be3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08dcf7b1e6311a9936237fd81808c42cbbc22be3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a549bbdc3230b44d18d8828610053c521fe95d9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a549bbdc3230b44d18d8828610053c521fe95d9e", "html_url": "https://github.com/rust-lang/rust/commit/a549bbdc3230b44d18d8828610053c521fe95d9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a549bbdc3230b44d18d8828610053c521fe95d9e/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a323ff2c864801fdc8e044e88f11efb49a565ed1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a323ff2c864801fdc8e044e88f11efb49a565ed1", "html_url": "https://github.com/rust-lang/rust/commit/a323ff2c864801fdc8e044e88f11efb49a565ed1"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "bfbf7ed1f223d8ab56fb5345111b13d68f6eed74", "filename": "src/test/ui/associated-types/issue-54182-1.rs", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/a549bbdc3230b44d18d8828610053c521fe95d9e/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a549bbdc3230b44d18d8828610053c521fe95d9e/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-1.rs?ref=a549bbdc3230b44d18d8828610053c521fe95d9e", "patch": "@@ -0,0 +1,79 @@\n+// run-pass\n+\n+#![feature(associated_type_defaults)]\n+\n+macro_rules! overload {\n+    ($a:expr, $b:expr) => {\n+        overload::overload2($a, $b)\n+    };\n+    ($a:expr, $b:expr, $c:expr) => {\n+        overload::overload3($a, $b, $c)\n+    }\n+}\n+\n+fn main() {\n+    let r = overload!(42, true);\n+    println!(\"-> {:?}\", r);\n+\n+    let r = overload!(\"Hello world\", 13.0);\n+    println!(\"-> {:?}\", r);\n+\n+    let r = overload!(42, true, 42.5);\n+    println!(\"-> {:?}\", r);\n+\n+    let r = overload!(\"Hello world\", 13.0, 42);\n+    println!(\"-> {:?}\", r);\n+}\n+\n+mod overload {\n+    pub trait Overload {\n+        // type R;\n+        type R = ();\n+        fn overload(self) -> Self::R;\n+    }\n+\n+    // overloads for 2 args\n+    impl Overload for (i32, bool) {\n+        // type R = ();\n+        fn overload(self) /*-> Self::R*/ {\n+            let (a, b) = self; // destructure args\n+            println!(\"i32 and bool {:?}\", (a, b));\n+        }\n+    }\n+    impl<'a> Overload for (&'a str, f32) {\n+        type R = f32;\n+        fn overload(self) -> Self::R {\n+            let (a, b) = self; // destructure args\n+            println!(\"&str and f32 {:?}\", (a, b));\n+            b\n+        }\n+    }\n+\n+    // overloads for 3 args\n+    impl Overload for (i32, bool, f32) {\n+        // type R = ();\n+        fn overload(self) /*-> Self::R*/ {\n+            let (a, b, c) = self; // destructure args\n+            println!(\"i32 and bool and f32 {:?}\", (a, b, c));\n+        }\n+    }\n+    impl<'a> Overload for (&'a str, f32, i32) {\n+        type R = i32;\n+        fn overload(self) -> Self::R {\n+            let (a, b, c) = self; // destructure args\n+            println!(\"&str and f32 and i32: {:?}\", (a, b, c));\n+            c\n+        }\n+    }\n+\n+    // overloads for more args\n+    // ...\n+\n+    pub fn overload2<R, A, B>(a: A, b: B) -> R where (A, B): Overload<R = R> {\n+        (a, b).overload()\n+    }\n+\n+    pub fn overload3<R, A, B, C>(a: A, b: B, c: C) -> R where (A, B, C): Overload<R = R> {\n+        (a, b, c).overload()\n+    }\n+}"}, {"sha": "cba1b1b3ca6a17534d57cb268a4192fc312b3992", "filename": "src/test/ui/associated-types/issue-54182-2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a549bbdc3230b44d18d8828610053c521fe95d9e/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a549bbdc3230b44d18d8828610053c521fe95d9e/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-54182-2.rs?ref=a549bbdc3230b44d18d8828610053c521fe95d9e", "patch": "@@ -0,0 +1,15 @@\n+// compile-pass\n+\n+#![feature(associated_type_defaults)]\n+\n+trait Tr {\n+    type Assoc = ();\n+}\n+\n+impl Tr for () {}\n+\n+fn f(thing: <() as Tr>::Assoc) {\n+    let c: () = thing;\n+}\n+\n+fn main() {}"}]}