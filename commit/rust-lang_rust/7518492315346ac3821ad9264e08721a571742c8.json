{"sha": "7518492315346ac3821ad9264e08721a571742c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MTg0OTIzMTUzNDZhYzM4MjFhZDkyNjRlMDg3MjFhNTcxNzQyYzg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T07:43:33Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-13T10:25:33Z"}, "message": "expand: extract error_wrong_fragment_kind", "tree": {"sha": "477ea6b393b6ccc246b8d8a6bb2d3976a676cb9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/477ea6b393b6ccc246b8d8a6bb2d3976a676cb9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7518492315346ac3821ad9264e08721a571742c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7518492315346ac3821ad9264e08721a571742c8", "html_url": "https://github.com/rust-lang/rust/commit/7518492315346ac3821ad9264e08721a571742c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7518492315346ac3821ad9264e08721a571742c8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acad03342412961536641d53628d7ccaa189279b", "url": "https://api.github.com/repos/rust-lang/rust/commits/acad03342412961536641d53628d7ccaa189279b", "html_url": "https://github.com/rust-lang/rust/commit/acad03342412961536641d53628d7ccaa189279b"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "136cc1d94a07860e2e5b33cd114b0a2d9c8dff60", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7518492315346ac3821ad9264e08721a571742c8/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7518492315346ac3821ad9264e08721a571742c8/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=7518492315346ac3821ad9264e08721a571742c8", "patch": "@@ -623,6 +623,18 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         FatalError.raise();\n     }\n \n+    /// A macro's expansion does not fit in this fragment kind.\n+    /// For example, a non-type macro in a type position.\n+    fn error_wrong_fragment_kind(&mut self, kind: AstFragmentKind, mac: &ast::Mac, span: Span) {\n+        let msg = format!(\n+            \"non-{kind} macro in {kind} position: {path}\",\n+            kind = kind.name(),\n+            path = pprust::path_to_string(&mac.path),\n+        );\n+        self.cx.span_err(span, &msg);\n+        self.cx.trace_macros_diag();\n+    }\n+\n     fn expand_invoc(&mut self, invoc: Invocation, ext: &SyntaxExtensionKind) -> AstFragment {\n         if self.cx.current_expansion.depth > self.cx.ecfg.recursion_limit {\n             self.error_recursion_limit_reached();\n@@ -643,13 +655,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                     let result = if let Some(result) = fragment_kind.make_from(tok_result) {\n                         result\n                     } else {\n-                        let msg = format!(\n-                            \"non-{kind} macro in {kind} position: {path}\",\n-                            kind = fragment_kind.name(),\n-                            path = pprust::path_to_string(&mac.path),\n-                        );\n-                        self.cx.span_err(span, &msg);\n-                        self.cx.trace_macros_diag();\n+                        self.error_wrong_fragment_kind(fragment_kind, &mac, span);\n                         fragment_kind.dummy(span)\n                     };\n                     self.cx.current_expansion.prior_type_ascription = prev;"}]}