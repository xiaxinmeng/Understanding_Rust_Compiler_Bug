{"sha": "685f04220ee584f00f60e5ff9d7aca16351c5399", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NWYwNDIyMGVlNTg0ZjAwZjYwZTVmZjlkN2FjYTE2MzUxYzUzOTk=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-09-06T04:00:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-06T04:00:22Z"}, "message": "Clean up vec benches bench_in_place style", "tree": {"sha": "d87b80b520dd8be34dc441aedd6e3e3878044359", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d87b80b520dd8be34dc441aedd6e3e3878044359"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/685f04220ee584f00f60e5ff9d7aca16351c5399", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfVF7WCRBK7hj4Ov3rIwAAdHIIAKy3m+451qsXx8ggrf5LvSQ8\nR14fxHR4E4pgHenhTRNfT4I0Ug6ViQtzu0esEsJqpdj1BlQLtBJ37aQalhJRfpcz\nXS2TwUJL3gMx0pmzf1QEjMe+Ejh8J1FVvI/a4QYpASPgFtMofqU0gqJcaHhFYk6y\nIiBjoTHDDkxo1Jp8ubt5OktlmyDZM3+JuWtRuJB4dEdnP2vALk3L1VB/Z4COIDHw\npIKvvLbgXDFuyfzknxg6xgrxYwyIPz5C4jjlgis+Pj7HrJ7xTiiw/bX6MGU8K7YF\nayPS0/21P8qRE+Ot3QiPmmv3oQz0wiB7QbDlu3tgHwOTgGhwwMD0zuyeLaNAxbA=\n=HGV0\n-----END PGP SIGNATURE-----\n", "payload": "tree d87b80b520dd8be34dc441aedd6e3e3878044359\nparent d39b076489a8686961204721001ccd9a9e9a5e0a\nauthor Ivan Tham <pickfire@riseup.net> 1599364822 +0800\ncommitter GitHub <noreply@github.com> 1599364822 +0800\n\nClean up vec benches bench_in_place style"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/685f04220ee584f00f60e5ff9d7aca16351c5399", "html_url": "https://github.com/rust-lang/rust/commit/685f04220ee584f00f60e5ff9d7aca16351c5399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/685f04220ee584f00f60e5ff9d7aca16351c5399/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d39b076489a8686961204721001ccd9a9e9a5e0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d39b076489a8686961204721001ccd9a9e9a5e0a", "html_url": "https://github.com/rust-lang/rust/commit/d39b076489a8686961204721001ccd9a9e9a5e0a"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "6703a99b15155683008ef24d88474ea40b00befe", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/685f04220ee584f00f60e5ff9d7aca16351c5399/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/685f04220ee584f00f60e5ff9d7aca16351c5399/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=685f04220ee584f00f60e5ff9d7aca16351c5399", "patch": "@@ -457,17 +457,16 @@ fn bench_clone_from_10_1000_0100(b: &mut Bencher) {\n }\n \n macro_rules! bench_in_place {\n-    (\n-        $($fname:ident, $type:ty , $count:expr, $init: expr);*\n-    ) => {\n+    ($($fname:ident, $type:ty, $count:expr, $init:expr);*) => {\n         $(\n             #[bench]\n             fn $fname(b: &mut Bencher) {\n                 b.iter(|| {\n                     let src: Vec<$type> = black_box(vec![$init; $count]);\n                     let mut sink = src.into_iter()\n                         .enumerate()\n-                        .map(|(idx, e)| { (idx as $type) ^ e }).collect::<Vec<$type>>();\n+                        .map(|(idx, e)| idx as $type ^ e)\n+                        .collect::<Vec<$type>>();\n                     black_box(sink.as_mut_ptr())\n                 });\n             }\n@@ -476,24 +475,24 @@ macro_rules! bench_in_place {\n }\n \n bench_in_place![\n-    bench_in_place_xxu8_i0_0010,     u8,     10, 0;\n-    bench_in_place_xxu8_i0_0100,     u8,    100, 0;\n-    bench_in_place_xxu8_i0_1000,     u8,   1000, 0;\n-    bench_in_place_xxu8_i1_0010,     u8,     10, 1;\n-    bench_in_place_xxu8_i1_0100,     u8,    100, 1;\n-    bench_in_place_xxu8_i1_1000,     u8,   1000, 1;\n-    bench_in_place_xu32_i0_0010,    u32,     10, 0;\n-    bench_in_place_xu32_i0_0100,    u32,    100, 0;\n-    bench_in_place_xu32_i0_1000,    u32,   1000, 0;\n-    bench_in_place_xu32_i1_0010,    u32,     10, 1;\n-    bench_in_place_xu32_i1_0100,    u32,    100, 1;\n-    bench_in_place_xu32_i1_1000,    u32,   1000, 1;\n-    bench_in_place_u128_i0_0010,   u128,     10, 0;\n-    bench_in_place_u128_i0_0100,   u128,    100, 0;\n-    bench_in_place_u128_i0_1000,   u128,   1000, 0;\n-    bench_in_place_u128_i1_0010,   u128,     10, 1;\n-    bench_in_place_u128_i1_0100,   u128,    100, 1;\n-    bench_in_place_u128_i1_1000,   u128,   1000, 1\n+    bench_in_place_xxu8_0010_i0,   u8,   10, 0;\n+    bench_in_place_xxu8_0100_i0,   u8,  100, 0;\n+    bench_in_place_xxu8_1000_i0,   u8, 1000, 0;\n+    bench_in_place_xxu8_0010_i1,   u8,   10, 1;\n+    bench_in_place_xxu8_0100_i1,   u8,  100, 1;\n+    bench_in_place_xxu8_1000_i1,   u8, 1000, 1;\n+    bench_in_place_xu32_0010_i0,  u32,   10, 0;\n+    bench_in_place_xu32_0100_i0,  u32,  100, 0;\n+    bench_in_place_xu32_1000_i0,  u32, 1000, 0;\n+    bench_in_place_xu32_0010_i1,  u32,   10, 1;\n+    bench_in_place_xu32_0100_i1,  u32,  100, 1;\n+    bench_in_place_xu32_1000_i1,  u32, 1000, 1;\n+    bench_in_place_u128_0010_i0, u128,   10, 0;\n+    bench_in_place_u128_0100_i0, u128,  100, 0;\n+    bench_in_place_u128_1000_i0, u128, 1000, 0;\n+    bench_in_place_u128_0010_i1, u128,   10, 1;\n+    bench_in_place_u128_0100_i1, u128,  100, 1;\n+    bench_in_place_u128_1000_i1, u128, 1000, 1\n ];\n \n #[bench]"}]}