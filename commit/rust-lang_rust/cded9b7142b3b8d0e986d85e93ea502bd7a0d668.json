{"sha": "cded9b7142b3b8d0e986d85e93ea502bd7a0d668", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZWQ5YjcxNDJiM2I4ZDBlOTg2ZDg1ZTkzZWE1MDJiZDdhMGQ2Njg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-18T15:58:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-18T15:58:21Z"}, "message": "set errno on stdout write failure", "tree": {"sha": "d50ffb45269ca5a0cb611f0c7fc3542ed16a0eda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d50ffb45269ca5a0cb611f0c7fc3542ed16a0eda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cded9b7142b3b8d0e986d85e93ea502bd7a0d668", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cded9b7142b3b8d0e986d85e93ea502bd7a0d668", "html_url": "https://github.com/rust-lang/rust/commit/cded9b7142b3b8d0e986d85e93ea502bd7a0d668", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cded9b7142b3b8d0e986d85e93ea502bd7a0d668/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b021209b0e889d9c61ec41c4016393f7415e69e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b021209b0e889d9c61ec41c4016393f7415e69e8", "html_url": "https://github.com/rust-lang/rust/commit/b021209b0e889d9c61ec41c4016393f7415e69e8"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "80611a18e4fc7aade137b99e60f9045d7d97036d", "filename": "src/shims/posix/foreign_items.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cded9b7142b3b8d0e986d85e93ea502bd7a0d668/src%2Fshims%2Fposix%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cded9b7142b3b8d0e986d85e93ea502bd7a0d668/src%2Fshims%2Fposix%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fforeign_items.rs?ref=cded9b7142b3b8d0e986d85e93ea502bd7a0d668", "patch": "@@ -133,8 +133,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     };\n                     match res {\n                         Ok(n) => i64::try_from(n).unwrap(),\n-                        // FIXME: set errno to appropriate value\n-                        Err(_) => -1,\n+                        Err(e) => {\n+                            this.set_last_error_from_io_error(e)?;\n+                            -1\n+                        }\n                     }\n                 } else {\n                     this.write(fd, buf, count)?"}]}