{"sha": "540c3f94d71879f413a151bc8c83c20c10b386dc", "node_id": "C_kwDOAAsO6NoAKDU0MGMzZjk0ZDcxODc5ZjQxM2ExNTFiYzhjODNjMjBjMTBiMzg2ZGM", "commit": {"author": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-11-04T05:16:16Z"}, "committer": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-11-04T05:17:03Z"}, "message": "UPDATE - accept dyn error and make Box<dyn error> conform to IntoDiagnosticArg", "tree": {"sha": "8cec8329bb002dc69b0f3420586ab72930c20f50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cec8329bb002dc69b0f3420586ab72930c20f50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/540c3f94d71879f413a151bc8c83c20c10b386dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/540c3f94d71879f413a151bc8c83c20c10b386dc", "html_url": "https://github.com/rust-lang/rust/commit/540c3f94d71879f413a151bc8c83c20c10b386dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/540c3f94d71879f413a151bc8c83c20c10b386dc/comments", "author": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28491a7b36a717e42081fc6ee788433feccb72e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/28491a7b36a717e42081fc6ee788433feccb72e6", "html_url": "https://github.com/rust-lang/rust/commit/28491a7b36a717e42081fc6ee788433feccb72e6"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "18789d00fd3a43592ead105593149437f5d204bc", "filename": "compiler/rustc_codegen_ssa/src/back/archive.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/540c3f94d71879f413a151bc8c83c20c10b386dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540c3f94d71879f413a151bc8c83c20c10b386dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs?ref=540c3f94d71879f413a151bc8c83c20c10b386dc", "patch": "@@ -35,30 +35,29 @@ pub trait ArchiveBuilderBuilder {\n         outdir: &Path,\n         bundled_lib_file_names: &FxHashSet<Symbol>,\n     ) -> Result<(), ExtractBundledLibsError<'_>> {\n-        let archive_map =\n-            unsafe {\n-                Mmap::map(File::open(rlib).map_err(|e| ExtractBundledLibsError::OpenFile {\n-                    rlib,\n-                    error: e.to_string(),\n-                })?)\n-                .map_err(|e| ExtractBundledLibsError::MmapFile { rlib, error: e.to_string() })?\n-            };\n+        let archive_map = unsafe {\n+            Mmap::map(\n+                File::open(rlib)\n+                    .map_err(|e| ExtractBundledLibsError::OpenFile { rlib, error: Box::new(e) })?,\n+            )\n+            .map_err(|e| ExtractBundledLibsError::MmapFile { rlib, error: Box::new(e) })?\n+        };\n         let archive = ArchiveFile::parse(&*archive_map)\n-            .map_err(|e| ExtractBundledLibsError::ParseArchive { rlib, error: e.to_string() })?;\n+            .map_err(|e| ExtractBundledLibsError::ParseArchive { rlib, error: Box::new(e) })?;\n \n         for entry in archive.members() {\n             let entry = entry\n-                .map_err(|e| ExtractBundledLibsError::ReadEntry { rlib, error: e.to_string() })?;\n-            let data = entry.data(&*archive_map).map_err(|e| {\n-                ExtractBundledLibsError::ArchiveMember { rlib, error: e.to_string() }\n-            })?;\n+                .map_err(|e| ExtractBundledLibsError::ReadEntry { rlib, error: Box::new(e) })?;\n+            let data = entry\n+                .data(&*archive_map)\n+                .map_err(|e| ExtractBundledLibsError::ArchiveMember { rlib, error: Box::new(e) })?;\n             let name = std::str::from_utf8(entry.name())\n-                .map_err(|e| ExtractBundledLibsError::ConvertName { rlib, error: e.to_string() })?;\n+                .map_err(|e| ExtractBundledLibsError::ConvertName { rlib, error: Box::new(e) })?;\n             if !bundled_lib_file_names.contains(&Symbol::intern(name)) {\n                 continue; // We need to extract only native libraries.\n             }\n             std::fs::write(&outdir.join(&name), data)\n-                .map_err(|e| ExtractBundledLibsError::WriteFile { rlib, error: e.to_string() })?;\n+                .map_err(|e| ExtractBundledLibsError::WriteFile { rlib, error: Box::new(e) })?;\n         }\n         Ok(())\n     }"}, {"sha": "36c94462b0b3e50cd338e8ef3a2420231b289297", "filename": "compiler/rustc_codegen_ssa/src/errors.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/540c3f94d71879f413a151bc8c83c20c10b386dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540c3f94d71879f413a151bc8c83c20c10b386dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ferrors.rs?ref=540c3f94d71879f413a151bc8c83c20c10b386dc", "patch": "@@ -488,25 +488,25 @@ pub struct OptionGccOnly;\n #[derive(Diagnostic)]\n pub enum ExtractBundledLibsError<'a> {\n     #[diag(codegen_ssa_extract_bundled_libs_open_file)]\n-    OpenFile { rlib: &'a Path, error: String },\n+    OpenFile { rlib: &'a Path, error: Box<dyn std::error::Error> },\n \n     #[diag(codegen_ssa_extract_bundled_libs_mmap_file)]\n-    MmapFile { rlib: &'a Path, error: String },\n+    MmapFile { rlib: &'a Path, error: Box<dyn std::error::Error> },\n \n     #[diag(codegen_ssa_extract_bundled_libs_parse_archive)]\n-    ParseArchive { rlib: &'a Path, error: String },\n+    ParseArchive { rlib: &'a Path, error: Box<dyn std::error::Error> },\n \n     #[diag(codegen_ssa_extract_bundled_libs_read_entry)]\n-    ReadEntry { rlib: &'a Path, error: String },\n+    ReadEntry { rlib: &'a Path, error: Box<dyn std::error::Error> },\n \n     #[diag(codegen_ssa_extract_bundled_libs_archive_member)]\n-    ArchiveMember { rlib: &'a Path, error: String },\n+    ArchiveMember { rlib: &'a Path, error: Box<dyn std::error::Error> },\n \n     #[diag(codegen_ssa_extract_bundled_libs_convert_name)]\n-    ConvertName { rlib: &'a Path, error: String },\n+    ConvertName { rlib: &'a Path, error: Box<dyn std::error::Error> },\n \n     #[diag(codegen_ssa_extract_bundled_libs_write_file)]\n-    WriteFile { rlib: &'a Path, error: String },\n+    WriteFile { rlib: &'a Path, error: Box<dyn std::error::Error> },\n }\n \n #[derive(Diagnostic)]"}, {"sha": "83a3211c63b88893e4d5dcf3302d73ab23190e43", "filename": "compiler/rustc_errors/src/diagnostic_impls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/540c3f94d71879f413a151bc8c83c20c10b386dc/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540c3f94d71879f413a151bc8c83c20c10b386dc/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs?ref=540c3f94d71879f413a151bc8c83c20c10b386dc", "patch": "@@ -59,6 +59,7 @@ into_diagnostic_arg_using_display!(\n     i128,\n     u128,\n     std::io::Error,\n+    std::boxed::Box<dyn std::error::Error>,\n     std::num::NonZeroU32,\n     hir::Target,\n     Edition,"}]}