{"sha": "76baa5f0864f7aedb5b0ec918f1ad465886904cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2YmFhNWYwODY0ZjdhZWRiNWIwZWM5MThmMWFkNDY1ODg2OTA0Y2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-06T10:01:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-06T10:01:57Z"}, "message": "auto merge of #14668 : aochagavia/rust/pr3, r=alexcrichton\n\nCloses https://github.com/mozilla/rust/issues/14577\r\nCloses https://github.com/mozilla/rust/issues/14639", "tree": {"sha": "99bfd5fcb511fbb11944fcec1f311b26036bd047", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99bfd5fcb511fbb11944fcec1f311b26036bd047"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76baa5f0864f7aedb5b0ec918f1ad465886904cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76baa5f0864f7aedb5b0ec918f1ad465886904cb", "html_url": "https://github.com/rust-lang/rust/commit/76baa5f0864f7aedb5b0ec918f1ad465886904cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76baa5f0864f7aedb5b0ec918f1ad465886904cb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "732e057815e3faea4b257b47d31a8005ad1694f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/732e057815e3faea4b257b47d31a8005ad1694f2", "html_url": "https://github.com/rust-lang/rust/commit/732e057815e3faea4b257b47d31a8005ad1694f2"}, {"sha": "75891274c461c8e097d8c0042df053dd01d3b43e", "url": "https://api.github.com/repos/rust-lang/rust/commits/75891274c461c8e097d8c0042df053dd01d3b43e", "html_url": "https://github.com/rust-lang/rust/commit/75891274c461c8e097d8c0042df053dd01d3b43e"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "aa80a131811c2277e217611f33ef6d049bfc1024", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/76baa5f0864f7aedb5b0ec918f1ad465886904cb/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76baa5f0864f7aedb5b0ec918f1ad465886904cb/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=76baa5f0864f7aedb5b0ec918f1ad465886904cb", "patch": "@@ -782,11 +782,11 @@ impl<T> Vec<T> {\n         self.as_mut_slice().sort_by(compare)\n     }\n \n-    /// Returns a slice of `self` between `start` and `end`.\n+    /// Returns a slice of self spanning the interval [`start`, `end`).\n     ///\n     /// # Failure\n     ///\n-    /// Fails when `start` or `end` point outside the bounds of `self`, or when\n+    /// Fails when the slice (or part of it) is outside the bounds of self, or when\n     /// `start` > `end`.\n     ///\n     /// # Example"}, {"sha": "0257911e8c0860b68b5a3db284991f731e109201", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/76baa5f0864f7aedb5b0ec918f1ad465886904cb/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76baa5f0864f7aedb5b0ec918f1ad465886904cb/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=76baa5f0864f7aedb5b0ec918f1ad465886904cb", "patch": "@@ -366,9 +366,9 @@ impl<T> Container for ~[T] {\n /// Extension methods for vectors\n pub trait ImmutableVector<'a, T> {\n     /**\n-     * Returns a slice of self between `start` and `end`.\n+     * Returns a slice of self spanning the interval [`start`, `end`).\n      *\n-     * Fails when `start` or `end` point outside the bounds of self,\n+     * Fails when the slice (or part of it) is outside the bounds of self,\n      * or when `start` > `end`.\n      */\n     fn slice(&self, start: uint, end: uint) -> &'a [T];"}, {"sha": "67501c9795d18fda7fdc10eb46075db760a507a0", "filename": "src/libnum/bigint.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/76baa5f0864f7aedb5b0ec918f1ad465886904cb/src%2Flibnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76baa5f0864f7aedb5b0ec918f1ad465886904cb/src%2Flibnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Fbigint.rs?ref=76baa5f0864f7aedb5b0ec918f1ad465886904cb", "patch": "@@ -653,6 +653,8 @@ impl FromStrRadix for BigUint {\n \n impl BigUint {\n     /// Creates and initializes a `BigUint`.\n+    ///\n+    /// The digits are be in base 2^32.\n     #[inline]\n     pub fn new(v: Vec<BigDigit>) -> BigUint {\n         // omit trailing zeros\n@@ -665,6 +667,8 @@ impl BigUint {\n     }\n \n     /// Creates and initializes a `BigUint`.\n+    ///\n+    /// The digits are be in base 2^32.\n     #[inline]\n     pub fn from_slice(slice: &[BigDigit]) -> BigUint {\n         return BigUint::new(Vec::from_slice(slice));\n@@ -1315,12 +1319,16 @@ impl<R: Rng> RandBigInt for R {\n \n impl BigInt {\n     /// Creates and initializes a BigInt.\n+    ///\n+    /// The digits are be in base 2^32.\n     #[inline]\n     pub fn new(sign: Sign, v: Vec<BigDigit>) -> BigInt {\n         BigInt::from_biguint(sign, BigUint::new(v))\n     }\n \n     /// Creates and initializes a `BigInt`.\n+    ///\n+    /// The digits are be in base 2^32.\n     #[inline]\n     pub fn from_biguint(sign: Sign, data: BigUint) -> BigInt {\n         if sign == Zero || data.is_zero() {"}]}