{"sha": "c20824323cf7ed6ad95cb8d7b780a7934927a753", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMDgyNDMyM2NmN2VkNmFkOTVjYjhkN2I3ODBhNzkzNDkyN2E3NTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-27T09:21:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-27T09:21:34Z"}, "message": "Auto merge of #51835 - tmccombs:stable-int-to-from-bytes, r=joshtriplett\n\nStabilize to_bytes and from_bytes for integers.\n\nFixes #49792", "tree": {"sha": "28b97ee0c9f2f8ff3ebf6fb05830adb748acc8dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28b97ee0c9f2f8ff3ebf6fb05830adb748acc8dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c20824323cf7ed6ad95cb8d7b780a7934927a753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c20824323cf7ed6ad95cb8d7b780a7934927a753", "html_url": "https://github.com/rust-lang/rust/commit/c20824323cf7ed6ad95cb8d7b780a7934927a753", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c20824323cf7ed6ad95cb8d7b780a7934927a753/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "971f7d34d4e8afa663b3972b58528a069a25b436", "url": "https://api.github.com/repos/rust-lang/rust/commits/971f7d34d4e8afa663b3972b58528a069a25b436", "html_url": "https://github.com/rust-lang/rust/commit/971f7d34d4e8afa663b3972b58528a069a25b436"}, {"sha": "c8f9b84b393915a48253e3edc862c15a9b7152a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8f9b84b393915a48253e3edc862c15a9b7152a7", "html_url": "https://github.com/rust-lang/rust/commit/c8f9b84b393915a48253e3edc862c15a9b7152a7"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "7e2dd304d7f5a23b2fa2644d949eaf2711c9c1d5", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c20824323cf7ed6ad95cb8d7b780a7934927a753/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c20824323cf7ed6ad95cb8d7b780a7934927a753/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=c20824323cf7ed6ad95cb8d7b780a7934927a753", "patch": "@@ -1996,12 +1996,10 @@ $EndFeature, \"\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_to_from_bytes)]\n-        ///\n         /// let bytes = i32::min_value().to_be().to_bytes();\n         /// assert_eq!(bytes, [0x80, 0, 0, 0]);\n         /// ```\n-        #[unstable(feature = \"int_to_from_bytes\", issue = \"49792\")]\n+        #[stable(feature = \"int_to_from_bytes\", since = \"1.29.0\")]\n         #[inline]\n         pub fn to_bytes(self) -> [u8; mem::size_of::<Self>()] {\n             unsafe { mem::transmute(self) }\n@@ -2018,12 +2016,10 @@ $EndFeature, \"\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_to_from_bytes)]\n-        ///\n         /// let int = i32::from_be(i32::from_bytes([0x80, 0, 0, 0]));\n         /// assert_eq!(int, i32::min_value());\n         /// ```\n-        #[unstable(feature = \"int_to_from_bytes\", issue = \"49792\")]\n+        #[stable(feature = \"int_to_from_bytes\", since = \"1.29.0\")]\n         #[inline]\n         pub fn from_bytes(bytes: [u8; mem::size_of::<Self>()]) -> Self {\n             unsafe { mem::transmute(bytes) }\n@@ -3702,12 +3698,10 @@ $EndFeature, \"\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_to_from_bytes)]\n-        ///\n         /// let bytes = 0x1234_5678_u32.to_be().to_bytes();\n         /// assert_eq!(bytes, [0x12, 0x34, 0x56, 0x78]);\n         /// ```\n-        #[unstable(feature = \"int_to_from_bytes\", issue = \"49792\")]\n+        #[stable(feature = \"int_to_from_bytes\", since = \"1.29.0\")]\n         #[inline]\n         pub fn to_bytes(self) -> [u8; mem::size_of::<Self>()] {\n             unsafe { mem::transmute(self) }\n@@ -3724,12 +3718,10 @@ $EndFeature, \"\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_to_from_bytes)]\n-        ///\n         /// let int = u32::from_be(u32::from_bytes([0x12, 0x34, 0x56, 0x78]));\n         /// assert_eq!(int, 0x1234_5678_u32);\n         /// ```\n-        #[unstable(feature = \"int_to_from_bytes\", issue = \"49792\")]\n+        #[stable(feature = \"int_to_from_bytes\", since = \"1.29.0\")]\n         #[inline]\n         pub fn from_bytes(bytes: [u8; mem::size_of::<Self>()]) -> Self {\n             unsafe { mem::transmute(bytes) }"}]}