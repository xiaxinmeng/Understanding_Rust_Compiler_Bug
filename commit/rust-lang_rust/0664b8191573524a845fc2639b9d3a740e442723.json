{"sha": "0664b8191573524a845fc2639b9d3a740e442723", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NjRiODE5MTU3MzUyNGE4NDVmYzI2MzliOWQzYTc0MGU0NDI3MjM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-04-05T23:16:55Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-04-05T23:16:55Z"}, "message": "Use smaller span for suggestion restricting lifetime", "tree": {"sha": "fd07cb5ec30b832bbd6cba1bfcf69bf8e6d4ab42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd07cb5ec30b832bbd6cba1bfcf69bf8e6d4ab42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0664b8191573524a845fc2639b9d3a740e442723", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0664b8191573524a845fc2639b9d3a740e442723", "html_url": "https://github.com/rust-lang/rust/commit/0664b8191573524a845fc2639b9d3a740e442723", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0664b8191573524a845fc2639b9d3a740e442723/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6387b09153939b2a104cd63148598a5f458de2c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6387b09153939b2a104cd63148598a5f458de2c2", "html_url": "https://github.com/rust-lang/rust/commit/6387b09153939b2a104cd63148598a5f458de2c2"}], "stats": {"total": 45, "additions": 17, "deletions": 28}, "files": [{"sha": "7645182ad1fb33a39809bd08cef6ea354343e83e", "filename": "src/librustc_mir/borrow_check/diagnostics/explain_borrow.rs", "status": "modified", "additions": 16, "deletions": 27, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0664b8191573524a845fc2639b9d3a740e442723/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0664b8191573524a845fc2639b9d3a740e442723/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs?ref=0664b8191573524a845fc2639b9d3a740e442723", "patch": "@@ -208,45 +208,34 @@ impl BorrowExplanation {\n                     );\n                 };\n \n-                self.add_lifetime_bound_suggestion_to_diagnostic(\n-                    tcx,\n-                    err,\n-                    &category,\n-                    span,\n-                    region_name,\n-                );\n+                self.add_lifetime_bound_suggestion_to_diagnostic(err, &category, span, region_name);\n             }\n             _ => {}\n         }\n     }\n-    pub(in crate::borrow_check) fn add_lifetime_bound_suggestion_to_diagnostic<'tcx>(\n+    pub(in crate::borrow_check) fn add_lifetime_bound_suggestion_to_diagnostic(\n         &self,\n-        tcx: TyCtxt<'tcx>,\n         err: &mut DiagnosticBuilder<'_>,\n         category: &ConstraintCategory,\n         span: Span,\n         region_name: &RegionName,\n     ) {\n         if let ConstraintCategory::OpaqueType = category {\n-            if let Ok(snippet) = tcx.sess.source_map().span_to_snippet(span) {\n-                let suggestable_name = if region_name.was_named() {\n-                    region_name.to_string()\n-                } else {\n-                    \"'_\".to_string()\n-                };\n+            let suggestable_name =\n+                if region_name.was_named() { region_name.to_string() } else { \"'_\".to_string() };\n \n-                err.span_suggestion(\n-                    span,\n-                    &format!(\n-                        \"you can add a bound to the {}to make it last less than \\\n-                             `'static` and match `{}`\",\n-                        category.description(),\n-                        region_name,\n-                    ),\n-                    format!(\"{} + {}\", snippet, suggestable_name),\n-                    Applicability::Unspecified,\n-                );\n-            }\n+            let msg = format!(\n+                \"you can add a bound to the {}to make it last less than `'static` and match `{}`\",\n+                category.description(),\n+                region_name,\n+            );\n+\n+            err.span_suggestion_verbose(\n+                span.shrink_to_hi(),\n+                &msg,\n+                format!(\" + {}\", suggestable_name),\n+                Applicability::Unspecified,\n+            );\n         }\n     }\n }"}, {"sha": "9cff4bcd8b579df62d664c6f3b3f9cdc17d0833c", "filename": "src/test/ui/impl-trait/does-not-live-long-enough.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0664b8191573524a845fc2639b9d3a740e442723/src%2Ftest%2Fui%2Fimpl-trait%2Fdoes-not-live-long-enough.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0664b8191573524a845fc2639b9d3a740e442723/src%2Ftest%2Fui%2Fimpl-trait%2Fdoes-not-live-long-enough.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fdoes-not-live-long-enough.stderr?ref=0664b8191573524a845fc2639b9d3a740e442723", "patch": "@@ -14,7 +14,7 @@ LL |     }\n help: you can add a bound to the opaque type to make it last less than `'static` and match `'a`\n    |\n LL |     fn started_with<'a>(&'a self, prefix: &'a str) -> impl Iterator<Item=&'a str> + 'a {\n-   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                                                                   ^^^^\n \n error: aborting due to previous error\n "}]}