{"sha": "97bdd31b0eab51d0a51b8746123f910cd868dff3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YmRkMzFiMGVhYjUxZDBhNTFiODc0NjEyM2Y5MTBjZDg2OGRmZjM=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-02-04T17:13:26Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-02-12T19:20:55Z"}, "message": "Add \"soft deprecation\" notice to old MIN/MAX docs", "tree": {"sha": "483f99f3e815a8791e381fff9b0ab4fc061b8b27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/483f99f3e815a8791e381fff9b0ab4fc061b8b27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97bdd31b0eab51d0a51b8746123f910cd868dff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97bdd31b0eab51d0a51b8746123f910cd868dff3", "html_url": "https://github.com/rust-lang/rust/commit/97bdd31b0eab51d0a51b8746123f910cd868dff3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97bdd31b0eab51d0a51b8746123f910cd868dff3/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35298349c3efd75cd8050f9f23e4bf1409d96118", "url": "https://api.github.com/repos/rust-lang/rust/commits/35298349c3efd75cd8050f9f23e4bf1409d96118", "html_url": "https://github.com/rust-lang/rust/commit/35298349c3efd75cd8050f9f23e4bf1409d96118"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "d3d6db5a7687b2022e01b72932e96b1137e34694", "filename": "src/libcore/num/int_macros.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/97bdd31b0eab51d0a51b8746123f910cd868dff3/src%2Flibcore%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97bdd31b0eab51d0a51b8746123f910cd868dff3/src%2Flibcore%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fint_macros.rs?ref=97bdd31b0eab51d0a51b8746123f910cd868dff3", "patch": "@@ -3,11 +3,18 @@\n macro_rules! int_module {\n     ($T:ident) => (int_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")]););\n     ($T:ident, #[$attr:meta]) => (\n-        /// The smallest value that can be represented by this integer type.\n-        #[$attr]\n-        pub const MIN: $T = $T::min_value();\n-        /// The largest value that can be represented by this integer type.\n-        #[$attr]\n-        pub const MAX: $T = $T::max_value();\n+        doc_comment! {\n+            concat!(\"The smallest value that can be represented by this integer type.\n+Use [`\", stringify!($T), \"::MIN\", \"`](../../std/primitive.\", stringify!($T), \".html#associatedconstant.MIN) instead.\"),\n+            #[$attr]\n+            pub const MIN: $T = $T::min_value();\n+        }\n+\n+        doc_comment! {\n+            concat!(\"The largest value that can be represented by this integer type.\n+Use [`\", stringify!($T), \"::MAX\", \"`](../../std/primitive.\", stringify!($T), \".html#associatedconstant.MAX) instead.\"),\n+            #[$attr]\n+            pub const MAX: $T = $T::max_value();\n+        }\n     )\n }"}, {"sha": "ff16a1f38d8a77ced04393845f676ebfe31294f5", "filename": "src/libcore/num/uint_macros.rs", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/97bdd31b0eab51d0a51b8746123f910cd868dff3/src%2Flibcore%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97bdd31b0eab51d0a51b8746123f910cd868dff3/src%2Flibcore%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fuint_macros.rs?ref=97bdd31b0eab51d0a51b8746123f910cd868dff3", "patch": "@@ -1,13 +1,35 @@\n #![doc(hidden)]\n \n+macro_rules! doc_comment {\n+    ($x:expr, $($tt:tt)*) => {\n+        #[doc = $x]\n+        $($tt)*\n+    };\n+}\n+\n macro_rules! uint_module {\n     ($T:ident) => (uint_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")]););\n     ($T:ident, #[$attr:meta]) => (\n-        /// The smallest value that can be represented by this integer type.\n-        #[$attr]\n-        pub const MIN: $T = $T::min_value();\n-        /// The largest value that can be represented by this integer type.\n-        #[$attr]\n-        pub const MAX: $T = $T::max_value();\n+        doc_comment! {\n+            concat!(\"**This method is soft-deprecated.**\n+\n+            Although using it won\u2019t cause compilation warning,\n+            new code should use [`\", stringify!($T), \"::MIN\", \"`] instead.\n+\n+            The smallest value that can be represented by this integer type.\"),\n+            #[$attr]\n+            pub const MIN: $T = $T::min_value();\n+        }\n+\n+        doc_comment! {\n+            concat!(\"**This method is soft-deprecated.**\n+\n+            Although using it won\u2019t cause compilation warning,\n+            new code should use [`\", stringify!($T), \"::MAX\", \"`] instead.\n+\n+            The largest value that can be represented by this integer type.\"),\n+            #[$attr]\n+            pub const MAX: $T = $T::max_value();\n+        }\n     )\n }"}]}