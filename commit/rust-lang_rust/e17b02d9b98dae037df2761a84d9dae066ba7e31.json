{"sha": "e17b02d9b98dae037df2761a84d9dae066ba7e31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxN2IwMmQ5Yjk4ZGFlMDM3ZGYyNzYxYTg0ZDlkYWUwNjZiYTdlMzE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-21T16:05:00Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-23T13:10:24Z"}, "message": "Use walkdir crate\n\nIt's more efficient than the fs::read_dir API", "tree": {"sha": "cb5caf24e3c55a029e3b4a251dfe8db1509d60c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb5caf24e3c55a029e3b4a251dfe8db1509d60c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e17b02d9b98dae037df2761a84d9dae066ba7e31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e17b02d9b98dae037df2761a84d9dae066ba7e31", "html_url": "https://github.com/rust-lang/rust/commit/e17b02d9b98dae037df2761a84d9dae066ba7e31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e17b02d9b98dae037df2761a84d9dae066ba7e31/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f1da8e5337900b9d94b55ec65618f0223608f6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f1da8e5337900b9d94b55ec65618f0223608f6c", "html_url": "https://github.com/rust-lang/rust/commit/5f1da8e5337900b9d94b55ec65618f0223608f6c"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "657831be894f89861b2c509a9d0ad04e78d6465a", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e17b02d9b98dae037df2761a84d9dae066ba7e31/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e17b02d9b98dae037df2761a84d9dae066ba7e31/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e17b02d9b98dae037df2761a84d9dae066ba7e31", "patch": "@@ -3805,6 +3805,7 @@ dependencies = [\n  \"regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.92 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]"}, {"sha": "43cae31f33f1faf76f29f762861446f67f4ea422", "filename": "src/tools/tidy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e17b02d9b98dae037df2761a84d9dae066ba7e31/src%2Ftools%2Ftidy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e17b02d9b98dae037df2761a84d9dae066ba7e31/src%2Ftools%2Ftidy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2FCargo.toml?ref=e17b02d9b98dae037df2761a84d9dae066ba7e31", "patch": "@@ -9,3 +9,4 @@ regex = \"1\"\n serde = { version = \"1.0.8\", features = [\"derive\"] }\n serde_json = \"1.0.2\"\n lazy_static = \"1\"\n+walkdir = \"2\""}, {"sha": "b9d89ad6b756e1c981c97d1ee7fa12c24a138f52", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e17b02d9b98dae037df2761a84d9dae066ba7e31/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e17b02d9b98dae037df2761a84d9dae066ba7e31/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=e17b02d9b98dae037df2761a84d9dae066ba7e31", "patch": "@@ -3,7 +3,7 @@\n //! This library contains the tidy lints and exposes it\n //! to be used by tools.\n \n-use std::fs;\n+use walkdir::WalkDir;\n \n use std::path::Path;\n \n@@ -72,18 +72,14 @@ fn walk_many(paths: &[&Path], skip: &mut dyn FnMut(&Path) -> bool, f: &mut dyn F\n }\n \n fn walk(path: &Path, skip: &mut dyn FnMut(&Path) -> bool, f: &mut dyn FnMut(&Path)) {\n-    if let Ok(dir) = fs::read_dir(path) {\n-        for entry in dir {\n-            let entry = t!(entry);\n-            let kind = t!(entry.file_type());\n-            let path = entry.path();\n-            if kind.is_dir() {\n-                if !skip(&path) {\n-                    walk(&path, skip, f);\n-                }\n-            } else {\n-                f(&path);\n+    let walker = WalkDir::new(path).into_iter()\n+        .filter_entry(|e| !skip(e.path()));\n+    for entry in walker {\n+        if let Ok(entry) = entry {\n+            if entry.file_type().is_dir() {\n+                continue;\n             }\n+            f(&entry.path());\n         }\n     }\n }"}]}