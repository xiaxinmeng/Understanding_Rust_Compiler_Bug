{"sha": "3cb5925660f06b5e0b5bed5675edde9597a4c4ee", "node_id": "C_kwDOAAsO6NoAKDNjYjU5MjU2NjBmMDZiNWUwYjViZWQ1Njc1ZWRkZTk1OTdhNGM0ZWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-04-01T04:59:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-01T04:59:40Z"}, "message": "Rollup merge of #95032 - m-ou-se:std-features, r=yaahc\n\nClean up, categorize and sort unstable features in std.", "tree": {"sha": "137b4a825d10ff9fdcc69eaaf1d0afff74e72af1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/137b4a825d10ff9fdcc69eaaf1d0afff74e72af1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cb5925660f06b5e0b5bed5675edde9597a4c4ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiRoa9CRBK7hj4Ov3rIwAAyRoIADOQD7gWNlSkVT4UanXaXkni\n9lg/cGvF4JsycRLbocllCEuZXN81WI0SgovEzpTOZSlO4Gip7COZz7AY0xOZarpG\n51cbbpu48xCILdBCUr2NcarV9tWbhDmqgHnSM4AHuLUuw5Ag/HLrihNYd04vD0TD\nOnMxaJnsCAjI8+MUUt7lg4ahH1+n7ELCaFISv9kDvDcuR/N44L3TjgHHKT21X9xH\nS0UJK8vIk/jKXro682jHTN99lNhhbGSIIw1qGCMS5f1r/HnjD92PJQQqRRIkxyq8\nKFsaUN0k58/K/UnJEZ3tt4Gsr5W2AY8bt2DTVfirYByhMIj3xq2w5c5Fj5+awls=\n=32ss\n-----END PGP SIGNATURE-----\n", "payload": "tree 137b4a825d10ff9fdcc69eaaf1d0afff74e72af1\nparent 0677edc86e342f333d4828b0ee1ef395a4e70fe5\nparent 79220247cd28bf84110976bf07e99f7b4aa9ec2b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1648789180 +0200\ncommitter GitHub <noreply@github.com> 1648789180 +0200\n\nRollup merge of #95032 - m-ou-se:std-features, r=yaahc\n\nClean up, categorize and sort unstable features in std.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb5925660f06b5e0b5bed5675edde9597a4c4ee", "html_url": "https://github.com/rust-lang/rust/commit/3cb5925660f06b5e0b5bed5675edde9597a4c4ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cb5925660f06b5e0b5bed5675edde9597a4c4ee/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0677edc86e342f333d4828b0ee1ef395a4e70fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0677edc86e342f333d4828b0ee1ef395a4e70fe5", "html_url": "https://github.com/rust-lang/rust/commit/0677edc86e342f333d4828b0ee1ef395a4e70fe5"}, {"sha": "79220247cd28bf84110976bf07e99f7b4aa9ec2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/79220247cd28bf84110976bf07e99f7b4aa9ec2b", "html_url": "https://github.com/rust-lang/rust/commit/79220247cd28bf84110976bf07e99f7b4aa9ec2b"}], "stats": {"total": 137, "additions": 74, "deletions": 63}, "files": [{"sha": "819ec10a4b4b65c0caa682989a5054543d7b1f0d", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 74, "deletions": 63, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/3cb5925660f06b5e0b5bed5675edde9597a4c4ee/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb5925660f06b5e0b5bed5675edde9597a4c4ee/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=3cb5925660f06b5e0b5bed5675edde9597a4c4ee", "patch": "@@ -218,111 +218,122 @@\n     feature(slice_index_methods, coerce_unsized, sgx_platform)\n )]\n #![deny(rustc::existing_doc_keyword)]\n-// std is implemented with unstable features, many of which are internal\n-// compiler details that will never be stable\n-// NB: the following list is sorted to minimize merge conflicts.\n+//\n+// Language features:\n #![feature(alloc_error_handler)]\n-#![feature(alloc_layout_extra)]\n-#![feature(allocator_api)]\n #![feature(allocator_internals)]\n #![feature(allow_internal_unsafe)]\n #![feature(allow_internal_unstable)]\n-#![feature(array_error_internals)]\n-#![feature(assert_matches)]\n #![feature(associated_type_bounds)]\n-#![feature(async_iterator)]\n-#![feature(atomic_mut_ptr)]\n-#![feature(bench_black_box)]\n #![feature(box_syntax)]\n #![feature(c_unwind)]\n-#![feature(c_variadic)]\n-#![feature(cfg_accessible)]\n-#![feature(cfg_eval)]\n #![feature(cfg_target_thread_local)]\n-#![feature(char_error_internals)]\n-#![feature(char_internals)]\n-#![feature(concat_bytes)]\n #![feature(concat_idents)]\n #![cfg_attr(bootstrap, feature(const_fn_fn_ptr_basics))]\n #![cfg_attr(bootstrap, feature(const_fn_trait_bound))]\n-#![feature(const_format_args)]\n-#![feature(const_io_structs)]\n-#![feature(const_ip)]\n-#![feature(const_ipv4)]\n-#![feature(const_ipv6)]\n #![feature(const_mut_refs)]\n-#![feature(const_option)]\n-#![feature(const_socketaddr)]\n #![feature(const_trait_impl)]\n-#![feature(c_size_t)]\n-#![feature(core_ffi_c)]\n-#![feature(core_intrinsics)]\n-#![feature(core_panic)]\n-#![feature(custom_test_frameworks)]\n #![feature(decl_macro)]\n+#![cfg_attr(not(bootstrap), feature(deprecated_suggestion))]\n #![feature(doc_cfg)]\n #![feature(doc_cfg_hide)]\n-#![feature(rustdoc_internals)]\n-#![cfg_attr(not(bootstrap), feature(deprecated_suggestion))]\n #![feature(doc_masked)]\n #![feature(doc_notable_trait)]\n #![feature(dropck_eyepatch)]\n-#![feature(duration_checked_float)]\n-#![feature(duration_constants)]\n-#![feature(edition_panic)]\n-#![feature(exact_size_is_empty)]\n #![feature(exhaustive_patterns)]\n-#![feature(extend_one)]\n-#![feature(float_minimum_maximum)]\n-#![feature(format_args_nl)]\n-#![feature(strict_provenance)]\n-#![feature(get_mut_unchecked)]\n-#![feature(hashmap_internals)]\n-#![feature(int_error_internals)]\n #![feature(intra_doc_pointers)]\n #![feature(lang_items)]\n #![feature(linkage)]\n-#![feature(log_syntax)]\n-#![feature(map_try_insert)]\n-#![feature(maybe_uninit_slice)]\n-#![feature(maybe_uninit_write_slice)]\n #![feature(min_specialization)]\n-#![feature(mixed_integer_ops)]\n #![feature(must_not_suspend)]\n #![feature(needs_panic_runtime)]\n #![feature(negative_impls)]\n #![feature(never_type)]\n-#![feature(new_uninit)]\n #![feature(nll)]\n+#![feature(platform_intrinsics)]\n+#![feature(prelude_import)]\n+#![feature(rustc_attrs)]\n+#![feature(rustdoc_internals)]\n+#![feature(staged_api)]\n+#![feature(thread_local)]\n+#![feature(try_blocks)]\n+//\n+// Library features (core):\n+#![feature(array_error_internals)]\n+#![feature(atomic_mut_ptr)]\n+#![feature(char_error_internals)]\n+#![feature(char_internals)]\n+#![feature(core_intrinsics)]\n+#![feature(duration_checked_float)]\n+#![feature(duration_constants)]\n+#![feature(exact_size_is_empty)]\n+#![feature(extend_one)]\n+#![feature(float_minimum_maximum)]\n+#![feature(hashmap_internals)]\n+#![feature(int_error_internals)]\n+#![feature(maybe_uninit_slice)]\n+#![feature(maybe_uninit_write_slice)]\n+#![feature(mixed_integer_ops)]\n #![feature(nonnull_slice_from_raw_parts)]\n-#![feature(once_cell)]\n+#![feature(panic_can_unwind)]\n #![feature(panic_info_message)]\n #![feature(panic_internals)]\n-#![feature(panic_can_unwind)]\n-#![feature(panic_unwind)]\n-#![feature(platform_intrinsics)]\n #![feature(portable_simd)]\n-#![feature(prelude_import)]\n #![feature(ptr_as_uninit)]\n #![feature(raw_os_nonzero)]\n-#![feature(rustc_attrs)]\n-#![feature(saturating_int_impl)]\n #![feature(slice_internals)]\n #![feature(slice_ptr_get)]\n-#![feature(staged_api)]\n #![feature(std_internals)]\n-#![feature(stdsimd)]\n #![feature(str_internals)]\n-#![feature(test)]\n-#![feature(thread_local)]\n-#![feature(thread_local_internals)]\n-#![feature(toowned_clone_into)]\n+#![feature(strict_provenance)]\n #![feature(total_cmp)]\n-#![feature(trace_macros)]\n-#![feature(try_blocks)]\n+//\n+// Library features (alloc):\n+#![feature(alloc_layout_extra)]\n+#![feature(allocator_api)]\n+#![feature(get_mut_unchecked)]\n+#![feature(map_try_insert)]\n+#![feature(new_uninit)]\n+#![feature(toowned_clone_into)]\n #![feature(try_reserve_kind)]\n #![feature(vec_into_raw_parts)]\n-// NB: the above list is sorted to minimize merge conflicts.\n+//\n+// Library features (unwind):\n+#![feature(panic_unwind)]\n+//\n+// Only for re-exporting:\n+#![feature(assert_matches)]\n+#![feature(async_iterator)]\n+#![feature(c_size_t)]\n+#![feature(c_variadic)]\n+#![feature(cfg_accessible)]\n+#![feature(cfg_eval)]\n+#![feature(concat_bytes)]\n+#![feature(const_format_args)]\n+#![feature(core_ffi_c)]\n+#![feature(core_panic)]\n+#![feature(custom_test_frameworks)]\n+#![feature(edition_panic)]\n+#![feature(format_args_nl)]\n+#![feature(log_syntax)]\n+#![feature(once_cell)]\n+#![feature(saturating_int_impl)]\n+#![feature(stdsimd)]\n+#![feature(test)]\n+#![feature(trace_macros)]\n+//\n+// Only used in tests/benchmarks:\n+#![feature(bench_black_box)]\n+//\n+// Only for const-ness:\n+#![feature(const_io_structs)]\n+#![feature(const_ip)]\n+#![feature(const_ipv4)]\n+#![feature(const_ipv6)]\n+#![feature(const_option)]\n+#![feature(const_socketaddr)]\n+#![feature(thread_local_internals)]\n+//\n #![default_lib_allocator]\n \n // Explicitly import the prelude. The compiler uses this same unstable attribute"}]}