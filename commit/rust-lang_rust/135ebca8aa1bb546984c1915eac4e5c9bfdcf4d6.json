{"sha": "135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNWViY2E4YWExYmI1NDY5ODRjMTkxNWVhYzRlNWM5YmZkY2Y0ZDY=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-09-25T17:16:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-26T22:55:42Z"}, "message": "Refactoring ReaderUtil trait, combining it with the traitless impl on Reader.", "tree": {"sha": "dccfa711696284ff93b4de25850ab7706684f0fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dccfa711696284ff93b4de25850ab7706684f0fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "html_url": "https://github.com/rust-lang/rust/commit/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f41cf208b7809bcb5cd12e81970802a52b2c265e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f41cf208b7809bcb5cd12e81970802a52b2c265e", "html_url": "https://github.com/rust-lang/rust/commit/f41cf208b7809bcb5cd12e81970802a52b2c265e"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "97039800fb671535b81ec35f9c617cfca72773d8", "filename": "src/libcore/io.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "patch": "@@ -48,6 +48,17 @@ trait Reader {\n trait ReaderUtil {\n     fn read_bytes(len: uint) -> ~[u8];\n     fn read_line() -> ~str;\n+\n+    fn read_chars(n: uint) -> ~[char];\n+    fn read_char() -> char;\n+    fn read_c_str() -> ~str;\n+    fn read_le_uint(size: uint) -> uint;\n+    fn read_le_int(size: uint) -> int;\n+    fn read_be_uint(size: uint) -> uint;\n+    fn read_whole_stream() -> ~[u8];\n+    fn each_byte(it: fn(int) -> bool);\n+    fn each_char(it: fn(char) -> bool);\n+    fn each_line(it: fn((&str)) -> bool);\n }\n \n impl<T: Reader> T : ReaderUtil {\n@@ -69,12 +80,10 @@ impl<T: Reader> T : ReaderUtil {\n         }\n         str::from_bytes(buf)\n     }\n-}\n \n-impl Reader {\n     fn read_chars(n: uint) -> ~[char] {\n         // returns the (consumed offset, n_req), appends characters to &chars\n-        fn chars_from_bytes(buf: &~[u8], chars: &mut ~[char])\n+        fn chars_from_bytes<T: Reader>(buf: &~[u8], chars: &mut ~[char])\n             -> (uint, uint) {\n             let mut i = 0;\n             let buf_len = buf.len();\n@@ -120,7 +129,7 @@ impl Reader {\n                 break;\n             }\n             vec::push_all(buf, data);\n-            let (offset, nbreq) = chars_from_bytes(&buf, &mut chars);\n+            let (offset, nbreq) = chars_from_bytes::<T>(&buf, &mut chars);\n             let ncreq = n - chars.len();\n             // again we either know we need a certain number of bytes\n             // to complete a character, or we make sure we don't"}, {"sha": "00e09f6604d0a4611dc2e57a3cd3ac6052a8b074", "filename": "src/libstd/json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "patch": "@@ -8,7 +8,7 @@\n \n use core::cmp::{Eq, Ord};\n use result::{Result, Ok, Err};\n-use io::WriterUtil;\n+use io::{WriterUtil, ReaderUtil};\n use map::HashMap;\n use map::Map;\n use sort::Sort;"}, {"sha": "890a7a0b468619424253b8c075cdaedc11b9c5f8", "filename": "src/libstd/time.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "patch": "@@ -3,7 +3,7 @@\n \n use core::cmp::Eq;\n use libc::{c_char, c_int, c_long, size_t, time_t};\n-use io::Reader;\n+use io::{Reader, ReaderUtil};\n use result::{Result, Ok, Err};\n \n export"}, {"sha": "ddc70a1f13ebf29bdd683962da68eb7e461d1d7f", "filename": "src/libsyntax/parse/comments.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Flibsyntax%2Fparse%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Flibsyntax%2Fparse%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcomments.rs?ref=135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "patch": "@@ -1,4 +1,5 @@\n use io::println;//XXXXXXXXxxx\n+use io::ReaderUtil;\n use util::interner;\n use lexer::{string_reader, bump, is_eof, nextch,\n                is_whitespace, get_str_from, reader};"}, {"sha": "6ea5bb280236f506f8eea59559e0909dc6d3c4fd", "filename": "src/rustc/driver/rustc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Frustc%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6/src%2Frustc%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Frustc.rs?ref=135ebca8aa1bb546984c1915eac4e5c9bfdcf4d6", "patch": "@@ -12,6 +12,7 @@ use core::*;\n \n // -*- rust -*-\n use result::{Ok, Err};\n+use io::ReaderUtil;\n use std::getopts;\n use std::map::HashMap;\n use getopts::{opt_present};"}]}