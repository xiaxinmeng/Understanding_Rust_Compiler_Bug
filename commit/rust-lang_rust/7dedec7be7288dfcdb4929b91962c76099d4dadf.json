{"sha": "7dedec7be7288dfcdb4929b91962c76099d4dadf", "node_id": "C_kwDOAAsO6NoAKDdkZWRlYzdiZTcyODhkZmNkYjQ5MjliOTE5NjJjNzYwOTlkNGRhZGY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-29T18:35:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-29T18:35:04Z"}, "message": "Rollup merge of #98652 - ojeda:warning-free-no_global_oom_handling, r=joshtriplett\n\n`alloc`: clean and ensure `no_global_oom_handling`  builds are warning-free\n\nRust 1.62.0 introduced a couple new `unused_imports` warnings\nin `no_global_oom_handling` builds, making a total of 5 warnings.\n\n<details>\n\n```txt\nwarning: unused import: `Unsize`\n --> library/alloc/src/boxed/thin.rs:6:33\n  |\n6 | use core::marker::{PhantomData, Unsize};\n  |                                 ^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `from_fn`\n  --> library/alloc/src/string.rs:51:18\n   |\n51 | use core::iter::{from_fn, FusedIterator};\n   |                  ^^^^^^^\n\nwarning: unused import: `core::ops::Deref`\n  --> library/alloc/src/vec/into_iter.rs:12:5\n   |\n12 | use core::ops::Deref;\n   |     ^^^^^^^^^^^^^^^^\n\nwarning: associated function `shrink` is never used\n   --> library/alloc/src/raw_vec.rs:424:8\n    |\n424 |     fn shrink(&mut self, cap: usize) -> Result<(), TryReserveError> {\n    |        ^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: associated function `forget_remaining_elements` is never used\n   --> library/alloc/src/vec/into_iter.rs:126:19\n    |\n126 |     pub(crate) fn forget_remaining_elements(&mut self) {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n```\n\n</details>\n\nThis PR cleans them and ensures no new ones are introduced\nso that projects compiling `alloc` without infallible allocations\ndo not see them (and may want to enable `-Dwarnings`).\n\nThe couple `dead_code` ones may be reverted when some fallible\nallocation support starts using them.", "tree": {"sha": "747d77b9a1520bb8f47547c2b4ec1343e078a3c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/747d77b9a1520bb8f47547c2b4ec1343e078a3c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dedec7be7288dfcdb4929b91962c76099d4dadf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivJtZCRBK7hj4Ov3rIwAAJBsIAGF7KVAkqJ4sApW0rVf6I+eR\nplEdSwgocc2s+SI0ZnP1xjdG6CZNk+PECbdTMPYN66GBOGGH0kEeBrfbfUvafzAl\nWEpjIq3HeKgp1LMin1DZCDxsuVYK3EQEMTs3yZnKkOgeXVir9fXUe3S3v6MARSNA\nu866kf4rt1TqlD6OZOG2SZI4d86bt70ahO5sOz/SoxzekHroufxq/Br8hGHHMFjX\nC3mVPXTFNUgm6zE4KoiZvxIbI2NodkP27i2PifNScymFscT9hETvgoPexcn/5p/z\n0ZUkWxEITjoDdSPB7d/IvQjCLL38KRP+ND+3Rj8n11n0ZgYz111a3GVHZZY831Y=\n=1eF8\n-----END PGP SIGNATURE-----\n", "payload": "tree 747d77b9a1520bb8f47547c2b4ec1343e078a3c0\nparent 2c702c2f17a12fe0c9e6bc224788dacc96bf261e\nparent 60dc54e29e2589ad21413db8f81518174b2fe604\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656527704 +0200\ncommitter GitHub <noreply@github.com> 1656527704 +0200\n\nRollup merge of #98652 - ojeda:warning-free-no_global_oom_handling, r=joshtriplett\n\n`alloc`: clean and ensure `no_global_oom_handling`  builds are warning-free\n\nRust 1.62.0 introduced a couple new `unused_imports` warnings\nin `no_global_oom_handling` builds, making a total of 5 warnings.\n\n<details>\n\n```txt\nwarning: unused import: `Unsize`\n --> library/alloc/src/boxed/thin.rs:6:33\n  |\n6 | use core::marker::{PhantomData, Unsize};\n  |                                 ^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `from_fn`\n  --> library/alloc/src/string.rs:51:18\n   |\n51 | use core::iter::{from_fn, FusedIterator};\n   |                  ^^^^^^^\n\nwarning: unused import: `core::ops::Deref`\n  --> library/alloc/src/vec/into_iter.rs:12:5\n   |\n12 | use core::ops::Deref;\n   |     ^^^^^^^^^^^^^^^^\n\nwarning: associated function `shrink` is never used\n   --> library/alloc/src/raw_vec.rs:424:8\n    |\n424 |     fn shrink(&mut self, cap: usize) -> Result<(), TryReserveError> {\n    |        ^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: associated function `forget_remaining_elements` is never used\n   --> library/alloc/src/vec/into_iter.rs:126:19\n    |\n126 |     pub(crate) fn forget_remaining_elements(&mut self) {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n```\n\n</details>\n\nThis PR cleans them and ensures no new ones are introduced\nso that projects compiling `alloc` without infallible allocations\ndo not see them (and may want to enable `-Dwarnings`).\n\nThe couple `dead_code` ones may be reverted when some fallible\nallocation support starts using them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dedec7be7288dfcdb4929b91962c76099d4dadf", "html_url": "https://github.com/rust-lang/rust/commit/7dedec7be7288dfcdb4929b91962c76099d4dadf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dedec7be7288dfcdb4929b91962c76099d4dadf/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c702c2f17a12fe0c9e6bc224788dacc96bf261e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c702c2f17a12fe0c9e6bc224788dacc96bf261e", "html_url": "https://github.com/rust-lang/rust/commit/2c702c2f17a12fe0c9e6bc224788dacc96bf261e"}, {"sha": "60dc54e29e2589ad21413db8f81518174b2fe604", "url": "https://api.github.com/repos/rust-lang/rust/commits/60dc54e29e2589ad21413db8f81518174b2fe604", "html_url": "https://github.com/rust-lang/rust/commit/60dc54e29e2589ad21413db8f81518174b2fe604"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "09308d4d0906d3e1abcd7d5403e728477f52906f", "filename": "library/alloc/src/boxed/thin.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7dedec7be7288dfcdb4929b91962c76099d4dadf/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dedec7be7288dfcdb4929b91962c76099d4dadf/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs?ref=7dedec7be7288dfcdb4929b91962c76099d4dadf", "patch": "@@ -3,7 +3,9 @@\n // by matthieu-m\n use crate::alloc::{self, Layout, LayoutError};\n use core::fmt::{self, Debug, Display, Formatter};\n-use core::marker::{PhantomData, Unsize};\n+use core::marker::PhantomData;\n+#[cfg(not(no_global_oom_handling))]\n+use core::marker::Unsize;\n use core::mem;\n use core::ops::{Deref, DerefMut};\n use core::ptr::Pointee;"}, {"sha": "b0f4529abdfa5eb0f48727edb02952895c91d9b2", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7dedec7be7288dfcdb4929b91962c76099d4dadf/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dedec7be7288dfcdb4929b91962c76099d4dadf/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=7dedec7be7288dfcdb4929b91962c76099d4dadf", "patch": "@@ -421,6 +421,7 @@ impl<T, A: Allocator> RawVec<T, A> {\n         Ok(())\n     }\n \n+    #[cfg(not(no_global_oom_handling))]\n     fn shrink(&mut self, cap: usize) -> Result<(), TryReserveError> {\n         assert!(cap <= self.capacity(), \"Tried to shrink to a larger capacity\");\n "}, {"sha": "b1513e5e0f31c50db71835ad98ebc723e571a961", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7dedec7be7288dfcdb4929b91962c76099d4dadf/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dedec7be7288dfcdb4929b91962c76099d4dadf/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=7dedec7be7288dfcdb4929b91962c76099d4dadf", "patch": "@@ -46,9 +46,9 @@\n use core::char::{decode_utf16, REPLACEMENT_CHARACTER};\n use core::fmt;\n use core::hash;\n+use core::iter::FusedIterator;\n #[cfg(not(no_global_oom_handling))]\n-use core::iter::FromIterator;\n-use core::iter::{from_fn, FusedIterator};\n+use core::iter::{from_fn, FromIterator};\n #[cfg(not(no_global_oom_handling))]\n use core::ops::Add;\n #[cfg(not(no_global_oom_handling))]"}, {"sha": "28979457b7fd389049ee21ef83308be1264949c5", "filename": "library/alloc/src/vec/into_iter.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dedec7be7288dfcdb4929b91962c76099d4dadf/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dedec7be7288dfcdb4929b91962c76099d4dadf/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs?ref=7dedec7be7288dfcdb4929b91962c76099d4dadf", "patch": "@@ -9,6 +9,7 @@ use core::iter::{\n };\n use core::marker::PhantomData;\n use core::mem::{self, ManuallyDrop};\n+#[cfg(not(no_global_oom_handling))]\n use core::ops::Deref;\n use core::ptr::{self, NonNull};\n use core::slice::{self};\n@@ -123,6 +124,7 @@ impl<T, A: Allocator> IntoIter<T, A> {\n     }\n \n     /// Forgets to Drop the remaining elements while still allowing the backing allocation to be freed.\n+    #[cfg(not(no_global_oom_handling))]\n     pub(crate) fn forget_remaining_elements(&mut self) {\n         self.ptr = self.end;\n     }"}, {"sha": "eb6ad9bd1a7dab999a56517be4dccf1e6763bea7", "filename": "src/test/run-make-fulldeps/alloc-no-oom-handling/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dedec7be7288dfcdb4929b91962c76099d4dadf/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-oom-handling%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/7dedec7be7288dfcdb4929b91962c76099d4dadf/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-oom-handling%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-oom-handling%2FMakefile?ref=7dedec7be7288dfcdb4929b91962c76099d4dadf", "patch": "@@ -1,4 +1,4 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) --edition=2021 --crate-type=rlib ../../../../library/alloc/src/lib.rs --cfg no_global_oom_handling\n+\t$(RUSTC) --edition=2021 -Dwarnings --crate-type=rlib ../../../../library/alloc/src/lib.rs --cfg no_global_oom_handling"}]}