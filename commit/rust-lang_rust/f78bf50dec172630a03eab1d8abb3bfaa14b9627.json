{"sha": "f78bf50dec172630a03eab1d8abb3bfaa14b9627", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3OGJmNTBkZWMxNzI2MzBhMDNlYWIxZDhhYmIzYmZhYTE0Yjk2Mjc=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-30T18:18:19Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-31T12:55:37Z"}, "message": "Remove span argument from mk_attr_{inner,outer}\n\nAlways the same as the passed MetaItem", "tree": {"sha": "f92c3532b023ec8f5a28712a88a188dee2cfce02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f92c3532b023ec8f5a28712a88a188dee2cfce02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f78bf50dec172630a03eab1d8abb3bfaa14b9627", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f78bf50dec172630a03eab1d8abb3bfaa14b9627", "html_url": "https://github.com/rust-lang/rust/commit/f78bf50dec172630a03eab1d8abb3bfaa14b9627", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f78bf50dec172630a03eab1d8abb3bfaa14b9627/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2c5065b0434f0986e45bdf5a5d0028972e8104c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c5065b0434f0986e45bdf5a5d0028972e8104c", "html_url": "https://github.com/rust-lang/rust/commit/b2c5065b0434f0986e45bdf5a5d0028972e8104c"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "ff35c3aa3a5eb21e93d20258b912f0f0df0b2e9f", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=f78bf50dec172630a03eab1d8abb3bfaa14b9627", "patch": "@@ -5168,7 +5168,7 @@ impl<'a> LoweringContext<'a> {\n                         let uc_nested = attr::mk_nested_word_item(uc_ident);\n                         attr::mk_list_item(e.span, allow_ident, vec![uc_nested])\n                     };\n-                    attr::mk_attr_outer(e.span, allow)\n+                    attr::mk_attr_outer(allow)\n                 };\n                 let attrs = vec![attr];\n "}, {"sha": "3e56136b171083ad03ac51727090bf8cf9e1a74b", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=f78bf50dec172630a03eab1d8abb3bfaa14b9627", "patch": "@@ -379,26 +379,26 @@ pub fn mk_attr_id() -> AttrId {\n }\n \n /// Returns an inner attribute with the given value and span.\n-pub fn mk_attr_inner(span: Span, item: MetaItem) -> Attribute {\n+pub fn mk_attr_inner(item: MetaItem) -> Attribute {\n     Attribute {\n         id: mk_attr_id(),\n         style: ast::AttrStyle::Inner,\n         path: item.path,\n         tokens: item.node.tokens(item.span),\n         is_sugared_doc: false,\n-        span,\n+        span: item.span,\n     }\n }\n \n /// Returns an outer attribute with the given value and span.\n-pub fn mk_attr_outer(span: Span, item: MetaItem) -> Attribute {\n+pub fn mk_attr_outer(item: MetaItem) -> Attribute {\n     Attribute {\n         id: mk_attr_id(),\n         style: ast::AttrStyle::Outer,\n         path: item.path,\n         tokens: item.node.tokens(item.span),\n         is_sugared_doc: false,\n-        span,\n+        span: item.span,\n     }\n }\n "}, {"sha": "0791dc94e34b2a3af83083449b4a4f4f92b872d1", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=f78bf50dec172630a03eab1d8abb3bfaa14b9627", "patch": "@@ -1135,7 +1135,7 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n     }\n \n     fn attribute(&self, mi: ast::MetaItem) -> ast::Attribute {\n-        attr::mk_attr_outer(mi.span, mi)\n+        attr::mk_attr_outer(mi)\n     }\n \n     fn meta_word(&self, sp: Span, w: ast::Name) -> ast::MetaItem {"}, {"sha": "372f6fef5e3bd09d9a26975be810814dacb71f02", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=f78bf50dec172630a03eab1d8abb3bfaa14b9627", "patch": "@@ -123,12 +123,12 @@ pub fn print_crate<'a>(cm: &'a SourceMap,\n         let pi_nested = attr::mk_nested_word_item(ast::Ident::with_empty_ctxt(sym::prelude_import));\n         let list = attr::mk_list_item(\n             DUMMY_SP, ast::Ident::with_empty_ctxt(sym::feature), vec![pi_nested]);\n-        let fake_attr = attr::mk_attr_inner(DUMMY_SP, list);\n+        let fake_attr = attr::mk_attr_inner(list);\n         s.print_attribute(&fake_attr);\n \n         // #![no_std]\n         let no_std_meta = attr::mk_word_item(ast::Ident::with_empty_ctxt(sym::no_std));\n-        let fake_attr = attr::mk_attr_inner(DUMMY_SP, no_std_meta);\n+        let fake_attr = attr::mk_attr_inner(no_std_meta);\n         s.print_attribute(&fake_attr);\n     }\n "}, {"sha": "e8b20e22526d79866ff8d7a62c8a1ecaedd1dee2", "filename": "src/libsyntax_ext/standard_library_imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax_ext%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax_ext%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fstandard_library_imports.rs?ref=f78bf50dec172630a03eab1d8abb3bfaa14b9627", "patch": "@@ -41,7 +41,6 @@ pub fn inject(\n         };\n         krate.module.items.insert(0, P(ast::Item {\n             attrs: vec![attr::mk_attr_outer(\n-                DUMMY_SP,\n                 attr::mk_word_item(ast::Ident::with_empty_ctxt(sym::macro_use))\n             )],\n             vis: dummy_spanned(ast::VisibilityKind::Inherited),"}, {"sha": "8cf043f7e767e396ccb023f401695dc143b8c9c8", "filename": "src/libsyntax_ext/test_harness.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax_ext%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78bf50dec172630a03eab1d8abb3bfaa14b9627/src%2Flibsyntax_ext%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest_harness.rs?ref=f78bf50dec172630a03eab1d8abb3bfaa14b9627", "patch": "@@ -160,8 +160,7 @@ impl MutVisitor for EntryPointCleaner {\n                     let dc_nested = attr::mk_nested_word_item(Ident::from_str(\"dead_code\"));\n                     let allow_dead_code_item = attr::mk_list_item(DUMMY_SP, allow_ident,\n                                                                   vec![dc_nested]);\n-                    let allow_dead_code = attr::mk_attr_outer(DUMMY_SP,\n-                                                              allow_dead_code_item);\n+                    let allow_dead_code = attr::mk_attr_outer(allow_dead_code_item);\n \n                     ast::Item {\n                         id,"}]}