{"sha": "a7f81e3cdcdd65077893b170378179ec89eab347", "node_id": "C_kwDOAAsO6NoAKGE3ZjgxZTNjZGNkZDY1MDc3ODkzYjE3MDM3ODE3OWVjODllYWIzNDc", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-01-27T10:15:05Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-01-27T10:15:05Z"}, "message": "Record method resolution for index expressions", "tree": {"sha": "ae5246d445230df936e4d187b86ed64138c7f07f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae5246d445230df936e4d187b86ed64138c7f07f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7f81e3cdcdd65077893b170378179ec89eab347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f81e3cdcdd65077893b170378179ec89eab347", "html_url": "https://github.com/rust-lang/rust/commit/a7f81e3cdcdd65077893b170378179ec89eab347", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7f81e3cdcdd65077893b170378179ec89eab347/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54da0bfbf0501a4954481c1de75ff33a6c12e140", "url": "https://api.github.com/repos/rust-lang/rust/commits/54da0bfbf0501a4954481c1de75ff33a6c12e140", "html_url": "https://github.com/rust-lang/rust/commit/54da0bfbf0501a4954481c1de75ff33a6c12e140"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "1f8fa4a20f9b5dca77fbb0ee79024a2fc8b968ef", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7f81e3cdcdd65077893b170378179ec89eab347/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f81e3cdcdd65077893b170378179ec89eab347/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=a7f81e3cdcdd65077893b170378179ec89eab347", "patch": "@@ -17,7 +17,7 @@ use hir_def::{\n     resolver::resolver_for_expr,\n     ConstParamId, FieldId, ItemContainerId, Lookup,\n };\n-use hir_expand::name::Name;\n+use hir_expand::name::{name, Name};\n use stdx::always;\n use syntax::ast::RangeOp;\n \n@@ -741,7 +741,6 @@ impl<'a> InferenceContext<'a> {\n                 }\n             }\n             Expr::Index { base, index } => {\n-                // FIXME: note down method resolution for the `index`/`index_mut` function\n                 let base_ty = self.infer_expr_inner(*base, &Expectation::none());\n                 let index_ty = self.infer_expr(*index, &Expectation::none());\n \n@@ -758,6 +757,15 @@ impl<'a> InferenceContext<'a> {\n                             adj.apply(&mut self.table, base_ty)\n                         });\n                     self.write_expr_adj(*base, adj);\n+                    if let Some(func) =\n+                        self.db.trait_data(index_trait).method_by_name(&name!(index))\n+                    {\n+                        let substs = TyBuilder::subst_for_def(self.db, index_trait, None)\n+                            .push(self_ty.clone())\n+                            .push(index_ty.clone())\n+                            .build();\n+                        self.write_method_resolution(tgt_expr, func, substs.clone());\n+                    }\n                     self.resolve_associated_type_with_params(\n                         self_ty,\n                         self.resolve_ops_index_output(),"}, {"sha": "015085bde45637d2de570eb37dec4569a95caca1", "filename": "crates/hir-ty/src/tests/traits.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7f81e3cdcdd65077893b170378179ec89eab347/crates%2Fhir-ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f81e3cdcdd65077893b170378179ec89eab347/crates%2Fhir-ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Ftraits.rs?ref=a7f81e3cdcdd65077893b170378179ec89eab347", "patch": "@@ -2295,10 +2295,8 @@ fn unselected_projection_in_trait_env_no_cycle() {\n     // this is not a cycle\n     check_types(\n         r#\"\n-//- /main.rs\n-trait Index {\n-    type Output;\n-}\n+//- minicore: index\n+use core::ops::Index;\n \n type Key<S: UnificationStoreBase> = <S as UnificationStoreBase>::Key;\n "}]}