{"sha": "bbf6eec2816d8ce34d2ae51b40e4bb9425b8f65e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZjZlZWMyODE2ZDhjZTM0ZDJhZTUxYjQwZTRiYjk0MjViOGY2NWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-28T16:17:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-28T16:17:23Z"}, "message": "Rollup merge of #68989 - XAMPPRocky:relnotes-1.42.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.42.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/blob/relnotes-1.42.0/RELEASES.md)\n\nr? @Mark-Simulacrum\ncc @rust-lang/release", "tree": {"sha": "9655f90a56ed098c71d31bdb4e24c5f5b1adb125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9655f90a56ed098c71d31bdb4e24c5f5b1adb125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbf6eec2816d8ce34d2ae51b40e4bb9425b8f65e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWT0TCRBK7hj4Ov3rIwAAdHIIAGygZpY8iTEv2aWxq2MyhKM2\nhQHHzK/zK2Fw24WE6gyHvqPtMyDivTDQmcUTLYgdyZrd5QGAxucY6kCKTqKB4AeN\nQ4hhBEvgtVleCczQl02sOHrQa5RmKHqrkF6iELNLwkVoz8huyyeBqyr3bSMppiDu\n1AroSTKwzlMN5hzMsEvnaDWFkQ52mxgEcyXARDUxjB7MG7Ileza/IDkHKZlC1myy\nGnRxQA8ZrJk0CMajxEH3QHFiKk5g5GDIaaooQtPlUZZ3AFTr2Ee2i9xua97utCgb\n3BZli52nihvJB7bK5Is0xDzcUf3eJsC/WOnyk/PWf/7XnvseD0tuHmg/4Lv75a0=\n=0KXO\n-----END PGP SIGNATURE-----\n", "payload": "tree 9655f90a56ed098c71d31bdb4e24c5f5b1adb125\nparent e2223c94bf433fc38234d1303e88cbaf14755863\nparent 526280a853f31bbc3120334dfe46e19ea4dbaa25\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1582906643 +0100\ncommitter GitHub <noreply@github.com> 1582906643 +0100\n\nRollup merge of #68989 - XAMPPRocky:relnotes-1.42.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.42.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/blob/relnotes-1.42.0/RELEASES.md)\n\nr? @Mark-Simulacrum\ncc @rust-lang/release\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf6eec2816d8ce34d2ae51b40e4bb9425b8f65e", "html_url": "https://github.com/rust-lang/rust/commit/bbf6eec2816d8ce34d2ae51b40e4bb9425b8f65e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbf6eec2816d8ce34d2ae51b40e4bb9425b8f65e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2223c94bf433fc38234d1303e88cbaf14755863", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2223c94bf433fc38234d1303e88cbaf14755863", "html_url": "https://github.com/rust-lang/rust/commit/e2223c94bf433fc38234d1303e88cbaf14755863"}, {"sha": "526280a853f31bbc3120334dfe46e19ea4dbaa25", "url": "https://api.github.com/repos/rust-lang/rust/commits/526280a853f31bbc3120334dfe46e19ea4dbaa25", "html_url": "https://github.com/rust-lang/rust/commit/526280a853f31bbc3120334dfe46e19ea4dbaa25"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "7e18f1befddecb3afc8ebbd4f9549912baa15c49", "filename": "RELEASES.md", "status": "modified", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/bbf6eec2816d8ce34d2ae51b40e4bb9425b8f65e/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/bbf6eec2816d8ce34d2ae51b40e4bb9425b8f65e/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=bbf6eec2816d8ce34d2ae51b40e4bb9425b8f65e", "patch": "@@ -1,3 +1,100 @@\n+Version 1.42.0 (2020-03-12)\n+==========================\n+\n+Language\n+--------\n+- [You can now use the slice pattern syntax with subslices.][67712] e.g.\n+  ```rust\n+  fn foo(words: &[&str]) {\n+      match words {\n+          [\"Hello\", \"World\", \"!\", ..] => println!(\"Hello World!\"),\n+          [\"Foo\", \"Bar\", ..] => println!(\"Baz\"),\n+          rest => println!(\"{:?}\", rest),\n+      }\n+  }\n+  ```\n+- [You can now use `#[repr(transparent)]` on univariant `enum`s.][68122] Meaning\n+  that you can create an enum that has the exact layout and ABI of the type\n+  it contains.\n+- [There are some *syntax-only* changes:][67131]\n+   - `default` is syntactically allowed before items in `trait` definitions.\n+   - Items in `impl`s (i.e. `const`s, `type`s, and `fn`s) may syntactically\n+     leave out their bodies in favor of `;`.\n+   - Bounds on associated types in `impl`s are now syntactically allowed\n+     (e.g. `type Foo: Ord;`).\n+   - `...` (the C-variadic type) may occur syntactically directly as the type of\n+      any function parameter.\n+  \n+  These are still rejected *semantically*, so you will likely receive an error\n+  but these changes can be seen and parsed by procedural macros and\n+  conditional compilation.\n+\n+Compiler\n+--------\n+- [Added tier 2\\* support for `armv7a-none-eabi`.][68253]\n+- [Added tier 2 support for `riscv64gc-unknown-linux-gnu`.][68339]\n+- [`Option::{expect,unwrap}` and\n+   `Result::{expect, expect_err, unwrap, unwrap_err}` now produce panic messages\n+   pointing to the location where they were called, rather than\n+   `core`'s internals. ][67887]\n+\n+\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+information on Rust's tiered platform support.\n+\n+Libraries\n+---------\n+- [`iter::Empty<T>` now implements `Send` and `Sync` for any `T`.][68348]\n+- [`Pin::{map_unchecked, map_unchecked_mut}` no longer require the return type\n+   to implement `Sized`.][67935]\n+- [`io::Cursor` now derives `PartialEq` and `Eq`.][67233]\n+- [`Layout::new` is now `const`.][66254]\n+- [Added Standard Library support for `riscv64gc-unknown-linux-gnu`.][66899]\n+\n+\n+Stabilized APIs\n+---------------\n+- [`CondVar::wait_while`]\n+- [`CondVar::wait_timeout_while`]\n+- [`DebugMap::key`]\n+- [`DebugMap::value`]\n+- [`ManuallyDrop::take`]\n+- [`matches!`]\n+- [`ptr::slice_from_raw_parts_mut`]\n+- [`ptr::slice_from_raw_parts`]\n+\n+Cargo\n+-----\n+- [You no longer need to include `extern crate proc_macro;` to be able to\n+  `use proc_macro;` in the `2018` edition.][cargo/7700]\n+\n+Compatibility Notes\n+-------------------\n+- [`Error::description` has been deprecated, and its use will now produce a\n+  warning.][66919] It's recommended to use `Display`/`to_string` instead.\n+\n+[68253]: https://github.com/rust-lang/rust/pull/68253/\n+[68348]: https://github.com/rust-lang/rust/pull/68348/\n+[67935]: https://github.com/rust-lang/rust/pull/67935/\n+[68339]: https://github.com/rust-lang/rust/pull/68339/\n+[68122]: https://github.com/rust-lang/rust/pull/68122/\n+[67712]: https://github.com/rust-lang/rust/pull/67712/\n+[67887]: https://github.com/rust-lang/rust/pull/67887/\n+[67131]: https://github.com/rust-lang/rust/pull/67131/\n+[67233]: https://github.com/rust-lang/rust/pull/67233/\n+[66899]: https://github.com/rust-lang/rust/pull/66899/\n+[66919]: https://github.com/rust-lang/rust/pull/66919/\n+[66254]: https://github.com/rust-lang/rust/pull/66254/\n+[cargo/7700]: https://github.com/rust-lang/cargo/pull/7700\n+[`DebugMap::key`]: https://doc.rust-lang.org/stable/std/fmt/struct.DebugMap.html#method.key\n+[`DebugMap::value`]: https://doc.rust-lang.org/stable/std/fmt/struct.DebugMap.html#method.value\n+[`ManuallyDrop::take`]: https://doc.rust-lang.org/stable/std/mem/struct.ManuallyDrop.html#method.take\n+[`matches!`]: https://doc.rust-lang.org/stable/std/macro.matches.html\n+[`ptr::slice_from_raw_parts_mut`]: https://doc.rust-lang.org/stable/std/ptr/fn.slice_from_raw_parts_mut.html\n+[`ptr::slice_from_raw_parts`]: https://doc.rust-lang.org/stable/std/ptr/fn.slice_from_raw_parts.html\n+[`CondVar::wait_while`]: https://doc.rust-lang.org/stable/std/sync/struct.Condvar.html#method.wait_while\n+[`CondVar::wait_timeout_while`]: https://doc.rust-lang.org/stable/std/sync/struct.Condvar.html#method.wait_timeout_while\n+\n+\n Version 1.41.1 (2020-02-27)\n ===========================\n \n@@ -8,6 +105,7 @@ Version 1.41.1 (2020-02-27)\n [69225]: https://github.com/rust-lang/rust/issues/69225\n [69145]: https://github.com/rust-lang/rust/pull/69145\n \n+\n Version 1.41.0 (2020-01-30)\n ===========================\n "}]}