{"sha": "f17dbfc933eaef12d3ae29ca500675328eaeb08e", "node_id": "C_kwDOAAsO6NoAKGYxN2RiZmM5MzNlYWVmMTJkM2FlMjljYTUwMDY3NTMyOGVhZWIwOGU", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-28T12:51:15Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-28T12:51:15Z"}, "message": "Add rustdoc-clif wrapper", "tree": {"sha": "0ca3a2336c523451ed422bdead7c9f31989645e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ca3a2336c523451ed422bdead7c9f31989645e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f17dbfc933eaef12d3ae29ca500675328eaeb08e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f17dbfc933eaef12d3ae29ca500675328eaeb08e", "html_url": "https://github.com/rust-lang/rust/commit/f17dbfc933eaef12d3ae29ca500675328eaeb08e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f17dbfc933eaef12d3ae29ca500675328eaeb08e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc66ffecc85fa7ba089367fe7ad6c307cbea216", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc66ffecc85fa7ba089367fe7ad6c307cbea216", "html_url": "https://github.com/rust-lang/rust/commit/ddc66ffecc85fa7ba089367fe7ad6c307cbea216"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "ba606278df56d89797b5d602a98576647e198c08", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f17dbfc933eaef12d3ae29ca500675328eaeb08e/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17dbfc933eaef12d3ae29ca500675328eaeb08e/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=f17dbfc933eaef12d3ae29ca500675328eaeb08e", "patch": "@@ -35,7 +35,7 @@ pub(crate) fn build_sysroot(\n     try_hard_link(cg_clif_dylib_src, &cg_clif_dylib_path);\n \n     // Build and copy rustc and cargo wrappers\n-    for wrapper in [\"rustc-clif\", \"cargo-clif\"] {\n+    for wrapper in [\"rustc-clif\", \"rustdoc-clif\", \"cargo-clif\"] {\n         let wrapper_name = get_wrapper_file_name(wrapper, \"bin\");\n \n         let mut build_cargo_wrapper_cmd = Command::new(\"rustc\");"}, {"sha": "a19d72acfa83e037ac857e1719c3ca1a988895f9", "filename": "scripts/rustdoc-clif.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f17dbfc933eaef12d3ae29ca500675328eaeb08e/scripts%2Frustdoc-clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17dbfc933eaef12d3ae29ca500675328eaeb08e/scripts%2Frustdoc-clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Frustdoc-clif.rs?ref=f17dbfc933eaef12d3ae29ca500675328eaeb08e", "patch": "@@ -0,0 +1,36 @@\n+use std::env;\n+use std::ffi::OsString;\n+#[cfg(unix)]\n+use std::os::unix::process::CommandExt;\n+use std::path::PathBuf;\n+use std::process::Command;\n+\n+fn main() {\n+    let sysroot = PathBuf::from(env::current_exe().unwrap().parent().unwrap());\n+\n+    let cg_clif_dylib_path = sysroot.join(if cfg!(windows) { \"bin\" } else { \"lib\" }).join(\n+        env::consts::DLL_PREFIX.to_string() + \"rustc_codegen_cranelift\" + env::consts::DLL_SUFFIX,\n+    );\n+\n+    let mut args = std::env::args_os().skip(1).collect::<Vec<_>>();\n+    args.push(OsString::from(\"-Cpanic=abort\"));\n+    args.push(OsString::from(\"-Zpanic-abort-tests\"));\n+    let mut codegen_backend_arg = OsString::from(\"-Zcodegen-backend=\");\n+    codegen_backend_arg.push(cg_clif_dylib_path);\n+    args.push(codegen_backend_arg);\n+    if !args.contains(&OsString::from(\"--sysroot\")) {\n+        args.push(OsString::from(\"--sysroot\"));\n+        args.push(OsString::from(sysroot.to_str().unwrap()));\n+    }\n+\n+    // Ensure that the right toolchain is used\n+    env::set_var(\"RUSTUP_TOOLCHAIN\", env!(\"RUSTUP_TOOLCHAIN\"));\n+\n+    #[cfg(unix)]\n+    Command::new(\"rustdoc\").args(args).exec();\n+\n+    #[cfg(not(unix))]\n+    std::process::exit(\n+        Command::new(\"rustdoc\").args(args).spawn().unwrap().wait().unwrap().code().unwrap_or(1),\n+    );\n+}"}]}