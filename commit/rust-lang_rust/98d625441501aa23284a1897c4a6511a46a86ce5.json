{"sha": "98d625441501aa23284a1897c4a6511a46a86ce5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZDYyNTQ0MTUwMWFhMjMyODRhMTg5N2M0YTY1MTFhNDZhODZjZTU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-05-12T05:56:02Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-05-12T07:55:07Z"}, "message": "Change `WorkProduct::saved_files` to an `Option`.\n\nBecause there is at most one file.", "tree": {"sha": "0165f8ff5e09430995d68b77907031bfc2e00128", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0165f8ff5e09430995d68b77907031bfc2e00128"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98d625441501aa23284a1897c4a6511a46a86ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98d625441501aa23284a1897c4a6511a46a86ce5", "html_url": "https://github.com/rust-lang/rust/commit/98d625441501aa23284a1897c4a6511a46a86ce5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98d625441501aa23284a1897c4a6511a46a86ce5/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99cb9ccb9ca2067ad6e60508e3d52da77396b2f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/99cb9ccb9ca2067ad6e60508e3d52da77396b2f1", "html_url": "https://github.com/rust-lang/rust/commit/99cb9ccb9ca2067ad6e60508e3d52da77396b2f1"}], "stats": {"total": 78, "additions": 36, "deletions": 42}, "files": [{"sha": "46e17d66d61dbb309071a368ccd889c41777e3c9", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=98d625441501aa23284a1897c4a6511a46a86ce5", "patch": "@@ -21,7 +21,7 @@ use rustc_errors::{DiagnosticId, FatalError, Handler, Level};\n use rustc_fs_util::link_or_copy;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_incremental::{\n-    copy_cgu_workproducts_to_incr_comp_cache_dir, in_incr_comp_dir, in_incr_comp_dir_sess,\n+    copy_cgu_workproduct_to_incr_comp_cache_dir, in_incr_comp_dir, in_incr_comp_dir_sess,\n };\n use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n use rustc_middle::middle::cstore::EncodedMetadata;\n@@ -465,17 +465,13 @@ fn copy_all_cgu_workproducts_to_incr_comp_cache_dir(\n         return work_products;\n     }\n \n-    let _timer = sess.timer(\"incr_comp_copy_cgu_workproducts\");\n+    let _timer = sess.timer(\"copy_all_cgu_workproducts_to_incr_comp_cache_dir\");\n \n     for module in compiled_modules.modules.iter().filter(|m| m.kind == ModuleKind::Regular) {\n-        let mut files = vec![];\n-\n-        if let Some(ref path) = module.object {\n-            files.push(path.clone());\n-        }\n+        let path = module.object.as_ref().map(|path| path.clone());\n \n         if let Some((id, product)) =\n-            copy_cgu_workproducts_to_incr_comp_cache_dir(sess, &module.name, &files)\n+            copy_cgu_workproduct_to_incr_comp_cache_dir(sess, &module.name, &path)\n         {\n             work_products.insert(id, product);\n         }\n@@ -817,7 +813,7 @@ fn execute_copy_from_cache_work_item<B: ExtraBackendMethods>(\n ) -> Result<WorkItemResult<B>, FatalError> {\n     let incr_comp_session_dir = cgcx.incr_comp_session_dir.as_ref().unwrap();\n     let mut object = None;\n-    for saved_file in &module.source.saved_files {\n+    if let Some(saved_file) = module.source.saved_file {\n         let obj_out = cgcx.output_filenames.temp_path(OutputType::Object, Some(&module.name));\n         object = Some(obj_out.clone());\n         let source_file = in_incr_comp_dir(&incr_comp_session_dir, &saved_file);"}, {"sha": "7fd4b3c2554f36722a79198705dc89831a28da7e", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=98d625441501aa23284a1897c4a6511a46a86ce5", "patch": "@@ -15,7 +15,7 @@ pub mod assert_module_sources;\n mod persist;\n \n pub use assert_dep_graph::assert_dep_graph;\n-pub use persist::copy_cgu_workproducts_to_incr_comp_cache_dir;\n+pub use persist::copy_cgu_workproduct_to_incr_comp_cache_dir;\n pub use persist::delete_workproduct_files;\n pub use persist::dep_graph_tcx_init;\n pub use persist::finalize_session_directory;"}, {"sha": "966faa9639d72f28328db760e32295d5dc47c859", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=98d625441501aa23284a1897c4a6511a46a86ce5", "patch": "@@ -134,7 +134,7 @@ pub fn load_dep_graph(sess: &Session) -> DepGraphFuture {\n \n             for swp in work_products {\n                 let mut all_files_exist = true;\n-                for file_name in swp.work_product.saved_files.iter() {\n+                if let Some(ref file_name) = swp.work_product.saved_file {\n                     let path = in_incr_comp_dir_sess(sess, file_name);\n                     if !path.exists() {\n                         all_files_exist = false;"}, {"sha": "7bc3b47e15adfd3e597e5bf3c9f0448de9c65b7b", "filename": "src/librustc_incremental/persist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs?ref=98d625441501aa23284a1897c4a6511a46a86ce5", "patch": "@@ -21,5 +21,5 @@ pub use load::LoadResult;\n pub use load::{load_dep_graph, DepGraphFuture};\n pub use save::save_dep_graph;\n pub use save::save_work_product_index;\n-pub use work_product::copy_cgu_workproducts_to_incr_comp_cache_dir;\n+pub use work_product::copy_cgu_workproduct_to_incr_comp_cache_dir;\n pub use work_product::delete_workproduct_files;"}, {"sha": "c43d4ad4049c9431ee9400eea672a034c5586a90", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=98d625441501aa23284a1897c4a6511a46a86ce5", "patch": "@@ -74,9 +74,9 @@ pub fn save_work_product_index(\n         if !new_work_products.contains_key(id) {\n             work_product::delete_workproduct_files(sess, wp);\n             debug_assert!(\n-                wp.saved_files\n-                    .iter()\n-                    .all(|file_name| { !in_incr_comp_dir_sess(sess, file_name).exists() })\n+                wp.saved_file.as_ref().map_or(true, |file_name| {\n+                    !in_incr_comp_dir_sess(sess, &file_name).exists()\n+                })\n             );\n         }\n     }\n@@ -85,7 +85,7 @@ pub fn save_work_product_index(\n     debug_assert!({\n         new_work_products\n             .iter()\n-            .flat_map(|(_, wp)| wp.saved_files.iter())\n+            .flat_map(|(_, wp)| wp.saved_file.iter())\n             .map(|name| in_incr_comp_dir_sess(sess, name))\n             .all(|path| path.exists())\n     });"}, {"sha": "19d64bda56d6d66bc5a024971ed68d40d9339882", "filename": "src/librustc_incremental/persist/work_product.rs", "status": "modified", "additions": 22, "deletions": 24, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs?ref=98d625441501aa23284a1897c4a6511a46a86ce5", "patch": "@@ -7,43 +7,41 @@ use rustc_session::Session;\n use std::fs as std_fs;\n use std::path::PathBuf;\n \n-pub fn copy_cgu_workproducts_to_incr_comp_cache_dir(\n+pub fn copy_cgu_workproduct_to_incr_comp_cache_dir(\n     sess: &Session,\n     cgu_name: &str,\n-    files: &[PathBuf],\n+    path: &Option<PathBuf>,\n ) -> Option<(WorkProductId, WorkProduct)> {\n-    debug!(\"copy_cgu_workproducts_to_incr_comp_cache_dir({:?},{:?})\", cgu_name, files);\n+    debug!(\"copy_cgu_workproduct_to_incr_comp_cache_dir({:?},{:?})\", cgu_name, path);\n     sess.opts.incremental.as_ref()?;\n \n-    let saved_files = files\n-        .iter()\n-        .map(|path| {\n-            let file_name = format!(\"{}.o\", cgu_name);\n-            let path_in_incr_dir = in_incr_comp_dir_sess(sess, &file_name);\n-            match link_or_copy(path, &path_in_incr_dir) {\n-                Ok(_) => Some(file_name),\n-                Err(err) => {\n-                    sess.warn(&format!(\n-                        \"error copying object file `{}` \\\n-                                             to incremental directory as `{}`: {}\",\n-                        path.display(),\n-                        path_in_incr_dir.display(),\n-                        err\n-                    ));\n-                    None\n-                }\n+    let saved_file = if let Some(path) = path {\n+        let file_name = format!(\"{}.o\", cgu_name);\n+        let path_in_incr_dir = in_incr_comp_dir_sess(sess, &file_name);\n+        match link_or_copy(path, &path_in_incr_dir) {\n+            Ok(_) => Some(file_name),\n+            Err(err) => {\n+                sess.warn(&format!(\n+                    \"error copying object file `{}` to incremental directory as `{}`: {}\",\n+                    path.display(),\n+                    path_in_incr_dir.display(),\n+                    err\n+                ));\n+                return None;\n             }\n-        })\n-        .collect::<Option<Vec<_>>>()?;\n+        }\n+    } else {\n+        None\n+    };\n \n-    let work_product = WorkProduct { cgu_name: cgu_name.to_string(), saved_files };\n+    let work_product = WorkProduct { cgu_name: cgu_name.to_string(), saved_file };\n \n     let work_product_id = WorkProductId::from_cgu_name(cgu_name);\n     Some((work_product_id, work_product))\n }\n \n pub fn delete_workproduct_files(sess: &Session, work_product: &WorkProduct) {\n-    for file_name in &work_product.saved_files {\n+    if let Some(ref file_name) = work_product.saved_file {\n         let path = in_incr_comp_dir_sess(sess, file_name);\n         match std_fs::remove_file(&path) {\n             Ok(()) => {}"}, {"sha": "04a45090b722675d179f32c4edb4d5282449fc26", "filename": "src/librustc_query_system/dep_graph/graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_query_system%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98d625441501aa23284a1897c4a6511a46a86ce5/src%2Flibrustc_query_system%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fdep_graph%2Fgraph.rs?ref=98d625441501aa23284a1897c4a6511a46a86ce5", "patch": "@@ -860,8 +860,8 @@ impl<K: DepKind> DepGraph<K> {\n #[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n pub struct WorkProduct {\n     pub cgu_name: String,\n-    /// Saved files associated with this CGU.\n-    pub saved_files: Vec<String>,\n+    /// Saved file associated with this CGU.\n+    pub saved_file: Option<String>,\n }\n \n #[derive(Clone)]"}]}