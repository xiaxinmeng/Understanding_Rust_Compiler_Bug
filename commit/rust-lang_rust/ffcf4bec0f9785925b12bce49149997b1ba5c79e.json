{"sha": "ffcf4bec0f9785925b12bce49149997b1ba5c79e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmY2Y0YmVjMGY5Nzg1OTI1YjEyYmNlNDkxNDk5OTdiMWJhNWM3OWU=", "commit": {"author": {"name": "Heinz N. Gies", "email": "heinz@licenser.net", "date": "2019-10-21T20:55:01Z"}, "committer": {"name": "Heinz N. Gies", "email": "heinz@licenser.net", "date": "2019-11-07T16:10:18Z"}, "message": "Improve function checking", "tree": {"sha": "c4afcb480730ef2474a724fa90853f68b6e08d85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4afcb480730ef2474a724fa90853f68b6e08d85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffcf4bec0f9785925b12bce49149997b1ba5c79e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffcf4bec0f9785925b12bce49149997b1ba5c79e", "html_url": "https://github.com/rust-lang/rust/commit/ffcf4bec0f9785925b12bce49149997b1ba5c79e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffcf4bec0f9785925b12bce49149997b1ba5c79e/comments", "author": {"login": "Licenser", "id": 119093, "node_id": "MDQ6VXNlcjExOTA5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/119093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Licenser", "html_url": "https://github.com/Licenser", "followers_url": "https://api.github.com/users/Licenser/followers", "following_url": "https://api.github.com/users/Licenser/following{/other_user}", "gists_url": "https://api.github.com/users/Licenser/gists{/gist_id}", "starred_url": "https://api.github.com/users/Licenser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Licenser/subscriptions", "organizations_url": "https://api.github.com/users/Licenser/orgs", "repos_url": "https://api.github.com/users/Licenser/repos", "events_url": "https://api.github.com/users/Licenser/events{/privacy}", "received_events_url": "https://api.github.com/users/Licenser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Licenser", "id": 119093, "node_id": "MDQ6VXNlcjExOTA5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/119093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Licenser", "html_url": "https://github.com/Licenser", "followers_url": "https://api.github.com/users/Licenser/followers", "following_url": "https://api.github.com/users/Licenser/following{/other_user}", "gists_url": "https://api.github.com/users/Licenser/gists{/gist_id}", "starred_url": "https://api.github.com/users/Licenser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Licenser/subscriptions", "organizations_url": "https://api.github.com/users/Licenser/orgs", "repos_url": "https://api.github.com/users/Licenser/repos", "events_url": "https://api.github.com/users/Licenser/events{/privacy}", "received_events_url": "https://api.github.com/users/Licenser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9471669e4695921cd8b70c8edaad143d8e84f430", "url": "https://api.github.com/repos/rust-lang/rust/commits/9471669e4695921cd8b70c8edaad143d8e84f430", "html_url": "https://github.com/rust-lang/rust/commit/9471669e4695921cd8b70c8edaad143d8e84f430"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "23952efbc8d8f83779ab89f9beaa9ea239664193", "filename": "clippy_lints/src/exit.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ffcf4bec0f9785925b12bce49149997b1ba5c79e/clippy_lints%2Fsrc%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffcf4bec0f9785925b12bce49149997b1ba5c79e/clippy_lints%2Fsrc%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexit.rs?ref=ffcf4bec0f9785925b12bce49149997b1ba5c79e", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::{match_def_path, paths, qpath_res, span_lint};\n+use crate::utils::{is_entrypoint_fn, match_def_path, paths, qpath_res, span_lint};\n use if_chain::if_chain;\n use rustc::hir::{Expr, ExprKind, Item, ItemKind, Node};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n@@ -40,7 +40,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Exit {\n                         Some(Node::Item(Item{ident, kind: ItemKind::Fn(..), ..})) => {\n                             // If we found a function we check it's name if it is\n                             // `main` we emit a lint.\n-                            if ident.name.as_str() != \"main\" {\n+                            let def_id = cx.tcx.hir().local_def_id(parent);\n+                            if !is_entrypoint_fn(cx, def_id) {\n                                 span_lint(cx, EXIT, e.span, \"usage of `process::exit`\");\n                             }\n                             // We found any kind of function and can end our loop\n@@ -49,7 +50,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Exit {\n                         // If we found anything but a funciton we continue with the\n                         // loop and go one parent up\n                         Some(_) => {\n-                            cx.tcx.hir().get_parent_item(parent);\n+                            parent = cx.tcx.hir().get_parent_item(parent);\n                         },\n                         // If we found nothing we break.\n                         None => break,"}, {"sha": "0ad15faef77b1849e266cb29dab8fbef606edf05", "filename": "tests/ui/exit.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ffcf4bec0f9785925b12bce49149997b1ba5c79e/tests%2Fui%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffcf4bec0f9785925b12bce49149997b1ba5c79e/tests%2Fui%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexit.rs?ref=ffcf4bec0f9785925b12bce49149997b1ba5c79e", "patch": "@@ -1,12 +1,20 @@\n #[warn(clippy::exit)]\n+\n fn not_main() {\n+    if true {\n+        std::process::exit(4);\n+    }\n+}\n+\n+fn also_not_main() {\n     std::process::exit(3);\n }\n \n fn main() {\n     if true {\n         std::process::exit(2);\n     };\n+    also_not_main();\n     not_main();\n     std::process::exit(1);\n }"}]}