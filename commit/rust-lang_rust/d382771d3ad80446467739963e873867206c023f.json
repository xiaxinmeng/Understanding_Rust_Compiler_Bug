{"sha": "d382771d3ad80446467739963e873867206c023f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzODI3NzFkM2FkODA0NDY0Njc3Mzk5NjNlODczODY3MjA2YzAyM2Y=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-17T19:38:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-17T19:38:01Z"}, "message": "Rollup merge of #82174 - est31:master, r=oli-obk\n\nReplace File::create and write_all with fs::write\n\nAlso don't convert to u8 buffers and back\nwhen we are only creating strings.", "tree": {"sha": "f1a8124c1588c0d1b06b28c548f341b2ce219e1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1a8124c1588c0d1b06b28c548f341b2ce219e1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d382771d3ad80446467739963e873867206c023f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgLXCaCRBK7hj4Ov3rIwAAdHIIAEHzIjFg7AxkEQHIZMa8x18k\noaWbsr38bgcRJaE6GyOzZcA8/m5zd/5yBl8e3siYSXVex6tnV/pRwNG1jL+l4u5r\nfAJN88+Hz7fIX+nKhtp2TgbYGPQgiZIn7Cv63Yrnh5fPlIkyf0eT8BAI0/VT3erz\nLYWLcWCn2ogPNIRsK/w9XV6HVimI7U9CFwEoydErba2YuZwtoWoS7oc8Fs+y5inP\nFIfW2+mCKxtwQneiTdGYSyoCLaAbn1KhyaETLg964UAkEu9bFmQJQB0SOOgJ+r3X\ny/BWBBj4G0vve9tTjs/stPz31zs2oLR4ktqGoAzIGEaiZMF+H3MmO0ZlV1URjug=\n=0tDJ\n-----END PGP SIGNATURE-----\n", "payload": "tree f1a8124c1588c0d1b06b28c548f341b2ce219e1d\nparent 16481a285733f004ab9c5573c1e7fd5b602b3ddd\nparent e527def9c7a090fabf9ca41d09b629e5268d41f8\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1613590681 +0100\ncommitter GitHub <noreply@github.com> 1613590681 +0100\n\nRollup merge of #82174 - est31:master, r=oli-obk\n\nReplace File::create and write_all with fs::write\n\nAlso don't convert to u8 buffers and back\nwhen we are only creating strings.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d382771d3ad80446467739963e873867206c023f", "html_url": "https://github.com/rust-lang/rust/commit/d382771d3ad80446467739963e873867206c023f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d382771d3ad80446467739963e873867206c023f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16481a285733f004ab9c5573c1e7fd5b602b3ddd", "url": "https://api.github.com/repos/rust-lang/rust/commits/16481a285733f004ab9c5573c1e7fd5b602b3ddd", "html_url": "https://github.com/rust-lang/rust/commit/16481a285733f004ab9c5573c1e7fd5b602b3ddd"}, {"sha": "e527def9c7a090fabf9ca41d09b629e5268d41f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e527def9c7a090fabf9ca41d09b629e5268d41f8", "html_url": "https://github.com/rust-lang/rust/commit/e527def9c7a090fabf9ca41d09b629e5268d41f8"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "17d2b3386f5febc5264658a7a983fc10cbfc1cf4", "filename": "compiler/rustc_driver/src/pretty.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d382771d3ad80446467739963e873867206c023f/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d382771d3ad80446467739963e873867206c023f/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs?ref=d382771d3ad80446467739963e873867206c023f", "patch": "@@ -15,8 +15,6 @@ use rustc_span::symbol::Ident;\n use rustc_span::FileName;\n \n use std::cell::Cell;\n-use std::fs::File;\n-use std::io::Write;\n use std::path::Path;\n \n pub use self::PpMode::*;\n@@ -375,13 +373,14 @@ fn get_source(input: &Input, sess: &Session) -> (String, FileName) {\n     (src, src_name)\n }\n \n-fn write_output(out: Vec<u8>, ofile: Option<&Path>) {\n+fn write_or_print(out: &str, ofile: Option<&Path>) {\n     match ofile {\n-        None => print!(\"{}\", String::from_utf8(out).unwrap()),\n-        Some(p) => match File::create(p) {\n-            Ok(mut w) => w.write_all(&out).unwrap(),\n-            Err(e) => panic!(\"print-print failed to open {} due to {}\", p.display(), e),\n-        },\n+        None => print!(\"{}\", out),\n+        Some(p) => {\n+            if let Err(e) = std::fs::write(p, out) {\n+                panic!(\"print-print failed to write {} due to {}\", p.display(), e);\n+            }\n+        }\n     }\n }\n \n@@ -417,7 +416,7 @@ pub fn print_after_parsing(\n         unreachable!();\n     };\n \n-    write_output(out.into_bytes(), ofile);\n+    write_or_print(&out, ofile);\n }\n \n pub fn print_after_hir_lowering<'tcx>(\n@@ -477,7 +476,7 @@ pub fn print_after_hir_lowering<'tcx>(\n         _ => unreachable!(),\n     }\n \n-    write_output(out.into_bytes(), ofile);\n+    write_or_print(&out, ofile);\n }\n \n // In an ideal world, this would be a public function called by the driver after\n@@ -503,7 +502,8 @@ fn print_with_analysis(\n     }\n     .unwrap();\n \n-    write_output(out, ofile);\n+    let out = std::str::from_utf8(&out).unwrap();\n+    write_or_print(out, ofile);\n \n     Ok(())\n }"}]}