{"sha": "ec141c8c96c81decd8fd7227c40285bc9b994a16", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMTQxYzhjOTZjODFkZWNkOGZkNzIyN2M0MDI4NWJjOWI5OTRhMTY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-05-10T15:05:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-05-10T15:08:58Z"}, "message": "fix typo in Unique::empty doc", "tree": {"sha": "4b4bafe345efc74dc3fdf94ea14196856a0f5346", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b4bafe345efc74dc3fdf94ea14196856a0f5346"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec141c8c96c81decd8fd7227c40285bc9b994a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec141c8c96c81decd8fd7227c40285bc9b994a16", "html_url": "https://github.com/rust-lang/rust/commit/ec141c8c96c81decd8fd7227c40285bc9b994a16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec141c8c96c81decd8fd7227c40285bc9b994a16/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25a161765fb90f2bfc78bda8fef944048e72bd26", "url": "https://api.github.com/repos/rust-lang/rust/commits/25a161765fb90f2bfc78bda8fef944048e72bd26", "html_url": "https://github.com/rust-lang/rust/commit/25a161765fb90f2bfc78bda8fef944048e72bd26"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5f189d473be79f95c56ed2a9cc657ced02559d05", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec141c8c96c81decd8fd7227c40285bc9b994a16/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec141c8c96c81decd8fd7227c40285bc9b994a16/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=ec141c8c96c81decd8fd7227c40285bc9b994a16", "patch": "@@ -1005,7 +1005,7 @@ unsafe impl<T: Sync + ?Sized> Sync for Unique<T> { }\n \n #[unstable(feature = \"unique\", issue = \"27730\")]\n impl<T: Sized> Unique<T> {\n-    /// Creates a new `Shared` that is dangling, but well-aligned.\n+    /// Creates a new `Unique` that is dangling, but well-aligned.\n     ///\n     /// This is useful for initializing types which lazily allocate, like\n     /// `Vec::new` does."}]}