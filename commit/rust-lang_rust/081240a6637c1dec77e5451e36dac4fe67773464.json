{"sha": "081240a6637c1dec77e5451e36dac4fe67773464", "node_id": "C_kwDOAAsO6NoAKDA4MTI0MGE2NjM3YzFkZWM3N2U1NDUxZTM2ZGFjNGZlNjc3NzM0NjQ", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-11-10T04:12:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-10T04:12:47Z"}, "message": "Merge pull request #175 from rust-lang/feature/more-actions\n\nDelete travis config, move tests to github actions.", "tree": {"sha": "6dd99fad81f5ff804201e700ec7728c8f68a5f7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dd99fad81f5ff804201e700ec7728c8f68a5f7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/081240a6637c1dec77e5451e36dac4fe67773464", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhi0a/CRBK7hj4Ov3rIwAAgD8IADML+1pd7X5NtKrtRc67zc2h\nthrgxTd89rPSXrnxMXgkDPe6v27h7rRONg800rTNYdgqTR5IsdaENUjc8gJbuD2m\nek/NKuj+WCfb4FDgSMV+bzb8nYu6TteqVCEDgn23WxIQ74nQb5Xx2AqbZJQcFgtz\ndv2Jf2psgA9ZqazTqrEEi29Vwog1Cl3RObBXdc8MLwSRxkxKC9X/3d/PeX6ZqKcP\nIni/jsY6H8pF/Qvt6AQUMKnDxWc/lSHAeRlBg06xqf0vAezz12tzY56oHGaUv6Yw\n9f0RlWnJYOY8HzKDlMtP7iDvIVJzmaMjmDMprxMdJ9B0qSx4mpVOvyWi3cBLiOY=\n=hb86\n-----END PGP SIGNATURE-----\n", "payload": "tree 6dd99fad81f5ff804201e700ec7728c8f68a5f7d\nparent 0ecf9871fc104ce5cf19f46a6fd116485901417c\nparent 349a61143c81f7e15baf07f457938f469d4b9e7b\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1636517567 -0800\ncommitter GitHub <noreply@github.com> 1636517567 -0800\n\nMerge pull request #175 from rust-lang/feature/more-actions\n\nDelete travis config, move tests to github actions."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/081240a6637c1dec77e5451e36dac4fe67773464", "html_url": "https://github.com/rust-lang/rust/commit/081240a6637c1dec77e5451e36dac4fe67773464", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/081240a6637c1dec77e5451e36dac4fe67773464/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ecf9871fc104ce5cf19f46a6fd116485901417c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ecf9871fc104ce5cf19f46a6fd116485901417c", "html_url": "https://github.com/rust-lang/rust/commit/0ecf9871fc104ce5cf19f46a6fd116485901417c"}, {"sha": "349a61143c81f7e15baf07f457938f469d4b9e7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/349a61143c81f7e15baf07f457938f469d4b9e7b", "html_url": "https://github.com/rust-lang/rust/commit/349a61143c81f7e15baf07f457938f469d4b9e7b"}], "stats": {"total": 125, "additions": 39, "deletions": 86}, "files": [{"sha": "3a2c4477f76583cce361ee0a60a06cac2f5f6bf7", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/081240a6637c1dec77e5451e36dac4fe67773464/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/081240a6637c1dec77e5451e36dac4fe67773464/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=081240a6637c1dec77e5451e36dac4fe67773464", "patch": "@@ -94,8 +94,7 @@ jobs:\n           - { target: i586-pc-windows-msvc, target_feature: +sse2, os: windows-latest }\n \n           # Annoyingly, the x86_64-unknown-linux-gnu runner *almost* always has\n-          # avx512vl, but occasionally doesn't. As a result, we still run that\n-          # one under travis.\n+          # avx512vl, but occasionally doesn't.  Maybe one day we can enable it.\n \n     steps:\n       - uses: actions/checkout@v2\n@@ -141,6 +140,31 @@ jobs:\n       - name: Test (release)\n         run: cargo test --verbose --target=${{ matrix.target }} --release\n \n+  wasm-tests:\n+    name: \"wasm (firefox, ${{ matrix.name }})\"\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        include:\n+          - { name: default, RUSTFLAGS: \"\" }\n+          - { name: simd128, RUSTFLAGS: \"-C target-feature=+simd128\" }\n+    steps:\n+      - uses: actions/checkout@v2\n+      - name: Setup Rust\n+        run: |\n+          rustup update nightly --no-self-update\n+          rustup default nightly\n+      - name: Install wasm-pack\n+        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n+      - name: Test (debug)\n+        run: wasm-pack test --firefox --headless crates/core_simd\n+        env:\n+            RUSTFLAGS: ${{ matrix.rustflags }}\n+      - name: Test (release)\n+        run: wasm-pack test --firefox --headless crates/core_simd --release\n+        env:\n+            RUSTFLAGS: ${{ matrix.rustflags }}\n+\n   cross-tests:\n     name: \"${{ matrix.target }} (via cross)\"\n     runs-on: ubuntu-latest\n@@ -163,12 +187,19 @@ jobs:\n           # 32-bit arm has a few idiosyncracies like having subnormal flushing\n           # to zero on by default. Ideally we'd set\n           - armv7-unknown-linux-gnueabihf\n+          - aarch64-unknown-linux-gnu\n           # Note: The issue above means neither of these mips targets will use\n           # MSA (mips simd) but MIPS uses a nonstandard binary representation\n           # for NaNs which makes it worth testing on despite that.\n           - mips-unknown-linux-gnu\n           - mips64-unknown-linux-gnuabi64\n           - riscv64gc-unknown-linux-gnu\n+          # TODO this test works, but it appears to time out\n+          # - powerpc-unknown-linux-gnu\n+          # TODO this test is broken, but it appears to be a problem with QEMU, not us.\n+          # - powerpc64le-unknown-linux-gnu\n+          # TODO enable this once a new version of cross is released\n+          # - powerpc64-unknown-linux-gnu\n \n     steps:\n       - uses: actions/checkout@v2"}, {"sha": "6b284c87ecbef402e141c221aefae4a6e6b55b50", "filename": ".travis.yml", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/0ecf9871fc104ce5cf19f46a6fd116485901417c/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/0ecf9871fc104ce5cf19f46a6fd116485901417c/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=0ecf9871fc104ce5cf19f46a6fd116485901417c", "patch": "@@ -1,82 +0,0 @@\n-branches:\n-  only:\n-    - master\n-\n-language: rust\n-rust:\n-  - nightly\n-\n-matrix:\n-  fast_finish: true\n-  include:\n-    # Linux (aarch64)\n-    - name: \"aarch64-unknown-linux-gnu (neon)\"\n-      os: linux\n-      arch: arm64\n-\n-    - name: \"aarch64-unknown-linux-gnu (neon, sve)\"\n-      os: linux\n-      arch: arm64\n-      env: RUSTFLAGS=-Ctarget-feature=+sve\n-\n-    - name: \"aarch64-unknown-linux-gnu (native, see log for cfg)\"\n-      os: linux\n-      arch: arm64\n-      env: RUSTFLAGS=-Ctarget-cpu=native\n-\n-    # Linux (powerpc64le)\n-    - name: \"powerpc64le-unknown-linux-gnu (altivec, vsx, power8-*)\"\n-      os: linux\n-      arch: ppc64le\n-\n-    - name: \"powerpc64le-unknown-linux-gnu (native, see log for cfg)\"\n-      os: linux\n-      arch: ppc64le\n-      env: RUSTFLAGS=-Ctarget-cpu=native\n-\n-    # Linux (x86_64) (for AVX512, which sadly seems to only *usually* be present\n-    # on the github actions linux runner...)\n-    - name: \"x86_64-unknown-linux-gnu+avx512vl\"\n-      os: linux\n-      arch: amd64\n-      env: RUSTFLAGS=-Ctarget-feature=+avx512vl\n-\n-    # WebAssembly (wasm-bindgen)\n-    - name: \"wasm32-unknown-unknown (firefox)\"\n-      os: linux\n-      arch: amd64\n-      addons:\n-        firefox: latest-nightly\n-      install:\n-        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n-      script:\n-        - wasm-pack test --firefox --headless crates/core_simd\n-        - wasm-pack test --firefox --headless crates/core_simd --release\n-\n-    # FIXME: See https://github.com/rust-lang/stdsimd/issues/92\n-    # - name: \"wasm32-unknown-unknown+simd128 (firefox)\"\n-    #   os: linux\n-    #   arch: amd64\n-    #   addons:\n-    #     firefox: latest-nightly\n-    #   install:\n-    #     - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n-    #   script:\n-    #     - export RUSTFLAGS=\"-C target-feature=+simd128\"\n-    #     - wasm-pack test --firefox --headless crates/core_simd\n-    #     - wasm-pack test --firefox --headless crates/core_simd --release\n-\n-script:\n-  - echo \"## Requested target configuration (RUSTFLAGS=$RUSTFLAGS)\"\n-  - rustc --print=cfg $RUSTFLAGS\n-\n-  - echo \"## Supported target configuration\"\n-  - rustc --print=cfg -Ctarget-cpu=native\n-\n-  - echo \"\\n---\\n\"\n-\n-  - echo \"## Running tests (debug)\"\n-  - cargo test -v\n-\n-  - echo \"## Running tests (release)\"\n-  - cargo test -v --release"}, {"sha": "dd981cedb932b4c57681caebb9282a012780a375", "filename": "crates/core_simd/src/masks/full_masks.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/081240a6637c1dec77e5451e36dac4fe67773464/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/081240a6637c1dec77e5451e36dac4fe67773464/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks.rs?ref=081240a6637c1dec77e5451e36dac4fe67773464", "patch": "@@ -119,7 +119,7 @@ where\n             // There is a bug where LLVM appears to implement this operation with the wrong\n             // bit order.\n             // TODO fix this in a better way\n-            if cfg!(any(target_arch = \"mips\", target_arch = \"mips64\")) {\n+            if cfg!(target_endian = \"big\") {\n                 for x in bitmask.as_mut() {\n                     *x = x.reverse_bits();\n                 }\n@@ -136,7 +136,7 @@ where\n             // There is a bug where LLVM appears to implement this operation with the wrong\n             // bit order.\n             // TODO fix this in a better way\n-            if cfg!(any(target_arch = \"mips\", target_arch = \"mips64\")) {\n+            if cfg!(target_endian = \"big\") {\n                 for x in bitmask.as_mut() {\n                     *x = x.reverse_bits();\n                 }"}, {"sha": "6a8ecd33a73cfe0e2ea6d1494452233520e287dc", "filename": "crates/core_simd/tests/masks.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/081240a6637c1dec77e5451e36dac4fe67773464/crates%2Fcore_simd%2Ftests%2Fmasks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/081240a6637c1dec77e5451e36dac4fe67773464/crates%2Fcore_simd%2Ftests%2Fmasks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Fmasks.rs?ref=081240a6637c1dec77e5451e36dac4fe67773464", "patch": "@@ -86,6 +86,10 @@ macro_rules! test_mask_api {\n \n mod mask_api {\n     test_mask_api! { i8 }\n+    test_mask_api! { i16 }\n+    test_mask_api! { i32 }\n+    test_mask_api! { i64 }\n+    test_mask_api! { isize }\n }\n \n #[test]"}]}