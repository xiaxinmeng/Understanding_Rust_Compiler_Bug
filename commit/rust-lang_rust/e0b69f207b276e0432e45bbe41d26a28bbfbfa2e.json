{"sha": "e0b69f207b276e0432e45bbe41d26a28bbfbfa2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYjY5ZjIwN2IyNzZlMDQzMmU0NWJiZTQxZDI2YTI4YmJmYmZhMmU=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-07-06T19:32:26Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-07-06T19:32:26Z"}, "message": "Hide `&mut self` methods from Deref in sidebar\n\nIf there are no `DerefMut` impl for the type.", "tree": {"sha": "77262e0e6b5f26fbcf331286579399ec70564dbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77262e0e6b5f26fbcf331286579399ec70564dbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0b69f207b276e0432e45bbe41d26a28bbfbfa2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0b69f207b276e0432e45bbe41d26a28bbfbfa2e", "html_url": "https://github.com/rust-lang/rust/commit/e0b69f207b276e0432e45bbe41d26a28bbfbfa2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0b69f207b276e0432e45bbe41d26a28bbfbfa2e/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cd7ff7ddfb75a38dca81ad3e76b1e984129e939", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd7ff7ddfb75a38dca81ad3e76b1e984129e939", "html_url": "https://github.com/rust-lang/rust/commit/0cd7ff7ddfb75a38dca81ad3e76b1e984129e939"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "6d3576ed8078cf521ca5061456f747e0fe285977", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e0b69f207b276e0432e45bbe41d26a28bbfbfa2e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0b69f207b276e0432e45bbe41d26a28bbfbfa2e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=e0b69f207b276e0432e45bbe41d26a28bbfbfa2e", "patch": "@@ -4095,6 +4095,10 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n                         _ => None,\n                     })\n                 {\n+                    let deref_mut = v\n+                        .iter()\n+                        .filter(|i| i.inner_impl().trait_.is_some())\n+                        .any(|i| i.inner_impl().trait_.def_id() == c.deref_mut_trait_did);\n                     let inner_impl = target\n                         .def_id()\n                         .or(target\n@@ -4115,7 +4119,9 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n                         let mut ret = impls\n                             .iter()\n                             .filter(|i| i.inner_impl().trait_.is_none())\n-                            .flat_map(|i| get_methods(i.inner_impl(), true, &mut used_links, true))\n+                            .flat_map(|i| {\n+                                get_methods(i.inner_impl(), true, &mut used_links, deref_mut)\n+                            })\n                             .collect::<Vec<_>>();\n                         // We want links' order to be reproducible so we don't use unstable sort.\n                         ret.sort();"}]}