{"sha": "154488df1999e4c42f96ebaa6ee6c08be3f999a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NDQ4OGRmMTk5OWU0YzQyZjk2ZWJhYTZlZTZjMDhiZTNmOTk5YTY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-23T00:00:07Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-23T22:46:24Z"}, "message": "libsyntax: Implement `assert` as a macro (called `fail_unless!` on a transitionary basis to avoid conflicting with the keyword right now). r=brson", "tree": {"sha": "a40399560573d6d8709fceae1bc2ffcc2df230c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a40399560573d6d8709fceae1bc2ffcc2df230c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/154488df1999e4c42f96ebaa6ee6c08be3f999a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/154488df1999e4c42f96ebaa6ee6c08be3f999a6", "html_url": "https://github.com/rust-lang/rust/commit/154488df1999e4c42f96ebaa6ee6c08be3f999a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/154488df1999e4c42f96ebaa6ee6c08be3f999a6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54b2cad8b341434c7c0edb153a0fa662fb2981f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/54b2cad8b341434c7c0edb153a0fa662fb2981f1", "html_url": "https://github.com/rust-lang/rust/commit/54b2cad8b341434c7c0edb153a0fa662fb2981f1"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "068b372c069283a9988d241c4007b1c433867bf2", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/154488df1999e4c42f96ebaa6ee6c08be3f999a6/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154488df1999e4c42f96ebaa6ee6c08be3f999a6/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=154488df1999e4c42f96ebaa6ee6c08be3f999a6", "patch": "@@ -300,6 +300,14 @@ fn core_macros() -> ~str {\n         )\n     )\n \n+    macro_rules! fail_unless(\n+        ($cond:expr) => {\n+            if !$cond {\n+                die!(~\\\"assertion failed: \\\" + stringify!($cond))\n+            }\n+        }\n+    )\n+\n     macro_rules! condition (\n \n         { $c:ident: $in:ty -> $out:ty; } => {"}, {"sha": "2136499f8f09e1529c7c5441387e78685dd356cd", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/154488df1999e4c42f96ebaa6ee6c08be3f999a6/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154488df1999e4c42f96ebaa6ee6c08be3f999a6/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=154488df1999e4c42f96ebaa6ee6c08be3f999a6", "patch": "@@ -200,19 +200,24 @@ fn to_str(in: @ident_interner, t: Token) -> ~str {\n       DOC_COMMENT(s) => *in.get(s),\n       EOF => ~\"<eof>\",\n       INTERPOLATED(ref nt) => {\n-        ~\"an interpolated \" +\n-            match (*nt) {\n-              nt_item(*) => ~\"item\",\n-              nt_block(*) => ~\"block\",\n-              nt_stmt(*) => ~\"statement\",\n-              nt_pat(*) => ~\"pattern\",\n-              nt_expr(*) => ~\"expression\",\n-              nt_ty(*) => ~\"type\",\n-              nt_ident(*) => ~\"identifier\",\n-              nt_path(*) => ~\"path\",\n-              nt_tt(*) => ~\"tt\",\n-              nt_matchers(*) => ~\"matcher sequence\"\n+        match nt {\n+            &nt_expr(e) => ::print::pprust::expr_to_str(e, in),\n+            _ => {\n+                ~\"an interpolated \" +\n+                    match (*nt) {\n+                      nt_item(*) => ~\"item\",\n+                      nt_block(*) => ~\"block\",\n+                      nt_stmt(*) => ~\"statement\",\n+                      nt_pat(*) => ~\"pattern\",\n+                      nt_expr(*) => fail ~\"should have been handled above\",\n+                      nt_ty(*) => ~\"type\",\n+                      nt_ident(*) => ~\"identifier\",\n+                      nt_path(*) => ~\"path\",\n+                      nt_tt(*) => ~\"tt\",\n+                      nt_matchers(*) => ~\"matcher sequence\"\n+                    }\n             }\n+        }\n       }\n     }\n }"}, {"sha": "8bb1e278fd166c737b9c60d3ab6291a98ecb65f5", "filename": "src/test/run-fail/assert-as-macro.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/154488df1999e4c42f96ebaa6ee6c08be3f999a6/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154488df1999e4c42f96ebaa6ee6c08be3f999a6/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs?ref=154488df1999e4c42f96ebaa6ee6c08be3f999a6", "patch": "@@ -0,0 +1,6 @@\n+// error-pattern:assertion failed: 1 == 2\n+\n+fn main() {\n+    fail_unless!(1 == 2);\n+}\n+"}]}