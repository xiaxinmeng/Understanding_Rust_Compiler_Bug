{"sha": "b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6", "node_id": "C_kwDOAAsO6NoAKGI0YzNmMGY3OWI2ODYwMzViOTRiOGNhMzUzNWZmOTI3NGY3ZWY0ZDY", "commit": {"author": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-05-17T15:37:12Z"}, "committer": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-05-17T15:37:12Z"}, "message": "fix", "tree": {"sha": "70caa519cbec486ae5f65f1ff51edd679dec3e98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70caa519cbec486ae5f65f1ff51edd679dec3e98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6", "html_url": "https://github.com/rust-lang/rust/commit/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6/comments", "author": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d901079ca1176f87c8baaed0662db117c805c9e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d901079ca1176f87c8baaed0662db117c805c9e1", "html_url": "https://github.com/rust-lang/rust/commit/d901079ca1176f87c8baaed0662db117c805c9e1"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "f99d793c201d76c4c20584c48ce98e8af0d48868", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::is_in_test_function;\n use clippy_utils::macros::root_macro_call_first_node;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{is_in_cfg_test, is_in_test_function};\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -37,7 +37,7 @@ impl LateLintPass<'_> for DbgMacro {\n         let Some(macro_call) = root_macro_call_first_node(cx, expr) else { return };\n         if cx.tcx.is_diagnostic_item(sym::dbg_macro, macro_call.def_id) {\n             // we make an exception for test code\n-            if is_in_test_function(cx.tcx, expr.hir_id) {\n+            if is_in_test_function(cx.tcx, expr.hir_id) || is_in_cfg_test(cx.tcx, expr.hir_id) {\n                 return;\n             }\n             let mut applicability = Applicability::MachineApplicable;"}, {"sha": "b3ecc4255a92e2dc868f588597c45c244d39254d", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6", "patch": "@@ -2146,6 +2146,26 @@ pub fn is_in_test_function(tcx: TyCtxt<'_>, id: hir::HirId) -> bool {\n     })\n }\n \n+/// Checks if the item containing the given `HirId` has `#[cfg(test)]` attribute applied\n+///\n+/// Note: Add `// compile-flags: --test` to UI tests with a `#[cfg(test)]` function\n+pub fn is_in_cfg_test(tcx: TyCtxt<'_>, id: hir::HirId) -> bool {\n+    fn is_cfg_test(attr: &Attribute) -> bool {\n+        if attr.has_name(sym::cfg)\n+            && let Some(items) = attr.meta_item_list()\n+            && items.len() == 1\n+            && items[0].has_name(sym::test)\n+        {\n+            true\n+        } else {\n+            false\n+        }\n+    }\n+    tcx.hir()\n+        .parent_iter(id)\n+        .any(|(parent_id, _)| tcx.hir().attrs(parent_id).iter().any(is_cfg_test))\n+}\n+\n /// Checks whether item either has `test` attribute applied, or\n /// is a module with `test` in its name.\n ///"}, {"sha": "25294e8c766f8b3a0ac22fd33fd4366a15b08615", "filename": "tests/ui/dbg_macro.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6/tests%2Fui%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6/tests%2Fui%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdbg_macro.rs?ref=b4c3f0f79b686035b94b8ca3535ff9274f7ef4d6", "patch": "@@ -46,3 +46,15 @@ mod issue7274 {\n pub fn issue8481() {\n     dbg!(1);\n }\n+\n+#[cfg(test)]\n+fn foo2() {\n+    dbg!(1);\n+}\n+\n+#[cfg(test)]\n+mod mod1 {\n+    fn func() {\n+        dbg!(1);\n+    }\n+}"}]}