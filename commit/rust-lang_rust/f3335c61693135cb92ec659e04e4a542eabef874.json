{"sha": "f3335c61693135cb92ec659e04e4a542eabef874", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMzM1YzYxNjkzMTM1Y2I5MmVjNjU5ZTA0ZTRhNTQyZWFiZWY4NzQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-06T22:11:41Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-20T19:04:50Z"}, "message": "simplify `AnonTypeDecl` in the impl trait code\n\nWe don't need to know the vector of region bounds; we only care if\nthere were any region bounds at all.", "tree": {"sha": "51b1934e02f3730677dcc9f56edbebeab6e489bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51b1934e02f3730677dcc9f56edbebeab6e489bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3335c61693135cb92ec659e04e4a542eabef874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3335c61693135cb92ec659e04e4a542eabef874", "html_url": "https://github.com/rust-lang/rust/commit/f3335c61693135cb92ec659e04e4a542eabef874", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3335c61693135cb92ec659e04e4a542eabef874/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81622c6b02536bdcf56145beb317da0d336703c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/81622c6b02536bdcf56145beb317da0d336703c1", "html_url": "https://github.com/rust-lang/rust/commit/81622c6b02536bdcf56145beb317da0d336703c1"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "3da71d1c0c5d72b2a84f32ad63e25e5b81df3035", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f3335c61693135cb92ec659e04e4a542eabef874/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3335c61693135cb92ec659e04e4a542eabef874/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=f3335c61693135cb92ec659e04e4a542eabef874", "patch": "@@ -257,9 +257,28 @@ struct AnonTypeDecl<'tcx> {\n     /// lifetime parameter on `foo`.)\n     concrete_ty: Ty<'tcx>,\n \n-    /// A list of all required region bounds on the impl Trait type,\n-    /// e.g. `'a` and `'b` in `fn foo<'a, 'b, 'c>() -> impl Trait<'c> + 'a + 'b`.\n-    required_region_bounds: Vec<ty::Region<'tcx>>,\n+    /// True if the `impl Trait` bounds include region bounds.\n+    /// For example, this would be true for:\n+    ///\n+    ///     fn foo<'a, 'b, 'c>() -> impl Trait<'c> + 'a + 'b\n+    ///\n+    /// but false for:\n+    ///\n+    ///     fn foo<'c>() -> impl Trait<'c>\n+    ///\n+    /// unless `Trait` was declared like:\n+    ///\n+    ///     trait Trait<'c>: 'c\n+    ///\n+    /// in which case it would be true.\n+    ///\n+    /// This is used during regionck to decide whether we need to\n+    /// impose any additional constraints to ensure that region\n+    /// variables in `concrete_ty` wind up being constrained to\n+    /// something from `substs` (or, at minimum, things that outlive\n+    /// the fn body). (Ultimately, writeback is responsible for this\n+    /// check.)\n+    has_required_region_bounds: bool,\n }\n \n impl<'a, 'gcx, 'tcx> Deref for Inherited<'a, 'gcx, 'tcx> {\n@@ -1942,7 +1961,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 self.anon_types.borrow_mut().insert(def_id, AnonTypeDecl {\n                     substs,\n                     concrete_ty: ty_var,\n-                    required_region_bounds,\n+                    has_required_region_bounds: !required_region_bounds.is_empty(),\n                 });\n                 debug!(\"instantiate_anon_types: ty_var={:?}\", ty_var);\n "}, {"sha": "63c77a893c964c75f6fab66463e16811f1271dbb", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3335c61693135cb92ec659e04e4a542eabef874/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3335c61693135cb92ec659e04e4a542eabef874/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=f3335c61693135cb92ec659e04e4a542eabef874", "patch": "@@ -451,7 +451,7 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n             // If there are required region bounds, we can just skip\n             // ahead.  There will already be a registered region\n             // obligation related `concrete_ty` to those regions.\n-            if anon_defn.required_region_bounds.len() != 0 {\n+            if anon_defn.has_required_region_bounds {\n                 continue;\n             }\n "}]}