{"sha": "a42420583bdb6ea788c2f7ec0a0360d99934f2a7", "node_id": "C_kwDOAAsO6NoAKGE0MjQyMDU4M2JkYjZlYTc4OGMyZjdlYzBhMDM2MGQ5OTkzNGYyYTc", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-12-24T07:14:13Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-12-24T07:17:13Z"}, "message": "Use Mask::any in div check", "tree": {"sha": "af8a156a418ca0ed5d0e2887ed01ce75d3d3b280", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af8a156a418ca0ed5d0e2887ed01ce75d3d3b280"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a42420583bdb6ea788c2f7ec0a0360d99934f2a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a42420583bdb6ea788c2f7ec0a0360d99934f2a7", "html_url": "https://github.com/rust-lang/rust/commit/a42420583bdb6ea788c2f7ec0a0360d99934f2a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a42420583bdb6ea788c2f7ec0a0360d99934f2a7/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc326a2bbccdccb321328e7a1cde3ad3734a5953", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc326a2bbccdccb321328e7a1cde3ad3734a5953", "html_url": "https://github.com/rust-lang/rust/commit/bc326a2bbccdccb321328e7a1cde3ad3734a5953"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "82b007aa6966da71a68e4c7e6a3a656a23071dd9", "filename": "crates/core_simd/src/ops.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a42420583bdb6ea788c2f7ec0a0360d99934f2a7/crates%2Fcore_simd%2Fsrc%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a42420583bdb6ea788c2f7ec0a0360d99934f2a7/crates%2Fcore_simd%2Fsrc%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fops.rs?ref=a42420583bdb6ea788c2f7ec0a0360d99934f2a7", "patch": "@@ -1,4 +1,4 @@\n-use crate::simd::{LaneCount, Mask, Simd, SimdElement, SupportedLaneCount};\n+use crate::simd::{LaneCount, Simd, SimdElement, SupportedLaneCount};\n use core::ops::{Add, Mul};\n use core::ops::{BitAnd, BitOr, BitXor};\n use core::ops::{Div, Rem, Sub};\n@@ -70,8 +70,7 @@ macro_rules! int_divrem_guard {\n         if $rhs.lanes_eq(Simd::splat(0)).any() {\n             panic!($zero);\n         } else if <$int>::MIN != 0\n-            && $lhs.lanes_eq(Simd::splat(<$int>::MIN)) & $rhs.lanes_eq(Simd::splat(-1 as _))\n-                != Mask::splat(false)\n+            && ($lhs.lanes_eq(Simd::splat(<$int>::MIN)) & $rhs.lanes_eq(Simd::splat(-1 as _))).any()\n         {\n             panic!($overflow);\n         } else {"}]}