{"sha": "403aee10829c5c017352d7e4914a55c8a7a0efb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwM2FlZTEwODI5YzVjMDE3MzUyZDdlNDkxNGE1NWM4YTdhMGVmYjY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-05-24T02:05:57Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-05-28T00:32:32Z"}, "message": "testsuite: Test cases, one xfailed, one not", "tree": {"sha": "730a252d710a55d94a246843b66449ca7a051022", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/730a252d710a55d94a246843b66449ca7a051022"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/403aee10829c5c017352d7e4914a55c8a7a0efb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/403aee10829c5c017352d7e4914a55c8a7a0efb6", "html_url": "https://github.com/rust-lang/rust/commit/403aee10829c5c017352d7e4914a55c8a7a0efb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/403aee10829c5c017352d7e4914a55c8a7a0efb6/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58547d64887184550b31efce1551818b1a1525fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/58547d64887184550b31efce1551818b1a1525fa", "html_url": "https://github.com/rust-lang/rust/commit/58547d64887184550b31efce1551818b1a1525fa"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "cad47eff01321553146ea9e594920f7cfd7e47c0", "filename": "src/test/compile-fail/issue-5543.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/403aee10829c5c017352d7e4914a55c8a7a0efb6/src%2Ftest%2Fcompile-fail%2Fissue-5543.rs", "raw_url": "https://github.com/rust-lang/rust/raw/403aee10829c5c017352d7e4914a55c8a7a0efb6/src%2Ftest%2Fcompile-fail%2Fissue-5543.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5543.rs?ref=403aee10829c5c017352d7e4914a55c8a7a0efb6", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test\n+use core::io::ReaderUtil;\n+use core::io::Reader;\n+\n+fn bar(r:@ReaderUtil) -> ~str { r.read_line() }\n+\n+fn main() {\n+    let r : @Reader = io::stdin();\n+    let _m = bar(r as @ReaderUtil);\n+}"}, {"sha": "6c0a3c37bc434f49e47035d3b8330900c88ce8fb", "filename": "src/test/run-pass/issue-5554.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/403aee10829c5c017352d7e4914a55c8a7a0efb6/src%2Ftest%2Frun-pass%2Fissue-5554.rs", "raw_url": "https://github.com/rust-lang/rust/raw/403aee10829c5c017352d7e4914a55c8a7a0efb6/src%2Ftest%2Frun-pass%2Fissue-5554.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5554.rs?ref=403aee10829c5c017352d7e4914a55c8a7a0efb6", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use core::num::Zero;\n+\n+pub struct X<T> {\n+  a: T\n+}\n+\n+// reordering these bounds stops the ICE\n+impl<T: Zero + Eq + Zero>\n+  Zero for X<T> {\n+    fn zero() -> X<T> {\n+      X { a: Zero::zero() }\n+    }\n+    fn is_zero(&self) -> bool {\n+        self.a.is_zero()\n+    }\n+}\n+\n+macro_rules! constants {\n+  () => {\n+    let _0 : X<int> = Zero::zero();\n+   }\n+}\n+\n+\n+fn test_X() {\n+  constants!();\n+}\n+"}]}