{"sha": "4ac4980b3311f9c7a339498b3dfe46acc7b904ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYzQ5ODBiMzMxMWY5YzdhMzM5NDk4YjNkZmU0NmFjYzdiOTA0ZmY=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-09-07T15:06:07Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-09-12T23:08:35Z"}, "message": "Introduce NullOp::AlignOf", "tree": {"sha": "a573e73b090c45964fc85f2b662d5bf429781c89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a573e73b090c45964fc85f2b662d5bf429781c89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ac4980b3311f9c7a339498b3dfe46acc7b904ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ac4980b3311f9c7a339498b3dfe46acc7b904ff", "html_url": "https://github.com/rust-lang/rust/commit/4ac4980b3311f9c7a339498b3dfe46acc7b904ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ac4980b3311f9c7a339498b3dfe46acc7b904ff/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ad50a41fe99ebb415155b2683ce358d61251003", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad50a41fe99ebb415155b2683ce358d61251003", "html_url": "https://github.com/rust-lang/rust/commit/9ad50a41fe99ebb415155b2683ce358d61251003"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "d29558a4e1f651d5b5f8274c9b53e09be11374fe", "filename": "src/base.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4ac4980b3311f9c7a339498b3dfe46acc7b904ff/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac4980b3311f9c7a339498b3dfe46acc7b904ff/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=4ac4980b3311f9c7a339498b3dfe46acc7b904ff", "patch": "@@ -726,15 +726,20 @@ fn codegen_stmt<'tcx>(\n                     let ptr = fx.bcx.inst_results(call)[0];\n                     lval.write_cvalue(fx, CValue::by_val(ptr, box_layout));\n                 }\n-                Rvalue::NullaryOp(NullOp::SizeOf, ty) => {\n+                Rvalue::NullaryOp(null_op, ty) => {\n                     assert!(\n                         lval.layout()\n                             .ty\n                             .is_sized(fx.tcx.at(stmt.source_info.span), ParamEnv::reveal_all())\n                     );\n-                    let ty_size = fx.layout_of(fx.monomorphize(ty)).size.bytes();\n+                    let layout = fx.layout_of(fx.monomorphize(ty));\n+                    let val = match null_op {\n+                        NullOp::SizeOf => layout.size.bytes(),\n+                        NullOp::AlignOf => layout.align.abi.bytes(),\n+                        NullOp::Box => unreachable!(),\n+                    };\n                     let val =\n-                        CValue::const_val(fx, fx.layout_of(fx.tcx.types.usize), ty_size.into());\n+                        CValue::const_val(fx, fx.layout_of(fx.tcx.types.usize), val.into());\n                     lval.write_cvalue(fx, val);\n                 }\n                 Rvalue::Aggregate(ref kind, ref operands) => match kind.as_ref() {"}, {"sha": "19d9f077694316d93b72b231d796ed62c9768437", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ac4980b3311f9c7a339498b3dfe46acc7b904ff/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac4980b3311f9c7a339498b3dfe46acc7b904ff/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=4ac4980b3311f9c7a339498b3dfe46acc7b904ff", "patch": "@@ -823,7 +823,7 @@ pub(crate) fn codegen_intrinsic_call<'tcx>(\n             dest.write_cvalue(fx, val);\n         };\n \n-        pref_align_of | min_align_of | needs_drop | type_id | type_name | variant_count, () {\n+        pref_align_of | needs_drop | type_id | type_name | variant_count, () {\n             let const_val =\n                 fx.tcx.const_eval_instance(ParamEnv::reveal_all(), instance, None).unwrap();\n             let val = crate::constant::codegen_const_value("}]}