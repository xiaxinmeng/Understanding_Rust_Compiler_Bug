{"sha": "ce3cecf116a2d691c53f37c1d257a416ecfd381b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlM2NlY2YxMTZhMmQ2OTFjNTNmMzdjMWQyNTdhNDE2ZWNmZDM4MWI=", "commit": {"author": {"name": "Ulrich Weigand", "email": "ulrich.weigand@de.ibm.com", "date": "2016-09-07T19:03:21Z"}, "committer": {"name": "Ulrich Weigand", "email": "ulrich.weigand@de.ibm.com", "date": "2016-09-07T19:03:21Z"}, "message": "Use layout_of to detect C enums", "tree": {"sha": "3e5a2e0cbf5c3887127747653dbef692c0902bea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e5a2e0cbf5c3887127747653dbef692c0902bea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3cecf116a2d691c53f37c1d257a416ecfd381b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3cecf116a2d691c53f37c1d257a416ecfd381b", "html_url": "https://github.com/rust-lang/rust/commit/ce3cecf116a2d691c53f37c1d257a416ecfd381b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3cecf116a2d691c53f37c1d257a416ecfd381b/comments", "author": {"login": "uweigand", "id": 4154057, "node_id": "MDQ6VXNlcjQxNTQwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4154057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uweigand", "html_url": "https://github.com/uweigand", "followers_url": "https://api.github.com/users/uweigand/followers", "following_url": "https://api.github.com/users/uweigand/following{/other_user}", "gists_url": "https://api.github.com/users/uweigand/gists{/gist_id}", "starred_url": "https://api.github.com/users/uweigand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uweigand/subscriptions", "organizations_url": "https://api.github.com/users/uweigand/orgs", "repos_url": "https://api.github.com/users/uweigand/repos", "events_url": "https://api.github.com/users/uweigand/events{/privacy}", "received_events_url": "https://api.github.com/users/uweigand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "uweigand", "id": 4154057, "node_id": "MDQ6VXNlcjQxNTQwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4154057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uweigand", "html_url": "https://github.com/uweigand", "followers_url": "https://api.github.com/users/uweigand/followers", "following_url": "https://api.github.com/users/uweigand/following{/other_user}", "gists_url": "https://api.github.com/users/uweigand/gists{/gist_id}", "starred_url": "https://api.github.com/users/uweigand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uweigand/subscriptions", "organizations_url": "https://api.github.com/users/uweigand/orgs", "repos_url": "https://api.github.com/users/uweigand/repos", "events_url": "https://api.github.com/users/uweigand/events{/privacy}", "received_events_url": "https://api.github.com/users/uweigand/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8760a5e3cc8bab89053ef9cee9757160e76f517d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8760a5e3cc8bab89053ef9cee9757160e76f517d", "html_url": "https://github.com/rust-lang/rust/commit/8760a5e3cc8bab89053ef9cee9757160e76f517d"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "42289ec094f320cf43dce8a6cd386e01e25a3177", "filename": "src/librustc_trans/abi.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ce3cecf116a2d691c53f37c1d257a416ecfd381b/src%2Flibrustc_trans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3cecf116a2d691c53f37c1d257a416ecfd381b/src%2Flibrustc_trans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fabi.rs?ref=ce3cecf116a2d691c53f37c1d257a416ecfd381b", "patch": "@@ -26,7 +26,6 @@ use cabi_asmjs;\n use machine::{llalign_of_min, llsize_of, llsize_of_real, llsize_of_store};\n use type_::Type;\n use type_of;\n-use adt;\n \n use rustc::hir;\n use rustc::ty::{self, Ty};\n@@ -36,6 +35,7 @@ use std::cmp;\n \n pub use syntax::abi::Abi;\n pub use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n+use rustc::ty::layout::Layout;\n \n #[derive(Clone, Copy, PartialEq, Debug)]\n enum ArgKind {\n@@ -318,13 +318,10 @@ impl FnType {\n                 if ty.is_integral() {\n                     arg.signedness = Some(ty.is_signed());\n                 }\n-                // Rust enum types that map onto C enums (LLVM integers) also\n-                // need to follow the target ABI zero-/sign-extension rules.\n-                if let ty::TyEnum(..) = ty.sty {\n-                    if arg.ty.kind() == llvm::Integer {\n-                        let repr = adt::represent_type(ccx, ty);\n-                        arg.signedness = Some(adt::is_discr_signed(&repr));\n-                    }\n+                // Rust enum types that map onto C enums also need to follow\n+                // the target ABI zero-/sign-extension rules.\n+                if let Layout::CEnum { signed, .. } = *ccx.layout_of(ty) {\n+                    arg.signedness = Some(signed);\n                 }\n                 if llsize_of_real(ccx, arg.ty) == 0 {\n                     // For some forsaken reason, x86_64-pc-windows-gnu"}]}