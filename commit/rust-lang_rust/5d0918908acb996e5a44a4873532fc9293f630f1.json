{"sha": "5d0918908acb996e5a44a4873532fc9293f630f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMDkxODkwOGFjYjk5NmU1YTQ0YTQ4NzM1MzJmYzkyOTNmNjMwZjE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-12T16:54:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-12T16:54:28Z"}, "message": "Rollup merge of #48877 - GuillaumeGomez:vec-missing-links, r=QuietMisdreavus\n\nAdd missing urls\n\nr? @QuietMisdreavus", "tree": {"sha": "96672a7b4ef238e61f592c67c3bc553f35e85438", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96672a7b4ef238e61f592c67c3bc553f35e85438"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d0918908acb996e5a44a4873532fc9293f630f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaprDFCRBK7hj4Ov3rIwAAdHIIAJoUXr6Bsdy6qr7uvzlaLhAm\nRZkRRcUY8x4jd3dZpalnlEEwxjU7VH/zPSfK1DctzntbJ/XCZCZuJD5ESWumW/o9\nTYUKOivyBOprGjeVK4tthG1fbP+3NrA8FFGMXj5Brt/FvtS8sx91SXhPxMhDAyJf\nsda8gICcCmQQmLCofOezpr6D5/wFOynRlOxMfniLQ3mivGFQCE2RuGTC44Q8/ycD\nL394tlIPGwE3cZf9h8LD7cy+7h03+8wtCRgFG9reTqHCwdBO3o0vrTUyWG2DDOHf\nccRIhdcOuFHezacg1XefTdCWloVymkRGO09n0uIybozUp8jvPgIQNnE2vDnD2OU=\n=UnUr\n-----END PGP SIGNATURE-----\n", "payload": "tree 96672a7b4ef238e61f592c67c3bc553f35e85438\nparent e22a994a479a6157bff6af43033e417d6de2ad37\nparent a63bf3bb10117af94cc8189e9f228a81da5b432d\nauthor kennytm <kennytm@gmail.com> 1520873668 +0800\ncommitter GitHub <noreply@github.com> 1520873668 +0800\n\nRollup merge of #48877 - GuillaumeGomez:vec-missing-links, r=QuietMisdreavus\n\nAdd missing urls\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d0918908acb996e5a44a4873532fc9293f630f1", "html_url": "https://github.com/rust-lang/rust/commit/5d0918908acb996e5a44a4873532fc9293f630f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d0918908acb996e5a44a4873532fc9293f630f1/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e22a994a479a6157bff6af43033e417d6de2ad37", "url": "https://api.github.com/repos/rust-lang/rust/commits/e22a994a479a6157bff6af43033e417d6de2ad37", "html_url": "https://github.com/rust-lang/rust/commit/e22a994a479a6157bff6af43033e417d6de2ad37"}, {"sha": "a63bf3bb10117af94cc8189e9f228a81da5b432d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a63bf3bb10117af94cc8189e9f228a81da5b432d", "html_url": "https://github.com/rust-lang/rust/commit/a63bf3bb10117af94cc8189e9f228a81da5b432d"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "1bb2bed463b0925be99a8d48e4bf7a628dfda9a1", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=5d0918908acb996e5a44a4873532fc9293f630f1", "patch": "@@ -1212,8 +1212,9 @@ impl<T: Clone> Vec<T> {\n     /// difference, with each additional slot filled with `value`.\n     /// If `new_len` is less than `len`, the `Vec` is simply truncated.\n     ///\n-    /// This method requires `Clone` to clone the passed value. If you'd\n-    /// rather create a value with `Default` instead, see [`resize_default`].\n+    /// This method requires [`Clone`] to be able clone the passed value. If\n+    /// you'd rather create a value with [`Default`] instead, see\n+    /// [`resize_default`].\n     ///\n     /// # Examples\n     ///\n@@ -1227,6 +1228,8 @@ impl<T: Clone> Vec<T> {\n     /// assert_eq!(vec, [1, 2]);\n     /// ```\n     ///\n+    /// [`Clone`]: ../../std/clone/trait.Clone.html\n+    /// [`Default`]: ../../std/default/trait.Default.html\n     /// [`resize_default`]: #method.resize_default\n     #[stable(feature = \"vec_resize\", since = \"1.5.0\")]\n     pub fn resize(&mut self, new_len: usize, value: T) {\n@@ -1244,7 +1247,7 @@ impl<T: Clone> Vec<T> {\n     /// Iterates over the slice `other`, clones each element, and then appends\n     /// it to this `Vec`. The `other` vector is traversed in-order.\n     ///\n-    /// Note that this function is same as `extend` except that it is\n+    /// Note that this function is same as [`extend`] except that it is\n     /// specialized to work with slices instead. If and when Rust gets\n     /// specialization this function will likely be deprecated (but still\n     /// available).\n@@ -1256,6 +1259,8 @@ impl<T: Clone> Vec<T> {\n     /// vec.extend_from_slice(&[2, 3, 4]);\n     /// assert_eq!(vec, [1, 2, 3, 4]);\n     /// ```\n+    ///\n+    /// [`extend`]: #method.extend\n     #[stable(feature = \"vec_extend_from_slice\", since = \"1.6.0\")]\n     pub fn extend_from_slice(&mut self, other: &[T]) {\n         self.spec_extend(other.iter())\n@@ -1266,12 +1271,11 @@ impl<T: Default> Vec<T> {\n     /// Resizes the `Vec` in-place so that `len` is equal to `new_len`.\n     ///\n     /// If `new_len` is greater than `len`, the `Vec` is extended by the\n-    /// difference, with each additional slot filled with `Default::default()`.\n+    /// difference, with each additional slot filled with [`Default::default()`].\n     /// If `new_len` is less than `len`, the `Vec` is simply truncated.\n     ///\n-    /// This method uses `Default` to create new values on every push. If\n-    /// you'd rather `Clone` a given value, use [`resize`].\n-    ///\n+    /// This method uses [`Default`] to create new values on every push. If\n+    /// you'd rather [`Clone`] a given value, use [`resize`].\n     ///\n     /// # Examples\n     ///\n@@ -1288,6 +1292,9 @@ impl<T: Default> Vec<T> {\n     /// ```\n     ///\n     /// [`resize`]: #method.resize\n+    /// [`Default::default()`]: ../../std/default/trait.Default.html#tymethod.default\n+    /// [`Default`]: ../../std/default/trait.Default.html\n+    /// [`Clone`]: ../../std/clone/trait.Clone.html\n     #[unstable(feature = \"vec_resize_default\", issue = \"41758\")]\n     pub fn resize_default(&mut self, new_len: usize) {\n         let len = self.len();"}]}