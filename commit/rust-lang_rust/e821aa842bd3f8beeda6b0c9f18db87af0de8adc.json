{"sha": "e821aa842bd3f8beeda6b0c9f18db87af0de8adc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MjFhYTg0MmJkM2Y4YmVlZGE2YjBjOWYxOGRiODdhZjBkZThhZGM=", "commit": {"author": {"name": "Daniel Fox Franke", "email": "dfoxfranke@gmail.com", "date": "2020-10-15T18:22:36Z"}, "committer": {"name": "Daniel Fox Franke", "email": "dfoxfranke@gmail.com", "date": "2020-10-15T18:22:36Z"}, "message": "Follow symlinks when walking project trees\n\nFixes #3691", "tree": {"sha": "4f0f3bde2b4e2f67f1738567f959b6b2db13277a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f0f3bde2b4e2f67f1738567f959b6b2db13277a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e821aa842bd3f8beeda6b0c9f18db87af0de8adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e821aa842bd3f8beeda6b0c9f18db87af0de8adc", "html_url": "https://github.com/rust-lang/rust/commit/e821aa842bd3f8beeda6b0c9f18db87af0de8adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e821aa842bd3f8beeda6b0c9f18db87af0de8adc/comments", "author": {"login": "dfoxfranke", "id": 4708206, "node_id": "MDQ6VXNlcjQ3MDgyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4708206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfoxfranke", "html_url": "https://github.com/dfoxfranke", "followers_url": "https://api.github.com/users/dfoxfranke/followers", "following_url": "https://api.github.com/users/dfoxfranke/following{/other_user}", "gists_url": "https://api.github.com/users/dfoxfranke/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfoxfranke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfoxfranke/subscriptions", "organizations_url": "https://api.github.com/users/dfoxfranke/orgs", "repos_url": "https://api.github.com/users/dfoxfranke/repos", "events_url": "https://api.github.com/users/dfoxfranke/events{/privacy}", "received_events_url": "https://api.github.com/users/dfoxfranke/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dfoxfranke", "id": 4708206, "node_id": "MDQ6VXNlcjQ3MDgyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4708206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfoxfranke", "html_url": "https://github.com/dfoxfranke", "followers_url": "https://api.github.com/users/dfoxfranke/followers", "following_url": "https://api.github.com/users/dfoxfranke/following{/other_user}", "gists_url": "https://api.github.com/users/dfoxfranke/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfoxfranke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfoxfranke/subscriptions", "organizations_url": "https://api.github.com/users/dfoxfranke/orgs", "repos_url": "https://api.github.com/users/dfoxfranke/repos", "events_url": "https://api.github.com/users/dfoxfranke/events{/privacy}", "received_events_url": "https://api.github.com/users/dfoxfranke/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84d6cdef86dfe1054ecafaedfddbf90a2b3a469d", "url": "https://api.github.com/repos/rust-lang/rust/commits/84d6cdef86dfe1054ecafaedfddbf90a2b3a469d", "html_url": "https://github.com/rust-lang/rust/commit/84d6cdef86dfe1054ecafaedfddbf90a2b3a469d"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "c605bcf3c825ff195790e9ea839a535af44e3084", "filename": "crates/vfs-notify/src/lib.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e821aa842bd3f8beeda6b0c9f18db87af0de8adc/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e821aa842bd3f8beeda6b0c9f18db87af0de8adc/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs-notify%2Fsrc%2Flib.rs?ref=e821aa842bd3f8beeda6b0c9f18db87af0de8adc", "patch": "@@ -165,14 +165,15 @@ impl NotifyActor {\n                 let mut res = Vec::new();\n \n                 for root in dirs.include.iter() {\n-                    let walkdir = WalkDir::new(root).into_iter().filter_entry(|entry| {\n-                        if !entry.file_type().is_dir() {\n-                            return true;\n-                        }\n-                        let path = AbsPath::assert(entry.path());\n-                        root == path\n-                            || dirs.exclude.iter().chain(&dirs.include).all(|it| it != path)\n-                    });\n+                    let walkdir =\n+                        WalkDir::new(root).follow_links(true).into_iter().filter_entry(|entry| {\n+                            if !entry.file_type().is_dir() {\n+                                return true;\n+                            }\n+                            let path = AbsPath::assert(entry.path());\n+                            root == path\n+                                || dirs.exclude.iter().chain(&dirs.include).all(|it| it != path)\n+                        });\n \n                     let files = walkdir.filter_map(|it| it.ok()).filter_map(|entry| {\n                         let is_dir = entry.file_type().is_dir();"}]}