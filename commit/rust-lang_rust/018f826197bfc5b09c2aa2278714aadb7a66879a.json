{"sha": "018f826197bfc5b09c2aa2278714aadb7a66879a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOGY4MjYxOTdiZmM1YjA5YzJhYTIyNzg3MTRhYWRiN2E2Njg3OWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-09T13:22:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-09T13:44:08Z"}, "message": "Support multi-file assist tests", "tree": {"sha": "8dccaadbf1fc9e012a4c7b2293adaa778584fe33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dccaadbf1fc9e012a4c7b2293adaa778584fe33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/018f826197bfc5b09c2aa2278714aadb7a66879a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/018f826197bfc5b09c2aa2278714aadb7a66879a", "html_url": "https://github.com/rust-lang/rust/commit/018f826197bfc5b09c2aa2278714aadb7a66879a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/018f826197bfc5b09c2aa2278714aadb7a66879a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e72cd4600e4c9633673998e03ad639c5e674737d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e72cd4600e4c9633673998e03ad639c5e674737d", "html_url": "https://github.com/rust-lang/rust/commit/e72cd4600e4c9633673998e03ad639c5e674737d"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "58aadcef73ddbc9d74d8552d2a4e5b3cdb2b7d28", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/018f826197bfc5b09c2aa2278714aadb7a66879a/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018f826197bfc5b09c2aa2278714aadb7a66879a/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=018f826197bfc5b09c2aa2278714aadb7a66879a", "patch": "@@ -345,6 +345,43 @@ fn another_fn() {\n         );\n     }\n \n+    #[test]\n+    fn test_several_files() {\n+        check_assist(\n+            extract_struct_from_enum_variant,\n+            r#\"\n+//- /main.rs\n+enum E {\n+    <|>V(i32, i32)\n+}\n+mod foo;\n+\n+//- /foo.rs\n+use crate::E;\n+fn f() {\n+    let e = E::V(9, 2);\n+}\n+\"#,\n+            r#\"\n+//- /main.rs\n+struct V(pub i32, pub i32);\n+\n+enum E {\n+    V(V)\n+}\n+mod foo;\n+\n+//- /foo.rs\n+use V;\n+\n+use crate::E;\n+fn f() {\n+    let e = E::V(V(9, 2));\n+}\n+\"#,\n+        )\n+    }\n+\n     fn check_not_applicable(ra_fixture: &str) {\n         let fixture =\n             format!(\"//- /main.rs crate:main deps:core\\n{}\\n{}\", ra_fixture, FamousDefs::FIXTURE);"}, {"sha": "709a34d03aabc1c3b218a1bb378b7082a1e8c0f5", "filename": "crates/assists/src/tests.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/018f826197bfc5b09c2aa2278714aadb7a66879a/crates%2Fassists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018f826197bfc5b09c2aa2278714aadb7a66879a/crates%2Fassists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Ftests.rs?ref=018f826197bfc5b09c2aa2278714aadb7a66879a", "patch": "@@ -7,7 +7,7 @@ use syntax::TextRange;\n use test_utils::{assert_eq_text, extract_offset, extract_range};\n \n use crate::{handlers::Handler, Assist, AssistConfig, AssistContext, AssistKind, Assists};\n-use stdx::trim_indent;\n+use stdx::{format_to, trim_indent};\n \n pub(crate) fn with_single_file(text: &str) -> (RootDatabase, FileId) {\n     RootDatabase::with_single_file(text)\n@@ -98,11 +98,24 @@ fn check(handler: Handler, before: &str, expected: ExpectedResult, assist_label:\n     match (assist, expected) {\n         (Some(assist), ExpectedResult::After(after)) => {\n             let mut source_change = assist.source_change;\n-            let change = source_change.source_file_edits.pop().unwrap();\n-\n-            let mut actual = db.file_text(change.file_id).as_ref().to_owned();\n-            change.edit.apply(&mut actual);\n-            assert_eq_text!(after, &actual);\n+            assert!(!source_change.source_file_edits.is_empty());\n+            let skip_header = source_change.source_file_edits.len() == 1;\n+            source_change.source_file_edits.sort_by_key(|it| it.file_id);\n+\n+            let mut buf = String::new();\n+            for source_file_edit in source_change.source_file_edits {\n+                let mut text = db.file_text(source_file_edit.file_id).as_ref().to_owned();\n+                source_file_edit.edit.apply(&mut text);\n+                if !skip_header {\n+                    let sr = db.file_source_root(source_file_edit.file_id);\n+                    let sr = db.source_root(sr);\n+                    let path = sr.path_for_file(&source_file_edit.file_id).unwrap();\n+                    format_to!(buf, \"//- {}\\n\", path)\n+                }\n+                buf.push_str(&text);\n+            }\n+\n+            assert_eq_text!(after, &buf);\n         }\n         (Some(assist), ExpectedResult::Target(target)) => {\n             let range = assist.assist.target;"}]}