{"sha": "241085a073805447c0ad1b55525faaddcd00bedc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MTA4NWEwNzM4MDU0NDdjMGFkMWI1NTUyNWZhYWRkY2QwMGJlZGM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-03T20:18:46Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-03T20:36:28Z"}, "message": "Fix signed/unsigned bug, likely cause of windows crash.", "tree": {"sha": "b501c0fdec99f14d63323ccf149eb64ab1fd426a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b501c0fdec99f14d63323ccf149eb64ab1fd426a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/241085a073805447c0ad1b55525faaddcd00bedc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/241085a073805447c0ad1b55525faaddcd00bedc", "html_url": "https://github.com/rust-lang/rust/commit/241085a073805447c0ad1b55525faaddcd00bedc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/241085a073805447c0ad1b55525faaddcd00bedc/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c06e7aac9010ced3a02e9d3388646278fdbd980", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c06e7aac9010ced3a02e9d3388646278fdbd980", "html_url": "https://github.com/rust-lang/rust/commit/2c06e7aac9010ced3a02e9d3388646278fdbd980"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "521a7b9f89843c2acff4ea3f420f950e2c264fb7", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/241085a073805447c0ad1b55525faaddcd00bedc/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/241085a073805447c0ad1b55525faaddcd00bedc/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=241085a073805447c0ad1b55525faaddcd00bedc", "patch": "@@ -955,7 +955,7 @@ fn encode_index<T>(ebml_w: ebml::writer, buckets: ~[@~[entry<T>]],\n         ebml_w.start_tag(tag_index_buckets_bucket);\n         for vec::each(*bucket) |elt| {\n             ebml_w.start_tag(tag_index_buckets_bucket_elt);\n-            assert elt.pos < (u32::max_value as uint);\n+            assert elt.pos < 0xffff_ffff;\n             writer.write_be_u32(elt.pos as u32);\n             write_fn(writer, elt.val);\n             ebml_w.end_tag();\n@@ -965,7 +965,7 @@ fn encode_index<T>(ebml_w: ebml::writer, buckets: ~[@~[entry<T>]],\n     ebml_w.end_tag();\n     ebml_w.start_tag(tag_index_table);\n     for bucket_locs.each |pos| {\n-        assert pos < (u32::max_value as uint);\n+        assert pos < 0xffff_ffff;\n         writer.write_be_u32(pos as u32);\n     }\n     ebml_w.end_tag();\n@@ -975,7 +975,7 @@ fn encode_index<T>(ebml_w: ebml::writer, buckets: ~[@~[entry<T>]],\n fn write_str(writer: io::writer, &&s: ~str) { writer.write_str(s); }\n \n fn write_int(writer: io::writer, &&n: int) {\n-    assert n < (u32::max_value as int);\n+    assert n < 0x7fff_ffff;\n     writer.write_be_u32(n as u32);\n }\n "}]}