{"sha": "ef4401d4acf2eb1e125b9dd01d1baef195e2f53b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNDQwMWQ0YWNmMmViMWUxMjViOWRkMDFkMWJhZWYxOTVlMmY1M2I=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-20T16:35:07Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-20T16:46:20Z"}, "message": "Lint about usage of `format!(\"string literal\")`", "tree": {"sha": "3724a5bc7ca2cacb4df3304a883f8aca4385281b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3724a5bc7ca2cacb4df3304a883f8aca4385281b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b", "html_url": "https://github.com/rust-lang/rust/commit/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "222086d62b2c22e59eab82f03f4d08e3cb9bd6ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/222086d62b2c22e59eab82f03f4d08e3cb9bd6ae", "html_url": "https://github.com/rust-lang/rust/commit/222086d62b2c22e59eab82f03f4d08e3cb9bd6ae"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "62d6695b24d2c8b3e0bb33c7666612325fe16610", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=ef4401d4acf2eb1e125b9dd01d1baef195e2f53b", "patch": "@@ -8,7 +8,7 @@ A collection of lints to catch common mistakes and improve your Rust code.\n [Jump to usage instructions](#usage)\n \n ##Lints\n-There are 122 lints included in this crate:\n+There are 123 lints included in this crate:\n \n name                                                                                                           | default | meaning\n ---------------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -126,6 +126,7 @@ name\n [unused_lifetimes](https://github.com/Manishearth/rust-clippy/wiki#unused_lifetimes)                           | warn    | unused lifetimes in function definitions\n [use_debug](https://github.com/Manishearth/rust-clippy/wiki#use_debug)                                         | allow   | use `Debug`-based formatting\n [used_underscore_binding](https://github.com/Manishearth/rust-clippy/wiki#used_underscore_binding)             | warn    | using a binding which is prefixed with an underscore\n+[useless_format](https://github.com/Manishearth/rust-clippy/wiki#useless_format)                               | warn    | useless use of `format!`\n [useless_transmute](https://github.com/Manishearth/rust-clippy/wiki#useless_transmute)                         | warn    | transmutes that have the same to and from types\n [useless_vec](https://github.com/Manishearth/rust-clippy/wiki#useless_vec)                                     | warn    | useless `vec!`\n [while_let_loop](https://github.com/Manishearth/rust-clippy/wiki#while_let_loop)                               | warn    | `loop { if let { ... } else break }` can be written as a `while let` loop"}, {"sha": "ad72b38e1107b582aa8bbcb0497cfc34b7f2a1ab", "filename": "src/format.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/src%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/src%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformat.rs?ref=ef4401d4acf2eb1e125b9dd01d1baef195e2f53b", "patch": "@@ -0,0 +1,40 @@\n+use rustc::lint::*;\n+use rustc_front::hir::*;\n+use utils::{is_expn_of, span_lint};\n+\n+/// **What it does:** This lints about use of `format!(\"string literal with no argument\")`.\n+///\n+/// **Why is this bad?** There is no point of doing that. If you want a `String` you can use\n+/// `to_owned` on the string literal. The even worst `&format!(\"foo\")` is often encountered in the\n+/// wild.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:** `format!(\"foo\")`\n+declare_lint! {\n+    pub USELESS_FORMAT,\n+    Warn,\n+    \"useless use of `format!`\"\n+}\n+\n+#[derive(Copy, Clone, Debug)]\n+pub struct FormatMacLint;\n+\n+impl LintPass for FormatMacLint {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array![USELESS_FORMAT]\n+    }\n+}\n+\n+impl LateLintPass for FormatMacLint {\n+    fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n+        // `format!(\"foo\")` expansion contains `match () { () => [], }`\n+        if let ExprMatch(ref matchee, _, _) = expr.node {\n+            if let ExprTup(ref tup) = matchee.node {\n+                if tup.is_empty() && is_expn_of(cx, expr.span, \"format\").is_some() {\n+                    span_lint(cx, USELESS_FORMAT, expr.span, &\"useless use of `format!`\");\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "b690a5cf45eb649ae819a0a6ed4c159ad89909bc", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ef4401d4acf2eb1e125b9dd01d1baef195e2f53b", "patch": "@@ -163,6 +163,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_late_lint_pass(box types::AbsurdExtremeComparisons);\n     reg.register_late_lint_pass(box regex::RegexPass::default());\n     reg.register_late_lint_pass(box copies::CopyAndPaste);\n+    reg.register_late_lint_pass(box format::FormatMacLint);\n \n     reg.register_lint_group(\"clippy_pedantic\", vec![\n         enum_glob_use::ENUM_GLOB_USE,\n@@ -209,6 +210,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         eq_op::EQ_OP,\n         escape::BOXED_LOCAL,\n         eta_reduction::REDUNDANT_CLOSURE,\n+        format::USELESS_FORMAT,\n         identity_op::IDENTITY_OP,\n         items_after_statements::ITEMS_AFTER_STATEMENTS,\n         len_zero::LEN_WITHOUT_IS_EMPTY,"}, {"sha": "6cdceefd063e2eb89de0d4b68e8d246d467e3691", "filename": "tests/compile-fail/format.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/tests%2Fcompile-fail%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4401d4acf2eb1e125b9dd01d1baef195e2f53b/tests%2Fcompile-fail%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fformat.rs?ref=ef4401d4acf2eb1e125b9dd01d1baef195e2f53b", "patch": "@@ -0,0 +1,11 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#![deny(useless_format)]\n+\n+fn main() {\n+    format!(\"foo\"); //~ERROR useless use of `format!`\n+    format!(\"foo {}\", 42);\n+\n+    println!(\"foo\");\n+    println!(\"foo {}\", 42);\n+}"}]}