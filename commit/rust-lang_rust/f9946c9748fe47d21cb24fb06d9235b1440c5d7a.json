{"sha": "f9946c9748fe47d21cb24fb06d9235b1440c5d7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5OTQ2Yzk3NDhmZTQ3ZDIxY2IyNGZiMDZkOTIzNWIxNDQwYzVkN2E=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-24T23:39:30Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-24T23:39:30Z"}, "message": "Dead code.", "tree": {"sha": "84abeb6e181d510fc543e32adb24f56572c89f1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84abeb6e181d510fc543e32adb24f56572c89f1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9946c9748fe47d21cb24fb06d9235b1440c5d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9946c9748fe47d21cb24fb06d9235b1440c5d7a", "html_url": "https://github.com/rust-lang/rust/commit/f9946c9748fe47d21cb24fb06d9235b1440c5d7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9946c9748fe47d21cb24fb06d9235b1440c5d7a/comments", "author": null, "committer": null, "parents": [{"sha": "40a3923fca653236120191b8851b42b457e0ed7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/40a3923fca653236120191b8851b42b457e0ed7d", "html_url": "https://github.com/rust-lang/rust/commit/40a3923fca653236120191b8851b42b457e0ed7d"}], "stats": {"total": 49, "additions": 0, "deletions": 49}, "files": [{"sha": "69661837183404e879d1ec74a293d991d1144571", "filename": "src/etc/x86.supp", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f9946c9748fe47d21cb24fb06d9235b1440c5d7a/src%2Fetc%2Fx86.supp", "raw_url": "https://github.com/rust-lang/rust/raw/f9946c9748fe47d21cb24fb06d9235b1440c5d7a/src%2Fetc%2Fx86.supp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fx86.supp?ref=f9946c9748fe47d21cb24fb06d9235b1440c5d7a", "patch": "@@ -34,7 +34,6 @@\n    fun:_ZN16rust_crate_cache3libC1EP8rust_domPKc\n    fun:_ZN16rust_crate_cache7get_libEmPKc\n    fun:_ZL11fetch_c_symP9rust_taskPK10rust_cratemmPKcS5_\n-   fun:upcall_require_c_sym\n }\n \n {\n@@ -49,7 +48,6 @@\n    fun:_ZN16rust_crate_cache3libC1EP8rust_domPKc\n    fun:_ZN16rust_crate_cache7get_libEmPKc\n    fun:_ZL11fetch_c_symP9rust_taskPK10rust_cratemmPKcS5_\n-   fun:upcall_require_c_sym\n }\n \n {\n@@ -64,7 +62,6 @@\n    fun:_ZN16rust_crate_cache3libC1EP8rust_domPKc\n    fun:_ZN16rust_crate_cache7get_libEmPKc\n    fun:_ZL11fetch_c_symP9rust_taskPK10rust_cratemmPKcS5_\n-   fun:upcall_require_c_sym\n }\n \n {\n@@ -80,7 +77,6 @@\n    fun:_ZN16rust_crate_cache3libC1EP8rust_domPKc\n    fun:_ZN16rust_crate_cache7get_libEmPKc\n    fun:_ZL11fetch_c_symP9rust_taskPK10rust_cratemmPKcS5_\n-   fun:upcall_require_c_sym\n }\n \n {\n@@ -97,7 +93,6 @@\n    fun:_ZN16rust_crate_cache3libC1EP8rust_domPKc\n    fun:_ZN16rust_crate_cache7get_libEmPKc\n    fun:_ZL11fetch_c_symP9rust_taskPK10rust_cratemmPKcS5_\n-   fun:upcall_require_c_sym\n }\n \n {\n@@ -114,6 +109,5 @@\n    fun:_ZN16rust_crate_cache3libC1EP8rust_domPKc\n    fun:_ZN16rust_crate_cache7get_libEmPKc\n    fun:_ZL11fetch_c_symP9rust_taskPK10rust_cratemmPKcS5_\n-   fun:upcall_require_c_sym\n }\n "}, {"sha": "1b0a0e44b1c3a5ad7828a8200df270c61a03a7f0", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f9946c9748fe47d21cb24fb06d9235b1440c5d7a/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f9946c9748fe47d21cb24fb06d9235b1440c5d7a/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=f9946c9748fe47d21cb24fb06d9235b1440c5d7a", "patch": "@@ -436,48 +436,6 @@ upcall_vec_grow(rust_task *task,\n     return v;\n }\n \n-static rust_crate_cache::c_sym *\n-fetch_c_sym(rust_task *task,\n-            rust_crate const *curr_crate,\n-            size_t lib_num,\n-            size_t c_sym_num,\n-            char const *library,\n-            char const *symbol) {\n-    rust_crate_cache *cache = task->get_crate_cache(curr_crate);\n-    rust_crate_cache::lib *l = cache->get_lib(lib_num, library);\n-    return cache->get_c_sym(c_sym_num, l, symbol);\n-}\n-\n-extern \"C\" CDECL uintptr_t\n-upcall_require_c_sym(rust_task *task,\n-                     rust_crate const *curr_crate,\n-                     size_t lib_num, // # of lib\n-                     size_t c_sym_num, // # of C sym\n-                     char const *library,\n-                     char const *symbol) {\n-    LOG_UPCALL_ENTRY(task);\n-\n-    LOG(task, cache, \"upcall require c sym: lib #%\" PRIdPTR\n-        \" = %s, c_sym #%\" PRIdPTR\n-        \" = %s\"\n-        \", curr_crate = 0x%\" PRIxPTR, lib_num, library, c_sym_num,\n-        symbol, curr_crate);\n-\n-    rust_crate_cache::c_sym *c = fetch_c_sym(task, curr_crate, lib_num,\n-                                             c_sym_num, library, symbol);\n-\n-    uintptr_t addr = c->get_val();\n-    if (addr) {\n-        LOG(task, cache,\n-                  \"found-or-cached addr: 0x%\" PRIxPTR, addr);\n-    } else {\n-        LOG_ERR(task, cache, \"failed to resolve symbol %s in %s\",\n-                symbol, library);\n-        task->fail(6);\n-    }\n-    return addr;\n-}\n-\n extern \"C\" CDECL type_desc *\n upcall_get_type_desc(rust_task *task,\n                      rust_crate const *curr_crate,"}, {"sha": "baeac899f2499fdcb8d78a15d6d0404023636874", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f9946c9748fe47d21cb24fb06d9235b1440c5d7a/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/f9946c9748fe47d21cb24fb06d9235b1440c5d7a/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=f9946c9748fe47d21cb24fb06d9235b1440c5d7a", "patch": "@@ -61,7 +61,6 @@ upcall_new_task\n upcall_new_thread\n upcall_new_vec\n upcall_recv\n-upcall_require_c_sym\n upcall_send\n upcall_sleep\n upcall_start_task"}]}