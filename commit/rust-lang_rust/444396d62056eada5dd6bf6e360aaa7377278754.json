{"sha": "444396d62056eada5dd6bf6e360aaa7377278754", "node_id": "C_kwDOAAsO6NoAKDQ0NDM5NmQ2MjA1NmVhZGE1ZGQ2YmY2ZTM2MGFhYTczNzcyNzg3NTQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-02-24T15:55:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-02-24T15:55:40Z"}, "message": "rustup", "tree": {"sha": "fb180ac9685b89a9c6242ac628d03afc88f25d76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb180ac9685b89a9c6242ac628d03afc88f25d76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/444396d62056eada5dd6bf6e360aaa7377278754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/444396d62056eada5dd6bf6e360aaa7377278754", "html_url": "https://github.com/rust-lang/rust/commit/444396d62056eada5dd6bf6e360aaa7377278754", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/444396d62056eada5dd6bf6e360aaa7377278754/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a39eeb7647c9e9af7b20cf4454a9b87d83f7633", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a39eeb7647c9e9af7b20cf4454a9b87d83f7633", "html_url": "https://github.com/rust-lang/rust/commit/6a39eeb7647c9e9af7b20cf4454a9b87d83f7633"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "903f326d3fbdd9fe018243fe92ed449e6765092e", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/444396d62056eada5dd6bf6e360aaa7377278754/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/444396d62056eada5dd6bf6e360aaa7377278754/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=444396d62056eada5dd6bf6e360aaa7377278754", "patch": "@@ -1 +1 @@\n-b8967b0d52a2ba5f0c9da0da03e78ccba5534e4a\n+3d127e2040b57157936f5f24e114a8b4c9a505ef"}, {"sha": "5230e7fdf52975ca1f0d57287fbe24d5fed48b95", "filename": "tests/compile-fail/validity/execute_memory.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6a39eeb7647c9e9af7b20cf4454a9b87d83f7633/tests%2Fcompile-fail%2Fvalidity%2Fexecute_memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a39eeb7647c9e9af7b20cf4454a9b87d83f7633/tests%2Fcompile-fail%2Fvalidity%2Fexecute_memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Fexecute_memory.rs?ref=6a39eeb7647c9e9af7b20cf4454a9b87d83f7633", "patch": "@@ -1,8 +0,0 @@\n-#![feature(box_syntax)]\n-\n-fn main() {\n-    let x = box 42;\n-    unsafe {\n-        let _f = std::mem::transmute::<Box<i32>, fn()>(x); //~ ERROR expected a function pointer\n-    }\n-}"}, {"sha": "27d8c830ce9046f9aac04ce81bca33dd8664e1c6", "filename": "tests/compile-fail/validity/fn_ptr_offset.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/444396d62056eada5dd6bf6e360aaa7377278754/tests%2Fcompile-fail%2Fvalidity%2Ffn_ptr_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/444396d62056eada5dd6bf6e360aaa7377278754/tests%2Fcompile-fail%2Fvalidity%2Ffn_ptr_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Ffn_ptr_offset.rs?ref=444396d62056eada5dd6bf6e360aaa7377278754", "patch": "@@ -6,5 +6,5 @@ fn main() {\n     let x : fn() = f;\n     let y : *mut u8 = unsafe { mem::transmute(x) };\n     let y = y.wrapping_offset(1);\n-    let _x : fn() = unsafe { mem::transmute(y) }; //~ ERROR expected a function pointer\n+    let _x : fn() = unsafe { mem::transmute(y) }; //~ ERROR encountered a potentially null function pointer\n }"}, {"sha": "2270740fe1495c5465e2715c66ef16ceeb44d3fe", "filename": "tests/compile-fail/validity/invalid_fnptr_null.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/444396d62056eada5dd6bf6e360aaa7377278754/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/444396d62056eada5dd6bf6e360aaa7377278754/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_null.rs?ref=444396d62056eada5dd6bf6e360aaa7377278754", "patch": "@@ -0,0 +1,5 @@\n+#![allow(invalid_value)]\n+\n+fn main() {\n+    let _b: fn() = unsafe { std::mem::transmute(0usize) }; //~ ERROR encountered a potentially null function pointer\n+}"}, {"sha": "2d479dd319f3daf486e1f00ed1934b49a54c3275", "filename": "tests/compile-fail/validity/invalid_fnptr_uninit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/444396d62056eada5dd6bf6e360aaa7377278754/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/444396d62056eada5dd6bf6e360aaa7377278754/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_uninit.rs?ref=444396d62056eada5dd6bf6e360aaa7377278754", "patch": "@@ -6,5 +6,5 @@ union MyUninit {\n }\n \n fn main() {\n-    let _b = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes, but expected a function pointer\n+    let _b = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes\n }"}, {"sha": "dcef1fa221dcba4a8078da8165e84e5e0eb030a5", "filename": "tests/run-pass/function_pointers.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/444396d62056eada5dd6bf6e360aaa7377278754/tests%2Frun-pass%2Ffunction_pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/444396d62056eada5dd6bf6e360aaa7377278754/tests%2Frun-pass%2Ffunction_pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_pointers.rs?ref=444396d62056eada5dd6bf6e360aaa7377278754", "patch": "@@ -1,3 +1,5 @@\n+use std::mem;\n+\n trait Answer {\n     fn answer() -> Self;\n }\n@@ -56,4 +58,13 @@ fn main() {\n     assert!(return_fn_ptr(g) == g);\n     assert!(return_fn_ptr(g) as unsafe fn() -> i32 == g as fn() -> i32 as unsafe fn() -> i32);\n     assert!(return_fn_ptr(f) != f);\n+\n+    // Any non-null value is okay for function pointers.\n+    unsafe {\n+        let _x: fn() = mem::transmute(1usize);\n+        let mut b = Box::new(42);\n+        let ptr = &mut *b as *mut _;\n+        drop(b);\n+        let _x: fn() = mem::transmute(ptr);\n+    }\n }"}]}