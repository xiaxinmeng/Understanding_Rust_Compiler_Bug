{"sha": "6153ea8dce1dcd60ecff446332c2639be8a6b452", "node_id": "C_kwDOAAsO6NoAKDYxNTNlYThkY2UxZGNkNjBlY2ZmNDQ2MzMyYzI2MzliZThhNmI0NTI", "commit": {"author": {"name": "Daniel Eades", "email": "danieleades@hotmail.com", "date": "2023-01-10T08:28:28Z"}, "committer": {"name": "Daniel Eades", "email": "danieleades@hotmail.com", "date": "2023-01-10T08:28:28Z"}, "message": "loop-that-never-loops", "tree": {"sha": "0e1080396669639500d3df9d7c1ce4c11c7a16d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e1080396669639500d3df9d7c1ce4c11c7a16d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6153ea8dce1dcd60ecff446332c2639be8a6b452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6153ea8dce1dcd60ecff446332c2639be8a6b452", "html_url": "https://github.com/rust-lang/rust/commit/6153ea8dce1dcd60ecff446332c2639be8a6b452", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6153ea8dce1dcd60ecff446332c2639be8a6b452/comments", "author": {"login": "danieleades", "id": 33452915, "node_id": "MDQ6VXNlcjMzNDUyOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/33452915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieleades", "html_url": "https://github.com/danieleades", "followers_url": "https://api.github.com/users/danieleades/followers", "following_url": "https://api.github.com/users/danieleades/following{/other_user}", "gists_url": "https://api.github.com/users/danieleades/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieleades/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieleades/subscriptions", "organizations_url": "https://api.github.com/users/danieleades/orgs", "repos_url": "https://api.github.com/users/danieleades/repos", "events_url": "https://api.github.com/users/danieleades/events{/privacy}", "received_events_url": "https://api.github.com/users/danieleades/received_events", "type": "User", "site_admin": false}, "committer": {"login": "danieleades", "id": 33452915, "node_id": "MDQ6VXNlcjMzNDUyOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/33452915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieleades", "html_url": "https://github.com/danieleades", "followers_url": "https://api.github.com/users/danieleades/followers", "following_url": "https://api.github.com/users/danieleades/following{/other_user}", "gists_url": "https://api.github.com/users/danieleades/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieleades/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieleades/subscriptions", "organizations_url": "https://api.github.com/users/danieleades/orgs", "repos_url": "https://api.github.com/users/danieleades/repos", "events_url": "https://api.github.com/users/danieleades/events{/privacy}", "received_events_url": "https://api.github.com/users/danieleades/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "368e0bb32f1178cf162c2ce5f7e10b7ae211eb26", "url": "https://api.github.com/repos/rust-lang/rust/commits/368e0bb32f1178cf162c2ce5f7e10b7ae211eb26", "html_url": "https://github.com/rust-lang/rust/commit/368e0bb32f1178cf162c2ce5f7e10b7ae211eb26"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "fb1e72b0d0d81a914281a24def70c55c4d515398", "filename": "crates/hir-def/src/attr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6153ea8dce1dcd60ecff446332c2639be8a6b452/crates%2Fhir-def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6153ea8dce1dcd60ecff446332c2639be8a6b452/crates%2Fhir-def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fattr.rs?ref=6153ea8dce1dcd60ecff446332c2639be8a6b452", "patch": "@@ -251,17 +251,17 @@ impl Attrs {\n                 let enum_ = &item_tree[loc.id.value];\n \n                 let cfg_options = &crate_graph[krate].cfg_options;\n-                let variant = 'tri: loop {\n-                    let mut idx = 0;\n-                    for variant in enum_.variants.clone() {\n-                        let attrs = item_tree.attrs(db, krate, variant.into());\n-                        if attrs.is_cfg_enabled(cfg_options) {\n-                            if it.local_id == Idx::from_raw(RawIdx::from(idx)) {\n-                                break 'tri variant;\n-                            }\n-                            idx += 1;\n+                let mut idx = 0;\n+                let Some(variant) = enum_.variants.clone().find(|variant| {\n+                    let attrs = item_tree.attrs(db, krate, (*variant).into());\n+                    if attrs.is_cfg_enabled(cfg_options) {\n+                        if it.local_id == Idx::from_raw(RawIdx::from(idx)) {\n+                            return true\n                         }\n+                        idx += 1;\n                     }\n+                    false\n+                }) else {\n                     return Arc::new(res);\n                 };\n                 (item_tree[variant].fields.clone(), item_tree, krate)"}]}