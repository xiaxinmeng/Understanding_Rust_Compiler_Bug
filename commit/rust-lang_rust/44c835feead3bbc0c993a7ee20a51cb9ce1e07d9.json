{"sha": "44c835feead3bbc0c993a7ee20a51cb9ce1e07d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YzgzNWZlZWFkM2JiYzBjOTkzYTdlZTIwYTUxY2I5Y2UxZTA3ZDk=", "commit": {"author": {"name": "Unknown", "email": "dobbybabee@gmail.com", "date": "2019-01-19T22:35:32Z"}, "committer": {"name": "unknown", "email": "unknown@example.com", "date": "2019-02-01T18:21:19Z"}, "message": "Skipping check if in external macro.", "tree": {"sha": "2e0cc7a2e41340d2e05fdfd2a205689b0162b411", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e0cc7a2e41340d2e05fdfd2a205689b0162b411"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44c835feead3bbc0c993a7ee20a51cb9ce1e07d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44c835feead3bbc0c993a7ee20a51cb9ce1e07d9", "html_url": "https://github.com/rust-lang/rust/commit/44c835feead3bbc0c993a7ee20a51cb9ce1e07d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44c835feead3bbc0c993a7ee20a51cb9ce1e07d9/comments", "author": null, "committer": null, "parents": [{"sha": "02456208b413c5bc2854a2b54bb5691eacd82813", "url": "https://api.github.com/repos/rust-lang/rust/commits/02456208b413c5bc2854a2b54bb5691eacd82813", "html_url": "https://github.com/rust-lang/rust/commit/02456208b413c5bc2854a2b54bb5691eacd82813"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "0da7e26a1be40ec9f87a360a460fbc6ea72a7d32", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/44c835feead3bbc0c993a7ee20a51cb9ce1e07d9/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44c835feead3bbc0c993a7ee20a51cb9ce1e07d9/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=44c835feead3bbc0c993a7ee20a51cb9ce1e07d9", "patch": "@@ -3,7 +3,7 @@ use matches::matches;\n use rustc::hir;\n use rustc::hir::def::Def;\n use rustc::hir::intravisit;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty;\n use rustc::{declare_tool_lint, lint_array};\n use rustc_data_structures::fx::FxHashSet;\n@@ -179,6 +179,10 @@ impl<'a, 'tcx> Functions {\n     }\n \n     fn check_line_number(self, cx: &LateContext<'_, '_>, span: Span) {\n+        if in_external_macro(cx.sess(), span) {\n+            return;\n+        }\n+\n         let code_snippet = snippet(cx, span, \"..\");\n         let mut line_count: u64 = 0;\n         let mut in_comment = false;"}]}