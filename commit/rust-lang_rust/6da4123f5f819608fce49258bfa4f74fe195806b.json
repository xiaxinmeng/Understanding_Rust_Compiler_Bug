{"sha": "6da4123f5f819608fce49258bfa4f74fe195806b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYTQxMjNmNWY4MTk2MDhmY2U0OTI1OGJmYTRmNzRmZTE5NTgwNmI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-05-11T14:18:23Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-05-13T14:43:32Z"}, "message": "rustc: don't keep a second reference to the HIR map in middle::region.", "tree": {"sha": "85d40def54bccac6a6d7bf5c177fc9f0888115f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85d40def54bccac6a6d7bf5c177fc9f0888115f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6da4123f5f819608fce49258bfa4f74fe195806b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6da4123f5f819608fce49258bfa4f74fe195806b", "html_url": "https://github.com/rust-lang/rust/commit/6da4123f5f819608fce49258bfa4f74fe195806b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6da4123f5f819608fce49258bfa4f74fe195806b/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1c6df81eecad62ca25191042b7871291162933", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea1c6df81eecad62ca25191042b7871291162933", "html_url": "https://github.com/rust-lang/rust/commit/ea1c6df81eecad62ca25191042b7871291162933"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "2d632e3feb5457de6b463f62e84160cb362f19ce", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/6da4123f5f819608fce49258bfa4f74fe195806b/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6da4123f5f819608fce49258bfa4f74fe195806b/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=6da4123f5f819608fce49258bfa4f74fe195806b", "patch": "@@ -264,12 +264,10 @@ struct RegionResolutionVisitor<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     // Generated maps:\n-    region_maps: &'a mut RegionMaps,\n+    region_maps: RegionMaps,\n \n     cx: Context,\n \n-    map: &'a hir_map::Map<'tcx>,\n-\n     /// `terminating_scopes` is a set containing the ids of each\n     /// statement, or conditional/repeating expression. These scopes\n     /// are calling \"terminating scopes\" because, when attempting to\n@@ -1105,7 +1103,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RegionResolutionVisitor<'a, 'tcx> {\n \n     fn visit_body(&mut self, body: &'tcx hir::Body) {\n         let body_id = body.id();\n-        let owner_id = self.map.body_owner(body_id);\n+        let owner_id = self.tcx.hir.body_owner(body_id);\n \n         debug!(\"visit_body(id={:?}, span={:?}, body.id={:?}, cx.parent={:?})\",\n                owner_id,\n@@ -1170,37 +1168,38 @@ fn region_maps<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId)\n         return tcx.region_maps(closure_base_def_id);\n     }\n \n-    let mut maps = RegionMaps::new();\n-\n     let id = tcx.hir.as_local_node_id(def_id).unwrap();\n-    if let Some(body) = tcx.hir.maybe_body_owned_by(id) {\n-        maps.root_body = Some(body);\n+    let maps = if let Some(body) = tcx.hir.maybe_body_owned_by(id) {\n+        let mut visitor = RegionResolutionVisitor {\n+            tcx,\n+            region_maps: RegionMaps::new(),\n+            cx: Context {\n+                root_id: None,\n+                parent: None,\n+                var_parent: None,\n+            },\n+            terminating_scopes: NodeSet(),\n+        };\n+\n+        visitor.region_maps.root_body = Some(body);\n \n         // If the item is an associated const or a method,\n         // record its impl/trait parent, as it can also have\n         // lifetime parameters free in this body.\n         match tcx.hir.get(id) {\n             hir::map::NodeImplItem(_) |\n             hir::map::NodeTraitItem(_) => {\n-                maps.root_parent = Some(tcx.hir.get_parent(id));\n+                visitor.region_maps.root_parent = Some(tcx.hir.get_parent(id));\n             }\n             _ => {}\n         }\n \n-        let mut visitor = RegionResolutionVisitor {\n-            tcx: tcx,\n-            region_maps: &mut maps,\n-            map: &tcx.hir,\n-            cx: Context {\n-                root_id: None,\n-                parent: None,\n-                var_parent: None,\n-            },\n-            terminating_scopes: NodeSet(),\n-        };\n-\n         visitor.visit_body(tcx.hir.body(body));\n-    }\n+\n+        visitor.region_maps\n+    } else {\n+        RegionMaps::new()\n+    };\n \n     Rc::new(maps)\n }"}]}