{"sha": "31691692a2907059ac2e7499d67b28ce6e788d77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNjkxNjkyYTI5MDcwNTlhYzJlNzQ5OWQ2N2IyOGNlNmU3ODhkNzc=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-15T17:39:29Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:02:51Z"}, "message": "Deduplicate store_operand_direct and store_operand", "tree": {"sha": "35bbda6b57753fcff5204e24d668bedf82fda700", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35bbda6b57753fcff5204e24d668bedf82fda700"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31691692a2907059ac2e7499d67b28ce6e788d77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31691692a2907059ac2e7499d67b28ce6e788d77", "html_url": "https://github.com/rust-lang/rust/commit/31691692a2907059ac2e7499d67b28ce6e788d77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31691692a2907059ac2e7499d67b28ce6e788d77/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6710af358051725342d4eec11e0c423aabd98511", "url": "https://api.github.com/repos/rust-lang/rust/commits/6710af358051725342d4eec11e0c423aabd98511", "html_url": "https://github.com/rust-lang/rust/commit/6710af358051725342d4eec11e0c423aabd98511"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "f52c08794629c93b523bf37c159eb7f18a0ae0f5", "filename": "src/librustc_trans/mir/operand.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/31691692a2907059ac2e7499d67b28ce6e788d77/src%2Flibrustc_trans%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31691692a2907059ac2e7499d67b28ce6e788d77/src%2Flibrustc_trans%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Foperand.rs?ref=31691692a2907059ac2e7499d67b28ce6e788d77", "patch": "@@ -244,17 +244,8 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n     pub fn store_operand(&mut self,\n                          bcx: &BlockAndBuilder<'bcx, 'tcx>,\n                          lldest: ValueRef,\n-                         operand: OperandRef<'tcx>)\n-    {\n-        debug!(\"store_operand: operand={:?} lldest={:?}\", operand, lldest);\n-        self.store_operand_direct(bcx, lldest, operand)\n-    }\n-\n-    pub fn store_operand_direct(&mut self,\n-                                bcx: &BlockAndBuilder<'bcx, 'tcx>,\n-                                lldest: ValueRef,\n-                                operand: OperandRef<'tcx>)\n-    {\n+                         operand: OperandRef<'tcx>) {\n+        debug!(\"store_operand: operand={:?}\", operand);\n         // Avoid generating stores of zero-sized values, because the only way to have a zero-sized\n         // value is through `undef`, and store itself is useless.\n         if common::type_is_zero_size(bcx.ccx(), operand.ty) {"}, {"sha": "5aba7160c2353d169bf43807ac812789a5a99094", "filename": "src/librustc_trans/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31691692a2907059ac2e7499d67b28ce6e788d77/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31691692a2907059ac2e7499d67b28ce6e788d77/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Frvalue.rs?ref=31691692a2907059ac2e7499d67b28ce6e788d77", "patch": "@@ -99,7 +99,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                 let size = C_uint(bcx.ccx(), size);\n                 let base = base::get_dataptr(&bcx, dest.llval);\n                 tvec::slice_for_each(&bcx, base, tr_elem.ty, size, |bcx, llslot| {\n-                    self.store_operand_direct(&bcx, llslot, tr_elem);\n+                    self.store_operand(&bcx, llslot, tr_elem);\n                 })\n             }\n "}]}