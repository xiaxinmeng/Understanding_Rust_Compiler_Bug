{"sha": "3e473b1aaa4adf205c4d825a35fcd7b74dad1518", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNDczYjFhYWE0YWRmMjA1YzRkODI1YTM1ZmNkN2I3NGRhZDE1MTg=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-04-18T12:05:04Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-04-18T12:05:04Z"}, "message": "use Lvalue helper functions in rustc_mir::shim", "tree": {"sha": "b07a9230b7bf93bbfd4d2f9b2ee7d4ac796e6710", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b07a9230b7bf93bbfd4d2f9b2ee7d4ac796e6710"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e473b1aaa4adf205c4d825a35fcd7b74dad1518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e473b1aaa4adf205c4d825a35fcd7b74dad1518", "html_url": "https://github.com/rust-lang/rust/commit/3e473b1aaa4adf205c4d825a35fcd7b74dad1518", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e473b1aaa4adf205c4d825a35fcd7b74dad1518/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e621e1c73f1487b4450446eafe6ccad3a99e3cd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e621e1c73f1487b4450446eafe6ccad3a99e3cd8", "html_url": "https://github.com/rust-lang/rust/commit/e621e1c73f1487b4450446eafe6ccad3a99e3cd8"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "4d70540a7c688166b58f1bb265a49decd31cb5dc", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3e473b1aaa4adf205c4d825a35fcd7b74dad1518/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e473b1aaa4adf205c4d825a35fcd7b74dad1518/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=3e473b1aaa4adf205c4d825a35fcd7b74dad1518", "patch": "@@ -205,12 +205,7 @@ fn build_drop_shim<'a, 'tcx>(tcx: ty::TyCtxt<'a, 'tcx, 'tcx>,\n                 patch: MirPatch::new(&mir),\n                 tcx, param_env\n             };\n-            let dropee = Lvalue::Projection(\n-                box Projection {\n-                    base: Lvalue::Local(Local::new(1+0)),\n-                    elem: ProjectionElem::Deref\n-                }\n-                );\n+            let dropee = Lvalue::Local(Local::new(1+0)).deref();\n             let resume_block = elaborator.patch.resume_block();\n             elaborate_drops::elaborate_drop(\n                 &mut elaborator,\n@@ -310,9 +305,7 @@ fn build_call_shim<'a, 'tcx>(tcx: ty::TyCtxt<'a, 'tcx, 'tcx>,\n \n     let rcvr = match rcvr_adjustment {\n         Adjustment::Identity => Operand::Consume(rcvr_l),\n-        Adjustment::Deref => Operand::Consume(Lvalue::Projection(\n-            box Projection { base: rcvr_l, elem: ProjectionElem::Deref }\n-        )),\n+        Adjustment::Deref => Operand::Consume(rcvr_l.deref()),\n         Adjustment::RefMut => {\n             // let rcvr = &mut rcvr;\n             let re_erased = tcx.mk_region(ty::ReErased);\n@@ -352,10 +345,7 @@ fn build_call_shim<'a, 'tcx>(tcx: ty::TyCtxt<'a, 'tcx, 'tcx>,\n     if let Some(untuple_args) = untuple_args {\n         args.extend(untuple_args.iter().enumerate().map(|(i, ity)| {\n             let arg_lv = Lvalue::Local(Local::new(1+1));\n-            Operand::Consume(Lvalue::Projection(box Projection {\n-                base: arg_lv,\n-                elem: ProjectionElem::Field(Field::new(i), *ity)\n-            }))\n+            Operand::Consume(arg_lv.field(Field::new(i), *ity))\n         }));\n     } else {\n         args.extend((1..sig.inputs().len()).map(|i| {"}]}