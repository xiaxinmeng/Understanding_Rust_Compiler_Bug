{"sha": "e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZmI1OGU2YzA5MjAyZGYzMTRkM2VmNmNjYjc5N2YyY2M4NDAxZTI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-22T23:02:08Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-23T00:40:25Z"}, "message": "Add compile-fail tests for unsound moving out of enums (#2329)", "tree": {"sha": "239ef5a5a6fd7d275426a87ddae229812bbd8c09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/239ef5a5a6fd7d275426a87ddae229812bbd8c09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "html_url": "https://github.com/rust-lang/rust/commit/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b25fc918a8b91322c28242d3956109001b0f7c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b25fc918a8b91322c28242d3956109001b0f7c4", "html_url": "https://github.com/rust-lang/rust/commit/5b25fc918a8b91322c28242d3956109001b0f7c4"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "0ee3cac5180f21c896d5bef3519d1ddff87225f8", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs?ref=e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "patch": "@@ -0,0 +1,9 @@\n+struct X { x: (); drop { error!(\"destructor runs\"); } }\n+\n+fn main() {\n+    let x = some(X { x: () });\n+    match move x {\n+        some(ref _y @ move _z) => { }, //~ ERROR cannot bind by-move and by-ref in the same pattern\n+        none => fail\n+    }\n+}"}, {"sha": "9752ae1b3576ee7197167a574c6d8ffe55486e3e", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs?ref=e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "patch": "@@ -0,0 +1,9 @@\n+struct X { x: (); drop { error!(\"destructor runs\"); } }\n+\n+fn main() {\n+    let x = some((X { x: () }, X { x: () }));\n+    match move x {\n+        some((ref _y, move _z)) => { }, //~ ERROR cannot bind by-move and by-ref in the same pattern\n+        none => fail\n+    }\n+}"}, {"sha": "399e8702b907545959b96a436905c8554033ca9d", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-3.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs?ref=e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "patch": "@@ -0,0 +1,11 @@\n+struct X { x: (); drop { error!(\"destructor runs\"); } }\n+\n+enum double_option<T,U> { some2(T,U), none2 }\n+\n+fn main() {\n+    let x = some2(X { x: () }, X { x: () });\n+    match move x {\n+        some2(ref _y, move _z) => { }, //~ ERROR cannot bind by-move and by-ref in the same pattern\n+        none2 => fail\n+    }\n+}"}, {"sha": "e3fb330990e99707270a92a7f34bdfcbc3f9b996", "filename": "src/test/compile-fail/bind-by-move-no-guards.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-guards.rs?ref=e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "patch": "@@ -0,0 +1,10 @@\n+fn main() {\n+    let (c,p) = pipes::stream();\n+    let x = some(p);\n+    c.send(false);\n+    match move x {\n+        some(move z) if z.recv() => { fail }, //~ ERROR cannot bind by-move into a pattern guard\n+        some(move z) => { assert !z.recv(); },\n+        none => fail\n+    }\n+}"}, {"sha": "bd7fd843ed5610fd6506ea3b866a52b5b8e78889", "filename": "src/test/compile-fail/bind-by-move-no-lvalues-1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs?ref=e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "patch": "@@ -0,0 +1,9 @@\n+struct X { x: (); drop { error!(\"destructor runs\"); } }\n+\n+fn main() {\n+    let x = some(X { x: () });\n+    match x {\n+        some(move _z) => { }, //~ ERROR cannot bind by-move when matching an lvalue\n+        none => fail\n+    }\n+}"}, {"sha": "ecd684719fe4be62ddad2882f49f796e72faadcb", "filename": "src/test/compile-fail/bind-by-move-no-lvalues-2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs?ref=e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "patch": "@@ -0,0 +1,10 @@\n+struct X { x: (); drop { error!(\"destructor runs\"); } }\n+struct Y { y: option<X>; }\n+\n+fn main() {\n+    let x = Y { y: some(X { x: () }) };\n+    match x.y {\n+        some(move _z) => { }, //~ ERROR cannot bind by-move when matching an lvalue\n+        none => fail\n+    }\n+}"}, {"sha": "88c995874aa884473a5ce763a0fd37d948984259", "filename": "src/test/compile-fail/bind-by-move-no-sub-bindings.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fb58e6c09202df314d3ef6ccb797f2cc8401e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs?ref=e5fb58e6c09202df314d3ef6ccb797f2cc8401e2", "patch": "@@ -0,0 +1,9 @@\n+struct X { x: (); drop { error!(\"destructor runs\"); } }\n+\n+fn main() {\n+    let x = some(X { x: () });\n+    match move x {\n+        some(move _y @ ref _z) => { }, //~ ERROR cannot bind by-move with sub-bindings\n+        none => fail\n+    }\n+}"}]}