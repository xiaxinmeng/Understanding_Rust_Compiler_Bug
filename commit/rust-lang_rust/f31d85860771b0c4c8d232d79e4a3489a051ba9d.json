{"sha": "f31d85860771b0c4c8d232d79e4a3489a051ba9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMWQ4NTg2MDc3MWIwYzRjOGQyMzJkNzllNGEzNDg5YTA1MWJhOWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-12T19:05:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-12T19:05:46Z"}, "message": "G: visibility", "tree": {"sha": "931adff1f926fa41943b726282f20822ade8ee36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/931adff1f926fa41943b726282f20822ade8ee36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f31d85860771b0c4c8d232d79e4a3489a051ba9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f31d85860771b0c4c8d232d79e4a3489a051ba9d", "html_url": "https://github.com/rust-lang/rust/commit/f31d85860771b0c4c8d232d79e4a3489a051ba9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f31d85860771b0c4c8d232d79e4a3489a051ba9d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c111a1f7b8b9da2b4691c792e1658b2888ff5420", "url": "https://api.github.com/repos/rust-lang/rust/commits/c111a1f7b8b9da2b4691c792e1658b2888ff5420", "html_url": "https://github.com/rust-lang/rust/commit/c111a1f7b8b9da2b4691c792e1658b2888ff5420"}], "stats": {"total": 267, "additions": 198, "deletions": 69}, "files": [{"sha": "ed3af53e45f07717fe4edfdf0313d6492132ae36", "filename": "grammar.ron", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f31d85860771b0c4c8d232d79e4a3489a051ba9d/grammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/f31d85860771b0c4c8d232d79e4a3489a051ba9d/grammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/grammar.ron?ref=f31d85860771b0c4c8d232d79e4a3489a051ba9d", "patch": "@@ -12,6 +12,9 @@ Grammar(\n         \"extern\",\n         \"crate\",\n         \"mod\",\n+        \"pub\",\n+        \"self\",\n+        \"super\",\n     ],\n     tokens: [\n         \"ERROR\",\n@@ -80,5 +83,6 @@ Grammar(\n         \"PATH_SEGMENT\",\n         \"LITERAL\",\n         \"ALIAS\",\n+        \"VISIBILITY\",\n     ]\n )\n\\ No newline at end of file"}, {"sha": "f7310c09a85fef397e5b0dc4d522138a253967b5", "filename": "src/parser/event_parser/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f31d85860771b0c4c8d232d79e4a3489a051ba9d/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f31d85860771b0c4c8d232d79e4a3489a051ba9d/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs?ref=f31d85860771b0c4c8d232d79e4a3489a051ba9d", "patch": "@@ -12,7 +12,7 @@ pub(super) fn mod_contents(p: &mut Parser) {\n \n fn item_first(p: &Parser) -> bool {\n     match p.current() {\n-        STRUCT_KW | FN_KW | EXTERN_KW | MOD_KW | USE_KW | POUND => true,\n+        STRUCT_KW | FN_KW | EXTERN_KW | MOD_KW | USE_KW | POUND | PUB_KW => true,\n         _ => false,\n     }\n }"}, {"sha": "1c57e0cb433578cba265607e6c82921bbb27d24b", "filename": "src/parser/event_parser/grammar/mod.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f31d85860771b0c4c8d232d79e4a3489a051ba9d/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f31d85860771b0c4c8d232d79e4a3489a051ba9d/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs?ref=f31d85860771b0c4c8d232d79e4a3489a051ba9d", "patch": "@@ -15,7 +15,25 @@ pub(crate) fn file(p: &mut Parser) {\n     })\n }\n \n-fn visibility(_: &mut Parser) {\n+fn visibility(p: &mut Parser) {\n+    node_if(p, PUB_KW, VISIBILITY, |p| {\n+        if p.current() != L_PAREN {\n+            return\n+        }\n+        match p.raw_lookahead(1) {\n+            CRATE_KW | SELF_KW | SUPER_KW => {\n+                p.bump();\n+                p.bump();\n+            }\n+            IN_KW => {\n+                p.bump();\n+                p.bump();\n+                paths::use_path(p);\n+            }\n+            _ => return\n+        }\n+        p.expect(R_PAREN);\n+    });\n }\n \n fn alias(p: &mut Parser) -> bool {"}, {"sha": "84f1072b780b8c672fed4e1b3fb6b9d68623c9cf", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 76, "deletions": 65, "changes": 141, "blob_url": "https://github.com/rust-lang/rust/blob/f31d85860771b0c4c8d232d79e4a3489a051ba9d/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f31d85860771b0c4c8d232d79e4a3489a051ba9d/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=f31d85860771b0c4c8d232d79e4a3489a051ba9d", "patch": "@@ -13,72 +13,76 @@ pub const AS_KW: SyntaxKind = SyntaxKind(8);\n pub const EXTERN_KW: SyntaxKind = SyntaxKind(9);\n pub const CRATE_KW: SyntaxKind = SyntaxKind(10);\n pub const MOD_KW: SyntaxKind = SyntaxKind(11);\n-pub const ERROR: SyntaxKind = SyntaxKind(12);\n-pub const IDENT: SyntaxKind = SyntaxKind(13);\n-pub const UNDERSCORE: SyntaxKind = SyntaxKind(14);\n-pub const WHITESPACE: SyntaxKind = SyntaxKind(15);\n-pub const INT_NUMBER: SyntaxKind = SyntaxKind(16);\n-pub const FLOAT_NUMBER: SyntaxKind = SyntaxKind(17);\n-pub const SEMI: SyntaxKind = SyntaxKind(18);\n-pub const COMMA: SyntaxKind = SyntaxKind(19);\n-pub const DOT: SyntaxKind = SyntaxKind(20);\n-pub const DOTDOT: SyntaxKind = SyntaxKind(21);\n-pub const DOTDOTDOT: SyntaxKind = SyntaxKind(22);\n-pub const DOTDOTEQ: SyntaxKind = SyntaxKind(23);\n-pub const L_PAREN: SyntaxKind = SyntaxKind(24);\n-pub const R_PAREN: SyntaxKind = SyntaxKind(25);\n-pub const L_CURLY: SyntaxKind = SyntaxKind(26);\n-pub const R_CURLY: SyntaxKind = SyntaxKind(27);\n-pub const L_BRACK: SyntaxKind = SyntaxKind(28);\n-pub const R_BRACK: SyntaxKind = SyntaxKind(29);\n-pub const L_ANGLE: SyntaxKind = SyntaxKind(30);\n-pub const R_ANGLE: SyntaxKind = SyntaxKind(31);\n-pub const AT: SyntaxKind = SyntaxKind(32);\n-pub const POUND: SyntaxKind = SyntaxKind(33);\n-pub const TILDE: SyntaxKind = SyntaxKind(34);\n-pub const QUESTION: SyntaxKind = SyntaxKind(35);\n-pub const COLON: SyntaxKind = SyntaxKind(36);\n-pub const COLONCOLON: SyntaxKind = SyntaxKind(37);\n-pub const DOLLAR: SyntaxKind = SyntaxKind(38);\n-pub const EQ: SyntaxKind = SyntaxKind(39);\n-pub const EQEQ: SyntaxKind = SyntaxKind(40);\n-pub const FAT_ARROW: SyntaxKind = SyntaxKind(41);\n-pub const NEQ: SyntaxKind = SyntaxKind(42);\n-pub const EXCL: SyntaxKind = SyntaxKind(43);\n-pub const LIFETIME: SyntaxKind = SyntaxKind(44);\n-pub const CHAR: SyntaxKind = SyntaxKind(45);\n-pub const BYTE: SyntaxKind = SyntaxKind(46);\n-pub const STRING: SyntaxKind = SyntaxKind(47);\n-pub const RAW_STRING: SyntaxKind = SyntaxKind(48);\n-pub const BYTE_STRING: SyntaxKind = SyntaxKind(49);\n-pub const RAW_BYTE_STRING: SyntaxKind = SyntaxKind(50);\n-pub const PLUS: SyntaxKind = SyntaxKind(51);\n-pub const MINUS: SyntaxKind = SyntaxKind(52);\n-pub const STAR: SyntaxKind = SyntaxKind(53);\n-pub const SLASH: SyntaxKind = SyntaxKind(54);\n-pub const CARET: SyntaxKind = SyntaxKind(55);\n-pub const PERCENT: SyntaxKind = SyntaxKind(56);\n-pub const AMPERSAND: SyntaxKind = SyntaxKind(57);\n-pub const PIPE: SyntaxKind = SyntaxKind(58);\n-pub const THIN_ARROW: SyntaxKind = SyntaxKind(59);\n-pub const COMMENT: SyntaxKind = SyntaxKind(60);\n-pub const DOC_COMMENT: SyntaxKind = SyntaxKind(61);\n-pub const SHEBANG: SyntaxKind = SyntaxKind(62);\n-pub const FILE: SyntaxKind = SyntaxKind(63);\n-pub const STRUCT_ITEM: SyntaxKind = SyntaxKind(64);\n-pub const STRUCT_FIELD: SyntaxKind = SyntaxKind(65);\n-pub const FN_ITEM: SyntaxKind = SyntaxKind(66);\n-pub const EXTERN_CRATE_ITEM: SyntaxKind = SyntaxKind(67);\n-pub const ATTR: SyntaxKind = SyntaxKind(68);\n-pub const META_ITEM: SyntaxKind = SyntaxKind(69);\n-pub const MOD_ITEM: SyntaxKind = SyntaxKind(70);\n-pub const USE_ITEM: SyntaxKind = SyntaxKind(71);\n-pub const PATH: SyntaxKind = SyntaxKind(72);\n-pub const PATH_SEGMENT: SyntaxKind = SyntaxKind(73);\n-pub const LITERAL: SyntaxKind = SyntaxKind(74);\n-pub const ALIAS: SyntaxKind = SyntaxKind(75);\n+pub const PUB_KW: SyntaxKind = SyntaxKind(12);\n+pub const SELF_KW: SyntaxKind = SyntaxKind(13);\n+pub const SUPER_KW: SyntaxKind = SyntaxKind(14);\n+pub const ERROR: SyntaxKind = SyntaxKind(15);\n+pub const IDENT: SyntaxKind = SyntaxKind(16);\n+pub const UNDERSCORE: SyntaxKind = SyntaxKind(17);\n+pub const WHITESPACE: SyntaxKind = SyntaxKind(18);\n+pub const INT_NUMBER: SyntaxKind = SyntaxKind(19);\n+pub const FLOAT_NUMBER: SyntaxKind = SyntaxKind(20);\n+pub const SEMI: SyntaxKind = SyntaxKind(21);\n+pub const COMMA: SyntaxKind = SyntaxKind(22);\n+pub const DOT: SyntaxKind = SyntaxKind(23);\n+pub const DOTDOT: SyntaxKind = SyntaxKind(24);\n+pub const DOTDOTDOT: SyntaxKind = SyntaxKind(25);\n+pub const DOTDOTEQ: SyntaxKind = SyntaxKind(26);\n+pub const L_PAREN: SyntaxKind = SyntaxKind(27);\n+pub const R_PAREN: SyntaxKind = SyntaxKind(28);\n+pub const L_CURLY: SyntaxKind = SyntaxKind(29);\n+pub const R_CURLY: SyntaxKind = SyntaxKind(30);\n+pub const L_BRACK: SyntaxKind = SyntaxKind(31);\n+pub const R_BRACK: SyntaxKind = SyntaxKind(32);\n+pub const L_ANGLE: SyntaxKind = SyntaxKind(33);\n+pub const R_ANGLE: SyntaxKind = SyntaxKind(34);\n+pub const AT: SyntaxKind = SyntaxKind(35);\n+pub const POUND: SyntaxKind = SyntaxKind(36);\n+pub const TILDE: SyntaxKind = SyntaxKind(37);\n+pub const QUESTION: SyntaxKind = SyntaxKind(38);\n+pub const COLON: SyntaxKind = SyntaxKind(39);\n+pub const COLONCOLON: SyntaxKind = SyntaxKind(40);\n+pub const DOLLAR: SyntaxKind = SyntaxKind(41);\n+pub const EQ: SyntaxKind = SyntaxKind(42);\n+pub const EQEQ: SyntaxKind = SyntaxKind(43);\n+pub const FAT_ARROW: SyntaxKind = SyntaxKind(44);\n+pub const NEQ: SyntaxKind = SyntaxKind(45);\n+pub const EXCL: SyntaxKind = SyntaxKind(46);\n+pub const LIFETIME: SyntaxKind = SyntaxKind(47);\n+pub const CHAR: SyntaxKind = SyntaxKind(48);\n+pub const BYTE: SyntaxKind = SyntaxKind(49);\n+pub const STRING: SyntaxKind = SyntaxKind(50);\n+pub const RAW_STRING: SyntaxKind = SyntaxKind(51);\n+pub const BYTE_STRING: SyntaxKind = SyntaxKind(52);\n+pub const RAW_BYTE_STRING: SyntaxKind = SyntaxKind(53);\n+pub const PLUS: SyntaxKind = SyntaxKind(54);\n+pub const MINUS: SyntaxKind = SyntaxKind(55);\n+pub const STAR: SyntaxKind = SyntaxKind(56);\n+pub const SLASH: SyntaxKind = SyntaxKind(57);\n+pub const CARET: SyntaxKind = SyntaxKind(58);\n+pub const PERCENT: SyntaxKind = SyntaxKind(59);\n+pub const AMPERSAND: SyntaxKind = SyntaxKind(60);\n+pub const PIPE: SyntaxKind = SyntaxKind(61);\n+pub const THIN_ARROW: SyntaxKind = SyntaxKind(62);\n+pub const COMMENT: SyntaxKind = SyntaxKind(63);\n+pub const DOC_COMMENT: SyntaxKind = SyntaxKind(64);\n+pub const SHEBANG: SyntaxKind = SyntaxKind(65);\n+pub const FILE: SyntaxKind = SyntaxKind(66);\n+pub const STRUCT_ITEM: SyntaxKind = SyntaxKind(67);\n+pub const STRUCT_FIELD: SyntaxKind = SyntaxKind(68);\n+pub const FN_ITEM: SyntaxKind = SyntaxKind(69);\n+pub const EXTERN_CRATE_ITEM: SyntaxKind = SyntaxKind(70);\n+pub const ATTR: SyntaxKind = SyntaxKind(71);\n+pub const META_ITEM: SyntaxKind = SyntaxKind(72);\n+pub const MOD_ITEM: SyntaxKind = SyntaxKind(73);\n+pub const USE_ITEM: SyntaxKind = SyntaxKind(74);\n+pub const PATH: SyntaxKind = SyntaxKind(75);\n+pub const PATH_SEGMENT: SyntaxKind = SyntaxKind(76);\n+pub const LITERAL: SyntaxKind = SyntaxKind(77);\n+pub const ALIAS: SyntaxKind = SyntaxKind(78);\n+pub const VISIBILITY: SyntaxKind = SyntaxKind(79);\n \n-static INFOS: [SyntaxInfo; 76] = [\n+static INFOS: [SyntaxInfo; 80] = [\n     SyntaxInfo { name: \"USE_KW\" },\n     SyntaxInfo { name: \"FN_KW\" },\n     SyntaxInfo { name: \"STRUCT_KW\" },\n@@ -91,6 +95,9 @@ static INFOS: [SyntaxInfo; 76] = [\n     SyntaxInfo { name: \"EXTERN_KW\" },\n     SyntaxInfo { name: \"CRATE_KW\" },\n     SyntaxInfo { name: \"MOD_KW\" },\n+    SyntaxInfo { name: \"PUB_KW\" },\n+    SyntaxInfo { name: \"SELF_KW\" },\n+    SyntaxInfo { name: \"SUPER_KW\" },\n     SyntaxInfo { name: \"ERROR\" },\n     SyntaxInfo { name: \"IDENT\" },\n     SyntaxInfo { name: \"UNDERSCORE\" },\n@@ -155,6 +162,7 @@ static INFOS: [SyntaxInfo; 76] = [\n     SyntaxInfo { name: \"PATH_SEGMENT\" },\n     SyntaxInfo { name: \"LITERAL\" },\n     SyntaxInfo { name: \"ALIAS\" },\n+    SyntaxInfo { name: \"VISIBILITY\" },\n ];\n \n pub(crate) fn syntax_info(kind: SyntaxKind) -> &'static SyntaxInfo {\n@@ -175,6 +183,9 @@ pub(crate) fn ident_to_keyword(ident: &str) -> Option<SyntaxKind> {\n        \"extern\" => Some(EXTERN_KW),\n        \"crate\" => Some(CRATE_KW),\n        \"mod\" => Some(MOD_KW),\n+       \"pub\" => Some(PUB_KW),\n+       \"self\" => Some(SELF_KW),\n+       \"super\" => Some(SUPER_KW),\n        _ => None,\n    }\n }"}, {"sha": "c5a58a205e638e404cbab666124191b9c92bdb38", "filename": "tests/data/lexer/0011_keywords.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f31d85860771b0c4c8d232d79e4a3489a051ba9d/tests%2Fdata%2Flexer%2F0011_keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f31d85860771b0c4c8d232d79e4a3489a051ba9d/tests%2Fdata%2Flexer%2F0011_keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0011_keywords.rs?ref=f31d85860771b0c4c8d232d79e4a3489a051ba9d", "patch": "@@ -1 +1,2 @@\n-fn use struct trait enum impl true false as extern crate mod\n+fn use struct trait enum impl true false as extern crate mod pub self super\n+"}, {"sha": "248628f3431ba83da9b8d328844affaaa58ddcc8", "filename": "tests/data/lexer/0011_keywords.txt", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f31d85860771b0c4c8d232d79e4a3489a051ba9d/tests%2Fdata%2Flexer%2F0011_keywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f31d85860771b0c4c8d232d79e4a3489a051ba9d/tests%2Fdata%2Flexer%2F0011_keywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0011_keywords.txt?ref=f31d85860771b0c4c8d232d79e4a3489a051ba9d", "patch": "@@ -21,4 +21,10 @@ WHITESPACE 1 \" \"\n CRATE_KW 5 \"crate\"\n WHITESPACE 1 \" \"\n MOD_KW 3 \"mod\"\n-WHITESPACE 1 \"\\n\"\n+WHITESPACE 1 \" \"\n+PUB_KW 3 \"pub\"\n+WHITESPACE 1 \" \"\n+SELF_KW 4 \"self\"\n+WHITESPACE 1 \" \"\n+SUPER_KW 5 \"super\"\n+WHITESPACE 2 \"\\n\\n\""}, {"sha": "75b1db12134fb9f6bb4825dcd59e9ef5b9e7843c", "filename": "tests/data/parser/ok/0012_visibility.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f31d85860771b0c4c8d232d79e4a3489a051ba9d/tests%2Fdata%2Fparser%2Fok%2F0012_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f31d85860771b0c4c8d232d79e4a3489a051ba9d/tests%2Fdata%2Fparser%2Fok%2F0012_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0012_visibility.rs?ref=f31d85860771b0c4c8d232d79e4a3489a051ba9d", "patch": "@@ -0,0 +1,5 @@\n+fn a() {}\n+pub fn b() {}\n+pub(crate) fn c() {}\n+pub(super) fn d() {}\n+pub(in foo::bar::baz) fn e() {}"}, {"sha": "8324c48d51f9423921156fed5806b213b4a1e460", "filename": "tests/data/parser/ok/0012_visibility.txt", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/f31d85860771b0c4c8d232d79e4a3489a051ba9d/tests%2Fdata%2Fparser%2Fok%2F0012_visibility.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f31d85860771b0c4c8d232d79e4a3489a051ba9d/tests%2Fdata%2Fparser%2Fok%2F0012_visibility.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0012_visibility.txt?ref=f31d85860771b0c4c8d232d79e4a3489a051ba9d", "patch": "@@ -0,0 +1,84 @@\n+FILE@[0; 98)\n+  FN_ITEM@[0; 10)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    IDENT@[3; 4)\n+    L_PAREN@[4; 5)\n+    R_PAREN@[5; 6)\n+    WHITESPACE@[6; 7)\n+    L_CURLY@[7; 8)\n+    R_CURLY@[8; 9)\n+    WHITESPACE@[9; 10)\n+  FN_ITEM@[10; 24)\n+    VISIBILITY@[10; 14)\n+      PUB_KW@[10; 13)\n+      WHITESPACE@[13; 14)\n+    FN_KW@[14; 16)\n+    WHITESPACE@[16; 17)\n+    IDENT@[17; 18)\n+    L_PAREN@[18; 19)\n+    R_PAREN@[19; 20)\n+    WHITESPACE@[20; 21)\n+    L_CURLY@[21; 22)\n+    R_CURLY@[22; 23)\n+    WHITESPACE@[23; 24)\n+  FN_ITEM@[24; 45)\n+    VISIBILITY@[24; 35)\n+      PUB_KW@[24; 27)\n+      L_PAREN@[27; 28)\n+      CRATE_KW@[28; 33)\n+      R_PAREN@[33; 34)\n+      WHITESPACE@[34; 35)\n+    FN_KW@[35; 37)\n+    WHITESPACE@[37; 38)\n+    IDENT@[38; 39)\n+    L_PAREN@[39; 40)\n+    R_PAREN@[40; 41)\n+    WHITESPACE@[41; 42)\n+    L_CURLY@[42; 43)\n+    R_CURLY@[43; 44)\n+    WHITESPACE@[44; 45)\n+  FN_ITEM@[45; 66)\n+    VISIBILITY@[45; 56)\n+      PUB_KW@[45; 48)\n+      L_PAREN@[48; 49)\n+      SUPER_KW@[49; 54)\n+      R_PAREN@[54; 55)\n+      WHITESPACE@[55; 56)\n+    FN_KW@[56; 58)\n+    WHITESPACE@[58; 59)\n+    IDENT@[59; 60)\n+    L_PAREN@[60; 61)\n+    R_PAREN@[61; 62)\n+    WHITESPACE@[62; 63)\n+    L_CURLY@[63; 64)\n+    R_CURLY@[64; 65)\n+    WHITESPACE@[65; 66)\n+  FN_ITEM@[66; 98)\n+    VISIBILITY@[66; 88)\n+      PUB_KW@[66; 69)\n+      L_PAREN@[69; 70)\n+      IDENT@[70; 72)\n+      PATH@[72; 86)\n+        PATH@[72; 81)\n+          PATH@[72; 76)\n+            PATH_SEGMENT@[72; 76)\n+              WHITESPACE@[72; 73)\n+              IDENT@[73; 76)\n+          COLONCOLON@[76; 78)\n+          PATH_SEGMENT@[78; 81)\n+            IDENT@[78; 81)\n+        COLONCOLON@[81; 83)\n+        PATH_SEGMENT@[83; 86)\n+          IDENT@[83; 86)\n+      R_PAREN@[86; 87)\n+      WHITESPACE@[87; 88)\n+    FN_KW@[88; 90)\n+    WHITESPACE@[90; 91)\n+    IDENT@[91; 92)\n+    L_PAREN@[92; 93)\n+    R_PAREN@[93; 94)\n+    WHITESPACE@[94; 95)\n+    L_CURLY@[95; 96)\n+    R_CURLY@[96; 97)\n+    WHITESPACE@[97; 98)"}]}