{"sha": "c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNGZiNTE2N2VkMzE1ZmM3ZjRhZTNhMzMxMWI5YjRkZTlkMDYwZWM=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-15T15:43:54Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-18T12:30:10Z"}, "message": "Remove origin field from TypeAliasesOpaqueTy", "tree": {"sha": "40c8ff3bf1f4d660542d1c8539352ae6a511fcf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40c8ff3bf1f4d660542d1c8539352ae6a511fcf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmD0HtIACgkQgTGiTgx5\n76/0QRAAwGzTXfNDdYtRm7H5c2Kz/Hj7D6MVTU9FeL3U25ygki27CoT46r6oG0pS\nZ+U/vNwoUnyKjnbM6klSrvd0mPW/APPiTDF2wAKQbR/JE96Biv11+yGG0MC8RNTb\ncGXflhkU922tg01LMIaXbfit3jJUrH0clmOUQUB6jhcKJUuAg3EcxjwHeJIluYX/\nXyJkjwCppmKE2zy1QDz/9X6pvNVMT+uhKyZvqEHprs7eB7J52TpNk66Vp7MjYGkD\nfYTelGW0QxceAc2+ulXmzXNcRrKQYEd5ClKWgPHnX03+L9tRDj1XmJXpz9r4JCzF\nyjfd7LQToedgSGZjbduFoiFoLR46nDwxe+v5GVlU8KulGBYhsGF5WWQFqQ01hW4e\nqyQRrTvdQIKLj6G+5I7GQrhw/sqXHN0sfDJpSpySgxFx6BSLAqkwE0g1D/hPoyQp\n1fZc7pK/1zmONyzaXHlb2GUax4g3j9OPG77v6RXybGyY+dchs0zFFt14LIJgoI5n\n+/IrCIn4g6QqFlAOMoH7WPu4s0sAEFGfEFgIzUN/eecptvUPIh6Bryx38IzmbIqA\nsV7RTTB9lW0uMk9Jl/WlUjhOglgsd6YM5CXNOzhl7Zubm+/3tO3gdlhC97dvNFpO\nxv9ZAx88kRu6aQMAMfgO1kkpHlC1E3QX11v77kcQkmJ437AK7NI=\n=BgxG\n-----END PGP SIGNATURE-----", "payload": "tree 40c8ff3bf1f4d660542d1c8539352ae6a511fcf4\nparent 5cefdbdab5f1308c86193db7c92f807e4e49a402\nauthor Santiago Pastorino <spastorino@gmail.com> 1626363834 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1626611410 -0300\n\nRemove origin field from TypeAliasesOpaqueTy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec", "html_url": "https://github.com/rust-lang/rust/commit/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cefdbdab5f1308c86193db7c92f807e4e49a402", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cefdbdab5f1308c86193db7c92f807e4e49a402", "html_url": "https://github.com/rust-lang/rust/commit/5cefdbdab5f1308c86193db7c92f807e4e49a402"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "9f9d41c3f3d9e8f816d7ad0a99eae3c4abfc2dd9", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec", "patch": "@@ -345,7 +345,6 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                     ty,\n                     ImplTraitContext::TypeAliasesOpaqueTy {\n                         capturable_lifetimes: &mut FxHashSet::default(),\n-                        origin: hir::OpaqueTyOrigin::TyAlias,\n                     },\n                 );\n                 let generics = self.lower_generics(gen, ImplTraitContext::disallowed());\n@@ -918,7 +917,6 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                             ty,\n                             ImplTraitContext::TypeAliasesOpaqueTy {\n                                 capturable_lifetimes: &mut FxHashSet::default(),\n-                                origin: hir::OpaqueTyOrigin::TyAlias,\n                             },\n                         );\n                         hir::ImplItemKind::TyAlias(ty)"}, {"sha": "f6f47b11ce23f0a89a0b690d0b587692420f6f10", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=c34fb5167ed315fc7f4ae3a3311b9b4de9d060ec", "patch": "@@ -280,8 +280,6 @@ enum ImplTraitContext<'b, 'a> {\n         // FIXME(impl_trait): but `required_region_bounds` will ICE later\n         // anyway.\n         capturable_lifetimes: &'b mut FxHashSet<hir::LifetimeName>,\n-        /// Origin: OpaqueTyOrigin::TyAlias\n-        origin: hir::OpaqueTyOrigin,\n     },\n     /// `impl Trait` is not accepted in this position.\n     Disallowed(ImplTraitPosition),\n@@ -310,8 +308,8 @@ impl<'a> ImplTraitContext<'_, 'a> {\n             ReturnPositionOpaqueTy { fn_def_id, origin } => {\n                 ReturnPositionOpaqueTy { fn_def_id: *fn_def_id, origin: *origin }\n             }\n-            TypeAliasesOpaqueTy { capturable_lifetimes, origin } => {\n-                TypeAliasesOpaqueTy { capturable_lifetimes, origin: *origin }\n+            TypeAliasesOpaqueTy { capturable_lifetimes } => {\n+                TypeAliasesOpaqueTy { capturable_lifetimes }\n             }\n             Disallowed(pos) => Disallowed(*pos),\n         }\n@@ -1152,7 +1150,6 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             true,\n                             ImplTraitContext::TypeAliasesOpaqueTy {\n                                 capturable_lifetimes: &mut capturable_lifetimes,\n-                                origin: hir::OpaqueTyOrigin::TyAlias,\n                             },\n                         )\n                     }\n@@ -1416,18 +1413,17 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             None,\n                             |this| this.lower_param_bounds(bounds, itctx),\n                         ),\n-                    ImplTraitContext::TypeAliasesOpaqueTy { ref capturable_lifetimes, origin } => {\n+                    ImplTraitContext::TypeAliasesOpaqueTy { ref capturable_lifetimes } => {\n                         // Reset capturable lifetimes, any nested impl trait\n                         // types will inherit lifetimes from this opaque type,\n                         // so don't need to capture them again.\n                         let nested_itctx = ImplTraitContext::TypeAliasesOpaqueTy {\n                             capturable_lifetimes: &mut FxHashSet::default(),\n-                            origin,\n                         };\n                         self.lower_opaque_impl_trait(\n                             span,\n                             None,\n-                            origin,\n+                            hir::OpaqueTyOrigin::TyAlias,\n                             def_node_id,\n                             Some(capturable_lifetimes),\n                             |this| this.lower_param_bounds(bounds, nested_itctx),"}]}