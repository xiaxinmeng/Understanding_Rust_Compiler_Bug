{"sha": "d7ae9f1370fc14cd77f9da6b547e533cebf7e12b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3YWU5ZjEzNzBmYzE0Y2Q3N2Y5ZGE2YjU0N2U1MzNjZWJmN2UxMmI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-03-12T03:17:37Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-03-12T03:17:37Z"}, "message": "Docs for infinite loops", "tree": {"sha": "9386d00f70bed6ee901614ed551ca51b37d48b82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9386d00f70bed6ee901614ed551ca51b37d48b82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7ae9f1370fc14cd77f9da6b547e533cebf7e12b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ae9f1370fc14cd77f9da6b547e533cebf7e12b", "html_url": "https://github.com/rust-lang/rust/commit/d7ae9f1370fc14cd77f9da6b547e533cebf7e12b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7ae9f1370fc14cd77f9da6b547e533cebf7e12b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "813c41362b3588ab336b57ac6e2f1e0eb3f305e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/813c41362b3588ab336b57ac6e2f1e0eb3f305e2", "html_url": "https://github.com/rust-lang/rust/commit/813c41362b3588ab336b57ac6e2f1e0eb3f305e2"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "7300c7c5eee17d5743352f93981cc1365b6c2cb1", "filename": "doc/keywords.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7ae9f1370fc14cd77f9da6b547e533cebf7e12b/doc%2Fkeywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d7ae9f1370fc14cd77f9da6b547e533cebf7e12b/doc%2Fkeywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fkeywords.txt?ref=d7ae9f1370fc14cd77f9da6b547e533cebf7e12b", "patch": "@@ -7,7 +7,7 @@ do\n else export\n f32 f64 fail false float fn for\n i16 i32 i64 i8 if import in int\n-let log\n+let log loop\n mod mutable\n native note\n obj  "}, {"sha": "4761ecaa40e08fd4d51788f05e36cae3af0d453d", "filename": "doc/rust.md", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d7ae9f1370fc14cd77f9da6b547e533cebf7e12b/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/d7ae9f1370fc14cd77f9da6b547e533cebf7e12b/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=d7ae9f1370fc14cd77f9da6b547e533cebf7e12b", "patch": "@@ -216,7 +216,7 @@ do\n else enum export\n fail false fn for\n if iface impl import\n-let log\n+let log loop\n mod mutable\n native\n pure\n@@ -1901,6 +1901,38 @@ do {\n } while i < 10;\n ~~~~\n \n+### Infinite loops\n+\n+A `loop` expression denotes an infinite loop:\n+\n+~~~~~~~~{.ebnf .gram}\n+loop_expr : \"loop\" '{' block '}';\n+~~~~~~~~\n+\n+For a block `b`, the expression `loop b` is semantically equivalent to\n+`while true b`. However, `loop`s differ from `while` loops in that the\n+typestate analysis pass takes into account that `loop`s are infinite.\n+\n+For example, the following (contrived) function uses a `loop` with a\n+`ret` expression:\n+\n+~~~~\n+fn count() -> bool {\n+  let i = 0;\n+  loop {\n+    i += 1;\n+    if i == 20 { ret true; }\n+  }\n+}\n+~~~~\n+\n+This function compiles, because typestate recognizes that the `loop`\n+never terminates (except non-locally, with `ret`), thus there is no\n+need to insert a spurious `fail` or `ret` after the `loop`. If `loop`\n+were replaced with `while true`, the function would be rejected\n+because from the compiler's perspective, there would be a control path\n+along which `count` does not return a value (that is, if the loop\n+condition is always false).\n \n ### Break expressions\n "}]}