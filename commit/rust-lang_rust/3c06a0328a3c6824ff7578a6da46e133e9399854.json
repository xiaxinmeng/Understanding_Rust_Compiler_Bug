{"sha": "3c06a0328a3c6824ff7578a6da46e133e9399854", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMDZhMDMyOGEzYzY4MjRmZjc1NzhhNmRhNDZlMTMzZTkzOTk4NTQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-10T20:49:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-16T06:22:06Z"}, "message": "core: Derive Show impls wherever possible\n\nThese were temporarily moved to explicit implementations, but now that fmt is in\ncore it's possible to derive again.", "tree": {"sha": "e18a11c7e973eccaef4841d77bf9d4a16c595567", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e18a11c7e973eccaef4841d77bf9d4a16c595567"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c06a0328a3c6824ff7578a6da46e133e9399854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c06a0328a3c6824ff7578a6da46e133e9399854", "html_url": "https://github.com/rust-lang/rust/commit/3c06a0328a3c6824ff7578a6da46e133e9399854", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c06a0328a3c6824ff7578a6da46e133e9399854/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d8ea05a257af534579c5ecef79d45781f3a8f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d8ea05a257af534579c5ecef79d45781f3a8f0", "html_url": "https://github.com/rust-lang/rust/commit/27d8ea05a257af534579c5ecef79d45781f3a8f0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a50108607ce71cf46d1af2a618714e83317ebac9", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=3c06a0328a3c6824ff7578a6da46e133e9399854", "patch": "@@ -82,7 +82,7 @@ pub trait TotalEq: Eq {\n }\n \n /// An ordering is, e.g, a result of a comparison between two values.\n-#[deriving(Clone, Eq)]\n+#[deriving(Clone, Eq, Show)]\n pub enum Ordering {\n    /// An ordering where a compared value is less [than another].\n    Less = -1,"}, {"sha": "a5003a1458e119a7bf14776bcd52f13e1a16dc2f", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=3c06a0328a3c6824ff7578a6da46e133e9399854", "patch": "@@ -471,7 +471,7 @@ extern \"rust-intrinsic\" {\n /// `TypeId` represents a globally unique identifier for a type\n #[lang=\"type_id\"] // This needs to be kept in lockstep with the code in trans/intrinsic.rs and\n                   // middle/lang_items.rs\n-#[deriving(Eq, TotalEq)]\n+#[deriving(Eq, TotalEq, Show)]\n #[cfg(not(test))]\n pub struct TypeId {\n     t: u64,"}, {"sha": "18553d2c48b28257d3dd027ec9e32118c787cc6b", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=3c06a0328a3c6824ff7578a6da46e133e9399854", "patch": "@@ -969,7 +969,7 @@ impl<A: TotalOrd, T: Iterator<A>> OrdIterator<A> for T {\n }\n \n /// `MinMaxResult` is an enum returned by `min_max`. See `OrdIterator::min_max` for more detail.\n-#[deriving(Clone, Eq)]\n+#[deriving(Clone, Eq, Show)]\n pub enum MinMaxResult<T> {\n     /// Empty iterator\n     NoElements,"}, {"sha": "614d8eeff27c9c81c56897a6e35b667f44de62de", "filename": "src/libcore/option.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=3c06a0328a3c6824ff7578a6da46e133e9399854", "patch": "@@ -148,7 +148,7 @@ use mem;\n use slice;\n \n /// The `Option`\n-#[deriving(Clone, Eq, Ord, TotalEq, TotalOrd)]\n+#[deriving(Clone, Eq, Ord, TotalEq, TotalOrd, Show)]\n pub enum Option<T> {\n     /// No value\n     None,"}, {"sha": "80d201c899d3297a1e3d76557b754f7673dc657f", "filename": "src/libcore/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=3c06a0328a3c6824ff7578a6da46e133e9399854", "patch": "@@ -275,7 +275,7 @@ use option::{None, Option, Some};\n /// `Result` is a type that represents either success (`Ok`) or failure (`Err`).\n ///\n /// See the [`std::result`](index.html) module documentation for details.\n-#[deriving(Clone, Eq, Ord, TotalEq, TotalOrd)]\n+#[deriving(Clone, Eq, Ord, TotalEq, TotalOrd, Show)]\n #[must_use]\n pub enum Result<T, E> {\n     /// Contains the success value"}, {"sha": "bd4534b19ac62989622f807092df7053b2fda490", "filename": "src/libcore/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c06a0328a3c6824ff7578a6da46e133e9399854/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=3c06a0328a3c6824ff7578a6da46e133e9399854", "patch": "@@ -542,7 +542,7 @@ pub struct UTF16Items<'a> {\n     iter: slice::Items<'a, u16>\n }\n /// The possibilities for values decoded from a `u16` stream.\n-#[deriving(Eq, TotalEq, Clone)]\n+#[deriving(Eq, TotalEq, Clone, Show)]\n pub enum UTF16Item {\n     /// A valid codepoint.\n     ScalarValue(char),"}]}