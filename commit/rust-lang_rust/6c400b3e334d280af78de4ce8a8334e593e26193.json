{"sha": "6c400b3e334d280af78de4ce8a8334e593e26193", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNDAwYjNlMzM0ZDI4MGFmNzhkZTRjZThhODMzNGU1OTNlMjYxOTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-24T20:01:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-24T20:01:32Z"}, "message": "More helpful error message if toolchain is not in PATH", "tree": {"sha": "5567322f71d092959a44a937ef2ce9d2d4800fe9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5567322f71d092959a44a937ef2ce9d2d4800fe9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c400b3e334d280af78de4ce8a8334e593e26193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c400b3e334d280af78de4ce8a8334e593e26193", "html_url": "https://github.com/rust-lang/rust/commit/6c400b3e334d280af78de4ce8a8334e593e26193", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c400b3e334d280af78de4ce8a8334e593e26193/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d97667f8dd467e7382885fcae40bcdbac63ae4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d97667f8dd467e7382885fcae40bcdbac63ae4f", "html_url": "https://github.com/rust-lang/rust/commit/5d97667f8dd467e7382885fcae40bcdbac63ae4f"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "0613310f1f556aa88d23463db0cea9165f36c252", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6c400b3e334d280af78de4ce8a8334e593e26193/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c400b3e334d280af78de4ce8a8334e593e26193/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=6c400b3e334d280af78de4ce8a8334e593e26193", "patch": "@@ -141,6 +141,11 @@ impl CargoWorkspace {\n         cargo_toml: &Path,\n         cargo_features: &CargoConfig,\n     ) -> Result<CargoWorkspace> {\n+        let _ = Command::new(cargo_binary())\n+            .arg(\"--version\")\n+            .status()\n+            .context(\"failed to run `cargo --version`, is `cargo` in PATH?\")?;\n+\n         let mut meta = MetadataCommand::new();\n         meta.manifest_path(cargo_toml);\n         if cargo_features.all_features {"}]}