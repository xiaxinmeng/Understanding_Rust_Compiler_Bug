{"sha": "0b03b9bbcfbac0765d79efbd83b36e9970c56b49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMDNiOWJiY2ZiYWMwNzY1ZDc5ZWZiZDgzYjM2ZTk5NzBjNTZiNDk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-10-31T17:20:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-01-02T22:35:05Z"}, "message": "remove outdated `rustc_driver` tests\n\nthey are subsumed by `hr-subtype/hr-subtype.rs` and other tests", "tree": {"sha": "984007c4ed2ed60fc38bfcda649ae9b075d37a37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/984007c4ed2ed60fc38bfcda649ae9b075d37a37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b03b9bbcfbac0765d79efbd83b36e9970c56b49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b03b9bbcfbac0765d79efbd83b36e9970c56b49", "html_url": "https://github.com/rust-lang/rust/commit/0b03b9bbcfbac0765d79efbd83b36e9970c56b49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b03b9bbcfbac0765d79efbd83b36e9970c56b49/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2d917989c527f6ec27e32411300888c2934611a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2d917989c527f6ec27e32411300888c2934611a", "html_url": "https://github.com/rust-lang/rust/commit/a2d917989c527f6ec27e32411300888c2934611a"}], "stats": {"total": 51, "additions": 0, "deletions": 51}, "files": [{"sha": "9c027f110eb4ec2799d2ce06e653ef2151303e4c", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/0b03b9bbcfbac0765d79efbd83b36e9970c56b49/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b03b9bbcfbac0765d79efbd83b36e9970c56b49/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=0b03b9bbcfbac0765d79efbd83b36e9970c56b49", "patch": "@@ -7,7 +7,6 @@ use errors::{DiagnosticBuilder, Level};\n use rustc::hir;\n use rustc::hir::map as hir_map;\n use rustc::infer::outlives::env::OutlivesEnvironment;\n-use rustc::infer::type_variable::TypeVariableOrigin;\n use rustc::infer::{self, InferOk, InferResult, SuppressRegionErrors};\n use rustc::middle::region;\n use rustc::session::config::{OutputFilenames, OutputTypes};\n@@ -26,7 +25,6 @@ use syntax::ast;\n use syntax::feature_gate::UnstableFeatures;\n use syntax::source_map::{FileName, FilePathMapping, SourceMap};\n use syntax::symbol::Symbol;\n-use syntax_pos::DUMMY_SP;\n \n use std::path::PathBuf;\n use std::sync::mpsc;\n@@ -431,17 +429,6 @@ impl<'a, 'gcx, 'tcx> Env<'a, 'gcx, 'tcx> {\n             }\n         }\n     }\n-\n-    /// Checks that `t1 <: t2` is false (this may register additional\n-    /// region checks).\n-    pub fn check_not_sub(&self, t1: Ty<'tcx>, t2: Ty<'tcx>) {\n-        match self.sub(t1, t2) {\n-            Err(_) => {}\n-            Ok(_) => {\n-                panic!(\"unexpected success computing sub({:?},{:?})\", t1, t2);\n-            }\n-        }\n-    }\n }\n \n #[test]\n@@ -470,25 +457,6 @@ fn contravariant_region_ptr_err() {\n     })\n }\n \n-#[test]\n-fn sub_free_bound_false() {\n-    //! Test that:\n-    //!\n-    //!     fn(&'a isize) <: for<'b> fn(&'b isize)\n-    //!\n-    //! *does not* hold.\n-\n-    test_env(EMPTY_SOURCE_STR, errors(&[]), |mut env| {\n-        env.create_simple_region_hierarchy();\n-        let t_rptr_free1 = env.t_rptr_free(1);\n-        let t_rptr_bound1 = env.t_rptr_late_bound(1);\n-        env.check_not_sub(\n-            env.t_fn(&[t_rptr_free1], env.tcx().types.isize),\n-            env.t_fn(&[t_rptr_bound1], env.tcx().types.isize),\n-        );\n-    })\n-}\n-\n #[test]\n fn sub_bound_free_true() {\n     //! Test that:\n@@ -508,25 +476,6 @@ fn sub_bound_free_true() {\n     })\n }\n \n-#[test]\n-fn sub_free_bound_false_infer() {\n-    //! Test that:\n-    //!\n-    //!     fn(_#1) <: for<'b> fn(&'b isize)\n-    //!\n-    //! does NOT hold for any instantiation of `_#1`.\n-\n-    test_env(EMPTY_SOURCE_STR, errors(&[]), |env| {\n-        let t_infer1 = env.infcx\n-            .next_ty_var(TypeVariableOrigin::MiscVariable(DUMMY_SP));\n-        let t_rptr_bound1 = env.t_rptr_late_bound(1);\n-        env.check_not_sub(\n-            env.t_fn(&[t_infer1], env.tcx().types.isize),\n-            env.t_fn(&[t_rptr_bound1], env.tcx().types.isize),\n-        );\n-    })\n-}\n-\n /// Test substituting a bound region into a function, which introduces another level of binding.\n /// This requires adjusting the Debruijn index.\n #[test]"}]}