{"sha": "1f0757c684b11d56519ffe006ce7be891b3eb940", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMDc1N2M2ODRiMTFkNTY1MTlmZmUwMDZjZTdiZTg5MWIzZWI5NDA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2011-12-28T00:38:48Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2011-12-28T19:19:41Z"}, "message": "libstd: Allow io writer to write mutable arrays", "tree": {"sha": "8a7fad4ca3932a5367b67238bdedbc94f6c4f05e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a7fad4ca3932a5367b67238bdedbc94f6c4f05e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f0757c684b11d56519ffe006ce7be891b3eb940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0757c684b11d56519ffe006ce7be891b3eb940", "html_url": "https://github.com/rust-lang/rust/commit/1f0757c684b11d56519ffe006ce7be891b3eb940", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f0757c684b11d56519ffe006ce7be891b3eb940/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af415647475b30e296ce7ef26abb9ec63d2458e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/af415647475b30e296ce7ef26abb9ec63d2458e6", "html_url": "https://github.com/rust-lang/rust/commit/af415647475b30e296ce7ef26abb9ec63d2458e6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "df9135101e0021ae12307830236515a03484688b", "filename": "src/libstd/io.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1f0757c684b11d56519ffe006ce7be891b3eb940/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0757c684b11d56519ffe006ce7be891b3eb940/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=1f0757c684b11d56519ffe006ce7be891b3eb940", "patch": "@@ -256,15 +256,15 @@ type buf_writer =\n     // FIXME: eventually u64\n \n     obj {\n-        fn write([u8]);\n+        fn write([const u8]);\n         fn seek(int, seek_style);\n         fn tell() -> uint;\n         fn flush() -> int;\n         fn fsync(level: fsync::level) -> int;\n     };\n \n obj FILE_writer(f: os::libc::FILE, res: option::t<@FILE_res>) {\n-    fn write(v: [u8]) unsafe {\n+    fn write(v: [const u8]) unsafe {\n         let len = vec::len::<u8>(v);\n         let vbuf = vec::unsafe::to_ptr::<u8>(v);\n         let nout = os::libc::fwrite(vbuf, len, 1u, f);\n@@ -283,7 +283,7 @@ obj FILE_writer(f: os::libc::FILE, res: option::t<@FILE_res>) {\n resource fd_res(fd: fd_t) { os::libc::close(fd); }\n \n obj fd_buf_writer(fd: fd_t, res: option::t<@fd_res>) {\n-    fn write(v: [u8]) unsafe {\n+    fn write(v: [const u8]) unsafe {\n         let len = vec::len::<u8>(v);\n         let count = 0u;\n         let vbuf;\n@@ -351,7 +351,7 @@ type writer =\n         fn write_char(char);\n         fn write_int(int);\n         fn write_uint(uint);\n-        fn write_bytes([u8]);\n+        fn write_bytes([const u8]);\n         fn write_le_uint(uint, uint);\n         fn write_le_int(int, uint);\n         fn write_be_uint(uint, uint);\n@@ -384,7 +384,7 @@ obj new_writer(out: buf_writer) {\n     }\n     fn write_int(n: int) { out.write(str::bytes(int::to_str(n, 10u))); }\n     fn write_uint(n: uint) { out.write(str::bytes(uint::to_str(n, 10u))); }\n-    fn write_bytes(bytes: [u8]) { out.write(bytes); }\n+    fn write_bytes(bytes: [const u8]) { out.write(bytes); }\n     fn write_le_uint(n: uint, size: uint) {\n         out.write(uint_to_le_bytes(n, size));\n     }\n@@ -435,7 +435,7 @@ type str_writer =\n type mutable_byte_buf = @{mutable buf: [mutable u8], mutable pos: uint};\n \n obj byte_buf_writer(buf: mutable_byte_buf) {\n-    fn write(v: [u8]) {\n+    fn write(v: [const u8]) {\n         // Fast path.\n \n         if buf.pos == vec::len(buf.buf) {"}]}