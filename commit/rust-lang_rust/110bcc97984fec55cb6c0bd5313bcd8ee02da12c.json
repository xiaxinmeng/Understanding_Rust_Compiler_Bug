{"sha": "110bcc97984fec55cb6c0bd5313bcd8ee02da12c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMGJjYzk3OTg0ZmVjNTVjYjZjMGJkNTMxM2JjZDhlZTAyZGExMmM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-07T09:26:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-07T09:26:05Z"}, "message": "forgot to add comment for some atomic types", "tree": {"sha": "f2bfae248ca6295e36600a0a10425db4b9721892", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2bfae248ca6295e36600a0a10425db4b9721892"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/110bcc97984fec55cb6c0bd5313bcd8ee02da12c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/110bcc97984fec55cb6c0bd5313bcd8ee02da12c", "html_url": "https://github.com/rust-lang/rust/commit/110bcc97984fec55cb6c0bd5313bcd8ee02da12c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/110bcc97984fec55cb6c0bd5313bcd8ee02da12c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2", "html_url": "https://github.com/rust-lang/rust/commit/e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "7867998d058524c8435aae404e2491de0f15de96", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/110bcc97984fec55cb6c0bd5313bcd8ee02da12c/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/110bcc97984fec55cb6c0bd5313bcd8ee02da12c/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=110bcc97984fec55cb6c0bd5313bcd8ee02da12c", "patch": "@@ -843,7 +843,8 @@ impl<T> AtomicPtr<T> {\n     /// was updated.\n     ///\n     /// `compare_and_swap` also takes an [`Ordering`] argument which describes the memory\n-    /// ordering of this operation.\n+    /// ordering of this operation. Notice that even when using [`AcqRel`], the operation\n+    /// might fail and hence just perform an `Acquire` load, but not have `Release` semantics.\n     ///\n     /// [`Ordering`]: enum.Ordering.html\n     ///\n@@ -1202,7 +1203,8 @@ The return value is always the previous value. If it is equal to `current`, then\n value was updated.\n \n `compare_and_swap` also takes an [`Ordering`] argument which describes the memory\n-ordering of this operation.\n+ordering of this operation. Notice that even when using [`AcqRel`], the operation\n+might fail and hence just perform an `Acquire` load, but not have `Release` semantics.\n \n [`Ordering`]: enum.Ordering.html\n "}]}