{"sha": "d976a29c300293ecf7a08ee996a7d295a7cf0b0b", "node_id": "C_kwDOAAsO6NoAKGQ5NzZhMjljMzAwMjkzZWNmN2EwOGVlOTk2YTdkMjk1YTdjZjBiMGI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-04T11:18:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-04T11:18:01Z"}, "message": "Rollup merge of #103845 - camsteffen:data-structures-track-caller, r=compiler-errors\n\nAdd track_caller to some Lock methods\n\nWould have helped to diagnose #103844.", "tree": {"sha": "6b6d7d09e79c643eb402f1feed0dd0cd4afc97d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b6d7d09e79c643eb402f1feed0dd0cd4afc97d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d976a29c300293ecf7a08ee996a7d295a7cf0b0b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjZPTpCRBK7hj4Ov3rIwAAKvcIADj00CnWQMpySvv4e2BPq8Ne\nhquK/IyGkmF8DaT167dBBYfevdWS0wQHknyzKBlNfimMbgNwtrZ8GFFzgI3NGeUz\no3FPnZuQmwBJeqOl9mxWOOwWd2Ks1i8MGMeRxDe/d9zYpIJsCwpVBfMM35l+V/6I\nWfbPFuP0bvtMteJiF1RS3486VEByg968nIIIiX7d6egCWDSQNUlU0tUOdlwF49c9\nYz6BmCU5GTfTqi0xeJzgu7aHmlf5ml6ifSPJOZSmdtUle+ttvYTHGAoW4kGDzvg8\n0ujnruDAYfvDnFSKPwpQ5Le3CemKRLe8+gHROi6H55q/qySrH4sOPbAMMXlieuI=\n=eaVv\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b6d7d09e79c643eb402f1feed0dd0cd4afc97d0\nparent d10187f0406c2bd94ac865b1ce99424aea0f579a\nparent 10a5e75537e3189ffa808be7eadc19569966b266\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1667560681 +0100\ncommitter GitHub <noreply@github.com> 1667560681 +0100\n\nRollup merge of #103845 - camsteffen:data-structures-track-caller, r=compiler-errors\n\nAdd track_caller to some Lock methods\n\nWould have helped to diagnose #103844.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d976a29c300293ecf7a08ee996a7d295a7cf0b0b", "html_url": "https://github.com/rust-lang/rust/commit/d976a29c300293ecf7a08ee996a7d295a7cf0b0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d976a29c300293ecf7a08ee996a7d295a7cf0b0b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d10187f0406c2bd94ac865b1ce99424aea0f579a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d10187f0406c2bd94ac865b1ce99424aea0f579a", "html_url": "https://github.com/rust-lang/rust/commit/d10187f0406c2bd94ac865b1ce99424aea0f579a"}, {"sha": "10a5e75537e3189ffa808be7eadc19569966b266", "url": "https://api.github.com/repos/rust-lang/rust/commits/10a5e75537e3189ffa808be7eadc19569966b266", "html_url": "https://github.com/rust-lang/rust/commit/10a5e75537e3189ffa808be7eadc19569966b266"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "c550f246e094aa77358d0010610e108226caf5af", "filename": "compiler/rustc_data_structures/src/sync.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d976a29c300293ecf7a08ee996a7d295a7cf0b0b/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d976a29c300293ecf7a08ee996a7d295a7cf0b0b/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs?ref=d976a29c300293ecf7a08ee996a7d295a7cf0b0b", "patch": "@@ -410,6 +410,7 @@ impl<T> Lock<T> {\n \n     #[cfg(parallel_compiler)]\n     #[inline(always)]\n+    #[track_caller]\n     pub fn lock(&self) -> LockGuard<'_, T> {\n         if ERROR_CHECKING {\n             self.0.try_lock().expect(\"lock was already held\")\n@@ -420,21 +421,25 @@ impl<T> Lock<T> {\n \n     #[cfg(not(parallel_compiler))]\n     #[inline(always)]\n+    #[track_caller]\n     pub fn lock(&self) -> LockGuard<'_, T> {\n         self.0.borrow_mut()\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn with_lock<F: FnOnce(&mut T) -> R, R>(&self, f: F) -> R {\n         f(&mut *self.lock())\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn borrow(&self) -> LockGuard<'_, T> {\n         self.lock()\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn borrow_mut(&self) -> LockGuard<'_, T> {\n         self.lock()\n     }\n@@ -476,6 +481,7 @@ impl<T> RwLock<T> {\n \n     #[cfg(not(parallel_compiler))]\n     #[inline(always)]\n+    #[track_caller]\n     pub fn read(&self) -> ReadGuard<'_, T> {\n         self.0.borrow()\n     }\n@@ -491,6 +497,7 @@ impl<T> RwLock<T> {\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn with_read_lock<F: FnOnce(&T) -> R, R>(&self, f: F) -> R {\n         f(&*self.read())\n     }\n@@ -509,6 +516,7 @@ impl<T> RwLock<T> {\n \n     #[cfg(not(parallel_compiler))]\n     #[inline(always)]\n+    #[track_caller]\n     pub fn write(&self) -> WriteGuard<'_, T> {\n         self.0.borrow_mut()\n     }\n@@ -524,16 +532,19 @@ impl<T> RwLock<T> {\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn with_write_lock<F: FnOnce(&mut T) -> R, R>(&self, f: F) -> R {\n         f(&mut *self.write())\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn borrow(&self) -> ReadGuard<'_, T> {\n         self.read()\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn borrow_mut(&self) -> WriteGuard<'_, T> {\n         self.write()\n     }"}]}