{"sha": "ebea895d026722e5887bd6544639152b87a80cc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZWE4OTVkMDI2NzIyZTU4ODdiZDY1NDQ2MzkxNTJiODdhODBjYzU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-01-13T20:29:36Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-01-15T02:14:17Z"}, "message": "convert ast::struct_dtor_ into a struct", "tree": {"sha": "c8e4c724676125e21af4b56ded958e708c799f9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8e4c724676125e21af4b56ded958e708c799f9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebea895d026722e5887bd6544639152b87a80cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebea895d026722e5887bd6544639152b87a80cc5", "html_url": "https://github.com/rust-lang/rust/commit/ebea895d026722e5887bd6544639152b87a80cc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebea895d026722e5887bd6544639152b87a80cc5/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c0d674a45dca39d32e3b30af48e2faf718d43d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c0d674a45dca39d32e3b30af48e2faf718d43d7", "html_url": "https://github.com/rust-lang/rust/commit/5c0d674a45dca39d32e3b30af48e2faf718d43d7"}], "stats": {"total": 73, "additions": 43, "deletions": 30}, "files": [{"sha": "d3bf3e8ade12d89e7e521de05b630e908b9ed13d", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=ebea895d026722e5887bd6544639152b87a80cc5", "patch": "@@ -288,10 +288,12 @@ fn simplify_ast(ii: ast::inlined_item) -> ast::inlined_item {\n       }\n       ast::ii_dtor(ref dtor, nm, ref tps, parent_id) => {\n         let dtor_body = fld.fold_block((*dtor).node.body);\n-        ast::ii_dtor(ast::spanned { node: { body: dtor_body,\n-                                            .. /*bad*/copy (*dtor).node },\n-                                    .. (/*bad*/copy *dtor) },\n-                     nm, /*bad*/copy *tps, parent_id)\n+        ast::ii_dtor(\n+            ast::spanned {\n+                node: ast::struct_dtor_ { body: dtor_body,\n+                                          .. /*bad*/copy (*dtor).node },\n+                .. (/*bad*/copy *dtor) },\n+            nm, /*bad*/copy *tps, parent_id)\n       }\n     }\n }\n@@ -327,12 +329,15 @@ fn renumber_ast(xcx: extended_decode_ctxt, ii: ast::inlined_item)\n         let dtor_id = fld.new_id((*dtor).node.id);\n         let new_parent = xcx.tr_def_id(parent_id);\n         let new_self = fld.new_id((*dtor).node.self_id);\n-        ast::ii_dtor(ast::spanned { node: { id: dtor_id,\n-                                            attrs: dtor_attrs,\n-                                            self_id: new_self,\n-                                            body: dtor_body },\n-                                    .. (/*bad*/copy *dtor)},\n-          nm, new_params, new_parent)\n+        ast::ii_dtor(\n+            ast::spanned {\n+                node: ast::struct_dtor_ { id: dtor_id,\n+                                          attrs: dtor_attrs,\n+                                          self_id: new_self,\n+                                          body: dtor_body },\n+                .. (/*bad*/copy *dtor)\n+            },\n+            nm, new_params, new_parent)\n       }\n      }\n }"}, {"sha": "1c7da88deac0d6d78930facdb534de23c944666c", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=ebea895d026722e5887bd6544639152b87a80cc5", "patch": "@@ -1567,10 +1567,12 @@ type struct_dtor = spanned<struct_dtor_>;\n \n #[auto_encode]\n #[auto_decode]\n-type struct_dtor_ = {id: node_id,\n-                    attrs: ~[attribute],\n-                    self_id: node_id,\n-                    body: blk};\n+struct struct_dtor_ {\n+    id: node_id,\n+    attrs: ~[attribute],\n+    self_id: node_id,\n+    body: blk,\n+}\n \n #[auto_encode]\n #[auto_decode]"}, {"sha": "1f3d25e7af0fe73c071afc4f1d123fa99738c406", "filename": "src/libsyntax/ast_map.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibsyntax%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibsyntax%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map.rs?ref=ebea895d026722e5887bd6544639152b87a80cc5", "patch": "@@ -185,8 +185,12 @@ fn map_fn(fk: visit::fn_kind, decl: fn_decl, body: blk,\n     match fk {\n         visit::fk_dtor(tps, ref attrs, self_id, parent_id) => {\n             let dt = @spanned {\n-                node: {id: id, attrs: (*attrs), self_id: self_id,\n-                     body: /* FIXME (#2543) */ copy body},\n+                node: ast::struct_dtor_ {\n+                    id: id,\n+                    attrs: (*attrs),\n+                    self_id: self_id,\n+                    body: /* FIXME (#2543) */ copy body,\n+                },\n                 span: sp,\n             };\n             cx.map.insert(id, node_dtor(/* FIXME (#2543) */ copy tps, dt,"}, {"sha": "4e3286f982614f82a93f0b649780d16aaf957380", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=ebea895d026722e5887bd6544639152b87a80cc5", "patch": "@@ -276,8 +276,9 @@ fn fold_struct_def(struct_def: @ast::struct_def, fld: ast_fold)\n     let dtor = do option::map(&struct_def.dtor) |dtor| {\n         let dtor_body = fld.fold_block(dtor.node.body);\n         let dtor_id   = fld.new_id(dtor.node.id);\n-        spanned { node: { body: dtor_body,\n-                          id: dtor_id, .. dtor.node},\n+        spanned { node: ast::struct_dtor_ { body: dtor_body,\n+                                            id: dtor_id,\n+                                            .. dtor.node},\n                   span: dtor.span }\n     };\n     return @{\n@@ -576,8 +577,9 @@ fn noop_fold_variant(v: variant_, fld: ast_fold) -> variant_ {\n             let dtor = do option::map(&struct_def.dtor) |dtor| {\n                 let dtor_body = fld.fold_block(dtor.node.body);\n                 let dtor_id   = fld.new_id(dtor.node.id);\n-                spanned { node: { body: dtor_body,\n-                                  id: dtor_id, .. dtor.node},\n+                spanned { node: ast::struct_dtor_ { body: dtor_body,\n+                                                    id: dtor_id,\n+                                                    .. dtor.node},\n                           .. *dtor }\n             };\n             kind = struct_variant_kind(@{"}, {"sha": "726847c0eae24411028c65565fbedbc86117aea6", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebea895d026722e5887bd6544639152b87a80cc5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ebea895d026722e5887bd6544639152b87a80cc5", "patch": "@@ -2836,16 +2836,16 @@ impl Parser {\n \n         let actual_dtor = do the_dtor.map |dtor| {\n             let (d_body, d_attrs, d_s) = *dtor;\n-            spanned { node: { id: self.get_id(),\n-                              attrs: d_attrs,\n-                              self_id: self.get_id(),\n-                              body: d_body},\n+            spanned { node: ast::struct_dtor_ { id: self.get_id(),\n+                                                attrs: d_attrs,\n+                                                self_id: self.get_id(),\n+                                                body: d_body},\n                        span: d_s}};\n         let _ = self.get_id();  // XXX: Workaround for crazy bug.\n         let new_id = self.get_id();\n         (class_name,\n          item_struct(@{\n-             fields: move fields,\n+             fields: fields,\n              dtor: actual_dtor,\n              ctor_id: if is_tuple_like { Some(new_id) } else { None }\n          }, ty_params),\n@@ -3333,15 +3333,15 @@ impl Parser {\n         self.bump();\n         let mut actual_dtor = do the_dtor.map |dtor| {\n             let (d_body, d_attrs, d_s) = *dtor;\n-            spanned { node: { id: self.get_id(),\n-                              attrs: d_attrs,\n-                              self_id: self.get_id(),\n-                              body: d_body },\n+            spanned { node: ast::struct_dtor_ { id: self.get_id(),\n+                                                attrs: d_attrs,\n+                                                self_id: self.get_id(),\n+                                                body: d_body },\n                       span: d_s }\n         };\n \n         return @{\n-            fields: move fields,\n+            fields: fields,\n             dtor: actual_dtor,\n             ctor_id: None\n         };"}]}