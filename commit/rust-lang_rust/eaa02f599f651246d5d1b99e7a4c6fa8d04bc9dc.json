{"sha": "eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhYTAyZjU5OWY2NTEyNDZkNWQxYjk5ZTdhNGM2ZmE4ZDA0YmM5ZGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-28T14:24:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-28T14:24:57Z"}, "message": "Auto merge of #69148 - estebank:cold-as-ice, r=oli-obk\n\nAccount for bounds and asociated items when denying `_`\n\nFix #68801, #69204. Follow up to #67597 and #68071.\n\nOutput for the original ICE report:\n\n```\n    Checking vinoteca v5.0.0 (/Users/ekuber/workspace/vinoteca)\nerror[E0121]: the type placeholder `_` is not allowed within types on item signatures\n  --> src/producers.rs:43:70\n   |\n43 | pub fn top<Table: diesel::Table + diesel::query_dsl::InternalJoinDsl<_, diesel::query_source::joins::Inner, _>>(table: Table, limit: usize, connection: DbConn) -> RestResult<Vec<TopWineType>> {\n   |                                                                      ^ not allowed in type signatures       ^ not allowed in type signatures\n\nerror: aborting due to previous error\n```", "tree": {"sha": "f78c7940c089494cd12db14e15cafaeb710e1678", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f78c7940c089494cd12db14e15cafaeb710e1678"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "html_url": "https://github.com/rust-lang/rust/commit/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2223c94bf433fc38234d1303e88cbaf14755863", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2223c94bf433fc38234d1303e88cbaf14755863", "html_url": "https://github.com/rust-lang/rust/commit/e2223c94bf433fc38234d1303e88cbaf14755863"}, {"sha": "c6cfcf999a53e5656f412c64f5e97e7a4840e072", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6cfcf999a53e5656f412c64f5e97e7a4840e072", "html_url": "https://github.com/rust-lang/rust/commit/c6cfcf999a53e5656f412c64f5e97e7a4840e072"}], "stats": {"total": 529, "additions": 215, "deletions": 314}, "files": [{"sha": "8daefb618d35f202823140997a3c7ea354c4afd5", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "patch": "@@ -514,7 +514,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         self_ty: Option<Ty<'tcx>>,\n         arg_count_correct: bool,\n         args_for_def_id: impl Fn(DefId) -> (Option<&'b GenericArgs<'b>>, bool),\n-        provided_kind: impl Fn(&GenericParamDef, &GenericArg<'_>) -> subst::GenericArg<'tcx>,\n+        mut provided_kind: impl FnMut(&GenericParamDef, &GenericArg<'_>) -> subst::GenericArg<'tcx>,\n         mut inferred_kind: impl FnMut(\n             Option<&[subst::GenericArg<'tcx>]>,\n             &GenericParamDef,\n@@ -751,6 +751,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         };\n \n         let mut missing_type_params = vec![];\n+        let mut inferred_params = vec![];\n         let substs = Self::create_substs_for_generic_args(\n             tcx,\n             def_id,\n@@ -773,7 +774,12 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     self.ast_region_to_region(&lt, Some(param)).into()\n                 }\n                 (GenericParamDefKind::Type { .. }, GenericArg::Type(ty)) => {\n-                    self.ast_ty_to_ty(&ty).into()\n+                    if let (hir::TyKind::Infer, false) = (&ty.kind, self.allow_ty_infer()) {\n+                        inferred_params.push(ty.span);\n+                        tcx.types.err.into()\n+                    } else {\n+                        self.ast_ty_to_ty(&ty).into()\n+                    }\n                 }\n                 (GenericParamDefKind::Const, GenericArg::Const(ct)) => {\n                     self.ast_const_to_const(&ct.value, tcx.type_of(param.def_id)).into()\n@@ -832,6 +838,18 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 }\n             },\n         );\n+        if !inferred_params.is_empty() {\n+            // We always collect the spans for placeholder types when evaluating `fn`s, but we\n+            // only want to emit an error complaining about them if infer types (`_`) are not\n+            // allowed. `allow_ty_infer` gates this behavior.\n+            crate::collect::placeholder_type_error(\n+                tcx,\n+                inferred_params[0],\n+                &[],\n+                inferred_params,\n+                false,\n+            );\n+        }\n \n         self.complain_about_missing_type_params(\n             missing_type_params,"}, {"sha": "f257fc5442cc19c74fe4d7a7e3f7083929f06cc1", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "patch": "@@ -320,7 +320,7 @@ impl AstConv<'tcx> for ItemCtxt<'tcx> {\n     }\n \n     fn ty_infer(&self, _: Option<&ty::GenericParamDef>, span: Span) -> Ty<'tcx> {\n-        placeholder_type_error(self.tcx(), span, &[], vec![span], false);\n+        self.tcx().sess.delay_span_bug(span, \"bad placeholder type\");\n         self.tcx().types.err\n     }\n \n@@ -715,13 +715,21 @@ fn convert_trait_item(tcx: TyCtxt<'_>, trait_item_id: hir::HirId) {\n     tcx.generics_of(def_id);\n \n     match trait_item.kind {\n-        hir::TraitItemKind::Const(..)\n-        | hir::TraitItemKind::Type(_, Some(_))\n-        | hir::TraitItemKind::Method(..) => {\n+        hir::TraitItemKind::Method(..) => {\n             tcx.type_of(def_id);\n-            if let hir::TraitItemKind::Method(..) = trait_item.kind {\n-                tcx.fn_sig(def_id);\n-            }\n+            tcx.fn_sig(def_id);\n+        }\n+\n+        hir::TraitItemKind::Const(.., Some(_)) => {\n+            tcx.type_of(def_id);\n+        }\n+\n+        hir::TraitItemKind::Const(..) | hir::TraitItemKind::Type(_, Some(_)) => {\n+            tcx.type_of(def_id);\n+            // Account for `const C: _;` and `type T = _;`.\n+            let mut visitor = PlaceholderHirTyCollector::default();\n+            visitor.visit_trait_item(trait_item);\n+            placeholder_type_error(tcx, DUMMY_SP, &[], visitor.0, false);\n         }\n \n         hir::TraitItemKind::Type(_, None) => {}\n@@ -735,8 +743,18 @@ fn convert_impl_item(tcx: TyCtxt<'_>, impl_item_id: hir::HirId) {\n     tcx.generics_of(def_id);\n     tcx.type_of(def_id);\n     tcx.predicates_of(def_id);\n-    if let hir::ImplItemKind::Method(..) = tcx.hir().expect_impl_item(impl_item_id).kind {\n-        tcx.fn_sig(def_id);\n+    let impl_item = tcx.hir().expect_impl_item(impl_item_id);\n+    match impl_item.kind {\n+        hir::ImplItemKind::Method(..) => {\n+            tcx.fn_sig(def_id);\n+        }\n+        hir::ImplItemKind::TyAlias(_) | hir::ImplItemKind::OpaqueTy(_) => {\n+            // Account for `type T = _;`\n+            let mut visitor = PlaceholderHirTyCollector::default();\n+            visitor.visit_impl_item(impl_item);\n+            placeholder_type_error(tcx, DUMMY_SP, &[], visitor.0, false);\n+        }\n+        hir::ImplItemKind::Const(..) => {}\n     }\n }\n "}, {"sha": "00845a17b116b5cbc56c22f64aea440b4fcf6009", "filename": "src/test/ui/did_you_mean/bad-assoc-ty.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.rs?ref=eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "patch": "@@ -17,7 +17,6 @@ type D = (u8, u8)::AssocTy;\n type E = _::AssocTy;\n //~^ ERROR missing angle brackets in associated item path\n //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n type F = &'static (u8)::AssocTy;\n //~^ ERROR missing angle brackets in associated item path\n@@ -46,4 +45,8 @@ type I = ty!()::AssocTy;\n //~^ ERROR missing angle brackets in associated item path\n //~| ERROR ambiguous associated type\n \n+trait K<A, B> {}\n+fn foo<X: K<_, _>>(x: X) {}\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+\n fn main() {}"}, {"sha": "6d5f3d9f14348de332a9f645758ec6d214d097bb", "filename": "src/test/ui/did_you_mean/bad-assoc-ty.stderr", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr?ref=eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "patch": "@@ -29,25 +29,25 @@ LL | type E = _::AssocTy;\n    |          ^^^^^^^^^^ help: try: `<_>::AssocTy`\n \n error: missing angle brackets in associated item path\n-  --> $DIR/bad-assoc-ty.rs:22:19\n+  --> $DIR/bad-assoc-ty.rs:21:19\n    |\n LL | type F = &'static (u8)::AssocTy;\n    |                   ^^^^^^^^^^^^^ help: try: `<(u8)>::AssocTy`\n \n error: missing angle brackets in associated item path\n-  --> $DIR/bad-assoc-ty.rs:28:10\n+  --> $DIR/bad-assoc-ty.rs:27:10\n    |\n LL | type G = dyn 'static + (Send)::AssocTy;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `<dyn 'static + (Send)>::AssocTy`\n \n error: missing angle brackets in associated item path\n-  --> $DIR/bad-assoc-ty.rs:45:10\n+  --> $DIR/bad-assoc-ty.rs:44:10\n    |\n LL | type I = ty!()::AssocTy;\n    |          ^^^^^^^^^^^^^^ help: try: `<ty!()>::AssocTy`\n \n error: missing angle brackets in associated item path\n-  --> $DIR/bad-assoc-ty.rs:38:19\n+  --> $DIR/bad-assoc-ty.rs:37:19\n    |\n LL |     ($ty: ty) => ($ty::AssocTy);\n    |                   ^^^^^^^^^^^^ help: try: `<$ty>::AssocTy`\n@@ -87,32 +87,26 @@ error[E0121]: the type placeholder `_` is not allowed within types on item signa\n LL | type E = _::AssocTy;\n    |          ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/bad-assoc-ty.rs:17:10\n-   |\n-LL | type E = _::AssocTy;\n-   |          ^ not allowed in type signatures\n-\n error[E0223]: ambiguous associated type\n-  --> $DIR/bad-assoc-ty.rs:22:19\n+  --> $DIR/bad-assoc-ty.rs:21:19\n    |\n LL | type F = &'static (u8)::AssocTy;\n    |                   ^^^^^^^^^^^^^ help: use fully-qualified syntax: `<u8 as Trait>::AssocTy`\n \n error[E0223]: ambiguous associated type\n-  --> $DIR/bad-assoc-ty.rs:28:10\n+  --> $DIR/bad-assoc-ty.rs:27:10\n    |\n LL | type G = dyn 'static + (Send)::AssocTy;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<(dyn std::marker::Send + 'static) as Trait>::AssocTy`\n \n error[E0223]: ambiguous associated type\n-  --> $DIR/bad-assoc-ty.rs:34:10\n+  --> $DIR/bad-assoc-ty.rs:33:10\n    |\n LL | type H = Fn(u8) -> (u8)::Output;\n    |          ^^^^^^^^^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<(dyn std::ops::Fn(u8) -> u8 + 'static) as Trait>::Output`\n \n error[E0223]: ambiguous associated type\n-  --> $DIR/bad-assoc-ty.rs:38:19\n+  --> $DIR/bad-assoc-ty.rs:37:19\n    |\n LL |     ($ty: ty) => ($ty::AssocTy);\n    |                   ^^^^^^^^^^^^ help: use fully-qualified syntax: `<u8 as Trait>::AssocTy`\n@@ -123,11 +117,19 @@ LL | type J = ty!(u8);\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0223]: ambiguous associated type\n-  --> $DIR/bad-assoc-ty.rs:45:10\n+  --> $DIR/bad-assoc-ty.rs:44:10\n    |\n LL | type I = ty!()::AssocTy;\n    |          ^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<u8 as Trait>::AssocTy`\n \n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/bad-assoc-ty.rs:49:13\n+   |\n+LL | fn foo<X: K<_, _>>(x: X) {}\n+   |             ^  ^ not allowed in type signatures\n+   |             |\n+   |             not allowed in type signatures\n+\n error: aborting due to 20 previous errors\n \n Some errors have detailed explanations: E0121, E0223."}, {"sha": "0956f2a56918cdffc065749cfce011d302244220", "filename": "src/test/ui/self/self-infer.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Fself%2Fself-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Fself%2Fself-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself-infer.rs?ref=eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "patch": "@@ -2,9 +2,7 @@ struct S;\n \n impl S {\n     fn f(self: _) {} //~ERROR the type placeholder `_` is not allowed within types on item sig\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item sig\n     fn g(self: &_) {} //~ERROR the type placeholder `_` is not allowed within types on item sig\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item sig\n }\n \n fn main() {}"}, {"sha": "1475b212b56a6a3b89d20c3e13f28e7f3294bb90", "filename": "src/test/ui/self/self-infer.stderr", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Fself%2Fself-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Fself%2Fself-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself-infer.stderr?ref=eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "patch": "@@ -1,9 +1,3 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/self-infer.rs:4:16\n-   |\n-LL |     fn f(self: _) {}\n-   |                ^ not allowed in type signatures\n-\n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n   --> $DIR/self-infer.rs:4:16\n    |\n@@ -16,13 +10,7 @@ LL |     fn f<T>(self: T) {}\n    |         ^^^       ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/self-infer.rs:6:17\n-   |\n-LL |     fn g(self: &_) {}\n-   |                 ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/self-infer.rs:6:17\n+  --> $DIR/self-infer.rs:5:17\n    |\n LL |     fn g(self: &_) {}\n    |                 ^ not allowed in type signatures\n@@ -32,6 +20,6 @@ help: use type parameters instead\n LL |     fn g<T>(self: &T) {}\n    |         ^^^        ^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0121`."}, {"sha": "6cd2b8c75b639eb71aef482a524c168d70e1df6a", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.rs", "status": "modified", "additions": 24, "deletions": 30, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs?ref=eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "patch": "@@ -1,4 +1,5 @@\n-#![feature(type_alias_impl_trait)] // Needed for single test `type Y = impl Trait<_>`\n+// Needed for `type Y = impl Trait<_>` and `type B = _;`\n+#![feature(type_alias_impl_trait, associated_type_defaults)]\n // This test checks that it is not possible to enable global type\n // inference by using the `_` type placeholder.\n \n@@ -19,24 +20,19 @@ static TEST5: (_, _) = (1, 2);\n \n fn test6(_: _) { }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n fn test6_b<T>(_: _, _: T) { }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n fn test6_c<T, K, L, A, B>(_: _, _: (T, K, L, A, B)) { }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n fn test7(x: _) { let _x: usize = x; }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n fn test8(_f: fn() -> _) { }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n struct Test9;\n \n@@ -46,7 +42,6 @@ impl Test9 {\n \n     fn test10(&self, _x : _) { }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n }\n \n fn test11(x: &usize) -> &_ {\n@@ -65,16 +60,12 @@ impl Clone for Test9 {\n \n     fn clone_from(&mut self, other: _) { *self = Test9; }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n }\n \n struct Test10 {\n     a: _,\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     b: (_, _),\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n }\n \n pub fn main() {\n@@ -102,16 +93,13 @@ pub fn main() {\n \n     fn fn_test6(_: _) { }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n     fn fn_test7(x: _) { let _x: usize = x; }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n     fn fn_test8(_f: fn() -> _) { }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n     //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n     struct FnTest9;\n \n@@ -121,7 +109,6 @@ pub fn main() {\n \n         fn fn_test10(&self, _x : _) { }\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-        //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     }\n \n     impl Clone for FnTest9 {\n@@ -130,16 +117,12 @@ pub fn main() {\n \n         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-        //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     }\n \n     struct FnTest10 {\n         a: _,\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-        //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n         b: (_, _),\n-        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-        //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     }\n \n     fn fn_test11(_: _) -> (_, _) { panic!() }\n@@ -156,30 +139,21 @@ pub fn main() {\n trait T {\n     fn method_test1(&self, x: _);\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     fn method_test2(&self, x: _) -> _;\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     fn method_test3(&self) -> _;\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     fn assoc_fn_test1(x: _);\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     fn assoc_fn_test2(x: _) -> _;\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n     fn assoc_fn_test3() -> _;\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n }\n \n struct BadStruct<_>(_);\n //~^ ERROR expected identifier, found reserved identifier `_`\n //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n trait BadTrait<_> {}\n //~^ ERROR expected identifier, found reserved identifier `_`\n impl BadTrait<_> for BadStruct<_> {}\n@@ -198,11 +172,9 @@ struct BadStruct1<_, _>(_);\n //~| ERROR expected identifier, found reserved identifier `_`\n //~| ERROR the name `_` is already used\n //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n struct BadStruct2<_, T>(_, T);\n //~^ ERROR expected identifier, found reserved identifier `_`\n //~| ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n \n type X = Box<_>;\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n@@ -217,3 +189,25 @@ type Y = impl Trait<_>;\n fn foo() -> Y {\n     Struct\n }\n+\n+trait Qux {\n+    type A;\n+    type B = _;\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    const C: _;\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    const D: _ = 42;\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    // type E: _; // FIXME: make the parser propagate the existence of `B`\n+}\n+impl Qux for Struct {\n+    type A = _;\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    type B = _;\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    const C: _;\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| ERROR associated constant in `impl` without body\n+    const D: _ = 42;\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+}"}, {"sha": "f2d02f70f4a667247b07b11c5350f273e8844db4", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.stderr", "status": "modified", "additions": 121, "deletions": 241, "changes": 362, "blob_url": "https://github.com/rust-lang/rust/blob/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr?ref=eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "patch": "@@ -1,43 +1,51 @@\n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:179:18\n+  --> $DIR/typeck_type_placeholder_item.rs:154:18\n    |\n LL | struct BadStruct<_>(_);\n    |                  ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:183:16\n+  --> $DIR/typeck_type_placeholder_item.rs:157:16\n    |\n LL | trait BadTrait<_> {}\n    |                ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:196:19\n+  --> $DIR/typeck_type_placeholder_item.rs:170:19\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                   ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:196:22\n+  --> $DIR/typeck_type_placeholder_item.rs:170:22\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                      ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:202:19\n+  --> $DIR/typeck_type_placeholder_item.rs:175:19\n    |\n LL | struct BadStruct2<_, T>(_, T);\n    |                   ^ expected identifier, found reserved identifier\n \n+error: associated constant in `impl` without body\n+  --> $DIR/typeck_type_placeholder_item.rs:208:5\n+   |\n+LL |     const C: _;\n+   |     ^^^^^^^^^^-\n+   |               |\n+   |               help: provide a definition for the constant: `= <expr>;`\n+\n error[E0403]: the name `_` is already used for a generic parameter in this item's generic parameters\n-  --> $DIR/typeck_type_placeholder_item.rs:196:22\n+  --> $DIR/typeck_type_placeholder_item.rs:170:22\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                   -  ^ already used\n    |                   |\n    |                   first use of `_`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:5:14\n+  --> $DIR/typeck_type_placeholder_item.rs:6:14\n    |\n LL | fn test() -> _ { 5 }\n    |              ^\n@@ -46,7 +54,7 @@ LL | fn test() -> _ { 5 }\n    |              help: replace with the correct return type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:8:16\n+  --> $DIR/typeck_type_placeholder_item.rs:9:16\n    |\n LL | fn test2() -> (_, _) { (5, 5) }\n    |               -^--^-\n@@ -56,7 +64,7 @@ LL | fn test2() -> (_, _) { (5, 5) }\n    |               help: replace with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:11:15\n+  --> $DIR/typeck_type_placeholder_item.rs:12:15\n    |\n LL | static TEST3: _ = \"test\";\n    |               ^\n@@ -65,7 +73,7 @@ LL | static TEST3: _ = \"test\";\n    |               help: replace `_` with the correct type: `&'static str`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:14:15\n+  --> $DIR/typeck_type_placeholder_item.rs:15:15\n    |\n LL | static TEST4: _ = 145;\n    |               ^\n@@ -74,19 +82,13 @@ LL | static TEST4: _ = 145;\n    |               help: replace `_` with the correct type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:17:15\n+  --> $DIR/typeck_type_placeholder_item.rs:18:15\n    |\n LL | static TEST5: (_, _) = (1, 2);\n    |               ^^^^^^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:20:13\n-   |\n-LL | fn test6(_: _) { }\n-   |             ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:20:13\n+  --> $DIR/typeck_type_placeholder_item.rs:21:13\n    |\n LL | fn test6(_: _) { }\n    |             ^ not allowed in type signatures\n@@ -96,12 +98,6 @@ help: use type parameters instead\n LL | fn test6<T>(_: T) { }\n    |         ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:24:18\n-   |\n-LL | fn test6_b<T>(_: _, _: T) { }\n-   |                  ^ not allowed in type signatures\n-\n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n   --> $DIR/typeck_type_placeholder_item.rs:24:18\n    |\n@@ -114,13 +110,7 @@ LL | fn test6_b<T, K>(_: K, _: T) { }\n    |             ^^^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:28:30\n-   |\n-LL | fn test6_c<T, K, L, A, B>(_: _, _: (T, K, L, A, B)) { }\n-   |                              ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:28:30\n+  --> $DIR/typeck_type_placeholder_item.rs:27:30\n    |\n LL | fn test6_c<T, K, L, A, B>(_: _, _: (T, K, L, A, B)) { }\n    |                              ^ not allowed in type signatures\n@@ -131,13 +121,7 @@ LL | fn test6_c<T, K, L, A, B, C>(_: C, _: (T, K, L, A, B)) { }\n    |                         ^^^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:32:13\n-   |\n-LL | fn test7(x: _) { let _x: usize = x; }\n-   |             ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:32:13\n+  --> $DIR/typeck_type_placeholder_item.rs:30:13\n    |\n LL | fn test7(x: _) { let _x: usize = x; }\n    |             ^ not allowed in type signatures\n@@ -148,19 +132,13 @@ LL | fn test7<T>(x: T) { let _x: usize = x; }\n    |         ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:36:22\n+  --> $DIR/typeck_type_placeholder_item.rs:33:22\n    |\n LL | fn test8(_f: fn() -> _) { }\n    |                      ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:36:22\n-   |\n-LL | fn test8(_f: fn() -> _) { }\n-   |                      ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:36:22\n+  --> $DIR/typeck_type_placeholder_item.rs:33:22\n    |\n LL | fn test8(_f: fn() -> _) { }\n    |                      ^ not allowed in type signatures\n@@ -171,61 +149,7 @@ LL | fn test8<T>(_f: fn() -> T) { }\n    |         ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:72:8\n-   |\n-LL |     a: _,\n-   |        ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:75:9\n-   |\n-LL |     b: (_, _),\n-   |         ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:75:12\n-   |\n-LL |     b: (_, _),\n-   |            ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:137:12\n-   |\n-LL |         a: _,\n-   |            ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:140:13\n-   |\n-LL |         b: (_, _),\n-   |             ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:140:16\n-   |\n-LL |         b: (_, _),\n-   |                ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:179:21\n-   |\n-LL | struct BadStruct<_>(_);\n-   |                     ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:196:25\n-   |\n-LL | struct BadStruct1<_, _>(_);\n-   |                         ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:202:25\n-   |\n-LL | struct BadStruct2<_, T>(_, T);\n-   |                         ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:52:26\n+  --> $DIR/typeck_type_placeholder_item.rs:47:26\n    |\n LL | fn test11(x: &usize) -> &_ {\n    |                         -^\n@@ -234,7 +158,7 @@ LL | fn test11(x: &usize) -> &_ {\n    |                         help: replace with the correct return type: `&&usize`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:57:52\n+  --> $DIR/typeck_type_placeholder_item.rs:52:52\n    |\n LL | unsafe fn test12(x: *const usize) -> *const *const _ {\n    |                                      --------------^\n@@ -243,11 +167,11 @@ LL | unsafe fn test12(x: *const usize) -> *const *const _ {\n    |                                      help: replace with the correct return type: `*const *const usize`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:72:8\n+  --> $DIR/typeck_type_placeholder_item.rs:66:8\n    |\n LL |     a: _,\n    |        ^ not allowed in type signatures\n-...\n+LL |\n LL |     b: (_, _),\n    |         ^  ^ not allowed in type signatures\n    |         |\n@@ -258,18 +182,17 @@ help: use type parameters instead\n LL | struct Test10<T> {\n LL |     a: T,\n LL |\n-LL |\n LL |     b: (T, T),\n    |\n \n error: missing type for `static` item\n-  --> $DIR/typeck_type_placeholder_item.rs:81:12\n+  --> $DIR/typeck_type_placeholder_item.rs:72:12\n    |\n LL |     static A = 42;\n    |            ^ help: provide a type for the item: `A: i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:83:15\n+  --> $DIR/typeck_type_placeholder_item.rs:74:15\n    |\n LL |     static B: _ = 42;\n    |               ^\n@@ -278,13 +201,13 @@ LL |     static B: _ = 42;\n    |               help: replace `_` with the correct type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:85:15\n+  --> $DIR/typeck_type_placeholder_item.rs:76:15\n    |\n LL |     static C: Option<_> = Some(42);\n    |               ^^^^^^^^^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:88:21\n+  --> $DIR/typeck_type_placeholder_item.rs:79:21\n    |\n LL |     fn fn_test() -> _ { 5 }\n    |                     ^\n@@ -293,7 +216,7 @@ LL |     fn fn_test() -> _ { 5 }\n    |                     help: replace with the correct return type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:91:23\n+  --> $DIR/typeck_type_placeholder_item.rs:82:23\n    |\n LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      -^--^-\n@@ -303,7 +226,7 @@ LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      help: replace with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:94:22\n+  --> $DIR/typeck_type_placeholder_item.rs:85:22\n    |\n LL |     static FN_TEST3: _ = \"test\";\n    |                      ^\n@@ -312,7 +235,7 @@ LL |     static FN_TEST3: _ = \"test\";\n    |                      help: replace `_` with the correct type: `&'static str`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:97:22\n+  --> $DIR/typeck_type_placeholder_item.rs:88:22\n    |\n LL |     static FN_TEST4: _ = 145;\n    |                      ^\n@@ -321,19 +244,13 @@ LL |     static FN_TEST4: _ = 145;\n    |                      help: replace `_` with the correct type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:100:22\n+  --> $DIR/typeck_type_placeholder_item.rs:91:22\n    |\n LL |     static FN_TEST5: (_, _) = (1, 2);\n    |                      ^^^^^^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:103:20\n-   |\n-LL |     fn fn_test6(_: _) { }\n-   |                    ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:103:20\n+  --> $DIR/typeck_type_placeholder_item.rs:94:20\n    |\n LL |     fn fn_test6(_: _) { }\n    |                    ^ not allowed in type signatures\n@@ -344,13 +261,7 @@ LL |     fn fn_test6<T>(_: T) { }\n    |                ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:107:20\n-   |\n-LL |     fn fn_test7(x: _) { let _x: usize = x; }\n-   |                    ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:107:20\n+  --> $DIR/typeck_type_placeholder_item.rs:97:20\n    |\n LL |     fn fn_test7(x: _) { let _x: usize = x; }\n    |                    ^ not allowed in type signatures\n@@ -361,19 +272,13 @@ LL |     fn fn_test7<T>(x: T) { let _x: usize = x; }\n    |                ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:111:29\n+  --> $DIR/typeck_type_placeholder_item.rs:100:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:111:29\n-   |\n-LL |     fn fn_test8(_f: fn() -> _) { }\n-   |                             ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:111:29\n+  --> $DIR/typeck_type_placeholder_item.rs:100:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^ not allowed in type signatures\n@@ -384,11 +289,11 @@ LL |     fn fn_test8<T>(_f: fn() -> T) { }\n    |                ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:137:12\n+  --> $DIR/typeck_type_placeholder_item.rs:123:12\n    |\n LL |         a: _,\n    |            ^ not allowed in type signatures\n-...\n+LL |\n LL |         b: (_, _),\n    |             ^  ^ not allowed in type signatures\n    |             |\n@@ -399,26 +304,25 @@ help: use type parameters instead\n LL |     struct FnTest10<T> {\n LL |         a: T,\n LL |\n-LL |\n LL |         b: (T, T),\n    |\n \n error[E0282]: type annotations needed\n-  --> $DIR/typeck_type_placeholder_item.rs:145:18\n+  --> $DIR/typeck_type_placeholder_item.rs:128:18\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                  ^ cannot infer type\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:145:28\n+  --> $DIR/typeck_type_placeholder_item.rs:128:28\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                            ^  ^ not allowed in type signatures\n    |                            |\n    |                            not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:149:30\n+  --> $DIR/typeck_type_placeholder_item.rs:132:30\n    |\n LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             -^--^-\n@@ -428,7 +332,7 @@ LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             help: replace with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:152:33\n+  --> $DIR/typeck_type_placeholder_item.rs:135:33\n    |\n LL |     fn fn_test13(x: _) -> (i32, _) { (x, x) }\n    |                           ------^-\n@@ -437,7 +341,7 @@ LL |     fn fn_test13(x: _) -> (i32, _) { (x, x) }\n    |                           help: replace with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:179:21\n+  --> $DIR/typeck_type_placeholder_item.rs:154:21\n    |\n LL | struct BadStruct<_>(_);\n    |                     ^ not allowed in type signatures\n@@ -448,19 +352,19 @@ LL | struct BadStruct<T>(T);\n    |                  ^  ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:185:32\n+  --> $DIR/typeck_type_placeholder_item.rs:159:32\n    |\n LL | impl BadTrait<_> for BadStruct<_> {}\n    |                                ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:185:15\n+  --> $DIR/typeck_type_placeholder_item.rs:159:15\n    |\n LL | impl BadTrait<_> for BadStruct<_> {}\n    |               ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:185:15\n+  --> $DIR/typeck_type_placeholder_item.rs:159:15\n    |\n LL | impl BadTrait<_> for BadStruct<_> {}\n    |               ^                ^ not allowed in type signatures\n@@ -473,13 +377,13 @@ LL | impl<T> BadTrait<T> for BadStruct<T> {}\n    |     ^^^          ^                ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:190:34\n+  --> $DIR/typeck_type_placeholder_item.rs:164:34\n    |\n LL | fn impl_trait() -> impl BadTrait<_> {\n    |                                  ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:196:25\n+  --> $DIR/typeck_type_placeholder_item.rs:170:25\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                         ^ not allowed in type signatures\n@@ -490,7 +394,7 @@ LL | struct BadStruct1<T, _>(T);\n    |                   ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:202:25\n+  --> $DIR/typeck_type_placeholder_item.rs:175:25\n    |\n LL | struct BadStruct2<_, T>(_, T);\n    |                         ^ not allowed in type signatures\n@@ -501,25 +405,19 @@ LL | struct BadStruct2<K, T>(K, T);\n    |                   ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:207:14\n+  --> $DIR/typeck_type_placeholder_item.rs:179:14\n    |\n LL | type X = Box<_>;\n    |              ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:207:14\n+  --> $DIR/typeck_type_placeholder_item.rs:179:14\n    |\n LL | type X = Box<_>;\n    |              ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:47:27\n-   |\n-LL |     fn test10(&self, _x : _) { }\n-   |                           ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:47:27\n+  --> $DIR/typeck_type_placeholder_item.rs:43:27\n    |\n LL |     fn test10(&self, _x : _) { }\n    |                           ^ not allowed in type signatures\n@@ -530,13 +428,7 @@ LL |     fn test10<T>(&self, _x : T) { }\n    |              ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:157:31\n-   |\n-LL |     fn method_test1(&self, x: _);\n-   |                               ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:157:31\n+  --> $DIR/typeck_type_placeholder_item.rs:140:31\n    |\n LL |     fn method_test1(&self, x: _);\n    |                               ^ not allowed in type signatures\n@@ -547,19 +439,7 @@ LL |     fn method_test1<T>(&self, x: T);\n    |                    ^^^           ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:160:37\n-   |\n-LL |     fn method_test2(&self, x: _) -> _;\n-   |                                     ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:160:31\n-   |\n-LL |     fn method_test2(&self, x: _) -> _;\n-   |                               ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:160:31\n+  --> $DIR/typeck_type_placeholder_item.rs:142:31\n    |\n LL |     fn method_test2(&self, x: _) -> _;\n    |                               ^     ^ not allowed in type signatures\n@@ -572,13 +452,7 @@ LL |     fn method_test2<T>(&self, x: T) -> T;\n    |                    ^^^           ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:164:31\n-   |\n-LL |     fn method_test3(&self) -> _;\n-   |                               ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:164:31\n+  --> $DIR/typeck_type_placeholder_item.rs:144:31\n    |\n LL |     fn method_test3(&self) -> _;\n    |                               ^ not allowed in type signatures\n@@ -589,13 +463,7 @@ LL |     fn method_test3<T>(&self) -> T;\n    |                    ^^^           ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:167:26\n-   |\n-LL |     fn assoc_fn_test1(x: _);\n-   |                          ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:167:26\n+  --> $DIR/typeck_type_placeholder_item.rs:146:26\n    |\n LL |     fn assoc_fn_test1(x: _);\n    |                          ^ not allowed in type signatures\n@@ -606,19 +474,7 @@ LL |     fn assoc_fn_test1<T>(x: T);\n    |                      ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:170:32\n-   |\n-LL |     fn assoc_fn_test2(x: _) -> _;\n-   |                                ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:170:26\n-   |\n-LL |     fn assoc_fn_test2(x: _) -> _;\n-   |                          ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:170:26\n+  --> $DIR/typeck_type_placeholder_item.rs:148:26\n    |\n LL |     fn assoc_fn_test2(x: _) -> _;\n    |                          ^     ^ not allowed in type signatures\n@@ -631,13 +487,7 @@ LL |     fn assoc_fn_test2<T>(x: T) -> T;\n    |                      ^^^    ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:174:28\n-   |\n-LL |     fn assoc_fn_test3() -> _;\n-   |                            ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:174:28\n+  --> $DIR/typeck_type_placeholder_item.rs:150:28\n    |\n LL |     fn assoc_fn_test3() -> _;\n    |                            ^ not allowed in type signatures\n@@ -648,13 +498,7 @@ LL |     fn assoc_fn_test3<T>() -> T;\n    |                      ^^^      ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:66:37\n-   |\n-LL |     fn clone_from(&mut self, other: _) { *self = Test9; }\n-   |                                     ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:66:37\n+  --> $DIR/typeck_type_placeholder_item.rs:61:37\n    |\n LL |     fn clone_from(&mut self, other: _) { *self = Test9; }\n    |                                     ^ not allowed in type signatures\n@@ -665,13 +509,7 @@ LL |     fn clone_from<T>(&mut self, other: T) { *self = Test9; }\n    |                  ^^^                   ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:122:34\n-   |\n-LL |         fn fn_test10(&self, _x : _) { }\n-   |                                  ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:122:34\n+  --> $DIR/typeck_type_placeholder_item.rs:110:34\n    |\n LL |         fn fn_test10(&self, _x : _) { }\n    |                                  ^ not allowed in type signatures\n@@ -682,13 +520,7 @@ LL |         fn fn_test10<T>(&self, _x : T) { }\n    |                     ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:131:41\n-   |\n-LL |         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n-   |                                         ^ not allowed in type signatures\n-\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:131:41\n+  --> $DIR/typeck_type_placeholder_item.rs:118:41\n    |\n LL |         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n    |                                         ^ not allowed in type signatures\n@@ -699,25 +531,46 @@ LL |         fn clone_from<T>(&mut self, other: T) { *self = FnTest9; }\n    |                      ^^^                   ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:190:34\n+  --> $DIR/typeck_type_placeholder_item.rs:164:34\n    |\n LL | fn impl_trait() -> impl BadTrait<_> {\n    |                                  ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:214:21\n+  --> $DIR/typeck_type_placeholder_item.rs:186:21\n    |\n LL | type Y = impl Trait<_>;\n    |                     ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:214:21\n+  --> $DIR/typeck_type_placeholder_item.rs:186:21\n    |\n LL | type Y = impl Trait<_>;\n    |                     ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:44:24\n+  --> $DIR/typeck_type_placeholder_item.rs:195:14\n+   |\n+LL |     type B = _;\n+   |              ^ not allowed in type signatures\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:197:14\n+   |\n+LL |     const C: _;\n+   |              ^ not allowed in type signatures\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:199:14\n+   |\n+LL |     const D: _ = 42;\n+   |              ^\n+   |              |\n+   |              not allowed in type signatures\n+   |              help: replace `_` with the correct type: `i32`\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:40:24\n    |\n LL |     fn test9(&self) -> _ { () }\n    |                        ^\n@@ -726,7 +579,7 @@ LL |     fn test9(&self) -> _ { () }\n    |                        help: replace with the correct return type: `()`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:63:24\n+  --> $DIR/typeck_type_placeholder_item.rs:58:24\n    |\n LL |     fn clone(&self) -> _ { Test9 }\n    |                        ^\n@@ -735,7 +588,7 @@ LL |     fn clone(&self) -> _ { Test9 }\n    |                        help: replace with the correct return type: `Test9`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:119:31\n+  --> $DIR/typeck_type_placeholder_item.rs:107:31\n    |\n LL |         fn fn_test9(&self) -> _ { () }\n    |                               ^\n@@ -744,15 +597,42 @@ LL |         fn fn_test9(&self) -> _ { () }\n    |                               help: replace with the correct return type: `()`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:128:28\n+  --> $DIR/typeck_type_placeholder_item.rs:115:28\n    |\n LL |         fn clone(&self) -> _ { FnTest9 }\n    |                            ^\n    |                            |\n    |                            not allowed in type signatures\n    |                            help: replace with the correct return type: `main::FnTest9`\n \n-error: aborting due to 92 previous errors\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:204:14\n+   |\n+LL |     type A = _;\n+   |              ^ not allowed in type signatures\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:206:14\n+   |\n+LL |     type B = _;\n+   |              ^ not allowed in type signatures\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:208:14\n+   |\n+LL |     const C: _;\n+   |              ^ not allowed in type signatures\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:211:14\n+   |\n+LL |     const D: _ = 42;\n+   |              ^\n+   |              |\n+   |              not allowed in type signatures\n+   |              help: replace `_` with the correct type: `i32`\n+\n+error: aborting due to 71 previous errors\n \n Some errors have detailed explanations: E0121, E0282, E0403.\n For more information about an error, try `rustc --explain E0121`."}]}