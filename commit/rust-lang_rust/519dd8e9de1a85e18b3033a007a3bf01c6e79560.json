{"sha": "519dd8e9de1a85e18b3033a007a3bf01c6e79560", "node_id": "C_kwDOAAsO6NoAKDUxOWRkOGU5ZGUxYTg1ZTE4YjMwMzNhMDA3YTNiZjAxYzZlNzk1NjA", "commit": {"author": {"name": "Christian Poveda", "email": "git@pvdrz.com", "date": "2022-04-25T20:55:15Z"}, "committer": {"name": "Christian Poveda", "email": "git@pvdrz.com", "date": "2022-04-25T20:55:15Z"}, "message": "migrate ambiguous plus diagnostic", "tree": {"sha": "9b384cc1fdf7ca794b51b6688671769a56278a2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b384cc1fdf7ca794b51b6688671769a56278a2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/519dd8e9de1a85e18b3033a007a3bf01c6e79560", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCYmcKswAKCRAnUl7150IK\nUPpDAQCk85XF9rrLdhFafGKnEKpUoMcJMWZOiwCEZHFae238SwEAnkveCmyGdUUq\nyT0n6WS46lwovSNzspRb3TS/aQ/+2QY=\n=EcCH\n-----END PGP SIGNATURE-----", "payload": "tree 9b384cc1fdf7ca794b51b6688671769a56278a2a\nparent eb55cdce4bc1c03e1ce805af633dac611a948d43\nauthor Christian Poveda <git@pvdrz.com> 1650920115 +0200\ncommitter Christian Poveda <git@pvdrz.com> 1650920115 +0200\n\nmigrate ambiguous plus diagnostic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/519dd8e9de1a85e18b3033a007a3bf01c6e79560", "html_url": "https://github.com/rust-lang/rust/commit/519dd8e9de1a85e18b3033a007a3bf01c6e79560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/519dd8e9de1a85e18b3033a007a3bf01c6e79560/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb55cdce4bc1c03e1ce805af633dac611a948d43", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb55cdce4bc1c03e1ce805af633dac611a948d43", "html_url": "https://github.com/rust-lang/rust/commit/eb55cdce4bc1c03e1ce805af633dac611a948d43"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "fd7daadb1ab4243180f61a4abf15a2e722b041b5", "filename": "compiler/rustc_error_messages/locales/en-US/parser.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/519dd8e9de1a85e18b3033a007a3bf01c6e79560/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/519dd8e9de1a85e18b3033a007a3bf01c6e79560/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl?ref=519dd8e9de1a85e18b3033a007a3bf01c6e79560", "patch": "@@ -1,3 +1,6 @@\n parser-struct-literal-body-without-path =\n     struct literal body without path\n     .suggestion = you might have forgotten to add the struct literal inside the block\n+parser-maybe-report-ambiguous-plus =\n+    ambiguous `+` in a type\n+    .suggestion = use parentheses to disambiguate"}, {"sha": "c6ca260e9831e184b2b9d366ab019cfd0567b1d3", "filename": "compiler/rustc_parse/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/519dd8e9de1a85e18b3033a007a3bf01c6e79560/compiler%2Frustc_parse%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/519dd8e9de1a85e18b3033a007a3bf01c6e79560/compiler%2Frustc_parse%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2FCargo.toml?ref=519dd8e9de1a85e18b3033a007a3bf01c6e79560", "patch": "@@ -13,6 +13,7 @@ rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_feature = { path = \"../rustc_feature\" }\n rustc_lexer = { path = \"../rustc_lexer\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "d270f3606d760f203268539eac2d9c1a436fa216", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/519dd8e9de1a85e18b3033a007a3bf01c6e79560/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/519dd8e9de1a85e18b3033a007a3bf01c6e79560/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=519dd8e9de1a85e18b3033a007a3bf01c6e79560", "patch": "@@ -21,6 +21,7 @@ use rustc_errors::{pluralize, struct_span_err, Diagnostic, EmissionGuarantee, Er\n use rustc_errors::{\n     Applicability, DiagnosticBuilder, DiagnosticMessage, Handler, MultiSpan, PResult,\n };\n+use rustc_macros::SessionDiagnostic;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, Ident};\n use rustc_span::{Span, SpanSnippetError, DUMMY_SP};\n@@ -1170,16 +1171,29 @@ impl<'a> Parser<'a> {\n         impl_dyn_multi: bool,\n         ty: &Ty,\n     ) {\n+        #[derive(SessionDiagnostic)]\n+        #[error(slug = \"parser-maybe-report-ambiguous-plus\")]\n+        struct AmbiguousPlus {\n+            pub sum_with_parens: String,\n+            #[primary_span]\n+            #[suggestion(code = \"{sum_with_parens}\")]\n+            pub span: Span,\n+        }\n+\n         if matches!(allow_plus, AllowPlus::No) && impl_dyn_multi {\n-            let sum_with_parens = format!(\"({})\", pprust::ty_to_string(&ty));\n-            self.struct_span_err(ty.span, \"ambiguous `+` in a type\")\n-                .span_suggestion(\n-                    ty.span,\n-                    \"use parentheses to disambiguate\",\n-                    sum_with_parens,\n-                    Applicability::MachineApplicable,\n-                )\n-                .emit();\n+            self.sess.emit_err(AmbiguousPlus {\n+                sum_with_parens: format!(\"({})\", pprust::ty_to_string(&ty)),\n+                span: ty.span,\n+            });\n+            // let sum_with_parens = format!(\"({})\", pprust::ty_to_string(&ty));\n+            // self.struct_span_err(ty.span, \"ambiguous `+` in a type\")\n+            //     .span_suggestion(\n+            //         ty.span,\n+            //         \"use parentheses to disambiguate\",\n+            //         sum_with_parens,\n+            //         Applicability::MachineApplicable,\n+            //     )\n+            //     .emit();\n         }\n     }\n "}]}