{"sha": "e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MWYyNjFlM2Y5Y2E2OTIxZDE2NjY3MWYxZTViN2EzOGU4ZTNhOGI=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-22T20:17:57Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-22T20:29:46Z"}, "message": "Exercise self-calls and overriding together a bit more.", "tree": {"sha": "1a91252dacd321eca22ec288e508721066976f92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a91252dacd321eca22ec288e508721066976f92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b", "html_url": "https://github.com/rust-lang/rust/commit/e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fefeebce24eb429309d1aac8e61d97b6d814867d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fefeebce24eb429309d1aac8e61d97b6d814867d", "html_url": "https://github.com/rust-lang/rust/commit/fefeebce24eb429309d1aac8e61d97b6d814867d"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "9690a4b4de3f1f5dd7aa3f33b4dd3aa5380d6412", "filename": "src/test/run-pass/anon-obj-with-self-call.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b/src%2Ftest%2Frun-pass%2Fanon-obj-with-self-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b/src%2Ftest%2Frun-pass%2Fanon-obj-with-self-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-obj-with-self-call.rs?ref=e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b", "patch": "@@ -22,4 +22,16 @@ fn main() {\n \n     assert (my_b.baz() == 2);\n \n+    auto my_c = obj {\n+        fn foo() -> int {\n+            ret 3;\n+        }\n+        fn baz() -> int {\n+            ret self.foo();\n+        }\n+        with my_a\n+    };\n+\n+    assert (my_c.baz() == 3);\n+    assert (my_c.bar() == 3);\n }"}]}