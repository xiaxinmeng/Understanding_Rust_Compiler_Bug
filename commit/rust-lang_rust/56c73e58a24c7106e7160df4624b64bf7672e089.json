{"sha": "56c73e58a24c7106e7160df4624b64bf7672e089", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YzczZTU4YTI0YzcxMDZlNzE2MGRmNDYyNGI2NGJmNzY3MmUwODk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-01-21T19:24:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-01-21T19:27:29Z"}, "message": "Indicate that trans is always dependent on typeck", "tree": {"sha": "6bba39fd3320181bbb294d04da30b5234084f723", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bba39fd3320181bbb294d04da30b5234084f723"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56c73e58a24c7106e7160df4624b64bf7672e089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56c73e58a24c7106e7160df4624b64bf7672e089", "html_url": "https://github.com/rust-lang/rust/commit/56c73e58a24c7106e7160df4624b64bf7672e089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56c73e58a24c7106e7160df4624b64bf7672e089/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bdefd706489b29cad89b27daecd63244d52f2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bdefd706489b29cad89b27daecd63244d52f2ff", "html_url": "https://github.com/rust-lang/rust/commit/0bdefd706489b29cad89b27daecd63244d52f2ff"}], "stats": {"total": 62, "additions": 58, "deletions": 4}, "files": [{"sha": "7460ef82ebee4d493e79f1b49fe5474565c1e3d9", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56c73e58a24c7106e7160df4624b64bf7672e089/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c73e58a24c7106e7160df4624b64bf7672e089/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=56c73e58a24c7106e7160df4624b64bf7672e089", "patch": "@@ -3323,6 +3323,14 @@ impl<'a, 'tcx, 'v> Visitor<'v> for TransItemsWithinModVisitor<'a, 'tcx> {\n                 // giving `trans_item` access to this item, so also record a read.\n                 tcx.dep_graph.with_task(DepNode::TransCrateItem(def_id), || {\n                     tcx.dep_graph.read(DepNode::Hir(def_id));\n+\n+                    // We are going to be accessing various tables\n+                    // generated by TypeckItemBody; we also assume\n+                    // that the body passes type check. These tables\n+                    // are not individually tracked, so just register\n+                    // a read here.\n+                    tcx.dep_graph.read(DepNode::TypeckItemBody(def_id));\n+\n                     trans_item(self.ccx, i);\n                 });\n "}, {"sha": "d1ecff5984ac5d76f83f8fb01aabe8edff31fd17", "filename": "src/test/compile-fail/dep-graph-assoc-type-trans.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/56c73e58a24c7106e7160df4624b64bf7672e089/src%2Ftest%2Fcompile-fail%2Fdep-graph-assoc-type-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c73e58a24c7106e7160df4624b64bf7672e089/src%2Ftest%2Fcompile-fail%2Fdep-graph-assoc-type-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-assoc-type-trans.rs?ref=56c73e58a24c7106e7160df4624b64bf7672e089", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that when a trait impl changes, fns whose body uses that trait\n+// must also be recompiled.\n+\n+// compile-flags: -Z incr-comp\n+\n+#![feature(rustc_attrs)]\n+#![allow(warnings)]\n+\n+fn main() { }\n+\n+pub trait Foo: Sized {\n+    type T;\n+    fn method(self) { }\n+}\n+\n+mod x {\n+    use Foo;\n+\n+    #[rustc_if_this_changed]\n+    impl Foo for char { type T = char; }\n+\n+    impl Foo for u32 { type T = u32; }\n+}\n+\n+mod y {\n+    use Foo;\n+\n+    #[rustc_then_this_would_need(TypeckItemBody)] //~ ERROR OK\n+    #[rustc_then_this_would_need(TransCrateItem)] //~ ERROR OK\n+    pub fn use_char_assoc() {\n+        // Careful here: in the representation, <char as Foo>::T gets\n+        // normalized away, so at a certain point we had no edge to\n+        // trans.  (But now trans just depends on typeck.)\n+        let x: <char as Foo>::T = 'a';\n+    }\n+\n+    pub fn take_foo<T:Foo>(t: T) { }\n+}"}, {"sha": "b38fdad9809ed1cb4b57f80a9d6d88e8d163216b", "filename": "src/test/compile-fail/dep-graph-trait-impl.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56c73e58a24c7106e7160df4624b64bf7672e089/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c73e58a24c7106e7160df4624b64bf7672e089/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl.rs?ref=56c73e58a24c7106e7160df4624b64bf7672e089", "patch": "@@ -40,9 +40,8 @@ mod y {\n         char::method('a');\n     }\n \n-    // FIXME(#30741) tcx fulfillment cache not tracked\n     #[rustc_then_this_would_need(TypeckItemBody)] //~ ERROR OK\n-    #[rustc_then_this_would_need(TransCrateItem)] //~ ERROR no path\n+    #[rustc_then_this_would_need(TransCrateItem)] //~ ERROR OK\n     pub fn take_foo_with_char() {\n         take_foo::<char>('a');\n     }\n@@ -53,9 +52,8 @@ mod y {\n         u32::method(22);\n     }\n \n-    // FIXME(#30741) tcx fulfillment cache not tracked\n     #[rustc_then_this_would_need(TypeckItemBody)] //~ ERROR OK\n-    #[rustc_then_this_would_need(TransCrateItem)] //~ ERROR no path\n+    #[rustc_then_this_would_need(TransCrateItem)] //~ ERROR OK\n     pub fn take_foo_with_u32() {\n         take_foo::<u32>(22);\n     }"}]}