{"sha": "77bd4dc65406ba3cedbc779e6f6280868231912e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3YmQ0ZGM2NTQwNmJhM2NlZGJjNzc5ZTZmNjI4MDg2ODIzMTkxMmU=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-07-11T00:06:38Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-07-11T00:06:38Z"}, "message": "Disable big-endian simd in swap_nonoverlapping_bytes\n\nThis is a workaround for #42778, which was git-bisected to #40454's\noptimizations to `mem::swap`, later moved to `ptr` in #42819.  Natively\ncompiled rustc couldn't even compile stage1 libcore on powerpc64 and\ns390x, but they work fine without this `repr(simd)`.  Since powerpc64le\nworks OK, it seems probably related to being big-endian.\n\nThe underlying problem is not yet known, but this at least makes those\narchitectures functional again in the meantime.\n\ncc @arielb1", "tree": {"sha": "f2201497e1a884ab1fc3e55ea09ea1cea10053dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2201497e1a884ab1fc3e55ea09ea1cea10053dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77bd4dc65406ba3cedbc779e6f6280868231912e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77bd4dc65406ba3cedbc779e6f6280868231912e", "html_url": "https://github.com/rust-lang/rust/commit/77bd4dc65406ba3cedbc779e6f6280868231912e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77bd4dc65406ba3cedbc779e6f6280868231912e/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf0a9e0b4d3a4dd09717960840798e2933ec7568", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0a9e0b4d3a4dd09717960840798e2933ec7568", "html_url": "https://github.com/rust-lang/rust/commit/bf0a9e0b4d3a4dd09717960840798e2933ec7568"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "4f118f58441c4bb8f0c4dcef25ad424cedd0675f", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/77bd4dc65406ba3cedbc779e6f6280868231912e/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77bd4dc65406ba3cedbc779e6f6280868231912e/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=77bd4dc65406ba3cedbc779e6f6280868231912e", "patch": "@@ -160,7 +160,10 @@ unsafe fn swap_nonoverlapping_bytes(x: *mut u8, y: *mut u8, len: usize) {\n     // #[repr(simd)], even if we don't actually use this struct directly.\n     //\n     // FIXME repr(simd) broken on emscripten and redox\n-    #[cfg_attr(not(any(target_os = \"emscripten\", target_os = \"redox\")), repr(simd))]\n+    // It's also broken on big-endian powerpc64 and s390x.  #42778\n+    #[cfg_attr(not(any(target_os = \"emscripten\", target_os = \"redox\",\n+                       target_endian = \"big\")),\n+               repr(simd))]\n     struct Block(u64, u64, u64, u64);\n     struct UnalignedBlock(u64, u64, u64, u64);\n "}]}