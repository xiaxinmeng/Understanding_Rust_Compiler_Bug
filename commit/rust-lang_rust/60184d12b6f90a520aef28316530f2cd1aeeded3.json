{"sha": "60184d12b6f90a520aef28316530f2cd1aeeded3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMTg0ZDEyYjZmOTBhNTIwYWVmMjgzMTY1MzBmMmNkMWFlZWRlZDM=", "commit": {"author": {"name": "William Ting", "email": "william.h.ting@gmail.com", "date": "2013-01-21T17:20:15Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-22T03:50:38Z"}, "message": "Update documentation with examples for various int, vec methods.\n\nadd int::range(), remainder() examples\nadd vec::foldl(), foldr() examples\n\ntweak", "tree": {"sha": "512a2482909d716a07b10077b76af4285c1529e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/512a2482909d716a07b10077b76af4285c1529e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60184d12b6f90a520aef28316530f2cd1aeeded3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60184d12b6f90a520aef28316530f2cd1aeeded3", "html_url": "https://github.com/rust-lang/rust/commit/60184d12b6f90a520aef28316530f2cd1aeeded3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60184d12b6f90a520aef28316530f2cd1aeeded3/comments", "author": {"login": "wting", "id": 622170, "node_id": "MDQ6VXNlcjYyMjE3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/622170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wting", "html_url": "https://github.com/wting", "followers_url": "https://api.github.com/users/wting/followers", "following_url": "https://api.github.com/users/wting/following{/other_user}", "gists_url": "https://api.github.com/users/wting/gists{/gist_id}", "starred_url": "https://api.github.com/users/wting/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wting/subscriptions", "organizations_url": "https://api.github.com/users/wting/orgs", "repos_url": "https://api.github.com/users/wting/repos", "events_url": "https://api.github.com/users/wting/events{/privacy}", "received_events_url": "https://api.github.com/users/wting/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b49c47a4c9ee7e479a8750d02f9c9d1b0fd06781", "url": "https://api.github.com/repos/rust-lang/rust/commits/b49c47a4c9ee7e479a8750d02f9c9d1b0fd06781", "html_url": "https://github.com/rust-lang/rust/commit/b49c47a4c9ee7e479a8750d02f9c9d1b0fd06781"}], "stats": {"total": 77, "additions": 74, "deletions": 3}, "files": [{"sha": "cc318fb4add13f84b4b05a459e6939bd460180dd", "filename": "src/libcore/int-template.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/60184d12b6f90a520aef28316530f2cd1aeeded3/src%2Flibcore%2Fint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60184d12b6f90a520aef28316530f2cd1aeeded3/src%2Flibcore%2Fint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template.rs?ref=60184d12b6f90a520aef28316530f2cd1aeeded3", "patch": "@@ -45,6 +45,27 @@ pub pure fn sub(x: T, y: T) -> T { x - y }\n pub pure fn mul(x: T, y: T) -> T { x * y }\n #[inline(always)]\n pub pure fn div(x: T, y: T) -> T { x / y }\n+\n+/**\n+ * Returns the remainder of y / x.\n+ *\n+ * # Examples\n+ * ~~~\n+ * assert int::rem(5 / 2) == 1;\n+ * ~~~\n+ *\n+ * When faced with negative numbers, the result copies the sign of the\n+ * dividend.\n+ *\n+ * ~~~\n+ * assert int::rem(2 / -3) ==  2;\n+ * ~~~\n+ *\n+ * ~~~\n+ * assert int::rem(-2 / 3) ==  -2;\n+ * ~~~\n+ *\n+ */\n #[inline(always)]\n pub pure fn rem(x: T, y: T) -> T { x % y }\n \n@@ -70,8 +91,24 @@ pub pure fn is_nonpositive(x: T) -> bool { x <= 0 as T }\n #[inline(always)]\n pub pure fn is_nonnegative(x: T) -> bool { x >= 0 as T }\n \n+/**\n+ * Iterate over the range [`lo`..`hi`)\n+ *\n+ * # Arguments\n+ *\n+ * * `lo` - lower bound, inclusive\n+ * * `hi` - higher bound, exclusive\n+ *\n+ * # Examples\n+ * ~~~\n+ * let mut sum = 0;\n+ * for int::range(1, 5) |i| {\n+ *     sum += i;\n+ * }\n+ * assert sum == 10;\n+ * ~~~\n+ */\n #[inline(always)]\n-/// Iterate over the range [`lo`..`hi`)\n pub pure fn range(lo: T, hi: T, it: fn(T) -> bool) {\n     let mut i = lo;\n     while i < hi {"}, {"sha": "763da29efcb51ef175bcd06fce0e3e6e2d1f739b", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/60184d12b6f90a520aef28316530f2cd1aeeded3/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60184d12b6f90a520aef28316530f2cd1aeeded3/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=60184d12b6f90a520aef28316530f2cd1aeeded3", "patch": "@@ -922,7 +922,23 @@ pub pure fn connect<T: Copy>(v: &[~[T]], sep: &T) -> ~[T] {\n     r\n }\n \n-/// Reduce a vector from left to right\n+/**\n+ * Reduces a vector from left to right.\n+ *\n+ * # Arguments\n+ * * `z` - initial accumulator value\n+ * * `v` - vector to iterate over\n+ * * `p` - a closure to do operate on vector elements\n+ *\n+ * # Examples\n+ *\n+ * Sum all values in the vector [1, 2, 3]:\n+ *\n+ * ~~~\n+ * vec::foldl(0, [1, 2, 3], |a, b| a + *b);\n+ * ~~~\n+ *\n+ */\n pub pure fn foldl<T, U>(z: T, v: &[U], p: fn(t: T, u: &U) -> T) -> T {\n     let mut accum = z;\n     let mut i = 0;\n@@ -936,7 +952,25 @@ pub pure fn foldl<T, U>(z: T, v: &[U], p: fn(t: T, u: &U) -> T) -> T {\n     return accum;\n }\n \n-/// Reduce a vector from right to left\n+/**\n+ * Reduces a vector from right to left. Note that the argument order is\n+ * reversed compared to `foldl` to reflect the order they are provided to\n+ * the closure.\n+ *\n+ * # Arguments\n+ * * `v` - vector to iterate over\n+ * * `z` - initial accumulator value\n+ * * `p` - a closure to do operate on vector elements\n+ *\n+ * # Examples\n+ *\n+ * Sum all values in the vector [1, 2, 3]:\n+ *\n+ * ~~~\n+ * vec::foldr([1, 2, 3], 0, |a, b| a + *b);\n+ * ~~~\n+ *\n+ */\n pub pure fn foldr<T, U: Copy>(v: &[T], z: U, p: fn(t: &T, u: U) -> U) -> U {\n     let mut accum = z;\n     for rev_each(v) |elt| {"}]}