{"sha": "7c6c812a74534173fc7070e3534e612a6219034a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNmM4MTJhNzQ1MzQxNzNmYzcwNzBlMzUzNGU2MTJhNjIxOTAzNGE=", "commit": {"author": {"name": "Jakob Hellermann", "email": "jakob.hellermann@protonmail.com", "date": "2020-11-17T14:16:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-17T14:16:52Z"}, "message": "fix typos in syntax.md", "tree": {"sha": "41fd68bd942f236e8be208748d87de0a88da59b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41fd68bd942f236e8be208748d87de0a88da59b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c6c812a74534173fc7070e3534e612a6219034a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfs9tUCRBK7hj4Ov3rIwAAdHIIAGNRer86oD+02fZSLmld7f2E\n1SBn0WMB0pYv0+IUPSgERQnn5DCCYSti1WJdh0+RW7uqC4EGEw+uLuoVyc5ITWsf\nSvdVpeq3Adz3GrR8ECY9C9aOJWquzEUrT8qhLyXFSeaNawnrtKmjpp1q9GhacFLi\ndapjYyUS8On8NLdOIke0s65IkUiMIRJwzdcWJ8SmTvRLJ6u1VXmilcscx8jq8bHP\n9+qtzt4zgvfXLnyzcYqAvlAcXAVH0xJePuRTBnGABW+3oBZTszwQEQ3dJwLNYDty\nyRs47pLe5RWRK0JcFnRj3b+QP7MCQffUMlR2D822qzR2kG3LM8royrsY/IYesz0=\n=UH97\n-----END PGP SIGNATURE-----\n", "payload": "tree 41fd68bd942f236e8be208748d87de0a88da59b4\nparent 66bcdcbb3615b0d1d47ca7c4abf2c3dd5ab0b73d\nauthor Jakob Hellermann <jakob.hellermann@protonmail.com> 1605622612 +0100\ncommitter GitHub <noreply@github.com> 1605622612 +0100\n\nfix typos in syntax.md"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c6c812a74534173fc7070e3534e612a6219034a", "html_url": "https://github.com/rust-lang/rust/commit/7c6c812a74534173fc7070e3534e612a6219034a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c6c812a74534173fc7070e3534e612a6219034a/comments", "author": {"login": "jakobhellermann", "id": 22177966, "node_id": "MDQ6VXNlcjIyMTc3OTY2", "avatar_url": "https://avatars.githubusercontent.com/u/22177966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakobhellermann", "html_url": "https://github.com/jakobhellermann", "followers_url": "https://api.github.com/users/jakobhellermann/followers", "following_url": "https://api.github.com/users/jakobhellermann/following{/other_user}", "gists_url": "https://api.github.com/users/jakobhellermann/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakobhellermann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakobhellermann/subscriptions", "organizations_url": "https://api.github.com/users/jakobhellermann/orgs", "repos_url": "https://api.github.com/users/jakobhellermann/repos", "events_url": "https://api.github.com/users/jakobhellermann/events{/privacy}", "received_events_url": "https://api.github.com/users/jakobhellermann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66bcdcbb3615b0d1d47ca7c4abf2c3dd5ab0b73d", "url": "https://api.github.com/repos/rust-lang/rust/commits/66bcdcbb3615b0d1d47ca7c4abf2c3dd5ab0b73d", "html_url": "https://github.com/rust-lang/rust/commit/66bcdcbb3615b0d1d47ca7c4abf2c3dd5ab0b73d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1edafab680e9930476b1c31d8b647f60687b087f", "filename": "docs/dev/syntax.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c6c812a74534173fc7070e3534e612a6219034a/docs%2Fdev%2Fsyntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/7c6c812a74534173fc7070e3534e612a6219034a/docs%2Fdev%2Fsyntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fsyntax.md?ref=7c6c812a74534173fc7070e3534e612a6219034a", "patch": "@@ -195,7 +195,7 @@ Modeling this with immutable trees is possible, but annoying.\n A function green tree is not super-convenient to use.\n The biggest problem is accessing parents (there are no parent pointers!).\n But there are also \"identify\" issues.\n-Let's say you want to write a code which builds a list of expressions in a file: `fn collect_exrepssions(file: GreenNode) -> HashSet<GreenNode>`.\n+Let's say you want to write a code which builds a list of expressions in a file: `fn collect_expressions(file: GreenNode) -> HashSet<GreenNode>`.\n For the input like\n \n ```rust\n@@ -236,7 +236,7 @@ impl SyntaxNode {\n         self.parent.clone()\n     }\n     fn children(&self) -> impl Iterator<Item = SyntaxNode> {\n-        let mut offset = self.offset\n+        let mut offset = self.offset;\n         self.green.children().map(|green_child| {\n             let child_offset = offset;\n             offset += green_child.text_len;"}]}