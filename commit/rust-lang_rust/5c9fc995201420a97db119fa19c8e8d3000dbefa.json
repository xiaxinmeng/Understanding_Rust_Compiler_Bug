{"sha": "5c9fc995201420a97db119fa19c8e8d3000dbefa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjOWZjOTk1MjAxNDIwYTk3ZGIxMTlmYTE5YzhlOGQzMDAwZGJlZmE=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-09-27T00:29:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-27T00:29:49Z"}, "message": "Rollup merge of #36754 - tmiasko:getaddrinfo-errors, r=alexcrichton\n\nWhen getaddrinfo returns EAI_SYSTEM retrieve actual error from errno.\n\nFixes issue #36546. This change also updates libc to earliest version\nthat includes EAI_SYSTEM constant.\n\nPreviously, in cases where `EAI_SYSTEM` has been returned from getaddrinfo, the\nresulting `io::Error` would be broadly described as \"System error\":\n\n    Error { repr: Custom(Custom { kind: Other, error: StringError(\"failed to lookup address information: System error\") }) }\n\nAfter change a more detailed error is crated based on particular value of\nerrno, for example:\n\n    Error { repr: Os { code: 64, message: \"Machine is not on the network\" } }\n\nThe only downside is that the prefix \"failed to lookup address information\" is\nno longer included in the error message.", "tree": {"sha": "4bbd170aff91d8537f41fa08eeaae8f47bf4609e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bbd170aff91d8537f41fa08eeaae8f47bf4609e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c9fc995201420a97db119fa19c8e8d3000dbefa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c9fc995201420a97db119fa19c8e8d3000dbefa", "html_url": "https://github.com/rust-lang/rust/commit/5c9fc995201420a97db119fa19c8e8d3000dbefa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c9fc995201420a97db119fa19c8e8d3000dbefa/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "816f1477bbcf591c0cce20f92824606412ed3c5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/816f1477bbcf591c0cce20f92824606412ed3c5b", "html_url": "https://github.com/rust-lang/rust/commit/816f1477bbcf591c0cce20f92824606412ed3c5b"}, {"sha": "c52b957b897a049cfe5f7042eed08fb46ca11c2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c52b957b897a049cfe5f7042eed08fb46ca11c2e", "html_url": "https://github.com/rust-lang/rust/commit/c52b957b897a049cfe5f7042eed08fb46ca11c2e"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "eb708c020826a8d792a5a5275be147aabe47fe24", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=5c9fc995201420a97db119fa19c8e8d3000dbefa", "patch": "@@ -1 +1 @@\n-Subproject commit d4f6a19c55a03e3f9f6fb7377911b37ed807eb6c\n+Subproject commit eb708c020826a8d792a5a5275be147aabe47fe24"}, {"sha": "ec7ccdf5894fd01b17568bc7e314f4179ad79453", "filename": "src/libstd/sys/unix/net.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5c9fc995201420a97db119fa19c8e8d3000dbefa/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c9fc995201420a97db119fa19c8e8d3000dbefa/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fnet.rs?ref=5c9fc995201420a97db119fa19c8e8d3000dbefa", "patch": "@@ -10,7 +10,7 @@\n \n use ffi::CStr;\n use io;\n-use libc::{self, c_int, size_t, sockaddr, socklen_t};\n+use libc::{self, c_int, size_t, sockaddr, socklen_t, EAI_SYSTEM};\n use net::{SocketAddr, Shutdown};\n use str;\n use sys::fd::FileDesc;\n@@ -38,7 +38,12 @@ pub struct Socket(FileDesc);\n pub fn init() {}\n \n pub fn cvt_gai(err: c_int) -> io::Result<()> {\n-    if err == 0 { return Ok(()) }\n+    if err == 0 {\n+        return Ok(())\n+    }\n+    if err == EAI_SYSTEM {\n+        return Err(io::Error::last_os_error())\n+    }\n \n     let detail = unsafe {\n         str::from_utf8(CStr::from_ptr(libc::gai_strerror(err)).to_bytes()).unwrap()"}]}