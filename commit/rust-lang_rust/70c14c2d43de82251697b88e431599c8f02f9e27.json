{"sha": "70c14c2d43de82251697b88e431599c8f02f9e27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYzE0YzJkNDNkZTgyMjUxNjk3Yjg4ZTQzMTU5OWM4ZjAyZjllMjc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-11T11:16:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-11T11:16:02Z"}, "message": "Rollup merge of #73164 - GuillaumeGomez:add-e0761, r=petrochenkov\n\nAdd new E0762 error code", "tree": {"sha": "739a2b8b380f7820fa642d17810255686ce81004", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/739a2b8b380f7820fa642d17810255686ce81004"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70c14c2d43de82251697b88e431599c8f02f9e27", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe4hJzCRBK7hj4Ov3rIwAAdHIIABpr5eTOXzIOsTazBaxirHi2\njM/utK6zTMy+Rap7+myU8doEWELHNkS5HVdL/1AY0lwFQ6NFUILeamUrgoAhUvq8\nog+Cy+5Ap6WfYkPWg0+nNcyRG5w3Y9DH/CgVtKTqiXvixJIcDgGR8Sz1iod9T36U\n2eOQhiYIyzbubLC0dNbK++Uh/dDwCnGhuoL2ixVX2wXoYok2T2RNmyUR1LjRMzvV\nOc314ugBXcaWUeyHMQZrH/j6NIzvhChqlD8y8HwwgcL81kOhjsFECwTEgy8SwuNV\nI/34BuBm8cghOnZW+1xHSIW4/iEwgPvyQxwjHXk9CNIMv4scTQEKyuC/Z2q6HVA=\n=F3KG\n-----END PGP SIGNATURE-----\n", "payload": "tree 739a2b8b380f7820fa642d17810255686ce81004\nparent b4af87406b2e8da7e6437115bbdde59a71f3a4e7\nparent 7bd87cfac2ca4c2c19b04018774b1fb1a9b39e48\nauthor Dylan DPC <dylan.dpc@gmail.com> 1591874162 +0200\ncommitter GitHub <noreply@github.com> 1591874162 +0200\n\nRollup merge of #73164 - GuillaumeGomez:add-e0761, r=petrochenkov\n\nAdd new E0762 error code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70c14c2d43de82251697b88e431599c8f02f9e27", "html_url": "https://github.com/rust-lang/rust/commit/70c14c2d43de82251697b88e431599c8f02f9e27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70c14c2d43de82251697b88e431599c8f02f9e27/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4af87406b2e8da7e6437115bbdde59a71f3a4e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4af87406b2e8da7e6437115bbdde59a71f3a4e7", "html_url": "https://github.com/rust-lang/rust/commit/b4af87406b2e8da7e6437115bbdde59a71f3a4e7"}, {"sha": "7bd87cfac2ca4c2c19b04018774b1fb1a9b39e48", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd87cfac2ca4c2c19b04018774b1fb1a9b39e48", "html_url": "https://github.com/rust-lang/rust/commit/7bd87cfac2ca4c2c19b04018774b1fb1a9b39e48"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "285242647b38d5dd770998f52396758135e22a57", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=70c14c2d43de82251697b88e431599c8f02f9e27", "patch": "@@ -440,6 +440,7 @@ E0754: include_str!(\"./error_codes/E0754.md\"),\n E0758: include_str!(\"./error_codes/E0758.md\"),\n E0760: include_str!(\"./error_codes/E0760.md\"),\n E0761: include_str!(\"./error_codes/E0761.md\"),\n+E0762: include_str!(\"./error_codes/E0762.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "b01ded4a86616eba3664c40e47f6da2f2830a78d", "filename": "src/librustc_error_codes/error_codes/E0762.md", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Flibrustc_error_codes%2Ferror_codes%2FE0762.md", "raw_url": "https://github.com/rust-lang/rust/raw/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Flibrustc_error_codes%2Ferror_codes%2FE0762.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0762.md?ref=70c14c2d43de82251697b88e431599c8f02f9e27", "patch": "@@ -0,0 +1,13 @@\n+A character literal wasn't ended with a quote.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0762\n+static C: char = '\u25cf; // error!\n+```\n+\n+To fix this error, add the missing quote:\n+\n+```\n+static C: char = '\u25cf'; // ok!\n+```"}, {"sha": "d135f713478a0fadabded00e0f5333c187214908", "filename": "src/librustc_parse/lexer/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Fmod.rs?ref=70c14c2d43de82251697b88e431599c8f02f9e27", "patch": "@@ -325,7 +325,15 @@ impl<'a> StringReader<'a> {\n         let (lit_kind, mode, prefix_len, postfix_len) = match kind {\n             rustc_lexer::LiteralKind::Char { terminated } => {\n                 if !terminated {\n-                    self.fatal_span_(start, suffix_start, \"unterminated character literal\").raise()\n+                    self.sess\n+                        .span_diagnostic\n+                        .struct_span_fatal_with_code(\n+                            self.mk_sp(start, suffix_start),\n+                            \"unterminated character literal\",\n+                            error_code!(E0762),\n+                        )\n+                        .emit();\n+                    FatalError.raise();\n                 }\n                 (token::Char, Mode::Char, 1, 1) // ' '\n             }"}, {"sha": "fec4421c48a7c90d84e07579965085d4c9d5d6bd", "filename": "src/test/ui/parser/lex-bad-char-literals-4.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.stderr?ref=70c14c2d43de82251697b88e431599c8f02f9e27", "patch": "@@ -1,8 +1,9 @@\n-error: unterminated character literal\n+error[E0762]: unterminated character literal\n   --> $DIR/lex-bad-char-literals-4.rs:4:5\n    |\n LL |     '\u25cf\n    |     ^^^^\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0762`."}, {"sha": "70ee8087b5163266424d6bb260462d49665b6e1f", "filename": "src/test/ui/parser/lex-bad-char-literals-7.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70c14c2d43de82251697b88e431599c8f02f9e27/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-7.stderr?ref=70c14c2d43de82251697b88e431599c8f02f9e27", "patch": "@@ -10,11 +10,12 @@ error: empty unicode escape (must have at least 1 hex digit)\n LL |     let _: char = '\\u{}';\n    |                    ^^^^\n \n-error: unterminated character literal\n+error[E0762]: unterminated character literal\n   --> $DIR/lex-bad-char-literals-7.rs:11:13\n    |\n LL |     let _ = ' hello // here's a comment\n    |             ^^^^^^^^\n \n error: aborting due to 3 previous errors\n \n+For more information about this error, try `rustc --explain E0762`."}]}