{"sha": "88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YjE5OGI3MjdkNzljMDRkMzVjNDNmZWFhYmFhOWUzZDFhOTRmMGM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-30T13:49:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-30T13:49:19Z"}, "message": "Rollup merge of #80311 - sivadeilra:natvis, r=petrochenkov\n\nImprovements to NatVis support\n\nNatVis files describe how to display types in some Windows debuggers,\nsuch as Visual Studio, WinDbg, and VS Code.\n\nThis commit makes several improvements:\n\n* Adds visualizers for Rc<T>, Weak<T>, and Arc<T>.\n\n* Changes [size] to [len], for consistency with the Rust API.\n  Visualizers often use [size] to mirror the size() method on C++ STL\n  collections.\n\n* Several visualizers used the PVOID and ULONG typedefs. These are part\n  of the Windows API; they are not guaranteed to always be defined in a\n  pure Rust DLL/EXE. I converted PVOID to `void*` and `ULONG` to\n  `unsigned long`.\n\n* Cosmetic change: Removed {} braces around the visualized display\n  for `Option` types. They now display simply as `Some(value)` or\n  `None`, which reflects what is written in source code.\n\n* The visualizer for `alloc::string::String` makes assumptions about\n  the layout of `String` (it casts `String*` to another type), rather\n  than using symbolic expressions. This commit changes the visualizer\n  so that it simply uses symbolic expressions to access the string\n  data and string length.\n\n* The visualizers for `str` and `String` now place the character data\n  array under a synthetic `[chars]` node. When expanding a `String`\n  node, users rarely want to see an array of characters. This just places\n  them behind one expansion node / level.", "tree": {"sha": "fe643f22d573e3b52c42ca24c12f4535a5108fe9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe643f22d573e3b52c42ca24c12f4535a5108fe9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf7IVfCRBK7hj4Ov3rIwAAdHIIAFmJmjE5JMO5Wl8YUMB/Z1Vj\nhMpgE1XLbUpGujv7lLFKFzYkt2VBDV2npjyiygW7zAZ3/uzTZ0dCirEa3CWaUWFr\nAqXXIwzxF7KHcL2myMJinN0cjNxYDczuTAWDnFUzM7AoMhwArCd/x8xRP7gVj+vP\n7c+OojtrbIaSPZKuDpJpLZQcrfnxljcwZ+OenQF1/EqmmNVnbcpbYLmzn9m4Fp94\nlhrPAbtrS2Dnx6bX/cL3X49wPwYFsRxfnJz02jbOZg3CoURPQpCtjvRkhQVKZsSd\niejGqrfXXoW9EBon4wllqzQ7PGHGl1J7y4hSER4nQA6TSJGu5yEkpKXI/px89vk=\n=DPta\n-----END PGP SIGNATURE-----\n", "payload": "tree fe643f22d573e3b52c42ca24c12f4535a5108fe9\nparent 00741b88101c4ec78c34bf2fa1cd275d1a35afc2\nparent 2f584229d4e9dab4f1eb4cb548756b708619ae15\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1609336159 +0900\ncommitter GitHub <noreply@github.com> 1609336159 +0900\n\nRollup merge of #80311 - sivadeilra:natvis, r=petrochenkov\n\nImprovements to NatVis support\n\nNatVis files describe how to display types in some Windows debuggers,\nsuch as Visual Studio, WinDbg, and VS Code.\n\nThis commit makes several improvements:\n\n* Adds visualizers for Rc<T>, Weak<T>, and Arc<T>.\n\n* Changes [size] to [len], for consistency with the Rust API.\n  Visualizers often use [size] to mirror the size() method on C++ STL\n  collections.\n\n* Several visualizers used the PVOID and ULONG typedefs. These are part\n  of the Windows API; they are not guaranteed to always be defined in a\n  pure Rust DLL/EXE. I converted PVOID to `void*` and `ULONG` to\n  `unsigned long`.\n\n* Cosmetic change: Removed {} braces around the visualized display\n  for `Option` types. They now display simply as `Some(value)` or\n  `None`, which reflects what is written in source code.\n\n* The visualizer for `alloc::string::String` makes assumptions about\n  the layout of `String` (it casts `String*` to another type), rather\n  than using symbolic expressions. This commit changes the visualizer\n  so that it simply uses symbolic expressions to access the string\n  data and string length.\n\n* The visualizers for `str` and `String` now place the character data\n  array under a synthetic `[chars]` node. When expanding a `String`\n  node, users rarely want to see an array of characters. This just places\n  them behind one expansion node / level.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "html_url": "https://github.com/rust-lang/rust/commit/88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00741b88101c4ec78c34bf2fa1cd275d1a35afc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/00741b88101c4ec78c34bf2fa1cd275d1a35afc2", "html_url": "https://github.com/rust-lang/rust/commit/00741b88101c4ec78c34bf2fa1cd275d1a35afc2"}, {"sha": "2f584229d4e9dab4f1eb4cb548756b708619ae15", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f584229d4e9dab4f1eb4cb548756b708619ae15", "html_url": "https://github.com/rust-lang/rust/commit/2f584229d4e9dab4f1eb4cb548756b708619ae15"}], "stats": {"total": 120, "additions": 71, "deletions": 49}, "files": [{"sha": "030892a432b31893193f126a3a006a8d5651a79a", "filename": "src/etc/natvis/intrinsic.natvis", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Fintrinsic.natvis?ref=88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "patch": "@@ -4,17 +4,21 @@\n     <DisplayString>{data_ptr,[length]s8}</DisplayString>\n     <StringView>data_ptr,[length]s8</StringView>\n     <Expand>\n-      <Item Name=\"[size]\" ExcludeView=\"simple\">length</Item>\n-      <ArrayItems>\n-        <Size>length</Size>\n-        <ValuePointer>data_ptr</ValuePointer>\n-      </ArrayItems>\n+      <Item Name=\"[len]\" ExcludeView=\"simple\">length</Item>\n+      <Synthetic Name=\"[chars]\">\n+        <Expand>\n+          <ArrayItems>\n+            <Size>length</Size>\n+            <ValuePointer>data_ptr</ValuePointer>\n+          </ArrayItems>\n+        </Expand>\n+      </Synthetic>\n     </Expand>\n   </Type>\n   <Type Name=\"slice&lt;*&gt;\">\n-    <DisplayString>{{ length={length} }}</DisplayString>\n+    <DisplayString>{{ len={length} }}</DisplayString>\n     <Expand>\n-      <Item Name=\"[size]\" ExcludeView=\"simple\">length</Item>\n+      <Item Name=\"[len]\" ExcludeView=\"simple\">length</Item>\n       <ArrayItems>\n         <Size>length</Size>\n         <ValuePointer>data_ptr</ValuePointer>"}, {"sha": "cfaafc5734bcec3149eef42e38e81f0f17068152", "filename": "src/etc/natvis/liballoc.natvis", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Fetc%2Fnatvis%2Fliballoc.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Fetc%2Fnatvis%2Fliballoc.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Fliballoc.natvis?ref=88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "patch": "@@ -1,9 +1,9 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <AutoVisualizer xmlns=\"http://schemas.microsoft.com/vstudio/debugger/natvis/2010\">\n   <Type Name=\"alloc::vec::Vec&lt;*&gt;\">\n-    <DisplayString>{{ size={len} }}</DisplayString>\n+    <DisplayString>{{ len={len} }}</DisplayString>\n     <Expand>\n-      <Item Name=\"[size]\" ExcludeView=\"simple\">len</Item>\n+      <Item Name=\"[len]\" ExcludeView=\"simple\">len</Item>\n       <Item Name=\"[capacity]\" ExcludeView=\"simple\">buf.cap</Item>\n       <ArrayItems>\n         <Size>len</Size>\n@@ -12,9 +12,9 @@\n     </Expand>\n   </Type>\n   <Type Name=\"alloc::collections::vec_deque::VecDeque&lt;*&gt;\">\n-    <DisplayString>{{ size={tail &lt;= head ? head - tail : buf.cap - tail + head} }}</DisplayString>\n+    <DisplayString>{{ len={tail &lt;= head ? head - tail : buf.cap - tail + head} }}</DisplayString>\n     <Expand>\n-      <Item Name=\"[size]\" ExcludeView=\"simple\">tail &lt;= head ? head - tail : buf.cap - tail + head</Item>\n+      <Item Name=\"[len]\" ExcludeView=\"simple\">tail &lt;= head ? head - tail : buf.cap - tail + head</Item>\n       <Item Name=\"[capacity]\" ExcludeView=\"simple\">buf.cap</Item>\n       <CustomListItems>\n         <Variable Name=\"i\" InitialValue=\"tail\" />\n@@ -31,7 +31,7 @@\n     </Expand>\n   </Type>\n   <Type Name=\"alloc::collections::linked_list::LinkedList&lt;*&gt;\">\n-    <DisplayString>{{ size={len} }}</DisplayString>\n+    <DisplayString>{{ len={len} }}</DisplayString>\n     <Expand>\n       <LinkedListItems>\n         <Size>len</Size>\n@@ -42,15 +42,37 @@\n     </Expand>\n   </Type>\n   <Type Name=\"alloc::string::String\">\n-    <DisplayString>{*(char**)this,[vec.len]s8}</DisplayString>\n-    <StringView>*(char**)this,[vec.len]s8</StringView>\n+    <DisplayString>{(char*)vec.buf.ptr.pointer,[vec.len]s8}</DisplayString>\n+    <StringView>(char*)vec.buf.ptr.pointer,[vec.len]s8</StringView>\n     <Expand>\n-      <Item Name=\"[size]\" ExcludeView=\"simple\">vec.len</Item>\n+      <Item Name=\"[len]\" ExcludeView=\"simple\">vec.len</Item>\n       <Item Name=\"[capacity]\" ExcludeView=\"simple\">vec.buf.cap</Item>\n-      <ArrayItems>\n-        <Size>vec.len</Size>\n-        <ValuePointer>*(char**)this</ValuePointer>\n-      </ArrayItems>\n+      <Synthetic Name=\"[chars]\">\n+        <Expand>\n+          <ArrayItems>\n+            <Size>vec.len</Size>\n+            <ValuePointer>(char*)vec.buf.ptr.pointer</ValuePointer>\n+          </ArrayItems>\n+        </Expand>\n+      </Synthetic>\n+    </Expand>\n+  </Type>\n+  <Type Name=\"alloc::rc::Rc&lt;*&gt;\">\n+    <DisplayString>{ptr.pointer->value}</DisplayString>\n+    <Expand>\n+      <ExpandedItem>ptr.pointer->value</ExpandedItem>\n+    </Expand>\n+  </Type>\n+  <Type Name=\"alloc::sync::Arc&lt;*&gt;\">\n+    <DisplayString>{ptr.pointer->data}</DisplayString>\n+    <Expand>\n+      <ExpandedItem>ptr.pointer->data</ExpandedItem>\n+    </Expand>\n+  </Type>\n+  <Type Name=\"alloc::sync::Weak&lt;*&gt;\">\n+    <DisplayString>{ptr.pointer->data}</DisplayString>\n+    <Expand>\n+      <ExpandedItem>ptr.pointer->data</ExpandedItem>\n     </Expand>\n   </Type>\n </AutoVisualizer>"}, {"sha": "984a8bfb13c7c4b470f43d49f552f21d8a65dc89", "filename": "src/etc/natvis/libcore.natvis", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Fetc%2Fnatvis%2Flibcore.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Fetc%2Fnatvis%2Flibcore.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Flibcore.natvis?ref=88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "patch": "@@ -6,34 +6,28 @@\n       <Item Name=\"[ptr]\">pointer</Item>\n     </Expand>\n   </Type>\n+\n   <Type Name=\"core::ptr::Shared&lt;*&gt;\">\n     <DisplayString>{{ Shared {pointer} }}</DisplayString>\n     <Expand>\n       <Item Name=\"[ptr]\">pointer</Item>\n     </Expand>\n   </Type>\n+\n   <Type Name=\"core::option::Option&lt;*&gt;\">\n-    <DisplayString Condition=\"RUST$ENUM$DISR == 0x0\">{{ None }}</DisplayString>\n-    <DisplayString Condition=\"RUST$ENUM$DISR == 0x1\">{{ Some {__0} }}</DisplayString>\n+    <DisplayString Condition=\"RUST$ENUM$DISR == 0x0\">None</DisplayString>\n+    <DisplayString Condition=\"RUST$ENUM$DISR == 0x1\">Some({__0})</DisplayString>\n     <Expand>\n-      <Item Name=\"[size]\" ExcludeView=\"simple\">(ULONG)(RUST$ENUM$DISR != 0)</Item>\n-      <Item Name=\"[value]\" ExcludeView=\"simple\">__0</Item>\n-      <ArrayItems>\n-        <Size>(ULONG)(RUST$ENUM$DISR != 0)</Size>\n-        <ValuePointer>&amp;__0</ValuePointer>\n-      </ArrayItems>\n+      <Item Name=\"[value]\" ExcludeView=\"simple\" Condition=\"RUST$ENUM$DISR == 1\">__0</Item>\n     </Expand>\n   </Type>\n+\n   <Type Name=\"core::option::Option&lt;*&gt;\" Priority=\"MediumLow\">\n-    <DisplayString Condition=\"*(PVOID *)this == nullptr\">{{ None }}</DisplayString>\n-    <DisplayString>{{ Some {($T1 *)this} }}</DisplayString>\n+    <DisplayString Condition=\"*(void**)this == nullptr\">None</DisplayString>\n+    <DisplayString>Some({($T1 *)this})</DisplayString>\n     <Expand>\n-      <Item Name=\"[size]\" ExcludeView=\"simple\">(ULONG)(*(PVOID *)this != nullptr)</Item>\n-      <Item Name=\"[value]\" ExcludeView=\"simple\" Condition=\"*(PVOID *)this != nullptr\">($T1 *)this</Item>\n-      <ArrayItems>\n-        <Size>(ULONG)(*(PVOID *)this != nullptr)</Size>\n-        <ValuePointer>($T1 *)this</ValuePointer>\n-      </ArrayItems>\n+      <Item Name=\"Some\" ExcludeView=\"simple\" Condition=\"*(void**)this != nullptr\">($T1 *)this</Item>\n     </Expand>\n   </Type>\n+\n </AutoVisualizer>\n\\ No newline at end of file"}, {"sha": "7e5ee7b13daf1b6733b52d96ed75cf10d832c84b", "filename": "src/etc/natvis/libstd.natvis", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Fetc%2Fnatvis%2Flibstd.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Fetc%2Fnatvis%2Flibstd.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Flibstd.natvis?ref=88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "patch": "@@ -26,9 +26,9 @@\n   -->\n \n   <Type Name=\"std::collections::hash::map::HashMap&lt;*,*,*&gt;\">\n-    <DisplayString>{{ size={base.table.items} }}</DisplayString>\n+    <DisplayString>{{ len={base.table.items} }}</DisplayString>\n     <Expand>\n-      <Item Name=\"[size]\">base.table.items</Item>\n+      <Item Name=\"[len]\">base.table.items</Item>\n       <Item Name=\"[capacity]\">base.table.items + base.table.growth_left</Item>\n       <Item Name=\"[state]\">base.hash_builder</Item>\n \n@@ -50,9 +50,9 @@\n   </Type>\n \n   <Type Name=\"std::collections::hash::set::HashSet&lt;*,*&gt;\">\n-    <DisplayString>{{ size={base.map.table.items} }}</DisplayString>\n+    <DisplayString>{{ len={base.map.table.items} }}</DisplayString>\n     <Expand>\n-      <Item Name=\"[size]\">base.map.table.items</Item>\n+      <Item Name=\"[len]\">base.map.table.items</Item>\n       <Item Name=\"[capacity]\">base.map.table.items + base.map.table.growth_left</Item>\n       <Item Name=\"[state]\">base.map.hash_builder</Item>\n "}, {"sha": "7115aec1041af49774955f1a9733de8572c90d92", "filename": "src/test/debuginfo/pretty-std-collections-hash.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections-hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections-hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections-hash.rs?ref=88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "patch": "@@ -10,8 +10,8 @@\n // cdb-command: g\n \n // cdb-command: dx hash_set,d\n-// cdb-check:hash_set,d [...] : { size=15 } [Type: [...]::HashSet<u64, [...]>]\n-// cdb-check:    [size]           : 15 [Type: [...]]\n+// cdb-check:hash_set,d [...] : { len=15 } [Type: [...]::HashSet<u64, [...]>]\n+// cdb-check:    [len]            : 15 [Type: [...]]\n // cdb-check:    [capacity]       : [...]\n // cdb-check:    [[...]] [...]    : 0 [Type: u64]\n // cdb-command: dx hash_set,d\n@@ -44,8 +44,8 @@\n // cdb-check:    [[...]] [...]    : 14 [Type: u64]\n \n // cdb-command: dx hash_map,d\n-// cdb-check:hash_map,d [...] : { size=15 } [Type: [...]::HashMap<u64, u64, [...]>]\n-// cdb-check:    [size]           : 15 [Type: [...]]\n+// cdb-check:hash_map,d [...] : { len=15 } [Type: [...]::HashMap<u64, u64, [...]>]\n+// cdb-check:    [len]            : 15 [Type: [...]]\n // cdb-check:    [capacity]       : [...]\n // cdb-check:    [\"0x0\"]          : 0 [Type: unsigned __int64]\n // cdb-command: dx hash_map,d"}, {"sha": "1a99f8412504a4580b249d4dacc278937a76dc75", "filename": "src/test/debuginfo/pretty-std.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88b198b727d79c04d35c43feaabaa9e3d1a94f0c/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs?ref=88b198b727d79c04d35c43feaabaa9e3d1a94f0c", "patch": "@@ -74,8 +74,8 @@\n // NOTE: While slices have a .natvis entry that works in VS & VS Code, it fails in CDB 10.0.18362.1\n \n // cdb-command: dx vec,d\n-// cdb-check:vec,d [...] : { size=4 } [Type: [...]::Vec<u64, alloc::alloc::Global>]\n-// cdb-check:    [size]           : 4 [Type: [...]]\n+// cdb-check:vec,d [...] : { len=4 } [Type: [...]::Vec<u64, alloc::alloc::Global>]\n+// cdb-check:    [len]            : 4 [Type: [...]]\n // cdb-check:    [capacity]       : [...] [Type: [...]]\n // cdb-check:    [0]              : 4 [Type: unsigned __int64]\n // cdb-check:    [1]              : 5 [Type: unsigned __int64]\n@@ -89,8 +89,10 @@\n // cdb-command: dx string\n // cdb-check:string           : \"IAMA string!\" [Type: [...]::String]\n // cdb-check:    [<Raw View>]     [Type: [...]::String]\n-// cdb-check:    [size]           : 0xc [Type: [...]]\n+// cdb-check:    [len]            : 0xc [Type: [...]]\n // cdb-check:    [capacity]       : 0xc [Type: [...]]\n+\n+// cdb-command: dx -r2 string\n // cdb-check:    [0]              : 73 'I' [Type: char]\n // cdb-check:    [1]              : 65 'A' [Type: char]\n // cdb-check:    [2]              : 77 'M' [Type: char]\n@@ -109,11 +111,11 @@\n // NOTE: OsString doesn't have a .natvis entry yet.\n \n // cdb-command: dx some\n-// cdb-check:some             : { Some 8 } [Type: [...]::Option<i16>]\n+// cdb-check:some             : Some(8) [Type: [...]::Option<i16>]\n // cdb-command: dx none\n-// cdb-check:none             : { None } [Type: [...]::Option<i64>]\n+// cdb-check:none             : None [Type: [...]::Option<i64>]\n // cdb-command: dx some_string\n-// cdb-check:some_string      : { Some \"IAMA optional string!\" } [[...]::Option<[...]::String>]\n+// cdb-check:some_string      : Some(\"IAMA optional string!\") [[...]::Option<[...]::String>]\n \n #![allow(unused_variables)]\n use std::ffi::OsString;"}]}