{"sha": "97cb463c9be3c21931d0e284603238ce3cb02b2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3Y2I0NjNjOWJlM2MyMTkzMWQwZTI4NDYwMzIzOGNlM2NiMDJiMmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T23:20:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T23:20:14Z"}, "message": "moar icons", "tree": {"sha": "232a4321f61d881319983b15a7b80c4e6394be1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/232a4321f61d881319983b15a7b80c4e6394be1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97cb463c9be3c21931d0e284603238ce3cb02b2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97cb463c9be3c21931d0e284603238ce3cb02b2a", "html_url": "https://github.com/rust-lang/rust/commit/97cb463c9be3c21931d0e284603238ce3cb02b2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97cb463c9be3c21931d0e284603238ce3cb02b2a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "238b52358d0d6109c89d1288b12bfa0aa71790de", "url": "https://api.github.com/repos/rust-lang/rust/commits/238b52358d0d6109c89d1288b12bfa0aa71790de", "html_url": "https://github.com/rust-lang/rust/commit/238b52358d0d6109c89d1288b12bfa0aa71790de"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "ad4d68a3326b123185d1296a43175d803467019f", "filename": "crates/ra_analysis/src/completion/complete_path.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=97cb463c9be3c21931d0e284603238ce3cb02b2a", "patch": "@@ -17,8 +17,10 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) -> C\n         _ => return Ok(()),\n     };\n     let module_scope = target_module.scope(ctx.db)?;\n-    module_scope.entries().for_each(|(name, _res)| {\n-        CompletionItem::new(CompletionKind::Reference, name.to_string()).add_to(acc)\n+    module_scope.entries().for_each(|(name, res)| {\n+        CompletionItem::new(CompletionKind::Reference, name.to_string())\n+            .from_resolution(ctx.db, res)\n+            .add_to(acc)\n     });\n     Ok(())\n }"}, {"sha": "4f27ad9ebc0be13af8685051a34e85fa3fa5dff5", "filename": "crates/ra_analysis/src/completion/complete_scope.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=97cb463c9be3c21931d0e284603238ce3cb02b2a", "patch": "@@ -29,8 +29,10 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) ->\n                     }\n                 }\n             })\n-            .for_each(|(name, _res)| {\n-                CompletionItem::new(CompletionKind::Reference, name.to_string()).add_to(acc)\n+            .for_each(|(name, res)| {\n+                CompletionItem::new(CompletionKind::Reference, name.to_string())\n+                    .from_resolution(ctx.db, res)\n+                    .add_to(acc)\n             });\n     }\n "}, {"sha": "cbd42a44ea9094c3782169f5d05f7e536506de5f", "filename": "crates/ra_analysis/src/completion/completion_item.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=97cb463c9be3c21931d0e284603238ce3cb02b2a", "patch": "@@ -1,3 +1,5 @@\n+use crate::db;\n+\n /// `CompletionItem` describes a single completion variant in the editor pop-up.\n /// It is basically a POD with various properties. To construct a\n /// `CompletionItem`, use `new` method and the `Builder` struct.\n@@ -21,6 +23,8 @@ pub enum InsertText {\n pub enum CompletionItemKind {\n     Snippet,\n     Keyword,\n+    Module,\n+    Function,\n }\n \n #[derive(Debug, PartialEq, Eq)]\n@@ -107,6 +111,23 @@ impl Builder {\n         self.kind = Some(kind);\n         self\n     }\n+    pub(crate) fn from_resolution(\n+        mut self,\n+        db: &db::RootDatabase,\n+        resolution: &hir::Resolution,\n+    ) -> Builder {\n+        if let Some(def_id) = resolution.def_id {\n+            if let Ok(def) = def_id.resolve(db) {\n+                let kind = match def {\n+                    hir::Def::Module(..) => CompletionItemKind::Module,\n+                    hir::Def::Function(..) => CompletionItemKind::Function,\n+                    _ => return self,\n+                };\n+                self.kind = Some(kind);\n+            }\n+        }\n+        self\n+    }\n }\n \n impl Into<CompletionItem> for Builder {"}, {"sha": "f56214b47a7ea06fc1333e43919cb9fc6b678013", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=97cb463c9be3c21931d0e284603238ce3cb02b2a", "patch": "@@ -39,7 +39,7 @@ use crate::{\n pub use self::{\n     path::{Path, PathKind},\n     krate::Crate,\n-    module::{Module, ModuleId, Problem, nameres::ItemMap},\n+    module::{Module, ModuleId, Problem, nameres::ItemMap, ModuleScope, Resolution},\n     function::{Function, FnScopes},\n };\n "}, {"sha": "cd31e8cfe647c032a988db5b6dafdc287671171e", "filename": "crates/ra_hir/src/module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule.rs?ref=97cb463c9be3c21931d0e284603238ce3cb02b2a", "patch": "@@ -16,7 +16,7 @@ use crate::{\n     arena::{Arena, Id},\n };\n \n-pub use self::nameres::ModuleScope;\n+pub use self::nameres::{ModuleScope, Resolution};\n \n /// `Module` is API entry point to get all the information\n /// about a particular module."}, {"sha": "39e891cda5a6c6a12bc4b10186fb13d73c4c76e0", "filename": "crates/ra_hir/src/module/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs?ref=97cb463c9be3c21931d0e284603238ce3cb02b2a", "patch": "@@ -49,7 +49,7 @@ pub struct ModuleScope {\n }\n \n impl ModuleScope {\n-    pub fn entries<'a>(&'a self) -> impl Iterator<Item = (&'a SmolStr, &Resolution)> + 'a {\n+    pub fn entries<'a>(&'a self) -> impl Iterator<Item = (&'a SmolStr, &'a Resolution)> + 'a {\n         self.items.iter()\n     }\n     pub fn get(&self, name: &SmolStr) -> Option<&Resolution> {"}, {"sha": "9320f147aa13a6d66cd6f8f8e5c32b2e57aa7645", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cb463c9be3c21931d0e284603238ce3cb02b2a/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=97cb463c9be3c21931d0e284603238ce3cb02b2a", "patch": "@@ -53,6 +53,8 @@ impl Conv for CompletionItemKind {\n         match self {\n             CompletionItemKind::Keyword => Keyword,\n             CompletionItemKind::Snippet => Snippet,\n+            CompletionItemKind::Module => Module,\n+            CompletionItemKind::Function => Function,\n         }\n     }\n }"}]}