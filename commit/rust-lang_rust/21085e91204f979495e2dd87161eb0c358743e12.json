{"sha": "21085e91204f979495e2dd87161eb0c358743e12", "node_id": "C_kwDOAAsO6NoAKDIxMDg1ZTkxMjA0Zjk3OTQ5NWUyZGQ4NzE2MWViMGMzNTg3NDNlMTI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-23T21:39:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-23T21:39:11Z"}, "message": "Rollup merge of #98353 - beetrees:builtin-macros-cfg-diag, r=davidtwco\n\nMigrate two diagnostics from the `rustc_builtin_macros` crate\n\nMigrate two diagnostics to use the struct derive and be translatable.\n\nr? ```@davidtwco```", "tree": {"sha": "a569eeae6d1cc4d10ed98561539a814bbbaf3d43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a569eeae6d1cc4d10ed98561539a814bbbaf3d43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21085e91204f979495e2dd87161eb0c358743e12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitN1/CRBK7hj4Ov3rIwAAnyIIAIftZVrnRWMknhLeQnPg2zJk\nVpdyq9h9PVWzaxLTDD1+o1rop4+rCqBGVzZtuOcFjoM+wRp+PQwupE3S2/cMdPxR\niiZODNdrfrXjNRsRuYYDraOS/Q+sptH8PGzM9M5NfJtjbqHiO303+7+kAMvuRE3h\n7alMGG+yD1JU0MFLzX4SePaOkx9QBJmZOHPSfGpvlLOE+zW6CnMGvY2No3dQCcW3\ng5gNpUgQieCAGaB0bVv6Zsf56AVvYb6+j/Vp/expdBgbkNZ5dCkVIH0kxU9f/XIz\nh+NJH+MKp+3i8B7nA1KPz++Awl9+a6tVD0qB4QNc3GG6Rwkm1b+UJ8kUDrXIi6k=\n=ntfq\n-----END PGP SIGNATURE-----\n", "payload": "tree a569eeae6d1cc4d10ed98561539a814bbbaf3d43\nparent cc95225feefd81ab77ffc373649ae91e3811d491\nparent be5337cde53eabca8a242d7de11f6702a40a1237\nauthor Michael Goulet <michael@errs.io> 1656020351 -0700\ncommitter GitHub <noreply@github.com> 1656020351 -0700\n\nRollup merge of #98353 - beetrees:builtin-macros-cfg-diag, r=davidtwco\n\nMigrate two diagnostics from the `rustc_builtin_macros` crate\n\nMigrate two diagnostics to use the struct derive and be translatable.\n\nr? ```@davidtwco```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21085e91204f979495e2dd87161eb0c358743e12", "html_url": "https://github.com/rust-lang/rust/commit/21085e91204f979495e2dd87161eb0c358743e12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21085e91204f979495e2dd87161eb0c358743e12/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc95225feefd81ab77ffc373649ae91e3811d491", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc95225feefd81ab77ffc373649ae91e3811d491", "html_url": "https://github.com/rust-lang/rust/commit/cc95225feefd81ab77ffc373649ae91e3811d491"}, {"sha": "be5337cde53eabca8a242d7de11f6702a40a1237", "url": "https://api.github.com/repos/rust-lang/rust/commits/be5337cde53eabca8a242d7de11f6702a40a1237", "html_url": "https://github.com/rust-lang/rust/commit/be5337cde53eabca8a242d7de11f6702a40a1237"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "1677422122e2bcf26711c2c0b551fa131feb8fbc", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21085e91204f979495e2dd87161eb0c358743e12/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/21085e91204f979495e2dd87161eb0c358743e12/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=21085e91204f979495e2dd87161eb0c358743e12", "patch": "@@ -3669,6 +3669,7 @@ dependencies = [\n  \"rustc_feature\",\n  \"rustc_lexer\",\n  \"rustc_lint_defs\",\n+ \"rustc_macros\",\n  \"rustc_parse\",\n  \"rustc_parse_format\",\n  \"rustc_session\","}, {"sha": "7dc947f7d9a143fb1e72d6cdf9ae97814c7908ca", "filename": "compiler/rustc_builtin_macros/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_builtin_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_builtin_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2FCargo.toml?ref=21085e91204f979495e2dd87161eb0c358743e12", "patch": "@@ -16,6 +16,7 @@ rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n rustc_lexer = { path = \"../rustc_lexer\" }\n rustc_lint_defs = { path = \"../rustc_lint_defs\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n rustc_parse = { path = \"../rustc_parse\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_session = { path = \"../rustc_session\" }"}, {"sha": "c75d83bd0a0e360a0611d156bb41a6e06ba6089d", "filename": "compiler/rustc_builtin_macros/src/cfg.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_builtin_macros%2Fsrc%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_builtin_macros%2Fsrc%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fcfg.rs?ref=21085e91204f979495e2dd87161eb0c358743e12", "patch": "@@ -8,6 +8,7 @@ use rustc_ast::tokenstream::TokenStream;\n use rustc_attr as attr;\n use rustc_errors::PResult;\n use rustc_expand::base::{self, *};\n+use rustc_macros::SessionDiagnostic;\n use rustc_span::Span;\n \n pub fn expand_cfg(\n@@ -34,21 +35,34 @@ pub fn expand_cfg(\n     }\n }\n \n-fn parse_cfg<'a>(cx: &mut ExtCtxt<'a>, sp: Span, tts: TokenStream) -> PResult<'a, ast::MetaItem> {\n+#[derive(SessionDiagnostic)]\n+#[error(slug = \"builtin-macros-requires-cfg-pattern\")]\n+struct RequiresCfgPattern {\n+    #[primary_span]\n+    #[label]\n+    span: Span,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(slug = \"builtin-macros-expected-one-cfg-pattern\")]\n+struct OneCfgPattern {\n+    #[primary_span]\n+    span: Span,\n+}\n+\n+fn parse_cfg<'a>(cx: &mut ExtCtxt<'a>, span: Span, tts: TokenStream) -> PResult<'a, ast::MetaItem> {\n     let mut p = cx.new_parser_from_tts(tts);\n \n     if p.token == token::Eof {\n-        let mut err = cx.struct_span_err(sp, \"macro requires a cfg-pattern as an argument\");\n-        err.span_label(sp, \"cfg-pattern required\");\n-        return Err(err);\n+        return Err(cx.create_err(RequiresCfgPattern { span }));\n     }\n \n     let cfg = p.parse_meta_item()?;\n \n     let _ = p.eat(&token::Comma);\n \n     if !p.eat(&token::Eof) {\n-        return Err(cx.struct_span_err(sp, \"expected 1 cfg-pattern\"));\n+        return Err(cx.create_err(OneCfgPattern { span }));\n     }\n \n     Ok(cfg)"}, {"sha": "1d3e33c81851f5cb84b1132f51fdda2a535f81ad", "filename": "compiler/rustc_error_messages/locales/en-US/builtin_macros.ftl", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fbuiltin_macros.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fbuiltin_macros.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fbuiltin_macros.ftl?ref=21085e91204f979495e2dd87161eb0c358743e12", "patch": "@@ -0,0 +1,5 @@\n+builtin-macros-requires-cfg-pattern =\n+    macro requires a cfg-pattern as an argument\n+    .label = cfg-pattern required\n+\n+builtin-macros-expected-one-cfg-pattern = expected 1 cfg-pattern"}, {"sha": "7211c05432698207809919d940e152cddc9c6dac", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=21085e91204f979495e2dd87161eb0c358743e12", "patch": "@@ -33,6 +33,7 @@ pub use unic_langid::{langid, LanguageIdentifier};\n fluent_messages! {\n     parser => \"../locales/en-US/parser.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n+    builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n }\n \n pub use fluent_generated::{self as fluent, DEFAULT_LOCALE_RESOURCES};"}, {"sha": "245719bff120216eae37a08b0a1ee051375a8e85", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21085e91204f979495e2dd87161eb0c358743e12/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=21085e91204f979495e2dd87161eb0c358743e12", "patch": "@@ -14,7 +14,7 @@ use rustc_errors::{Applicability, DiagnosticBuilder, ErrorGuaranteed, MultiSpan,\n use rustc_lint_defs::builtin::PROC_MACRO_BACK_COMPAT;\n use rustc_lint_defs::BuiltinLintDiagnostics;\n use rustc_parse::{self, parser, MACRO_ARGUMENTS};\n-use rustc_session::{parse::ParseSess, Limit, Session};\n+use rustc_session::{parse::ParseSess, Limit, Session, SessionDiagnostic};\n use rustc_span::def_id::{CrateNum, DefId, LocalDefId};\n use rustc_span::edition::Edition;\n use rustc_span::hygiene::{AstPass, ExpnData, ExpnKind, LocalExpnId};\n@@ -1085,6 +1085,17 @@ impl<'a> ExtCtxt<'a> {\n         self.sess.parse_sess.span_diagnostic.struct_span_err(sp, msg)\n     }\n \n+    pub fn create_err(\n+        &self,\n+        err: impl SessionDiagnostic<'a>,\n+    ) -> DiagnosticBuilder<'a, ErrorGuaranteed> {\n+        self.sess.create_err(err)\n+    }\n+\n+    pub fn emit_err(&self, err: impl SessionDiagnostic<'a>) -> ErrorGuaranteed {\n+        self.sess.emit_err(err)\n+    }\n+\n     /// Emit `msg` attached to `sp`, without immediately stopping\n     /// compilation.\n     ///"}, {"sha": "2aac50a9d011afb85bbfb5d0c7616664981b3d18", "filename": "src/test/ui/macros/cfg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21085e91204f979495e2dd87161eb0c358743e12/src%2Ftest%2Fui%2Fmacros%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21085e91204f979495e2dd87161eb0c358743e12/src%2Ftest%2Fui%2Fmacros%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fcfg.rs?ref=21085e91204f979495e2dd87161eb0c358743e12", "patch": "@@ -2,4 +2,5 @@ fn main() {\n     cfg!(); //~ ERROR macro requires a cfg-pattern\n     cfg!(123); //~ ERROR expected identifier\n     cfg!(foo = 123); //~ ERROR literal in `cfg` predicate value must be a string\n+    cfg!(foo, bar); //~ ERROR expected 1 cfg-pattern\n }"}, {"sha": "2633d5f720d7078a4a7c98aff10fdf446c240aa1", "filename": "src/test/ui/macros/cfg.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/21085e91204f979495e2dd87161eb0c358743e12/src%2Ftest%2Fui%2Fmacros%2Fcfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21085e91204f979495e2dd87161eb0c358743e12/src%2Ftest%2Fui%2Fmacros%2Fcfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fcfg.stderr?ref=21085e91204f979495e2dd87161eb0c358743e12", "patch": "@@ -18,6 +18,14 @@ error[E0565]: literal in `cfg` predicate value must be a string\n LL |     cfg!(foo = 123);\n    |                ^^^\n \n-error: aborting due to 3 previous errors\n+error: expected 1 cfg-pattern\n+  --> $DIR/cfg.rs:5:5\n+   |\n+LL |     cfg!(foo, bar);\n+   |     ^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in the macro `cfg` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0565`."}]}