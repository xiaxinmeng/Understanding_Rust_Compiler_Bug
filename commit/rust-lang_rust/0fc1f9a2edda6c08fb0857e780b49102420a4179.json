{"sha": "0fc1f9a2edda6c08fb0857e780b49102420a4179", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYzFmOWEyZWRkYTZjMDhmYjA4NTdlNzgwYjQ5MTAyNDIwYTQxNzk=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-11-24T21:40:25Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-11-24T21:40:25Z"}, "message": "Add overflow check to `arc::Weak::upgrade`\n\nCloses #30031.", "tree": {"sha": "eb5f9705e1f3de4d8ded6893bceea2e34f0d14d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb5f9705e1f3de4d8ded6893bceea2e34f0d14d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fc1f9a2edda6c08fb0857e780b49102420a4179", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fc1f9a2edda6c08fb0857e780b49102420a4179", "html_url": "https://github.com/rust-lang/rust/commit/0fc1f9a2edda6c08fb0857e780b49102420a4179", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fc1f9a2edda6c08fb0857e780b49102420a4179/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebb560a069c7edb9dc506fdc302dbf1c57576952", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebb560a069c7edb9dc506fdc302dbf1c57576952", "html_url": "https://github.com/rust-lang/rust/commit/ebb560a069c7edb9dc506fdc302dbf1c57576952"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "45a47ae075e72b42780ce7cc390cc59d7aeb92f6", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0fc1f9a2edda6c08fb0857e780b49102420a4179/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fc1f9a2edda6c08fb0857e780b49102420a4179/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=0fc1f9a2edda6c08fb0857e780b49102420a4179", "patch": "@@ -637,6 +637,11 @@ impl<T: ?Sized> Weak<T> {\n                 return None\n             }\n \n+            // See comments in `Arc::clone` for why we do this (for `mem::forget`).\n+            if n > MAX_REFCOUNT {\n+                unsafe { abort(); }\n+            }\n+\n             // Relaxed is valid for the same reason it is on Arc's Clone impl\n             let old = inner.strong.compare_and_swap(n, n + 1, Relaxed);\n             if old == n {"}]}