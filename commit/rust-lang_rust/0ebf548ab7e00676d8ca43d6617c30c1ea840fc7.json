{"sha": "0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYmY1NDhhYjdlMDA2NzZkOGNhNDNkNjYxN2MzMGMxZWE4NDBmYzc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-27T15:48:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-27T15:48:35Z"}, "message": "Merge #7451\n\n7451: rust-analyzer.files.excludeDirs r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "e166c38a3bd190d8efa20564bc827e3cf0a011ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e166c38a3bd190d8efa20564bc827e3cf0a011ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEYtTCRBK7hj4Ov3rIwAAdHIIAC33Ec+MXN2Tozi3MDGzJ7w7\nFMi1/CZ359oJz3EtrC4KwJdoi/VbtZOWQ57Y2UPWp4YVRF/19WC1bI2W42HUtvoV\nlVYGuyM/CyfgG2RUtsRINe9g1tMpHYKEKSe1guZzJjE6+gbrfer4N6nmy2m11st/\ng4FH3j14+qJ7YZyd5Lx6CHJs7Ve4QsYFPHQvDWyNofdVwH9l0JKkUZ3jqTriLOsD\nfPlKAwRzuWuVTnCmcfOhjJA72K00iQe6Q6URmEZ5eukYzRRv6G8VUdDnuJCHfJ7o\nz2nqFpWkejC2fsuLYbvSzqrXSGpV6VQrqxOL9ygLWGBpqCVC1G4rsH2DazKbRIM=\n=TiUv\n-----END PGP SIGNATURE-----\n", "payload": "tree e166c38a3bd190d8efa20564bc827e3cf0a011ec\nparent c76cab624763166d60251ed7df76b66547d63b61\nparent 2870e701630c198bafb346e5a9c91c1d2fc9f092\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1611762515 +0000\ncommitter GitHub <noreply@github.com> 1611762515 +0000\n\nMerge #7451\n\n7451: rust-analyzer.files.excludeDirs r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "html_url": "https://github.com/rust-lang/rust/commit/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c76cab624763166d60251ed7df76b66547d63b61", "url": "https://api.github.com/repos/rust-lang/rust/commits/c76cab624763166d60251ed7df76b66547d63b61", "html_url": "https://github.com/rust-lang/rust/commit/c76cab624763166d60251ed7df76b66547d63b61"}, {"sha": "2870e701630c198bafb346e5a9c91c1d2fc9f092", "url": "https://api.github.com/repos/rust-lang/rust/commits/2870e701630c198bafb346e5a9c91c1d2fc9f092", "html_url": "https://github.com/rust-lang/rust/commit/2870e701630c198bafb346e5a9c91c1d2fc9f092"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "dbab4f5f46388d4cf00a37ff04748a12654e5378", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "patch": "@@ -46,7 +46,7 @@ pub fn load_cargo(\n         vfs.file_id(&path)\n     });\n \n-    let project_folders = ProjectFolders::new(&[ws]);\n+    let project_folders = ProjectFolders::new(&[ws], &[]);\n     loader.set_config(vfs::loader::Config { load: project_folders.load, watch: vec![] });\n \n     log::debug!(\"crate graph: {:?}\", crate_graph);"}, {"sha": "37487b6ac37aa10d336b5f94024454f68c164264", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "patch": "@@ -7,7 +7,7 @@\n //! configure the server itself, feature flags are passed into analysis, and\n //! tweak things like automatic insertion of `()` in completions.\n \n-use std::{convert::TryFrom, ffi::OsString, iter, path::PathBuf};\n+use std::{ffi::OsString, iter, path::PathBuf};\n \n use flycheck::FlycheckConfig;\n use hir::PrefixKind;\n@@ -105,6 +105,8 @@ config_data! {\n \n         /// Controls file watching implementation.\n         files_watcher: String = \"\\\"client\\\"\",\n+        /// These directories will be ignored by rust-analyzer.\n+        files_excludeDirs: Vec<PathBuf> = \"[]\",\n \n         /// Whether to show `Debug` action. Only applies when\n         /// `#rust-analyzer.hoverActions.enable#` is set.\n@@ -248,7 +250,7 @@ impl LensConfig {\n #[derive(Debug, Clone)]\n pub struct FilesConfig {\n     pub watcher: FilesWatcher,\n-    pub exclude: Vec<String>,\n+    pub exclude: Vec<AbsPathBuf>,\n }\n \n #[derive(Debug, Clone)]\n@@ -458,7 +460,7 @@ impl Config {\n                 \"notify\" => FilesWatcher::Notify,\n                 \"client\" | _ => FilesWatcher::Client,\n             },\n-            exclude: Vec::new(),\n+            exclude: self.data.files_excludeDirs.iter().map(|it| self.root_path.join(it)).collect(),\n         }\n     }\n     pub fn notifications(&self) -> NotificationsConfig {\n@@ -468,11 +470,7 @@ impl Config {\n         self.data.cargo_autoreload\n     }\n     pub fn cargo(&self) -> CargoConfig {\n-        let rustc_source = self.data.rustcSource.clone().and_then(|it| {\n-            AbsPathBuf::try_from(it)\n-                .map_err(|_| log::error!(\"rustc source directory must be an absolute path\"))\n-                .ok()\n-        });\n+        let rustc_source = self.data.rustcSource.as_ref().map(|it| self.root_path.join(&it));\n \n         CargoConfig {\n             no_default_features: self.data.cargo_noDefaultFeatures,\n@@ -767,6 +765,10 @@ fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json\n             \"type\": \"array\",\n             \"items\": { \"type\": \"string\" },\n         },\n+        \"Vec<PathBuf>\" => set! {\n+            \"type\": \"array\",\n+            \"items\": { \"type\": \"string\" },\n+        },\n         \"FxHashSet<String>\" => set! {\n             \"type\": \"array\",\n             \"items\": { \"type\": \"string\" },"}, {"sha": "0507186dce52911a00c34fb7ed990836d7d9d3e6", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "patch": "@@ -214,7 +214,8 @@ impl GlobalState {\n \n         let mut change = Change::new();\n \n-        let project_folders = ProjectFolders::new(&workspaces);\n+        let files_config = self.config.files();\n+        let project_folders = ProjectFolders::new(&workspaces, &files_config.exclude);\n \n         self.proc_macro_client = match self.config.proc_macro_srv() {\n             None => None,\n@@ -231,7 +232,7 @@ impl GlobalState {\n             },\n         };\n \n-        let watch = match self.config.files().watcher {\n+        let watch = match files_config.watcher {\n             FilesWatcher::Client => vec![],\n             FilesWatcher::Notify => project_folders.watch,\n         };\n@@ -319,7 +320,10 @@ pub(crate) struct ProjectFolders {\n }\n \n impl ProjectFolders {\n-    pub(crate) fn new(workspaces: &[ProjectWorkspace]) -> ProjectFolders {\n+    pub(crate) fn new(\n+        workspaces: &[ProjectWorkspace],\n+        global_excludes: &[AbsPathBuf],\n+    ) -> ProjectFolders {\n         let mut res = ProjectFolders::default();\n         let mut fsc = FileSetConfig::builder();\n         let mut local_filesets = vec![];\n@@ -333,6 +337,12 @@ impl ProjectFolders {\n                 dirs.extensions.push(\"rs\".into());\n                 dirs.include.extend(root.include);\n                 dirs.exclude.extend(root.exclude);\n+                for excl in global_excludes {\n+                    if dirs.include.iter().any(|incl| incl.starts_with(excl)) {\n+                        dirs.exclude.push(excl.clone());\n+                    }\n+                }\n+\n                 vfs::loader::Entry::Directories(dirs)\n             };\n "}, {"sha": "55178c84c4ccd78206a50aad1dc7cc52687ee715", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "patch": "@@ -56,6 +56,8 @@\n  List of warnings that should be displayed with hint severity.\\n\\nThe  warnings will be indicated by faded text or three dots in code and  will not show up in the `Problems Panel`.\n [[rust-analyzer.files.watcher]]rust-analyzer.files.watcher (default: `\"client\"`)::\n  Controls file watching implementation.\n+[[rust-analyzer.files.excludeDirs]]rust-analyzer.files.excludeDirs (default: `[]`)::\n+ These directories will be ignored by rust-analyzer.\n [[rust-analyzer.hoverActions.debug]]rust-analyzer.hoverActions.debug (default: `true`)::\n  Whether to show `Debug` action. Only applies when  `#rust-analyzer.hoverActions.enable#` is set.\n [[rust-analyzer.hoverActions.enable]]rust-analyzer.hoverActions.enable (default: `true`)::"}, {"sha": "66af94186fee39b6e5077f302b9b5be7e414fa85", "filename": "editors/code/package.json", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/0ebf548ab7e00676d8ca43d6617c30c1ea840fc7/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=0ebf548ab7e00676d8ca43d6617c30c1ea840fc7", "patch": "@@ -555,6 +555,14 @@\n                     \"default\": \"client\",\n                     \"type\": \"string\"\n                 },\n+                \"rust-analyzer.files.excludeDirs\": {\n+                    \"markdownDescription\": \"These directories will be ignored by rust-analyzer.\",\n+                    \"default\": [],\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    }\n+                },\n                 \"rust-analyzer.hoverActions.debug\": {\n                     \"markdownDescription\": \"Whether to show `Debug` action. Only applies when `#rust-analyzer.hoverActions.enable#` is set.\",\n                     \"default\": true,"}]}