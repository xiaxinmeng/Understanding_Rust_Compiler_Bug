{"sha": "b97d87518d19e418220f726e774ffceadb4d33b9", "node_id": "C_kwDOAAsO6NoAKGI5N2Q4NzUxOGQxOWU0MTgyMjBmNzI2ZTc3NGZmY2VhZGI0ZDMzYjk", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-09T10:47:53Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-09T10:47:53Z"}, "message": "Add soundness test for dropping scoped thread results before joining.", "tree": {"sha": "eef0c8c6c7a7ef81f3d6447d1aaf08c96f53b3eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef0c8c6c7a7ef81f3d6447d1aaf08c96f53b3eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b97d87518d19e418220f726e774ffceadb4d33b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b97d87518d19e418220f726e774ffceadb4d33b9", "html_url": "https://github.com/rust-lang/rust/commit/b97d87518d19e418220f726e774ffceadb4d33b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b97d87518d19e418220f726e774ffceadb4d33b9/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c06eb7c1f416055d7ede098f35bcf22cf85b7f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c06eb7c1f416055d7ede098f35bcf22cf85b7f8", "html_url": "https://github.com/rust-lang/rust/commit/1c06eb7c1f416055d7ede098f35bcf22cf85b7f8"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "7386fe1c442abd6a268a08b79fdc0383c76c6fb8", "filename": "library/std/src/thread/tests.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b97d87518d19e418220f726e774ffceadb4d33b9/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d87518d19e418220f726e774ffceadb4d33b9/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs?ref=b97d87518d19e418220f726e774ffceadb4d33b9", "patch": "@@ -4,10 +4,11 @@ use crate::mem;\n use crate::panic::panic_any;\n use crate::result;\n use crate::sync::{\n+    atomic::{AtomicBool, Ordering},\n     mpsc::{channel, Sender},\n     Arc, Barrier,\n };\n-use crate::thread::{self, ThreadId};\n+use crate::thread::{self, Scope, ThreadId};\n use crate::time::Duration;\n use crate::time::Instant;\n \n@@ -293,3 +294,25 @@ fn test_thread_id_not_equal() {\n     assert!(thread::current().id() != spawned_id);\n }\n \n+#[test]\n+fn test_scoped_threads_drop_result_before_join() {\n+    let actually_finished = &AtomicBool::new(false);\n+    struct X<'scope, 'env>(&'scope Scope<'scope, 'env>, &'env AtomicBool);\n+    impl Drop for X<'_, '_> {\n+        fn drop(&mut self) {\n+            thread::sleep(Duration::from_millis(20));\n+            let actually_finished = self.1;\n+            self.0.spawn(move || {\n+                thread::sleep(Duration::from_millis(20));\n+                actually_finished.store(true, Ordering::Relaxed);\n+            });\n+        }\n+    }\n+    thread::scope(|s| {\n+        s.spawn(move || {\n+            thread::sleep(Duration::from_millis(20));\n+            X(s, actually_finished)\n+        });\n+    });\n+    assert!(actually_finished.load(Ordering::Relaxed));\n+}"}]}