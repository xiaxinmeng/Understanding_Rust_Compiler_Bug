{"sha": "a818648aa91baaafe996a57797c7670836a61202", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MTg2NDhhYTkxYmFhYWZlOTk2YTU3Nzk3Yzc2NzA4MzZhNjEyMDI=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-28T22:45:09Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:49:20Z"}, "message": "remove unnecessary function", "tree": {"sha": "9c5bb87e0e6abdc83eaadc7a604c98b762f4eb58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c5bb87e0e6abdc83eaadc7a604c98b762f4eb58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a818648aa91baaafe996a57797c7670836a61202", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a818648aa91baaafe996a57797c7670836a61202", "html_url": "https://github.com/rust-lang/rust/commit/a818648aa91baaafe996a57797c7670836a61202", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a818648aa91baaafe996a57797c7670836a61202/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71c0bd5c5df8c3810b3c8dc369a9644dfd82c09b", "url": "https://api.github.com/repos/rust-lang/rust/commits/71c0bd5c5df8c3810b3c8dc369a9644dfd82c09b", "html_url": "https://github.com/rust-lang/rust/commit/71c0bd5c5df8c3810b3c8dc369a9644dfd82c09b"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "3c4b35d9c66544fa264f73d67ecf05700f471dd3", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a818648aa91baaafe996a57797c7670836a61202/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a818648aa91baaafe996a57797c7670836a61202/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a818648aa91baaafe996a57797c7670836a61202", "patch": "@@ -3776,15 +3776,9 @@ pub impl Parser {\n         })\n     }\n \n-    fn parse_type_decl(&self) -> (BytePos, ident) {\n-        let lo = self.last_span.lo;\n-        let id = self.parse_ident();\n-        (lo, id)\n-    }\n-\n     // parse type Foo = Bar;\n     fn parse_item_type(&self) -> item_info {\n-        let (_, ident) = self.parse_type_decl();\n+        let ident = self.parse_ident();\n         self.parse_region_param();\n         let tps = self.parse_generics();\n         self.expect(&token::EQ);"}]}