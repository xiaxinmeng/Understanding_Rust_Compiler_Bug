{"sha": "98168925f6570a8d0292abd493cf20bde89c7663", "node_id": "C_kwDOAAsO6NoAKDk4MTY4OTI1ZjY1NzBhOGQwMjkyYWJkNDkzY2YyMGJkZTg5Yzc2NjM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-04T18:41:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-04T18:41:28Z"}, "message": "Rollup merge of #94817 - cuviper:relnotes-1.60.0, r=pietroalbini,m-ou-se\n\nRelease notes for 1.60.0", "tree": {"sha": "c45e84da2a4978f7f43117f394ef8557fec571ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c45e84da2a4978f7f43117f394ef8557fec571ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98168925f6570a8d0292abd493cf20bde89c7663", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiSzvZCRBK7hj4Ov3rIwAArfkIADKb9pEzI8rVXFRN9zyTVy8A\nNjyQIl83xAz6BKD0FpHEZTfDbcQHM+uG5NrJ34xBqPCZ7kN78Oz7J8alhd1I2cA5\nagnDRLmAZYpUcN1X01/o0y/f09bk5/z01wt5kxvBZXWeLNkkLF7LUmX5Cg3GFjx0\n6RSGLcigC3Tnof4c/VW55ueVZlXuyyFCCYIaR3jBEl9t5KTMu3MUkSz6RMBClA3p\nn4GGYJzIugKcfFlTlUK6b+6Ctg941f6UQezP4fNoR9b7Rnt6/y9mfZUZrUWNFWNR\npTikI3IqCUzIVK9XEhFa+OCgGEOhcLDNA0Saf9pSJOTzReBptzgblpgv3on6bVY=\n=PJdh\n-----END PGP SIGNATURE-----\n", "payload": "tree c45e84da2a4978f7f43117f394ef8557fec571ad\nparent c56cbf976c861d28d145549d2aa5736a189a930c\nparent 82eedae66bb20c211d99e6de769daf1f4c6f08d9\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1649097688 +0200\ncommitter GitHub <noreply@github.com> 1649097688 +0200\n\nRollup merge of #94817 - cuviper:relnotes-1.60.0, r=pietroalbini,m-ou-se\n\nRelease notes for 1.60.0\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98168925f6570a8d0292abd493cf20bde89c7663", "html_url": "https://github.com/rust-lang/rust/commit/98168925f6570a8d0292abd493cf20bde89c7663", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98168925f6570a8d0292abd493cf20bde89c7663/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c56cbf976c861d28d145549d2aa5736a189a930c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c56cbf976c861d28d145549d2aa5736a189a930c", "html_url": "https://github.com/rust-lang/rust/commit/c56cbf976c861d28d145549d2aa5736a189a930c"}, {"sha": "82eedae66bb20c211d99e6de769daf1f4c6f08d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/82eedae66bb20c211d99e6de769daf1f4c6f08d9", "html_url": "https://github.com/rust-lang/rust/commit/82eedae66bb20c211d99e6de769daf1f4c6f08d9"}], "stats": {"total": 155, "additions": 155, "deletions": 0}, "files": [{"sha": "0965e37574d074fda69042077ab01df5166b891a", "filename": "RELEASES.md", "status": "modified", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/rust-lang/rust/blob/98168925f6570a8d0292abd493cf20bde89c7663/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/98168925f6570a8d0292abd493cf20bde89c7663/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=98168925f6570a8d0292abd493cf20bde89c7663", "patch": "@@ -1,3 +1,158 @@\n+Version 1.60.0 (2022-04-07)\n+==========================\n+\n+Language\n+--------\n+- [Stabilize `#[cfg(panic = \"...\")]` for either `\"unwind\"` or `\"abort\"`.][93658]\n+- [Stabilize `#[cfg(target_has_atomic = \"...\")]` for each integer size and `\"ptr\"`.][93824]\n+\n+Compiler\n+--------\n+- [Enable combining `+crt-static` and `relocation-model=pic` on `x86_64-unknown-linux-gnu`][86374]\n+- [Fixes wrong `unreachable_pub` lints on nested and glob public reexport][87487]\n+- [Stabilize `-Z instrument-coverage` as `-C instrument-coverage`][90132]\n+- [Stabilize `-Z print-link-args` as `--print link-args`][91606]\n+- [Add new Tier 3 target `mips64-openwrt-linux-musl`\\*][92300]\n+- [Add new Tier 3 target `armv7-unknown-linux-uclibceabi` (softfloat)\\*][92383]\n+- [Fix invalid removal of newlines from doc comments][92357]\n+- [Add kernel target for RustyHermit][92670]\n+- [Deny mixing bin crate type with lib crate types][92933]\n+- [Make rustc use `RUST_BACKTRACE=full` by default][93566]\n+- [Upgrade to LLVM 14][93577]\n+\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n+   information on Rust's tiered platform support.\n+\n+Libraries\n+---------\n+- [Guarantee call order for `sort_by_cached_key`][89621]\n+- [Improve `Duration::try_from_secs_f32`/`f64` accuracy by directly processing exponent and mantissa][90247]\n+- [Make `Instant::{duration_since, elapsed, sub}` saturating][89926]\n+- [Remove non-monotonic clocks workarounds in `Instant::now`][89926]\n+- [Make `BuildHasherDefault`, `iter::Empty` and `future::Pending` covariant][92630]\n+\n+Stabilized APIs\n+---------------\n+- [`Arc::new_cyclic`][arc_new_cyclic]\n+- [`Rc::new_cyclic`][rc_new_cyclic]\n+- [`slice::EscapeAscii`][slice_escape_ascii]\n+- [`<[u8]>::escape_ascii`][slice_u8_escape_ascii]\n+- [`u8::escape_ascii`][u8_escape_ascii]\n+- [`Vec::spare_capacity_mut`][vec_spare_capacity_mut]\n+- [`MaybeUninit::assume_init_drop`][assume_init_drop]\n+- [`MaybeUninit::assume_init_read`][assume_init_read]\n+- [`i8::abs_diff`][i8_abs_diff]\n+- [`i16::abs_diff`][i16_abs_diff]\n+- [`i32::abs_diff`][i32_abs_diff]\n+- [`i64::abs_diff`][i64_abs_diff]\n+- [`i128::abs_diff`][i128_abs_diff]\n+- [`isize::abs_diff`][isize_abs_diff]\n+- [`u8::abs_diff`][u8_abs_diff]\n+- [`u16::abs_diff`][u16_abs_diff]\n+- [`u32::abs_diff`][u32_abs_diff]\n+- [`u64::abs_diff`][u64_abs_diff]\n+- [`u128::abs_diff`][u128_abs_diff]\n+- [`usize::abs_diff`][usize_abs_diff]\n+- [`Display for io::ErrorKind`][display_error_kind]\n+- [`From<u8> for ExitCode`][from_u8_exit_code]\n+- [`Not for !` (the \"never\" type)][not_never]\n+- [_Op_`Assign<$t> for Wrapping<$t>`][wrapping_assign_ops]\n+- [`arch::is_aarch64_feature_detected!`][is_aarch64_feature_detected]\n+\n+Cargo\n+-----\n+- [Port cargo from `toml-rs` to `toml_edit`][cargo/10086]\n+- [Stabilize `-Ztimings` as `--timings`][cargo/10245]\n+- [Stabilize namespaced and weak dependency features.][cargo/10269]\n+- [Accept more `cargo:rustc-link-arg-*` types from build script output.][cargo/10274]\n+- [cargo-new should not add ignore rule on Cargo.lock inside subdirs][cargo/10379]\n+\n+Misc\n+----\n+- [Ship docs on Tier 2 platforms by reusing the closest Tier 1 platform docs][92800]\n+- [Drop rustc-docs from complete profile][93742]\n+- [bootstrap: tidy up flag handling for llvm build][93918]\n+\n+Compatibility Notes\n+-------------------\n+- [Remove compiler-rt linking hack on Android][83822]\n+- [Mitigations for platforms with non-monotonic clocks have been removed from\n+  `Instant::now`][89926]. On platforms that don't provide monotonic clocks, an\n+  instant is not guaranteed to be greater than an earlier instant anymore.\n+- [`Instant::{duration_since, elapsed, sub}` do not panic anymore on underflow,\n+  saturating to `0` instead][89926]. In the real world the panic happened mostly\n+  on platforms with buggy monotonic clock implementations rather than catching\n+  programming errors like reversing the start and end times. Such programming\n+  errors will now results in `0` rather than a panic.\n+- In a future release we're planning to increase the baseline requirements for\n+  the Linux kernel to version 3.2, and for glibc to version 2.17. We'd love\n+  your feedback in [PR #95026][95026].\n+\n+Internal Changes\n+----------------\n+\n+These changes provide no direct user facing benefits, but represent significant\n+improvements to the internals and overall performance of rustc\n+and related tools.\n+\n+- [Switch all libraries to the 2021 edition][92068]\n+\n+[83822]: https://github.com/rust-lang/rust/pull/83822\n+[86374]: https://github.com/rust-lang/rust/pull/86374\n+[87487]: https://github.com/rust-lang/rust/pull/87487\n+[89621]: https://github.com/rust-lang/rust/pull/89621\n+[89926]: https://github.com/rust-lang/rust/pull/89926\n+[90132]: https://github.com/rust-lang/rust/pull/90132\n+[90247]: https://github.com/rust-lang/rust/pull/90247\n+[91606]: https://github.com/rust-lang/rust/pull/91606\n+[92068]: https://github.com/rust-lang/rust/pull/92068\n+[92300]: https://github.com/rust-lang/rust/pull/92300\n+[92357]: https://github.com/rust-lang/rust/pull/92357\n+[92383]: https://github.com/rust-lang/rust/pull/92383\n+[92630]: https://github.com/rust-lang/rust/pull/92630\n+[92670]: https://github.com/rust-lang/rust/pull/92670\n+[92800]: https://github.com/rust-lang/rust/pull/92800\n+[92933]: https://github.com/rust-lang/rust/pull/92933\n+[93566]: https://github.com/rust-lang/rust/pull/93566\n+[93577]: https://github.com/rust-lang/rust/pull/93577\n+[93658]: https://github.com/rust-lang/rust/pull/93658\n+[93742]: https://github.com/rust-lang/rust/pull/93742\n+[93824]: https://github.com/rust-lang/rust/pull/93824\n+[93918]: https://github.com/rust-lang/rust/pull/93918\n+[95026]: https://github.com/rust-lang/rust/pull/95026\n+\n+[cargo/10086]: https://github.com/rust-lang/cargo/pull/10086\n+[cargo/10245]: https://github.com/rust-lang/cargo/pull/10245\n+[cargo/10269]: https://github.com/rust-lang/cargo/pull/10269\n+[cargo/10274]: https://github.com/rust-lang/cargo/pull/10274\n+[cargo/10379]: https://github.com/rust-lang/cargo/pull/10379\n+\n+[arc_new_cyclic]: https://doc.rust-lang.org/stable/std/sync/struct.Arc.html#method.new_cyclic\n+[rc_new_cyclic]: https://doc.rust-lang.org/stable/std/rc/struct.Rc.html#method.new_cyclic\n+[slice_escape_ascii]: https://doc.rust-lang.org/stable/std/slice/struct.EscapeAscii.html\n+[slice_u8_escape_ascii]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.escape_ascii\n+[u8_escape_ascii]: https://doc.rust-lang.org/stable/std/primitive.u8.html#method.escape_ascii\n+[vec_spare_capacity_mut]: https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.spare_capacity_mut\n+[assume_init_drop]: https://doc.rust-lang.org/stable/std/mem/union.MaybeUninit.html#method.assume_init_drop\n+[assume_init_read]: https://doc.rust-lang.org/stable/std/mem/union.MaybeUninit.html#method.assume_init_read\n+[i8_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.i8.html#method.abs_diff\n+[i16_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.i16.html#method.abs_diff\n+[i32_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.i32.html#method.abs_diff\n+[i64_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.i64.html#method.abs_diff\n+[i128_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.i128.html#method.abs_diff\n+[isize_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.isize.html#method.abs_diff\n+[u8_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.u8.html#method.abs_diff\n+[u16_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.u16.html#method.abs_diff\n+[u32_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.u32.html#method.abs_diff\n+[u64_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.u64.html#method.abs_diff\n+[u128_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.u128.html#method.abs_diff\n+[usize_abs_diff]: https://doc.rust-lang.org/stable/std/primitive.usize.html#method.abs_diff\n+[display_error_kind]: https://doc.rust-lang.org/stable/std/io/enum.ErrorKind.html#impl-Display\n+[from_u8_exit_code]: https://doc.rust-lang.org/stable/std/process/struct.ExitCode.html#impl-From%3Cu8%3E\n+[not_never]: https://doc.rust-lang.org/stable/std/primitive.never.html#impl-Not\n+[wrapping_assign_ops]: https://doc.rust-lang.org/stable/std/num/struct.Wrapping.html#trait-implementations\n+[is_aarch64_feature_detected]: https://doc.rust-lang.org/stable/std/arch/macro.is_aarch64_feature_detected.html\n+\n Version 1.59.0 (2022-02-24)\n ==========================\n "}]}