{"sha": "85f4ef0fbd92453cf480af4e3f9eed877071ea2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZjRlZjBmYmQ5MjQ1M2NmNDgwYWY0ZTNmOWVlZDg3NzA3MWVhMmU=", "commit": {"author": {"name": "jrqc", "email": "jrqc01@hotmail.com", "date": "2020-08-12T14:14:12Z"}, "committer": {"name": "jrqc", "email": "jrqc01@hotmail.com", "date": "2020-08-15T21:24:27Z"}, "message": "Visitor added", "tree": {"sha": "ebc3559b598e5f59bb84a5cd97a5dd75a65fe2e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebc3559b598e5f59bb84a5cd97a5dd75a65fe2e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85f4ef0fbd92453cf480af4e3f9eed877071ea2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85f4ef0fbd92453cf480af4e3f9eed877071ea2e", "html_url": "https://github.com/rust-lang/rust/commit/85f4ef0fbd92453cf480af4e3f9eed877071ea2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85f4ef0fbd92453cf480af4e3f9eed877071ea2e/comments", "author": {"login": "jrqc", "id": 14986914, "node_id": "MDQ6VXNlcjE0OTg2OTE0", "avatar_url": "https://avatars.githubusercontent.com/u/14986914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrqc", "html_url": "https://github.com/jrqc", "followers_url": "https://api.github.com/users/jrqc/followers", "following_url": "https://api.github.com/users/jrqc/following{/other_user}", "gists_url": "https://api.github.com/users/jrqc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrqc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrqc/subscriptions", "organizations_url": "https://api.github.com/users/jrqc/orgs", "repos_url": "https://api.github.com/users/jrqc/repos", "events_url": "https://api.github.com/users/jrqc/events{/privacy}", "received_events_url": "https://api.github.com/users/jrqc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jrqc", "id": 14986914, "node_id": "MDQ6VXNlcjE0OTg2OTE0", "avatar_url": "https://avatars.githubusercontent.com/u/14986914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrqc", "html_url": "https://github.com/jrqc", "followers_url": "https://api.github.com/users/jrqc/followers", "following_url": "https://api.github.com/users/jrqc/following{/other_user}", "gists_url": "https://api.github.com/users/jrqc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrqc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrqc/subscriptions", "organizations_url": "https://api.github.com/users/jrqc/orgs", "repos_url": "https://api.github.com/users/jrqc/repos", "events_url": "https://api.github.com/users/jrqc/events{/privacy}", "received_events_url": "https://api.github.com/users/jrqc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d18fe730e88903fa881f7b753369623108a5d55", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d18fe730e88903fa881f7b753369623108a5d55", "html_url": "https://github.com/rust-lang/rust/commit/6d18fe730e88903fa881f7b753369623108a5d55"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "861a7ec558c2375b91ff634bfdc1f8469248399d", "filename": "clippy_lints/src/needless_return.rs", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/85f4ef0fbd92453cf480af4e3f9eed877071ea2e/clippy_lints%2Fsrc%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85f4ef0fbd92453cf480af4e3f9eed877071ea2e/clippy_lints%2Fsrc%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_return.rs?ref=85f4ef0fbd92453cf480af4e3f9eed877071ea2e", "patch": "@@ -2,12 +2,14 @@ use rustc_lint::{LateLintPass, LateContext};\n use rustc_ast::ast::Attribute;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_errors::Applicability;\n-use rustc_hir::intravisit::FnKind;\n+use rustc_hir::intravisit::{FnKind, walk_expr, NestedVisitorMap, Visitor};\n use rustc_span::source_map::Span;\n use rustc_middle::lint::in_external_macro;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::subst::GenericArgKind;\n use rustc_hir::{Block, Body, Expr, ExprKind, FnDecl, HirId, MatchSource, StmtKind};\n \n-use crate::utils::{snippet_opt, span_lint_and_sugg, span_lint_and_then};\n+use crate::utils::{fn_def_id, snippet_opt, span_lint_and_sugg, span_lint_and_then};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for return statements at the end of a block.\n@@ -164,3 +166,42 @@ fn emit_return_lint(cx: &LateContext<'_>, ret_span: Span, inner_span: Option<Spa\n         },\n     }\n }\n+\n+fn last_statement_borrows<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) -> bool {\n+    let mut visitor = BorrowVisitor { cx, borrows: false };\n+    walk_expr(&mut visitor, expr);\n+    visitor.borrows\n+}\n+\n+struct BorrowVisitor<'a, 'tcx> {\n+    cx: &'a LateContext<'tcx>,\n+    borrows: bool,\n+}\n+\n+impl<'tcx> Visitor<'tcx> for BorrowVisitor<'_, 'tcx> {\n+    type Map = Map<'tcx>;\n+\n+    fn visit_expr(&mut self, expr: &'tcx Expr<'_>) {\n+        if self.borrows {\n+            return;\n+        }\n+\n+        if let Some(def_id) = fn_def_id(self.cx, expr) {\n+            self.borrows = self\n+                .cx\n+                .tcx\n+                .fn_sig(def_id)\n+                .output()\n+                .skip_binder()\n+                .walk()\n+                .any(|arg| matches!(arg.unpack(), GenericArgKind::Lifetime(_)));\n+        }\n+\n+        walk_expr(self, expr);\n+    }\n+\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::None\n+    }\n+}\n+"}]}