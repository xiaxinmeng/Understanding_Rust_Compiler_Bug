{"sha": "2229a0839efe52a3014133db5e469770000341c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMjlhMDgzOWVmZTUyYTMwMTQxMzNkYjVlNDY5NzcwMDAwMzQxYzQ=", "commit": {"author": {"name": "nahuakang", "email": "kangnahua@gmail.com", "date": "2021-02-21T17:25:50Z"}, "committer": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-03-02T09:14:20Z"}, "message": "Clean up: Rename some files to be consistent with lint names; import lints to each file", "tree": {"sha": "177b7206b5b38e23db5f8fbfe429c379d21eb618", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/177b7206b5b38e23db5f8fbfe429c379d21eb618"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2229a0839efe52a3014133db5e469770000341c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2229a0839efe52a3014133db5e469770000341c4", "html_url": "https://github.com/rust-lang/rust/commit/2229a0839efe52a3014133db5e469770000341c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2229a0839efe52a3014133db5e469770000341c4/comments", "author": {"login": "nahuakang", "id": 18533347, "node_id": "MDQ6VXNlcjE4NTMzMzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/18533347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nahuakang", "html_url": "https://github.com/nahuakang", "followers_url": "https://api.github.com/users/nahuakang/followers", "following_url": "https://api.github.com/users/nahuakang/following{/other_user}", "gists_url": "https://api.github.com/users/nahuakang/gists{/gist_id}", "starred_url": "https://api.github.com/users/nahuakang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nahuakang/subscriptions", "organizations_url": "https://api.github.com/users/nahuakang/orgs", "repos_url": "https://api.github.com/users/nahuakang/repos", "events_url": "https://api.github.com/users/nahuakang/events{/privacy}", "received_events_url": "https://api.github.com/users/nahuakang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecebfe0c9cee0694e986af63a446031606825d18", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecebfe0c9cee0694e986af63a446031606825d18", "html_url": "https://github.com/rust-lang/rust/commit/ecebfe0c9cee0694e986af63a446031606825d18"}], "stats": {"total": 61, "additions": 35, "deletions": 26}, "files": [{"sha": "59116032f664ad33ffcee81861be07ea8dfda4ab", "filename": "clippy_lints/src/loops/explicit_counter_loop.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,4 +1,6 @@\n-use super::{get_span_of_entire_for_loop, make_iterator_snippet, IncrementVisitor, InitializeVisitor};\n+use super::{\n+    get_span_of_entire_for_loop, make_iterator_snippet, IncrementVisitor, InitializeVisitor, EXPLICIT_COUNTER_LOOP,\n+};\n use crate::utils::{get_enclosing_block, is_integer_const, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -37,7 +39,7 @@ pub(super) fn check_for_loop_explicit_counter<'tcx>(\n \n                     span_lint_and_sugg(\n                         cx,\n-                        super::EXPLICIT_COUNTER_LOOP,\n+                        EXPLICIT_COUNTER_LOOP,\n                         for_span.with_hi(arg.span.hi()),\n                         &format!(\"the variable `{}` is used as a loop counter\", name),\n                         \"consider using\","}, {"sha": "228d462f6e18e1a39df3376c914a9fa80dc336f1", "filename": "clippy_lints/src/loops/for_kv_map.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Ffor_kv_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Ffor_kv_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Ffor_kv_map.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,3 +1,4 @@\n+use super::FOR_KV_MAP;\n use crate::utils::visitors::LocalUsedVisitor;\n use crate::utils::{is_type_diagnostic_item, match_type, multispan_sugg, paths, snippet, span_lint_and_then, sugg};\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability, Pat, PatKind};\n@@ -37,7 +38,7 @@ pub(super) fn check_for_loop_over_map_kv<'tcx>(\n             if is_type_diagnostic_item(cx, ty, sym!(hashmap_type)) || match_type(cx, ty, &paths::BTREEMAP) {\n                 span_lint_and_then(\n                     cx,\n-                    super::FOR_KV_MAP,\n+                    FOR_KV_MAP,\n                     expr.span,\n                     &format!(\"you seem to want to iterate on a map's {}s\", kind),\n                     |diag| {", "previous_filename": "clippy_lints/src/loops/for_loop_over_map_kv.rs"}, {"sha": "efacda772848f4c314a757d7c76c6347f8b75510", "filename": "clippy_lints/src/loops/manual_flatten.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,4 +1,5 @@\n use super::utils::make_iterator_snippet;\n+use super::MANUAL_FLATTEN;\n use crate::utils::{is_ok_ctor, is_some_ctor, path_to_local_id, span_lint_and_then};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -55,7 +56,7 @@ pub(super) fn check_manual_flatten<'tcx>(\n \n                 span_lint_and_then(\n                     cx,\n-                    super::MANUAL_FLATTEN,\n+                    MANUAL_FLATTEN,\n                     span,\n                     &msg,\n                     |diag| {"}, {"sha": "e3080d9f556a3e2c5e7a2ccb9eb07d1a0836edd0", "filename": "clippy_lints/src/loops/manual_memcpy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,4 +1,4 @@\n-use super::{get_span_of_entire_for_loop, IncrementVisitor, InitializeVisitor};\n+use super::{get_span_of_entire_for_loop, IncrementVisitor, InitializeVisitor, MANUAL_MEMCPY};\n use crate::utils::sugg::Sugg;\n use crate::utils::{\n     get_enclosing_block, higher, is_type_diagnostic_item, path_to_local, snippet, span_lint_and_sugg, sugg,\n@@ -84,7 +84,7 @@ pub(super) fn detect_manual_memcpy<'tcx>(\n             if let Some(big_sugg) = big_sugg {\n                 span_lint_and_sugg(\n                     cx,\n-                    super::MANUAL_MEMCPY,\n+                    MANUAL_MEMCPY,\n                     get_span_of_entire_for_loop(expr),\n                     \"it looks like you're manually copying between slices\",\n                     \"try replacing the loop by\","}, {"sha": "0d408698fc96b2a5c46ecb880403dd83da6d4182", "filename": "clippy_lints/src/loops/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmod.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -2,19 +2,19 @@ mod empty_loop;\n mod explicit_counter_loop;\n mod explicit_into_iter_loop;\n mod explicit_iter_loop;\n-mod for_loop_over_map_kv;\n-mod for_loop_range;\n+mod for_kv_map;\n mod for_loops_over_fallibles;\n-mod for_mut_range_bound;\n-mod for_single_element_loop;\n-mod infinite_loop;\n mod iter_next_loop;\n mod manual_flatten;\n mod manual_memcpy;\n+mod mut_range_bound;\n mod needless_collect;\n+mod needless_range_loop;\n mod never_loop;\n mod same_item_push;\n+mod single_element_loop;\n mod utils;\n+mod while_immutable_condition;\n mod while_let_loop;\n mod while_let_on_iterator;\n \n@@ -573,7 +573,7 @@ impl<'tcx> LateLintPass<'tcx> for Loops {\n         while_let_on_iterator::check_while_let_on_iterator(cx, expr);\n \n         if let Some((cond, body)) = higher::while_loop(&expr) {\n-            infinite_loop::check_infinite_loop(cx, cond, body);\n+            while_immutable_condition::check_infinite_loop(cx, cond, body);\n         }\n \n         needless_collect::check_needless_collect(expr, cx);\n@@ -590,13 +590,13 @@ fn check_for_loop<'tcx>(\n ) {\n     let is_manual_memcpy_triggered = manual_memcpy::detect_manual_memcpy(cx, pat, arg, body, expr);\n     if !is_manual_memcpy_triggered {\n-        for_loop_range::check_for_loop_range(cx, pat, arg, body, expr);\n+        needless_range_loop::check_for_loop_range(cx, pat, arg, body, expr);\n         explicit_counter_loop::check_for_loop_explicit_counter(cx, pat, arg, body, expr);\n     }\n     check_for_loop_arg(cx, pat, arg, expr);\n-    for_loop_over_map_kv::check_for_loop_over_map_kv(cx, pat, arg, body, expr);\n-    for_mut_range_bound::check_for_mut_range_bound(cx, arg, body);\n-    for_single_element_loop::check_for_single_element_loop(cx, pat, arg, body, expr);\n+    for_kv_map::check_for_loop_over_map_kv(cx, pat, arg, body, expr);\n+    mut_range_bound::check_for_mut_range_bound(cx, arg, body);\n+    single_element_loop::check_for_single_element_loop(cx, pat, arg, body, expr);\n     same_item_push::detect_same_item_push(cx, pat, arg, body, expr);\n     manual_flatten::check_manual_flatten(cx, pat, arg, body, span);\n }"}, {"sha": "9f31617edeb5e0b24ff8fd8cc366f3eeac599c59", "filename": "clippy_lints/src/loops/mut_range_bound.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,3 +1,4 @@\n+use super::MUT_RANGE_BOUND;\n use crate::utils::{higher, path_to_local, span_lint};\n use if_chain::if_chain;\n use rustc_hir::{BindingAnnotation, Expr, HirId, Node, PatKind};\n@@ -27,7 +28,7 @@ fn mut_warn_with_span(cx: &LateContext<'_>, span: Option<Span>) {\n     if let Some(sp) = span {\n         span_lint(\n             cx,\n-            super::MUT_RANGE_BOUND,\n+            MUT_RANGE_BOUND,\n             sp,\n             \"attempt to mutate range bound within loop; note that the range of the loop is unchanged\",\n         );", "previous_filename": "clippy_lints/src/loops/for_mut_range_bound.rs"}, {"sha": "d1ce055445b507fc08de7d73e0d6bfc788ffe170", "filename": "clippy_lints/src/loops/needless_collect.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,3 +1,4 @@\n+use super::NEEDLESS_COLLECT;\n use crate::utils::sugg::Sugg;\n use crate::utils::{\n     is_type_diagnostic_item, match_trait_method, match_type, path_to_local_id, paths, snippet, span_lint_and_sugg,\n@@ -35,7 +36,7 @@ fn check_needless_collect_direct_usage<'tcx>(expr: &'tcx Expr<'_>, cx: &LateCont\n                     let span = shorten_needless_collect_span(expr);\n                     span_lint_and_sugg(\n                         cx,\n-                        super::NEEDLESS_COLLECT,\n+                        NEEDLESS_COLLECT,\n                         span,\n                         NEEDLESS_COLLECT_MSG,\n                         \"replace with\",\n@@ -47,7 +48,7 @@ fn check_needless_collect_direct_usage<'tcx>(expr: &'tcx Expr<'_>, cx: &LateCont\n                     let span = shorten_needless_collect_span(expr);\n                     span_lint_and_sugg(\n                         cx,\n-                        super::NEEDLESS_COLLECT,\n+                        NEEDLESS_COLLECT,\n                         span,\n                         NEEDLESS_COLLECT_MSG,\n                         \"replace with\",\n@@ -60,7 +61,7 @@ fn check_needless_collect_direct_usage<'tcx>(expr: &'tcx Expr<'_>, cx: &LateCont\n                     let span = shorten_needless_collect_span(expr);\n                     span_lint_and_then(\n                         cx,\n-                        super::NEEDLESS_COLLECT,\n+                        NEEDLESS_COLLECT,\n                         span,\n                         NEEDLESS_COLLECT_MSG,\n                         |diag| {"}, {"sha": "298753cc0310aa8e3a34a94ea0de6e4d35d05411", "filename": "clippy_lints/src/loops/needless_range_loop.rs", "status": "renamed", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fneedless_range_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fneedless_range_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fneedless_range_loop.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,3 +1,4 @@\n+use super::NEEDLESS_RANGE_LOOP;\n use crate::utils::visitors::LocalUsedVisitor;\n use crate::utils::{\n     contains_name, has_iter_method, higher, is_integer_const, match_trait_method, multispan_sugg, path_to_local_id,\n@@ -142,7 +143,7 @@ pub(super) fn check_for_loop_range<'tcx>(\n                 if visitor.nonindex {\n                     span_lint_and_then(\n                         cx,\n-                        super::NEEDLESS_RANGE_LOOP,\n+                        NEEDLESS_RANGE_LOOP,\n                         expr.span,\n                         &format!(\"the loop variable `{}` is used to index `{}`\", ident.name, indexed),\n                         |diag| {\n@@ -168,7 +169,7 @@ pub(super) fn check_for_loop_range<'tcx>(\n \n                     span_lint_and_then(\n                         cx,\n-                        super::NEEDLESS_RANGE_LOOP,\n+                        NEEDLESS_RANGE_LOOP,\n                         expr.span,\n                         &format!(\"the loop variable `{}` is only used to index `{}`\", ident.name, indexed),\n                         |diag| {", "previous_filename": "clippy_lints/src/loops/for_loop_range.rs"}, {"sha": "c1d5f8b7186b026e0e64d012ac9f49e267dc5fd9", "filename": "clippy_lints/src/loops/same_item_push.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fsame_item_push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fsame_item_push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fsame_item_push.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,3 +1,4 @@\n+use super::SAME_ITEM_PUSH;\n use crate::utils::{implements_trait, is_type_diagnostic_item, snippet_with_macro_callsite, span_lint_and_help};\n use if_chain::if_chain;\n use rustc_hir::def::{DefKind, Res};\n@@ -22,7 +23,7 @@ pub(super) fn detect_same_item_push<'tcx>(\n \n         span_lint_and_help(\n             cx,\n-            super::SAME_ITEM_PUSH,\n+            SAME_ITEM_PUSH,\n             vec.span,\n             \"it looks like the same item is being pushed into this Vec\",\n             None,"}, {"sha": "9e2697186db711e3a080418927c81b0c32c97657", "filename": "clippy_lints/src/loops/single_element_loop.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,4 +1,4 @@\n-use super::get_span_of_entire_for_loop;\n+use super::{get_span_of_entire_for_loop, SINGLE_ELEMENT_LOOP};\n use crate::utils::{indent_of, single_segment_path, snippet, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -30,7 +30,7 @@ pub(super) fn check_for_single_element_loop<'tcx>(\n \n             span_lint_and_sugg(\n                 cx,\n-                super::SINGLE_ELEMENT_LOOP,\n+                SINGLE_ELEMENT_LOOP,\n                 for_span,\n                 \"for loop over a single element\",\n                 \"try\",", "previous_filename": "clippy_lints/src/loops/for_single_element_loop.rs"}, {"sha": "42e6551b6817e7ca5fec50a4f28b38486ced276e", "filename": "clippy_lints/src/loops/while_immutable_condition.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fwhile_immutable_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2229a0839efe52a3014133db5e469770000341c4/clippy_lints%2Fsrc%2Floops%2Fwhile_immutable_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fwhile_immutable_condition.rs?ref=2229a0839efe52a3014133db5e469770000341c4", "patch": "@@ -1,3 +1,4 @@\n+use super::WHILE_IMMUTABLE_CONDITION;\n use crate::consts::constant;\n use crate::utils::span_lint_and_then;\n use crate::utils::usage::mutated_variables;\n@@ -43,7 +44,7 @@ pub(super) fn check_infinite_loop<'tcx>(cx: &LateContext<'tcx>, cond: &'tcx Expr\n     if no_cond_variable_mutated && !mutable_static_in_cond {\n         span_lint_and_then(\n             cx,\n-            super::WHILE_IMMUTABLE_CONDITION,\n+            WHILE_IMMUTABLE_CONDITION,\n             cond.span,\n             \"variables in the condition are not mutated in the loop body\",\n             |diag| {", "previous_filename": "clippy_lints/src/loops/infinite_loop.rs"}]}