{"sha": "c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNzk2NGMwNmQyNDMwMGU1ZjkwNzNmMGI3YWI0ZmZhZmZkNzhhODk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-21T03:19:22Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-21T03:19:22Z"}, "message": "Use name_base in plval base.", "tree": {"sha": "7996174fc01f36e5434dd57c68b323c7806025bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7996174fc01f36e5434dd57c68b323c7806025bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "html_url": "https://github.com/rust-lang/rust/commit/c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dda16f807c2b1ce7d2ee6e510bee75e6a8dea30c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dda16f807c2b1ce7d2ee6e510bee75e6a8dea30c", "html_url": "https://github.com/rust-lang/rust/commit/dda16f807c2b1ce7d2ee6e510bee75e6a8dea30c"}], "stats": {"total": 49, "additions": 18, "deletions": 31}, "files": [{"sha": "54c48f7d090e48c88fa12f99b2171852f00a117d", "filename": "src/boot/fe/ast.ml", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Ffe%2Fast.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Ffe%2Fast.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fast.ml?ref=c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "patch": "@@ -348,8 +348,7 @@ and pexp' =\n   | PEXP_custom of name * (pexp array) * (string option)\n \n and plval =\n-    PLVAL_ident of ident\n-  | PLVAL_app of (ident * (ty array))\n+    PLVAL_base of name_base\n   | PLVAL_ext_name of (pexp * name_component)\n   | PLVAL_ext_pexp of (pexp * pexp)\n   | PLVAL_ext_deref of pexp\n@@ -555,8 +554,7 @@ let sane_name (n:name) : bool =\n \n let rec plval_is_atomic (plval:plval) : bool =\n   match plval with\n-      PLVAL_ident _\n-    | PLVAL_app _ -> true\n+      PLVAL_base _ -> true\n \n     | PLVAL_ext_name (p, _) ->\n         pexp_is_atomic p\n@@ -1039,10 +1037,7 @@ and fmt_pexp (ff:Format.formatter) (pexp:pexp) : unit =\n \n and fmt_plval (ff:Format.formatter) (plval:plval) : unit =\n   match plval with\n-      PLVAL_ident id -> fmt_ident ff id\n-    | PLVAL_app (id, tys) ->\n-        fmt_ident ff id;\n-        fmt_bracketed_arr_sep \"[\" \"]\" \",\" fmt_ty ff tys\n+      PLVAL_base nb -> fmt_name_base ff nb\n \n     | PLVAL_ext_name (pexp, nc) ->\n         fmt_pexp ff pexp;"}, {"sha": "5ec174184b65875fb41dca3295605261a23f2ef1", "filename": "src/boot/fe/cexp.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Ffe%2Fcexp.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Ffe%2Fcexp.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fcexp.ml?ref=c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "patch": "@@ -520,7 +520,7 @@ and eval_pexp (env:env) (exp:Ast.pexp) : pval =\n             | _ -> bug () \"Unexpected unop in Cexp.eval_pexp\"\n         end\n \n-    | Ast.PEXP_lval (Ast.PLVAL_ident ident) ->\n+    | Ast.PEXP_lval (Ast.PLVAL_base (Ast.BASE_ident ident)) ->\n         begin\n           match ltab_search !(env.env_bindings) ident with\n               None -> raise (err (Printf.sprintf \"no binding for '%s' found\""}, {"sha": "ec4053c60635497e934834d9369e4f1edd3071a8", "filename": "src/boot/fe/pexp.ml", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Ffe%2Fpexp.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Ffe%2Fpexp.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fpexp.ml?ref=c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "patch": "@@ -559,13 +559,13 @@ and parse_bottom_pexp (ps:pstate) : Ast.pexp =\n                          (Some COMMA) parse_ty) ps\n                   in\n                   let bpos = lexpos ps in\n-                    span ps apos bpos (Ast.PEXP_lval (Ast.PLVAL_app (i, tys)))\n+                    span ps apos bpos (Ast.PEXP_lval (Ast.PLVAL_base (Ast.BASE_app (i, tys))))\n                 end\n \n             | _ ->\n                 begin\n                   let bpos = lexpos ps in\n-                    span ps apos bpos (Ast.PEXP_lval (Ast.PLVAL_ident i))\n+                    span ps apos bpos (Ast.PEXP_lval (Ast.PLVAL_base (Ast.BASE_ident i)))\n                 end\n         end\n \n@@ -960,13 +960,8 @@ let rec desugar_lval (ps:pstate) (pexp:Ast.pexp)\n   let (apos, bpos) = (s.lo, s.hi) in\n     match pexp.node with\n \n-        Ast.PEXP_lval (Ast.PLVAL_ident ident) ->\n-          let nb = span ps apos bpos (Ast.BASE_ident ident) in\n-            ([||], Ast.LVAL_base nb)\n-\n-      | Ast.PEXP_lval (Ast.PLVAL_app (ident, tys)) ->\n-          let nb = span ps apos bpos (Ast.BASE_app (ident, tys)) in\n-            ([||], Ast.LVAL_base nb)\n+        Ast.PEXP_lval (Ast.PLVAL_base nb) ->\n+            ([||], Ast.LVAL_base (span ps apos bpos nb))\n \n       | Ast.PEXP_lval (Ast.PLVAL_ext_name (base_pexp, comp)) ->\n           let (base_stmts, base_atom) = desugar_expr_atom ps base_pexp in"}, {"sha": "cb40dfc924c6a9ed69c3f463cc8ca6f2a10f9bc7", "filename": "src/boot/me/resolve.ml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Fme%2Fresolve.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Fme%2Fresolve.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fresolve.ml?ref=c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "patch": "@@ -492,9 +492,9 @@ let type_resolving_visitor\n     inner.Walk.visit_pexp_post p;\n     let rebuild_plval pl =\n       match pl with\n-          Ast.PLVAL_ident _ -> pl\n-        | Ast.PLVAL_app (id, tys) ->\n-            Ast.PLVAL_app (id, Array.map resolve_ty tys)\n+          Ast.PLVAL_base (Ast.BASE_app (id, tys)) ->\n+            Ast.PLVAL_base (Ast.BASE_app (id, Array.map resolve_ty tys))\n+        | Ast.PLVAL_base _ -> pl\n         | Ast.PLVAL_ext_name (pexp, nc) ->\n             let pexp = get_rebuilt_pexp pexp in\n             let nc =\n@@ -668,8 +668,8 @@ let lval_base_resolving_visitor\n         Ast.PEXP_lval pl ->\n           begin\n             match pl with\n-                (Ast.PLVAL_ident ident)\n-              | (Ast.PLVAL_app (ident, _)) ->\n+                (Ast.PLVAL_base (Ast.BASE_ident ident))\n+              | (Ast.PLVAL_base (Ast.BASE_app (ident, _))) ->\n                   let id = lookup_defn_by_ident p.id ident in\n \n                     iflog cx"}, {"sha": "0d350bc5e47570cdc44c69490a8d129ac0e2af84", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "patch": "@@ -579,10 +579,8 @@ let rec lval_to_name (lv:Ast.lval) : Ast.name =\n \n let rec plval_to_name (pl:Ast.plval) : Ast.name =\n   match pl with\n-      Ast.PLVAL_ident ident ->\n-        Ast.NAME_base (Ast.BASE_ident ident)\n-    | Ast.PLVAL_app (ident, tys) ->\n-        Ast.NAME_base (Ast.BASE_app (ident, tys))\n+      Ast.PLVAL_base nb ->\n+        Ast.NAME_base nb\n     | Ast.PLVAL_ext_name ({node = Ast.PEXP_lval pl}, nc) ->\n         Ast.NAME_ext (plval_to_name pl, nc)\n     | _ -> bug () \"plval_to_name with plval that contains non-name components\"\n@@ -1431,8 +1429,7 @@ let rec pexp_is_const (cx:ctxt) (pexp:Ast.pexp) : bool =\n \n and plval_is_const (cx:ctxt) (plval:Ast.plval) : bool =\n   match plval with\n-    Ast.PLVAL_ident _\n-  | Ast.PLVAL_app _ ->\n+    Ast.PLVAL_base _ ->\n       bug () \"Semant.plval_is_const on plval base\"\n \n   | Ast.PLVAL_ext_name (pexp, _) ->"}, {"sha": "eb469dfbc00cde66aa760306241d8c4214b50734", "filename": "src/boot/me/walk.ml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Fme%2Fwalk.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c17964c06d24300e5f9073f0b7ab4ffaffd78a89/src%2Fboot%2Fme%2Fwalk.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fwalk.ml?ref=c17964c06d24300e5f9073f0b7ab4ffaffd78a89", "patch": "@@ -631,9 +631,9 @@ and walk_plval\n     : unit =\n   let children _ =\n     match p with\n-        Ast.PLVAL_ident _ -> ()\n-      | Ast.PLVAL_app (_, tys) ->\n+      | Ast.PLVAL_base (Ast.BASE_app (_, tys)) ->\n           Array.iter (walk_ty v) tys\n+      | Ast.PLVAL_base _ -> ()\n       | Ast.PLVAL_ext_name (pexp, _) ->\n           walk_pexp v pexp\n       | Ast.PLVAL_ext_pexp (a, b) ->"}]}