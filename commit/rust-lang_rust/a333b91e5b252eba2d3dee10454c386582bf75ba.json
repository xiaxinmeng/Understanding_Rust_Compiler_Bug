{"sha": "a333b91e5b252eba2d3dee10454c386582bf75ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMzNiOTFlNWIyNTJlYmEyZDNkZWUxMDQ1NGMzODY1ODJiZjc1YmE=", "commit": {"author": {"name": "Ali Saidi", "email": "alisaidi@amazon.com", "date": "2021-09-04T20:25:55Z"}, "committer": {"name": "Ali Saidi", "email": "alisaidi@amazon.com", "date": "2021-09-04T20:28:16Z"}, "message": "linux/aarch64 Now() should be actually_monotonic()\n\nWhile issues have been seen on arm64 platforms the Arm architecture requires\nthat the counter monotonically increases and that it must provide a uniform\nview of system time (e.g. it must not be possible for a core to receive a\nmessage from another core with a time stamp and observe time going backwards\n(ARM DDI 0487G.b D11.1.2). While there have been a few 64bit SoCs that have\nbugs (#49281, #56940) which cause time to not monotonically increase, these have\nbeen fixed in the Linux kernel and we shouldn't penalize all Arm SoCs for those\nwho refuse to update their kernels:\nSUN50I_ERRATUM_UNKNOWN1 - Allwinner A64 / Pine A64 - fixed in 5.1\nFSL_ERRATUM_A008585 - Freescale LS2080A/LS1043A - fixed in 4.10\nHISILICON_ERRATUM_161010101 - Hisilicon 1610 - fixed in 4.11\nARM64_ERRATUM_858921 - Cortex A73 - fixed in 4.12\n\n255a3f3e183 std: Force `Instant::now()` to be monotonic added a mutex to work around\nthis problem and a small test program using glommio shows the majority of time spent\nacquiring and releasing this Mutex. 3914a7b0da8 tries to improve this, but actually\nmakes it worse on big systems as for 128b atomics a ldxp/stxp pair (and\nsuccessful loop) is required which is expensive as a lock and because of how\nthe load/store-exclusives scale on large Arm systems is both unfair to threads\nand tends to go backwards in performance.", "tree": {"sha": "be76263e3bd396f83f04e719de28849a026771aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be76263e3bd396f83f04e719de28849a026771aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a333b91e5b252eba2d3dee10454c386582bf75ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a333b91e5b252eba2d3dee10454c386582bf75ba", "html_url": "https://github.com/rust-lang/rust/commit/a333b91e5b252eba2d3dee10454c386582bf75ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a333b91e5b252eba2d3dee10454c386582bf75ba/comments", "author": {"login": "AGSaidi", "id": 10063075, "node_id": "MDQ6VXNlcjEwMDYzMDc1", "avatar_url": "https://avatars.githubusercontent.com/u/10063075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AGSaidi", "html_url": "https://github.com/AGSaidi", "followers_url": "https://api.github.com/users/AGSaidi/followers", "following_url": "https://api.github.com/users/AGSaidi/following{/other_user}", "gists_url": "https://api.github.com/users/AGSaidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/AGSaidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AGSaidi/subscriptions", "organizations_url": "https://api.github.com/users/AGSaidi/orgs", "repos_url": "https://api.github.com/users/AGSaidi/repos", "events_url": "https://api.github.com/users/AGSaidi/events{/privacy}", "received_events_url": "https://api.github.com/users/AGSaidi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AGSaidi", "id": 10063075, "node_id": "MDQ6VXNlcjEwMDYzMDc1", "avatar_url": "https://avatars.githubusercontent.com/u/10063075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AGSaidi", "html_url": "https://github.com/AGSaidi", "followers_url": "https://api.github.com/users/AGSaidi/followers", "following_url": "https://api.github.com/users/AGSaidi/following{/other_user}", "gists_url": "https://api.github.com/users/AGSaidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/AGSaidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AGSaidi/subscriptions", "organizations_url": "https://api.github.com/users/AGSaidi/orgs", "repos_url": "https://api.github.com/users/AGSaidi/repos", "events_url": "https://api.github.com/users/AGSaidi/events{/privacy}", "received_events_url": "https://api.github.com/users/AGSaidi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72a51c39c69256c8a8256e775f2764a1983048d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/72a51c39c69256c8a8256e775f2764a1983048d4", "html_url": "https://github.com/rust-lang/rust/commit/72a51c39c69256c8a8256e775f2764a1983048d4"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "824283ef6c41eea84ca6543844632bc3ff4138ee", "filename": "library/std/src/sys/unix/time.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a333b91e5b252eba2d3dee10454c386582bf75ba/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a333b91e5b252eba2d3dee10454c386582bf75ba/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs?ref=a333b91e5b252eba2d3dee10454c386582bf75ba", "patch": "@@ -303,6 +303,7 @@ mod inner {\n         pub fn actually_monotonic() -> bool {\n             (cfg!(target_os = \"linux\") && cfg!(target_arch = \"x86_64\"))\n                 || (cfg!(target_os = \"linux\") && cfg!(target_arch = \"x86\"))\n+                || (cfg!(target_os = \"linux\") && cfg!(target_arch = \"aarch64\"))\n                 || cfg!(target_os = \"fuchsia\")\n         }\n "}, {"sha": "5e2ce6d3f463b415e85852ed7245a9011245cf11", "filename": "library/std/src/time.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a333b91e5b252eba2d3dee10454c386582bf75ba/library%2Fstd%2Fsrc%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a333b91e5b252eba2d3dee10454c386582bf75ba/library%2Fstd%2Fsrc%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ftime.rs?ref=a333b91e5b252eba2d3dee10454c386582bf75ba", "patch": "@@ -263,6 +263,20 @@ impl Instant {\n         //\n         // To hopefully mitigate the impact of this, a few platforms are\n         // excluded as \"these at least haven't gone backwards yet\".\n+        //\n+        // While issues have been seen on arm64 platforms the Arm architecture\n+        // requires that the counter monotonically increases and that it must\n+        // provide a uniform view of system time (e.g. it must not be possible\n+        // for a core to recieve a message from another core with a time stamp\n+        // and observe time going backwards (ARM DDI 0487G.b D11.1.2). While\n+        // there have been a few 64bit SoCs that have bugs which cause time to\n+        // not monoticially increase, these have been fixed in the Linux kernel\n+        // and we shouldn't penalize all Arm SoCs for those who refuse to\n+        // update their kernels:\n+        // SUN50I_ERRATUM_UNKNOWN1 - Allwinner A64 / Pine A64 - fixed in 5.1\n+        // FSL_ERRATUM_A008585 - Freescale LS2080A/LS1043A - fixed in 4.10\n+        // HISILICON_ERRATUM_161010101 - Hisilicon 1610 - fixed in 4.11\n+        // ARM64_ERRATUM_858921 - Cortex A73 - fixed in 4.12\n         if time::Instant::actually_monotonic() {\n             return Instant(os_now);\n         }"}]}