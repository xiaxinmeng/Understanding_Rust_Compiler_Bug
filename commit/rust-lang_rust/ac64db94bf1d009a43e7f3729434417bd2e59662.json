{"sha": "ac64db94bf1d009a43e7f3729434417bd2e59662", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNjRkYjk0YmYxZDAwOWE0M2U3ZjM3Mjk0MzQ0MTdiZDJlNTk2NjI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-22T23:59:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-25T05:22:26Z"}, "message": "std: Add Vec.reserve for rounding-up reservation.\n\n`.reserve_exact` can cause pathological O(n^2) behaviour, so providing a\n`.reserve` that ensures that capacity doubles (if you step 1, 2, ..., n)\nis more efficient.\n\ncc #11949", "tree": {"sha": "ac7da9aa0358f1abd2457046097e68d61c3edb8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac7da9aa0358f1abd2457046097e68d61c3edb8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac64db94bf1d009a43e7f3729434417bd2e59662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac64db94bf1d009a43e7f3729434417bd2e59662", "html_url": "https://github.com/rust-lang/rust/commit/ac64db94bf1d009a43e7f3729434417bd2e59662", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac64db94bf1d009a43e7f3729434417bd2e59662/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16e635cdfbb6b041886d1bccd28fa5e7e34c9f47", "url": "https://api.github.com/repos/rust-lang/rust/commits/16e635cdfbb6b041886d1bccd28fa5e7e34c9f47", "html_url": "https://github.com/rust-lang/rust/commit/16e635cdfbb6b041886d1bccd28fa5e7e34c9f47"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "52d3405f8c1480f1eec2165350fb774c5c5b2a45", "filename": "src/libstd/vec_ng.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac64db94bf1d009a43e7f3729434417bd2e59662/src%2Flibstd%2Fvec_ng.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac64db94bf1d009a43e7f3729434417bd2e59662/src%2Flibstd%2Fvec_ng.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec_ng.rs?ref=ac64db94bf1d009a43e7f3729434417bd2e59662", "patch": "@@ -18,6 +18,7 @@ use container::Container;\n use iter::{DoubleEndedIterator, FromIterator, Iterator};\n use libc::{free, c_void};\n use mem::{size_of, move_val_init};\n+use num;\n use num::CheckedMul;\n use ops::Drop;\n use option::{None, Option, Some};\n@@ -136,6 +137,12 @@ impl<T> Vec<T> {\n         self.cap\n     }\n \n+    pub fn reserve(&mut self, capacity: uint) {\n+        if capacity >= self.len {\n+            self.reserve_exact(num::next_power_of_two(capacity))\n+        }\n+    }\n+\n     pub fn reserve_exact(&mut self, capacity: uint) {\n         if capacity >= self.len {\n             let size = capacity.checked_mul(&size_of::<T>()).expect(\"capacity overflow\");\n@@ -296,7 +303,7 @@ impl<T> Vec<T> {\n         let len = self.len();\n         assert!(index <= len);\n         // space for the new element\n-        self.reserve_exact(len + 1);\n+        self.reserve(len + 1);\n \n         unsafe { // infallible\n             // The spot to put the new value"}]}