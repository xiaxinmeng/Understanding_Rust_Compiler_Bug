{"sha": "aaf4176f0f7b072487d8f6ca4720d6da6315b23f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZjQxNzZmMGY3YjA3MjQ4N2Q4ZjZjYTQ3MjBkNmRhNjMxNWIyM2Y=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-12T17:34:04Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T15:25:28Z"}, "message": "Fallout: Port slice to use `PhantomData` instead of `ContravariantLifetime`", "tree": {"sha": "c8dd31623c21cf834437552bd3bb7de528765f90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8dd31623c21cf834437552bd3bb7de528765f90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaf4176f0f7b072487d8f6ca4720d6da6315b23f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaf4176f0f7b072487d8f6ca4720d6da6315b23f", "html_url": "https://github.com/rust-lang/rust/commit/aaf4176f0f7b072487d8f6ca4720d6da6315b23f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaf4176f0f7b072487d8f6ca4720d6da6315b23f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60f507be45f7ae8f5ff119316def0ccb3735a479", "url": "https://api.github.com/repos/rust-lang/rust/commits/60f507be45f7ae8f5ff119316def0ccb3735a479", "html_url": "https://github.com/rust-lang/rust/commit/60f507be45f7ae8f5ff119316def0ccb3735a479"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a86da53b372a9bfc2b14969f445fc7ad1be40465", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aaf4176f0f7b072487d8f6ca4720d6da6315b23f/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaf4176f0f7b072487d8f6ca4720d6da6315b23f/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=aaf4176f0f7b072487d8f6ca4720d6da6315b23f", "patch": "@@ -140,11 +140,11 @@ impl<T> SliceExt for [T] {\n             if mem::size_of::<T>() == 0 {\n                 Iter {ptr: p,\n                       end: (p as usize + self.len()) as *const T,\n-                      marker: marker::ContravariantLifetime::<'a>}\n+                      _marker: marker::PhantomData}\n             } else {\n                 Iter {ptr: p,\n                       end: p.offset(self.len() as isize),\n-                      marker: marker::ContravariantLifetime::<'a>}\n+                      _marker: marker::PhantomData}\n             }\n         }\n     }\n@@ -279,11 +279,11 @@ impl<T> SliceExt for [T] {\n             if mem::size_of::<T>() == 0 {\n                 IterMut {ptr: p,\n                          end: (p as usize + self.len()) as *mut T,\n-                         marker: marker::ContravariantLifetime::<'a>}\n+                         _marker: marker::PhantomData}\n             } else {\n                 IterMut {ptr: p,\n                          end: p.offset(self.len() as isize),\n-                         marker: marker::ContravariantLifetime::<'a>}\n+                         _marker: marker::PhantomData}\n             }\n         }\n     }\n@@ -733,7 +733,7 @@ macro_rules! make_slice {\n pub struct Iter<'a, T: 'a> {\n     ptr: *const T,\n     end: *const T,\n-    marker: marker::ContravariantLifetime<'a>\n+    _marker: marker::PhantomData<&'a T>,\n }\n \n #[unstable(feature = \"core\")]\n@@ -790,7 +790,7 @@ impl<'a, T> ExactSizeIterator for Iter<'a, T> {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> Clone for Iter<'a, T> {\n-    fn clone(&self) -> Iter<'a, T> { Iter { ptr: self.ptr, end: self.end, marker: self.marker } }\n+    fn clone(&self) -> Iter<'a, T> { Iter { ptr: self.ptr, end: self.end, _marker: self._marker } }\n }\n \n #[unstable(feature = \"core\", reason = \"trait is experimental\")]\n@@ -823,7 +823,7 @@ impl<'a, T> RandomAccessIterator for Iter<'a, T> {\n pub struct IterMut<'a, T: 'a> {\n     ptr: *mut T,\n     end: *mut T,\n-    marker: marker::ContravariantLifetime<'a>,\n+    _marker: marker::PhantomData<&'a mut T>,\n }\n \n "}]}