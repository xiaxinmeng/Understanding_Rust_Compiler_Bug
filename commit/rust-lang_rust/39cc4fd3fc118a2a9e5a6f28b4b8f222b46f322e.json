{"sha": "39cc4fd3fc118a2a9e5a6f28b4b8f222b46f322e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5Y2M0ZmQzZmMxMThhMmE5ZTVhNmYyOGI0YjhmMjIyYjQ2ZjMyMmU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-11T12:24:05Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-11T12:24:05Z"}, "message": "Don't translate intrinsic func operand", "tree": {"sha": "ac6609ada8377f803924f6b1a831cbec0ff606c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac6609ada8377f803924f6b1a831cbec0ff606c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39cc4fd3fc118a2a9e5a6f28b4b8f222b46f322e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39cc4fd3fc118a2a9e5a6f28b4b8f222b46f322e", "html_url": "https://github.com/rust-lang/rust/commit/39cc4fd3fc118a2a9e5a6f28b4b8f222b46f322e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39cc4fd3fc118a2a9e5a6f28b4b8f222b46f322e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5a5aec022df4c9a09c9a68a107af64bf8834e3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5a5aec022df4c9a09c9a68a107af64bf8834e3e", "html_url": "https://github.com/rust-lang/rust/commit/d5a5aec022df4c9a09c9a68a107af64bf8834e3e"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "6eae368eced1cf22f5c4faa60d42300ed9fc4e55", "filename": "src/abi.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/39cc4fd3fc118a2a9e5a6f28b4b8f222b46f322e/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cc4fd3fc118a2a9e5a6f28b4b8f222b46f322e/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=39cc4fd3fc118a2a9e5a6f28b4b8f222b46f322e", "patch": "@@ -421,8 +421,7 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n     args: &[Operand<'tcx>],\n     destination: &Option<(Place<'tcx>, BasicBlock)>,\n ) {\n-    let func = trans_operand(fx, func);\n-    let fn_ty = func.layout().ty;\n+    let fn_ty = fx.monomorphize(&func.ty(&fx.mir.local_decls, fx.tcx));\n     let sig = ty_fn_sig(fx.tcx, fn_ty);\n \n     // Unpack arguments tuple for closures\n@@ -483,7 +482,7 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n             }\n         })).collect::<Vec<_>>();\n \n-    let inst = match func {\n+    let inst = match trans_operand(fx, func) {\n         CValue::Func(func, _) => fx.bcx.ins().call(func, &call_args),\n         func => {\n             let func = func.load_value(fx);\n@@ -538,7 +537,6 @@ fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n             let ret = match destination {\n                 Some((place, _)) => place,\n                 None => {\n-                    println!(\"codegen_call(fx, _, {:?}, {:?})\", args, destination);\n                     // Insert non returning intrinsics here\n                     match intrinsic {\n                         \"abort\" => {"}]}