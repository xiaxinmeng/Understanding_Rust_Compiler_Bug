{"sha": "373789b059324adef491bcabfff316c734522e78", "node_id": "C_kwDOAAsO6NoAKDM3Mzc4OWIwNTkzMjRhZGVmNDkxYmNhYmZmZjMxNmM3MzQ1MjJlNzg", "commit": {"author": {"name": "Nikita Popov", "email": "npopov@redhat.com", "date": "2022-02-21T10:11:48Z"}, "committer": {"name": "Nikita Popov", "email": "npopov@redhat.com", "date": "2022-05-25T15:28:58Z"}, "message": "Don't use global initializer if type does not match\n\nThis was relying on the presence of a bitcast to avoid using the\nconstant global initializer for a load using a different type.\nWith opaque pointers, we need to check this explicitly.", "tree": {"sha": "02fd43b76ca02fb4fa9030c0b1face59d6581fd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02fd43b76ca02fb4fa9030c0b1face59d6581fd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/373789b059324adef491bcabfff316c734522e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/373789b059324adef491bcabfff316c734522e78", "html_url": "https://github.com/rust-lang/rust/commit/373789b059324adef491bcabfff316c734522e78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/373789b059324adef491bcabfff316c734522e78/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2eba058e6e1c698723e47074561a30b50b5fa7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2eba058e6e1c698723e47074561a30b50b5fa7a", "html_url": "https://github.com/rust-lang/rust/commit/b2eba058e6e1c698723e47074561a30b50b5fa7a"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "c41a41980eb0b5e927e8db244134dfe8f126933c", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/373789b059324adef491bcabfff316c734522e78/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373789b059324adef491bcabfff316c734522e78/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=373789b059324adef491bcabfff316c734522e78", "patch": "@@ -509,15 +509,20 @@ impl<'a, 'll, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n             OperandValue::Ref(place.llval, Some(llextra), place.align)\n         } else if place.layout.is_llvm_immediate() {\n             let mut const_llval = None;\n+            let llty = place.layout.llvm_type(self);\n             unsafe {\n                 if let Some(global) = llvm::LLVMIsAGlobalVariable(place.llval) {\n                     if llvm::LLVMIsGlobalConstant(global) == llvm::True {\n-                        const_llval = llvm::LLVMGetInitializer(global);\n+                        if let Some(init) = llvm::LLVMGetInitializer(global) {\n+                            if self.val_ty(init) == llty {\n+                                const_llval = Some(init);\n+                            }\n+                        }\n                     }\n                 }\n             }\n             let llval = const_llval.unwrap_or_else(|| {\n-                let load = self.load(place.layout.llvm_type(self), place.llval, place.align);\n+                let load = self.load(llty, place.llval, place.align);\n                 if let abi::Abi::Scalar(scalar) = place.layout.abi {\n                     scalar_load_metadata(self, load, scalar, place.layout, Size::ZERO);\n                 }"}]}