{"sha": "dbf49102aac1515bd56c996fdfcfa20f7ee977ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZjQ5MTAyYWFjMTUxNWJkNTZjOTk2ZmRmY2ZhMjBmN2VlOTc3ZWE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-05-09T01:33:04Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-05-12T04:51:31Z"}, "message": "Update stderr\n\nThe spans generated by `quote!` are (intentionally) no longer all the\nsame, so I removed that check entirely.", "tree": {"sha": "e1021f8dd9d46623dc2f12e678a0fc16134570a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1021f8dd9d46623dc2f12e678a0fc16134570a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbf49102aac1515bd56c996fdfcfa20f7ee977ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmCbXtMACgkQtAh+UQ6Y\nsWSBhA/+Ibk2T4GYAle6yA7o8QzC6kVV1GQXGzDU2AgNMC0M2CnQK3o2Kk7Qn7Gx\nw1pIj/txRMf+dOhYM4E1ZvMLEP4Ie/Z9YdtgIdO5+mm3qMptilo7/98ULOPWW38t\n56wory9YOVZPPHvB3NCkeE82I7wqrwCyd+hnPuGrGt5DqLpY6/M0a4egvZvjzC7/\nLe3Fes+1FIGPXwsGQnj+stAQ9n2A9LmE6qFVTlj1E0sUwEggSjI6gPs/h8yn6dls\nCvAtIYO/X1EWn2qqbmEf0AjZAfAPJG1up3IlkEviRe4bXhUM+ELOzLKCpawbgmCV\ngGJTdoyiI/LDGSNTSYimqkSojUg7qfzTcDVFyo1KsH/dzEIjbHePKyqw7HNBKwG6\nJXM694WiiQd6vDOln1wCIObvSvU9UO8E4IETxIJgGw1smFbLwac0lzk0N8trJWtn\nZiGU/399ZrYfEKu8Jj6yWdz9xygK52WTvOc+jL8HHTSc97hcnwqDc3f+84RkIAyW\nRoiwT9G/H8i9sBWPs0bek6O0vhX/aMUPCcMuCq+7DyeCvAHqlnUUHKN0pNqWiAWz\nVwi912l+bVwyEV8+ZeyzzEj859UZ+rxFRmtgVjembONZnkEWdkVwZ2LmSJjZVH7a\nEAEreHq9A2oGdtyRjbwJlzEbr7MvSDajr7MyUQgdeteXmPFytWk=\n=prkU\n-----END PGP SIGNATURE-----", "payload": "tree e1021f8dd9d46623dc2f12e678a0fc16134570a3\nparent f916b0474a0443c8ce9915efb59b7465b42e03f8\nauthor Aaron Hill <aa1ronham@gmail.com> 1620523984 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1620795091 -0400\n\nUpdate stderr\n\nThe spans generated by `quote!` are (intentionally) no longer all the\nsame, so I removed that check entirely.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf49102aac1515bd56c996fdfcfa20f7ee977ea", "html_url": "https://github.com/rust-lang/rust/commit/dbf49102aac1515bd56c996fdfcfa20f7ee977ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbf49102aac1515bd56c996fdfcfa20f7ee977ea/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f916b0474a0443c8ce9915efb59b7465b42e03f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f916b0474a0443c8ce9915efb59b7465b42e03f8", "html_url": "https://github.com/rust-lang/rust/commit/f916b0474a0443c8ce9915efb59b7465b42e03f8"}], "stats": {"total": 33, "additions": 9, "deletions": 24}, "files": [{"sha": "e3445a4b80f7b00564a98746ccd9330a0e839ff9", "filename": "src/test/ui/hygiene/unpretty-debug.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbf49102aac1515bd56c996fdfcfa20f7ee977ea/src%2Ftest%2Fui%2Fhygiene%2Funpretty-debug.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/dbf49102aac1515bd56c996fdfcfa20f7ee977ea/src%2Ftest%2Fui%2Fhygiene%2Funpretty-debug.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Funpretty-debug.stdout?ref=dbf49102aac1515bd56c996fdfcfa20f7ee977ea", "patch": "@@ -20,7 +20,7 @@ fn y /* 0#0 */() { }\n /*\n Expansions:\n 0: parent: ExpnId(0), call_site_ctxt: #0, def_site_ctxt: #0, kind: Root\n-1: parent: ExpnId(0), call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"foo\")\n+1: parent: ExpnId(0), call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro { kind: Bang, name: \"foo\", proc_macro: false }\n \n SyntaxContexts:\n #0: parent: #0, outer_mark: (ExpnId(0), Opaque)"}, {"sha": "1331480d835a495c12eabc399288357f984ee6df", "filename": "src/test/ui/macros/auxiliary/proc_macro_sequence.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/dbf49102aac1515bd56c996fdfcfa20f7ee977ea/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fproc_macro_sequence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf49102aac1515bd56c996fdfcfa20f7ee977ea/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fproc_macro_sequence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fproc_macro_sequence.rs?ref=dbf49102aac1515bd56c996fdfcfa20f7ee977ea", "patch": "@@ -23,24 +23,5 @@ pub fn make_foo(_: TokenStream) -> TokenStream {\n         }\n     };\n \n-    // Check that all spans are equal.\n-    // FIXME: `quote!` gives def-site spans to idents and literals,\n-    // but leaves (default) call-site spans on groups and punctuation.\n-    let mut span_call = None;\n-    let mut span_def = None;\n-    for tt in result.clone() {\n-        match tt {\n-            TokenTree::Ident(..) | TokenTree::Literal(..) => match span_def {\n-                None => span_def = Some(tt.span()),\n-                Some(span) => assert_same_span(tt.span(), span),\n-            }\n-            TokenTree::Punct(..) | TokenTree::Group(..) => match span_call {\n-                None => span_call = Some(tt.span()),\n-                Some(span) => assert_same_span(tt.span(), span),\n-            }\n-        }\n-\n-    }\n-\n     result\n }"}, {"sha": "911775eb4176c44e0d83dd6d060a3018faa6739a", "filename": "src/test/ui/macros/same-sequence-span.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dbf49102aac1515bd56c996fdfcfa20f7ee977ea/src%2Ftest%2Fui%2Fmacros%2Fsame-sequence-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dbf49102aac1515bd56c996fdfcfa20f7ee977ea/src%2Ftest%2Fui%2Fmacros%2Fsame-sequence-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fsame-sequence-span.stderr?ref=dbf49102aac1515bd56c996fdfcfa20f7ee977ea", "patch": "@@ -17,11 +17,15 @@ LL |                $(= $z:tt)*\n error: `$x:expr` may be followed by `$y:tt`, which is not allowed for `expr` fragments\n   --> $DIR/same-sequence-span.rs:19:1\n    |\n-LL | proc_macro_sequence::make_foo!();\n-   | ---------------------------------^^^^^^^^^^^^^\n+LL |   proc_macro_sequence::make_foo!();\n+   |   ^--------------------------------\n+   |   |\n+   |  _in this macro invocation\n    | |\n-   | not allowed after `expr` fragments\n-   | in this macro invocation\n+LL | |\n+LL | |\n+LL | | fn main() {}\n+   | |_________________________________^ not allowed after `expr` fragments\n    |\n    = note: allowed there are: `=>`, `,` or `;`\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)"}]}