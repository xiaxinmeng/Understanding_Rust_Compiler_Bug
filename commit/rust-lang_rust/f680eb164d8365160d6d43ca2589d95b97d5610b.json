{"sha": "f680eb164d8365160d6d43ca2589d95b97d5610b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ODBlYjE2NGQ4MzY1MTYwZDZkNDNjYTI1ODlkOTViOTdkNTYxMGI=", "commit": {"author": {"name": "Chris Emerson", "email": "github@mail.nosreme.org", "date": "2017-09-18T19:07:33Z"}, "committer": {"name": "Chris Emerson", "email": "github@mail.nosreme.org", "date": "2017-09-18T19:07:33Z"}, "message": "Update unnecessary_operation and no_effect to not suggest removing\nstructs/enums wrappers when that type implements Drop as noted\nin #2061.", "tree": {"sha": "5f6964e10cbbfc1b97ed3dcf478972c39c89194f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f6964e10cbbfc1b97ed3dcf478972c39c89194f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f680eb164d8365160d6d43ca2589d95b97d5610b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f680eb164d8365160d6d43ca2589d95b97d5610b", "html_url": "https://github.com/rust-lang/rust/commit/f680eb164d8365160d6d43ca2589d95b97d5610b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f680eb164d8365160d6d43ca2589d95b97d5610b/comments", "author": {"login": "jugglerchris", "id": 1644842, "node_id": "MDQ6VXNlcjE2NDQ4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1644842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugglerchris", "html_url": "https://github.com/jugglerchris", "followers_url": "https://api.github.com/users/jugglerchris/followers", "following_url": "https://api.github.com/users/jugglerchris/following{/other_user}", "gists_url": "https://api.github.com/users/jugglerchris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugglerchris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugglerchris/subscriptions", "organizations_url": "https://api.github.com/users/jugglerchris/orgs", "repos_url": "https://api.github.com/users/jugglerchris/repos", "events_url": "https://api.github.com/users/jugglerchris/events{/privacy}", "received_events_url": "https://api.github.com/users/jugglerchris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jugglerchris", "id": 1644842, "node_id": "MDQ6VXNlcjE2NDQ4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1644842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugglerchris", "html_url": "https://github.com/jugglerchris", "followers_url": "https://api.github.com/users/jugglerchris/followers", "following_url": "https://api.github.com/users/jugglerchris/following{/other_user}", "gists_url": "https://api.github.com/users/jugglerchris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugglerchris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugglerchris/subscriptions", "organizations_url": "https://api.github.com/users/jugglerchris/orgs", "repos_url": "https://api.github.com/users/jugglerchris/repos", "events_url": "https://api.github.com/users/jugglerchris/events{/privacy}", "received_events_url": "https://api.github.com/users/jugglerchris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bb8efdb4dc911f6cf0d5da9c08c672b894e88c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bb8efdb4dc911f6cf0d5da9c08c672b894e88c5", "html_url": "https://github.com/rust-lang/rust/commit/2bb8efdb4dc911f6cf0d5da9c08c672b894e88c5"}], "stats": {"total": 294, "additions": 172, "deletions": 122}, "files": [{"sha": "230c811935cc02d3d0fc6d5434136dd1dc894549", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/f680eb164d8365160d6d43ca2589d95b97d5610b/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f680eb164d8365160d6d43ca2589d95b97d5610b/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=f680eb164d8365160d6d43ca2589d95b97d5610b", "patch": "@@ -40,12 +40,22 @@ declare_lint! {\n     \"outer expressions with no effect\"\n }\n \n+/// Check whether this type implements Drop.\n+fn has_drop(cx: &LateContext, expr: &Expr) -> bool {\n+    let struct_ty = cx.tables.expr_ty(expr);\n+    match struct_ty.ty_adt_def() {\n+        Some(def) => def.has_dtor(cx.tcx),\n+        _ => false,\n+    }\n+}\n+\n fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n     if in_macro(expr.span) {\n         return false;\n     }\n     match expr.node {\n-        Expr_::ExprLit(..) | Expr_::ExprClosure(.., _) | Expr_::ExprPath(..) => true,\n+        Expr_::ExprLit(..) | Expr_::ExprClosure(.., _) => true,\n+        Expr_::ExprPath(..) => !has_drop(cx, expr),\n         Expr_::ExprIndex(ref a, ref b) | Expr_::ExprBinary(_, ref a, ref b) => {\n             has_no_effect(cx, a) && has_no_effect(cx, b)\n         },\n@@ -59,7 +69,7 @@ fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n         Expr_::ExprAddrOf(_, ref inner) |\n         Expr_::ExprBox(ref inner) => has_no_effect(cx, inner),\n         Expr_::ExprStruct(_, ref fields, ref base) => {\n-            fields.iter().all(|field| has_no_effect(cx, &field.expr)) && match *base {\n+            !has_drop(cx, expr) && fields.iter().all(|field| has_no_effect(cx, &field.expr)) && match *base {\n                 Some(ref base) => has_no_effect(cx, base),\n                 None => true,\n             }\n@@ -68,7 +78,7 @@ fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n             let def = cx.tables.qpath_def(qpath, callee.hir_id);\n             match def {\n                 Def::Struct(..) | Def::Variant(..) | Def::StructCtor(..) | Def::VariantCtor(..) => {\n-                    args.iter().all(|arg| has_no_effect(cx, arg))\n+                    !has_drop(cx, expr) && args.iter().all(|arg| has_no_effect(cx, arg))\n                 },\n                 _ => false,\n             }\n@@ -145,18 +155,23 @@ fn reduce_expression<'a>(cx: &LateContext, expr: &'a Expr) -> Option<Vec<&'a Exp\n         Expr_::ExprTupField(ref inner, _) |\n         Expr_::ExprAddrOf(_, ref inner) |\n         Expr_::ExprBox(ref inner) => reduce_expression(cx, inner).or_else(|| Some(vec![inner])),\n-        Expr_::ExprStruct(_, ref fields, ref base) => Some(\n-            fields\n-                .iter()\n-                .map(|f| &f.expr)\n-                .chain(base)\n-                .map(Deref::deref)\n-                .collect(),\n-        ),\n+        Expr_::ExprStruct(_, ref fields, ref base) => {\n+            if has_drop(cx, expr) {\n+                None\n+            } else {\n+                Some(\n+                    fields\n+                        .iter()\n+                        .map(|f| &f.expr)\n+                        .chain(base)\n+                        .map(Deref::deref)\n+                        .collect())\n+            }\n+        },\n         Expr_::ExprCall(ref callee, ref args) => if let Expr_::ExprPath(ref qpath) = callee.node {\n             let def = cx.tables.qpath_def(qpath, callee.hir_id);\n             match def {\n-                Def::Struct(..) | Def::Variant(..) | Def::StructCtor(..) | Def::VariantCtor(..) => {\n+                Def::Struct(..) | Def::Variant(..) | Def::StructCtor(..) | Def::VariantCtor(..) if !has_drop(cx, expr) => {\n                     Some(args.iter().collect())\n                 },\n                 _ => None,"}, {"sha": "4062b36883a0a18e093fa9d173678ec2a4209aeb", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f680eb164d8365160d6d43ca2589d95b97d5610b/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f680eb164d8365160d6d43ca2589d95b97d5610b/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=f680eb164d8365160d6d43ca2589d95b97d5610b", "patch": "@@ -16,6 +16,27 @@ enum Enum {\n     Tuple(i32),\n     Struct { field: i32 },\n }\n+struct DropUnit;\n+impl Drop for DropUnit {\n+    fn drop(&mut self) {}\n+}\n+struct DropStruct {\n+    field: i32\n+}\n+impl Drop for DropStruct {\n+    fn drop(&mut self) {}\n+}\n+struct DropTuple(i32);\n+impl Drop for DropTuple {\n+    fn drop(&mut self) {}\n+}\n+enum DropEnum {\n+    Tuple(i32),\n+    Struct { field: i32 },\n+}\n+impl Drop for DropEnum {\n+    fn drop(&mut self) {}\n+}\n \n union Union {\n     a: u8,\n@@ -24,6 +45,7 @@ union Union {\n \n fn get_number() -> i32 { 0 }\n fn get_struct() -> Struct { Struct { field: 0 } }\n+fn get_drop_struct() -> DropStruct { DropStruct { field: 0 } }\n \n unsafe fn unsafe_fn() -> i32 { 0 }\n \n@@ -61,6 +83,11 @@ fn main() {\n     // Do not warn\n     get_number();\n     unsafe { unsafe_fn() };\n+    DropUnit;\n+    DropStruct { field: 0 };\n+    DropTuple(0);\n+    DropEnum::Tuple(0);\n+    DropEnum::Struct { field: 0 };\n \n     Tuple(get_number());\n     Struct { field: get_number() };\n@@ -81,4 +108,12 @@ fn main() {\n     [get_number(); 55];\n     [42; 55][get_number() as usize];\n     {get_number()};\n+\n+    // Do not warn\n+    DropTuple(get_number());\n+    DropStruct { field: get_number() };\n+    DropStruct { field: get_number() };\n+    DropStruct { ..get_drop_struct() };\n+    DropEnum::Tuple(get_number());\n+    DropEnum::Struct { field: get_number() };\n }"}, {"sha": "c7c334546ffba33501fb6308e5f45bb7cd9c3e00", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 110, "deletions": 110, "changes": 220, "blob_url": "https://github.com/rust-lang/rust/blob/f680eb164d8365160d6d43ca2589d95b97d5610b/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f680eb164d8365160d6d43ca2589d95b97d5610b/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=f680eb164d8365160d6d43ca2589d95b97d5610b", "patch": "@@ -1,270 +1,270 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:34:5\n+  --> $DIR/no_effect.rs:56:5\n    |\n-34 |     0;\n+56 |     0;\n    |     ^^\n    |\n    = note: `-D no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:35:5\n+  --> $DIR/no_effect.rs:57:5\n    |\n-35 |     s2;\n+57 |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:36:5\n+  --> $DIR/no_effect.rs:58:5\n    |\n-36 |     Unit;\n+58 |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:37:5\n+  --> $DIR/no_effect.rs:59:5\n    |\n-37 |     Tuple(0);\n+59 |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:38:5\n+  --> $DIR/no_effect.rs:60:5\n    |\n-38 |     Struct { field: 0 };\n+60 |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:39:5\n+  --> $DIR/no_effect.rs:61:5\n    |\n-39 |     Struct { ..s };\n+61 |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:40:5\n+  --> $DIR/no_effect.rs:62:5\n    |\n-40 |     Union { a: 0 };\n+62 |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:41:5\n+  --> $DIR/no_effect.rs:63:5\n    |\n-41 |     Enum::Tuple(0);\n+63 |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:42:5\n+  --> $DIR/no_effect.rs:64:5\n    |\n-42 |     Enum::Struct { field: 0 };\n+64 |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:43:5\n+  --> $DIR/no_effect.rs:65:5\n    |\n-43 |     5 + 6;\n+65 |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:44:5\n+  --> $DIR/no_effect.rs:66:5\n    |\n-44 |     *&42;\n+66 |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:45:5\n+  --> $DIR/no_effect.rs:67:5\n    |\n-45 |     &6;\n+67 |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:46:5\n+  --> $DIR/no_effect.rs:68:5\n    |\n-46 |     (5, 6, 7);\n+68 |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:47:5\n+  --> $DIR/no_effect.rs:69:5\n    |\n-47 |     box 42;\n+69 |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:48:5\n+  --> $DIR/no_effect.rs:70:5\n    |\n-48 |     ..;\n+70 |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:49:5\n+  --> $DIR/no_effect.rs:71:5\n    |\n-49 |     5..;\n+71 |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:50:5\n+  --> $DIR/no_effect.rs:72:5\n    |\n-50 |     ..5;\n+72 |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:51:5\n+  --> $DIR/no_effect.rs:73:5\n    |\n-51 |     5..6;\n+73 |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:52:5\n+  --> $DIR/no_effect.rs:74:5\n    |\n-52 |     5...6;\n+74 |     5...6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:53:5\n+  --> $DIR/no_effect.rs:75:5\n    |\n-53 |     [42, 55];\n+75 |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:54:5\n+  --> $DIR/no_effect.rs:76:5\n    |\n-54 |     [42, 55][1];\n+76 |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:55:5\n+  --> $DIR/no_effect.rs:77:5\n    |\n-55 |     (42, 55).1;\n+77 |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:56:5\n+  --> $DIR/no_effect.rs:78:5\n    |\n-56 |     [42; 55];\n+78 |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:57:5\n+  --> $DIR/no_effect.rs:79:5\n    |\n-57 |     [42; 55][13];\n+79 |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:59:5\n+  --> $DIR/no_effect.rs:81:5\n    |\n-59 |     || x += 5;\n+81 |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:65:5\n+  --> $DIR/no_effect.rs:92:5\n    |\n-65 |     Tuple(get_number());\n+92 |     Tuple(get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n    |\n    = note: `-D unnecessary-operation` implied by `-D warnings`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:66:5\n+  --> $DIR/no_effect.rs:93:5\n    |\n-66 |     Struct { field: get_number() };\n+93 |     Struct { field: get_number() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:67:5\n+  --> $DIR/no_effect.rs:94:5\n    |\n-67 |     Struct { ..get_struct() };\n+94 |     Struct { ..get_struct() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_struct();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:68:5\n+  --> $DIR/no_effect.rs:95:5\n    |\n-68 |     Enum::Tuple(get_number());\n+95 |     Enum::Tuple(get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:69:5\n+  --> $DIR/no_effect.rs:96:5\n    |\n-69 |     Enum::Struct { field: get_number() };\n+96 |     Enum::Struct { field: get_number() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:70:5\n+  --> $DIR/no_effect.rs:97:5\n    |\n-70 |     5 + get_number();\n+97 |     5 + get_number();\n    |     ^^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:71:5\n+  --> $DIR/no_effect.rs:98:5\n    |\n-71 |     *&get_number();\n+98 |     *&get_number();\n    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:72:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n-72 |     &get_number();\n+99 |     &get_number();\n    |     ^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:73:5\n-   |\n-73 |     (5, 6, get_number());\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n+   --> $DIR/no_effect.rs:100:5\n+    |\n+100 |     (5, 6, get_number());\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:74:5\n-   |\n-74 |     box get_number();\n-   |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:101:5\n+    |\n+101 |     box get_number();\n+    |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:75:5\n-   |\n-75 |     get_number()..;\n-   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:102:5\n+    |\n+102 |     get_number()..;\n+    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:76:5\n-   |\n-76 |     ..get_number();\n-   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:103:5\n+    |\n+103 |     ..get_number();\n+    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:77:5\n-   |\n-77 |     5..get_number();\n-   |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n+   --> $DIR/no_effect.rs:104:5\n+    |\n+104 |     5..get_number();\n+    |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:78:5\n-   |\n-78 |     [42, get_number()];\n-   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n+   --> $DIR/no_effect.rs:105:5\n+    |\n+105 |     [42, get_number()];\n+    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:79:5\n-   |\n-79 |     [42, 55][get_number() as usize];\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n+   --> $DIR/no_effect.rs:106:5\n+    |\n+106 |     [42, 55][get_number() as usize];\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:80:5\n-   |\n-80 |     (42, get_number()).1;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n+   --> $DIR/no_effect.rs:107:5\n+    |\n+107 |     (42, get_number()).1;\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:81:5\n-   |\n-81 |     [get_number(); 55];\n-   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:108:5\n+    |\n+108 |     [get_number(); 55];\n+    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:82:5\n-   |\n-82 |     [42; 55][get_number() as usize];\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n+   --> $DIR/no_effect.rs:109:5\n+    |\n+109 |     [42; 55][get_number() as usize];\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:83:5\n-   |\n-83 |     {get_number()};\n-   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:110:5\n+    |\n+110 |     {get_number()};\n+    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: aborting due to 44 previous errors\n "}]}