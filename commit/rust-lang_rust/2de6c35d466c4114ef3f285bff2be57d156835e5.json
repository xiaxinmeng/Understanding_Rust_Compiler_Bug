{"sha": "2de6c35d466c4114ef3f285bff2be57d156835e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZTZjMzVkNDY2YzQxMTRlZjNmMjg1YmZmMmJlNTdkMTU2ODM1ZTU=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-11-12T03:08:19Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-11-12T03:08:19Z"}, "message": "make Result::map_or_else consistent with Option::map_or_else", "tree": {"sha": "72f94c91eb7066b47ef349075af1135084a72b5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72f94c91eb7066b47ef349075af1135084a72b5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2de6c35d466c4114ef3f285bff2be57d156835e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2de6c35d466c4114ef3f285bff2be57d156835e5", "html_url": "https://github.com/rust-lang/rust/commit/2de6c35d466c4114ef3f285bff2be57d156835e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2de6c35d466c4114ef3f285bff2be57d156835e5/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e931f00f658b59481925deb0152503038ca69b9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e931f00f658b59481925deb0152503038ca69b9e", "html_url": "https://github.com/rust-lang/rust/commit/e931f00f658b59481925deb0152503038ca69b9e"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "3ac43958c059ab2db8b2cb071ef216c470fa0887", "filename": "src/libcore/result.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2de6c35d466c4114ef3f285bff2be57d156835e5/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de6c35d466c4114ef3f285bff2be57d156835e5/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=2de6c35d466c4114ef3f285bff2be57d156835e5", "patch": "@@ -540,8 +540,11 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[inline]\n     #[unstable(feature = \"result_map_or_else\", issue = \"53268\")]\n-    pub fn map_or_else<U, M: FnOnce(T) -> U, F: FnOnce(E) -> U>(self, fallback: F, map: M) -> U {\n-        self.map(map).unwrap_or_else(fallback)\n+    pub fn map_or_else<U, D: FnOnce(E) -> U, F: FnOnce(T) -> U>(self, default: D, f: F) -> U {\n+        match self {\n+            Ok(t) => f(t),\n+            Err(e) => default(e),\n+        }\n     }\n \n     /// Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a"}]}