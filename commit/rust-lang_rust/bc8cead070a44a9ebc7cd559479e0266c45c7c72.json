{"sha": "bc8cead070a44a9ebc7cd559479e0266c45c7c72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOGNlYWQwNzBhNDRhOWViYzdjZDU1OTQ3OWUwMjY2YzQ1YzdjNzI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-15T01:08:20Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-15T01:08:20Z"}, "message": "Account for warning in existing GAT tests", "tree": {"sha": "8d588e5d5b8fe1c61b65dcc4489cac5e9412fb5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d588e5d5b8fe1c61b65dcc4489cac5e9412fb5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc8cead070a44a9ebc7cd559479e0266c45c7c72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc8cead070a44a9ebc7cd559479e0266c45c7c72", "html_url": "https://github.com/rust-lang/rust/commit/bc8cead070a44a9ebc7cd559479e0266c45c7c72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc8cead070a44a9ebc7cd559479e0266c45c7c72/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d305f68cb9c0d93a30f65af0cd33acd90e3f2532", "url": "https://api.github.com/repos/rust-lang/rust/commits/d305f68cb9c0d93a30f65af0cd33acd90e3f2532", "html_url": "https://github.com/rust-lang/rust/commit/d305f68cb9c0d93a30f65af0cd33acd90e3f2532"}], "stats": {"total": 162, "additions": 115, "deletions": 47}, "files": [{"sha": "a6dbb03d379db532db316179d640a98ee089b0ab", "filename": "src/test/ui/rfc1598-generic-associated-types/collections.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.rs?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -9,10 +9,11 @@\n // except according to those terms.\n \n #![feature(generic_associated_types)]\n+//~^ WARNING the feature `generic_associated_types` is incomplete\n #![feature(associated_type_defaults)]\n \n-//FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n-//follow-up PR\n+// FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n+// follow-up PR.\n \n // A Collection trait and collection families. Based on\n // http://smallcultfollowing.com/babysteps/blog/2016/11/03/"}, {"sha": "0e7d6ace1bb1d0560a1dabffcdc871f87d1748a4", "filename": "src/test/ui/rfc1598-generic-associated-types/collections.stderr", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -1,29 +1,35 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/collections.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/collections.rs:65:90\n+  --> $DIR/collections.rs:66:90\n    |\n LL | fn floatify<C>(ints: &C) -> <<C as Collection<i32>>::Family as CollectionFamily>::Member<f32>\n    |                                                                                          ^^^ type parameter not allowed\n \n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/collections.rs:77:69\n+  --> $DIR/collections.rs:78:69\n    |\n LL | fn floatify_sibling<C>(ints: &C) -> <C as Collection<i32>>::Sibling<f32>\n    |                                                                     ^^^ type parameter not allowed\n \n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/collections.rs:26:71\n+  --> $DIR/collections.rs:27:71\n    |\n LL |         <<Self as Collection<T>>::Family as CollectionFamily>::Member<U>;\n    |                                                                       ^ type parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/collections.rs:33:50\n+  --> $DIR/collections.rs:34:50\n    |\n LL |     fn iterate<'iter>(&'iter self) -> Self::Iter<'iter>;\n    |                                                  ^^^^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/collections.rs:59:50\n+  --> $DIR/collections.rs:60:50\n    |\n LL |     fn iterate<'iter>(&'iter self) -> Self::Iter<'iter> {\n    |                                                  ^^^^^ lifetime parameter not allowed"}, {"sha": "88a660b3a5afe51d16028566a03b1423362a334a", "filename": "src/test/ui/rfc1598-generic-associated-types/construct_with_other_type.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -9,11 +9,12 @@\n // except according to those terms.\n \n #![feature(generic_associated_types)]\n+//~^ WARNING the feature `generic_associated_types` is incomplete\n \n use std::ops::Deref;\n \n-//FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n-//follow-up PR\n+// FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n+// follow-up PR.\n \n trait Foo {\n     type Bar<'a, 'b>;"}, {"sha": "5c85698fa55c702e796c282b90c61418e26aa151", "filename": "src/test/ui/rfc1598-generic-associated-types/construct_with_other_type.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -1,17 +1,23 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/construct_with_other_type.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/construct_with_other_type.rs:26:46\n+  --> $DIR/construct_with_other_type.rs:27:46\n    |\n LL |     type Baa<'a>: Deref<Target = <Self::Quux<'a> as Foo>::Bar<'a, 'static>>;\n    |                                              ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/construct_with_other_type.rs:26:63\n+  --> $DIR/construct_with_other_type.rs:27:63\n    |\n LL |     type Baa<'a>: Deref<Target = <Self::Quux<'a> as Foo>::Bar<'a, 'static>>;\n    |                                                               ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/construct_with_other_type.rs:34:40\n+  --> $DIR/construct_with_other_type.rs:35:40\n    |\n LL |     type Baa<'a> = &'a <T as Foo>::Bar<'a, 'static>;\n    |                                        ^^ lifetime parameter not allowed"}, {"sha": "d8a2a1b73f7ef084078e2728c3467c9a431114c9", "filename": "src/test/ui/rfc1598-generic-associated-types/empty_generics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(generic_associated_types)]\n+//~^ WARNING the feature `generic_associated_types` is incomplete\n \n trait Foo {\n     type Bar<,>;"}, {"sha": "2670c3aa142b204be287aa319e7a778505337c2b", "filename": "src/test/ui/rfc1598-generic-associated-types/empty_generics.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -1,8 +1,14 @@\n error: expected one of `>`, identifier, or lifetime, found `,`\n-  --> $DIR/empty_generics.rs:14:14\n+  --> $DIR/empty_generics.rs:15:14\n    |\n LL |     type Bar<,>;\n    |              ^ expected one of `>`, identifier, or lifetime here\n \n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/empty_generics.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error: aborting due to previous error\n "}, {"sha": "97d5482735f86ba3ff640e8741e0ee934379c1e3", "filename": "src/test/ui/rfc1598-generic-associated-types/generic-associated-types-where.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -0,0 +1,6 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/generic-associated-types-where.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+"}, {"sha": "267272ded8c06876777d8cb4f2ed8181ac1c70aa", "filename": "src/test/ui/rfc1598-generic-associated-types/generic_associated_type_undeclared_lifetimes.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.rs?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -9,11 +9,12 @@\n // except according to those terms.\n \n #![feature(generic_associated_types)]\n+//~^ WARNING the feature `generic_associated_types` is incomplete\n \n use std::ops::Deref;\n \n-//FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n-//follow-up PR\n+// FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n+// follow-up PR.\n \n trait Iterable {\n     type Item<'a>;"}, {"sha": "79b29902ccdf05fb2c6bf9d6025cd4fcd20c47c1", "filename": "src/test/ui/rfc1598-generic-associated-types/generic_associated_type_undeclared_lifetimes.stderr", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -1,29 +1,35 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:22:37\n+  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:23:37\n    |\n LL |         + Deref<Target = Self::Item<'b>>;\n    |                                     ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'undeclared`\n-  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:26:41\n+  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:27:41\n    |\n LL |     fn iter<'a>(&'a self) -> Self::Iter<'undeclared>;\n    |                                         ^^^^^^^^^^^ undeclared lifetime\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:20:47\n+  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:21:47\n    |\n LL |     type Iter<'a>: Iterator<Item = Self::Item<'a>>\n    |                                               ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:22:37\n+  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:23:37\n    |\n LL |         + Deref<Target = Self::Item<'b>>;\n    |                                     ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:26:41\n+  --> $DIR/generic_associated_type_undeclared_lifetimes.rs:27:41\n    |\n LL |     fn iter<'a>(&'a self) -> Self::Iter<'undeclared>;\n    |                                         ^^^^^^^^^^^ lifetime parameter not allowed"}, {"sha": "b52b6e024219a194059a82fafc80a78b594c0d88", "filename": "src/test/ui/rfc1598-generic-associated-types/iterable.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -9,11 +9,12 @@\n // except according to those terms.\n \n #![feature(generic_associated_types)]\n+//~^ WARNING the feature `generic_associated_types` is incomplete\n \n use std::ops::Deref;\n \n-//FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n-//follow-up PR\n+// FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n+// follow-up PR.\n \n trait Iterable {\n     type Item<'a>;"}, {"sha": "de3563c14eb7c44208e92020c0d3c3a7604cffef", "filename": "src/test/ui/rfc1598-generic-associated-types/iterable.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -1,35 +1,41 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/iterable.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/iterable.rs:20:47\n+  --> $DIR/iterable.rs:21:47\n    |\n LL |     type Iter<'a>: Iterator<Item = Self::Item<'a>>;\n    |                                               ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/iterable.rs:49:53\n+  --> $DIR/iterable.rs:50:53\n    |\n LL | fn make_iter<'a, I: Iterable>(it: &'a I) -> I::Iter<'a> {\n    |                                                     ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/iterable.rs:54:60\n+  --> $DIR/iterable.rs:55:60\n    |\n LL | fn get_first<'a, I: Iterable>(it: &'a I) -> Option<I::Item<'a>> {\n    |                                                            ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/iterable.rs:23:41\n+  --> $DIR/iterable.rs:24:41\n    |\n LL |     fn iter<'a>(&'a self) -> Self::Iter<'a>;\n    |                                         ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/iterable.rs:32:41\n+  --> $DIR/iterable.rs:33:41\n    |\n LL |     fn iter<'a>(&'a self) -> Self::Iter<'a> {\n    |                                         ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/iterable.rs:43:41\n+  --> $DIR/iterable.rs:44:41\n    |\n LL |     fn iter<'a>(&'a self) -> Self::Iter<'a> {\n    |                                         ^^ lifetime parameter not allowed"}, {"sha": "82e82e6dbccaf3bfd01c9d5a334b46d8fb1ee82b", "filename": "src/test/ui/rfc1598-generic-associated-types/parameter_number_and_kind.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.rs?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -9,12 +9,13 @@\n // except according to those terms.\n \n #![feature(generic_associated_types)]\n+//~^ WARNING the feature `generic_associated_types` is incomplete\n #![feature(associated_type_defaults)]\n \n-//FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n-//follow-up PR\n+// FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n+// follow-up PR.\n \n-//FIXME(#44265): Update expected errors once E110 is resolved, now does not get past `trait Foo`\n+// FIXME(#44265): Update expected errors once E110 is resolved, now does not get past `trait Foo`.\n \n trait Foo {\n     type A<'a>;"}, {"sha": "e47daf2ae1bbae0198480b1f05a18199c2e36c9f", "filename": "src/test/ui/rfc1598-generic-associated-types/parameter_number_and_kind.stderr", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -1,29 +1,35 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/parameter_number_and_kind.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/parameter_number_and_kind.rs:26:27\n+  --> $DIR/parameter_number_and_kind.rs:27:27\n    |\n LL |     type FOk<T> = Self::E<'static, T>;\n    |                           ^^^^^^^ lifetime parameter not allowed\n \n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/parameter_number_and_kind.rs:26:36\n+  --> $DIR/parameter_number_and_kind.rs:27:36\n    |\n LL |     type FOk<T> = Self::E<'static, T>;\n    |                                    ^ type parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/parameter_number_and_kind.rs:29:26\n+  --> $DIR/parameter_number_and_kind.rs:30:26\n    |\n LL |     type FErr1 = Self::E<'static, 'static>; // Error\n    |                          ^^^^^^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/parameter_number_and_kind.rs:31:29\n+  --> $DIR/parameter_number_and_kind.rs:32:29\n    |\n LL |     type FErr2<T> = Self::E<'static, T, u32>; // Error\n    |                             ^^^^^^^ lifetime parameter not allowed\n \n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/parameter_number_and_kind.rs:31:38\n+  --> $DIR/parameter_number_and_kind.rs:32:38\n    |\n LL |     type FErr2<T> = Self::E<'static, T, u32>; // Error\n    |                                      ^ type parameter not allowed"}, {"sha": "0300ad06194e76c726cbcee4574d56e9e7cc14d0", "filename": "src/test/ui/rfc1598-generic-associated-types/pointer_family.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.rs?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -9,8 +9,9 @@\n // except according to those terms.\n \n #![feature(generic_associated_types)]\n+//~^ WARNING the feature `generic_associated_types` is incomplete\n \n-//FIXME(#44265): \"type parameter not allowed\" errors will be addressed in a follow-up PR\n+// FIXME(#44265): \"type parameter not allowed\" errors will be addressed in a follow-up PR.\n \n use std::rc::Rc;\n use std::sync::Arc;"}, {"sha": "3be0481dc67e85f0d4cefdcd04455ef254faa209", "filename": "src/test/ui/rfc1598-generic-associated-types/pointer_family.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -1,23 +1,29 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/pointer_family.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/pointer_family.rs:46:21\n+  --> $DIR/pointer_family.rs:47:21\n    |\n LL |     bar: P::Pointer<String>,\n    |                     ^^^^^^ type parameter not allowed\n \n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/pointer_family.rs:21:42\n+  --> $DIR/pointer_family.rs:22:42\n    |\n LL |     fn new<T>(value: T) -> Self::Pointer<T>;\n    |                                          ^ type parameter not allowed\n \n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/pointer_family.rs:29:42\n+  --> $DIR/pointer_family.rs:30:42\n    |\n LL |     fn new<T>(value: T) -> Self::Pointer<T> {\n    |                                          ^ type parameter not allowed\n \n error[E0109]: type parameters are not allowed on this type\n-  --> $DIR/pointer_family.rs:39:42\n+  --> $DIR/pointer_family.rs:40:42\n    |\n LL |     fn new<T>(value: T) -> Self::Pointer<T> {\n    |                                          ^ type parameter not allowed"}, {"sha": "f2d626f921c89611f130f6f16da76f4305d4aef6", "filename": "src/test/ui/rfc1598-generic-associated-types/shadowing.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fshadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fshadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fshadowing.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -0,0 +1,6 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/shadowing.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+"}, {"sha": "aa90886fdfd65c6787ffebe7d051c95e1217ad60", "filename": "src/test/ui/rfc1598-generic-associated-types/streaming_iterator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -9,8 +9,9 @@\n // except according to those terms.\n \n #![feature(generic_associated_types)]\n+//~^ WARNING the feature `generic_associated_types` is incomplete\n \n-//FIXME(#44265): \"lifetime parameter not allowed on this type\" errors will be addressed in a\n+// FIXME(#44265): \"lifetime parameter not allowed on this type\" errors will be addressed in a\n // follow-up PR\n \n use std::fmt::Display;"}, {"sha": "4aca8d476877b78e53165b448978c41e246ec6c0", "filename": "src/test/ui/rfc1598-generic-associated-types/streaming_iterator.stderr", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cead070a44a9ebc7cd559479e0266c45c7c72/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr?ref=bc8cead070a44a9ebc7cd559479e0266c45c7c72", "patch": "@@ -1,29 +1,35 @@\n+warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+  --> $DIR/streaming_iterator.rs:11:12\n+   |\n+LL | #![feature(generic_associated_types)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/streaming_iterator.rs:27:41\n+  --> $DIR/streaming_iterator.rs:28:41\n    |\n LL |     bar: <T as StreamingIterator>::Item<'static>,\n    |                                         ^^^^^^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/streaming_iterator.rs:35:64\n+  --> $DIR/streaming_iterator.rs:36:64\n    |\n LL | fn foo<T>(iter: T) where T: StreamingIterator, for<'a> T::Item<'a>: Display { /* ... */ }\n    |                                                                ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/streaming_iterator.rs:21:48\n+  --> $DIR/streaming_iterator.rs:22:48\n    |\n LL |     fn next<'a>(&'a self) -> Option<Self::Item<'a>>;\n    |                                                ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/streaming_iterator.rs:47:37\n+  --> $DIR/streaming_iterator.rs:48:37\n    |\n LL |     type Item<'a> = (usize, I::Item<'a>);\n    |                                     ^^ lifetime parameter not allowed\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/streaming_iterator.rs:49:48\n+  --> $DIR/streaming_iterator.rs:50:48\n    |\n LL |     fn next<'a>(&'a self) -> Option<Self::Item<'a>> {\n    |                                                ^^ lifetime parameter not allowed"}]}