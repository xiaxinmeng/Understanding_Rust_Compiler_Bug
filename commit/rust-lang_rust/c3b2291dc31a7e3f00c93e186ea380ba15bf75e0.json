{"sha": "c3b2291dc31a7e3f00c93e186ea380ba15bf75e0", "node_id": "C_kwDOAAsO6NoAKGMzYjIyOTFkYzMxYTdlM2YwMGM5M2UxODZlYTM4MGJhMTViZjc1ZTA", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-26T04:15:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-26T04:15:02Z"}, "message": "Rollup merge of #98509 - rust-lang:notriddle/precise-pin-diag, r=compiler-errors\n\ndiagnostics: consider parameter count when suggesting smart pointers\n\nFixes #96834", "tree": {"sha": "0dcd685be9f908a6e368e00dd4cd2f1c0b03f590", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dcd685be9f908a6e368e00dd4cd2f1c0b03f590"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJit91GCRBK7hj4Ov3rIwAAvWoIAKmDM4e7IVQczUybeYqqHhFd\nMmsjHzi03U8qthS87nvSPhVf88jNwoQI9bdFj3ZPY8jroWOwfyll3nso4+85imtV\nK9/QIu0EHkLyldwo+4PzqlzwSoOdtaNtEpnk/AkpctfcKcev+HE12qLqBICHd1Ou\npO7bAjiL3BXyuguCyNP4yjJL6bngszRvDQY1lki7CImJ2VdVK7vrloBULNkzB/Ww\nwK/IlSyUaRYeZoV7T013Xye3BwMbHv/OZKWDq9fJcqxg1+dP40urvmbnzXgrdRkD\nDg0enpLjKhlI/mAxQZDJJWquOJU+UGvhkELJ4ysJpyUjmqS+p6Pr2rBwRq67cA4=\n=uP2T\n-----END PGP SIGNATURE-----\n", "payload": "tree 0dcd685be9f908a6e368e00dd4cd2f1c0b03f590\nparent d774bc39e0d2f039c119a38a82389621bb264eda\nparent 0ea59f3bd69b78e4d3812452a0df401662d28fb6\nauthor Yuki Okushi <jtitor@2k36.org> 1656216902 +0900\ncommitter GitHub <noreply@github.com> 1656216902 +0900\n\nRollup merge of #98509 - rust-lang:notriddle/precise-pin-diag, r=compiler-errors\n\ndiagnostics: consider parameter count when suggesting smart pointers\n\nFixes #96834\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0", "html_url": "https://github.com/rust-lang/rust/commit/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d774bc39e0d2f039c119a38a82389621bb264eda", "url": "https://api.github.com/repos/rust-lang/rust/commits/d774bc39e0d2f039c119a38a82389621bb264eda", "html_url": "https://github.com/rust-lang/rust/commit/d774bc39e0d2f039c119a38a82389621bb264eda"}, {"sha": "0ea59f3bd69b78e4d3812452a0df401662d28fb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ea59f3bd69b78e4d3812452a0df401662d28fb6", "html_url": "https://github.com/rust-lang/rust/commit/0ea59f3bd69b78e4d3812452a0df401662d28fb6"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "79a13ce2fcac969cd4b99c4d8511fd260b85ec88", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=c3b2291dc31a7e3f00c93e186ea380ba15bf75e0", "patch": "@@ -994,6 +994,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         span,\n                         rcvr_ty,\n                         item_name,\n+                        args.map(|args| args.len()),\n                         source,\n                         out_of_scope_traits,\n                         &unsatisfied_predicates,\n@@ -1732,6 +1733,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         span: Span,\n         rcvr_ty: Ty<'tcx>,\n         item_name: Ident,\n+        inputs_len: Option<usize>,\n         source: SelfSource<'tcx>,\n         valid_out_of_scope_traits: Vec<DefId>,\n         unsatisfied_predicates: &[(\n@@ -1808,7 +1810,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         // Explicitly ignore the `Pin::as_ref()` method as `Pin` does not\n                         // implement the `AsRef` trait.\n                         let skip = skippable.contains(&did)\n-                            || ((\"Pin::new\" == *pre) && (sym::as_ref == item_name.name));\n+                            || ((\"Pin::new\" == *pre) && (sym::as_ref == item_name.name))\n+                            || inputs_len.map_or(false, |inputs_len| pick.item.kind == ty::AssocKind::Fn && self.tcx.fn_sig(pick.item.def_id).skip_binder().inputs().len() != inputs_len);\n                         // Make sure the method is defined for the *actual* receiver: we don't\n                         // want to treat `Box<Self>` as a receiver if it only works because of\n                         // an autoderef to `&self`"}, {"sha": "acb897571d64e38d809064cae77e1b670e19d7bd", "filename": "src/test/ui/suggestions/dont-suggest-pin-array-dot-set.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-pin-array-dot-set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-pin-array-dot-set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-pin-array-dot-set.rs?ref=c3b2291dc31a7e3f00c93e186ea380ba15bf75e0", "patch": "@@ -0,0 +1,15 @@\n+// https://github.com/rust-lang/rust/issues/96834\n+//\n+// This test case verifies that rustc does not make an unhelpful suggestion:\n+//\n+//     help: consider wrapping the receiver expression with the appropriate type\n+//         |\n+//     14  |     Pin::new(&mut a).set(0, 3);\n+//         |     +++++++++++++  +\n+//\n+// We can tell that it isn't helpful, because `Pin::set` takes two parameters (including\n+// the receiver), but the function call on line 14 supplies three.\n+fn main() {\n+    let mut a = [0u8; 1];\n+    a.set(0, 3); //~ERROR\n+}"}, {"sha": "677aa031bf7d65dce3ca16bb54c20bf53879af7d", "filename": "src/test/ui/suggestions/dont-suggest-pin-array-dot-set.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-pin-array-dot-set.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3b2291dc31a7e3f00c93e186ea380ba15bf75e0/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-pin-array-dot-set.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-pin-array-dot-set.stderr?ref=c3b2291dc31a7e3f00c93e186ea380ba15bf75e0", "patch": "@@ -0,0 +1,9 @@\n+error[E0599]: no method named `set` found for array `[u8; 1]` in the current scope\n+  --> $DIR/dont-suggest-pin-array-dot-set.rs:14:7\n+   |\n+LL |     a.set(0, 3);\n+   |       ^^^ help: there is an associated function with a similar name: `get`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}