{"sha": "aff37f8f7b0a14493e17bc9fd7844f4392d08241", "node_id": "C_kwDOAAsO6NoAKGFmZjM3ZjhmN2IwYTE0NDkzZTE3YmM5ZmQ3ODQ0ZjQzOTJkMDgyNDE", "commit": {"author": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-10-26T00:45:46Z"}, "committer": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-10-26T00:45:46Z"}, "message": "Clean up debug statements in needs_drop", "tree": {"sha": "51bdf4d0cf9bb2e324cd2d99bbc0ee8c51145ad3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51bdf4d0cf9bb2e324cd2d99bbc0ee8c51145ad3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aff37f8f7b0a14493e17bc9fd7844f4392d08241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aff37f8f7b0a14493e17bc9fd7844f4392d08241", "html_url": "https://github.com/rust-lang/rust/commit/aff37f8f7b0a14493e17bc9fd7844f4392d08241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aff37f8f7b0a14493e17bc9fd7844f4392d08241/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eae42fd9d0d6e568282a4c782405058b64f1ef0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/eae42fd9d0d6e568282a4c782405058b64f1ef0b", "html_url": "https://github.com/rust-lang/rust/commit/eae42fd9d0d6e568282a4c782405058b64f1ef0b"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "3f66e5b4ebfbeb80c2894201bd3d153e2c58f974", "filename": "compiler/rustc_ty_utils/src/needs_drop.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aff37f8f7b0a14493e17bc9fd7844f4392d08241/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aff37f8f7b0a14493e17bc9fd7844f4392d08241/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs?ref=aff37f8f7b0a14493e17bc9fd7844f4392d08241", "patch": "@@ -136,7 +136,6 @@ where\n                     // `ManuallyDrop`. If it's a struct or enum without a `Drop`\n                     // impl then check whether the field types need `Drop`.\n                     ty::Adt(adt_def, substs) => {\n-                        debug!(\"Got value {:?} with substs {:?}\", adt_def, substs);\n                         let tys = match (self.adt_components)(adt_def, substs) {\n                             Err(e) => return Some(Err(e)),\n                             Ok(tys) => tys,\n@@ -190,16 +189,16 @@ fn drop_tys_helper<'tcx>(\n ) -> impl Iterator<Item = NeedsDropResult<Ty<'tcx>>> {\n     let adt_components = move |adt_def: &ty::AdtDef, substs: SubstsRef<'tcx>| {\n         if adt_def.is_manually_drop() {\n-            debug!(\"adt_drop_tys: `{:?}` is manually drop\", adt_def);\n+            debug!(\"drop_tys_helper: `{:?}` is manually drop\", adt_def);\n             return Ok(Vec::new().into_iter());\n         } else if let Some(dtor_info) = adt_has_dtor(adt_def) {\n             match dtor_info {\n                 DtorType::Significant => {\n-                    debug!(\"adt_drop_tys: `{:?}` implements `Drop`\", adt_def);\n+                    debug!(\"drop_tys_helper: `{:?}` implements `Drop`\", adt_def);\n                     return Err(AlwaysRequiresDrop);\n                 }\n                 DtorType::Insignificant => {\n-                    debug!(\"adt_drop_tys: `{:?}` drop is insignificant\", adt_def);\n+                    debug!(\"drop_tys_helper: `{:?}` drop is insignificant\", adt_def);\n \n                     // Since the destructor is insignificant, we just want to make sure all of\n                     // the passed in type parameters are also insignificant.\n@@ -208,15 +207,14 @@ fn drop_tys_helper<'tcx>(\n                 }\n             }\n         } else if adt_def.is_union() {\n-            debug!(\"adt_drop_tys: `{:?}` is a union\", adt_def);\n+            debug!(\"drop_tys_helper: `{:?}` is a union\", adt_def);\n             return Ok(Vec::new().into_iter());\n         }\n-        debug!(\"Path\");\n         Ok(adt_def\n             .all_fields()\n             .map(|field| {\n                 let r = tcx.type_of(field.did).subst(tcx, substs);\n-                debug!(\"Subst into {:?} with {:?} gettng {:?}\", field, substs, r);\n+                debug!(\"drop_tys_helper: Subst into {:?} with {:?} gettng {:?}\", field, substs, r);\n                 r\n             })\n             .collect::<Vec<_>>()"}]}