{"sha": "f372b13a858a6d037e38ab13ec7ae0286be5a001", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNzJiMTNhODU4YTZkMDM3ZTM4YWIxM2VjN2FlMDI4NmJlNWEwMDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-01T11:05:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-01T11:05:59Z"}, "message": "Merge #5164\n\n5164: Dont show empty progress for empty workspaces r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "85a29c48079b56b17ead09bf255b73037543cb4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85a29c48079b56b17ead09bf255b73037543cb4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f372b13a858a6d037e38ab13ec7ae0286be5a001", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe/G4XCRBK7hj4Ov3rIwAAdHIIAJPxoAxaqJG8ceNEIp21T68o\n1121qA5qy4H0u2ANRzL/oBZe+xEt61pq2b+BzGK1KqDjr1cW8KiwgBRupJur2pb/\nThIIhRrVWmAdcUrjVklLoF1kpqUr7uVv2VbAaw2zTmS9T5q/HOkyjF1xB4mZLJ7t\nTVv0mVBqr0T5bYMbU6cIBShwaPmB+x4q7SjZaptjH8MTLacKSn9Wbq+lKbRZRv7U\nDyFen+XK4ZszFM/7lYDxrhT5XZK9oEJucJA54FereiuOfZvF97QBI15scqBTHSLe\nXTBY3OECSggpQDjpkzMoei2WIbrdfZQ8t2ie6Sh/yCu1zD0UQ9KzKIIGaFDASyI=\n=pfvM\n-----END PGP SIGNATURE-----\n", "payload": "tree 85a29c48079b56b17ead09bf255b73037543cb4c\nparent 7d82152b21579df144b4a5272e699e24cafb5b97\nparent 44b8737cedc437ec4981e73c1543b04f723656fa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593601559 +0000\ncommitter GitHub <noreply@github.com> 1593601559 +0000\n\nMerge #5164\n\n5164: Dont show empty progress for empty workspaces r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f372b13a858a6d037e38ab13ec7ae0286be5a001", "html_url": "https://github.com/rust-lang/rust/commit/f372b13a858a6d037e38ab13ec7ae0286be5a001", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f372b13a858a6d037e38ab13ec7ae0286be5a001/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d82152b21579df144b4a5272e699e24cafb5b97", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d82152b21579df144b4a5272e699e24cafb5b97", "html_url": "https://github.com/rust-lang/rust/commit/7d82152b21579df144b4a5272e699e24cafb5b97"}, {"sha": "44b8737cedc437ec4981e73c1543b04f723656fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/44b8737cedc437ec4981e73c1543b04f723656fa", "html_url": "https://github.com/rust-lang/rust/commit/44b8737cedc437ec4981e73c1543b04f723656fa"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "2ce1441b68c1f3ebc02ea000b8782b1277641044", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f372b13a858a6d037e38ab13ec7ae0286be5a001/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f372b13a858a6d037e38ab13ec7ae0286be5a001/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=f372b13a858a6d037e38ab13ec7ae0286be5a001", "patch": "@@ -168,22 +168,24 @@ impl GlobalState {\n                     }\n                 }\n                 vfs::loader::Message::Progress { n_total, n_done } => {\n-                    let state = if n_done == 0 {\n-                        Progress::Begin\n-                    } else if n_done < n_total {\n-                        Progress::Report\n-                    } else {\n-                        assert_eq!(n_done, n_total);\n-                        self.status = Status::Ready;\n-                        became_ready = true;\n-                        Progress::End\n-                    };\n-                    self.report_progress(\n-                        \"roots scanned\",\n-                        state,\n-                        Some(format!(\"{}/{}\", n_done, n_total)),\n-                        Some(Progress::percentage(n_done, n_total)),\n-                    )\n+                    if n_total > 0 {\n+                        let state = if n_done == 0 {\n+                            Progress::Begin\n+                        } else if n_done < n_total {\n+                            Progress::Report\n+                        } else {\n+                            assert_eq!(n_done, n_total);\n+                            self.status = Status::Ready;\n+                            became_ready = true;\n+                            Progress::End\n+                        };\n+                        self.report_progress(\n+                            \"roots scanned\",\n+                            state,\n+                            Some(format!(\"{}/{}\", n_done, n_total)),\n+                            Some(Progress::percentage(n_done, n_total)),\n+                        )\n+                    }\n                 }\n             },\n             Event::Flycheck(task) => match task {"}]}