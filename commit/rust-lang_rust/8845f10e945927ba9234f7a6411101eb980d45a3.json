{"sha": "8845f10e945927ba9234f7a6411101eb980d45a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NDVmMTBlOTQ1OTI3YmE5MjM0ZjdhNjQxMTEwMWViOTgwZDQ1YTM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-11-05T17:27:48Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-11-08T22:47:11Z"}, "message": "Do not collect tokens for doc comments", "tree": {"sha": "b55f244683afe19de11f5ff5f31581b22e478ba4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b55f244683afe19de11f5ff5f31581b22e478ba4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8845f10e945927ba9234f7a6411101eb980d45a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8845f10e945927ba9234f7a6411101eb980d45a3", "html_url": "https://github.com/rust-lang/rust/commit/8845f10e945927ba9234f7a6411101eb980d45a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8845f10e945927ba9234f7a6411101eb980d45a3/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34244190d45d80bf66a0eec0d04f0254efd4c754", "url": "https://api.github.com/repos/rust-lang/rust/commits/34244190d45d80bf66a0eec0d04f0254efd4c754", "html_url": "https://github.com/rust-lang/rust/commit/34244190d45d80bf66a0eec0d04f0254efd4c754"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "55904a0ec0a84131da7e6a1685a2879b806be232", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8845f10e945927ba9234f7a6411101eb980d45a3/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8845f10e945927ba9234f7a6411101eb980d45a3/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=8845f10e945927ba9234f7a6411101eb980d45a3", "patch": "@@ -588,7 +588,7 @@ impl EarlyLintPass for EarlyAttributes {\n \n fn check_empty_line_after_outer_attr(cx: &EarlyContext<'_>, item: &rustc_ast::Item) {\n     for attr in &item.attrs {\n-        let attr_item = if let AttrKind::Normal(ref attr) = attr.kind {\n+        let attr_item = if let AttrKind::Normal(ref attr, _) = attr.kind {\n             attr\n         } else {\n             return;"}, {"sha": "b68e33f101d2b6d15c5b577ae2d6e46483ade234", "filename": "clippy_lints/src/utils/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8845f10e945927ba9234f7a6411101eb980d45a3/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8845f10e945927ba9234f7a6411101eb980d45a3/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs?ref=8845f10e945927ba9234f7a6411101eb980d45a3", "patch": "@@ -509,7 +509,7 @@ pub fn eq_attr(l: &Attribute, r: &Attribute) -> bool {\n     l.style == r.style\n         && match (&l.kind, &r.kind) {\n             (DocComment(l1, l2), DocComment(r1, r2)) => l1 == r1 && l2 == r2,\n-            (Normal(l), Normal(r)) => eq_path(&l.path, &r.path) && eq_mac_args(&l.args, &r.args),\n+            (Normal(l, _), Normal(r, _)) => eq_path(&l.path, &r.path) && eq_mac_args(&l.args, &r.args),\n             _ => false,\n         }\n }"}, {"sha": "e6d41341a55f3bbd5666eee9963afc849dec97cb", "filename": "clippy_lints/src/utils/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8845f10e945927ba9234f7a6411101eb980d45a3/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8845f10e945927ba9234f7a6411101eb980d45a3/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fattrs.rs?ref=8845f10e945927ba9234f7a6411101eb980d45a3", "patch": "@@ -57,7 +57,7 @@ pub fn get_attr<'a>(\n     name: &'static str,\n ) -> impl Iterator<Item = &'a ast::Attribute> {\n     attrs.iter().filter(move |attr| {\n-        let attr = if let ast::AttrKind::Normal(ref attr) = attr.kind {\n+        let attr = if let ast::AttrKind::Normal(ref attr, _) = attr.kind {\n             attr\n         } else {\n             return false;"}, {"sha": "0d43fd0392eb262cacf4ecc3d1a80adc28ebbc2d", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8845f10e945927ba9234f7a6411101eb980d45a3/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8845f10e945927ba9234f7a6411101eb980d45a3/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=8845f10e945927ba9234f7a6411101eb980d45a3", "patch": "@@ -1349,7 +1349,7 @@ pub fn is_must_use_func_call(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n \n pub fn is_no_std_crate(krate: &Crate<'_>) -> bool {\n     krate.item.attrs.iter().any(|attr| {\n-        if let ast::AttrKind::Normal(ref attr) = attr.kind {\n+        if let ast::AttrKind::Normal(ref attr, _) = attr.kind {\n             attr.path == symbol::sym::no_std\n         } else {\n             false"}]}