{"sha": "7c7812dfd3c3cd7c117e29a1fc90b3801b206621", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNzgxMmRmZDNjM2NkN2MxMTdlMjlhMWZjOTBiMzgwMWIyMDY2MjE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-12-25T02:39:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-25T02:39:51Z"}, "message": "Rollup merge of #80352 - ssomers:btree_test_diagnostics, r=Mark-Simulacrum\n\nBTreeMap: make test cases more explicit on failure\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "d0e760ac2dc475092c7867befd054f292862b74f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0e760ac2dc475092c7867befd054f292862b74f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c7812dfd3c3cd7c117e29a1fc90b3801b206621", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf5VD3CRBK7hj4Ov3rIwAAdHIIAC4ZKjgnvAyWo3raRdb50EEQ\nw4qcBSvhoxDyDziSKTSCl/95xTgiSGKsJW00ZHPvuiUegJyV/CwaEZUCFVKXG+eJ\nFD/XQstiseqJmz65PiVMR6nu3RlD0vDL6o3MyADTBhUFzZ2ehDEeG7XBmMfBTniW\nRmGAGwBueCd4dCj1LwzeynFbT3EjqF7mHJQKkru4DvqRzOPWQlhAEyQjfIl+JvvR\nT+8P8Xp13xwT6JGO0kaowa9CWsKa3TgRGtAQoiJdJOf3b4VkobjwyNvaEUQVSci8\n8557CrApRdMOnODnqh96HhrKGE6/G8XywWb18t302v+5VulEk/B/M/bOZD808Ow=\n=Yopr\n-----END PGP SIGNATURE-----\n", "payload": "tree d0e760ac2dc475092c7867befd054f292862b74f\nparent 3cf289bd5f9b30d7b50f66ac6280f043272c9775\nparent 9e618bacf2c060d19d7dfbdb04c332b81cf56839\nauthor Dylan DPC <dylan.dpc@gmail.com> 1608863991 +0100\ncommitter GitHub <noreply@github.com> 1608863991 +0100\n\nRollup merge of #80352 - ssomers:btree_test_diagnostics, r=Mark-Simulacrum\n\nBTreeMap: make test cases more explicit on failure\n\nr? `@Mark-Simulacrum`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c7812dfd3c3cd7c117e29a1fc90b3801b206621", "html_url": "https://github.com/rust-lang/rust/commit/7c7812dfd3c3cd7c117e29a1fc90b3801b206621", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c7812dfd3c3cd7c117e29a1fc90b3801b206621/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cf289bd5f9b30d7b50f66ac6280f043272c9775", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf289bd5f9b30d7b50f66ac6280f043272c9775", "html_url": "https://github.com/rust-lang/rust/commit/3cf289bd5f9b30d7b50f66ac6280f043272c9775"}, {"sha": "9e618bacf2c060d19d7dfbdb04c332b81cf56839", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e618bacf2c060d19d7dfbdb04c332b81cf56839", "html_url": "https://github.com/rust-lang/rust/commit/9e618bacf2c060d19d7dfbdb04c332b81cf56839"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "c857d4317e495499c2b860b5f858089a6492711a", "filename": "library/alloc/src/collections/btree/map/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c7812dfd3c3cd7c117e29a1fc90b3801b206621/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c7812dfd3c3cd7c117e29a1fc90b3801b206621/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs?ref=7c7812dfd3c3cd7c117e29a1fc90b3801b206621", "patch": "@@ -115,7 +115,7 @@ impl<K, V> BTreeMap<K, V> {\n \n impl<'a, K: 'a, V: 'a> NodeRef<marker::Immut<'a>, K, V, marker::LeafOrInternal> {\n     fn assert_min_len(self, min_len: usize) {\n-        assert!(self.len() >= min_len, \"{} < {}\", self.len(), min_len);\n+        assert!(self.len() >= min_len, \"node len {} < {}\", self.len(), min_len);\n         if let node::ForceResult::Internal(node) = self.force() {\n             for idx in 0..=node.len() {\n                 let edge = unsafe { Handle::new_edge(node, idx) };"}, {"sha": "7fe8ff743c040546870a1da810c2fd5352346917", "filename": "library/alloc/src/collections/btree/node/tests.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7c7812dfd3c3cd7c117e29a1fc90b3801b206621/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c7812dfd3c3cd7c117e29a1fc90b3801b206621/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs?ref=7c7812dfd3c3cd7c117e29a1fc90b3801b206621", "patch": "@@ -30,11 +30,15 @@ impl<'a, K: 'a, V: 'a> NodeRef<marker::Immut<'a>, K, V, marker::LeafOrInternal>\n                 let depth = self.height();\n                 let indent = \"  \".repeat(depth);\n                 result += &format!(\"\\n{}\", indent);\n-                for idx in 0..leaf.len() {\n-                    if idx > 0 {\n-                        result += \", \";\n+                if leaf.len() == 0 {\n+                    result += \"(empty node)\";\n+                } else {\n+                    for idx in 0..leaf.len() {\n+                        if idx > 0 {\n+                            result += \", \";\n+                        }\n+                        result += &format!(\"{:?}\", unsafe { leaf.key_at(idx) });\n                     }\n-                    result += &format!(\"{:?}\", unsafe { leaf.key_at(idx) });\n                 }\n             }\n             navigate::Position::Internal(_) => {}"}]}