{"sha": "af0e16c852662d23097ce1821ff04c1676aed20f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMGUxNmM4NTI2NjJkMjMwOTdjZTE4MjFmZjA0YzE2NzZhZWQyMGY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-05-08T21:36:33Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-05-11T23:03:05Z"}, "message": "rustbuild: Use `-Z force-unstable-if-unmarked`", "tree": {"sha": "ce4f75651d671bda264afbc6b1a04785050501c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce4f75651d671bda264afbc6b1a04785050501c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af0e16c852662d23097ce1821ff04c1676aed20f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af0e16c852662d23097ce1821ff04c1676aed20f", "html_url": "https://github.com/rust-lang/rust/commit/af0e16c852662d23097ce1821ff04c1676aed20f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af0e16c852662d23097ce1821ff04c1676aed20f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99f629a9313a6ac5d7c57fdfa9127a336d0731a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/99f629a9313a6ac5d7c57fdfa9127a336d0731a8", "html_url": "https://github.com/rust-lang/rust/commit/99f629a9313a6ac5d7c57fdfa9127a336d0731a8"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "906c468241ae9d765fc006a8fb331c905bbd11d6", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/af0e16c852662d23097ce1821ff04c1676aed20f/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0e16c852662d23097ce1821ff04c1676aed20f/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=af0e16c852662d23097ce1821ff04c1676aed20f", "patch": "@@ -194,6 +194,8 @@ fn main() {\n                 // do that we pass a weird flag to the compiler to get it to do\n                 // so. Note that this is definitely a hack, and we should likely\n                 // flesh out rpath support more fully in the future.\n+                //\n+                // FIXME: remove condition after next stage0\n                 if stage != \"0\" {\n                     cmd.arg(\"-Z\").arg(\"osx-rpath-install-name\");\n                 }\n@@ -218,6 +220,17 @@ fn main() {\n             cmd.arg(\"-Z\").arg(\"unstable-options\");\n             cmd.arg(\"-C\").arg(\"target-feature=+crt-static\");\n         }\n+\n+        // Force all crates compiled by this compiler to (a) be unstable and (b)\n+        // allow the `rustc_private` feature to link to other unstable crates\n+        // also in the sysroot.\n+        //\n+        // FIXME: remove condition after next stage0\n+        if env::var_os(\"RUSTC_FORCE_UNSTABLE\").is_some() {\n+            if stage != \"0\" {\n+                cmd.arg(\"-Z\").arg(\"force-unstable-if-unmarked\");\n+            }\n+        }\n     }\n \n     if verbose > 1 {"}, {"sha": "ea0b521a2ce6934b8dc6fc96b9bba97651bb00cf", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/af0e16c852662d23097ce1821ff04c1676aed20f/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af0e16c852662d23097ce1821ff04c1676aed20f/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=af0e16c852662d23097ce1821ff04c1676aed20f", "patch": "@@ -479,7 +479,8 @@ impl Build {\n         // compiled with debuginfo.\n         if mode != Mode::Tool {\n              cargo.env(\"RUSTC_DEBUGINFO\", self.config.rust_debuginfo.to_string())\n-                  .env(\"RUSTC_DEBUGINFO_LINES\", self.config.rust_debuginfo_lines.to_string());\n+                  .env(\"RUSTC_DEBUGINFO_LINES\", self.config.rust_debuginfo_lines.to_string())\n+                  .env(\"RUSTC_FORCE_UNSTABLE\", \"1\");\n         }\n \n         // Enable usage of unstable features\n@@ -524,7 +525,9 @@ impl Build {\n         // the comipiler, libs, and tests are stable and we don't want to make\n         // their deps unstable (since this would break the first invariant\n         // above).\n-        if mode != Mode::Tool {\n+        //\n+        // FIXME: remove this after next stage0\n+        if mode != Mode::Tool && stage == 0 {\n             cargo.env(\"RUSTBUILD_UNSTABLE\", \"1\");\n         }\n "}]}