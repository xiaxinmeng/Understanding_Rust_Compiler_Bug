{"sha": "7ec8269d0aead891c25a20b4e4c4cc5d73eccf79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYzgyNjlkMGFlYWQ4OTFjMjVhMjBiNGU0YzRjYzVkNzNlY2NmNzk=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-10-13T14:29:21Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-10-17T12:09:39Z"}, "message": "Implement `InferenceTable::add_clauses`", "tree": {"sha": "cd0bb4f4fc82da3704883026dfe9d49ab36de226", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd0bb4f4fc82da3704883026dfe9d49ab36de226"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ec8269d0aead891c25a20b4e4c4cc5d73eccf79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec8269d0aead891c25a20b4e4c4cc5d73eccf79", "html_url": "https://github.com/rust-lang/rust/commit/7ec8269d0aead891c25a20b4e4c4cc5d73eccf79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ec8269d0aead891c25a20b4e4c4cc5d73eccf79/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5d1aac8837d053df75996a7f5b5e6d0760d8006", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5d1aac8837d053df75996a7f5b5e6d0760d8006", "html_url": "https://github.com/rust-lang/rust/commit/b5d1aac8837d053df75996a7f5b5e6d0760d8006"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "371fa46f3701039f8dbd2273c132245f80fa0ba8", "filename": "src/librustc_traits/chalk_context.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7ec8269d0aead891c25a20b4e4c4cc5d73eccf79/src%2Flibrustc_traits%2Fchalk_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec8269d0aead891c25a20b4e4c4cc5d73eccf79/src%2Flibrustc_traits%2Fchalk_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk_context.rs?ref=7ec8269d0aead891c25a20b4e4c4cc5d73eccf79", "patch": "@@ -22,7 +22,7 @@ use rustc::traits::{\n     ExClauseLift,\n     Goal,\n     GoalKind,\n-    ProgramClause,\n+    Clause,\n     QuantifierKind,\n     Environment,\n     InEnvironment,\n@@ -100,9 +100,9 @@ impl context::Context for ChalkArenas<'tcx> {\n \n     type Parameter = Kind<'tcx>;\n \n-    type ProgramClause = ProgramClause<'tcx>;\n+    type ProgramClause = Clause<'tcx>;\n \n-    type ProgramClauses = Vec<ProgramClause<'tcx>>;\n+    type ProgramClauses = Vec<Clause<'tcx>>;\n \n     type UnificationResult = InferOk<'tcx, ()>;\n \n@@ -272,10 +272,14 @@ impl context::InferenceTable<ChalkArenas<'gcx>, ChalkArenas<'tcx>>\n \n     fn add_clauses(\n         &mut self,\n-        _env: &Environment<'tcx>,\n-        _clauses: Vec<ProgramClause<'tcx>>,\n+        env: &Environment<'tcx>,\n+        clauses: Vec<Clause<'tcx>>,\n     ) -> Environment<'tcx> {\n-        panic!(\"FIXME no method to add clauses to Environment yet\")\n+        Environment {\n+            clauses: self.infcx.tcx.mk_clauses(\n+                env.clauses.iter().cloned().chain(clauses.into_iter())\n+            )\n+        }\n     }\n }\n \n@@ -287,7 +291,7 @@ impl context::ResolventOps<ChalkArenas<'gcx>, ChalkArenas<'tcx>>\n         _environment: &Environment<'tcx>,\n         _goal: &DomainGoal<'tcx>,\n         _subst: &CanonicalVarValues<'tcx>,\n-        _clause: &ProgramClause<'tcx>,\n+        _clause: &Clause<'tcx>,\n     ) -> chalk_engine::fallible::Fallible<Canonical<'gcx, ChalkExClause<'gcx>>> {\n         panic!()\n     }\n@@ -328,7 +332,7 @@ impl context::UnificationOps<ChalkArenas<'gcx>, ChalkArenas<'tcx>>\n         &self,\n         _environment: &Environment<'tcx>,\n         goal: &DomainGoal<'tcx>,\n-    ) -> Vec<ProgramClause<'tcx>> {\n+    ) -> Vec<Clause<'tcx>> {\n         use rustc::traits::WhereClause::*;\n \n         match goal {"}]}