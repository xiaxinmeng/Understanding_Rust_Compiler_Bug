{"sha": "a4060d02cb69e9fe138cf523b44f73aed1603c66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MDYwZDAyY2I2OWU5ZmUxMzhjZjUyM2I0NGY3M2FlZDE2MDNjNjY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-07-16T05:19:08Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-07-16T05:19:08Z"}, "message": "Rollup merge of #27020 - goyox86:goyox86/fix-error-handling-snippet, r=steveklabnik\n\n This PR fixes a snippet of code on the error handling chapter of \\\"The Rust Programming Language\\\".\n\n//cc @steveklabnik\n\nThe docs state that trying to compile the snippet will yield the following error:\n\n```bash\nanon>:13:5: 20:6 error: non-exhaustive patterns: `_` not covered [E0004]\n```\n\nBut instead the error received is:\n\n```bash\n<anon>:22:46: 22:56 error: unresolved name `NewRelease`\n<anon>:22     std::io::println(descriptive_probability(NewRelease));\n                                                       ^~~~~~~~~~\n<anon>:22:5: 22:21 error: unresolved name `std::io::println`\n<anon>:22     std::io::println(descriptive_probability(NewRelease));\n              ^~~~~~~~~~~~~~~~\nerror: aborting due to 2 previous errors\nplaypen: application terminated with error code 101\n```\n\nAfter applying this PR the expected error is returned:\n\n```bash\nanon>:13:5: 20:6 error: non-exhaustive patterns: `_` not covered [E0004]\n<anon>:13     match probability(&event) {\n<anon>:14         1.00 => \\\"certain\\\",\n<anon>:15         0.00 => \\\"impossible\\\",\n<anon>:16         0.00 ... 0.25 => \\\"very unlikely\\\",\n<anon>:17         0.25 ... 0.50 => \\\"unlikely\\\",\n<anon>:18         0.50 ... 0.75 => \\\"likely\\\",\n          ...\n<anon>:13:5: 20:6 help: see the detailed explanation for E0004\nerror: aborting due to previous error\n```", "tree": {"sha": "4fd65eb1d4c313a1747bba2ba3980e2e65e29040", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fd65eb1d4c313a1747bba2ba3980e2e65e29040"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4060d02cb69e9fe138cf523b44f73aed1603c66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4060d02cb69e9fe138cf523b44f73aed1603c66", "html_url": "https://github.com/rust-lang/rust/commit/a4060d02cb69e9fe138cf523b44f73aed1603c66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4060d02cb69e9fe138cf523b44f73aed1603c66/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62bb71e83a77c019bcdffa5c2c583fcb515f4bb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/62bb71e83a77c019bcdffa5c2c583fcb515f4bb8", "html_url": "https://github.com/rust-lang/rust/commit/62bb71e83a77c019bcdffa5c2c583fcb515f4bb8"}, {"sha": "2e1f75acc48ba084f5bd24ec75ec831de6a5677a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e1f75acc48ba084f5bd24ec75ec831de6a5677a", "html_url": "https://github.com/rust-lang/rust/commit/2e1f75acc48ba084f5bd24ec75ec831de6a5677a"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8dd5a3650ef5260eb2d55201e4db9e6dc1a7f0a8", "filename": "src/doc/trpl/error-handling.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4060d02cb69e9fe138cf523b44f73aed1603c66/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/a4060d02cb69e9fe138cf523b44f73aed1603c66/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ferror-handling.md?ref=a4060d02cb69e9fe138cf523b44f73aed1603c66", "patch": "@@ -50,6 +50,8 @@ is very wrong. Wrong enough that we can't continue with things in the current\n state. Another example is using the `unreachable!()` macro:\n \n ```rust,ignore\n+use Event::NewRelease;\n+\n enum Event {\n     NewRelease,\n }\n@@ -71,7 +73,7 @@ fn descriptive_probability(event: Event) -> &'static str {\n }\n \n fn main() {\n-    std::io::println(descriptive_probability(NewRelease));\n+    println!(\"{}\", descriptive_probability(NewRelease));\n }\n ```\n "}]}