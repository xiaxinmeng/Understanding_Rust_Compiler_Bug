{"sha": "9224be5fa39f6170f6e046342976efee5453a1ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMjRiZTVmYTM5ZjYxNzBmNmUwNDYzNDI5NzZlZmVlNTQ1M2ExZmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-21T02:38:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-21T02:38:15Z"}, "message": "Auto merge of #60116 - RalfJung:miri-exit, r=oli-obk\n\nadd Miri error variant for process exit\n\nThis is to support https://github.com/rust-lang/miri/pull/702\n\nr? @oli-obk", "tree": {"sha": "aab4571691ae59b5485b3e2994cca8560d789814", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aab4571691ae59b5485b3e2994cca8560d789814"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9224be5fa39f6170f6e046342976efee5453a1ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9224be5fa39f6170f6e046342976efee5453a1ff", "html_url": "https://github.com/rust-lang/rust/commit/9224be5fa39f6170f6e046342976efee5453a1ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9224be5fa39f6170f6e046342976efee5453a1ff/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3a71943545516557f40f93d30c1512f1f16ff64", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3a71943545516557f40f93d30c1512f1f16ff64", "html_url": "https://github.com/rust-lang/rust/commit/c3a71943545516557f40f93d30c1512f1f16ff64"}, {"sha": "79b91b7cdddcb45d2909d950a2e47f3be522ef64", "url": "https://api.github.com/repos/rust-lang/rust/commits/79b91b7cdddcb45d2909d950a2e47f3be522ef64", "html_url": "https://github.com/rust-lang/rust/commit/79b91b7cdddcb45d2909d950a2e47f3be522ef64"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "5c6fc6f49f0f0091bf8f144d42d00c5a3ebf9cf3", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9224be5fa39f6170f6e046342976efee5453a1ff/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9224be5fa39f6170f6e046342976efee5453a1ff/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=9224be5fa39f6170f6e046342976efee5453a1ff", "patch": "@@ -229,6 +229,10 @@ pub enum InterpError<'tcx, O> {\n     /// match an existing variant.\n     MachineError(String),\n \n+    /// Not actually an interpreter error -- used to signal that execution has exited\n+    /// with the given status code.  Used by Miri, but not by CTFE.\n+    Exit(i32),\n+\n     FunctionAbiMismatch(Abi, Abi),\n     FunctionArgMismatch(Ty<'tcx>, Ty<'tcx>),\n     FunctionRetMismatch(Ty<'tcx>, Ty<'tcx>),\n@@ -317,6 +321,8 @@ impl<'tcx, O> InterpError<'tcx, O> {\n         use self::InterpError::*;\n         match *self {\n             MachineError(ref inner) => inner,\n+            Exit(..) =>\n+                \"exited\",\n             FunctionAbiMismatch(..) | FunctionArgMismatch(..) | FunctionRetMismatch(..)\n             | FunctionArgCountMismatch =>\n                 \"tried to call a function through a function pointer of incompatible type\",\n@@ -515,6 +521,8 @@ impl<'tcx, O: fmt::Debug> fmt::Debug for InterpError<'tcx, O> {\n                 write!(f, \"the evaluated program panicked at '{}', {}:{}:{}\", msg, file, line, col),\n             InvalidDiscriminant(val) =>\n                 write!(f, \"encountered invalid enum discriminant {}\", val),\n+            Exit(code) =>\n+                write!(f, \"exited with status code {}\", code),\n             _ => write!(f, \"{}\", self.description()),\n         }\n     }"}, {"sha": "b5bdc9e1c8c6e61f9ce0e8736c145e483fa7fde5", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9224be5fa39f6170f6e046342976efee5453a1ff/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9224be5fa39f6170f6e046342976efee5453a1ff/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=9224be5fa39f6170f6e046342976efee5453a1ff", "patch": "@@ -148,6 +148,7 @@ impl<'a, 'mir, 'tcx> ConstPropagator<'a, 'mir, 'tcx> {\n                 match diagnostic.error {\n                     // don't report these, they make no sense in a const prop context\n                     | MachineError(_)\n+                    | Exit(_)\n                     // at runtime these transformations might make sense\n                     // FIXME: figure out the rules and start linting\n                     | FunctionAbiMismatch(..)"}]}