{"sha": "8217ce622874c1b99124328800e697eb235121f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMTdjZTYyMjg3NGMxYjk5MTI0MzI4ODAwZTY5N2ViMjM1MTIxZjE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-04T23:42:11Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-04T23:42:11Z"}, "message": "Improve type.ml logging.", "tree": {"sha": "d4a08ac14e468485d9d18b69689e7f95b7cd284a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4a08ac14e468485d9d18b69689e7f95b7cd284a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8217ce622874c1b99124328800e697eb235121f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8217ce622874c1b99124328800e697eb235121f1", "html_url": "https://github.com/rust-lang/rust/commit/8217ce622874c1b99124328800e697eb235121f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8217ce622874c1b99124328800e697eb235121f1/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff6278f51a612dc49e5dd2544679465d0ee7ee2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff6278f51a612dc49e5dd2544679465d0ee7ee2e", "html_url": "https://github.com/rust-lang/rust/commit/ff6278f51a612dc49e5dd2544679465d0ee7ee2e"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "ff1bbd72635bbfa62aba3b5cf9fdc39d1ea68330", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8217ce622874c1b99124328800e697eb235121f1/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/8217ce622874c1b99124328800e697eb235121f1/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=8217ce622874c1b99124328800e697eb235121f1", "patch": "@@ -1589,8 +1589,9 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n           let _ =\n             iflog cx\n               (fun _ ->\n-                 log cx \"recording resolved lval #%d type %a\"\n+                 log cx \"recording resolved lval #%d = %a type %a\"\n                    (int_of_node id)\n+                   Ast.sprintf_lval (Hashtbl.find cx.ctxt_all_lvals id)\n                    Ast.sprintf_ty ty)\n           in\n             Hashtbl.add cx.ctxt_all_lval_types id ty"}]}