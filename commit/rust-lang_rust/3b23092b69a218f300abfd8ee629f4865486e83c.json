{"sha": "3b23092b69a218f300abfd8ee629f4865486e83c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMjMwOTJiNjlhMjE4ZjMwMGFiZmQ4ZWU2MjlmNDg2NTQ4NmU4M2M=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-05T10:38:38Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-05T10:38:38Z"}, "message": "Get rid of rvalue_promotable_map method call", "tree": {"sha": "1eb7fcba289b749d9339829fa98599b6e137ada9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eb7fcba289b749d9339829fa98599b6e137ada9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b23092b69a218f300abfd8ee629f4865486e83c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl2Ycq4ACgkQaTCGhp1Q\nZjd04g/+KoUtsafgXDORrcPZ++I+vAjL7VKUR/ZR8YHz8RXKesg0iXIV1e90yxFh\nJ2rsJ/HONAKx6vgTBBGhdydysiYEcHtK9raZ8ymYdKJxhROX9cPxQRSAFFHJ0Ipa\nPyAhyO4gVa8kfU6Tw6Ivq7eTfSNLURTGlzfU7aFdWeRZg+Y8fQEW0jFhVArLAAiO\nIu2a7wKaOa4pGIzqufwEBemJlAOpmGBbmvioYWk1qfn0vCUOmXDXH5u4NemOif9G\ns+TMCeBwSlJSFEjQMBzcKohtZCX68iK77nnkim3RZZRUPBLFuTuPkfmFuzpTSfoQ\nSrcLvIYjR2zW/4otQ6HYtFQvlRYxt/MYpgnFUjbo/pELcwsJTt/5+NKkLY2RJXxb\nDflnLKPvujiFerO+Bt1zmPhuWap+QsEA8SilAGUztGH+qwiDYLcgeHeyAbT6Evj5\nGvwSIzHmb2chmjwXRHNP5YJ01Yr0bygLVh08+EAd0SKZxGGW5ggt5ReggBwf3XI3\nVCE1/SkZ83jWmzh2HwrFX9sQPAvihuovIdwfaQ1JXGgidGKddG3phgOBNdrtx8TN\nXbBAzTsDCWEx1dfYOZjPPSdjkyOASdqI3biMYMoZyrepxfjvbLGwKtiTA5d8hb5T\n+xcJYhh2BqBfUDiyq0rAsbZD8BaqFbwQ4InNBgWkS1GAOOo9itE=\n=YzEL\n-----END PGP SIGNATURE-----", "payload": "tree 1eb7fcba289b749d9339829fa98599b6e137ada9\nparent b7d473503b051f86c59f3256130e8ff13afe4332\nauthor flip1995 <hello@philkrones.com> 1570271918 +0200\ncommitter flip1995 <hello@philkrones.com> 1570271918 +0200\n\nGet rid of rvalue_promotable_map method call\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b23092b69a218f300abfd8ee629f4865486e83c", "html_url": "https://github.com/rust-lang/rust/commit/3b23092b69a218f300abfd8ee629f4865486e83c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b23092b69a218f300abfd8ee629f4865486e83c/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7d473503b051f86c59f3256130e8ff13afe4332", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7d473503b051f86c59f3256130e8ff13afe4332", "html_url": "https://github.com/rust-lang/rust/commit/b7d473503b051f86c59f3256130e8ff13afe4332"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "526cb6ca61098e04e0ebdfe06a088ea117b788e1", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3b23092b69a218f300abfd8ee629f4865486e83c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b23092b69a218f300abfd8ee629f4865486e83c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=3b23092b69a218f300abfd8ee629f4865486e83c", "patch": "@@ -21,7 +21,7 @@ use syntax::symbol::{sym, LocalInternedString, Symbol};\n use crate::utils::usage::mutated_variables;\n use crate::utils::{\n     get_arg_name, get_parent_expr, get_trait_def_id, has_iter_method, implements_trait, in_macro, is_copy,\n-    is_ctor_function, is_expn_of, is_type_diagnostic_item, iter_input_pats, last_path_segment, match_def_path,\n+    is_ctor_or_promotable_const_function, is_expn_of, is_type_diagnostic_item, iter_input_pats, last_path_segment, match_def_path,\n     match_qpath, match_trait_method, match_type, match_var, method_calls, method_chain_args, paths, remove_blocks,\n     return_ty, same_tys, single_segment_path, snippet, snippet_with_applicability, snippet_with_macro_callsite,\n     span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then, span_note_and_lint, sugg, walk_ptrs_ty,\n@@ -1281,22 +1281,13 @@ fn lint_or_fun_call<'a, 'tcx>(\n         fn visit_expr(&mut self, expr: &'tcx hir::Expr) {\n             let call_found = match &expr.kind {\n                 // ignore enum and struct constructors\n-                hir::ExprKind::Call(..) => !is_ctor_function(self.cx, expr),\n+                hir::ExprKind::Call(..) => !is_ctor_or_promotable_const_function(self.cx, expr),\n                 hir::ExprKind::MethodCall(..) => true,\n                 _ => false,\n             };\n \n             if call_found {\n-                // don't lint for constant values\n-                let owner_def = self.cx.tcx.hir().get_parent_did(expr.hir_id);\n-                let promotable = self\n-                    .cx\n-                    .tcx\n-                    .rvalue_promotable_map(owner_def)\n-                    .contains(&expr.hir_id.local_id);\n-                if !promotable {\n-                    self.found |= true;\n-                }\n+                self.found |= true;\n             }\n \n             if !self.found {"}, {"sha": "9aca35c91cf2c7f36b0ebe3043fd02f17c0a9213", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3b23092b69a218f300abfd8ee629f4865486e83c/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b23092b69a218f300abfd8ee629f4865486e83c/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=3b23092b69a218f300abfd8ee629f4865486e83c", "patch": "@@ -803,13 +803,15 @@ pub fn is_copy<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: Ty<'tcx>) -> bool {\n }\n \n /// Checks if an expression is constructing a tuple-like enum variant or struct\n-pub fn is_ctor_function(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n+pub fn is_ctor_or_promotable_const_function(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n     if let ExprKind::Call(ref fun, _) = expr.kind {\n         if let ExprKind::Path(ref qp) = fun.kind {\n-            return matches!(\n-                cx.tables.qpath_res(qp, fun.hir_id),\n-                def::Res::Def(DefKind::Variant, ..) | Res::Def(DefKind::Ctor(..), _)\n-            );\n+            let res = cx.tables.qpath_res(qp, fun.hir_id);\n+            return match res {\n+                def::Res::Def(DefKind::Variant, ..) | Res::Def(DefKind::Ctor(..), _) => true,\n+                def::Res::Def(_, def_id) => cx.tcx.is_promotable_const_fn(def_id),\n+                _ => false,\n+            }\n         }\n     }\n     false"}]}