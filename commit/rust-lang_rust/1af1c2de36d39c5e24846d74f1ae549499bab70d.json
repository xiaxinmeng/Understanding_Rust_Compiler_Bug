{"sha": "1af1c2de36d39c5e24846d74f1ae549499bab70d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZjFjMmRlMzZkMzljNWUyNDg0NmQ3NGYxYWU1NDk0OTliYWI3MGQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-10-20T03:02:46Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-10-20T18:49:36Z"}, "message": "rustbuild: Compile rustc with ThinLTO\n\nThis commit enables ThinLTO for the compiler as well as multiple codegen units.\nThis is intended to get the benefits of parallel codegen while also avoiding\nany major loss of perf. Finally this commit is also intended as further testing\nfor #45320 and shaking out bugs.", "tree": {"sha": "88f6e4b9179dc5e113f7ac80a949d25c699f6e23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88f6e4b9179dc5e113f7ac80a949d25c699f6e23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1af1c2de36d39c5e24846d74f1ae549499bab70d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1af1c2de36d39c5e24846d74f1ae549499bab70d", "html_url": "https://github.com/rust-lang/rust/commit/1af1c2de36d39c5e24846d74f1ae549499bab70d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1af1c2de36d39c5e24846d74f1ae549499bab70d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95272a07f1fe3a82497225a4cd0d67080b8ffebf", "url": "https://api.github.com/repos/rust-lang/rust/commits/95272a07f1fe3a82497225a4cd0d67080b8ffebf", "html_url": "https://github.com/rust-lang/rust/commit/95272a07f1fe3a82497225a4cd0d67080b8ffebf"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "16a23eb364a3822b9e7d55d6d1bbd88754e57a70", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1af1c2de36d39c5e24846d74f1ae549499bab70d/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af1c2de36d39c5e24846d74f1ae549499bab70d/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=1af1c2de36d39c5e24846d74f1ae549499bab70d", "patch": "@@ -175,6 +175,9 @@ fn main() {\n         if let Ok(s) = env::var(\"RUSTC_CODEGEN_UNITS\") {\n             cmd.arg(\"-C\").arg(format!(\"codegen-units={}\", s));\n         }\n+        if stage != \"0\" && env::var(\"RUSTC_THINLTO\").is_ok() {\n+            cmd.arg(\"-Ccodegen-units=16\").arg(\"-Zthinlto\");\n+        }\n \n         // Emit save-analysis info.\n         if env::var(\"RUSTC_SAVE_ANALYSIS\") == Ok(\"api\".to_string()) {"}, {"sha": "5891925f7f7989101e2946ce595d4306534d8a23", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1af1c2de36d39c5e24846d74f1ae549499bab70d/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af1c2de36d39c5e24846d74f1ae549499bab70d/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=1af1c2de36d39c5e24846d74f1ae549499bab70d", "patch": "@@ -471,8 +471,6 @@ impl<'a> Builder<'a> {\n              .env(\"RUSTC\", self.out.join(\"bootstrap/debug/rustc\"))\n              .env(\"RUSTC_REAL\", self.rustc(compiler))\n              .env(\"RUSTC_STAGE\", stage.to_string())\n-             .env(\"RUSTC_CODEGEN_UNITS\",\n-                  self.config.rust_codegen_units.to_string())\n              .env(\"RUSTC_DEBUG_ASSERTIONS\",\n                   self.config.rust_debug_assertions.to_string())\n              .env(\"RUSTC_SYSROOT\", self.sysroot(compiler))\n@@ -486,6 +484,10 @@ impl<'a> Builder<'a> {\n              })\n              .env(\"TEST_MIRI\", self.config.test_miri.to_string());\n \n+        if let Some(n) = self.config.rust_codegen_units {\n+            cargo.env(\"RUSTC_CODEGEN_UNITS\", n.to_string());\n+        }\n+\n         if let Some(host_linker) = self.build.linker(compiler.host) {\n             cargo.env(\"RUSTC_HOST_LINKER\", host_linker);\n         }\n@@ -618,6 +620,14 @@ impl<'a> Builder<'a> {\n         // FIXME: cargo bench does not accept `--release`\n         if self.config.rust_optimize && cmd != \"bench\" {\n             cargo.arg(\"--release\");\n+\n+            if mode != Mode::Libstd &&\n+               self.config.rust_codegen_units.is_none() &&\n+               self.build.is_rust_llvm(compiler.host)\n+\n+            {\n+                cargo.env(\"RUSTC_THINLTO\", \"1\");\n+            }\n         }\n         if self.config.locked_deps {\n             cargo.arg(\"--locked\");"}, {"sha": "66e5efcea4e809e9b8ee025604a37a9d6f00a7fc", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1af1c2de36d39c5e24846d74f1ae549499bab70d/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af1c2de36d39c5e24846d74f1ae549499bab70d/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=1af1c2de36d39c5e24846d74f1ae549499bab70d", "patch": "@@ -81,7 +81,7 @@ pub struct Config {\n \n     // rust codegen options\n     pub rust_optimize: bool,\n-    pub rust_codegen_units: u32,\n+    pub rust_codegen_units: Option<u32>,\n     pub rust_debug_assertions: bool,\n     pub rust_debuginfo: bool,\n     pub rust_debuginfo_lines: bool,\n@@ -307,7 +307,6 @@ impl Config {\n         config.submodules = true;\n         config.docs = true;\n         config.rust_rpath = true;\n-        config.rust_codegen_units = 1;\n         config.channel = \"dev\".to_string();\n         config.codegen_tests = true;\n         config.ignore_git = false;\n@@ -470,8 +469,8 @@ impl Config {\n             config.musl_root = rust.musl_root.clone().map(PathBuf::from);\n \n             match rust.codegen_units {\n-                Some(0) => config.rust_codegen_units = num_cpus::get() as u32,\n-                Some(n) => config.rust_codegen_units = n,\n+                Some(0) => config.rust_codegen_units = Some(num_cpus::get() as u32),\n+                Some(n) => config.rust_codegen_units = Some(n),\n                 None => {}\n             }\n         }"}]}