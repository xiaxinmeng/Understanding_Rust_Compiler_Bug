{"sha": "6f13708299c22cf8450e239c4ab06aada2d1cf07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMTM3MDgyOTljMjJjZjg0NTBlMjM5YzRhYjA2YWFkYTJkMWNmMDc=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-25T13:08:43Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-26T21:34:25Z"}, "message": "resolve: Suggest `crate::` for resolving ambiguities when appropriate\n\nMore precise spans for ambiguities from macros", "tree": {"sha": "7d5e2d5abc590543281967971a4e67de8a0b37fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d5e2d5abc590543281967971a4e67de8a0b37fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f13708299c22cf8450e239c4ab06aada2d1cf07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f13708299c22cf8450e239c4ab06aada2d1cf07", "html_url": "https://github.com/rust-lang/rust/commit/6f13708299c22cf8450e239c4ab06aada2d1cf07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f13708299c22cf8450e239c4ab06aada2d1cf07/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1862b419616d1198b89f57d4e1416f85d4d2101", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1862b419616d1198b89f57d4e1416f85d4d2101", "html_url": "https://github.com/rust-lang/rust/commit/d1862b419616d1198b89f57d4e1416f85d4d2101"}], "stats": {"total": 161, "additions": 111, "deletions": 50}, "files": [{"sha": "cbf82a80266678f72d33557103e7ab90de619c92", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -1292,6 +1292,7 @@ impl AmbiguityKind {\n /// Miscellaneous bits of metadata for better ambiguity error reporting.\n #[derive(Clone, Copy, PartialEq)]\n enum AmbiguityErrorMisc {\n+    SuggestCrate,\n     SuggestSelf,\n     FromPrelude,\n     None,\n@@ -4870,12 +4871,21 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                                         `{ident}` to disambiguate\", ident = ident))\n             }\n             if b.is_extern_crate() && ident.span.rust_2018() {\n-                help_msgs.push(format!(\"use `::{ident}` to refer to this {thing} unambiguously\",\n-                                       ident = ident, thing = b.descr()))\n-            }\n-            if misc == AmbiguityErrorMisc::SuggestSelf {\n-                help_msgs.push(format!(\"use `self::{ident}` to refer to this {thing} unambiguously\",\n-                                       ident = ident, thing = b.descr()))\n+                help_msgs.push(format!(\n+                    \"use `::{ident}` to refer to this {thing} unambiguously\",\n+                    ident = ident, thing = b.descr(),\n+                ))\n+            }\n+            if misc == AmbiguityErrorMisc::SuggestCrate {\n+                help_msgs.push(format!(\n+                    \"use `crate::{ident}` to refer to this {thing} unambiguously\",\n+                    ident = ident, thing = b.descr(),\n+                ))\n+            } else if misc == AmbiguityErrorMisc::SuggestSelf {\n+                help_msgs.push(format!(\n+                    \"use `self::{ident}` to refer to this {thing} unambiguously\",\n+                    ident = ident, thing = b.descr(),\n+                ))\n             }\n \n             if b.span.is_dummy() {"}, {"sha": "5db3efee9f6a15ebc724b313998b73a9eea77f10", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -42,7 +42,7 @@ use syntax_pos::{Span, DUMMY_SP};\n use errors::Applicability;\n \n use std::cell::Cell;\n-use std::mem;\n+use std::{mem, ptr};\n use rustc_data_structures::sync::Lrc;\n \n #[derive(Clone, Debug)]\n@@ -594,11 +594,12 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n \n         bitflags! {\n             struct Flags: u8 {\n-                const MACRO_RULES       = 1 << 0;\n-                const MODULE            = 1 << 1;\n-                const PRELUDE           = 1 << 2;\n-                const MISC_SUGGEST_SELF = 1 << 3;\n-                const MISC_FROM_PRELUDE = 1 << 4;\n+                const MACRO_RULES        = 1 << 0;\n+                const MODULE             = 1 << 1;\n+                const PRELUDE            = 1 << 2;\n+                const MISC_SUGGEST_CRATE = 1 << 3;\n+                const MISC_SUGGEST_SELF  = 1 << 4;\n+                const MISC_FROM_PRELUDE  = 1 << 5;\n             }\n         }\n \n@@ -684,7 +685,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                         path_span,\n                     );\n                     match binding {\n-                        Ok(binding) => Ok((binding, Flags::MODULE)),\n+                        Ok(binding) => Ok((binding, Flags::MODULE | Flags::MISC_SUGGEST_CRATE)),\n                         Err((Determinacy::Undetermined, Weak::No)) =>\n                             return Err(Determinacy::determined(force)),\n                         Err((Determinacy::Undetermined, Weak::Yes)) =>\n@@ -706,7 +707,9 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                     self.current_module = orig_current_module;\n                     match binding {\n                         Ok(binding) => {\n-                            let misc_flags = if module.is_normal() {\n+                            let misc_flags = if ptr::eq(module, self.graph_root) {\n+                                Flags::MISC_SUGGEST_CRATE\n+                            } else if module.is_normal() {\n                                 Flags::MISC_SUGGEST_SELF\n                             } else {\n                                 Flags::empty()\n@@ -857,7 +860,9 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                                 None\n                             };\n                             if let Some(kind) = ambiguity_error_kind {\n-                                let misc = |f: Flags| if f.contains(Flags::MISC_SUGGEST_SELF) {\n+                                let misc = |f: Flags| if f.contains(Flags::MISC_SUGGEST_CRATE) {\n+                                    AmbiguityErrorMisc::SuggestCrate\n+                                } else if f.contains(Flags::MISC_SUGGEST_SELF) {\n                                     AmbiguityErrorMisc::SuggestSelf\n                                 } else if f.contains(Flags::MISC_FROM_PRELUDE) {\n                                     AmbiguityErrorMisc::FromPrelude\n@@ -866,7 +871,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                                 };\n                                 self.ambiguity_errors.push(AmbiguityError {\n                                     kind,\n-                                    ident,\n+                                    ident: orig_ident,\n                                     b1: innermost_binding,\n                                     b2: binding,\n                                     misc1: misc(innermost_flags),"}, {"sha": "d288d7295120cfc11aea7ef3f51642e22098b3dd", "filename": "src/test/ui-fulldeps/custom-derive/helper-attr-blocked-by-import-ambig.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fhelper-attr-blocked-by-import-ambig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fhelper-attr-blocked-by-import-ambig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fhelper-attr-blocked-by-import-ambig.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -14,7 +14,7 @@ note: `helper` could also refer to the attribute macro imported here\n    |\n LL | use plugin::helper;\n    |     ^^^^^^^^^^^^^^\n-   = help: use `self::helper` to refer to this attribute macro unambiguously\n+   = help: use `crate::helper` to refer to this attribute macro unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "79dc922b9db2cc8e95ea9519eb214f246489c9dc", "filename": "src/test/ui-fulldeps/proc-macro/ambiguous-builtin-attrs.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fambiguous-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fambiguous-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fambiguous-builtin-attrs.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -16,7 +16,7 @@ note: `repr` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::repr` to refer to this attribute macro unambiguously\n+   = help: use `crate::repr` to refer to this attribute macro unambiguously\n \n error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n   --> $DIR/ambiguous-builtin-attrs.rs:11:19\n@@ -30,7 +30,7 @@ note: `repr` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::repr` to refer to this attribute macro unambiguously\n+   = help: use `crate::repr` to refer to this attribute macro unambiguously\n \n error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n   --> $DIR/ambiguous-builtin-attrs.rs:20:34\n@@ -44,7 +44,7 @@ note: `repr` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::repr` to refer to this attribute macro unambiguously\n+   = help: use `crate::repr` to refer to this attribute macro unambiguously\n \n error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n   --> $DIR/ambiguous-builtin-attrs.rs:22:11\n@@ -58,7 +58,7 @@ note: `repr` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::repr` to refer to this attribute macro unambiguously\n+   = help: use `crate::repr` to refer to this attribute macro unambiguously\n \n error[E0659]: `feature` is ambiguous (built-in attribute vs any other name)\n   --> $DIR/ambiguous-builtin-attrs.rs:3:4\n@@ -72,7 +72,7 @@ note: `feature` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::feature` to refer to this attribute macro unambiguously\n+   = help: use `crate::feature` to refer to this attribute macro unambiguously\n \n error: aborting due to 6 previous errors\n "}, {"sha": "cc50fefc46453d393defc7bfb7ba3dbc691deed7", "filename": "src/test/ui-fulldeps/proc-macro/derive-helper-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowing.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -14,7 +14,7 @@ note: `my_attr` could also refer to the attribute macro imported here\n    |\n LL | use derive_helper_shadowing::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: use `self::my_attr` to refer to this attribute macro unambiguously\n+   = help: use `crate::my_attr` to refer to this attribute macro unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "53ec3867f0110966c1fbdd82e70782489383ed7d", "filename": "src/test/ui/editions/edition-imports-virtual-2015-ambiguity.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-ambiguity.rs?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -1,8 +1,6 @@\n // edition:2018\n // compile-flags:--extern edition_imports_2015\n // aux-build:edition-imports-2015.rs\n-// error-pattern: `Ambiguous` is ambiguous\n-// error-pattern: `edition_imports_2015` is ambiguous\n \n mod edition_imports_2015 {\n     pub struct Path;\n@@ -14,7 +12,8 @@ mod check {\n     pub struct Ambiguous {}\n \n     fn check() {\n-        edition_imports_2015::gen_ambiguous!();\n+        edition_imports_2015::gen_ambiguous!(); //~ ERROR `Ambiguous` is ambiguous\n+                                                //~| ERROR `edition_imports_2015` is ambiguous\n     }\n }\n "}, {"sha": "ac2bf21c5c0ba95ee157ebd0ed9fc939ee9d3451", "filename": "src/test/ui/editions/edition-imports-virtual-2015-ambiguity.stderr", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-ambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-ambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-ambiguity.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -1,36 +1,39 @@\n error[E0659]: `Ambiguous` is ambiguous (name vs any other name during import resolution)\n-  --> <::edition_imports_2015::gen_ambiguous macros>:1:15\n+  --> $DIR/edition-imports-virtual-2015-ambiguity.rs:15:9\n    |\n-LL | (  ) => { use Ambiguous ; type A = :: edition_imports_2015 :: Path ; }\n-   |               ^^^^^^^^^ ambiguous name\n+LL |         edition_imports_2015::gen_ambiguous!(); //~ ERROR `Ambiguous` is ambiguous\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ambiguous name\n    |\n note: `Ambiguous` could refer to the struct defined here\n-  --> $DIR/edition-imports-virtual-2015-ambiguity.rs:11:1\n+  --> $DIR/edition-imports-virtual-2015-ambiguity.rs:9:1\n    |\n LL | pub struct Ambiguous {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n+   = help: use `crate::Ambiguous` to refer to this struct unambiguously\n note: `Ambiguous` could also refer to the struct defined here\n-  --> $DIR/edition-imports-virtual-2015-ambiguity.rs:14:5\n+  --> $DIR/edition-imports-virtual-2015-ambiguity.rs:12:5\n    |\n LL |     pub struct Ambiguous {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use `self::Ambiguous` to refer to this struct unambiguously\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error[E0659]: `edition_imports_2015` is ambiguous (name in the crate root vs extern crate during absolute path resolution)\n-  --> <::edition_imports_2015::gen_ambiguous macros>:1:39\n+  --> $DIR/edition-imports-virtual-2015-ambiguity.rs:15:9\n    |\n-LL | (  ) => { use Ambiguous ; type A = :: edition_imports_2015 :: Path ; }\n-   |                                       ^^^^^^^^^^^^^^^^^^^^ ambiguous name\n+LL |         edition_imports_2015::gen_ambiguous!(); //~ ERROR `Ambiguous` is ambiguous\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ambiguous name\n    |\n    = note: `edition_imports_2015` could refer to an extern crate passed with `--extern`\n-   = help: use `::edition_imports_2015` to refer to this extern crate unambiguously\n note: `edition_imports_2015` could also refer to the module defined here\n-  --> $DIR/edition-imports-virtual-2015-ambiguity.rs:7:1\n+  --> $DIR/edition-imports-virtual-2015-ambiguity.rs:5:1\n    |\n LL | / mod edition_imports_2015 {\n LL | |     pub struct Path;\n LL | | }\n    | |_^\n+   = help: use `crate::edition_imports_2015` to refer to this module unambiguously\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: aborting due to 2 previous errors\n "}, {"sha": "37633c7a4415f0579542640f9629b71c1fd6c199", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -43,6 +43,7 @@ mod inner2 {\n \n fn main() {\n     panic!(); //~ ERROR `panic` is ambiguous\n+              //~| ERROR `panic` is ambiguous\n }\n \n mod inner3 {"}, {"sha": "1978648e206f123c5ef08f04145ded69f1f0fc7d", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.stderr", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -22,7 +22,7 @@ LL | use inner1::*;\n    = help: consider adding an explicit import of `exported` to disambiguate\n \n error[E0659]: `include` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n-  --> $DIR/local-modularized-tricky-fail-1.rs:56:1\n+  --> $DIR/local-modularized-tricky-fail-1.rs:57:1\n    |\n LL | include!(); //~ ERROR `include` is ambiguous\n    | ^^^^^^^ ambiguous name\n@@ -38,7 +38,7 @@ LL | |     }\n ...\n LL |       define_include!();\n    |       ------------------ in this macro invocation\n-   = help: use `self::include` to refer to this macro unambiguously\n+   = help: use `crate::include` to refer to this macro unambiguously\n \n error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n   --> $DIR/local-modularized-tricky-fail-1.rs:45:5\n@@ -57,13 +57,13 @@ LL | |     }\n ...\n LL |       define_panic!();\n    |       ---------------- in this macro invocation\n-   = help: use `self::panic` to refer to this macro unambiguously\n+   = help: use `crate::panic` to refer to this macro unambiguously\n \n error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n-  --> <::std::macros::panic macros>:1:13\n+  --> $DIR/local-modularized-tricky-fail-1.rs:45:5\n    |\n-LL | (  ) => ( { panic ! ( \"explicit panic\" ) } ) ; ( $ msg : expr ) => (\n-   |             ^^^^^ ambiguous name\n+LL |     panic!(); //~ ERROR `panic` is ambiguous\n+   |     ^^^^^^^^^ ambiguous name\n    |\n    = note: `panic` could refer to a macro from prelude\n note: `panic` could also refer to the macro defined here\n@@ -76,7 +76,8 @@ LL | |     }\n ...\n LL |       define_panic!();\n    |       ---------------- in this macro invocation\n-   = help: use `self::panic` to refer to this macro unambiguously\n+   = help: use `crate::panic` to refer to this macro unambiguously\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: aborting due to 4 previous errors\n "}, {"sha": "3f481b0cfb0df95e92e3e9099c51acf6f0aca186", "filename": "src/test/ui/imports/macro-paths.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -34,7 +34,7 @@ LL | / pub mod baz {\n LL | |     pub use two_macros::m;\n LL | | }\n    | |_^\n-   = help: use `self::baz` to refer to this module unambiguously\n+   = help: use `crate::baz` to refer to this module unambiguously\n \n error: aborting due to 2 previous errors\n "}, {"sha": "9d61799713b043c99ffbc68b50b5fd0cd63c1f0a", "filename": "src/test/ui/macros/restricted-shadowing-legacy.stderr", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -3,6 +3,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |             m!(); //~ ERROR `m` is ambiguous\n    |             ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -26,6 +29,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } } //~ ERROR `m` is ambiguous\n    |                                          ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -49,6 +55,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |         m!(); //~ ERROR `m` is ambiguous\n    |         ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -72,6 +81,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |         m!(); //~ ERROR `m` is ambiguous\n    |         ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -95,6 +107,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |             m!(); //~ ERROR `m` is ambiguous\n    |             ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -118,6 +133,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } } //~ ERROR `m` is ambiguous\n    |                                          ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -141,6 +159,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |         m!(); //~ ERROR `m` is ambiguous\n    |         ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -164,6 +185,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } } //~ ERROR `m` is ambiguous\n    |                                          ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9"}, {"sha": "398a7660d3093b2fd912d064e5ab4be1620159fa", "filename": "src/test/ui/macros/restricted-shadowing-modern.stderr", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -3,6 +3,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |                 m!(); //~ ERROR `m` is ambiguous\n    |                 ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -26,6 +29,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |             macro gen_invoc() { m!() } //~ ERROR `m` is ambiguous\n    |                                 ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -49,6 +55,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |             m!(); //~ ERROR `m` is ambiguous\n    |             ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -72,6 +81,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |             m!(); //~ ERROR `m` is ambiguous\n    |             ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -95,6 +107,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |                 m!(); //~ ERROR `m` is ambiguous\n    |                 ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -118,6 +133,9 @@ error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name\n    |\n LL |             macro gen_invoc() { m!() } //~ ERROR `m` is ambiguous\n    |                                 ^ ambiguous name\n+...\n+LL | include!();\n+   | ----------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9"}, {"sha": "a9e6da8f211b31d4ea5b6d080d5ea6e6132d5e4e", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -16,7 +16,7 @@ LL | |         }\n ...\n LL |   m!();\n    |   ----- in this macro invocation\n-   = help: use `self::std` to refer to this module unambiguously\n+   = help: use `crate::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "b1feb82fba90d83f0f8f2be97db14455b69e2f7b", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -13,7 +13,7 @@ LL | / mod std {\n LL | |     pub struct io;\n LL | | }\n    | |_^\n-   = help: use `self::std` to refer to this module unambiguously\n+   = help: use `crate::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "0088296b1a4717217c8bfcca034ae2b978d62a30", "filename": "src/test/ui/rust-2018/uniform-paths/block-scoped-shadow-nested.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -16,7 +16,7 @@ LL | / mod sub {\n LL | |     pub fn bar() {}\n LL | | }\n    | |_^\n-   = help: use `self::sub` to refer to this module unambiguously\n+   = help: use `crate::sub` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "213f723385b1c082455ca512d0371c978ea65a78", "filename": "src/test/ui/rust-2018/uniform-paths/block-scoped-shadow.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f13708299c22cf8450e239c4ab06aada2d1cf07/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr?ref=6f13708299c22cf8450e239c4ab06aada2d1cf07", "patch": "@@ -14,7 +14,7 @@ note: `Foo` could also refer to the enum defined here\n    |\n LL | enum Foo {}\n    | ^^^^^^^^^^^\n-   = help: use `self::Foo` to refer to this enum unambiguously\n+   = help: use `crate::Foo` to refer to this enum unambiguously\n \n error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n   --> $DIR/block-scoped-shadow.rs:26:9\n@@ -32,7 +32,7 @@ note: `std` could also refer to the struct defined here\n    |\n LL | struct std;\n    | ^^^^^^^^^^^\n-   = help: use `self::std` to refer to this struct unambiguously\n+   = help: use `crate::std` to refer to this struct unambiguously\n \n error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n   --> $DIR/block-scoped-shadow.rs:26:9\n@@ -50,7 +50,7 @@ note: `std` could also refer to the unit struct defined here\n    |\n LL | struct std;\n    | ^^^^^^^^^^^\n-   = help: use `self::std` to refer to this unit struct unambiguously\n+   = help: use `crate::std` to refer to this unit struct unambiguously\n \n error: aborting due to 3 previous errors\n "}]}