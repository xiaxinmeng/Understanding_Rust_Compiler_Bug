{"sha": "96247017fad9b216259cfa64a7762a816854dcd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MjQ3MDE3ZmFkOWIyMTYyNTljZmE2NGE3NzYyYTgxNjg1NGRjZDc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-29T15:08:46Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-04T11:20:04Z"}, "message": "Move windows_subsystem field from CodegenResults to CrateInfo", "tree": {"sha": "7a0c4b8b2736bc66b5e2a3aa5b2fa12534899937", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a0c4b8b2736bc66b5e2a3aa5b2fa12534899937"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96247017fad9b216259cfa64a7762a816854dcd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96247017fad9b216259cfa64a7762a816854dcd7", "html_url": "https://github.com/rust-lang/rust/commit/96247017fad9b216259cfa64a7762a816854dcd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96247017fad9b216259cfa64a7762a816854dcd7/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8ed66be6b3025073c24028375345d90633b6ced", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ed66be6b3025073c24028375345d90633b6ced", "html_url": "https://github.com/rust-lang/rust/commit/f8ed66be6b3025073c24028375345d90633b6ced"}], "stats": {"total": 49, "additions": 17, "deletions": 32}, "files": [{"sha": "2270b18163b4c4e0e8695940ddca359d23544672", "filename": "compiler/rustc_codegen_cranelift/src/driver/aot.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs?ref=96247017fad9b216259cfa64a7762a816854dcd7", "patch": "@@ -177,21 +177,6 @@ pub(crate) fn run_aot(\n     metadata: EncodedMetadata,\n     need_metadata_module: bool,\n ) -> Box<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>)> {\n-    use rustc_span::symbol::sym;\n-\n-    let crate_attrs = tcx.hir().attrs(rustc_hir::CRATE_HIR_ID);\n-    let subsystem = tcx.sess.first_attr_value_str_by_name(crate_attrs, sym::windows_subsystem);\n-    let windows_subsystem = subsystem.map(|subsystem| {\n-        if subsystem != sym::windows && subsystem != sym::console {\n-            tcx.sess.fatal(&format!(\n-                \"invalid windows subsystem `{}`, only \\\n-                                    `windows` and `console` are allowed\",\n-                subsystem\n-            ));\n-        }\n-        subsystem.to_string()\n-    });\n-\n     let mut work_products = FxHashMap::default();\n \n     let cgus = if tcx.sess.opts.output_types.should_codegen() {\n@@ -312,7 +297,6 @@ pub(crate) fn run_aot(\n             allocator_module,\n             metadata_module,\n             metadata,\n-            windows_subsystem,\n             linker_info: LinkerInfo::new(tcx, crate::target_triple(tcx.sess).to_string()),\n             crate_info: CrateInfo::new(tcx),\n         },"}, {"sha": "c056156109fdb8b68804c54dd0944616dc73fde5", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=96247017fad9b216259cfa64a7762a816854dcd7", "patch": "@@ -1686,7 +1686,7 @@ fn linker_with_args<'a, B: ArchiveBuilder<'a>>(\n \n     // OBJECT-FILES-NO, AUDIT-ORDER\n     if crate_type == CrateType::Executable && sess.target.is_like_windows {\n-        if let Some(ref s) = codegen_results.windows_subsystem {\n+        if let Some(ref s) = codegen_results.crate_info.windows_subsystem {\n             cmd.subsystem(s);\n         }\n     }"}, {"sha": "4791558f76f7b9fb2cfae08ba4764e92e658699a", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=96247017fad9b216259cfa64a7762a816854dcd7", "patch": "@@ -430,17 +430,6 @@ pub fn start_async_codegen<B: ExtraBackendMethods>(\n     let crate_attrs = tcx.hir().attrs(rustc_hir::CRATE_HIR_ID);\n     let no_builtins = tcx.sess.contains_name(crate_attrs, sym::no_builtins);\n     let is_compiler_builtins = tcx.sess.contains_name(crate_attrs, sym::compiler_builtins);\n-    let subsystem = tcx.sess.first_attr_value_str_by_name(crate_attrs, sym::windows_subsystem);\n-    let windows_subsystem = subsystem.map(|subsystem| {\n-        if subsystem != sym::windows && subsystem != sym::console {\n-            tcx.sess.fatal(&format!(\n-                \"invalid windows subsystem `{}`, only \\\n-                                     `windows` and `console` are allowed\",\n-                subsystem\n-            ));\n-        }\n-        subsystem.to_string()\n-    });\n \n     let linker_info = LinkerInfo::new(tcx, target_cpu);\n     let crate_info = CrateInfo::new(tcx);\n@@ -474,7 +463,6 @@ pub fn start_async_codegen<B: ExtraBackendMethods>(\n         backend,\n         crate_name,\n         metadata,\n-        windows_subsystem,\n         linker_info,\n         crate_info,\n \n@@ -1814,7 +1802,6 @@ pub struct OngoingCodegen<B: ExtraBackendMethods> {\n     pub backend: B,\n     pub crate_name: Symbol,\n     pub metadata: EncodedMetadata,\n-    pub windows_subsystem: Option<String>,\n     pub linker_info: LinkerInfo,\n     pub crate_info: CrateInfo,\n     pub coordinator_send: Sender<Box<dyn Any + Send>>,\n@@ -1859,7 +1846,6 @@ impl<B: ExtraBackendMethods> OngoingCodegen<B> {\n             CodegenResults {\n                 crate_name: self.crate_name,\n                 metadata: self.metadata,\n-                windows_subsystem: self.windows_subsystem,\n                 linker_info: self.linker_info,\n                 crate_info: self.crate_info,\n "}, {"sha": "c9a9bedb47e8a5451aeab4ca111180e96204414f", "filename": "compiler/rustc_codegen_ssa/src/base.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs?ref=96247017fad9b216259cfa64a7762a816854dcd7", "patch": "@@ -30,6 +30,7 @@ use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_session::config::{self, EntryFnType};\n use rustc_session::Session;\n+use rustc_span::symbol::sym;\n use rustc_target::abi::{Align, LayoutOf, VariantIdx};\n \n use std::ops::{Deref, DerefMut};\n@@ -755,6 +756,19 @@ impl<B: ExtraBackendMethods> Drop for AbortCodegenOnDrop<B> {\n \n impl CrateInfo {\n     pub fn new(tcx: TyCtxt<'_>) -> CrateInfo {\n+        let crate_attrs = tcx.hir().attrs(rustc_hir::CRATE_HIR_ID);\n+        let subsystem = tcx.sess.first_attr_value_str_by_name(crate_attrs, sym::windows_subsystem);\n+        let windows_subsystem = subsystem.map(|subsystem| {\n+            if subsystem != sym::windows && subsystem != sym::console {\n+                tcx.sess.fatal(&format!(\n+                    \"invalid windows subsystem `{}`, only \\\n+                                     `windows` and `console` are allowed\",\n+                    subsystem\n+                ));\n+            }\n+            subsystem.to_string()\n+        });\n+\n         let mut info = CrateInfo {\n             panic_runtime: None,\n             compiler_builtins: None,\n@@ -769,6 +783,7 @@ impl CrateInfo {\n             lang_item_to_crate: Default::default(),\n             missing_lang_items: Default::default(),\n             dependency_formats: tcx.dependency_formats(()),\n+            windows_subsystem,\n         };\n         let lang_items = tcx.lang_items();\n "}, {"sha": "35d32130d74ed3e617613e72e773b5fbd91b10f7", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96247017fad9b216259cfa64a7762a816854dcd7/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=96247017fad9b216259cfa64a7762a816854dcd7", "patch": "@@ -141,6 +141,7 @@ pub struct CrateInfo {\n     pub lang_item_to_crate: FxHashMap<LangItem, CrateNum>,\n     pub missing_lang_items: FxHashMap<CrateNum, Vec<LangItem>>,\n     pub dependency_formats: Lrc<Dependencies>,\n+    pub windows_subsystem: Option<String>,\n }\n \n #[derive(Encodable, Decodable)]\n@@ -150,7 +151,6 @@ pub struct CodegenResults {\n     pub allocator_module: Option<CompiledModule>,\n     pub metadata_module: Option<CompiledModule>,\n     pub metadata: rustc_middle::middle::cstore::EncodedMetadata,\n-    pub windows_subsystem: Option<String>,\n     pub linker_info: back::linker::LinkerInfo,\n     pub crate_info: CrateInfo,\n }"}]}