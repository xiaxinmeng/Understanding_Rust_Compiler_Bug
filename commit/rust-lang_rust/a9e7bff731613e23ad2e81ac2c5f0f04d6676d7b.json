{"sha": "a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZTdiZmY3MzE2MTNlMjNhZDJlODFhYzJjNWYwZjA0ZDY2NzZkN2I=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-03-22T01:20:55Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-03-22T01:21:11Z"}, "message": "Remove incorrect uses of NVALGRIND, Close #1435.", "tree": {"sha": "3b80eb4f1aa3aec4a7b1acadbb3752d480eae9f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b80eb4f1aa3aec4a7b1acadbb3752d480eae9f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b", "html_url": "https://github.com/rust-lang/rust/commit/a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44bd8da7fd444c675562718d9a112b591e2a2fa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/44bd8da7fd444c675562718d9a112b591e2a2fa0", "html_url": "https://github.com/rust-lang/rust/commit/44bd8da7fd444c675562718d9a112b591e2a2fa0"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "c35738a51fa4842f98b7ffb31ce7d270ec0722bb", "filename": "mk/platform.mk", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b", "patch": "@@ -17,10 +17,6 @@ CFG_GCCISH_LINK_FLAGS :=\n # embedded into the executable, so use a no-op command.\n CFG_DSYMUTIL := true\n \n-ifeq ($(CFG_VALGRIND),)\n-  CFG_GCCISH_CFLAGS += -DNVALGRIND\n-endif\n-\n ifneq ($(findstring freebsd,$(CFG_OSTYPE)),)\n   CFG_LIB_NAME=lib$(1).so\n   CFG_LIB_GLOB=lib$(1)-*.so"}, {"sha": "0b44575e0f6183cd20804565c00fe4e0c49c81bd", "filename": "src/rt/rust_stack.cpp", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b/src%2Frt%2Frust_stack.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b/src%2Frt%2Frust_stack.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.cpp?ref=a9e7bff731613e23ad2e81ac2c5f0f04d6676d7b", "patch": "@@ -18,15 +18,13 @@ register_valgrind_stack(stk_seg *stk) {\n \n void\n reuse_valgrind_stack(stk_seg *stk, uint8_t *sp) {\n-#ifndef NVALGRIND\n     // Establish that the stack is accessible.  This must be done when reusing\n     // old stack segments, since the act of popping the stack previously\n     // caused valgrind to consider the whole thing inaccessible.\n     assert(sp >= stk->data && sp <= (uint8_t*) stk->end\n \t   && \"Stack pointer must be inside stack segment\");\n     size_t sz = stk->end - (uintptr_t)sp;\n     VALGRIND_MAKE_MEM_UNDEFINED(sp, sz);\n-#endif\n }\n \n void"}]}