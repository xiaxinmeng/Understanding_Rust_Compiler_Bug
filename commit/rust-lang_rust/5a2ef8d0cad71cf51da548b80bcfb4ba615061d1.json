{"sha": "5a2ef8d0cad71cf51da548b80bcfb4ba615061d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMmVmOGQwY2FkNzFjZjUxZGE1NDhiODBiY2ZiNGJhNjE1MDYxZDE=", "commit": {"author": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2021-03-27T09:37:39Z"}, "committer": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2021-03-27T09:37:39Z"}, "message": "Added support for const generics in impl generation", "tree": {"sha": "9b7114d21ca58817759bcd711429b7a445183d58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b7114d21ca58817759bcd711429b7a445183d58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEcPkYW+t8+2SKgl5T2MS9WuTZzE0FAmBe/OMACgkQ2MS9WuTZ\nzE0LmggAwFjYa3H/DFqLmpIcQ98X2xn0Yr9kEbmb6zDHkn/Uz0hD/QqZ9HN05As6\np2xdjCnTX+hBPF3rlGjASb3tM6rSpIHmnODM+W2rX7ZSnTn6/IFW5Gb3g5L3bNaV\n+GDxC3R3njs2tmEehmXUhL3qU2w6a6rLGnENB0TrChS4UhCZJC/Kl0awAmN2RCog\nCSZQm09FjzfBbHZv3rGCl95UVj5+ulJhO33HlAKZSKpvDqDdVKqMijyUlDcypBKm\nQ3TEROH5B8RwDvQOmXCZ45ccLCUpic9ufynh7ilKYLLWzK2BQHHaRZAZ3LkO49NG\nJx4ukV/WEm+1o9x7Jop6m6Fw9rHKHw==\n=MiLD\n-----END PGP SIGNATURE-----", "payload": "tree 9b7114d21ca58817759bcd711429b7a445183d58\nparent 4cb3ecce3ff2573c8473733b2538b32cd899b686\nauthor ivan770 <leshenko.ivan770@gmail.com> 1616837859 +0200\ncommitter ivan770 <leshenko.ivan770@gmail.com> 1616837859 +0200\n\nAdded support for const generics in impl generation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1", "html_url": "https://github.com/rust-lang/rust/commit/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1/comments", "author": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cb3ecce3ff2573c8473733b2538b32cd899b686", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cb3ecce3ff2573c8473733b2538b32cd899b686", "html_url": "https://github.com/rust-lang/rust/commit/4cb3ecce3ff2573c8473733b2538b32cd899b686"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "fd2e250bc390f3e3d44191b24f9b0e895229132f", "filename": "crates/ide_assists/src/handlers/generate_impl.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs?ref=5a2ef8d0cad71cf51da548b80bcfb4ba615061d1", "patch": "@@ -69,6 +69,17 @@ mod tests {\n             \"struct Foo<'a, T: Foo<'a>> {$0}\",\n             \"struct Foo<'a, T: Foo<'a>> {}\\n\\nimpl<'a, T: Foo<'a>> Foo<'a, T> {\\n    $0\\n}\",\n         );\n+        check_assist(\n+            generate_impl,\n+            r#\"\n+            struct MyOwnArray<T, const S: usize> {}$0\"#,\n+            r#\"\n+            struct MyOwnArray<T, const S: usize> {}\n+\n+            impl<T, const S: usize> MyOwnArray<T, S> {\n+                $0\n+            }\"#,\n+        );\n         check_assist(\n             generate_impl,\n             r#\"\n@@ -114,11 +125,11 @@ mod tests {\n         check_assist(\n             generate_impl,\n             r#\"\n-            struct Defaulted<'a, 'b: 'a, T: Debug + Clone + 'a + 'b = String> {}$0\"#,\n+            struct Defaulted<'a, 'b: 'a, T: Debug + Clone + 'a + 'b = String, const S: usize> {}$0\"#,\n             r#\"\n-            struct Defaulted<'a, 'b: 'a, T: Debug + Clone + 'a + 'b = String> {}\n+            struct Defaulted<'a, 'b: 'a, T: Debug + Clone + 'a + 'b = String, const S: usize> {}\n \n-            impl<'a, 'b: 'a, T: Debug + Clone + 'a + 'b> Defaulted<'a, 'b, T> {\n+            impl<'a, 'b: 'a, T: Debug + Clone + 'a + 'b, const S: usize> Defaulted<'a, 'b, T, S> {\n                 $0\n             }\"#,\n         );"}, {"sha": "728d174db719cfa85408116ddd920b589f4e1548", "filename": "crates/ide_assists/src/utils.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1/crates%2Fide_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a2ef8d0cad71cf51da548b80bcfb4ba615061d1/crates%2Fide_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils.rs?ref=5a2ef8d0cad71cf51da548b80bcfb4ba615061d1", "patch": "@@ -434,7 +434,8 @@ fn generate_impl_text_inner(adt: &ast::Adt, trait_text: Option<&str>, code: &str\n             }\n             buf\n         });\n-        let generics = lifetimes.chain(type_params).format(\", \");\n+        let const_params = generic_params.const_params().map(|t| t.syntax().to_string());\n+        let generics = lifetimes.chain(type_params).chain(const_params).format(\", \");\n         format_to!(buf, \"<{}>\", generics);\n     }\n     buf.push(' ');\n@@ -452,7 +453,11 @@ fn generate_impl_text_inner(adt: &ast::Adt, trait_text: Option<&str>, code: &str\n             .type_params()\n             .filter_map(|it| it.name())\n             .map(|it| SmolStr::from(it.text()));\n-        format_to!(buf, \"<{}>\", lifetime_params.chain(type_params).format(\", \"))\n+        let const_params = generic_params\n+            .const_params()\n+            .filter_map(|it| it.name())\n+            .map(|it| SmolStr::from(it.text()));\n+        format_to!(buf, \"<{}>\", lifetime_params.chain(type_params).chain(const_params).format(\", \"))\n     }\n \n     match adt.where_clause() {"}]}