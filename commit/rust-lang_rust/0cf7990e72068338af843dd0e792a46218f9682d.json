{"sha": "0cf7990e72068338af843dd0e792a46218f9682d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZjc5OTBlNzIwNjgzMzhhZjg0M2RkMGU3OTJhNDYyMThmOTY4MmQ=", "commit": {"author": {"name": "Enrico Schmitz", "email": "enrico@schmitz.link", "date": "2017-03-01T14:33:32Z"}, "committer": {"name": "Enrico Schmitz", "email": "es@mdtm.de", "date": "2017-03-01T14:33:32Z"}, "message": "Also handle ConstFloat::F32 in is_allowed", "tree": {"sha": "4e0dbad76a30d754d39b31c273c0535314cd3489", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e0dbad76a30d754d39b31c273c0535314cd3489"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cf7990e72068338af843dd0e792a46218f9682d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cf7990e72068338af843dd0e792a46218f9682d", "html_url": "https://github.com/rust-lang/rust/commit/0cf7990e72068338af843dd0e792a46218f9682d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cf7990e72068338af843dd0e792a46218f9682d/comments", "author": {"login": "ensch", "id": 180274, "node_id": "MDQ6VXNlcjE4MDI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/180274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ensch", "html_url": "https://github.com/ensch", "followers_url": "https://api.github.com/users/ensch/followers", "following_url": "https://api.github.com/users/ensch/following{/other_user}", "gists_url": "https://api.github.com/users/ensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ensch/subscriptions", "organizations_url": "https://api.github.com/users/ensch/orgs", "repos_url": "https://api.github.com/users/ensch/repos", "events_url": "https://api.github.com/users/ensch/events{/privacy}", "received_events_url": "https://api.github.com/users/ensch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ensch", "id": 180274, "node_id": "MDQ6VXNlcjE4MDI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/180274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ensch", "html_url": "https://github.com/ensch", "followers_url": "https://api.github.com/users/ensch/followers", "following_url": "https://api.github.com/users/ensch/following{/other_user}", "gists_url": "https://api.github.com/users/ensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ensch/subscriptions", "organizations_url": "https://api.github.com/users/ensch/orgs", "repos_url": "https://api.github.com/users/ensch/repos", "events_url": "https://api.github.com/users/ensch/events{/privacy}", "received_events_url": "https://api.github.com/users/ensch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ba3a713a13714cf03043b84c94f61b1447f0c60", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba3a713a13714cf03043b84c94f61b1447f0c60", "html_url": "https://github.com/rust-lang/rust/commit/7ba3a713a13714cf03043b84c94f61b1447f0c60"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "3fb9101076dac9ad1fd29550639261db9f5501fd", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0cf7990e72068338af843dd0e792a46218f9682d/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cf7990e72068338af843dd0e792a46218f9682d/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=0cf7990e72068338af843dd0e792a46218f9682d", "patch": "@@ -362,16 +362,28 @@ fn is_allowed(cx: &LateContext, expr: &Expr) -> bool {\n     let res = ConstContext::with_tables(cx.tcx, cx.tables).eval(expr);\n     if let Ok(ConstVal::Float(val)) = res {\n         use std::cmp::Ordering;\n+        match val {\n+            val @ ConstFloat::F32(_) => {\n+                let zero = ConstFloat::F32(0.0);\n \n-        let zero = ConstFloat::F64(0.0);\n+                let infinity = ConstFloat::F32(::std::f32::INFINITY);\n \n-        let infinity = ConstFloat::F64(::std::f64::INFINITY);\n+                let neg_infinity = ConstFloat::F32(::std::f32::NEG_INFINITY);\n \n+                val.try_cmp(zero) == Ok(Ordering::Equal) || val.try_cmp(infinity) == Ok(Ordering::Equal) ||\n+                val.try_cmp(neg_infinity) == Ok(Ordering::Equal)\n+            },\n+            val @ ConstFloat::F64(_) => {\n+                let zero = ConstFloat::F64(0.0);\n+\n+                let infinity = ConstFloat::F64(::std::f64::INFINITY);\n \n-        let neg_infinity = ConstFloat::F64(::std::f64::NEG_INFINITY);\n+                let neg_infinity = ConstFloat::F64(::std::f64::NEG_INFINITY);\n \n-        val.try_cmp(zero) == Ok(Ordering::Equal) || val.try_cmp(infinity) == Ok(Ordering::Equal) ||\n-        val.try_cmp(neg_infinity) == Ok(Ordering::Equal)\n+                val.try_cmp(zero) == Ok(Ordering::Equal) || val.try_cmp(infinity) == Ok(Ordering::Equal) ||\n+                val.try_cmp(neg_infinity) == Ok(Ordering::Equal)\n+            }\n+        }\n     } else {\n         false\n     }"}]}