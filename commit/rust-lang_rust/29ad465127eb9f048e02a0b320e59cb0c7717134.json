{"sha": "29ad465127eb9f048e02a0b320e59cb0c7717134", "node_id": "C_kwDOAAsO6NoAKDI5YWQ0NjUxMjdlYjlmMDQ4ZTAyYTBiMzIwZTU5Y2IwYzc3MTcxMzQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-17T18:31:41Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-17T18:40:22Z"}, "message": "Fix float to int compiler builtin call abi", "tree": {"sha": "87c285b75d3803cfab11a02eec1b6298c33d0ea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87c285b75d3803cfab11a02eec1b6298c33d0ea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29ad465127eb9f048e02a0b320e59cb0c7717134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29ad465127eb9f048e02a0b320e59cb0c7717134", "html_url": "https://github.com/rust-lang/rust/commit/29ad465127eb9f048e02a0b320e59cb0c7717134", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29ad465127eb9f048e02a0b320e59cb0c7717134/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6a0d3716b3ffa5be96c161bb4d82ea007463021", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a0d3716b3ffa5be96c161bb4d82ea007463021", "html_url": "https://github.com/rust-lang/rust/commit/c6a0d3716b3ffa5be96c161bb4d82ea007463021"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "032d1151041dbb45b28442075d464a7edae1bb6f", "filename": "src/cast.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/29ad465127eb9f048e02a0b320e59cb0c7717134/src%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ad465127eb9f048e02a0b320e59cb0c7717134/src%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcast.rs?ref=29ad465127eb9f048e02a0b320e59cb0c7717134", "patch": "@@ -96,12 +96,29 @@ pub(crate) fn clif_int_or_float_cast(\n                 },\n             );\n \n-            fx.lib_call(\n-                &name,\n-                vec![AbiParam::new(from_ty)],\n-                vec![AbiParam::new(types::I128)],\n-                &[from],\n-            )[0]\n+            if fx.tcx.sess.target.is_like_windows {\n+                let ret = fx.lib_call(\n+                    &name,\n+                    vec![AbiParam::new(from_ty)],\n+                    vec![AbiParam::new(types::I64X2)],\n+                    &[from],\n+                )[0];\n+                // FIXME use bitcast instead of store to get from i64x2 to i128\n+                let stack_slot = fx.bcx.create_sized_stack_slot(StackSlotData {\n+                    kind: StackSlotKind::ExplicitSlot,\n+                    size: 16,\n+                });\n+                let ret_ptr = Pointer::stack_slot(stack_slot);\n+                ret_ptr.store(fx, ret, MemFlags::trusted());\n+                ret_ptr.load(fx, types::I128, MemFlags::trusted())\n+            } else {\n+                fx.lib_call(\n+                    &name,\n+                    vec![AbiParam::new(from_ty)],\n+                    vec![AbiParam::new(types::I128)],\n+                    &[from],\n+                )[0]\n+            }\n         } else if to_ty == types::I8 || to_ty == types::I16 {\n             // FIXME implement fcvt_to_*int_sat.i8/i16\n             let val = if to_signed {"}]}