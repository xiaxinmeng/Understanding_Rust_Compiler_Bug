{"sha": "71f058499a0e551d2b8deb5d098bdb04387dc021", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZjA1ODQ5OWEwZTU1MWQyYjhkZWI1ZDA5OGJkYjA0Mzg3ZGMwMjE=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-03-25T01:04:29Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-25T18:01:52Z"}, "message": "Refactor ast.local to make room for initialization via recv", "tree": {"sha": "4e14a52c8c0092f332c3c9477b85b97799310244", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e14a52c8c0092f332c3c9477b85b97799310244"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71f058499a0e551d2b8deb5d098bdb04387dc021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71f058499a0e551d2b8deb5d098bdb04387dc021", "html_url": "https://github.com/rust-lang/rust/commit/71f058499a0e551d2b8deb5d098bdb04387dc021", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71f058499a0e551d2b8deb5d098bdb04387dc021/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef1bcdea7025f6fd18fcd645804f83186546fa97", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef1bcdea7025f6fd18fcd645804f83186546fa97", "html_url": "https://github.com/rust-lang/rust/commit/ef1bcdea7025f6fd18fcd645804f83186546fa97"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "0d70c993b3b69bd4defeb2401de5358d11d172a9", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=71f058499a0e551d2b8deb5d098bdb04387dc021", "patch": "@@ -194,10 +194,18 @@ tag stmt_ {\n     stmt_crate_directive(@crate_directive);\n }\n \n+tag init_op {\n+    init_assign;\n+    init_recv;\n+}\n+\n+type initializer = rec(init_op op,\n+                       @expr expr);\n+\n type local = rec(option.t[@ty] ty,\n                  bool infer,\n                  ident ident,\n-                 option.t[@expr] init,\n+                 option.t[initializer] init,\n                  def_id id,\n                  ann ann);\n "}, {"sha": "23b4a9366fce4aa931a25a20d0f92006bc89f038", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=71f058499a0e551d2b8deb5d098bdb04387dc021", "patch": "@@ -1364,13 +1364,14 @@ impure fn parse_expr_inner(parser p) -> @ast.expr {\n     }\n }\n \n-impure fn parse_initializer(parser p) -> option.t[@ast.expr] {\n+impure fn parse_initializer(parser p) -> option.t[ast.initializer] {\n     if (p.peek() == token.EQ) {\n         p.bump();\n-        ret some(parse_expr(p));\n+        ret some(rec(op = ast.init_assign,\n+                     expr = parse_expr(p)));\n     }\n \n-    ret none[@ast.expr];\n+    ret none[ast.initializer];\n }\n \n impure fn parse_pat(parser p) -> @ast.pat {"}, {"sha": "b59a1f3b990a4d9c8188dbd60681a4c35ff3784d", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=71f058499a0e551d2b8deb5d098bdb04387dc021", "patch": "@@ -437,20 +437,22 @@ fn fold_decl[ENV](&ENV env, ast_fold[ENV] fld, @decl d) -> @decl {\n     alt (d.node) {\n         case (ast.decl_local(?local)) {\n             auto ty_ = none[@ast.ty];\n-            auto init_ = none[@ast.expr];\n+            auto initopt = none[ast.initializer];\n             alt (local.ty) {\n                 case (some[@ast.ty](?t)) {\n                     ty_ = some[@ast.ty](fold_ty(env, fld, t));\n                 }\n                 case (_) { /* fall through */  }\n             }\n             alt (local.init) {\n-                case (some[@ast.expr](?e)) {\n-                    init_ = some[@ast.expr](fold_expr(env, fld, e));\n+                case (some[ast.initializer](?init)) {\n+                    auto init_ = rec(expr = fold_expr(env, fld, init.expr)\n+                                     with init);\n+                    initopt = some[ast.initializer](init_);\n                 }\n                 case (_) { /* fall through */  }\n             }\n-            let @ast.local local_ = @rec(ty=ty_, init=init_ with *local);\n+            let @ast.local local_ = @rec(ty=ty_, init=initopt with *local);\n             ret fld.fold_decl_local(env_, d.span, local_);\n         }\n "}, {"sha": "5c7c8ff7c796f7a46aabeaa64e6909b03277dfc3", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=71f058499a0e551d2b8deb5d098bdb04387dc021", "patch": "@@ -4869,8 +4869,8 @@ fn init_local(@block_ctxt cx, @ast.local local) -> result {\n         vec(clean(bind drop_slot(_, llptr, ty)));\n \n     alt (local.init) {\n-        case (some[@ast.expr](?e)) {\n-            auto sub = trans_expr(bcx, e);\n+        case (some[ast.initializer](?init)) {\n+            auto sub = trans_expr(bcx, init.expr);\n             bcx = copy_ty(sub.bcx, INIT, llptr, sub.val, ty).bcx;\n         }\n         case (_) {"}, {"sha": "a381ae931ceae604bd025652678084bdb17c51b2", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=71f058499a0e551d2b8deb5d098bdb04387dc021", "patch": "@@ -2404,17 +2404,18 @@ fn check_decl_local(&@fn_ctxt fcx, &@ast.decl decl) -> @ast.decl {\n                 }\n             }\n \n-            auto init = local.init;\n+            auto initopt = local.init;\n             alt (local.init) {\n-                case (some[@ast.expr](?expr)) {\n-                    auto expr_0 = check_expr(fcx, expr);\n+                case (some[ast.initializer](?init)) {\n+                    auto expr_0 = check_expr(fcx, init.expr);\n                     auto lty = plain_ty(ty.ty_local(local.id));\n                     auto expr_1 = demand_expr(fcx, lty, expr_0);\n-                    init = some[@ast.expr](expr_1);\n+                    auto init_0 = rec(expr = expr_1 with init);\n+                    initopt = some[ast.initializer](init_0);\n                 }\n                 case (_) { /* fall through */  }\n             }\n-            auto local_1 = @rec(init = init with *local);\n+            auto local_1 = @rec(init = initopt with *local);\n             ret @rec(node=ast.decl_local(local_1)\n                      with *decl);\n         }"}, {"sha": "10cc5355204189a3a2fbd3629f6436840d9eae9a", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f058499a0e551d2b8deb5d098bdb04387dc021/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=71f058499a0e551d2b8deb5d098bdb04387dc021", "patch": "@@ -561,10 +561,10 @@ impure fn print_decl(ps s, @ast.decl decl) {\n       }\n       wrd(s, loc.ident);\n       alt (loc.init) {\n-        case (option.some[@ast.expr](?init)) {\n+        case (option.some[ast.initializer](?init)) {\n           space(s);\n           wrd1(s, \"=\");\n-          print_expr(s, init);\n+          print_expr(s, init.expr);\n         }\n         case (_) {}\n       }"}]}