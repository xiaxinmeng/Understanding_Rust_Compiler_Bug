{"sha": "daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZWUxYjRkNWM2ZTFkYjg1NjNjNTdmZjU1MjliNjJkMGEyOWZiZGU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-25T01:18:40Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-26T20:54:50Z"}, "message": "Ensure that skipped items aren't encoded\n\nIf an item is skipped due to it being unreachable or for some optimization, then\nit shouldn't be encoded into the metadata (because it wasn't present in the\nfirst place).", "tree": {"sha": "50699a61564c0421d91c4d712626a41fbc8ffb4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50699a61564c0421d91c4d712626a41fbc8ffb4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "html_url": "https://github.com/rust-lang/rust/commit/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47f2e80b65bf814953c0ceda3b48e46802883f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/47f2e80b65bf814953c0ceda3b48e46802883f4b", "html_url": "https://github.com/rust-lang/rust/commit/47f2e80b65bf814953c0ceda3b48e46802883f4b"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "bfa7beace8ced7c2c4a388b760c6acf1251ebbf4", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "patch": "@@ -25,6 +25,7 @@ use syntax::ast;\n use syntax::ast::Name;\n use syntax::ast_util;\n use syntax::codemap::Span;\n+use syntax::visit::Visitor;\n \n pub fn trans_block(bcx: @mut Block, b: &ast::Block, dest: expr::Dest) -> @mut Block {\n     let _icx = push_ctxt(\"trans_block\");\n@@ -64,12 +65,22 @@ pub fn trans_if(bcx: @mut Block,\n     // Drop branches that are known to be impossible\n     if is_const(cond_val) && !is_undef(cond_val) {\n         if const_to_uint(cond_val) == 1 {\n+            match els {\n+                Some(elexpr) => {\n+                    let mut trans = TransItemVisitor { ccx: bcx.fcx.ccx };\n+                    trans.visit_expr(elexpr, ());\n+                }\n+                None => {}\n+            }\n             // if true { .. } [else { .. }]\n             return do with_scope(bcx, thn.info(), \"if_true_then\") |bcx| {\n                 let bcx_out = trans_block(bcx, thn, dest);\n                 trans_block_cleanups(bcx_out, block_cleanups(bcx))\n             }\n         } else {\n+            let mut trans = TransItemVisitor { ccx: bcx.fcx.ccx } ;\n+            trans.visit_block(thn, ());\n+\n             match els {\n                 // if false { .. } else { .. }\n                 Some(elexpr) => {"}, {"sha": "4331a1da2a26b62af83e6fc372a618609b08f045", "filename": "src/test/auxiliary/cfg_inner_static.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde/src%2Ftest%2Fauxiliary%2Fcfg_inner_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde/src%2Ftest%2Fauxiliary%2Fcfg_inner_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcfg_inner_static.rs?ref=daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// this used to just ICE on compiling\n+pub fn foo() {\n+    if cfg!(foo) {\n+        static a: int = 3;\n+        a\n+    } else { 3 };\n+}"}, {"sha": "2d06a10a05f2aa77f1c4c25c672c0ae5f2afe831", "filename": "src/test/run-pass/cfg_inner_static.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs?ref=daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:cfg_inner_static.rs\n+// xfail-fast\n+\n+extern mod cfg_inner_static;\n+\n+fn main() {\n+    cfg_inner_static::foo();\n+}"}]}