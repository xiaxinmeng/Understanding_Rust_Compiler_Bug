{"sha": "49c82d117084ad0362fee6fb9a524400c1140ce7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YzgyZDExNzA4NGFkMDM2MmZlZTZmYjlhNTI0NDAwYzExNDBjZTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-08T10:51:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-08T10:51:20Z"}, "message": "Rollup merge of #69810 - thekuom:test/67523-dynamic-semantics-bindings-after-at, r=Centril\n\ntest(bindings_after_at): add dynamic drop tests for bindings_after_at\n\nFixes https://github.com/rust-lang/rust/issues/67523.\nWorking towards https://github.com/rust-lang/rust/issues/65490.", "tree": {"sha": "3405a2f3f23004a2e1df12fdc22b589b5731b816", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3405a2f3f23004a2e1df12fdc22b589b5731b816"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49c82d117084ad0362fee6fb9a524400c1140ce7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeZM4oCRBK7hj4Ov3rIwAAdHIIAAbkonkiVKdLvYV9QKoHefUF\nR60EfvGcEDUB9lOrlhoA29WvoEuZscof6m4aZMT5njwf8solndhy8GPVojvbFW2f\n4HPAabFb8TQraPa2DuUk+LksJVuep5wtDB8d0mCxhXVFzckmUv+oQWgv6AZWJMSp\n20+dCgQvZUNHT08PVC5XoPgh1BGGZSd4I5yAgxFnLjl3x/zySRWlsDshm0fsX7rj\nqcAK9VMTptWnEkQCMrHw9lGM5gygeTxdWNKBbEa6rc183nxIgPl8StfQkir9Sut4\nbNWQgd3vuIHmD95k4J8EnHjxZEOuDfN5Gv5VeUvptRz5zaKW/VTkIfA2SCTxIT4=\n=nJlp\n-----END PGP SIGNATURE-----\n", "payload": "tree 3405a2f3f23004a2e1df12fdc22b589b5731b816\nparent 17b77913f9fe4dbf99a6ba74e179a7c68a8b1392\nparent 2e88bec61916cdb5d24ee9c79af3f70f2d52cb5c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1583664680 +0100\ncommitter GitHub <noreply@github.com> 1583664680 +0100\n\nRollup merge of #69810 - thekuom:test/67523-dynamic-semantics-bindings-after-at, r=Centril\n\ntest(bindings_after_at): add dynamic drop tests for bindings_after_at\n\nFixes https://github.com/rust-lang/rust/issues/67523.\nWorking towards https://github.com/rust-lang/rust/issues/65490.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49c82d117084ad0362fee6fb9a524400c1140ce7", "html_url": "https://github.com/rust-lang/rust/commit/49c82d117084ad0362fee6fb9a524400c1140ce7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49c82d117084ad0362fee6fb9a524400c1140ce7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17b77913f9fe4dbf99a6ba74e179a7c68a8b1392", "url": "https://api.github.com/repos/rust-lang/rust/commits/17b77913f9fe4dbf99a6ba74e179a7c68a8b1392", "html_url": "https://github.com/rust-lang/rust/commit/17b77913f9fe4dbf99a6ba74e179a7c68a8b1392"}, {"sha": "2e88bec61916cdb5d24ee9c79af3f70f2d52cb5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e88bec61916cdb5d24ee9c79af3f70f2d52cb5c", "html_url": "https://github.com/rust-lang/rust/commit/2e88bec61916cdb5d24ee9c79af3f70f2d52cb5c"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "d31736f142c3f45394d12e29ae6a9367136377e3", "filename": "src/test/ui/drop/dynamic-drop.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/49c82d117084ad0362fee6fb9a524400c1140ce7/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c82d117084ad0362fee6fb9a524400c1140ce7/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop.rs?ref=49c82d117084ad0362fee6fb9a524400c1140ce7", "patch": "@@ -3,6 +3,7 @@\n \n #![feature(generators, generator_trait, untagged_unions)]\n #![feature(move_ref_pattern)]\n+#![feature(bindings_after_at)]\n \n #![allow(unused_assignments)]\n #![allow(unused_variables)]\n@@ -291,6 +292,44 @@ fn subslice_mixed_min_lengths(a: &Allocator, c: i32) {\n     }\n }\n \n+fn bindings_after_at_dynamic_init_move(a: &Allocator, c: bool) {\n+    let foo = if c { Some(a.alloc()) } else { None };\n+    let _x;\n+\n+    if let bar @ Some(_) = foo {\n+        _x = bar;\n+    }\n+}\n+\n+fn bindings_after_at_dynamic_init_ref(a: &Allocator, c: bool) {\n+    let foo = if c { Some(a.alloc()) } else { None };\n+    let _x;\n+\n+    if let bar @ Some(_baz) = &foo {\n+        _x = bar;\n+    }\n+}\n+\n+fn bindings_after_at_dynamic_drop_move(a: &Allocator, c: bool) {\n+    let foo = if c { Some(a.alloc()) } else { None };\n+\n+    if let bar @ Some(_) = foo {\n+        bar\n+    } else {\n+        None\n+    };\n+}\n+\n+fn bindings_after_at_dynamic_drop_ref(a: &Allocator, c: bool) {\n+    let foo = if c { Some(a.alloc()) } else { None };\n+\n+    if let bar @ Some(_baz) = &foo {\n+        bar\n+    } else {\n+        &None\n+    };\n+}\n+\n fn move_ref_pattern(a: &Allocator) {\n     let mut tup = (a.alloc(), a.alloc(), a.alloc(), a.alloc());\n     let (ref _a, ref mut _b, _c, mut _d) = tup;\n@@ -471,5 +510,14 @@ fn main() {\n     run_test(|a| panic_after_init_temp(a));\n     run_test(|a| panic_after_init_by_loop(a));\n \n+    run_test(|a| bindings_after_at_dynamic_init_move(a, true));\n+    run_test(|a| bindings_after_at_dynamic_init_move(a, false));\n+    run_test(|a| bindings_after_at_dynamic_init_ref(a, true));\n+    run_test(|a| bindings_after_at_dynamic_init_ref(a, false));\n+    run_test(|a| bindings_after_at_dynamic_drop_move(a, true));\n+    run_test(|a| bindings_after_at_dynamic_drop_move(a, false));\n+    run_test(|a| bindings_after_at_dynamic_drop_ref(a, true));\n+    run_test(|a| bindings_after_at_dynamic_drop_ref(a, false));\n+\n     run_test_nopanic(|a| union1(a));\n }"}]}