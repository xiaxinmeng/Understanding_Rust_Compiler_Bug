{"sha": "577da45097e439c1aefd853b9ff41f305449b848", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3N2RhNDUwOTdlNDM5YzFhZWZkODUzYjlmZjQxZjMwNTQ0OWI4NDg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-14T08:22:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-14T08:22:54Z"}, "message": "Rollup merge of #71964 - jcotton42:bootstrap_decode_none_windows, r=Mark-Simulacrum\n\nFix bootstrap failing on win32\n\n```powershell\npython x.py -h # or really any x.py command\n```\nwould fail with\n```\ninfo: Downloading and building bootstrap before processing --help\n      command. See src/bootstrap/README.md for help with common\n      commands.\nUpdating only changed submodules\nSubmodules updated in 0.15 seconds\nTraceback (most recent call last):\n  File \"x.py\", line 11, in <module>\n    bootstrap.main()\n  File \"C:\\Users\\Joshua\\Projects\\forks\\rust\\src\\bootstrap\\bootstrap.py\", line 960, in main\n    bootstrap(help_triggered)\n  File \"C:\\Users\\Joshua\\Projects\\forks\\rust\\src\\bootstrap\\bootstrap.py\", line 925, in bootstrap\n    build.build = args.build or build.build_triple()\n  File \"C:\\Users\\Joshua\\Projects\\forks\\rust\\src\\bootstrap\\bootstrap.py\", line 731, in build_triple\n    return default_build_triple()\n  File \"C:\\Users\\Joshua\\Projects\\forks\\rust\\src\\bootstrap\\bootstrap.py\", line 184, in default_build_triple\n    ostype = require([\"uname\", \"-s\"], exit=required).decode(default_encoding)\nAttributeError: 'NoneType' object has no attribute 'decode'\n```\n\nThis PR defers the `decode` call until after we're sure `ostype` and `cputype` are not `None`, as they would be on Windows since `uname` doesn't exist", "tree": {"sha": "21c36cbe5fa4697ad1fb7e50e0df764ab0c8bd22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21c36cbe5fa4697ad1fb7e50e0df764ab0c8bd22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/577da45097e439c1aefd853b9ff41f305449b848", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJevP/eCRBK7hj4Ov3rIwAAdHIIAHim7jvMt8rthYCdfLRDUL77\nFXxOMUqwZBsJVSMSwAONrGFUqEp2YmCI44tg+KSNXJB2u3z2dGO6O7XrI4pFlA4O\nrimgDCq3pU5WtG57hronA3cME585x7/rEHeykOfnQh/0DENVqtpJmr1AVhHK2UNv\nRs57d/AytL8FWIVniqE4GhyCOPliRs1yqjgsdmUchr281/KHiLdrtnRl7AQsy1f8\nkN4z0gKuJ2+6y84w635NIEn7Gmxd72ahRX4b6JxylsA4xx0BPXlLzWAIz5PJ5y+7\nltSGmBaUkjvl8mvSeJIT/anpAiqLDG3Rv8txUhOiFezj0SU0HVIJnJSu30LY2/0=\n=5G5w\n-----END PGP SIGNATURE-----\n", "payload": "tree 21c36cbe5fa4697ad1fb7e50e0df764ab0c8bd22\nparent a6c1f61db7a5503a5ea42da200cab8dbb55e1594\nparent 34b2072599c2d14a36ed8cb7adeb0db44b8f76b3\nauthor Ralf Jung <post@ralfj.de> 1589444574 +0200\ncommitter GitHub <noreply@github.com> 1589444574 +0200\n\nRollup merge of #71964 - jcotton42:bootstrap_decode_none_windows, r=Mark-Simulacrum\n\nFix bootstrap failing on win32\n\n```powershell\npython x.py -h # or really any x.py command\n```\nwould fail with\n```\ninfo: Downloading and building bootstrap before processing --help\n      command. See src/bootstrap/README.md for help with common\n      commands.\nUpdating only changed submodules\nSubmodules updated in 0.15 seconds\nTraceback (most recent call last):\n  File \"x.py\", line 11, in <module>\n    bootstrap.main()\n  File \"C:\\Users\\Joshua\\Projects\\forks\\rust\\src\\bootstrap\\bootstrap.py\", line 960, in main\n    bootstrap(help_triggered)\n  File \"C:\\Users\\Joshua\\Projects\\forks\\rust\\src\\bootstrap\\bootstrap.py\", line 925, in bootstrap\n    build.build = args.build or build.build_triple()\n  File \"C:\\Users\\Joshua\\Projects\\forks\\rust\\src\\bootstrap\\bootstrap.py\", line 731, in build_triple\n    return default_build_triple()\n  File \"C:\\Users\\Joshua\\Projects\\forks\\rust\\src\\bootstrap\\bootstrap.py\", line 184, in default_build_triple\n    ostype = require([\"uname\", \"-s\"], exit=required).decode(default_encoding)\nAttributeError: 'NoneType' object has no attribute 'decode'\n```\n\nThis PR defers the `decode` call until after we're sure `ostype` and `cputype` are not `None`, as they would be on Windows since `uname` doesn't exist\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/577da45097e439c1aefd853b9ff41f305449b848", "html_url": "https://github.com/rust-lang/rust/commit/577da45097e439c1aefd853b9ff41f305449b848", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/577da45097e439c1aefd853b9ff41f305449b848/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6c1f61db7a5503a5ea42da200cab8dbb55e1594", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c1f61db7a5503a5ea42da200cab8dbb55e1594", "html_url": "https://github.com/rust-lang/rust/commit/a6c1f61db7a5503a5ea42da200cab8dbb55e1594"}, {"sha": "34b2072599c2d14a36ed8cb7adeb0db44b8f76b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/34b2072599c2d14a36ed8cb7adeb0db44b8f76b3", "html_url": "https://github.com/rust-lang/rust/commit/34b2072599c2d14a36ed8cb7adeb0db44b8f76b3"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "b7d0fac5be31fdca554d690289ce8756c0df6fac", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/577da45097e439c1aefd853b9ff41f305449b848/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/577da45097e439c1aefd853b9ff41f305449b848/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=577da45097e439c1aefd853b9ff41f305449b848", "patch": "@@ -180,13 +180,16 @@ def format_build_time(duration):\n def default_build_triple():\n     \"\"\"Build triple as in LLVM\"\"\"\n     default_encoding = sys.getdefaultencoding()\n-    required = not sys.platform == 'win32'\n-    ostype = require([\"uname\", \"-s\"], exit=required).decode(default_encoding)\n-    cputype = require(['uname', '-m'], exit=required).decode(default_encoding)\n+    required = sys.platform != 'win32'\n+    ostype = require([\"uname\", \"-s\"], exit=required)\n+    cputype = require(['uname', '-m'], exit=required)\n \n     if ostype is None or cputype is None:\n         return 'x86_64-pc-windows-msvc'\n \n+    ostype = ostype.decode(default_encoding)\n+    cputype = cputype.decode(default_encoding)\n+\n     # The goal here is to come up with the same triple as LLVM would,\n     # at least for the subset of platforms we're willing to target.\n     ostype_mapper = {"}]}