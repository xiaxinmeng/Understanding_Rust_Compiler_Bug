{"sha": "beadbfd19482ba9976092b193c102b17fb89137d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYWRiZmQxOTQ4MmJhOTk3NjA5MmIxOTNjMTAyYjE3ZmI4OTEzN2Q=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2015-06-04T04:20:48Z"}, "committer": {"name": "James Miller", "email": "james@aatch.net", "date": "2015-06-05T01:53:55Z"}, "message": "Mark std::as_bytes as inline\n\nThis wasn't marked inline, so wasn't being inlined cross-crate. It's\nactually a no-op function, since it's a wrapper around `mem::transmute`.\nMarking it inline means that programs calling it can see that it's a\nno-op and act accordingly during optimisation.", "tree": {"sha": "85f950e1ab34e8adebd5d37f23046163ed030ac5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85f950e1ab34e8adebd5d37f23046163ed030ac5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beadbfd19482ba9976092b193c102b17fb89137d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beadbfd19482ba9976092b193c102b17fb89137d", "html_url": "https://github.com/rust-lang/rust/commit/beadbfd19482ba9976092b193c102b17fb89137d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beadbfd19482ba9976092b193c102b17fb89137d/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0ca6b1a314f949827fda499ee29dcbf6ef18acd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0ca6b1a314f949827fda499ee29dcbf6ef18acd", "html_url": "https://github.com/rust-lang/rust/commit/e0ca6b1a314f949827fda499ee29dcbf6ef18acd"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "95bf6d0a9cd609c3f6abb297dcf04050ceaed8f1", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/beadbfd19482ba9976092b193c102b17fb89137d/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beadbfd19482ba9976092b193c102b17fb89137d/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=beadbfd19482ba9976092b193c102b17fb89137d", "patch": "@@ -1466,6 +1466,7 @@ impl str {\n     /// assert_eq!(\"bors\".as_bytes(), b\"bors\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[inline(always)]\n     pub fn as_bytes(&self) -> &[u8] {\n         core_str::StrExt::as_bytes(&self[..])\n     }"}]}