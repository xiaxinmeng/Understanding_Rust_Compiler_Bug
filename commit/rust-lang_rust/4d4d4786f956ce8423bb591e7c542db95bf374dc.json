{"sha": "4d4d4786f956ce8423bb591e7c542db95bf374dc", "node_id": "C_kwDOAAsO6NoAKDRkNGQ0Nzg2Zjk1NmNlODQyM2JiNTkxZTdjNTQyZGI5NWJmMzc0ZGM", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-14T00:34:04Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-15T19:13:44Z"}, "message": "Shorten trimmed display of closures\n\nWhen `with_forced_trimmed_paths` is used, only print filename and start\nof the closure's span, to reduce their verbosity.", "tree": {"sha": "b0abe842f7371aaff30f7b46a8c64d6d75ca9f26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0abe842f7371aaff30f7b46a8c64d6d75ca9f26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d4d4786f956ce8423bb591e7c542db95bf374dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4d4786f956ce8423bb591e7c542db95bf374dc", "html_url": "https://github.com/rust-lang/rust/commit/4d4d4786f956ce8423bb591e7c542db95bf374dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d4d4786f956ce8423bb591e7c542db95bf374dc/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30ae261c42af221173dcec2b5b926b3273eb90eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/30ae261c42af221173dcec2b5b926b3273eb90eb", "html_url": "https://github.com/rust-lang/rust/commit/30ae261c42af221173dcec2b5b926b3273eb90eb"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "a1d53506707c9a2938749623d087c314bad761a6", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d4d4786f956ce8423bb591e7c542db95bf374dc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4d4786f956ce8423bb591e7c542db95bf374dc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=4d4d4786f956ce8423bb591e7c542db95bf374dc", "patch": "@@ -16,6 +16,7 @@ use rustc_session::config::TrimmedDefPaths;\n use rustc_session::cstore::{ExternCrate, ExternCrateSource};\n use rustc_session::Limit;\n use rustc_span::symbol::{kw, Ident, Symbol};\n+use rustc_span::FileNameDisplayPreference;\n use rustc_target::abi::Size;\n use rustc_target::spec::abi::Abi;\n use smallvec::SmallVec;\n@@ -818,11 +819,16 @@ pub trait PrettyPrinter<'tcx>:\n                             p!(\"@\", print_def_path(did.to_def_id(), substs));\n                         } else {\n                             let span = self.tcx().def_span(did);\n+                            let preference = if FORCE_TRIMMED_PATH.with(|flag| flag.get()) {\n+                                FileNameDisplayPreference::Short\n+                            } else {\n+                                FileNameDisplayPreference::Remapped\n+                            };\n                             p!(write(\n                                 \"@{}\",\n                                 // This may end up in stderr diagnostics but it may also be emitted\n                                 // into MIR. Hence we use the remapped path if available\n-                                self.tcx().sess.source_map().span_to_embeddable_string(span)\n+                                self.tcx().sess.source_map().span_to_string(span, preference)\n                             ));\n                         }\n                     } else {"}, {"sha": "2181c090027b535819aec1eb8afeb1851c0f4841", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4d4d4786f956ce8423bb591e7c542db95bf374dc/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4d4786f956ce8423bb591e7c542db95bf374dc/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=4d4d4786f956ce8423bb591e7c542db95bf374dc", "patch": "@@ -259,6 +259,10 @@ impl RealFileName {\n             FileNameDisplayPreference::Remapped => {\n                 self.remapped_path_if_available().to_string_lossy()\n             }\n+            FileNameDisplayPreference::Short => self\n+                .local_path_if_available()\n+                .file_name()\n+                .map_or_else(|| \"\".into(), |f| f.to_string_lossy()),\n         }\n     }\n }\n@@ -302,6 +306,9 @@ pub enum FileNameDisplayPreference {\n     /// Display the path before the application of rewrite rules provided via `--remap-path-prefix`.\n     /// This is appropriate for use in user-facing output (such as diagnostics).\n     Local,\n+    /// Display only the filename, as a way to reduce the verbosity of the output.\n+    /// This is appropriate for use in user-facing output (such as diagnostics).\n+    Short,\n }\n \n pub struct FileNameDisplay<'a> {"}, {"sha": "d9c87ac0ba82bfb6ecb0c9b3991dc6dee752ea44", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4d4d4786f956ce8423bb591e7c542db95bf374dc/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4d4786f956ce8423bb591e7c542db95bf374dc/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=4d4d4786f956ce8423bb591e7c542db95bf374dc", "patch": "@@ -438,20 +438,27 @@ impl SourceMap {\n         }\n     }\n \n-    fn span_to_string(&self, sp: Span, filename_display_pref: FileNameDisplayPreference) -> String {\n+    pub fn span_to_string(\n+        &self,\n+        sp: Span,\n+        filename_display_pref: FileNameDisplayPreference,\n+    ) -> String {\n         if self.files.borrow().source_files.is_empty() || sp.is_dummy() {\n             return \"no-location\".to_string();\n         }\n \n         let lo = self.lookup_char_pos(sp.lo());\n         let hi = self.lookup_char_pos(sp.hi());\n         format!(\n-            \"{}:{}:{}: {}:{}\",\n+            \"{}:{}:{}{}\",\n             lo.file.name.display(filename_display_pref),\n             lo.line,\n             lo.col.to_usize() + 1,\n-            hi.line,\n-            hi.col.to_usize() + 1,\n+            if let FileNameDisplayPreference::Short = filename_display_pref {\n+                String::new()\n+            } else {\n+                format!(\": {}:{}\", hi.line, hi.col.to_usize() + 1)\n+            }\n         )\n     }\n "}, {"sha": "fdd192f43137067a274ebe008c03d2641a9fad0b", "filename": "src/test/ui/higher-rank-trait-bounds/issue-62203-hrtb-ice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d4d4786f956ce8423bb591e7c542db95bf374dc/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-62203-hrtb-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d4d4786f956ce8423bb591e7c542db95bf374dc/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-62203-hrtb-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-62203-hrtb-ice.stderr?ref=4d4d4786f956ce8423bb591e7c542db95bf374dc", "patch": "@@ -30,7 +30,7 @@ LL |     where\n LL |         F: for<'r> T0<'r, (<Self as Ty<'r>>::V,), O = <B as Ty<'r>>::V>,\n    |                                                   ^^^^^^^^^^^^^^^^^^^^ required by this bound in `T1::m`\n \n-error[E0271]: expected `[closure@$DIR/issue-62203-hrtb-ice.rs:42:16: 42:19]` to be a closure that returns `Unit3`, but it returns `Unit4`\n+error[E0271]: expected `[closure@issue-62203-hrtb-ice.rs:42:16]` to be a closure that returns `Unit3`, but it returns `Unit4`\n   --> $DIR/issue-62203-hrtb-ice.rs:39:9\n    |\n LL |       let v = Unit2.m("}, {"sha": "5b51c2e32bf7d0c0d964aab1fb51400fa632674d", "filename": "src/test/ui/issues/issue-31173.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d4d4786f956ce8423bb591e7c542db95bf374dc/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d4d4786f956ce8423bb591e7c542db95bf374dc/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr?ref=4d4d4786f956ce8423bb591e7c542db95bf374dc", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `TakeWhile<&mut IntoIter<u8>, [closure@$DIR/issue-31173.rs:7:21: 7:25]>` to be an iterator that yields `&_`, but it yields `u8`\n+error[E0271]: expected `TakeWhile<&mut IntoIter<u8>, [closure@issue-31173.rs:7:21]>` to be an iterator that yields `&_`, but it yields `u8`\n   --> $DIR/issue-31173.rs:11:10\n    |\n LL |         .cloned()"}, {"sha": "a0f790dba15ed21adddebbcb5daf9faa8cd909ef", "filename": "src/test/ui/never_type/fallback-closure-wrap.fallback.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d4d4786f956ce8423bb591e7c542db95bf374dc/src%2Ftest%2Fui%2Fnever_type%2Ffallback-closure-wrap.fallback.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d4d4786f956ce8423bb591e7c542db95bf374dc/src%2Ftest%2Fui%2Fnever_type%2Ffallback-closure-wrap.fallback.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Ffallback-closure-wrap.fallback.stderr?ref=4d4d4786f956ce8423bb591e7c542db95bf374dc", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `[closure@$DIR/fallback-closure-wrap.rs:18:40: 18:47]` to be a closure that returns `()`, but it returns `!`\n+error[E0271]: expected `[closure@fallback-closure-wrap.rs:18:40]` to be a closure that returns `()`, but it returns `!`\n   --> $DIR/fallback-closure-wrap.rs:18:31\n    |\n LL |       let error = Closure::wrap(Box::new(move || {"}]}