{"sha": "655042052cd45de1b8d9b1f2fb6625be7f8322ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NTA0MjA1MmNkNDVkZTFiOGQ5YjFmMmZiNjYyNWJlN2Y4MzIyYmE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-08T19:07:43Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-08T19:07:43Z"}, "message": "Rollup merge of #25194 - tshepang:assert-convention, r=steveklabnik\n\n\u2026 compared", "tree": {"sha": "82596579499b42a07148de6a66378a832abf96b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82596579499b42a07148de6a66378a832abf96b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/655042052cd45de1b8d9b1f2fb6625be7f8322ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/655042052cd45de1b8d9b1f2fb6625be7f8322ba", "html_url": "https://github.com/rust-lang/rust/commit/655042052cd45de1b8d9b1f2fb6625be7f8322ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/655042052cd45de1b8d9b1f2fb6625be7f8322ba/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "638deb3bc38f92c0241966f3e4c3b75d4766b005", "url": "https://api.github.com/repos/rust-lang/rust/commits/638deb3bc38f92c0241966f3e4c3b75d4766b005", "html_url": "https://github.com/rust-lang/rust/commit/638deb3bc38f92c0241966f3e4c3b75d4766b005"}, {"sha": "7ef46e0dde2052abd5108e360ee6fd4766660246", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef46e0dde2052abd5108e360ee6fd4766660246", "html_url": "https://github.com/rust-lang/rust/commit/7ef46e0dde2052abd5108e360ee6fd4766660246"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "de962b51e059080b678f83b83ce71228ee372538", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/655042052cd45de1b8d9b1f2fb6625be7f8322ba/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/655042052cd45de1b8d9b1f2fb6625be7f8322ba/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=655042052cd45de1b8d9b1f2fb6625be7f8322ba", "patch": "@@ -137,7 +137,7 @@ pub trait Iterator {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().last().unwrap() == &5);\n+    /// assert_eq!(a.iter().last().unwrap(), &5);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -155,8 +155,8 @@ pub trait Iterator {\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter();\n-    /// assert!(it.nth(2).unwrap() == &3);\n-    /// assert!(it.nth(2) == None);\n+    /// assert_eq!(it.nth(2).unwrap(), &3);\n+    /// assert_eq!(it.nth(2), None);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -545,8 +545,8 @@ pub trait Iterator {\n     /// let mut it = 0..10;\n     /// // sum the first five values\n     /// let partial_sum = it.by_ref().take(5).fold(0, |a, b| a + b);\n-    /// assert!(partial_sum == 10);\n-    /// assert!(it.next() == Some(5));\n+    /// assert_eq!(partial_sum, 10);\n+    /// assert_eq!(it.next(), Some(5));\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn by_ref(&mut self) -> &mut Self where Self: Sized { self }\n@@ -608,7 +608,7 @@ pub trait Iterator {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().fold(0, |acc, &item| acc + item) == 15);\n+    /// assert_eq!(a.iter().fold(0, |acc, &item| acc + item), 15);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -773,7 +773,7 @@ pub trait Iterator {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().max().unwrap() == &5);\n+    /// assert_eq!(a.iter().max().unwrap(), &5);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -796,7 +796,7 @@ pub trait Iterator {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().min().unwrap() == &1);\n+    /// assert_eq!(a.iter().min().unwrap(), &1);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -834,13 +834,13 @@ pub trait Iterator {\n     /// assert_eq!(a.iter().min_max(), NoElements);\n     ///\n     /// let a = [1];\n-    /// assert!(a.iter().min_max() == OneElement(&1));\n+    /// assert_eq!(a.iter().min_max(), OneElement(&1));\n     ///\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().min_max() == MinMax(&1, &5));\n+    /// assert_eq!(a.iter().min_max(), MinMax(&1, &5));\n     ///\n     /// let a = [1, 1, 1, 1];\n-    /// assert!(a.iter().min_max() == MinMax(&1, &1));\n+    /// assert_eq!(a.iter().min_max(), MinMax(&1, &1));\n     /// ```\n     #[unstable(feature = \"core\", reason = \"return type may change\")]\n     fn min_max(mut self) -> MinMaxResult<Self::Item> where Self: Sized, Self::Item: Ord\n@@ -1058,7 +1058,7 @@ pub trait Iterator {\n     ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter().cloned();\n-    /// assert!(it.sum::<i32>() == 15);\n+    /// assert_eq!(it.sum::<i32>(), 15);\n     /// ```\n     #[unstable(feature=\"core\")]\n     fn sum<S=<Self as Iterator>::Item>(self) -> S where\n@@ -1078,9 +1078,9 @@ pub trait Iterator {\n     /// fn factorial(n: u32) -> u32 {\n     ///     (1..).take_while(|&i| i <= n).product()\n     /// }\n-    /// assert!(factorial(0) == 1);\n-    /// assert!(factorial(1) == 1);\n-    /// assert!(factorial(5) == 120);\n+    /// assert_eq!(factorial(0), 1);\n+    /// assert_eq!(factorial(1), 1);\n+    /// assert_eq!(factorial(5), 120);\n     /// ```\n     #[unstable(feature=\"core\")]\n     fn product<P=<Self as Iterator>::Item>(self) -> P where"}]}