{"sha": "277bdbc0ed0f1f87e8d340233d7f485fbbe8cc66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3N2JkYmMwZWQwZjFmODdlOGQzNDAyMzNkN2Y0ODVmYmJlOGNjNjY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-26T12:59:51Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-26T12:59:51Z"}, "message": "Remove redundant `lift_to_tcx`\n\n... and fix some fuzzy wording in the debug logging.", "tree": {"sha": "5a370345397de585e6154386f312e7d59db1fcc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a370345397de585e6154386f312e7d59db1fcc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/277bdbc0ed0f1f87e8d340233d7f485fbbe8cc66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/277bdbc0ed0f1f87e8d340233d7f485fbbe8cc66", "html_url": "https://github.com/rust-lang/rust/commit/277bdbc0ed0f1f87e8d340233d7f485fbbe8cc66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/277bdbc0ed0f1f87e8d340233d7f485fbbe8cc66/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6278daac540ad4ef69ca0828a1a660671da539b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6278daac540ad4ef69ca0828a1a660671da539b9", "html_url": "https://github.com/rust-lang/rust/commit/6278daac540ad4ef69ca0828a1a660671da539b9"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ea34085823f6e8142c9ebb16b89e76353dff42fd", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/277bdbc0ed0f1f87e8d340233d7f485fbbe8cc66/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277bdbc0ed0f1f87e8d340233d7f485fbbe8cc66/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=277bdbc0ed0f1f87e8d340233d7f485fbbe8cc66", "patch": "@@ -1503,7 +1503,7 @@ impl Clean<Type> for hir::Ty<'_> {\n }\n \n /// Returns `None` if the type could not be normalized\n-fn normalize(cx: &DocContext<'tcx>, ty: Ty<'tcx>) -> Option<Ty<'tcx>> {\n+fn normalize(cx: &DocContext<'tcx>, ty: Ty<'_>) -> Option<Ty<'tcx>> {\n     use crate::rustc_trait_selection::infer::TyCtxtInferExt;\n     use crate::rustc_trait_selection::traits::query::normalize::AtExt;\n     use rustc_middle::traits::ObligationCause;\n@@ -1518,11 +1518,11 @@ fn normalize(cx: &DocContext<'tcx>, ty: Ty<'tcx>) -> Option<Ty<'tcx>> {\n     });\n     match normalized {\n         Ok(normalized_value) => {\n-            debug!(\"resolved {:?} to {:?}\", ty, normalized_value);\n+            debug!(\"normalized {:?} to {:?}\", ty, normalized_value);\n             Some(normalized_value)\n         }\n         Err(err) => {\n-            debug!(\"failed to resolve {:?}: {:?}\", ty, err);\n+            debug!(\"failed to normalize {:?}: {:?}\", ty, err);\n             None\n         }\n     }\n@@ -1531,7 +1531,7 @@ fn normalize(cx: &DocContext<'tcx>, ty: Ty<'tcx>) -> Option<Ty<'tcx>> {\n impl<'tcx> Clean<Type> for Ty<'tcx> {\n     fn clean(&self, cx: &DocContext<'_>) -> Type {\n         debug!(\"cleaning type: {:?}\", self);\n-        let ty = normalize(cx, self.lift_to_tcx(cx.tcx).unwrap()).unwrap_or(self);\n+        let ty = normalize(cx, self).unwrap_or(self);\n         match *ty.kind() {\n             ty::Never => Never,\n             ty::Bool => Primitive(PrimitiveType::Bool),"}]}