{"sha": "19d4e1dcacd8594b05816f1193ca67686aad7998", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZDRlMWRjYWNkODU5NGIwNTgxNmYxMTkzY2E2NzY4NmFhZDc5OTg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-07T00:35:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-07T00:35:24Z"}, "message": "Rollup merge of #75210 - nnethercote:change-type-of-available_cgus, r=ecstatic-morse\n\nChange the type of `AssertModuleSource::available_cgus`.\n\nIt's currently a `BTreeSet<Symbol>`, which is a strange type. The\n`BTreeSet` suggests that element order is important, but `Symbol` is a\ntype whose ordering isn't useful to humans. The ordering of the\ncollection only manifests in an obscure error message (\"no module named\n`...`\") that doesn't appear in any tests.\n\nThis commit changes the `Symbol` to a `String`, which is more\ntypical.", "tree": {"sha": "905696848513f2ad7607172cf623c0c594b7889a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/905696848513f2ad7607172cf623c0c594b7889a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19d4e1dcacd8594b05816f1193ca67686aad7998", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfLKHNCRBK7hj4Ov3rIwAAdHIIAKnwV/xR9SchV3AJ7hf0Udsf\nS0iQGXDWDPI3PuorCEvrQOWI4B2B6Ed8lG1AWLxPKFx7owIbgqaqH4hO8FpJJ5KB\nOt0cSeBLETfGurgVFjdkesFmbZKC0CrsmVH/OWN8fiH152+t+IUuPax5aL9u/8uo\n0dyLQ8/1fe6dzSc+NiUPPXvRFzt1Fdn+ZFcRFrFbbgOEipyE2ZHLeXSrhTu23GKb\nv140u5WEN9V6mDIiZYHcs9ZBpCK8JIVd7JBUVQGyDfNjnj6ppgJtsPizjlHajKV3\n6C21wAGHdoBCwrSZZ/idmCof4SBaR2GLij8G61pbPB0binW1fbANmRL+XSalaaI=\n=5XFR\n-----END PGP SIGNATURE-----\n", "payload": "tree 905696848513f2ad7607172cf623c0c594b7889a\nparent f49e47348d0d6644063ab8f3e3e2b06ac0339def\nparent ebbf07a1544151867e20ff75f740836aba1ff73a\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596760524 +0900\ncommitter GitHub <noreply@github.com> 1596760524 +0900\n\nRollup merge of #75210 - nnethercote:change-type-of-available_cgus, r=ecstatic-morse\n\nChange the type of `AssertModuleSource::available_cgus`.\n\nIt's currently a `BTreeSet<Symbol>`, which is a strange type. The\n`BTreeSet` suggests that element order is important, but `Symbol` is a\ntype whose ordering isn't useful to humans. The ordering of the\ncollection only manifests in an obscure error message (\"no module named\n`...`\") that doesn't appear in any tests.\n\nThis commit changes the `Symbol` to a `String`, which is more\ntypical.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19d4e1dcacd8594b05816f1193ca67686aad7998", "html_url": "https://github.com/rust-lang/rust/commit/19d4e1dcacd8594b05816f1193ca67686aad7998", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19d4e1dcacd8594b05816f1193ca67686aad7998/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f49e47348d0d6644063ab8f3e3e2b06ac0339def", "url": "https://api.github.com/repos/rust-lang/rust/commits/f49e47348d0d6644063ab8f3e3e2b06ac0339def", "html_url": "https://github.com/rust-lang/rust/commit/f49e47348d0d6644063ab8f3e3e2b06ac0339def"}, {"sha": "ebbf07a1544151867e20ff75f740836aba1ff73a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebbf07a1544151867e20ff75f740836aba1ff73a", "html_url": "https://github.com/rust-lang/rust/commit/ebbf07a1544151867e20ff75f740836aba1ff73a"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "29d615b04a394cc3227a00379addfb81da52fa47", "filename": "src/librustc_incremental/assert_module_sources.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/19d4e1dcacd8594b05816f1193ca67686aad7998/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19d4e1dcacd8594b05816f1193ca67686aad7998/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_module_sources.rs?ref=19d4e1dcacd8594b05816f1193ca67686aad7998", "patch": "@@ -39,8 +39,8 @@ pub fn assert_module_sources(tcx: TyCtxt<'_>) {\n             .collect_and_partition_mono_items(LOCAL_CRATE)\n             .1\n             .iter()\n-            .map(|cgu| cgu.name())\n-            .collect::<BTreeSet<Symbol>>();\n+            .map(|cgu| cgu.name().to_string())\n+            .collect::<BTreeSet<String>>();\n \n         let ams = AssertModuleSource { tcx, available_cgus };\n \n@@ -52,7 +52,7 @@ pub fn assert_module_sources(tcx: TyCtxt<'_>) {\n \n struct AssertModuleSource<'tcx> {\n     tcx: TyCtxt<'tcx>,\n-    available_cgus: BTreeSet<Symbol>,\n+    available_cgus: BTreeSet<String>,\n }\n \n impl AssertModuleSource<'tcx> {\n@@ -121,12 +121,11 @@ impl AssertModuleSource<'tcx> {\n \n         debug!(\"mapping '{}' to cgu name '{}'\", self.field(attr, sym::module), cgu_name);\n \n-        if !self.available_cgus.contains(&cgu_name) {\n+        if !self.available_cgus.contains(&*cgu_name.as_str()) {\n             self.tcx.sess.span_err(\n                 attr.span,\n                 &format!(\n-                    \"no module named `{}` (mangled: {}). \\\n-                          Available modules: {}\",\n+                    \"no module named `{}` (mangled: {}). Available modules: {}\",\n                     user_path,\n                     cgu_name,\n                     self.available_cgus"}]}