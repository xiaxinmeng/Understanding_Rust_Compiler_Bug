{"sha": "16e07602f9281a846f5142f8cd6d8f578bcbcf37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZTA3NjAyZjkyODFhODQ2ZjUxNDJmOGNkNmQ4ZjU3OGJjYmNmMzc=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-21T22:48:24Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-22T14:47:34Z"}, "message": "std::comm: Remove Freeze / NoFreeze", "tree": {"sha": "6013c5efd6f063e6f8616ef19f3fcaffaa2ed48c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6013c5efd6f063e6f8616ef19f3fcaffaa2ed48c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16e07602f9281a846f5142f8cd6d8f578bcbcf37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16e07602f9281a846f5142f8cd6d8f578bcbcf37", "html_url": "https://github.com/rust-lang/rust/commit/16e07602f9281a846f5142f8cd6d8f578bcbcf37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16e07602f9281a846f5142f8cd6d8f578bcbcf37/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0169abd91db39144d5a53acaa04fe7c0e6d92fa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0169abd91db39144d5a53acaa04fe7c0e6d92fa6", "html_url": "https://github.com/rust-lang/rust/commit/0169abd91db39144d5a53acaa04fe7c0e6d92fa6"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "267140a0089bdfbbea30a81ecf2d30f605eb9d6f", "filename": "src/libstd/comm/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/16e07602f9281a846f5142f8cd6d8f578bcbcf37/src%2Flibstd%2Fcomm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e07602f9281a846f5142f8cd6d8f578bcbcf37/src%2Flibstd%2Fcomm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm%2Fmod.rs?ref=16e07602f9281a846f5142f8cd6d8f578bcbcf37", "patch": "@@ -291,7 +291,7 @@ pub struct Receiver<T> {\n     priv inner: Flavor<T>,\n     priv receives: Cell<uint>,\n     // can't share in an arc\n-    priv marker: marker::NoFreeze,\n+    priv marker: marker::NoShare,\n }\n \n /// An iterator over messages on a receiver, this iterator will block\n@@ -307,7 +307,7 @@ pub struct Sender<T> {\n     priv inner: Flavor<T>,\n     priv sends: Cell<uint>,\n     // can't share in an arc\n-    priv marker: marker::NoFreeze,\n+    priv marker: marker::NoShare,\n }\n \n /// This enumeration is the list of the possible reasons that try_recv could not\n@@ -340,7 +340,7 @@ pub fn channel<T: Send>() -> (Sender<T>, Receiver<T>) {\n \n impl<T: Send> Sender<T> {\n     fn my_new(inner: Flavor<T>) -> Sender<T> {\n-        Sender { inner: inner, sends: Cell::new(0), marker: marker::NoFreeze }\n+        Sender { inner: inner, sends: Cell::new(0), marker: marker::NoShare }\n     }\n \n     /// Sends a value along this channel to be received by the corresponding\n@@ -478,7 +478,7 @@ impl<T: Send> Drop for Sender<T> {\n \n impl<T: Send> Receiver<T> {\n     fn my_new(inner: Flavor<T>) -> Receiver<T> {\n-        Receiver { inner: inner, receives: Cell::new(0), marker: marker::NoFreeze }\n+        Receiver { inner: inner, receives: Cell::new(0), marker: marker::NoShare }\n     }\n \n     /// Blocks waiting for a value on this receiver"}, {"sha": "5872c308f938bc0bd68e7786164575160e47f1a1", "filename": "src/libstd/comm/select.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16e07602f9281a846f5142f8cd6d8f578bcbcf37/src%2Flibstd%2Fcomm%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e07602f9281a846f5142f8cd6d8f578bcbcf37/src%2Flibstd%2Fcomm%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm%2Fselect.rs?ref=16e07602f9281a846f5142f8cd6d8f578bcbcf37", "patch": "@@ -66,7 +66,6 @@ pub struct Select {\n     priv tail: *mut Handle<'static, ()>,\n     priv next_id: Cell<uint>,\n     priv marker1: marker::NoSend,\n-    priv marker2: marker::NoFreeze,\n }\n \n /// A handle to a receiver which is currently a member of a `Select` set of\n@@ -105,7 +104,6 @@ impl Select {\n     pub fn new() -> Select {\n         Select {\n             marker1: marker::NoSend,\n-            marker2: marker::NoFreeze,\n             head: 0 as *mut Handle<'static, ()>,\n             tail: 0 as *mut Handle<'static, ()>,\n             next_id: Cell::new(1),"}]}