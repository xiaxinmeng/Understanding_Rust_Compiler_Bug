{"sha": "46c7c91ce746e9edb94dad5a4d4d5fd682582c78", "node_id": "C_kwDOAAsO6NoAKDQ2YzdjOTFjZTc0NmU5ZWRiOTRkYWQ1YTRkNGQ1ZmQ2ODI1ODJjNzg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-09T04:01:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-09T04:01:26Z"}, "message": "Rollup merge of #107799 - lcnr:update-provisional-result, r=oli-obk\n\ncorrectly update goals in the cache\n\nwe may want to actually write the response for our goal into the provisional or global cache instead of simply using the result from the last iteration '^^\n\nr? ```@rust-lang/initiative-trait-system-refactor```", "tree": {"sha": "e14a91b558a667f015bc93b24dc67101a785e939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e14a91b558a667f015bc93b24dc67101a785e939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46c7c91ce746e9edb94dad5a4d4d5fd682582c78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj5HAWCRBK7hj4Ov3rIwAA0SkIALLReWJ3uTJGdqfaOJtoKpsP\nfi2wipThfBsVBAxY915svRFTU82eJbX//fKTArmMli8rWjoiMNtSNU3bG2hlXBio\nb6bx+z28FCMJ2srjGNffk1dQJH+U8atjqDJFZAbyNZuYtq5GtJvJyNLDtVDxRXXL\nK3vTJIiB84Ah69wwmx90Ff26qzXKB7vPpfliMMSC9ufKGwlqM7g2OgZTtvez7OBL\n14IXyfKSsF+TgDt05rb3E+Au/Ritd6HNdL/aF71VVhYwq551h/3RK5r26R8Hkdsa\nCbOxz22xlC+tJFekj5dOLth8xwsvK7iLnnm428KmE/2resiz8R1UsKDoSadZe9s=\n=8wir\n-----END PGP SIGNATURE-----\n", "payload": "tree e14a91b558a667f015bc93b24dc67101a785e939\nparent 04ebaba17b60275df2920e75654c3691e45865a0\nparent 4c7c5e597f2c7d6d9453a8288d54a211ae0414bb\nauthor Michael Goulet <michael@errs.io> 1675915286 -0800\ncommitter GitHub <noreply@github.com> 1675915286 -0800\n\nRollup merge of #107799 - lcnr:update-provisional-result, r=oli-obk\n\ncorrectly update goals in the cache\n\nwe may want to actually write the response for our goal into the provisional or global cache instead of simply using the result from the last iteration '^^\n\nr? ```@rust-lang/initiative-trait-system-refactor```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46c7c91ce746e9edb94dad5a4d4d5fd682582c78", "html_url": "https://github.com/rust-lang/rust/commit/46c7c91ce746e9edb94dad5a4d4d5fd682582c78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46c7c91ce746e9edb94dad5a4d4d5fd682582c78/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04ebaba17b60275df2920e75654c3691e45865a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/04ebaba17b60275df2920e75654c3691e45865a0", "html_url": "https://github.com/rust-lang/rust/commit/04ebaba17b60275df2920e75654c3691e45865a0"}, {"sha": "4c7c5e597f2c7d6d9453a8288d54a211ae0414bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c7c5e597f2c7d6d9453a8288d54a211ae0414bb", "html_url": "https://github.com/rust-lang/rust/commit/4c7c5e597f2c7d6d9453a8288d54a211ae0414bb"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "a2ca4bc189c87faae28f66fa694633ab1ade0125", "filename": "compiler/rustc_trait_selection/src/solve/search_graph/mod.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/46c7c91ce746e9edb94dad5a4d4d5fd682582c78/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c7c91ce746e9edb94dad5a4d4d5fd682582c78/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs?ref=46c7c91ce746e9edb94dad5a4d4d5fd682582c78", "patch": "@@ -7,7 +7,7 @@ use cache::ProvisionalCache;\n use overflow::OverflowData;\n use rustc_index::vec::IndexVec;\n use rustc_middle::ty::TyCtxt;\n-use std::collections::hash_map::Entry;\n+use std::{collections::hash_map::Entry, mem};\n \n rustc_index::newtype_index! {\n     pub struct StackDepth {}\n@@ -134,12 +134,15 @@ impl<'tcx> SearchGraph<'tcx> {\n         let provisional_entry_index = *cache.lookup_table.get(&goal).unwrap();\n         let provisional_entry = &mut cache.entries[provisional_entry_index];\n         let depth = provisional_entry.depth;\n+        // We eagerly update the response in the cache here. If we have to reevaluate\n+        // this goal we use the new response when hitting a cycle, and we definitely\n+        // want to access the final response whenever we look at the cache.\n+        let prev_response = mem::replace(&mut provisional_entry.response, response);\n+\n         // Was the current goal the root of a cycle and was the provisional response\n         // different from the final one.\n-        if has_been_used && provisional_entry.response != response {\n-            // If so, update the provisional reponse for this goal...\n-            provisional_entry.response = response;\n-            // ...remove all entries whose result depends on this goal\n+        if has_been_used && prev_response != response {\n+            // If so, remove all entries whose result depends on this goal\n             // from the provisional cache...\n             //\n             // That's not completely correct, as a nested goal can also"}, {"sha": "a3d97927bad2222037e19e1b5baa705e897a2278", "filename": "tests/ui/traits/new-solver/provisional-result-done.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/46c7c91ce746e9edb94dad5a4d4d5fd682582c78/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c7c91ce746e9edb94dad5a4d4d5fd682582c78/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.rs?ref=46c7c91ce746e9edb94dad5a4d4d5fd682582c78", "patch": "@@ -0,0 +1,37 @@\n+// known-bug: unknown\n+// compile-flags: -Ztrait-solver=next\n+// failure-status: 101\n+// normalize-stderr-test \"note: .*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"thread 'rustc' panicked.*\\n\" -> \"\"\n+// rustc-env:RUST_BACKTRACE=0\n+\n+// This tests checks that we update results in the provisional cache when\n+// we pop a goal from the stack.\n+#![feature(auto_traits)]\n+auto trait Coinductive {}\n+struct Foo<T>(T);\n+struct Bar<T>(T);\n+\n+impl<T> Coinductive for Foo<T>\n+where\n+    Bar<T>: Coinductive\n+{}\n+\n+impl<T> Coinductive for Bar<T>\n+where\n+    Foo<T>: Coinductive,\n+    Bar<T>: ConstrainInfer,\n+{}\n+\n+trait ConstrainInfer {}\n+impl ConstrainInfer for Bar<u8> {}\n+impl ConstrainInfer for Foo<u16> {}\n+\n+fn impls<T: Coinductive>() -> T { todo!() }\n+\n+fn constrain<T: ConstrainInfer>(_: T) {}\n+\n+fn main() {\n+    // This should constrain `_` to `u8`.\n+    impls::<Foo<_>>();\n+}"}, {"sha": "ffc92b81f089e7d3b0c83443b62fb5a9d745d49e", "filename": "tests/ui/traits/new-solver/provisional-result-done.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46c7c91ce746e9edb94dad5a4d4d5fd682582c78/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46c7c91ce746e9edb94dad5a4d4d5fd682582c78/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.stderr?ref=46c7c91ce746e9edb94dad5a4d4d5fd682582c78", "patch": "@@ -0,0 +1,6 @@\n+error: the compiler unexpectedly panicked. this is a bug.\n+\n+query stack during panic:\n+#0 [check_well_formed] checking that `<impl at $DIR/provisional-result-done.rs:20:1: 20:31>` is well-formed\n+#1 [check_mod_type_wf] checking that types are well-formed in top-level module\n+end of query stack"}]}