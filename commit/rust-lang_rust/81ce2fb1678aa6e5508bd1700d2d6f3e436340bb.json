{"sha": "81ce2fb1678aa6e5508bd1700d2d6f3e436340bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxY2UyZmIxNjc4YWE2ZTU1MDhiZDE3MDBkMmQ2ZjNlNDM2MzQwYmI=", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-05-21T17:35:49Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-09-09T17:49:07Z"}, "message": "Ignore automatically derived impls of `Clone` and `Debug` in dead code analysis", "tree": {"sha": "a83ca10605dd4a49dd205eea6785b23f60be4184", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a83ca10605dd4a49dd205eea6785b23f60be4184"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb", "html_url": "https://github.com/rust-lang/rust/commit/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "261e34d5348218cbea3cd9a589c49aba92c322d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/261e34d5348218cbea3cd9a589c49aba92c322d4", "html_url": "https://github.com/rust-lang/rust/commit/261e34d5348218cbea3cd9a589c49aba92c322d4"}], "stats": {"total": 41, "additions": 11, "deletions": 30}, "files": [{"sha": "41e6ad12d058923a9af3d1a1b616bd7d650ced23", "filename": "clippy_lints/src/macro_use.rs", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/clippy_lints%2Fsrc%2Fmacro_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/clippy_lints%2Fsrc%2Fmacro_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmacro_use.rs?ref=81ce2fb1678aa6e5508bd1700d2d6f3e436340bb", "patch": "@@ -29,36 +29,21 @@ declare_clippy_lint! {\n     \"#[macro_use] is no longer needed\"\n }\n \n-const BRACKETS: &[char] = &['<', '>'];\n-\n #[derive(Clone, Debug, PartialEq, Eq)]\n struct PathAndSpan {\n     path: String,\n     span: Span,\n }\n \n-/// `MacroRefData` includes the name of the macro\n-/// and the path from `SourceMap::span_to_filename`.\n+/// `MacroRefData` includes the name of the macro.\n #[derive(Debug, Clone)]\n pub struct MacroRefData {\n     name: String,\n-    path: String,\n }\n \n impl MacroRefData {\n-    pub fn new(name: String, callee: Span, cx: &LateContext<'_>) -> Self {\n-        let sm = cx.sess().source_map();\n-        let mut path = sm.filename_for_diagnostics(&sm.span_to_filename(callee)).to_string();\n-\n-        // std lib paths are <::std::module::file type>\n-        // so remove brackets, space and type.\n-        if path.contains('<') {\n-            path = path.replace(BRACKETS, \"\");\n-        }\n-        if path.contains(' ') {\n-            path = path.split(' ').next().unwrap().to_string();\n-        }\n-        Self { name, path }\n+    pub fn new(name: String) -> Self {\n+        Self { name }\n     }\n }\n \n@@ -78,15 +63,15 @@ impl MacroUseImports {\n     fn push_unique_macro(&mut self, cx: &LateContext<'_>, span: Span) {\n         let call_site = span.source_callsite();\n         let name = snippet(cx, cx.sess().source_map().span_until_char(call_site, '!'), \"_\");\n-        if let Some(callee) = span.source_callee() {\n+        if let Some(_callee) = span.source_callee() {\n             if !self.collected.contains(&call_site) {\n                 let name = if name.contains(\"::\") {\n                     name.split(\"::\").last().unwrap().to_string()\n                 } else {\n                     name.to_string()\n                 };\n \n-                self.mac_refs.push(MacroRefData::new(name, callee.def_site, cx));\n+                self.mac_refs.push(MacroRefData::new(name));\n                 self.collected.insert(call_site);\n             }\n         }\n@@ -95,10 +80,10 @@ impl MacroUseImports {\n     fn push_unique_macro_pat_ty(&mut self, cx: &LateContext<'_>, span: Span) {\n         let call_site = span.source_callsite();\n         let name = snippet(cx, cx.sess().source_map().span_until_char(call_site, '!'), \"_\");\n-        if let Some(callee) = span.source_callee() {\n+        if let Some(_callee) = span.source_callee() {\n             if !self.collected.contains(&call_site) {\n                 self.mac_refs\n-                    .push(MacroRefData::new(name.to_string(), callee.def_site, cx));\n+                    .push(MacroRefData::new(name.to_string()));\n                 self.collected.insert(call_site);\n             }\n         }"}, {"sha": "89be7bf844f3a83f637aa27ed823df524e6ea2fc", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=81ce2fb1678aa6e5508bd1700d2d6f3e436340bb", "patch": "@@ -3,8 +3,7 @@ use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_ast::ast::{LitKind, StrStyle};\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_hir::{BorrowKind, Expr, ExprKind, HirId};\n+use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{BytePos, Span};\n@@ -53,10 +52,7 @@ declare_clippy_lint! {\n }\n \n #[derive(Clone, Default)]\n-pub struct Regex {\n-    spans: FxHashSet<Span>,\n-    last: Option<HirId>,\n-}\n+pub struct Regex {}\n \n impl_lint_pass!(Regex => [INVALID_REGEX, TRIVIAL_REGEX]);\n "}, {"sha": "f1f9c123dc842880683a14584d5c63f7bb7aa9c1", "filename": "tests/ui/default_trait_access.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/tests%2Fui%2Fdefault_trait_access.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/tests%2Fui%2Fdefault_trait_access.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.fixed?ref=81ce2fb1678aa6e5508bd1700d2d6f3e436340bb", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(unused_imports)]\n+#![allow(unused_imports,dead_code)]\n #![deny(clippy::default_trait_access)]\n \n use std::default;"}, {"sha": "7f3dfc7f01366e0d39b23d59350a2428fe6b0e7c", "filename": "tests/ui/default_trait_access.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/tests%2Fui%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81ce2fb1678aa6e5508bd1700d2d6f3e436340bb/tests%2Fui%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.rs?ref=81ce2fb1678aa6e5508bd1700d2d6f3e436340bb", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(unused_imports)]\n+#![allow(unused_imports,dead_code)]\n #![deny(clippy::default_trait_access)]\n \n use std::default;"}]}