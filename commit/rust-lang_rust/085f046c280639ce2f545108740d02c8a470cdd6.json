{"sha": "085f046c280639ce2f545108740d02c8a470cdd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NWYwNDZjMjgwNjM5Y2UyZjU0NTEwODc0MGQwMmM4YTQ3MGNkZDY=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-21T06:02:43Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-03T10:48:15Z"}, "message": "Add is_defaulted_unit helper method", "tree": {"sha": "a35bda692fea507d0f2a57980de2bdbdb4c9d9fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a35bda692fea507d0f2a57980de2bdbdb4c9d9fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/085f046c280639ce2f545108740d02c8a470cdd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/085f046c280639ce2f545108740d02c8a470cdd6", "html_url": "https://github.com/rust-lang/rust/commit/085f046c280639ce2f545108740d02c8a470cdd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/085f046c280639ce2f545108740d02c8a470cdd6/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dbaefb608ac71afedadd9810e0bba6348e27c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dbaefb608ac71afedadd9810e0bba6348e27c6a", "html_url": "https://github.com/rust-lang/rust/commit/5dbaefb608ac71afedadd9810e0bba6348e27c6a"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "d5efc8f18939e604dc35741f2a8db6f80b94ebd4", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/085f046c280639ce2f545108740d02c8a470cdd6/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/085f046c280639ce2f545108740d02c8a470cdd6/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=085f046c280639ce2f545108740d02c8a470cdd6", "patch": "@@ -425,9 +425,7 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n         // Test whether this is a `()` which was produced by defaulting a\n         // diverging type variable with `!` disabled. If so, we may need\n         // to raise a warning.\n-        if let ty::TyTuple(_, true) = obligation.predicate.skip_binder()\n-                                                          .self_ty().sty {\n-\n+        if obligation.predicate.skip_binder().self_ty().is_defaulted_unit() {\n             let mut raise_warning = true;\n             // Don't raise a warning if the trait is implemented for ! and only\n             // permits a trivial implementation for !. This stops us warning"}, {"sha": "9bba4c6e37a69dda4b77460bd6a0f5e5fd4b6d22", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/085f046c280639ce2f545108740d02c8a470cdd6/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/085f046c280639ce2f545108740d02c8a470cdd6/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=085f046c280639ce2f545108740d02c8a470cdd6", "patch": "@@ -977,6 +977,15 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n         }\n     }\n \n+    // Test whether this is a `()` which was produced by defaulting a\n+    // diverging type variable with feature(never_type) disabled.\n+    pub fn is_defaulted_unit(&self) -> bool {\n+        match self.sty {\n+            TyTuple(_, true) => true,\n+            _ => false,\n+        }\n+    }\n+\n     /// Checks whether a type is visibly uninhabited from a particular module.\n     /// # Example\n     /// ```rust"}]}