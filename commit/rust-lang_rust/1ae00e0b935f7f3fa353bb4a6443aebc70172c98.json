{"sha": "1ae00e0b935f7f3fa353bb4a6443aebc70172c98", "node_id": "C_kwDOAAsO6NoAKDFhZTAwZTBiOTM1ZjdmM2ZhMzUzYmI0YTY0NDNhZWJjNzAxNzJjOTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-19T23:37:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-19T23:37:24Z"}, "message": "Rollup merge of #94002 - GuillaumeGomez:duplicated-sidebar-macro, r=notriddle\n\nrustdoc: Avoid duplicating macros in sidebar\n\nFixes #93912.\n\ncc ``````@jsha`````` (for the GUI test)\nr? ``````@camelid``````", "tree": {"sha": "38f891e34d4be80d1179e28979c9d5ed099ec08e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38f891e34d4be80d1179e28979c9d5ed099ec08e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ae00e0b935f7f3fa353bb4a6443aebc70172c98", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiEX80CRBK7hj4Ov3rIwAAPg4IAEAiH+34EK4Ccqe/XAUd6oA/\nCMb79JtCBxeRqqtPnwHfUw/4Pn75z51eshxk7OTmiBH5lCgFdj/ZQowKkeED0wRA\nMcD2EO+frltW4tFo4w62F2koPwyhaJAdT8seMZMFxtZHdwfxAYhbSOwXq5D4TygX\nDa1KPqnP5/RmpE7Qo6U8twbSy3C6C6gOB+IEmYLziNyR2cDf+s+xTfICJ8LTvA8M\nrSc5sVVdpJv4jfwMFTX5PNEv8UIhuNsHvNlSLcqH/krHpCHUrCZfT1Q9vtMbIxBv\noHkVYY8pHbrOQyKfgzQ0hpwsJdxtOqxozCjF1mmcgOsZYKbOJz+k4bPI81dXl2M=\n=M2JU\n-----END PGP SIGNATURE-----\n", "payload": "tree 38f891e34d4be80d1179e28979c9d5ed099ec08e\nparent 575f6c5cc1779508cd30847ccb9f3f489f5e6c00\nparent d9ea7bc98d760b1bfabf192bbadf7e73df0ade68\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645313844 +0100\ncommitter GitHub <noreply@github.com> 1645313844 +0100\n\nRollup merge of #94002 - GuillaumeGomez:duplicated-sidebar-macro, r=notriddle\n\nrustdoc: Avoid duplicating macros in sidebar\n\nFixes #93912.\n\ncc ``````@jsha`````` (for the GUI test)\nr? ``````@camelid``````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae00e0b935f7f3fa353bb4a6443aebc70172c98", "html_url": "https://github.com/rust-lang/rust/commit/1ae00e0b935f7f3fa353bb4a6443aebc70172c98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575f6c5cc1779508cd30847ccb9f3f489f5e6c00", "url": "https://api.github.com/repos/rust-lang/rust/commits/575f6c5cc1779508cd30847ccb9f3f489f5e6c00", "html_url": "https://github.com/rust-lang/rust/commit/575f6c5cc1779508cd30847ccb9f3f489f5e6c00"}, {"sha": "d9ea7bc98d760b1bfabf192bbadf7e73df0ade68", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9ea7bc98d760b1bfabf192bbadf7e73df0ade68", "html_url": "https://github.com/rust-lang/rust/commit/d9ea7bc98d760b1bfabf192bbadf7e73df0ade68"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "a7f852a432c82c8db4a65a8bd64c3c0efd19a780", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=1ae00e0b935f7f3fa353bb4a6443aebc70172c98", "patch": "@@ -250,6 +250,8 @@ impl<'tcx> Context<'tcx> {\n     fn build_sidebar_items(&self, m: &clean::Module) -> BTreeMap<String, Vec<NameDoc>> {\n         // BTreeMap instead of HashMap to get a sorted output\n         let mut map: BTreeMap<_, Vec<_>> = BTreeMap::new();\n+        let mut inserted: FxHashMap<ItemType, FxHashSet<Symbol>> = FxHashMap::default();\n+\n         for item in &m.items {\n             if item.is_stripped() {\n                 continue;\n@@ -258,13 +260,16 @@ impl<'tcx> Context<'tcx> {\n             let short = item.type_();\n             let myname = match item.name {\n                 None => continue,\n-                Some(ref s) => s.to_string(),\n+                Some(s) => s,\n             };\n-            let short = short.to_string();\n-            map.entry(short).or_default().push((\n-                myname,\n-                Some(item.doc_value().map_or_else(String::new, |s| plain_text_summary(&s))),\n-            ));\n+            if inserted.entry(short).or_default().insert(myname) {\n+                let short = short.to_string();\n+                let myname = myname.to_string();\n+                map.entry(short).or_default().push((\n+                    myname,\n+                    Some(item.doc_value().map_or_else(String::new, |s| plain_text_summary(&s))),\n+                ));\n+            }\n         }\n \n         if self.shared.sort_modules_alphabetically {"}, {"sha": "c79b3a220c42c85b26e53d49e87a7d2bf457c4ab", "filename": "src/test/rustdoc-gui/duplicate-macro-reexport.goml", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/src%2Ftest%2Frustdoc-gui%2Fduplicate-macro-reexport.goml", "raw_url": "https://github.com/rust-lang/rust/raw/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/src%2Ftest%2Frustdoc-gui%2Fduplicate-macro-reexport.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fduplicate-macro-reexport.goml?ref=1ae00e0b935f7f3fa353bb4a6443aebc70172c98", "patch": "@@ -0,0 +1,14 @@\n+// This test ensures that there is no macro duplicates in the sidebar.\n+goto: file://|DOC_PATH|/test_docs/macro.a.html\n+// Waiting for the elements in the sidebar to be rendered.\n+wait-for: \".sidebar-elems .others .macro\"\n+// Check there is only one macro named \"a\" listed in the sidebar.\n+assert-count: (\n+    \"//*[@class='sidebar-elems']//*[@class='others']/*[@class='block macro']//li/a[text()='a']\",\n+    1,\n+)\n+// Check there is only one macro named \"b\" listed in the sidebar.\n+assert-count: (\n+    \"//*[@class='sidebar-elems']//*[@class='others']/*[@class='block macro']//li/a[text()='b']\",\n+    1,\n+)"}, {"sha": "348b1a65c786c8459a5e217708ee437872be0292", "filename": "src/test/rustdoc-gui/src/test_docs/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs?ref=1ae00e0b935f7f3fa353bb4a6443aebc70172c98", "patch": "@@ -271,3 +271,6 @@ impl EmptyTrait1 for HasEmptyTraits {}\n impl EmptyTrait2 for HasEmptyTraits {}\n #[doc(cfg(feature = \"some-feature\"))]\n impl EmptyTrait3 for HasEmptyTraits {}\n+\n+mod macros;\n+pub use macros::*;"}, {"sha": "07b2b97926d43ffadc0b55ecdca2ae4a6582cb7f", "filename": "src/test/rustdoc-gui/src/test_docs/macros.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae00e0b935f7f3fa353bb4a6443aebc70172c98/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Fmacros.rs?ref=1ae00e0b935f7f3fa353bb4a6443aebc70172c98", "patch": "@@ -0,0 +1,4 @@\n+#[macro_export]\n+macro_rules! a{ () => {}}\n+#[macro_export]\n+macro_rules! b{ () => {}}"}]}