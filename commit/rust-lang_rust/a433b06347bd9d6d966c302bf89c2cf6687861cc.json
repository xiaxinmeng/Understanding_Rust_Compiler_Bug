{"sha": "a433b06347bd9d6d966c302bf89c2cf6687861cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MzNiMDYzNDdiZDlkNmQ5NjZjMzAyYmY4OWMyY2Y2Njg3ODYxY2M=", "commit": {"author": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-04-15T10:18:04Z"}, "committer": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-06-09T15:28:31Z"}, "message": "NonZero abs.", "tree": {"sha": "42608530b6dfaa670791a92542da3918a8673f2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42608530b6dfaa670791a92542da3918a8673f2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a433b06347bd9d6d966c302bf89c2cf6687861cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a433b06347bd9d6d966c302bf89c2cf6687861cc", "html_url": "https://github.com/rust-lang/rust/commit/a433b06347bd9d6d966c302bf89c2cf6687861cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a433b06347bd9d6d966c302bf89c2cf6687861cc/comments", "author": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7a1a9d075d7abd4312499c13a7322e41e5c2606", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a1a9d075d7abd4312499c13a7322e41e5c2606", "html_url": "https://github.com/rust-lang/rust/commit/f7a1a9d075d7abd4312499c13a7322e41e5c2606"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "6fa394b2ff05924bebdbaeaf851e2c18ee9e2c20", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a433b06347bd9d6d966c302bf89c2cf6687861cc/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a433b06347bd9d6d966c302bf89c2cf6687861cc/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=a433b06347bd9d6d966c302bf89c2cf6687861cc", "patch": "@@ -429,6 +429,51 @@ nonzero_unsigned_operations! {\n     NonZeroUsize(usize);\n }\n \n+// A bunch of methods for signed nonzero types only.\n+macro_rules! nonzero_signed_operations {\n+    ( $( $Ty: ident($Int: ty) -> $Uty: ident($Uint: ty); )+ ) => {\n+        $(\n+            impl $Ty {\n+                /// Computes the absolute value of self.\n+                #[doc = concat!(\"See [`\", stringify!($Int), \"::abs`]\")]\n+                /// for documentation on overflow behaviour.\n+                ///\n+                /// # Example\n+                ///\n+                /// ```\n+                /// #![feature(nonzero_ops)]\n+                /// # #![feature(try_trait)]\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n+                ///\n+                /// # fn main() -> Result<(), std::option::NoneError> {\n+                #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n+                #[doc = concat!(\"let neg = \", stringify!($Ty), \"::new(-1)?;\")]\n+                ///\n+                /// assert_eq!(pos, pos.abs());\n+                /// assert_eq!(pos, neg.abs());\n+                /// # Ok(())\n+                /// # }\n+                /// ```\n+                #[unstable(feature = \"nonzero_ops\", issue = \"84186\")]\n+                #[inline]\n+                pub const fn abs(self) -> $Ty {\n+                    // SAFETY: This cannot overflow to zero.\n+                    unsafe { $Ty::new_unchecked(self.get().abs()) }\n+                }\n+            }\n+        )+\n+    }\n+}\n+\n+nonzero_signed_operations! {\n+    NonZeroI8(i8) -> NonZeroU8(u8);\n+    NonZeroI16(i16) -> NonZeroU16(u16);\n+    NonZeroI32(i32) -> NonZeroU32(u32);\n+    NonZeroI64(i64) -> NonZeroU64(u64);\n+    NonZeroI128(i128) -> NonZeroU128(u128);\n+    NonZeroIsize(isize) -> NonZeroUsize(usize);\n+}\n+\n macro_rules! nonzero_unsigned_is_power_of_two {\n     ( $( $Ty: ident )+ ) => {\n         $("}]}