{"sha": "a939d61cf7feac0f328aec07f050c4ac96c51d2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MzlkNjFjZjdmZWFjMGYzMjhhZWMwN2YwNTBjNGFjOTZjNTFkMmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-28T11:11:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-28T11:11:43Z"}, "message": "Auto merge of #4463 - flip1995:rollup-240kr2c, r=flip1995\n\nRollup of 2 pull requests\n\nSuccessful merges:\n\n - #4459 (Add note to avoid confusing)\n - #4460 (Fix `inherent_to_string` false positive)\n\nFailed merges:\n\nr? @ghost\n\nchangelog: none", "tree": {"sha": "2b4db20bf664096cc6d7c7120cdf66d0229f46a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b4db20bf664096cc6d7c7120cdf66d0229f46a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a939d61cf7feac0f328aec07f050c4ac96c51d2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a939d61cf7feac0f328aec07f050c4ac96c51d2c", "html_url": "https://github.com/rust-lang/rust/commit/a939d61cf7feac0f328aec07f050c4ac96c51d2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a939d61cf7feac0f328aec07f050c4ac96c51d2c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6c752b271cd427e1a0e3c68722ec2c0a34f3016", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c752b271cd427e1a0e3c68722ec2c0a34f3016", "html_url": "https://github.com/rust-lang/rust/commit/f6c752b271cd427e1a0e3c68722ec2c0a34f3016"}, {"sha": "236666138fa15fdd48b1c12180b2c9dc936441b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/236666138fa15fdd48b1c12180b2c9dc936441b4", "html_url": "https://github.com/rust-lang/rust/commit/236666138fa15fdd48b1c12180b2c9dc936441b4"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "26b9657589f38eee3870d25162190ee7fda6e6ea", "filename": "clippy_lints/src/inherent_to_string.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a939d61cf7feac0f328aec07f050c4ac96c51d2c/clippy_lints%2Fsrc%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a939d61cf7feac0f328aec07f050c4ac96c51d2c/clippy_lints%2Fsrc%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_to_string.rs?ref=a939d61cf7feac0f328aec07f050c4ac96c51d2c", "patch": "@@ -104,6 +104,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InherentToString {\n             if impl_item.ident.name.as_str() == \"to_string\";\n             let decl = &signature.decl;\n             if decl.implicit_self.has_implicit_self();\n+            if decl.inputs.len() == 1;\n \n             // Check if return type is String\n             if match_type(cx, return_ty(cx, impl_item.hir_id), &paths::STRING);"}, {"sha": "1fb26c66d9fbb8ef78b40c17c277b7e483b232ba", "filename": "doc/adding_lints.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a939d61cf7feac0f328aec07f050c4ac96c51d2c/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/a939d61cf7feac0f328aec07f050c4ac96c51d2c/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=a939d61cf7feac0f328aec07f050c4ac96c51d2c", "patch": "@@ -86,6 +86,8 @@ test. That allows us to check if the output is turning into what we want.\n \n Once we are satisfied with the output, we need to run\n `tests/ui/update-all-references.sh` to update the `.stderr` file for our lint.\n+Please note that, we should run `TESTNAME=ui/foo_functions cargo uitest`\n+every time before running `tests/ui/update-all-references.sh`.\n Running `TESTNAME=ui/foo_functions cargo uitest` should pass then. When we\n commit our lint, we need to commit the generated `.stderr` files, too.\n "}, {"sha": "e6cf337d1bb1baa932b13f3665cdc8d7764395ee", "filename": "tests/ui/inherent_to_string.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a939d61cf7feac0f328aec07f050c4ac96c51d2c/tests%2Fui%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a939d61cf7feac0f328aec07f050c4ac96c51d2c/tests%2Fui%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finherent_to_string.rs?ref=a939d61cf7feac0f328aec07f050c4ac96c51d2c", "patch": "@@ -1,5 +1,6 @@\n #![warn(clippy::inherent_to_string)]\n #![deny(clippy::inherent_to_string_shadow_display)]\n+#![allow(clippy::many_single_char_names)]\n \n use std::fmt;\n \n@@ -12,6 +13,7 @@ struct B;\n struct C;\n struct D;\n struct E;\n+struct F;\n \n impl A {\n     // Should be detected; emit warning\n@@ -64,6 +66,13 @@ impl E {\n     }\n }\n \n+impl F {\n+    // Should not be detected, as it does not match the function signature\n+    fn to_string(&self, _i: i32) -> String {\n+        \"F.to_string()\".to_string()\n+    }\n+}\n+\n fn main() {\n     let a = A;\n     a.to_string();\n@@ -81,4 +90,7 @@ fn main() {\n     d.to_string();\n \n     E::to_string();\n+\n+    let f = F;\n+    f.to_string(1);\n }"}, {"sha": "76d1bb873ebebd18fdd909324a71e1d49ccdf65d", "filename": "tests/ui/inherent_to_string.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a939d61cf7feac0f328aec07f050c4ac96c51d2c/tests%2Fui%2Finherent_to_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a939d61cf7feac0f328aec07f050c4ac96c51d2c/tests%2Fui%2Finherent_to_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finherent_to_string.stderr?ref=a939d61cf7feac0f328aec07f050c4ac96c51d2c", "patch": "@@ -1,5 +1,5 @@\n error: implementation of inherent method `to_string(&self) -> String` for type `A`\n-  --> $DIR/inherent_to_string.rs:18:5\n+  --> $DIR/inherent_to_string.rs:20:5\n    |\n LL | /     fn to_string(&self) -> String {\n LL | |         \"A.to_string()\".to_string()\n@@ -10,7 +10,7 @@ LL | |     }\n    = help: implement trait `Display` for type `A` instead\n \n error: type `C` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n-  --> $DIR/inherent_to_string.rs:42:5\n+  --> $DIR/inherent_to_string.rs:44:5\n    |\n LL | /     fn to_string(&self) -> String {\n LL | |         \"C.to_string()\".to_string()"}]}