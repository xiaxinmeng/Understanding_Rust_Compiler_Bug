{"sha": "57c467824bf72e0346fc7bc7140e232664c4e891", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3YzQ2NzgyNGJmNzJlMDM0NmZjN2JjNzE0MGUyMzI2NjRjNGU4OTE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-10-16T13:50:44Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-10-16T14:58:08Z"}, "message": "Cleanup `fn is_mutable` by removing some unnecessary control-flow breaks.\n\n(This makes it a little easier to add instrumentation of the entry and\nexit by adding `debug!` at the beginning and end, though note that the\nfunction body *does* use the `?` operator...)", "tree": {"sha": "5a1c43270208cc0ce8687986ac067c34f2088b7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a1c43270208cc0ce8687986ac067c34f2088b7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57c467824bf72e0346fc7bc7140e232664c4e891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57c467824bf72e0346fc7bc7140e232664c4e891", "html_url": "https://github.com/rust-lang/rust/commit/57c467824bf72e0346fc7bc7140e232664c4e891", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57c467824bf72e0346fc7bc7140e232664c4e891/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0416cc093937473aa96908e2e574aa32a1ac12b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0416cc093937473aa96908e2e574aa32a1ac12b", "html_url": "https://github.com/rust-lang/rust/commit/d0416cc093937473aa96908e2e574aa32a1ac12b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ae79394dfebe09aa9a423d4b25b1ff0aca394082", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57c467824bf72e0346fc7bc7140e232664c4e891/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57c467824bf72e0346fc7bc7140e232664c4e891/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=57c467824bf72e0346fc7bc7140e232664c4e891", "patch": "@@ -1943,7 +1943,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         }\n     }\n \n-    /// Whether this value be written or borrowed mutably.\n+    /// Whether this value can be written or borrowed mutably.\n     /// Returns the root place if the place passed in is a projection.\n     fn is_mutable<'d>(\n         &self,\n@@ -2021,14 +2021,14 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                             ty::RawPtr(tnm) => {\n                                 match tnm.mutbl {\n                                     // `*const` raw pointers are not mutable\n-                                    hir::MutImmutable => return Err(place),\n+                                    hir::MutImmutable => Err(place),\n                                     // `*mut` raw pointers are always mutable, regardless of\n                                     // context. The users have to check by themselves.\n                                     hir::MutMutable => {\n-                                        return Ok(RootPlace {\n+                                        Ok(RootPlace {\n                                             place,\n                                             is_local_mutation_allowed,\n-                                        });\n+                                        })\n                                     }\n                                 }\n                             }"}]}