{"sha": "b0481147184a8ee70f066423dc077ffa0bd821b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNDgxMTQ3MTg0YThlZTcwZjA2NjQyM2RjMDc3ZmZhMGJkODIxYjU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-12-19T08:48:28Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-12-19T08:48:28Z"}, "message": "debuginfo: Create debuginfo for for-loop variables again.", "tree": {"sha": "9de8f7adfb82bb3afc20aa14e4671a1388556136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9de8f7adfb82bb3afc20aa14e4671a1388556136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0481147184a8ee70f066423dc077ffa0bd821b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0481147184a8ee70f066423dc077ffa0bd821b5", "html_url": "https://github.com/rust-lang/rust/commit/b0481147184a8ee70f066423dc077ffa0bd821b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0481147184a8ee70f066423dc077ffa0bd821b5/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9a48492a82f805aa40d8b6fea290badbab0d1b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a48492a82f805aa40d8b6fea290badbab0d1b1", "html_url": "https://github.com/rust-lang/rust/commit/f9a48492a82f805aa40d8b6fea290badbab0d1b1"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "e1b04fde98de6890cf989a39ee823cf4aa104fc8", "filename": "src/librustc_trans/trans/controlflow.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b0481147184a8ee70f066423dc077ffa0bd821b5/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0481147184a8ee70f066423dc077ffa0bd821b5/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs?ref=b0481147184a8ee70f066423dc077ffa0bd821b5", "patch": "@@ -277,6 +277,7 @@ pub fn trans_for<'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n     debug!(\"iterator type is {}, datum type is {}\",\n            ppaux::ty_to_string(bcx.tcx(), iterator_type),\n            ppaux::ty_to_string(bcx.tcx(), iterator_datum.ty));\n+\n     let lliterator = load_ty(bcx, iterator_datum.val, iterator_datum.ty);\n \n     // Create our basic blocks and set up our loop cleanups.\n@@ -356,6 +357,8 @@ pub fn trans_for<'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n                                        llpayload,\n                                        binding_cleanup_scope_id);\n \n+    debuginfo::create_for_loop_var_metadata(body_bcx_in, pat);\n+\n     // Codegen the body.\n     body_bcx_out = trans_block(body_bcx_out, body, expr::Ignore);\n     body_bcx_out ="}, {"sha": "018cf7a02a3482ccd15fb016545b3dc6cc74d7a1", "filename": "src/librustc_trans/trans/debuginfo.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/b0481147184a8ee70f066423dc077ffa0bd821b5/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0481147184a8ee70f066423dc077ffa0bd821b5/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs?ref=b0481147184a8ee70f066423dc077ffa0bd821b5", "patch": "@@ -1051,6 +1051,43 @@ pub fn create_argument_metadata(bcx: Block, arg: &ast::Arg) {\n     })\n }\n \n+/// Creates debug information for the given for-loop variable.\n+///\n+/// Adds the created metadata nodes directly to the crate's IR.\n+pub fn create_for_loop_var_metadata(bcx: Block, pat: &ast::Pat) {\n+    if fn_should_be_ignored(bcx.fcx) {\n+        return;\n+    }\n+\n+    let def_map = &bcx.tcx().def_map;\n+\n+    pat_util::pat_bindings(def_map, pat, |_, node_id, span, spanned_ident| {\n+        let datum = match bcx.fcx.lllocals.borrow().get(&node_id).cloned() {\n+            Some(datum) => datum,\n+            None => {\n+                bcx.sess().span_bug(span,\n+                    format!(\"no entry in lllocals table for {}\",\n+                            node_id).as_slice());\n+            }\n+        };\n+\n+        if unsafe { llvm::LLVMIsAAllocaInst(datum.val) } == ptr::null_mut() {\n+            bcx.sess().span_bug(span, \"debuginfo::create_for_loop_var_metadata() - \\\n+                                       Referenced variable location is not an alloca!\");\n+        }\n+\n+        let scope_metadata = scope_metadata(bcx.fcx, node_id, span);\n+\n+        declare_local(bcx,\n+                      spanned_ident.node,\n+                      datum.ty,\n+                      scope_metadata,\n+                      DirectVariable { alloca: datum.val },\n+                      LocalVariable,\n+                      span);\n+    })\n+}\n+\n pub fn get_cleanup_debug_loc_for_ast_node<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n                                                     node_id: ast::NodeId,\n                                                     node_span: Span,"}, {"sha": "7636ffdb07dcd6a02a54e656d3db53d5a5a9bd75", "filename": "src/test/debuginfo/lexical-scope-in-for-loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b0481147184a8ee70f066423dc077ffa0bd821b5/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0481147184a8ee70f066423dc077ffa0bd821b5/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs?ref=b0481147184a8ee70f066423dc077ffa0bd821b5", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-android: FIXME(#10381)\n-// ignore-test: Not sure what is going on here --pcwalton\n // min-lldb-version: 310\n \n // compile-flags:-g"}]}