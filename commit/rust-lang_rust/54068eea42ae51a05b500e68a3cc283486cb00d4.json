{"sha": "54068eea42ae51a05b500e68a3cc283486cb00d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MDY4ZWVhNDJhZTUxYTA1YjUwMGU2OGEzY2MyODM0ODZjYjAwZDQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-08T00:19:36Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-08T00:19:36Z"}, "message": "Update Partial/Total Eq/Ord terminology", "tree": {"sha": "c46023bcb2b0e9bf91e9c8b3e7d406a47304a2d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c46023bcb2b0e9bf91e9c8b3e7d406a47304a2d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54068eea42ae51a05b500e68a3cc283486cb00d4", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54068eea42ae51a05b500e68a3cc283486cb00d4", "html_url": "https://github.com/rust-lang/rust/commit/54068eea42ae51a05b500e68a3cc283486cb00d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54068eea42ae51a05b500e68a3cc283486cb00d4/comments", "author": null, "committer": null, "parents": [{"sha": "3c442b92ae2dc684e02f9668eb8c54aad55f1d9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c442b92ae2dc684e02f9668eb8c54aad55f1d9d", "html_url": "https://github.com/rust-lang/rust/commit/3c442b92ae2dc684e02f9668eb8c54aad55f1d9d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "7727bb824db3abf443d5ae134443bfba8ac34d03", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54068eea42ae51a05b500e68a3cc283486cb00d4/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54068eea42ae51a05b500e68a3cc283486cb00d4/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=54068eea42ae51a05b500e68a3cc283486cb00d4", "patch": "@@ -30,7 +30,7 @@ pub fn expand_deriving_eq(cx: &mut ExtCtxt,\n             |cx, span, subexpr, self_f, other_fs| {\n                 let other_f = match other_fs {\n                     [ref o_f] => o_f,\n-                    _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(Eq)`\")\n+                    _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(PartialEq)`\")\n                 };\n \n                 let eq = cx.expr_binary(span, ast::BiEq, self_f, other_f.clone());\n@@ -47,7 +47,7 @@ pub fn expand_deriving_eq(cx: &mut ExtCtxt,\n             |cx, span, subexpr, self_f, other_fs| {\n                 let other_f = match other_fs {\n                     [ref o_f] => o_f,\n-                    _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(Eq)`\")\n+                    _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(PartialEq)`\")\n                 };\n \n                 let eq = cx.expr_binary(span, ast::BiNe, self_f, other_f.clone());"}, {"sha": "cd44dde7004d84d189c702ae519f77fd701ae62b", "filename": "src/libsyntax/ext/deriving/cmp/ord.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54068eea42ae51a05b500e68a3cc283486cb00d4/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54068eea42ae51a05b500e68a3cc283486cb00d4/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs?ref=54068eea42ae51a05b500e68a3cc283486cb00d4", "patch": "@@ -146,7 +146,7 @@ pub fn cs_partial_cmp(cx: &mut ExtCtxt, span: Span,\n             let new = {\n                 let other_f = match other_fs {\n                     [ref o_f] => o_f,\n-                    _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(Ord)`\"),\n+                    _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(PartialOrd)`\"),\n                 };\n \n                 let args = vec![\n@@ -170,7 +170,7 @@ pub fn cs_partial_cmp(cx: &mut ExtCtxt, span: Span,\n         equals_expr.clone(),\n         |cx, span, (self_args, tag_tuple), _non_self_args| {\n             if self_args.len() != 2 {\n-                cx.span_bug(span, \"not exactly 2 arguments in `deriving(Ord)`\")\n+                cx.span_bug(span, \"not exactly 2 arguments in `deriving(PartialOrd)`\")\n             } else {\n                 some_ordering_collapsed(cx, span, PartialCmpOp, tag_tuple)\n             }\n@@ -204,7 +204,7 @@ fn cs_op(less: bool, equal: bool, cx: &mut ExtCtxt,\n             */\n             let other_f = match other_fs {\n                 [ref o_f] => o_f,\n-                _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(Ord)`\")\n+                _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(PartialOrd)`\")\n             };\n \n             let cmp = cx.expr_binary(span, op, self_f.clone(), other_f.clone());\n@@ -218,7 +218,7 @@ fn cs_op(less: bool, equal: bool, cx: &mut ExtCtxt,\n         cx.expr_bool(span, equal),\n         |cx, span, (self_args, tag_tuple), _non_self_args| {\n             if self_args.len() != 2 {\n-                cx.span_bug(span, \"not exactly 2 arguments in `deriving(Ord)`\")\n+                cx.span_bug(span, \"not exactly 2 arguments in `deriving(PartialOrd)`\")\n             } else {\n                 let op = match (less, equal) {\n                     (true,  true) => LeOp, (true,  false) => LtOp,"}, {"sha": "d84ad677e5df50f85fe44f9d6dbb05ae67e49ba8", "filename": "src/libsyntax/ext/deriving/cmp/totalord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54068eea42ae51a05b500e68a3cc283486cb00d4/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54068eea42ae51a05b500e68a3cc283486cb00d4/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs?ref=54068eea42ae51a05b500e68a3cc283486cb00d4", "patch": "@@ -108,7 +108,7 @@ pub fn cs_cmp(cx: &mut ExtCtxt, span: Span,\n         cx.expr_path(equals_path.clone()),\n         |cx, span, (self_args, tag_tuple), _non_self_args| {\n             if self_args.len() != 2 {\n-                cx.span_bug(span, \"not exactly 2 arguments in `deriving(TotalOrd)`\")\n+                cx.span_bug(span, \"not exactly 2 arguments in `deriving(Ord)`\")\n             } else {\n                 ordering_collapsed(cx, span, tag_tuple)\n             }"}]}