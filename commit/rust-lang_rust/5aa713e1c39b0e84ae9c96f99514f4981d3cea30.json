{"sha": "5aa713e1c39b0e84ae9c96f99514f4981d3cea30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYTcxM2UxYzM5YjBlODRhZTljOTZmOTk1MTRmNDk4MWQzY2VhMzA=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-30T14:51:20Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-30T14:51:20Z"}, "message": "Eliminate an unwrap", "tree": {"sha": "f5095305396f0beec60accb233feaf7903f8384c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5095305396f0beec60accb233feaf7903f8384c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5aa713e1c39b0e84ae9c96f99514f4981d3cea30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5aa713e1c39b0e84ae9c96f99514f4981d3cea30", "html_url": "https://github.com/rust-lang/rust/commit/5aa713e1c39b0e84ae9c96f99514f4981d3cea30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5aa713e1c39b0e84ae9c96f99514f4981d3cea30/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e0af1fee19c2ff056e20a55464c233dc30e5c92", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0af1fee19c2ff056e20a55464c233dc30e5c92", "html_url": "https://github.com/rust-lang/rust/commit/4e0af1fee19c2ff056e20a55464c233dc30e5c92"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "4e66d21214b29dd570f8ae338bc914bb1d4b2bd8", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5aa713e1c39b0e84ae9c96f99514f4981d3cea30/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5aa713e1c39b0e84ae9c96f99514f4981d3cea30/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=5aa713e1c39b0e84ae9c96f99514f4981d3cea30", "patch": "@@ -320,17 +320,18 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         local: mir::Local,\n         layout: Option<TyLayout<'tcx>>,\n     ) -> EvalResult<'tcx, TyLayout<'tcx>> {\n-        let cell = &frame.locals[local].layout;\n-        if cell.get().is_none() {\n-            let layout = ::interpret::operand::from_known_layout(layout, || {\n-                let local_ty = frame.mir.local_decls[local].ty;\n-                let local_ty = self.monomorphize_with_substs(local_ty, frame.instance.substs);\n-                self.layout_of(local_ty)\n-            })?;\n-            cell.set(Some(layout));\n+        match frame.locals[local].layout.get() {\n+            None => {\n+                let layout = ::interpret::operand::from_known_layout(layout, || {\n+                    let local_ty = frame.mir.local_decls[local].ty;\n+                    let local_ty = self.monomorphize_with_substs(local_ty, frame.instance.substs);\n+                    self.layout_of(local_ty)\n+                })?;\n+                frame.locals[local].layout.set(Some(layout));\n+                Ok(layout)\n+            }\n+            Some(layout) => Ok(layout),\n         }\n-\n-        Ok(cell.get().unwrap())\n     }\n \n     pub fn str_to_immediate(&mut self, s: &str) -> EvalResult<'tcx, Immediate<M::PointerTag>> {"}]}