{"sha": "8b778a5f8d244a402355cc532107372beec4afc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNzc4YTVmOGQyNDRhNDAyMzU1Y2M1MzIxMDczNzJiZWVjNGFmYzg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-30T21:52:00Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-30T21:52:00Z"}, "message": "Revert \"Fix an ICE on an invalid `binding @ ...` in a tuple struct pattern\"\n\nThis reverts commit f5e5eb6f46ef2cf0dd45dba4f975305509334fc6.", "tree": {"sha": "296e6558007cda27922f502af5a0fffcf29a4804", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/296e6558007cda27922f502af5a0fffcf29a4804"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b778a5f8d244a402355cc532107372beec4afc8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXmatGLoofN5+9u4rsJhshcDi2qEFAl8jQQUACgkQsJhshcDi\n2qH3cg/+NeCxwTFxgwEtzERpodmUhJbvuTah6hQLgi8Lzu0m6sKLkyXs+II/ZlGu\ng6l5ub2NE43yfUvl9X1Gzoy5jg4KaDJ/jwppyibTVDdsuMEvB1BnSuzzAlb8oSZx\nZsyciiA8SaruxvUw9EU451vtqZmUN9XUUH3MXRj3n0xNzZbgQ0AwLXhbXIy2j0Z+\nO/Bn+Mac5PUqiGdAFYGrqpZV+KOxMsQb0oW0Dia5rC9r7OgDChMDCyeyeRsXfItT\nApTrnTyc9dItwgWpR5xSYE8ob4t7A23p9lS3nPX5IhAORR0Tc728BzUx+mNmuCv8\nnSnwFIKBRg/KtbYm32uNWUv8UpY6TLqRjaJEsTA5dMj/aRdHCk138WKxEnf4OAqS\nrTvJdHPRFlk/Z9ii22l83lPKTjUjkgjq89OSpTqEOq4GhiKsorUCkzpoFycucWmx\nP6h7px4mnQmYGPnSDWaBFqUrgulafElrFzVbaO1ZuNy2qCZvoV/hICAT+ADz6K1r\n6ld2YrJ+7NYN2sdFBC7jqAE1sbN5cuNN2yqKmNb1UCb7+N0hlMmmPgAWid1NXsYo\nfgFf+T06/Eu+/Dk+ri2FyGBCMkVtyh+O24zX6UFvWunxDiHvws66DDl2dlvq624a\nHnKx1G26kd5Sdsjn8d+tzedms7iqRo+oRRUzLreVmw+HjakpOJs=\n=KxQ7\n-----END PGP SIGNATURE-----", "payload": "tree 296e6558007cda27922f502af5a0fffcf29a4804\nparent 438c59f010016a8a3a11fbcc4c18ae555d7adf94\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596145920 +0900\ncommitter Yuki Okushi <huyuumi.dev@gmail.com> 1596145920 +0900\n\nRevert \"Fix an ICE on an invalid `binding @ ...` in a tuple struct pattern\"\n\nThis reverts commit f5e5eb6f46ef2cf0dd45dba4f975305509334fc6.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b778a5f8d244a402355cc532107372beec4afc8", "html_url": "https://github.com/rust-lang/rust/commit/8b778a5f8d244a402355cc532107372beec4afc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b778a5f8d244a402355cc532107372beec4afc8/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "438c59f010016a8a3a11fbcc4c18ae555d7adf94", "url": "https://api.github.com/repos/rust-lang/rust/commits/438c59f010016a8a3a11fbcc4c18ae555d7adf94", "html_url": "https://github.com/rust-lang/rust/commit/438c59f010016a8a3a11fbcc4c18ae555d7adf94"}], "stats": {"total": 61, "additions": 9, "deletions": 52}, "files": [{"sha": "a8a2ce19b9744fae33dfe1b9294c5c6368ad8848", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8b778a5f8d244a402355cc532107372beec4afc8/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b778a5f8d244a402355cc532107372beec4afc8/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=8b778a5f8d244a402355cc532107372beec4afc8", "patch": "@@ -1510,30 +1510,20 @@ impl<'a, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n         pat_src: PatternSource,\n         bindings: &mut SmallVec<[(PatBoundCtx, FxHashSet<Ident>); 1]>,\n     ) {\n-        let is_tuple_struct_pat = matches!(pat.kind, PatKind::TupleStruct(_, _));\n-\n         // Visit all direct subpatterns of this pattern.\n         pat.walk(&mut |pat| {\n             debug!(\"resolve_pattern pat={:?} node={:?}\", pat, pat.kind);\n             match pat.kind {\n                 PatKind::Ident(bmode, ident, ref sub) => {\n-                    if is_tuple_struct_pat && sub.as_ref().filter(|p| p.is_rest()).is_some() {\n-                        // In tuple struct patterns ignore the invalid `ident @ ...`.\n-                        // It will be handled as an error by the AST lowering.\n-                        self.r\n-                            .session\n-                            .delay_span_bug(ident.span, \"ident in tuple pattern is invalid\");\n-                    } else {\n-                        // First try to resolve the identifier as some existing entity,\n-                        // then fall back to a fresh binding.\n-                        let has_sub = sub.is_some();\n-                        let res = self\n-                            .try_resolve_as_non_binding(pat_src, pat, bmode, ident, has_sub)\n-                            .unwrap_or_else(|| {\n-                                self.fresh_binding(ident, pat.id, pat_src, bindings)\n-                            });\n-                        self.r.record_partial_res(pat.id, PartialRes::new(res));\n-                    }\n+                    // First try to resolve the identifier as some existing entity,\n+                    // then fall back to a fresh binding.\n+                    let has_sub = sub.is_some();\n+                    let res = self\n+                        .try_resolve_as_non_binding(pat_src, pat, bmode, ident, has_sub)\n+                        .unwrap_or_else(|| {\n+                            self.fresh_binding(ident, pat.id, pat_src, bindings)\n+                        });\n+                    self.r.record_partial_res(pat.id, PartialRes::new(res));\n                 }\n                 PatKind::TupleStruct(ref path, ..) => {\n                     self.smart_resolve_path(pat.id, None, path, PathSource::TupleStruct(pat.span));"}, {"sha": "75632d11c1df0d65d00272b69db73c9d63442a20", "filename": "src/test/ui/issues/issue-74539.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/438c59f010016a8a3a11fbcc4c18ae555d7adf94/src%2Ftest%2Fui%2Fissues%2Fissue-74539.rs", "raw_url": "https://github.com/rust-lang/rust/raw/438c59f010016a8a3a11fbcc4c18ae555d7adf94/src%2Ftest%2Fui%2Fissues%2Fissue-74539.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-74539.rs?ref=438c59f010016a8a3a11fbcc4c18ae555d7adf94", "patch": "@@ -1,12 +0,0 @@\n-enum E {\n-    A(u8, u8),\n-}\n-\n-fn main() {\n-    let e = E::A(2, 3);\n-    match e {\n-        E::A(x @ ..) => {  //~ ERROR `x @` is not allowed in a tuple\n-            x //~ ERROR cannot find value `x` in this scope\n-        }\n-    };\n-}"}, {"sha": "94526dcd7cb3971223bcfa3bd263b9fb1d09bb59", "filename": "src/test/ui/issues/issue-74539.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/438c59f010016a8a3a11fbcc4c18ae555d7adf94/src%2Ftest%2Fui%2Fissues%2Fissue-74539.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/438c59f010016a8a3a11fbcc4c18ae555d7adf94/src%2Ftest%2Fui%2Fissues%2Fissue-74539.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-74539.stderr?ref=438c59f010016a8a3a11fbcc4c18ae555d7adf94", "patch": "@@ -1,21 +0,0 @@\n-error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/issue-74539.rs:9:13\n-   |\n-LL |             x\n-   |             ^ help: a local variable with a similar name exists: `e`\n-\n-error: `x @` is not allowed in a tuple struct\n-  --> $DIR/issue-74539.rs:8:14\n-   |\n-LL |         E::A(x @ ..) => {\n-   |              ^^^^^^ this is only allowed in slice patterns\n-   |\n-   = help: remove this and bind each tuple field independently\n-help: if you don't need to use the contents of x, discard the tuple's remaining fields\n-   |\n-LL |         E::A(..) => {\n-   |              ^^\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0425`."}]}