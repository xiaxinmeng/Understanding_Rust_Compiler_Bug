{"sha": "52eda13031f039b5996b7d863715b0439297071e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZWRhMTMwMzFmMDM5YjU5OTZiN2Q4NjM3MTViMDQzOTI5NzA3MWU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-10-15T11:42:27Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-10-22T10:33:35Z"}, "message": "Fix issue #64153 by checking for .rcgu.o suffix when trying to identify Rust generated object files.", "tree": {"sha": "0de6710faa2c471979db7c36c31be83b8e655754", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0de6710faa2c471979db7c36c31be83b8e655754"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52eda13031f039b5996b7d863715b0439297071e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52eda13031f039b5996b7d863715b0439297071e", "html_url": "https://github.com/rust-lang/rust/commit/52eda13031f039b5996b7d863715b0439297071e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52eda13031f039b5996b7d863715b0439297071e/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "412cec2e12ebb86fb526918431acc991ea4e540b", "url": "https://api.github.com/repos/rust-lang/rust/commits/412cec2e12ebb86fb526918431acc991ea4e540b", "html_url": "https://github.com/rust-lang/rust/commit/412cec2e12ebb86fb526918431acc991ea4e540b"}], "stats": {"total": 51, "additions": 30, "deletions": 21}, "files": [{"sha": "e169cfc4cc829c08f234f766c48502bea3c53aa0", "filename": "src/librustc_codegen_llvm/back/archive.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/52eda13031f039b5996b7d863715b0439297071e/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52eda13031f039b5996b7d863715b0439297071e/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs?ref=52eda13031f039b5996b7d863715b0439297071e", "patch": "@@ -9,7 +9,9 @@ use std::str;\n \n use crate::llvm::archive_ro::{ArchiveRO, Child};\n use crate::llvm::{self, ArchiveKind};\n-use rustc_codegen_ssa::{METADATA_FILENAME, RLIB_BYTECODE_EXTENSION};\n+use rustc_codegen_ssa::{\n+    METADATA_FILENAME, RLIB_BYTECODE_EXTENSION, looks_like_rust_object_file\n+};\n use rustc_codegen_ssa::back::archive::{ArchiveBuilder, find_library};\n use rustc::session::Session;\n use syntax::symbol::Symbol;\n@@ -141,7 +143,7 @@ impl<'a> ArchiveBuilder<'a> for LlvmArchiveBuilder<'a> {\n             }\n \n             // Don't include Rust objects if LTO is enabled\n-            if lto && fname.starts_with(&obj_start) && fname.ends_with(\".o\") {\n+            if lto && looks_like_rust_object_file(fname) {\n                 return true\n             }\n "}, {"sha": "a2b50ea8e2bf79a5f142b7472d8b36257ce4b6b1", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/52eda13031f039b5996b7d863715b0439297071e/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52eda13031f039b5996b7d863715b0439297071e/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=52eda13031f039b5996b7d863715b0439297071e", "patch": "@@ -3,7 +3,7 @@\n \n use rustc::session::{Session, filesearch};\n use rustc::session::config::{\n-    self, RUST_CGU_EXT, DebugInfo, OutputFilenames, OutputType, PrintRequest, Sanitizer\n+    self, DebugInfo, OutputFilenames, OutputType, PrintRequest, Sanitizer\n };\n use rustc::session::search_paths::PathKind;\n use rustc::middle::dependency_format::Linkage;\n@@ -15,7 +15,8 @@ use rustc_fs_util::fix_windows_verbatim_for_gcc;\n use rustc_target::spec::{PanicStrategy, RelroLevel, LinkerFlavor};\n use syntax::symbol::Symbol;\n \n-use crate::{METADATA_FILENAME, RLIB_BYTECODE_EXTENSION, CrateInfo, CodegenResults};\n+use crate::{METADATA_FILENAME, RLIB_BYTECODE_EXTENSION, CrateInfo,\n+    looks_like_rust_object_file, CodegenResults};\n use super::archive::ArchiveBuilder;\n use super::command::Command;\n use super::linker::Linker;\n@@ -1549,23 +1550,9 @@ fn add_upstream_rust_crates<'a, B: ArchiveBuilder<'a>>(\n                 let canonical = f.replace(\"-\", \"_\");\n                 let canonical_name = name.replace(\"-\", \"_\");\n \n-                // Look for `.rcgu.o` at the end of the filename to conclude\n-                // that this is a Rust-related object file.\n-                fn looks_like_rust(s: &str) -> bool {\n-                    let path = Path::new(s);\n-                    let ext = path.extension().and_then(|s| s.to_str());\n-                    if ext != Some(OutputType::Object.extension()) {\n-                        return false\n-                    }\n-                    let ext2 = path.file_stem()\n-                        .and_then(|s| Path::new(s).extension())\n-                        .and_then(|s| s.to_str());\n-                    ext2 == Some(RUST_CGU_EXT)\n-                }\n-\n                 let is_rust_object =\n                     canonical.starts_with(&canonical_name) &&\n-                    looks_like_rust(&f);\n+                    looks_like_rust_object_file(&f);\n \n                 // If we've been requested to skip all native object files\n                 // (those not generated by the rust compiler) then we can skip"}, {"sha": "dd75883f97debb239d52649888fb1535dd8003ed", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/52eda13031f039b5996b7d863715b0439297071e/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52eda13031f039b5996b7d863715b0439297071e/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=52eda13031f039b5996b7d863715b0439297071e", "patch": "@@ -22,9 +22,9 @@\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate syntax;\n \n-use std::path::PathBuf;\n+use std::path::{Path, PathBuf};\n use rustc::dep_graph::WorkProduct;\n-use rustc::session::config::{OutputFilenames, OutputType};\n+use rustc::session::config::{OutputFilenames, OutputType, RUST_CGU_EXT};\n use rustc::middle::lang_items::LangItem;\n use rustc::hir::def_id::CrateNum;\n use rustc::ty::query::Providers;\n@@ -62,6 +62,7 @@ pub struct ModuleCodegen<M> {\n pub const METADATA_FILENAME: &str = \"rust.metadata.bin\";\n pub const RLIB_BYTECODE_EXTENSION: &str = \"bc.z\";\n \n+\n impl<M> ModuleCodegen<M> {\n     pub fn into_compiled_module(self,\n                             emit_obj: bool,\n@@ -166,3 +167,22 @@ pub fn provide_extern(providers: &mut Providers<'_>) {\n     crate::back::symbol_export::provide_extern(providers);\n     crate::base::provide_both(providers);\n }\n+\n+/// Checks if the given filename ends with the `.rcgu.o` extension that `rustc`\n+/// uses for the object files it generates.\n+pub fn looks_like_rust_object_file(filename: &str) -> bool {\n+    let path = Path::new(filename);\n+    let ext = path.extension().and_then(|s| s.to_str());\n+    if ext != Some(OutputType::Object.extension()) {\n+        // The file name does not end with \".o\", so it can't be an object file.\n+        return false\n+    }\n+\n+    // Strip the \".o\" at the end\n+    let ext2 = path.file_stem()\n+        .and_then(|s| Path::new(s).extension())\n+        .and_then(|s| s.to_str());\n+\n+    // Check if the \"inner\" extension\n+    ext2 == Some(RUST_CGU_EXT)\n+}"}]}