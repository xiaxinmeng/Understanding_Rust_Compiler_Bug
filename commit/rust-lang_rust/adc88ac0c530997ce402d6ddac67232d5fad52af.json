{"sha": "adc88ac0c530997ce402d6ddac67232d5fad52af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYzg4YWMwYzUzMDk5N2NlNDAyZDZkZGFjNjcyMzJkNWZhZDUyYWY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-12-15T13:47:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-15T13:47:34Z"}, "message": "Rollup merge of #56679 - euclio:external-doc-parse, r=estebank\n\noverhaul external doc attribute diagnostics\n\nThis PR improves the error handling and spans for the external doc attribute. Many cases that silently failed before now emit errors, spans are tightened, and the errors have help and suggestions.\n\nI tried to address all the cases that users ran into in the tracking issue.\n\ncc #44732\n\nr? @QuietMisdreavus", "tree": {"sha": "1826ae7b2ed95673832d95579fd3330eaaac3368", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1826ae7b2ed95673832d95579fd3330eaaac3368"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adc88ac0c530997ce402d6ddac67232d5fad52af", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcFQX3CRBK7hj4Ov3rIwAAdHIIAKB/cELUaJ91voHiKQpA5lY4\nAM4rG2fUvoVqfCb1iFRxj14zNiGWIdCYlf7SIqcBeOoeMoVRB7+47SwMN7pAZNZ7\nrmjzaUBx8a1OW9iQ4ve/ycuAMG4+ANYM2K4D4aTjp+gqCwHiIu9lPL0IawvQuGVB\nUnF5CrCuVJVfLnefWMbiZvZ3+afIBlumVJIQmxPz9uwjuFhEfWdhUtlzL74trcSJ\nO32uPc1j/93D+QLV2ZqUuPft8JQM8JvYial21tmPphRyhKn6MUb3kw+swn3XK6ps\nHYGn1x/Y6oTIrWmBduuNKiiX363PeAhp0Y0BPxbVQ5Lu9IKCuJLhSvU5ktF0Tz0=\n=UzLf\n-----END PGP SIGNATURE-----\n", "payload": "tree 1826ae7b2ed95673832d95579fd3330eaaac3368\nparent e92d9202699b36c59ec644528833a7b27b14a085\nparent 7f7045f84795a7e1c1fb0a0160bf3319368c09ba\nauthor Pietro Albini <pietro@pietroalbini.org> 1544881654 +0100\ncommitter GitHub <noreply@github.com> 1544881654 +0100\n\nRollup merge of #56679 - euclio:external-doc-parse, r=estebank\n\noverhaul external doc attribute diagnostics\n\nThis PR improves the error handling and spans for the external doc attribute. Many cases that silently failed before now emit errors, spans are tightened, and the errors have help and suggestions.\n\nI tried to address all the cases that users ran into in the tracking issue.\n\ncc #44732\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adc88ac0c530997ce402d6ddac67232d5fad52af", "html_url": "https://github.com/rust-lang/rust/commit/adc88ac0c530997ce402d6ddac67232d5fad52af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adc88ac0c530997ce402d6ddac67232d5fad52af/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e92d9202699b36c59ec644528833a7b27b14a085", "url": "https://api.github.com/repos/rust-lang/rust/commits/e92d9202699b36c59ec644528833a7b27b14a085", "html_url": "https://github.com/rust-lang/rust/commit/e92d9202699b36c59ec644528833a7b27b14a085"}, {"sha": "7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7045f84795a7e1c1fb0a0160bf3319368c09ba", "html_url": "https://github.com/rust-lang/rust/commit/7f7045f84795a7e1c1fb0a0160bf3319368c09ba"}], "stats": {"total": 137, "additions": 119, "deletions": 18}, "files": [{"sha": "03c7aa9682477701d5fc0efa52ba72b720088418", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 56, "deletions": 12, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/adc88ac0c530997ce402d6ddac67232d5fad52af/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc88ac0c530997ce402d6ddac67232d5fad52af/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=adc88ac0c530997ce402d6ddac67232d5fad52af", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use ast::{self, Block, Ident, NodeId, PatKind, Path};\n+use ast::{self, Block, Ident, LitKind, NodeId, PatKind, Path};\n use ast::{MacStmtStyle, StmtKind, ItemKind};\n use attr::{self, HasAttrs};\n use source_map::{ExpnInfo, MacroBang, MacroAttribute, dummy_spanned, respan};\n@@ -1535,21 +1535,65 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n                             let item = attr::mk_list_item(DUMMY_SP, include_ident, include_info);\n                             items.push(dummy_spanned(ast::NestedMetaItemKind::MetaItem(item)));\n                         }\n-                        Err(ref e) if e.kind() == ErrorKind::InvalidData => {\n-                            self.cx.span_err(\n-                                at.span,\n-                                &format!(\"{} wasn't a utf-8 file\", filename.display()),\n-                            );\n-                        }\n                         Err(e) => {\n-                            self.cx.span_err(\n-                                at.span,\n-                                &format!(\"couldn't read {}: {}\", filename.display(), e),\n-                            );\n+                            let lit = it\n+                                .meta_item()\n+                                .and_then(|item| item.name_value_literal())\n+                                .unwrap();\n+\n+                            if e.kind() == ErrorKind::InvalidData {\n+                                self.cx\n+                                    .struct_span_err(\n+                                        lit.span,\n+                                        &format!(\"{} wasn't a utf-8 file\", filename.display()),\n+                                    )\n+                                    .span_label(lit.span, \"contains invalid utf-8\")\n+                                    .emit();\n+                            } else {\n+                                let mut err = self.cx.struct_span_err(\n+                                    lit.span,\n+                                    &format!(\"couldn't read {}: {}\", filename.display(), e),\n+                                );\n+                                err.span_label(lit.span, \"couldn't read file\");\n+\n+                                if e.kind() == ErrorKind::NotFound {\n+                                    err.help(\"external doc paths are relative to the crate root\");\n+                                }\n+\n+                                err.emit();\n+                            }\n                         }\n                     }\n                 } else {\n-                    items.push(noop_fold_meta_list_item(it, self));\n+                    let mut err = self.cx.struct_span_err(\n+                        it.span,\n+                        &format!(\"expected path to external documentation\"),\n+                    );\n+\n+                    // Check if the user erroneously used `doc(include(...))` syntax.\n+                    let literal = it.meta_item_list().and_then(|list| {\n+                        if list.len() == 1 {\n+                            list[0].literal().map(|literal| &literal.node)\n+                        } else {\n+                            None\n+                        }\n+                    });\n+\n+                    let (path, applicability) = match &literal {\n+                        Some(LitKind::Str(path, ..)) => {\n+                            (path.to_string(), Applicability::MachineApplicable)\n+                        }\n+                        _ => (String::from(\"<path>\"), Applicability::HasPlaceholders),\n+                    };\n+\n+                    err.span_suggestion_with_applicability(\n+                        it.span,\n+                        \"provide a file path with `=`\",\n+                        format!(\"include = \\\"{}\\\"\", path),\n+                        applicability,\n+                    );\n+\n+                    err.emit();\n                 }\n             }\n "}, {"sha": "dc1115b82db40a8a77bfc8509b79dbbee6f7d43a", "filename": "src/test/ui/extern/auxiliary/invalid-utf8.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/adc88ac0c530997ce402d6ddac67232d5fad52af/src%2Ftest%2Fui%2Fextern%2Fauxiliary%2Finvalid-utf8.txt", "raw_url": "https://github.com/rust-lang/rust/raw/adc88ac0c530997ce402d6ddac67232d5fad52af/src%2Ftest%2Fui%2Fextern%2Fauxiliary%2Finvalid-utf8.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fauxiliary%2Finvalid-utf8.txt?ref=adc88ac0c530997ce402d6ddac67232d5fad52af", "patch": "@@ -0,0 +1 @@\n+\ufffd(\n\\ No newline at end of file"}, {"sha": "e17dda65568e9139d6cdcdf190f990f3a103f25b", "filename": "src/test/ui/extern/external-doc-error.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/adc88ac0c530997ce402d6ddac67232d5fad52af/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc88ac0c530997ce402d6ddac67232d5fad52af/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.rs?ref=adc88ac0c530997ce402d6ddac67232d5fad52af", "patch": "@@ -2,7 +2,31 @@\n \n #![feature(external_doc)]\n \n-#[doc(include = \"not-a-file.md\")] //~ ERROR: couldn't read\n-pub struct SomeStruct;\n+#[doc(include = \"not-a-file.md\")]\n+pub struct SomeStruct; //~^ ERROR couldn't read\n+                       //~| HELP external doc paths are relative to the crate root\n+\n+#[doc(include = \"auxiliary/invalid-utf8.txt\")]\n+pub struct InvalidUtf8; //~^ ERROR wasn't a utf-8 file\n+\n+#[doc(include)]\n+pub struct MissingPath; //~^ ERROR expected path\n+                        //~| HELP provide a file path with `=`\n+                        //~| SUGGESTION include = \"<path>\"\n+\n+#[doc(include(\"../README.md\"))]\n+pub struct InvalidPathSyntax; //~^ ERROR expected path\n+                              //~| HELP provide a file path with `=`\n+                              //~| SUGGESTION include = \"../README.md\"\n+\n+#[doc(include = 123)]\n+pub struct InvalidPathType; //~^ ERROR expected path\n+                            //~| HELP provide a file path with `=`\n+                            //~| SUGGESTION include = \"<path>\"\n+\n+#[doc(include(123))]\n+pub struct InvalidPathSyntaxAndType; //~^ ERROR expected path\n+                                     //~| HELP provide a file path with `=`\n+                                     //~| SUGGESTION include = \"<path>\"\n \n fn main() {}"}, {"sha": "a3be3277de5455691be7259c318e267e9262a3c2", "filename": "src/test/ui/extern/external-doc-error.stderr", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/adc88ac0c530997ce402d6ddac67232d5fad52af/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adc88ac0c530997ce402d6ddac67232d5fad52af/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fexternal-doc-error.stderr?ref=adc88ac0c530997ce402d6ddac67232d5fad52af", "patch": "@@ -1,8 +1,40 @@\n error: couldn't read $DIR/not-a-file.md: $FILE_NOT_FOUND_MSG (os error 2)\n-  --> $DIR/external-doc-error.rs:5:1\n+  --> $DIR/external-doc-error.rs:5:17\n    |\n-LL | #[doc(include = \"not-a-file.md\")] //~ ERROR: couldn't read\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[doc(include = \"not-a-file.md\")]\n+   |                 ^^^^^^^^^^^^^^^ couldn't read file\n+   |\n+   = help: external doc paths are relative to the crate root\n+\n+error: $DIR/auxiliary/invalid-utf8.txt wasn't a utf-8 file\n+  --> $DIR/external-doc-error.rs:9:17\n+   |\n+LL | #[doc(include = \"auxiliary/invalid-utf8.txt\")]\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ contains invalid utf-8\n+\n+error: expected path to external documentation\n+  --> $DIR/external-doc-error.rs:12:7\n+   |\n+LL | #[doc(include)]\n+   |       ^^^^^^^ help: provide a file path with `=`: `include = \"<path>\"`\n+\n+error: expected path to external documentation\n+  --> $DIR/external-doc-error.rs:17:7\n+   |\n+LL | #[doc(include(\"../README.md\"))]\n+   |       ^^^^^^^^^^^^^^^^^^^^^^^ help: provide a file path with `=`: `include = \"../README.md\"`\n+\n+error: expected path to external documentation\n+  --> $DIR/external-doc-error.rs:22:7\n+   |\n+LL | #[doc(include = 123)]\n+   |       ^^^^^^^^^^^^^ help: provide a file path with `=`: `include = \"<path>\"`\n+\n+error: expected path to external documentation\n+  --> $DIR/external-doc-error.rs:27:7\n+   |\n+LL | #[doc(include(123))]\n+   |       ^^^^^^^^^^^^ help: provide a file path with `=`: `include = \"<path>\"`\n \n-error: aborting due to previous error\n+error: aborting due to 6 previous errors\n "}]}