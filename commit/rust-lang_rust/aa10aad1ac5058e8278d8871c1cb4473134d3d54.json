{"sha": "aa10aad1ac5058e8278d8871c1cb4473134d3d54", "node_id": "C_kwDOAAsO6NoAKGFhMTBhYWQxYWM1MDU4ZTgyNzhkODg3MWMxY2I0NDczMTM0ZDNkNTQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-24T02:47:57Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-28T04:17:45Z"}, "message": "Factor out a repeated expression in `lower_attr_args`.", "tree": {"sha": "c9a8885578dbee8ce45e8a5764ca274e6d2dd942", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9a8885578dbee8ce45e8a5764ca274e6d2dd942"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa10aad1ac5058e8278d8871c1cb4473134d3d54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa10aad1ac5058e8278d8871c1cb4473134d3d54", "html_url": "https://github.com/rust-lang/rust/commit/aa10aad1ac5058e8278d8871c1cb4473134d3d54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa10aad1ac5058e8278d8871c1cb4473134d3d54/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cfc8153da71c599ba6e118279d366b74638057e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cfc8153da71c599ba6e118279d366b74638057e", "html_url": "https://github.com/rust-lang/rust/commit/8cfc8153da71c599ba6e118279d366b74638057e"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "530cf7d978796fadbdbf14c65a49cd0586ece9f0", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/aa10aad1ac5058e8278d8871c1cb4473134d3d54/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa10aad1ac5058e8278d8871c1cb4473134d3d54/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=aa10aad1ac5058e8278d8871c1cb4473134d3d54", "patch": "@@ -948,15 +948,10 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             AttrArgs::Eq(eq_span, AttrArgsEq::Ast(expr)) => {\n                 // In valid code the value always ends up as a single literal. Otherwise, a dummy\n                 // literal suffices because the error is handled elsewhere.\n-                let lit = if let ExprKind::Lit(token_lit) = expr.kind {\n-                    match Lit::from_token_lit(token_lit, expr.span) {\n-                        Ok(lit) => lit,\n-                        Err(_err) => Lit {\n-                            token_lit: token::Lit::new(token::LitKind::Err, kw::Empty, None),\n-                            kind: LitKind::Err,\n-                            span: DUMMY_SP,\n-                        },\n-                    }\n+                let lit = if let ExprKind::Lit(token_lit) = expr.kind \n+                    && let Ok(lit) = Lit::from_token_lit(token_lit, expr.span)\n+                {\n+                    lit\n                 } else {\n                     Lit {\n                         token_lit: token::Lit::new(token::LitKind::Err, kw::Empty, None),"}]}