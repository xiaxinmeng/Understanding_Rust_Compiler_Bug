{"sha": "6616f336b28bcab7d693473c6d9263dff15639ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MTZmMzM2YjI4YmNhYjdkNjkzNDczYzZkOTI2M2RmZjE1NjM5YWU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-16T09:41:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-16T09:41:38Z"}, "message": "Merge #3598\n\n3598: ra_hir_expand: migrate to impl_intern_key!() r=matklad a=Veetaha\n\n\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\nCo-authored-by: Veetaha <veetaha2@gmail.com>", "tree": {"sha": "36c9d3151c68756784584954d4b5136e78d16188", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36c9d3151c68756784584954d4b5136e78d16188"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6616f336b28bcab7d693473c6d9263dff15639ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeb0nSCRBK7hj4Ov3rIwAAdHIIABpIPDmKKp3nNlAgeNMFkSU9\nYdct6xFeKJVSXHtyLQ/Df4By33en8/fGqqbRywwMdkHCoWzuaHy3Cy6PCrQOYS3k\ntqs3tWjYyuynxcVkkK/0VHU/vEzI30Is0csYC0nLdtHmOJUYDpRBbFXFy2QBvbH6\n7hle/kzCgObp2er+3jia1ywFKC13sLAfyYhyUNtCeYNpE7MyQuSfhW0rc49CBpRz\noovPSHxMlJtdIiMha+EbxSrpFdorbSUn7dALdmgYqP5YxfGxudv9WecK0XYfAWeK\ny/KCpu3/Q1PREFAvwWY4Ds1rO228GfClVcGuWDtAZsRQorfh51WXkefdqKbRdyg=\n=7mTu\n-----END PGP SIGNATURE-----\n", "payload": "tree 36c9d3151c68756784584954d4b5136e78d16188\nparent 6bc226fa1918b8025b19cdf9d1f972f029e6a899\nparent 7eb5d89a850a67418a2fb59dd78308e7a1134e3a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1584351698 +0000\ncommitter GitHub <noreply@github.com> 1584351698 +0000\n\nMerge #3598\n\n3598: ra_hir_expand: migrate to impl_intern_key!() r=matklad a=Veetaha\n\n\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\nCo-authored-by: Veetaha <veetaha2@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6616f336b28bcab7d693473c6d9263dff15639ae", "html_url": "https://github.com/rust-lang/rust/commit/6616f336b28bcab7d693473c6d9263dff15639ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6616f336b28bcab7d693473c6d9263dff15639ae/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc226fa1918b8025b19cdf9d1f972f029e6a899", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc226fa1918b8025b19cdf9d1f972f029e6a899", "html_url": "https://github.com/rust-lang/rust/commit/6bc226fa1918b8025b19cdf9d1f972f029e6a899"}, {"sha": "7eb5d89a850a67418a2fb59dd78308e7a1134e3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eb5d89a850a67418a2fb59dd78308e7a1134e3a", "html_url": "https://github.com/rust-lang/rust/commit/7eb5d89a850a67418a2fb59dd78308e7a1134e3a"}], "stats": {"total": 20, "additions": 3, "deletions": 17}, "files": [{"sha": "7b72eb7a0a3d0f9c7a793b563d96d85f4b4f772d", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6616f336b28bcab7d693473c6d9263dff15639ae/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6616f336b28bcab7d693473c6d9263dff15639ae/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=6616f336b28bcab7d693473c6d9263dff15639ae", "patch": "@@ -17,7 +17,7 @@ pub mod eager;\n use std::hash::Hash;\n use std::sync::Arc;\n \n-use ra_db::{salsa, CrateId, FileId};\n+use ra_db::{impl_intern_key, salsa, CrateId, FileId};\n use ra_syntax::{\n     algo,\n     ast::{self, AstNode},\n@@ -174,25 +174,11 @@ pub enum MacroCallId {\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct LazyMacroId(salsa::InternId);\n-impl salsa::InternKey for LazyMacroId {\n-    fn from_intern_id(v: salsa::InternId) -> Self {\n-        LazyMacroId(v)\n-    }\n-    fn as_intern_id(&self) -> salsa::InternId {\n-        self.0\n-    }\n-}\n+impl_intern_key!(LazyMacroId);\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct EagerMacroId(salsa::InternId);\n-impl salsa::InternKey for EagerMacroId {\n-    fn from_intern_id(v: salsa::InternId) -> Self {\n-        EagerMacroId(v)\n-    }\n-    fn as_intern_id(&self) -> salsa::InternId {\n-        self.0\n-    }\n-}\n+impl_intern_key!(EagerMacroId);\n \n impl From<LazyMacroId> for MacroCallId {\n     fn from(it: LazyMacroId) -> Self {"}]}