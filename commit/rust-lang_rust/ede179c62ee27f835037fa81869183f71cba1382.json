{"sha": "ede179c62ee27f835037fa81869183f71cba1382", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZTE3OWM2MmVlMjdmODM1MDM3ZmE4MTg2OTE4M2Y3MWNiYTEzODI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-09-17T13:14:28Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-09-17T13:14:28Z"}, "message": "Echo back input from stdin when disable_all_formatting is true", "tree": {"sha": "b19c49a0b7f8df0a9809b8b2fd8545dfaa3abe0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b19c49a0b7f8df0a9809b8b2fd8545dfaa3abe0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ede179c62ee27f835037fa81869183f71cba1382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ede179c62ee27f835037fa81869183f71cba1382", "html_url": "https://github.com/rust-lang/rust/commit/ede179c62ee27f835037fa81869183f71cba1382", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ede179c62ee27f835037fa81869183f71cba1382/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e309a4ad83e1403d7bd23c4a1ee2c02cf4e273d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e309a4ad83e1403d7bd23c4a1ee2c02cf4e273d", "html_url": "https://github.com/rust-lang/rust/commit/7e309a4ad83e1403d7bd23c4a1ee2c02cf4e273d"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "6e41f6a5f24df81674bc28acf60af7ba4298565d", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ede179c62ee27f835037fa81869183f71cba1382/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ede179c62ee27f835037fa81869183f71cba1382/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ede179c62ee27f835037fa81869183f71cba1382", "patch": "@@ -881,6 +881,12 @@ pub fn format_input<T: Write>(\n ) -> Result<(Summary, FileMap, FormatReport), (io::Error, Summary)> {\n     let mut summary = Summary::default();\n     if config.disable_all_formatting() {\n+        // When the input is from stdin, echo back the input.\n+        if let Input::Text(ref buf) = input {\n+            if let Err(e) = io::stdout().write_all(buf.as_bytes()) {\n+                return Err((e, summary));\n+            }\n+        }\n         return Ok((summary, FileMap::new(), FormatReport::new()));\n     }\n     let codemap = Rc::new(CodeMap::new(FilePathMapping::empty()));"}]}