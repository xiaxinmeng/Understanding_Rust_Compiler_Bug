{"sha": "5559e149e492efadd803eb65f34c259a90c595e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NTllMTQ5ZTQ5MmVmYWRkODAzZWI2NWYzNGMyNTlhOTBjNTk1ZTc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-17T02:49:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-17T02:49:07Z"}, "message": "Revert \"rt: Make stack growth code build on Linux\"\n\nThis reverts commit da4b7da4e142a4c2119312c0e24b7c20bbe74e60.", "tree": {"sha": "b66696671abd9e1735f83775c6fe63aedbc1ac14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b66696671abd9e1735f83775c6fe63aedbc1ac14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5559e149e492efadd803eb65f34c259a90c595e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5559e149e492efadd803eb65f34c259a90c595e7", "html_url": "https://github.com/rust-lang/rust/commit/5559e149e492efadd803eb65f34c259a90c595e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5559e149e492efadd803eb65f34c259a90c595e7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f89dbed994fef53beeaec49b20d450ca9b72d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f89dbed994fef53beeaec49b20d450ca9b72d4", "html_url": "https://github.com/rust-lang/rust/commit/55f89dbed994fef53beeaec49b20d450ca9b72d4"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "1d6634557d08b815a5544c4c9c0982bc4076bba0", "filename": "mk/rt.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5559e149e492efadd803eb65f34c259a90c595e7/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/5559e149e492efadd803eb65f34c259a90c595e7/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=5559e149e492efadd803eb65f34c259a90c595e7", "patch": "@@ -67,7 +67,8 @@ RUNTIME_CS_$(1) := \\\n \n RUNTIME_S_$(1) := rt/arch/$$(HOST_$(1))/_context.S \\\n                   rt/arch/$$(HOST_$(1))/ccall.S \\\n-                  rt/arch/$$(HOST_$(1))/morestack.S\n+                  rt/arch/$$(HOST_$(1))/morestack.S \\\n+                  rt/arch/$$(HOST_$(1))/record_sp.S\n \n RUNTIME_HDR_$(1) := rt/globals.h \\\n                rt/rust.h \\"}, {"sha": "ec356ea91c699cc5cd68bfa4ad64f6e348df85d0", "filename": "src/rt/arch/i386/morestack.S", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5559e149e492efadd803eb65f34c259a90c595e7/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/5559e149e492efadd803eb65f34c259a90c595e7/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fmorestack.S?ref=5559e149e492efadd803eb65f34c259a90c595e7", "patch": "@@ -106,18 +106,13 @@ L$bail:\n \n #ifdef __APPLE__\n \n-\t\t.section\t__IMPORT,__pointers,non_lazy_symbol_pointers\n+\t.section\t__IMPORT,__pointers,non_lazy_symbol_pointers\n rust_new_stack_sym:\n     .indirect_symbol RUST_NEW_STACK\n     .long 0\n rust_del_stack_sym:\n     .indirect_symbol RUST_DEL_STACK\n     .long 0\n \n-#else\n-\n-rust_new_stack_sym:\n-rust_del_stack_sym:\n-\n #endif\n "}, {"sha": "b17565dda465d3706caf5b2a279e17bb6c71e210", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5559e149e492efadd803eb65f34c259a90c595e7/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5559e149e492efadd803eb65f34c259a90c595e7/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=5559e149e492efadd803eb65f34c259a90c595e7", "patch": "@@ -13,6 +13,9 @@ DWORD rust_scheduler::task_key;\n \n bool rust_scheduler::tls_initialized = false;\n \n+// Defined in arch/*/record_sp.S.\n+extern \"C\" void rust_record_sp(uintptr_t sp);\n+\n rust_scheduler::rust_scheduler(rust_kernel *kernel,\n                                rust_srv *srv,\n                                int id) :\n@@ -286,6 +289,7 @@ rust_scheduler::start_main_loop() {\n              scheduled_task->state->name);\n \n         place_task_in_tls(scheduled_task);\n+        rust_record_sp(scheduled_task->stk->limit);\n         //pthread_setspecific(89, (void *)scheduled_task->stk->limit);\n \n         interrupt_flag = 0;"}]}