{"sha": "f6c9490e6527d204bd4a22273e01f76632460506", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2Yzk0OTBlNjUyN2QyMDRiZDRhMjIyNzNlMDFmNzY2MzI0NjA1MDY=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-01T17:31:14Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-01T17:31:14Z"}, "message": "Fix wrong suggestion with `...` and for loops", "tree": {"sha": "85aca8300c745b6254b9adea4bbfad6eae1dadc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85aca8300c745b6254b9adea4bbfad6eae1dadc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6c9490e6527d204bd4a22273e01f76632460506", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXdqj4AAoJEF5CfHlMukXowe4QAMaGuFJ7WVBJuPzlki4CAjJ8\nWcyZ+7z52Ig0tQcA+8dfqYXRAhqc3P6FXQbMD/yXFh0Z9Reg2WOfl5VvpW+byimO\nC4+ua74W22QVfPZ/9pACfTdhYLYQjOGx7hrUkc58hNo7fBYBUka2IYMO35I80IVm\nBn4EZ3wBaFC1wZR46U/KBudjhv8SYD7ViPSpC/3ZX/1Zu0YxzqAdE11S2K8LOPBw\nKvlIiJATva8er+0buKGBXGUDqWU/mmZE+j3Laku2gGga9nPFgwoUlbpDhr/Qp6Q5\njjptERyDoXX9wRpyF5Xv10KWDJXfOtZKcY6yH6kjx79crJUdJvvcZ4NMu3vf6e+M\nDUjVQ1hJzQ7Asune5Z19SV2Jc/wPn60cIHNrxDxUuKitXe4DDbYhC533sHs7KQwB\n2GivkuAAE5Www5dq/l5nmBYvapmt8u6Z5RQ7J5ynDDXDqX8sYonrFW7CuRgaCAT8\nCx9dlyxZxfaWT4Yl1AGACA24ZCSmFdkXytDFiilET5IfIThf9xYdPRgPy3ZUqaaM\nleelIqM213+OQq9nKEiu8Xk4z0fmbDYjLlY3lx1/x9sq4kgMTTWdoKmZfWS6Si9P\nTeGhuvZj/jswUOPB3WJRT0NTfkFvJhLmBzMNrusCPqL3RpQFvll6xhW81ajb2UYo\nBFZkWhW8gooiFGnDexjc\n=Lejl\n-----END PGP SIGNATURE-----", "payload": "tree 85aca8300c745b6254b9adea4bbfad6eae1dadc5\nparent dbf6dc66d8ad9ed6af686aa9fe9ecb893a6cf23e\nauthor mcarton <cartonmartin+git@gmail.com> 1467394274 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1467394274 +0200\n\nFix wrong suggestion with `...` and for loops\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c9490e6527d204bd4a22273e01f76632460506", "html_url": "https://github.com/rust-lang/rust/commit/f6c9490e6527d204bd4a22273e01f76632460506", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6c9490e6527d204bd4a22273e01f76632460506/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbf6dc66d8ad9ed6af686aa9fe9ecb893a6cf23e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf6dc66d8ad9ed6af686aa9fe9ecb893a6cf23e", "html_url": "https://github.com/rust-lang/rust/commit/dbf6dc66d8ad9ed6af686aa9fe9ecb893a6cf23e"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "2aa0332a8241f8af4db846b8c9600671eb8b2dd1", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f6c9490e6527d204bd4a22273e01f76632460506/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c9490e6527d204bd4a22273e01f76632460506/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=f6c9490e6527d204bd4a22273e01f76632460506", "patch": "@@ -9,9 +9,9 @@ use rustc::middle::region::CodeExtent;\n use rustc::ty;\n use rustc_const_eval::EvalHint::ExprTypeChecked;\n use rustc_const_eval::eval_const_expr_partial;\n-use std::borrow::Cow;\n use std::collections::HashMap;\n use syntax::ast;\n+use utils::sugg;\n \n use utils::{snippet, span_lint, get_parent_expr, match_trait_method, match_type, multispan_sugg, in_external_macro,\n             span_help_and_lint, is_integer_literal, get_enclosing_block, span_lint_and_then, higher,\n@@ -332,7 +332,7 @@ fn check_for_loop(cx: &LateContext, pat: &Pat, arg: &Expr, body: &Expr, expr: &E\n /// Check for looping over a range and then indexing a sequence with it.\n /// The iteratee must be a range literal.\n fn check_for_loop_range(cx: &LateContext, pat: &Pat, arg: &Expr, body: &Expr, expr: &Expr) {\n-    if let Some(higher::Range { start: Some(ref start), ref end, .. }) = higher::range(arg) {\n+    if let Some(higher::Range { start: Some(ref start), ref end, limits }) = higher::range(arg) {\n         // the var must be a single name\n         if let PatKind::Binding(_, ref ident, _) = pat.node {\n             let mut visitor = VarVisitor {\n@@ -360,20 +360,28 @@ fn check_for_loop_range(cx: &LateContext, pat: &Pat, arg: &Expr, body: &Expr, ex\n \n                 let starts_at_zero = is_integer_literal(start, 0);\n \n-                let skip: Cow<_> = if starts_at_zero {\n-                    \"\".into()\n+                let skip = if starts_at_zero {\n+                    \"\".to_owned()\n                 } else {\n-                    format!(\".skip({})\", snippet(cx, start.span, \"..\")).into()\n+                    format!(\".skip({})\", snippet(cx, start.span, \"..\"))\n                 };\n \n-                let take: Cow<_> = if let Some(ref end) = *end {\n+                let take = if let Some(ref end) = *end {\n                     if is_len_call(end, &indexed) {\n-                        \"\".into()\n+                        \"\".to_owned()\n                     } else {\n-                        format!(\".take({})\", snippet(cx, end.span, \"..\")).into()\n+                        match limits {\n+                            ast::RangeLimits::Closed => {\n+                                let end = sugg::Sugg::hir(cx, end, \"<count>\");\n+                                format!(\".take({})\", end + sugg::ONE)\n+                            }\n+                            ast::RangeLimits::HalfOpen => {\n+                                format!(\".take({})\", snippet(cx, end.span, \"..\"))\n+                            }\n+                        }\n                     }\n                 } else {\n-                    \"\".into()\n+                    \"\".to_owned()\n                 };\n \n                 if visitor.nonindex {"}, {"sha": "1ef8eacd1d9491c16229ae00ea192a433beb38f0", "filename": "tests/compile-fail/for_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6c9490e6527d204bd4a22273e01f76632460506/tests%2Fcompile-fail%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c9490e6527d204bd4a22273e01f76632460506/tests%2Fcompile-fail%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffor_loop.rs?ref=f6c9490e6527d204bd4a22273e01f76632460506", "patch": "@@ -165,7 +165,7 @@ fn main() {\n         //~^ ERROR `i` is only used to index `vec`\n         //~| HELP consider\n         //~| HELP consider\n-        //~| SUGGESTION for <item> in vec.iter().take(MAX_LEN) {\n+        //~| SUGGESTION for <item> in vec.iter().take(MAX_LEN + 1) {\n         println!(\"{}\", vec[i]);\n     }\n \n@@ -181,7 +181,7 @@ fn main() {\n         //~^ ERROR `i` is only used to index `vec`\n         //~| HELP consider\n         //~| HELP consider\n-        //~| SUGGESTION for <item> in vec.iter().take(10).skip(5) {\n+        //~| SUGGESTION for <item> in vec.iter().take(10 + 1).skip(5) {\n         println!(\"{}\", vec[i]);\n     }\n "}]}