{"sha": "95c53c049c9ced13c325c9aade22affbf5d97fa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YzUzYzA0OWM5Y2VkMTNjMzI1YzlhYWRlMjJhZmZiZjVkOTdmYTM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-07T19:48:56Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-11T21:55:23Z"}, "message": "back/link -- introduce block to clarify scope of closure", "tree": {"sha": "193e15058ef51eaeed933ae87442e7c287b1ca1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/193e15058ef51eaeed933ae87442e7c287b1ca1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95c53c049c9ced13c325c9aade22affbf5d97fa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95c53c049c9ced13c325c9aade22affbf5d97fa3", "html_url": "https://github.com/rust-lang/rust/commit/95c53c049c9ced13c325c9aade22affbf5d97fa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95c53c049c9ced13c325c9aade22affbf5d97fa3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b760fd844fd43e331388a4d5c73304356058295", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b760fd844fd43e331388a4d5c73304356058295", "html_url": "https://github.com/rust-lang/rust/commit/8b760fd844fd43e331388a4d5c73304356058295"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "099f376aded6cb4b683671b429375035707b62fb", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/95c53c049c9ced13c325c9aade22affbf5d97fa3/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95c53c049c9ced13c325c9aade22affbf5d97fa3/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=95c53c049c9ced13c325c9aade22affbf5d97fa3", "patch": "@@ -361,21 +361,23 @@ pub mod write {\n \n         let mut llvm_c_strs = ~[];\n         let mut llvm_args = ~[];\n-        let add = |arg: &str| {\n-            let s = arg.to_c_str();\n-            llvm_args.push(s.with_ref(|p| p));\n-            llvm_c_strs.push(s);\n-        };\n-        add(\"rustc\"); // fake program name\n-        add(\"-arm-enable-ehabi\");\n-        add(\"-arm-enable-ehabi-descriptors\");\n-        if vectorize_loop { add(\"-vectorize-loops\"); }\n-        if vectorize_slp  { add(\"-vectorize-slp\");   }\n-        if sess.time_llvm_passes() { add(\"-time-passes\"); }\n-        if sess.print_llvm_passes() { add(\"-debug-pass=Structure\"); }\n-\n-        for arg in sess.opts.cg.llvm_args.iter() {\n-            add(*arg);\n+        {\n+            let add = |arg: &str| {\n+                let s = arg.to_c_str();\n+                llvm_args.push(s.with_ref(|p| p));\n+                llvm_c_strs.push(s);\n+            };\n+            add(\"rustc\"); // fake program name\n+            add(\"-arm-enable-ehabi\");\n+            add(\"-arm-enable-ehabi-descriptors\");\n+            if vectorize_loop { add(\"-vectorize-loops\"); }\n+            if vectorize_slp  { add(\"-vectorize-slp\");   }\n+            if sess.time_llvm_passes() { add(\"-time-passes\"); }\n+            if sess.print_llvm_passes() { add(\"-debug-pass=Structure\"); }\n+\n+            for arg in sess.opts.cg.llvm_args.iter() {\n+                add(*arg);\n+            }\n         }\n \n         INIT.doit(|| {\n@@ -631,7 +633,7 @@ pub fn mangle(sess: Session, ss: ast_map::Path,\n \n     let mut n = ~\"_ZN\"; // _Z == Begin name-sequence, N == nested\n \n-    let push = |s: &str| {\n+    let push = |n: &mut ~str, s: &str| {\n         let sani = sanitize(s);\n         n.push_str(format!(\"{}{}\", sani.len(), sani));\n     };\n@@ -640,7 +642,7 @@ pub fn mangle(sess: Session, ss: ast_map::Path,\n     for s in ss.iter() {\n         match *s {\n             PathName(s) | PathMod(s) | PathPrettyName(s, _) => {\n-                push(sess.str_of(s))\n+                push(&mut n, sess.str_of(s))\n             }\n         }\n     }\n@@ -665,10 +667,10 @@ pub fn mangle(sess: Session, ss: ast_map::Path,\n         }\n     }\n     if hash.len() > 0 {\n-        push(hash);\n+        push(&mut n, hash);\n     }\n     match vers {\n-        Some(s) => push(s),\n+        Some(s) => push(&mut n, s),\n         None => {}\n     }\n "}]}