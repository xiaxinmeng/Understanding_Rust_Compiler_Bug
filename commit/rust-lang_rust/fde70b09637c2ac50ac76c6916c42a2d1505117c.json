{"sha": "fde70b09637c2ac50ac76c6916c42a2d1505117c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZTcwYjA5NjM3YzJhYzUwYWM3NmM2OTE2YzQyYTJkMTUwNTExN2M=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-03-10T14:01:06Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-04-03T17:39:16Z"}, "message": "Make test steps sortable\n\nEnsures that test cases will be somewhat easier to write.", "tree": {"sha": "80fe9e703ea6eac1cd58a57049bc5bfd25425e78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80fe9e703ea6eac1cd58a57049bc5bfd25425e78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fde70b09637c2ac50ac76c6916c42a2d1505117c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fde70b09637c2ac50ac76c6916c42a2d1505117c", "html_url": "https://github.com/rust-lang/rust/commit/fde70b09637c2ac50ac76c6916c42a2d1505117c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fde70b09637c2ac50ac76c6916c42a2d1505117c/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd33d3a0e49f67fdeebb8e19593f10b95e5719ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd33d3a0e49f67fdeebb8e19593f10b95e5719ee", "html_url": "https://github.com/rust-lang/rust/commit/cd33d3a0e49f67fdeebb8e19593f10b95e5719ee"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "cbc77ab5bf42e390f26d11b40a39d55accad16f9", "filename": "src/bootstrap/cache.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fde70b09637c2ac50ac76c6916c42a2d1505117c/src%2Fbootstrap%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fde70b09637c2ac50ac76c6916c42a2d1505117c/src%2Fbootstrap%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcache.rs?ref=fde70b09637c2ac50ac76c6916c42a2d1505117c", "patch": "@@ -21,6 +21,7 @@ use std::mem;\n use std::ops::Deref;\n use std::path::{Path, PathBuf};\n use std::sync::Mutex;\n+use std::cmp::{PartialOrd, Ord, Ordering};\n \n use builder::Step;\n \n@@ -154,6 +155,19 @@ impl AsRef<OsStr> for Interned<String> {\n     }\n }\n \n+impl PartialOrd<Interned<String>> for Interned<String> {\n+    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n+        let l = INTERNER.strs.lock().unwrap();\n+        l.get(*self).partial_cmp(l.get(*other))\n+    }\n+}\n+\n+impl Ord for Interned<String> {\n+    fn cmp(&self, other: &Self) -> Ordering {\n+        let l = INTERNER.strs.lock().unwrap();\n+        l.get(*self).cmp(l.get(*other))\n+    }\n+}\n \n struct TyIntern<T> {\n     items: Vec<T>,"}, {"sha": "d1a6a8d12a7c394fbc4b1b32dfc7cc33dcb03dcc", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fde70b09637c2ac50ac76c6916c42a2d1505117c/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fde70b09637c2ac50ac76c6916c42a2d1505117c/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=fde70b09637c2ac50ac76c6916c42a2d1505117c", "patch": "@@ -38,7 +38,7 @@ use tool;\n use cache::{INTERNER, Interned};\n use builder::{Step, RunConfig, ShouldRun, Builder};\n \n-#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Std {\n     pub target: Interned<String>,\n     pub compiler: Compiler,\n@@ -314,10 +314,10 @@ impl Step for StartupObjects {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Test {\n-    pub compiler: Compiler,\n     pub target: Interned<String>,\n+    pub compiler: Compiler,\n }\n \n impl Step for Test {\n@@ -430,10 +430,10 @@ impl Step for TestLink {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Rustc {\n-    pub compiler: Compiler,\n     pub target: Interned<String>,\n+    pub compiler: Compiler,\n }\n \n impl Step for Rustc {\n@@ -840,7 +840,7 @@ impl Step for Sysroot {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+#[derive(Debug, Copy, PartialOrd, Ord, Clone, PartialEq, Eq, Hash)]\n pub struct Assemble {\n     /// The compiler which we will produce in this step. Assemble itself will\n     /// take care of ensuring that the necessary prerequisites to do so exist,"}, {"sha": "cfa0cdecca6b3837f216495b8a1405dd5cfed329", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fde70b09637c2ac50ac76c6916c42a2d1505117c/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fde70b09637c2ac50ac76c6916c42a2d1505117c/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=fde70b09637c2ac50ac76c6916c42a2d1505117c", "patch": "@@ -61,7 +61,7 @@ fn rust_installer(builder: &Builder) -> Command {\n     builder.tool_cmd(Tool::RustInstaller)\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Docs {\n     pub stage: u32,\n     pub host: Interned<String>,\n@@ -320,9 +320,9 @@ fn make_win_dist(\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Mingw {\n-    host: Interned<String>,\n+    pub host: Interned<String>,\n }\n \n impl Step for Mingw {\n@@ -378,7 +378,7 @@ impl Step for Mingw {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Rustc {\n     pub compiler: Compiler,\n }\n@@ -607,7 +607,7 @@ impl Step for DebuggerScripts {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Std {\n     pub compiler: Compiler,\n     pub target: Interned<String>,\n@@ -800,7 +800,7 @@ fn copy_src_dirs(build: &Build, src_dirs: &[&str], exclude_dirs: &[&str], dst_di\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Src;\n \n impl Step for Src {\n@@ -894,7 +894,7 @@ impl Step for Src {\n \n const CARGO_VENDOR_VERSION: &str = \"0.1.4\";\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct PlainSourceTarball;\n \n impl Step for PlainSourceTarball {\n@@ -1048,7 +1048,7 @@ fn write_file(path: &Path, data: &[u8]) {\n     t!(vf.write_all(data));\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Cargo {\n     pub stage: u32,\n     pub target: Interned<String>,\n@@ -1135,7 +1135,7 @@ impl Step for Cargo {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Rls {\n     pub stage: u32,\n     pub target: Interned<String>,\n@@ -1216,7 +1216,7 @@ impl Step for Rls {\n }\n \n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Rustfmt {\n     pub stage: u32,\n     pub target: Interned<String>,\n@@ -1298,7 +1298,7 @@ impl Step for Rustfmt {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Extended {\n     stage: u32,\n     host: Interned<String>,\n@@ -1731,7 +1731,7 @@ fn add_env(build: &Build, cmd: &mut Command, target: Interned<String>) {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct HashSign;\n \n impl Step for HashSign {"}, {"sha": "cb3a9dfbf3c11949a366e0c09fbfacad68884d47", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fde70b09637c2ac50ac76c6916c42a2d1505117c/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fde70b09637c2ac50ac76c6916c42a2d1505117c/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=fde70b09637c2ac50ac76c6916c42a2d1505117c", "patch": "@@ -198,7 +198,7 @@ use toolstate::ToolState;\n /// Each compiler has a `stage` that it is associated with and a `host` that\n /// corresponds to the platform the compiler runs on. This structure is used as\n /// a parameter to many methods below.\n-#[derive(Eq, PartialEq, Clone, Copy, Hash, Debug)]\n+#[derive(Eq, PartialOrd, Ord, PartialEq, Clone, Copy, Hash, Debug)]\n pub struct Compiler {\n     stage: u32,\n     host: Interned<String>,"}]}