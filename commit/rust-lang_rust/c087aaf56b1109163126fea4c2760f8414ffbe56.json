{"sha": "c087aaf56b1109163126fea4c2760f8414ffbe56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwODdhYWY1NmIxMTA5MTYzMTI2ZmVhNGMyNzYwZjg0MTRmZmJlNTY=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-26T03:00:39Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-26T03:00:39Z"}, "message": "When we cons up vector asts, generate evecs.", "tree": {"sha": "eee16f0a8b1fe0f766c176180db481aba5482752", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eee16f0a8b1fe0f766c176180db481aba5482752"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c087aaf56b1109163126fea4c2760f8414ffbe56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c087aaf56b1109163126fea4c2760f8414ffbe56", "html_url": "https://github.com/rust-lang/rust/commit/c087aaf56b1109163126fea4c2760f8414ffbe56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c087aaf56b1109163126fea4c2760f8414ffbe56/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a71a49faa83631bc7e74a25ac65ac711b28799d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a71a49faa83631bc7e74a25ac65ac711b28799d9", "html_url": "https://github.com/rust-lang/rust/commit/a71a49faa83631bc7e74a25ac65ac711b28799d9"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "4e0c68890925b29210692279b4005c8a9c921620", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c087aaf56b1109163126fea4c2760f8414ffbe56/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c087aaf56b1109163126fea4c2760f8414ffbe56/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=c087aaf56b1109163126fea4c2760f8414ffbe56", "patch": "@@ -61,6 +61,16 @@ fn mk_vec_e(cx: ext_ctxt, sp: span, exprs: [@ast::expr]) ->\n     let vecexpr = ast::expr_vec(exprs, ast::m_imm);\n     ret @{id: cx.next_id(), node: vecexpr, span: sp};\n }\n+fn mk_vstore_e(cx: ext_ctxt, sp: span, expr: @ast::expr, vst: ast::vstore) ->\n+   @ast::expr {\n+    let vstoreexpr = ast::expr_vstore(expr, vst);\n+    ret @{id: cx.next_id(), node: vstoreexpr, span: sp};\n+}\n+fn mk_uniq_vec_e(cx: ext_ctxt, sp: span, exprs: [@ast::expr]/~) ->\n+   @ast::expr {\n+    mk_vstore_e(cx, sp, mk_vec_e(cx, sp, exprs), ast::vstore_uniq)\n+}\n+\n fn mk_rec_e(cx: ext_ctxt, sp: span,\n             fields: [{ident: ast::ident, ex: @ast::expr}]) ->\n     @ast::expr {"}, {"sha": "24a5aed7d287d2bfe405f045771088c08aa22df4", "filename": "src/libsyntax/ext/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c087aaf56b1109163126fea4c2760f8414ffbe56/src%2Flibsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c087aaf56b1109163126fea4c2760f8414ffbe56/src%2Flibsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ffmt.rs?ref=c087aaf56b1109163126fea4c2760f8414ffbe56", "patch": "@@ -61,7 +61,7 @@ fn pieces_to_expr(cx: ext_ctxt, sp: span, pieces: [piece], args: [@ast::expr])\n                 }\n                 flagexprs += [make_rt_path_expr(cx, sp, @fstr)];\n             }\n-            ret mk_vec_e(cx, sp, flagexprs);\n+            ret mk_uniq_vec_e(cx, sp, flagexprs);\n         }\n         fn make_count(cx: ext_ctxt, sp: span, cnt: count) -> @ast::expr {\n             alt cnt {"}, {"sha": "caef1841fafee5edac1c7a387edcbd023a8e33b1", "filename": "src/libsyntax/ext/qquote.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c087aaf56b1109163126fea4c2760f8414ffbe56/src%2Flibsyntax%2Fext%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c087aaf56b1109163126fea4c2760f8414ffbe56/src%2Flibsyntax%2Fext%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fqquote.rs?ref=c087aaf56b1109163126fea4c2760f8414ffbe56", "patch": "@@ -258,7 +258,7 @@ fn finish<T: qq_helper>\n         rcall = mk_call(cx,sp,\n                         [@\"syntax\", @\"ext\", @\"qquote\", @\"replace\"],\n                         [pcall,\n-                         mk_vec_e(cx,sp, qcx.gather.map_to_vec {|g|\n+                         mk_uniq_vec_e(cx,sp, qcx.gather.map_to_vec {|g|\n                              mk_call(cx,sp,\n                                      [@\"syntax\", @\"ext\",\n                                       @\"qquote\", @g.constr],"}, {"sha": "3f5fca12e2a7cf0f871ebdc100534699e132a339", "filename": "src/rustc/front/test.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c087aaf56b1109163126fea4c2760f8414ffbe56/src%2Frustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c087aaf56b1109163126fea4c2760f8414ffbe56/src%2Frustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Ffront%2Ftest.rs?ref=c087aaf56b1109163126fea4c2760f8414ffbe56", "patch": "@@ -265,8 +265,11 @@ fn mk_test_desc_vec_ty(cx: test_ctxt) -> @ast::ty {\n \n     let vec_mt: ast::mt = {ty: @test_desc_ty, mutbl: ast::m_imm};\n \n+    let inner_ty = @{id: cx.sess.next_node_id(),\n+                     node: ast::ty_vec(vec_mt),\n+                     span: dummy_sp()};\n     ret @{id: cx.sess.next_node_id(),\n-          node: ast::ty_vec(vec_mt),\n+          node: ast::ty_vstore(inner_ty, ast::vstore_uniq),\n           span: dummy_sp()};\n }\n \n@@ -277,8 +280,11 @@ fn mk_test_desc_vec(cx: test_ctxt) -> @ast::expr {\n         descs += [mk_test_desc_rec(cx, test)];\n     }\n \n+    let inner_expr = @{id: cx.sess.next_node_id(),\n+                       node: ast::expr_vec(descs, ast::m_imm),\n+                       span: dummy_sp()};\n     ret @{id: cx.sess.next_node_id(),\n-          node: ast::expr_vec(descs, ast::m_imm),\n+          node: ast::expr_vstore(inner_expr, ast::vstore_uniq),\n           span: dummy_sp()};\n }\n \n@@ -384,10 +390,14 @@ fn mk_main(cx: test_ctxt) -> @ast::item {\n     let str_ty = @{id: cx.sess.next_node_id(),\n                    node: ast::ty_path(str_pt, cx.sess.next_node_id()),\n                    span: dummy_sp()};\n-    let args_mt: ast::mt = {ty: str_ty, mutbl: ast::m_imm};\n-    let args_ty: ast::ty = {id: cx.sess.next_node_id(),\n-                            node: ast::ty_vec(args_mt),\n-                            span: dummy_sp()};\n+    let args_mt = {ty: str_ty, mutbl: ast::m_imm};\n+    let args_ty_inner = @{id: cx.sess.next_node_id(),\n+                          node: ast::ty_vec(args_mt),\n+                          span: dummy_sp()};\n+    let args_ty = {id: cx.sess.next_node_id(),\n+                   node: ast::ty_vstore(args_ty_inner, ast::vstore_uniq),\n+                   span: dummy_sp()};\n+\n \n     let args_arg: ast::arg =\n         {mode: ast::expl(ast::by_val),"}]}