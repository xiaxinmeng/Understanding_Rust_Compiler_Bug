{"sha": "96f5eba4f5603c612464d6b1e961677e9d7084d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZjVlYmE0ZjU2MDNjNjEyNDY0ZDZiMWU5NjE2NzdlOWQ3MDg0ZDM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-08-18T18:15:05Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-08-18T19:30:35Z"}, "message": "work around MinGW linker bug for ASLR on Windows\n\nCloses #16514", "tree": {"sha": "f8eeb6e0dd4cc0185d20cdacaf06f4f69bba9e54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8eeb6e0dd4cc0185d20cdacaf06f4f69bba9e54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96f5eba4f5603c612464d6b1e961677e9d7084d3", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96f5eba4f5603c612464d6b1e961677e9d7084d3", "html_url": "https://github.com/rust-lang/rust/commit/96f5eba4f5603c612464d6b1e961677e9d7084d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96f5eba4f5603c612464d6b1e961677e9d7084d3/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7074592ee1ad1a155919268229b6464f2acc576e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7074592ee1ad1a155919268229b6464f2acc576e", "html_url": "https://github.com/rust-lang/rust/commit/7074592ee1ad1a155919268229b6464f2acc576e"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "e3dfd4f534dbc2e3634a77109910e859f70168a2", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/96f5eba4f5603c612464d6b1e961677e9d7084d3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96f5eba4f5603c612464d6b1e961677e9d7084d3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=96f5eba4f5603c612464d6b1e961677e9d7084d3", "patch": "@@ -87,7 +87,7 @@ use std::cell::{Cell, RefCell};\n use std::rc::Rc;\n use std::{i8, i16, i32, i64};\n use syntax::abi::{X86, X86_64, Arm, Mips, Mipsel, Rust, RustCall};\n-use syntax::abi::{RustIntrinsic, Abi};\n+use syntax::abi::{RustIntrinsic, Abi, OsWindows};\n use syntax::ast_util::{local_def, is_local};\n use syntax::attr::AttrMetaMethods;\n use syntax::attr;\n@@ -2446,6 +2446,13 @@ pub fn create_entry_wrapper(ccx: &CrateContext,\n                                &ccx.int_type);\n \n         let llfn = decl_cdecl_fn(ccx, \"main\", llfty, ty::mk_nil());\n+\n+        // FIXME: #16581: Marking a symbol in the executable with `dllexport`\n+        // linkage forces MinGW's linker to output a `.reloc` section for ASLR\n+        if ccx.sess().targ_cfg.os == OsWindows {\n+            unsafe { llvm::LLVMRustSetDLLExportStorageClass(llfn) }\n+        }\n+\n         let llbb = \"top\".with_c_str(|buf| {\n             unsafe {\n                 llvm::LLVMAppendBasicBlockInContext(ccx.llcx, llfn, buf)"}]}