{"sha": "eb4004fdb8f4cef602581d1fb35e515748d586cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNDAwNGZkYjhmNGNlZjYwMjU4MWQxZmIzNWU1MTU3NDhkNTg2Y2I=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-11T12:32:14Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-11T12:32:14Z"}, "message": "Add todo", "tree": {"sha": "35609368bc6ae99e497a480122330192f13679a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35609368bc6ae99e497a480122330192f13679a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb4004fdb8f4cef602581d1fb35e515748d586cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4004fdb8f4cef602581d1fb35e515748d586cb", "html_url": "https://github.com/rust-lang/rust/commit/eb4004fdb8f4cef602581d1fb35e515748d586cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb4004fdb8f4cef602581d1fb35e515748d586cb/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f91901f7e55915b359909b5422c03f70e4ab79b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f91901f7e55915b359909b5422c03f70e4ab79b", "html_url": "https://github.com/rust-lang/rust/commit/9f91901f7e55915b359909b5422c03f70e4ab79b"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "145f01786898cc3a5d3af10bd99155e27997fc46", "filename": "crates/ra_ide/src/completion/patterns.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb4004fdb8f4cef602581d1fb35e515748d586cb/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4004fdb8f4cef602581d1fb35e515748d586cb/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs?ref=eb4004fdb8f4cef602581d1fb35e515748d586cb", "patch": "@@ -100,7 +100,8 @@ fn previous_non_triva_element(element: SyntaxElement) -> Option<SyntaxElement> {\n         })?;\n         non_trivia_sibling(NodeOrToken::Node(prev_sibling_node), Direction::Prev)?\n     };\n-    //I think you can avoid this loop if you use SyntaxToken::prev_token -- unlike prev_sibling_or_token, it works across parents.\n+    // TODO: Check if this can be simplified\n+    // Matklad: I think you can avoid this loop if you use SyntaxToken::prev_token -- unlike prev_sibling_or_token, it works across parents.\n     // traversing the tree down to get the last token or node, i.e. the closest one\n     loop {\n         if let Some(token) = wrapped.as_token() {"}]}