{"sha": "eeea5c23b494782bf6a864005684d3405f5c062b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZWE1YzIzYjQ5NDc4MmJmNmE4NjQwMDU2ODRkMzQwNWY1YzA2MmI=", "commit": {"author": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-09-12T13:37:02Z"}, "committer": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-10T13:19:12Z"}, "message": "Change API to unsafe and add doc comments", "tree": {"sha": "9f86e566d1312255548560ed709fb5701dccf059", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f86e566d1312255548560ed709fb5701dccf059"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeea5c23b494782bf6a864005684d3405f5c062b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeea5c23b494782bf6a864005684d3405f5c062b", "html_url": "https://github.com/rust-lang/rust/commit/eeea5c23b494782bf6a864005684d3405f5c062b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeea5c23b494782bf6a864005684d3405f5c062b/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "686964f0f5c5f620b5cd91772048d75235437df7", "url": "https://api.github.com/repos/rust-lang/rust/commits/686964f0f5c5f620b5cd91772048d75235437df7", "html_url": "https://github.com/rust-lang/rust/commit/686964f0f5c5f620b5cd91772048d75235437df7"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "d41984a532b641a6e91c0c0acce99cda40c57e27", "filename": "library/std/src/sys/unix/ext/net/ancillary.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/eeea5c23b494782bf6a864005684d3405f5c062b/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeea5c23b494782bf6a864005684d3405f5c062b/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs?ref=eeea5c23b494782bf6a864005684d3405f5c062b", "patch": "@@ -137,7 +137,12 @@ struct AncillaryDataIter<'a, T> {\n }\n \n impl<'a, T> AncillaryDataIter<'a, T> {\n-    pub fn new(data: &'a [u8]) -> AncillaryDataIter<'a, T> {\n+    /// Create `AncillaryDataIter` struct to iterate through the data unit in the control message.\n+    ///\n+    /// # Safety\n+    ///\n+    /// `data` must contain a valid control message.\n+    unsafe fn new(data: &'a [u8]) -> AncillaryDataIter<'a, T> {\n         AncillaryDataIter { data, phantom: PhantomData }\n     }\n }\n@@ -325,12 +330,24 @@ pub enum AncillaryData<'a> {\n }\n \n impl<'a> AncillaryData<'a> {\n-    fn as_rights(data: &'a [u8]) -> Self {\n+    /// Create a `AncillaryData::ScmRights` variant.\n+    ///\n+    /// # Safety\n+    ///\n+    /// `data` must contain a valid control message and the control message must be type of\n+    /// `SOL_SOCKET` and level of `SCM_RIGHTS`.\n+    unsafe fn as_rights(data: &'a [u8]) -> Self {\n         let ancillary_data_iter = AncillaryDataIter::new(data);\n         let scm_rights = ScmRights(ancillary_data_iter);\n         AncillaryData::ScmRights(scm_rights)\n     }\n \n+    /// Create a `AncillaryData::ScmCredentials` variant.\n+    ///\n+    /// # Safety\n+    ///\n+    /// `data` must contain a valid control message and the control message must be type of\n+    /// `SOL_SOCKET` and level of `SCM_CREDENTIALS` or `SCM_CREDENTIALS`.\n     #[cfg(any(\n         doc,\n         target_os = \"android\",\n@@ -345,7 +362,7 @@ impl<'a> AncillaryData<'a> {\n         target_os = \"openbsd\",\n         target_env = \"uclibc\",\n     ))]\n-    fn as_credentials(data: &'a [u8]) -> Self {\n+    unsafe fn as_credentials(data: &'a [u8]) -> Self {\n         let ancillary_data_iter = AncillaryDataIter::new(data);\n         let scm_credentials = ScmCredentials(ancillary_data_iter);\n         AncillaryData::ScmCredentials(scm_credentials)"}]}