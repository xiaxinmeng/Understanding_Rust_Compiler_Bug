{"sha": "4bcdb053253e82f88d9db7806571887da45599d7", "node_id": "C_kwDOAAsO6NoAKDRiY2RiMDUzMjUzZTgyZjg4ZDlkYjc4MDY1NzE4ODdkYTQ1NTk5ZDc", "commit": {"author": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-07T13:17:21Z"}, "committer": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-07T13:17:21Z"}, "message": "include tabstops", "tree": {"sha": "0696fe73abfad6d36da8df34fcb45da1455c4c76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0696fe73abfad6d36da8df34fcb45da1455c4c76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bcdb053253e82f88d9db7806571887da45599d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEEzoFOOQgvfPzrDpfeO9fUvOMSb0FAmHYPWEACgkQeO9fUvOM\nSb1CYwv/RQKgxtyyq1mz35xq09qeKmfggiCt5RpE1O6Q4/CbFg1soSLl469S1C+x\nvsvGAJwcSf55GIPznMnSl1US4MZhsm+ltYJiRIjg/6BsRjK7XR3H8fsi41aTQkug\n4ictdrOwM81vnLicXaTtuW/A7OzDfSyXOcm0yM/Fm9j5WsJU/j+cpFubNV9Cu1TW\ncXQFfDr1pXF2oQr/+I+giqq5/4z+w9mkTZRpkWJd+CDnpHneodFvsUYu0zMe8Crl\nnw3wwlIBiN+GUFCUcwzPoxPcq/QbaIlMKoORhblyUoKAB37wUzR7e4IWc4W5oSxR\nI3ltRgNb0NKAlNww+Cta6E2qQKWF19XaA4MO3ooxETIcSofTUIH7IZ32oFsRIgdO\nGI/wUto7yt+sUGQA6hJPQyLvP1CjH1/ddw1X0fZ4nqOW628YYDclCz1e9amUGjH8\ntFn0xeoFvylrMOqBJ1D9x/el6CWxwDc9N5vEQBsX/lVERS8QAlDdTBhvAmCWIfLI\n9TCl5s21\n=nGle\n-----END PGP SIGNATURE-----", "payload": "tree 0696fe73abfad6d36da8df34fcb45da1455c4c76\nparent 778e71b15fac1a5c7dfff031d79d024eaf99665d\nauthor Jeroen Vannevel <jer_vannevel@outlook.com> 1641561441 +0000\ncommitter Jeroen Vannevel <jer_vannevel@outlook.com> 1641561441 +0000\n\ninclude tabstops\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bcdb053253e82f88d9db7806571887da45599d7", "html_url": "https://github.com/rust-lang/rust/commit/4bcdb053253e82f88d9db7806571887da45599d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bcdb053253e82f88d9db7806571887da45599d7/comments", "author": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "778e71b15fac1a5c7dfff031d79d024eaf99665d", "url": "https://api.github.com/repos/rust-lang/rust/commits/778e71b15fac1a5c7dfff031d79d024eaf99665d", "html_url": "https://github.com/rust-lang/rust/commit/778e71b15fac1a5c7dfff031d79d024eaf99665d"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "522dacc76275edea244d3a0bae25f95a43c064e7", "filename": "crates/ide_assists/src/handlers/add_turbo_fish.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4bcdb053253e82f88d9db7806571887da45599d7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcdb053253e82f88d9db7806571887da45599d7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs?ref=4bcdb053253e82f88d9db7806571887da45599d7", "patch": "@@ -83,25 +83,40 @@ pub(crate) fn add_turbo_fish(acc: &mut Assists, ctx: &AssistContext) -> Option<(\n             matches!(param, hir::GenericParam::TypeParam(_) | hir::GenericParam::ConstParam(_))\n         })\n         .count();\n-    let fish_head = std::iter::repeat(\"_\").take(number_of_arguments).collect::<Vec<_>>().join(\",\");\n \n     acc.add(\n         AssistId(\"add_turbo_fish\", AssistKind::RefactorRewrite),\n         \"Add `::<>`\",\n         ident.text_range(),\n         |builder| match ctx.config.snippet_cap {\n             Some(cap) => {\n-                let snip = format!(\"::<${{0:{}}}>\", fish_head);\n+                let snip = format!(\"::<{}>\", get_snippet_fish_head(number_of_arguments));\n                 builder.insert_snippet(cap, ident.text_range().end(), snip)\n             }\n             None => {\n+                let fish_head =\n+                    std::iter::repeat(\"_\").take(number_of_arguments).collect::<Vec<_>>().join(\", \");\n                 let snip = format!(\"::<{}>\", fish_head);\n                 builder.insert(ident.text_range().end(), snip);\n             }\n         },\n     )\n }\n \n+/// This will create a snippet string with tabstops marked\n+fn get_snippet_fish_head(number_of_arguments: usize) -> String {\n+    let mut fish_head = String::new();\n+    let mut i = 1;\n+    while i < number_of_arguments {\n+        fish_head.push_str(&format!(\"${{{}:_}},\", i));\n+        i = i + 1;\n+    }\n+\n+    // tabstop 0 is a special case and always the last one\n+    fish_head.push_str(\"${0:_}\");\n+    fish_head\n+}\n+\n #[cfg(test)]\n mod tests {\n     use crate::tests::{check_assist, check_assist_by_label, check_assist_not_applicable};\n@@ -140,7 +155,7 @@ fn main() {\n             r#\"\n fn make<T, A>() -> T {}\n fn main() {\n-    make::<${0:_,_}>();\n+    make::<${1:_},${0:_}>();\n }\n \"#,\n         );\n@@ -159,7 +174,7 @@ fn main() {\n             r#\"\n fn make<T, A, B, C, D, E, F>() -> T {}\n fn main() {\n-    make::<${0:_,_,_,_,_,_,_}>();\n+    make::<${1:_},${2:_},${3:_},${4:_},${5:_},${6:_},${0:_}>();\n }\n \"#,\n         );\n@@ -358,7 +373,7 @@ fn main() {\n             r#\"\n fn make<'a, T, A>(t: T, a: A) {}\n fn main() {\n-    make::<${0:_,_}>(5, 2);\n+    make::<${1:_},${0:_}>(5, 2);\n }\n \"#,\n         );\n@@ -377,7 +392,7 @@ fn main() {\n             r#\"\n fn make<T, const N: usize>(t: T) {}\n fn main() {\n-    make::<${0:_,_}>(3);\n+    make::<${1:_},${0:_}>(3);\n }\n \"#,\n         );"}]}