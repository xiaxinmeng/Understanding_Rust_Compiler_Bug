{"sha": "fd09f342f34b27d2439576d1ab681d42b2b8fac8", "node_id": "C_kwDOAAsO6NoAKGZkMDlmMzQyZjM0YjI3ZDI0Mzk1NzZkMWFiNjgxZDQyYjJiOGZhYzg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-03T13:44:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-03T13:44:16Z"}, "message": "Rollup merge of #92011 - Aaron1011:decode-span, r=michaelwoerister\n\nUse field span in `rustc_macros` when emitting decode call\n\nThis will cause backtraces to point to the location of\nthe field in the struct/enum, rather than the derive macro.\n\nThis makes it clear which field was being decoded when the\nbacktrace was captured (which is especially useful if\nthere are multiple fields with the same type).", "tree": {"sha": "6b35bc32304c7ac36e2410567a6c53192fffcc1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b35bc32304c7ac36e2410567a6c53192fffcc1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd09f342f34b27d2439576d1ab681d42b2b8fac8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0v2xCRBK7hj4Ov3rIwAAKMYIACthCz8nnEr1uz2X6EoemVOC\nGQZeos6xP9n9+GNJME+aM7IaHAJUTeyqIWh4PZ8BiYmtrnSCZhfLs7gnI5kovug/\n4P8Wv4/AgMVYuel7JA2+HvEEISSrjfPsPMQvsebgxtN4I84GyFOOM8GYsTbqQCCH\nXQThxlbAXmK6iDFppl442dbFd9Y7Tl4wrar2C1X/qxkh2MJkIGSXUvfWc35gcExs\nSpu9krJxbOfsdyk0jZz94obWLeKwz3A+zuKgTxkbr4IWzhwaRzoZoPk6Stn3jHcX\ny4DJzkAb3MU8WC6Dc4bADRPIjtIvHY3AqMqS3lyuavc7eG3aljvfc2Vq0uLncJY=\n=ZFka\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b35bc32304c7ac36e2410567a6c53192fffcc1c\nparent 57a4f4a6340036b18f47dd69d078e3c377438365\nparent 44fdb98764e13faecbe2c307798bbe97348bddde\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641217456 +0100\ncommitter GitHub <noreply@github.com> 1641217456 +0100\n\nRollup merge of #92011 - Aaron1011:decode-span, r=michaelwoerister\n\nUse field span in `rustc_macros` when emitting decode call\n\nThis will cause backtraces to point to the location of\nthe field in the struct/enum, rather than the derive macro.\n\nThis makes it clear which field was being decoded when the\nbacktrace was captured (which is especially useful if\nthere are multiple fields with the same type).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd09f342f34b27d2439576d1ab681d42b2b8fac8", "html_url": "https://github.com/rust-lang/rust/commit/fd09f342f34b27d2439576d1ab681d42b2b8fac8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd09f342f34b27d2439576d1ab681d42b2b8fac8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57a4f4a6340036b18f47dd69d078e3c377438365", "url": "https://api.github.com/repos/rust-lang/rust/commits/57a4f4a6340036b18f47dd69d078e3c377438365", "html_url": "https://github.com/rust-lang/rust/commit/57a4f4a6340036b18f47dd69d078e3c377438365"}, {"sha": "44fdb98764e13faecbe2c307798bbe97348bddde", "url": "https://api.github.com/repos/rust-lang/rust/commits/44fdb98764e13faecbe2c307798bbe97348bddde", "html_url": "https://github.com/rust-lang/rust/commit/44fdb98764e13faecbe2c307798bbe97348bddde"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "3351564299ca521421e17a32143c69b91fa2776f", "filename": "compiler/rustc_macros/src/serialize.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fd09f342f34b27d2439576d1ab681d42b2b8fac8/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd09f342f34b27d2439576d1ab681d42b2b8fac8/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs?ref=fd09f342f34b27d2439576d1ab681d42b2b8fac8", "patch": "@@ -1,6 +1,7 @@\n use proc_macro2::TokenStream;\n-use quote::quote;\n+use quote::{quote, quote_spanned};\n use syn::parse_quote;\n+use syn::spanned::Spanned;\n \n pub fn type_decodable_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::TokenStream {\n     let decoder_ty = quote! { __D };\n@@ -104,27 +105,30 @@ fn decodable_body(\n }\n \n fn decode_field(field: &syn::Field, index: usize, is_struct: bool) -> proc_macro2::TokenStream {\n+    let field_span = field.ident.as_ref().map_or(field.ty.span(), |ident| ident.span());\n+\n     let decode_inner_method = if let syn::Type::Reference(_) = field.ty {\n         quote! { ::rustc_middle::ty::codec::RefDecodable::decode }\n     } else {\n         quote! { ::rustc_serialize::Decodable::decode }\n     };\n     let (decode_method, opt_field_name) = if is_struct {\n         let field_name = field.ident.as_ref().map_or_else(|| index.to_string(), |i| i.to_string());\n-        (\n-            proc_macro2::Ident::new(\"read_struct_field\", proc_macro2::Span::call_site()),\n-            quote! { #field_name, },\n-        )\n+        (proc_macro2::Ident::new(\"read_struct_field\", field_span), quote! { #field_name, })\n     } else {\n-        (\n-            proc_macro2::Ident::new(\"read_enum_variant_arg\", proc_macro2::Span::call_site()),\n-            quote! {},\n-        )\n+        (proc_macro2::Ident::new(\"read_enum_variant_arg\", field_span), quote! {})\n+    };\n+\n+    let __decoder = quote! { __decoder };\n+    // Use the span of the field for the method call, so\n+    // that backtraces will point to the field.\n+    let decode_call = quote_spanned! {field_span=>\n+        ::rustc_serialize::Decoder::#decode_method(\n+                #__decoder, #opt_field_name #decode_inner_method)\n     };\n \n     quote! {\n-        match ::rustc_serialize::Decoder::#decode_method(\n-            __decoder, #opt_field_name #decode_inner_method) {\n+        match #decode_call  {\n             ::std::result::Result::Ok(__res) => __res,\n             ::std::result::Result::Err(__err) => return ::std::result::Result::Err(__err),\n         }"}]}