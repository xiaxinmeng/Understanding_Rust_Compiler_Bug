{"sha": "255f107cacb8927e72798313d69fa83d2e752a20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NWYxMDdjYWNiODkyN2U3Mjc5ODMxM2Q2OWZhODNkMmU3NTJhMjA=", "commit": {"author": {"name": "Daniel Henry-Mantilla", "email": "daniel.henry.mantilla@gmail.com", "date": "2021-01-05T14:07:40Z"}, "committer": {"name": "Daniel Henry-Mantilla", "email": "daniel.henry.mantilla@gmail.com", "date": "2021-01-06T14:13:39Z"}, "message": "Fix ICE on `pub macro`s defined within a non-module type namespace.", "tree": {"sha": "3d8cb26f3dc355ca2666327a26781a4809ca2d07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d8cb26f3dc355ca2666327a26781a4809ca2d07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/255f107cacb8927e72798313d69fa83d2e752a20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/255f107cacb8927e72798313d69fa83d2e752a20", "html_url": "https://github.com/rust-lang/rust/commit/255f107cacb8927e72798313d69fa83d2e752a20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/255f107cacb8927e72798313d69fa83d2e752a20/comments", "author": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce3ecd612f2ac52770293201848de733c86dcaaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3ecd612f2ac52770293201848de733c86dcaaa", "html_url": "https://github.com/rust-lang/rust/commit/ce3ecd612f2ac52770293201848de733c86dcaaa"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "2dc9c7bc758cfdb3ed01b7eb1d0ae8a569679a36", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/255f107cacb8927e72798313d69fa83d2e752a20/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/255f107cacb8927e72798313d69fa83d2e752a20/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=255f107cacb8927e72798313d69fa83d2e752a20", "patch": "@@ -93,6 +93,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             });\n             // HACK: rustdoc has no way to lookup `doctree::Module`s by their HirId. Instead,\n             // lookup the module by its name, by looking at each path segment one at a time.\n+            // Once #80415 is merged, this whole `for` loop research can be replaced by that.\n             let mut cur_mod = &mut top_level_module;\n             for path_segment in macro_parent_module.data {\n                 let path_segment_ty_ns = match path_segment.data {\n@@ -106,11 +107,18 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                         continue 'exported_macros;\n                     }\n                 };\n-                cur_mod = cur_mod\n-                    .mods\n-                    .iter_mut()\n-                    .find(|module| module.name == Some(path_segment_ty_ns))\n-                    .unwrap();\n+                // The obtained name in the type namespace may belong to something that is not\n+                // a `mod`ule (_e.g._, it could be an `enum` with a `pub macro` defined within\n+                // the block used for a discriminant.\n+                if let Some(child_mod) =\n+                    cur_mod.mods.iter_mut().find(|module| module.name == Some(path_segment_ty_ns))\n+                {\n+                    cur_mod = child_mod;\n+                } else {\n+                    // If the macro's parent def path is not exclusively made of module\n+                    // components, then it is not accessible (c.f. previous `continue`).\n+                    continue 'exported_macros;\n+                }\n             }\n             cur_mod.macros.push((def, None));\n         }"}, {"sha": "4fd85d68994019602ff49ac54420d8d4512e39ad", "filename": "src/test/rustdoc/macro_pub_in_module.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/255f107cacb8927e72798313d69fa83d2e752a20/src%2Ftest%2Frustdoc%2Fmacro_pub_in_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/255f107cacb8927e72798313d69fa83d2e752a20/src%2Ftest%2Frustdoc%2Fmacro_pub_in_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacro_pub_in_module.rs?ref=255f107cacb8927e72798313d69fa83d2e752a20", "patch": "@@ -72,3 +72,11 @@ const __: () = {\n pub mod __ {\n     // @!has krate/__/macro.in_both_const_and_mod.html\n }\n+\n+enum Enum {\n+    Crazy = {\n+        // @!has krate/macro.this_is_getting_weird.html;\n+        pub macro this_is_getting_weird() {}\n+        42\n+    },\n+}"}]}