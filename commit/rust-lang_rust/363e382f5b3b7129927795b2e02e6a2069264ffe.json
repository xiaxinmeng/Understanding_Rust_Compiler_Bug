{"sha": "363e382f5b3b7129927795b2e02e6a2069264ffe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2M2UzODJmNWIzYjcxMjk5Mjc3OTViMmUwMmU2YTIwNjkyNjRmZmU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T17:33:48Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T21:45:18Z"}, "message": "string_add, string_add_assign: split tests, make one rustfixable", "tree": {"sha": "29d4253379b58ab74bd0e2dddc27ee28af7f9d26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29d4253379b58ab74bd0e2dddc27ee28af7f9d26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/363e382f5b3b7129927795b2e02e6a2069264ffe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/363e382f5b3b7129927795b2e02e6a2069264ffe", "html_url": "https://github.com/rust-lang/rust/commit/363e382f5b3b7129927795b2e02e6a2069264ffe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/363e382f5b3b7129927795b2e02e6a2069264ffe/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a4dcfca359190d297e4f8a606a5974ecd67c9f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a4dcfca359190d297e4f8a606a5974ecd67c9f9", "html_url": "https://github.com/rust-lang/rust/commit/1a4dcfca359190d297e4f8a606a5974ecd67c9f9"}], "stats": {"total": 226, "additions": 115, "deletions": 111}, "files": [{"sha": "c9dd13eea8a30256c22e14b7752fc4ad9109f65d", "filename": "tests/ui/string_add.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_add.rs?ref=363e382f5b3b7129927795b2e02e6a2069264ffe", "patch": "@@ -0,0 +1,19 @@\n+#[warn(clippy::string_add)]\n+#[allow(clippy::string_add_assign, unused)]\n+fn main() {\n+    // ignores assignment distinction\n+    let mut x = \"\".to_owned();\n+\n+    for _ in 1..3 {\n+        x = x + \".\";\n+    }\n+\n+    let y = \"\".to_owned();\n+    let z = y + \"...\";\n+\n+    assert_eq!(&x, &z);\n+\n+    let mut x = 1;\n+    x = x + 1;\n+    assert_eq!(2, x);\n+}"}, {"sha": "8345c50f9710c2b32a5db37bc059380dddad117d", "filename": "tests/ui/string_add.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_add.stderr?ref=363e382f5b3b7129927795b2e02e6a2069264ffe", "patch": "@@ -0,0 +1,30 @@\n+error: manual implementation of an assign operation\n+  --> $DIR/string_add.rs:8:9\n+   |\n+LL |         x = x + \".\";\n+   |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n+   |\n+   = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n+\n+error: you added something to a string. Consider using `String::push_str()` instead\n+  --> $DIR/string_add.rs:8:13\n+   |\n+LL |         x = x + \".\";\n+   |             ^^^^^^^\n+   |\n+   = note: `-D clippy::string-add` implied by `-D warnings`\n+\n+error: you added something to a string. Consider using `String::push_str()` instead\n+  --> $DIR/string_add.rs:12:13\n+   |\n+LL |     let z = y + \"...\";\n+   |             ^^^^^^^^^\n+\n+error: manual implementation of an assign operation\n+  --> $DIR/string_add.rs:17:5\n+   |\n+LL |     x = x + 1;\n+   |     ^^^^^^^^^ help: replace it with: `x += 1`\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "db71bab1e5214a96baceeb1a62ee426e3d6173a3", "filename": "tests/ui/string_add_assign.fixed", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add_assign.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add_assign.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_add_assign.fixed?ref=363e382f5b3b7129927795b2e02e6a2069264ffe", "patch": "@@ -0,0 +1,21 @@\n+// run-rustfix\n+\n+#[allow(clippy::string_add, unused)]\n+#[warn(clippy::string_add_assign)]\n+fn main() {\n+    // ignores assignment distinction\n+    let mut x = \"\".to_owned();\n+\n+    for _ in 1..3 {\n+        x += \".\";\n+    }\n+\n+    let y = \"\".to_owned();\n+    let z = y + \"...\";\n+\n+    assert_eq!(&x, &z);\n+\n+    let mut x = 1;\n+    x += 1;\n+    assert_eq!(2, x);\n+}"}, {"sha": "644991945cbe2b77da49ca71a1e5e8a8830301a3", "filename": "tests/ui/string_add_assign.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add_assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add_assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_add_assign.rs?ref=363e382f5b3b7129927795b2e02e6a2069264ffe", "patch": "@@ -0,0 +1,21 @@\n+// run-rustfix\n+\n+#[allow(clippy::string_add, unused)]\n+#[warn(clippy::string_add_assign)]\n+fn main() {\n+    // ignores assignment distinction\n+    let mut x = \"\".to_owned();\n+\n+    for _ in 1..3 {\n+        x = x + \".\";\n+    }\n+\n+    let y = \"\".to_owned();\n+    let z = y + \"...\";\n+\n+    assert_eq!(&x, &z);\n+\n+    let mut x = 1;\n+    x = x + 1;\n+    assert_eq!(2, x);\n+}"}, {"sha": "7676175c1b82f39a2943db9a5b48c7fd484c5359", "filename": "tests/ui/string_add_assign.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add_assign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/363e382f5b3b7129927795b2e02e6a2069264ffe/tests%2Fui%2Fstring_add_assign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_add_assign.stderr?ref=363e382f5b3b7129927795b2e02e6a2069264ffe", "patch": "@@ -0,0 +1,24 @@\n+error: you assigned the result of adding something to this string. Consider using `String::push_str()` instead\n+  --> $DIR/string_add_assign.rs:10:9\n+   |\n+LL |         x = x + \".\";\n+   |         ^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::string-add-assign` implied by `-D warnings`\n+\n+error: manual implementation of an assign operation\n+  --> $DIR/string_add_assign.rs:10:9\n+   |\n+LL |         x = x + \".\";\n+   |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n+   |\n+   = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n+\n+error: manual implementation of an assign operation\n+  --> $DIR/string_add_assign.rs:19:5\n+   |\n+LL |     x = x + 1;\n+   |     ^^^^^^^^^ help: replace it with: `x += 1`\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "766e23c744a577a4cb0ff88d64b9ef4e287bab0b", "filename": "tests/ui/strings.rs", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/1a4dcfca359190d297e4f8a606a5974ecd67c9f9/tests%2Fui%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a4dcfca359190d297e4f8a606a5974ecd67c9f9/tests%2Fui%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.rs?ref=1a4dcfca359190d297e4f8a606a5974ecd67c9f9", "patch": "@@ -1,55 +0,0 @@\n-#[warn(clippy::string_add)]\n-#[allow(clippy::string_add_assign)]\n-fn add_only() {\n-    // ignores assignment distinction\n-    let mut x = \"\".to_owned();\n-\n-    for _ in 1..3 {\n-        x = x + \".\";\n-    }\n-\n-    let y = \"\".to_owned();\n-    let z = y + \"...\";\n-\n-    assert_eq!(&x, &z);\n-}\n-\n-#[warn(clippy::string_add_assign)]\n-fn add_assign_only() {\n-    let mut x = \"\".to_owned();\n-\n-    for _ in 1..3 {\n-        x = x + \".\";\n-    }\n-\n-    let y = \"\".to_owned();\n-    let z = y + \"...\";\n-\n-    assert_eq!(&x, &z);\n-}\n-\n-#[warn(clippy::string_add, clippy::string_add_assign)]\n-fn both() {\n-    let mut x = \"\".to_owned();\n-\n-    for _ in 1..3 {\n-        x = x + \".\";\n-    }\n-\n-    let y = \"\".to_owned();\n-    let z = y + \"...\";\n-\n-    assert_eq!(&x, &z);\n-}\n-\n-#[allow(clippy::assign_op_pattern)]\n-fn main() {\n-    add_only();\n-    add_assign_only();\n-    both();\n-\n-    // the add is only caught for `String`\n-    let mut x = 1;\n-    x = x + 1;\n-    assert_eq!(2, x);\n-}"}, {"sha": "7f684fe63555e00fef23c57ce34de684fbf089df", "filename": "tests/ui/strings.stderr", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/1a4dcfca359190d297e4f8a606a5974ecd67c9f9/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a4dcfca359190d297e4f8a606a5974ecd67c9f9/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=1a4dcfca359190d297e4f8a606a5974ecd67c9f9", "patch": "@@ -1,56 +0,0 @@\n-error: manual implementation of an assign operation\n-  --> $DIR/strings.rs:8:9\n-   |\n-LL |         x = x + \".\";\n-   |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n-   |\n-   = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n-\n-error: you added something to a string. Consider using `String::push_str()` instead\n-  --> $DIR/strings.rs:8:13\n-   |\n-LL |         x = x + \".\";\n-   |             ^^^^^^^\n-   |\n-   = note: `-D clippy::string-add` implied by `-D warnings`\n-\n-error: you added something to a string. Consider using `String::push_str()` instead\n-  --> $DIR/strings.rs:12:13\n-   |\n-LL |     let z = y + \"...\";\n-   |             ^^^^^^^^^\n-\n-error: you assigned the result of adding something to this string. Consider using `String::push_str()` instead\n-  --> $DIR/strings.rs:22:9\n-   |\n-LL |         x = x + \".\";\n-   |         ^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::string-add-assign` implied by `-D warnings`\n-\n-error: manual implementation of an assign operation\n-  --> $DIR/strings.rs:22:9\n-   |\n-LL |         x = x + \".\";\n-   |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n-\n-error: you assigned the result of adding something to this string. Consider using `String::push_str()` instead\n-  --> $DIR/strings.rs:36:9\n-   |\n-LL |         x = x + \".\";\n-   |         ^^^^^^^^^^^\n-\n-error: manual implementation of an assign operation\n-  --> $DIR/strings.rs:36:9\n-   |\n-LL |         x = x + \".\";\n-   |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n-\n-error: you added something to a string. Consider using `String::push_str()` instead\n-  --> $DIR/strings.rs:40:13\n-   |\n-LL |     let z = y + \"...\";\n-   |             ^^^^^^^^^\n-\n-error: aborting due to 8 previous errors\n-"}]}