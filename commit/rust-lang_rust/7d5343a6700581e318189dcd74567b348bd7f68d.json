{"sha": "7d5343a6700581e318189dcd74567b348bd7f68d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNTM0M2E2NzAwNTgxZTMxODE4OWRjZDc0NTY3YjM0OGJkN2Y2OGQ=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-03-21T20:49:22Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-03-26T08:20:41Z"}, "message": "implement minmax intrinsics", "tree": {"sha": "6a1de1c1a299aad05b03e849b3ce98ab53d3a69e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a1de1c1a299aad05b03e849b3ce98ab53d3a69e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d5343a6700581e318189dcd74567b348bd7f68d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d5343a6700581e318189dcd74567b348bd7f68d", "html_url": "https://github.com/rust-lang/rust/commit/7d5343a6700581e318189dcd74567b348bd7f68d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d5343a6700581e318189dcd74567b348bd7f68d/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "184156ed97a0a1256e80a17b8673749569407c94", "url": "https://api.github.com/repos/rust-lang/rust/commits/184156ed97a0a1256e80a17b8673749569407c94", "html_url": "https://github.com/rust-lang/rust/commit/184156ed97a0a1256e80a17b8673749569407c94"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "09ff35667139c0a764b2bf9e26c08c5e9a122bb3", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=7d5343a6700581e318189dcd74567b348bd7f68d", "patch": "@@ -1247,6 +1247,9 @@ extern \"C\" {\n                                          IsNaN: bool)\n                                          -> ValueRef;\n \n+    pub fn LLVMRustBuildMinNum(B: BuilderRef, LHS: ValueRef, LHS: ValueRef) -> ValueRef;\n+    pub fn LLVMRustBuildMaxNum(B: BuilderRef, LHS: ValueRef, LHS: ValueRef) -> ValueRef;\n+\n     pub fn LLVMBuildIsNull(B: BuilderRef, Val: ValueRef, Name: *const c_char) -> ValueRef;\n     pub fn LLVMBuildIsNotNull(B: BuilderRef, Val: ValueRef, Name: *const c_char) -> ValueRef;\n     pub fn LLVMBuildPtrDiff(B: BuilderRef,"}, {"sha": "b5271b25b630ca7a26f912cd26bb459d55029b29", "filename": "src/librustc_trans/builder.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Flibrustc_trans%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Flibrustc_trans%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbuilder.rs?ref=7d5343a6700581e318189dcd74567b348bd7f68d", "patch": "@@ -917,6 +917,19 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         }\n     }\n \n+    pub fn minnum(&self, lhs: ValueRef, rhs: ValueRef) -> ValueRef {\n+        self.count_insn(\"minnum\");\n+        unsafe {\n+            llvm::LLVMRustBuildMinNum(self.llbuilder, lhs, rhs)\n+        }\n+    }\n+    pub fn maxnum(&self, lhs: ValueRef, rhs: ValueRef) -> ValueRef {\n+        self.count_insn(\"maxnum\");\n+        unsafe {\n+            llvm::LLVMRustBuildMaxNum(self.llbuilder, lhs, rhs)\n+        }\n+    }\n+\n     pub fn select(&self, cond: ValueRef, then_val: ValueRef, else_val: ValueRef) -> ValueRef {\n         self.count_insn(\"select\");\n         unsafe {"}, {"sha": "5c67f8091141bf3cf1d52d1311759912d62023ce", "filename": "src/librustc_trans/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Flibrustc_trans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Flibrustc_trans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fintrinsic.rs?ref=7d5343a6700581e318189dcd74567b348bd7f68d", "patch": "@@ -1432,6 +1432,8 @@ unsupported {} from `{}` with element `{}` of size `{}` to `{}`\"#,\n         simd_and: TyUint, TyInt => and;\n         simd_or: TyUint, TyInt => or;\n         simd_xor: TyUint, TyInt => xor;\n+        simd_fmax: TyFloat => maxnum;\n+        simd_fmin: TyFloat => minnum;\n     }\n     span_bug!(span, \"unknown SIMD intrinsic\");\n }"}, {"sha": "377e3a891840f786bb36baed7aa71fdf2d6abf9c", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=7d5343a6700581e318189dcd74567b348bd7f68d", "patch": "@@ -355,7 +355,8 @@ pub fn check_platform_intrinsic_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         }\n         \"simd_add\" | \"simd_sub\" | \"simd_mul\" | \"simd_rem\" |\n         \"simd_div\" | \"simd_shl\" | \"simd_shr\" |\n-        \"simd_and\" | \"simd_or\" | \"simd_xor\" => {\n+        \"simd_and\" | \"simd_or\" | \"simd_xor\" |\n+        \"simd_fmin\" | \"simd_fmax\" => {\n             (1, vec![param(0), param(0)], param(0))\n         }\n         \"simd_insert\" => (2, vec![param(0), tcx.types.u32, param(1)], param(0)),"}, {"sha": "627827105cbb2891bad412e49c8f89c69f27ba1d", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7d5343a6700581e318189dcd74567b348bd7f68d/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=7d5343a6700581e318189dcd74567b348bd7f68d", "patch": "@@ -1500,3 +1500,12 @@ LLVMBuildExactUDiv(LLVMBuilderRef B, LLVMValueRef LHS,\n   return wrap(unwrap(B)->CreateExactUDiv(unwrap(LHS), unwrap(RHS), Name));\n }\n #endif\n+\n+extern \"C\" LLVMValueRef\n+LLVMRustBuildMinNum(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS) {\n+    return wrap(unwrap(B)->CreateMinNum(unwrap(LHS),unwrap(RHS)));\n+}\n+extern \"C\" LLVMValueRef\n+LLVMRustBuildMaxNum(LLVMBuilderRef B, LLVMValueRef LHS, LLVMValueRef RHS) {\n+    return wrap(unwrap(B)->CreateMaxNum(unwrap(LHS),unwrap(RHS)));\n+}"}]}