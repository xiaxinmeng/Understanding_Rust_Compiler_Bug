{"sha": "05bb4c4e1bea99295f93d9a2382f534d675daee0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YmI0YzRlMWJlYTk5Mjk1ZjkzZDlhMjM4MmY1MzRkNjc1ZGFlZTA=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-30T00:23:29Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-30T00:29:02Z"}, "message": "reduce the size of UnsafeArc from 2 words to 1", "tree": {"sha": "851c8d231657d665d5208f62ecc3a2fc8f61a976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/851c8d231657d665d5208f62ecc3a2fc8f61a976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05bb4c4e1bea99295f93d9a2382f534d675daee0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05bb4c4e1bea99295f93d9a2382f534d675daee0", "html_url": "https://github.com/rust-lang/rust/commit/05bb4c4e1bea99295f93d9a2382f534d675daee0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05bb4c4e1bea99295f93d9a2382f534d675daee0/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "698873e3a829d764b451f657178403c704044721", "url": "https://api.github.com/repos/rust-lang/rust/commits/698873e3a829d764b451f657178403c704044721", "html_url": "https://github.com/rust-lang/rust/commit/698873e3a829d764b451f657178403c704044721"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "26313323291e5e8d4bef786dec5d989cc6942971", "filename": "src/libstd/unstable/sync.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/05bb4c4e1bea99295f93d9a2382f534d675daee0/src%2Flibstd%2Funstable%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05bb4c4e1bea99295f93d9a2382f534d675daee0/src%2Flibstd%2Funstable%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fsync.rs?ref=05bb4c4e1bea99295f93d9a2382f534d675daee0", "patch": "@@ -26,6 +26,7 @@ use vec;\n /// An atomically reference counted pointer.\n ///\n /// Enforces no shared-memory safety.\n+#[unsafe_no_drop_flag]\n pub struct UnsafeArc<T> {\n     data: *mut ArcData<T>,\n }\n@@ -221,8 +222,9 @@ impl<T: Send> Clone for UnsafeArc<T> {\n impl<T> Drop for UnsafeArc<T>{\n     fn drop(&self) {\n         unsafe {\n+            // Happens when destructing an unwrapper's handle and from `#[unsafe_no_drop_flag]`\n             if self.data.is_null() {\n-                return; // Happens when destructing an unwrapper's handle.\n+                return\n             }\n             let mut data: ~ArcData<T> = cast::transmute(self.data);\n             // Must be acquire+release, not just release, to make sure this\n@@ -440,6 +442,12 @@ mod tests {\n     use super::{Exclusive, UnsafeArc, atomically};\n     use task;\n     use util;\n+    use sys::size_of;\n+\n+    #[test]\n+    fn test_size() {\n+        assert_eq!(size_of::<UnsafeArc<[int, ..10]>>(), size_of::<*[int, ..10]>());\n+    }\n \n     #[test]\n     fn test_atomically() {"}]}