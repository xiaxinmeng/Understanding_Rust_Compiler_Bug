{"sha": "c955b5908e0c699500d1d3dea3481136dd16197d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NTViNTkwOGUwYzY5OTUwMGQxZDNkZWEzNDgxMTM2ZGQxNjE5N2Q=", "commit": {"author": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2019-06-25T14:15:33Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-06-25T14:15:33Z"}, "message": "fix: run in sub dirs/workspace member dirs (#3652)", "tree": {"sha": "2cd36f677b792cd1a3c9f4ff7939b5e6139f1cbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cd36f677b792cd1a3c9f4ff7939b5e6139f1cbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c955b5908e0c699500d1d3dea3481136dd16197d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c955b5908e0c699500d1d3dea3481136dd16197d", "html_url": "https://github.com/rust-lang/rust/commit/c955b5908e0c699500d1d3dea3481136dd16197d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c955b5908e0c699500d1d3dea3481136dd16197d/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9986b9d01184e9be6390c377942386c4451c22d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9986b9d01184e9be6390c377942386c4451c22d9", "html_url": "https://github.com/rust-lang/rust/commit/9986b9d01184e9be6390c377942386c4451c22d9"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "ec6344e06958378542bda4c4a25bea70ccb6ef8a", "filename": "src/cargo-fmt/main.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c955b5908e0c699500d1d3dea3481136dd16197d/src%2Fcargo-fmt%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c955b5908e0c699500d1d3dea3481136dd16197d/src%2Fcargo-fmt%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo-fmt%2Fmain.rs?ref=c955b5908e0c699500d1d3dea3481136dd16197d", "patch": "@@ -253,12 +253,25 @@ fn get_targets_root_only(targets: &mut BTreeSet<Target>) -> Result<(), io::Error\n     let workspace_root_path = PathBuf::from(&metadata.workspace_root).canonicalize()?;\n     let in_workspace_root = workspace_root_path == current_dir;\n \n-    for package in metadata.packages {\n-        if in_workspace_root || PathBuf::from(&package.manifest_path) == current_dir_manifest {\n-            for target in package.targets {\n-                targets.insert(Target::from_target(&target));\n-            }\n-        }\n+    let package_targets = match metadata.packages.len() {\n+        1 => metadata.packages.into_iter().next().unwrap().targets,\n+        _ => metadata\n+            .packages\n+            .into_iter()\n+            .filter(|p| {\n+                in_workspace_root\n+                    || PathBuf::from(&p.manifest_path)\n+                        .canonicalize()\n+                        .unwrap_or_default()\n+                        == current_dir_manifest\n+            })\n+            .map(|p| p.targets)\n+            .flatten()\n+            .collect(),\n+    };\n+\n+    for target in package_targets {\n+        targets.insert(Target::from_target(&target));\n     }\n \n     Ok(())"}]}