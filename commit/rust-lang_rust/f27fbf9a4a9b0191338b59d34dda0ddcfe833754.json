{"sha": "f27fbf9a4a9b0191338b59d34dda0ddcfe833754", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyN2ZiZjlhNGE5YjAxOTEzMzhiNTlkMzRkZGEwZGRjZmU4MzM3NTQ=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-05-23T15:44:44Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-05-23T15:44:44Z"}, "message": "Do not inject test harness for --cfg test", "tree": {"sha": "39081ca403773b7c173208e99c8f8ef9bcd0985e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39081ca403773b7c173208e99c8f8ef9bcd0985e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f27fbf9a4a9b0191338b59d34dda0ddcfe833754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f27fbf9a4a9b0191338b59d34dda0ddcfe833754", "html_url": "https://github.com/rust-lang/rust/commit/f27fbf9a4a9b0191338b59d34dda0ddcfe833754", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f27fbf9a4a9b0191338b59d34dda0ddcfe833754/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e24d621fcacf59fa8ecc1c1af1c4adeded4bddee", "url": "https://api.github.com/repos/rust-lang/rust/commits/e24d621fcacf59fa8ecc1c1af1c4adeded4bddee", "html_url": "https://github.com/rust-lang/rust/commit/e24d621fcacf59fa8ecc1c1af1c4adeded4bddee"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "2965c763ccc40ece81935ca2174999fbfe9f9b07", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f27fbf9a4a9b0191338b59d34dda0ddcfe833754/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27fbf9a4a9b0191338b59d34dda0ddcfe833754/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=f27fbf9a4a9b0191338b59d34dda0ddcfe833754", "patch": "@@ -743,7 +743,11 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n     })?;\n \n     krate = time(time_passes, \"maybe building test harness\", || {\n-        syntax::test::modify_for_testing(&sess.parse_sess, &sess.opts.cfg, krate, sess.diagnostic())\n+        syntax::test::modify_for_testing(&sess.parse_sess,\n+                                         sess.opts.test,\n+                                         &sess.opts.cfg,\n+                                         krate,\n+                                         sess.diagnostic())\n     });\n \n     krate = time(time_passes,"}, {"sha": "56485433101fab7a66dafee0e5366f64cfaa2003", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f27fbf9a4a9b0191338b59d34dda0ddcfe833754/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27fbf9a4a9b0191338b59d34dda0ddcfe833754/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=f27fbf9a4a9b0191338b59d34dda0ddcfe833754", "patch": "@@ -68,14 +68,10 @@ struct TestCtxt<'a> {\n // Traverse the crate, collecting all the test functions, eliding any\n // existing main functions, and synthesizing a main test harness\n pub fn modify_for_testing(sess: &ParseSess,\n+                          should_test: bool,\n                           cfg: &ast::CrateConfig,\n                           krate: ast::Crate,\n                           span_diagnostic: &errors::Handler) -> ast::Crate {\n-    // We generate the test harness when building in the 'test'\n-    // configuration, either with the '--test' or '--cfg test'\n-    // command line options.\n-    let should_test = attr::contains_name(&krate.config, \"test\");\n-\n     // Check for #[reexport_test_harness_main = \"some_name\"] which\n     // creates a `use some_name = __test::main;`. This needs to be\n     // unconditional, so that the attribute is still marked as used in"}, {"sha": "708fde598886291dc69d348a980a250a6394cf08", "filename": "src/test/run-pass/test-vs-cfg-test.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f27fbf9a4a9b0191338b59d34dda0ddcfe833754/src%2Ftest%2Frun-pass%2Ftest-vs-cfg-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27fbf9a4a9b0191338b59d34dda0ddcfe833754/src%2Ftest%2Frun-pass%2Ftest-vs-cfg-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-vs-cfg-test.rs?ref=f27fbf9a4a9b0191338b59d34dda0ddcfe833754", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --cfg test\n+\n+// Make sure `--cfg test` does not inject test harness\n+\n+#[test]\n+fn test() { panic!(); }\n+\n+fn main() {}"}]}