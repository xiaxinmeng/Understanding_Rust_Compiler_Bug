{"sha": "84cb3529b627e8ae034237156c04bdad84ea8b61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0Y2IzNTI5YjYyN2U4YWUwMzQyMzcxNTZjMDRiZGFkODRlYThiNjE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-07T06:06:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-07T06:06:10Z"}, "message": "Rollup merge of #64231 - matthewjasper:move-ast-cfg, r=Centril\n\nMove the HIR CFG to `rustc_ast_borrowck`\n\nNo new code should be using it.", "tree": {"sha": "0c96ec802be045cac14e277a9b8317a615ee2484", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c96ec802be045cac14e277a9b8317a615ee2484"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84cb3529b627e8ae034237156c04bdad84ea8b61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdc0jSCRBK7hj4Ov3rIwAAdHIIAJUk1X5YONSW/ZRFUMWFPJkC\nYlRJo3N35oMLqE0omGkWFV8kJkmG2/KALKQ43QbKXg/94McCJpPBIgbX4LkO87K9\np8xMKZ50RveaCjHOSAPcaHff2RC/ir0i5MsY6Z+j/VLfBM6Cj67ExOSy3C6FnT1D\nG5PlWsRjETkdDM+IwDWadACvD3bt3qrb876Kr58ofdziF+ROzrdxADDVTBI1KCRP\nHTbkQ5eefDhwkWnpYV2U+e95UZ29GafMdvsm8ruztSO5q/bhdD67+29xQfVsoATm\nMtvKK2tzSbMLnUSihzl6S+C8ccT/EHdMZ3C51kZ5ctWUbUkP2KzAXyKuaNLiWuA=\n=mErr\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c96ec802be045cac14e277a9b8317a615ee2484\nparent fae7bc756e622f5cb6ffa432e914a06942e141ff\nparent 10f46b69bc32bd1cb5f013ce904957aeb28603bb\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567836370 +0200\ncommitter GitHub <noreply@github.com> 1567836370 +0200\n\nRollup merge of #64231 - matthewjasper:move-ast-cfg, r=Centril\n\nMove the HIR CFG to `rustc_ast_borrowck`\n\nNo new code should be using it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84cb3529b627e8ae034237156c04bdad84ea8b61", "html_url": "https://github.com/rust-lang/rust/commit/84cb3529b627e8ae034237156c04bdad84ea8b61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84cb3529b627e8ae034237156c04bdad84ea8b61/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fae7bc756e622f5cb6ffa432e914a06942e141ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/fae7bc756e622f5cb6ffa432e914a06942e141ff", "html_url": "https://github.com/rust-lang/rust/commit/fae7bc756e622f5cb6ffa432e914a06942e141ff"}, {"sha": "10f46b69bc32bd1cb5f013ce904957aeb28603bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/10f46b69bc32bd1cb5f013ce904957aeb28603bb", "html_url": "https://github.com/rust-lang/rust/commit/10f46b69bc32bd1cb5f013ce904957aeb28603bb"}], "stats": {"total": 75, "additions": 32, "deletions": 43}, "files": [{"sha": "bf4330a29a7dfe1eaf004501dce7ca8226896673", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -97,7 +97,6 @@ pub mod query;\n \n #[macro_use]\n pub mod arena;\n-pub mod cfg;\n pub mod dep_graph;\n pub mod hir;\n pub mod ich;"}, {"sha": "23d5480c60562b5811acf8baff6d091a1fea1fa8", "filename": "src/librustc_ast_borrowck/borrowck/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Fborrowck%2Fmod.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -9,7 +9,6 @@ use InteriorKind::*;\n \n use rustc::hir::HirId;\n use rustc::hir::Node;\n-use rustc::cfg;\n use rustc::middle::borrowck::{BorrowCheckResult, SignalledError};\n use rustc::hir::def_id::{DefId, LocalDefId};\n use rustc::middle::mem_categorization as mc;\n@@ -28,6 +27,7 @@ use log::debug;\n \n use rustc::hir;\n \n+use crate::cfg;\n use crate::dataflow::{DataFlowContext, BitwiseOperator, DataFlowOperator, KillFrom};\n \n pub mod check_loans;"}, {"sha": "67d818161b1b5d2a6cde7ba12356049b46ebed02", "filename": "src/librustc_ast_borrowck/borrowck/move_data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Fborrowck%2Fmove_data.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -4,7 +4,7 @@\n use crate::dataflow::{DataFlowContext, BitwiseOperator, DataFlowOperator, KillFrom};\n \n use crate::borrowck::*;\n-use rustc::cfg;\n+use crate::cfg;\n use rustc::ty::{self, TyCtxt};\n use rustc::util::nodemap::FxHashMap;\n "}, {"sha": "339d92145c64fc2d4e8f084023a7ba1224b6e914", "filename": "src/librustc_ast_borrowck/cfg/construct.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fcfg%2Fconstruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fcfg%2Fconstruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Fcfg%2Fconstruct.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -1,11 +1,11 @@\n use crate::cfg::*;\n-use crate::middle::region;\n use rustc_data_structures::graph::implementation as graph;\n-use crate::ty::{self, TyCtxt};\n+use rustc::middle::region;\n+use rustc::ty::{self, TyCtxt};\n \n-use crate::hir::{self, PatKind};\n-use crate::hir::def_id::DefId;\n-use crate::hir::ptr::P;\n+use rustc::hir::{self, PatKind};\n+use rustc::hir::def_id::DefId;\n+use rustc::hir::ptr::P;\n \n struct CFGBuilder<'a, 'tcx> {\n     tcx: TyCtxt<'tcx>,\n@@ -30,7 +30,7 @@ struct LoopScope {\n     break_index: CFGIndex,    // where to go on a `break`\n }\n \n-pub fn construct(tcx: TyCtxt<'_>, body: &hir::Body) -> CFG {\n+pub(super) fn construct(tcx: TyCtxt<'_>, body: &hir::Body) -> CFG {\n     let mut graph = graph::Graph::new();\n     let entry = graph.add_node(CFGNodeData::Entry);\n ", "previous_filename": "src/librustc/cfg/construct.rs"}, {"sha": "46409f1a1cebf498a7ff72f357777d0a01be596b", "filename": "src/librustc_ast_borrowck/cfg/graphviz.rs", "status": "renamed", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fcfg%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fcfg%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Fcfg%2Fgraphviz.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -1,15 +1,12 @@\n /// This module provides linkage between rustc::middle::graph and\n /// libgraphviz traits.\n \n-// For clarity, rename the graphviz crate locally to dot.\n-use graphviz as dot;\n-\n use crate::cfg;\n-use crate::hir;\n-use crate::ty::TyCtxt;\n+use rustc::hir;\n+use rustc::ty::TyCtxt;\n \n-pub type Node<'a> = (cfg::CFGIndex, &'a cfg::CFGNode);\n-pub type Edge<'a> = &'a cfg::CFGEdge;\n+pub(crate) type Node<'a> = (cfg::CFGIndex, &'a cfg::CFGNode);\n+pub(crate) type Edge<'a> = &'a cfg::CFGEdge;\n \n pub struct LabelledCFG<'a, 'tcx> {\n     pub tcx: TyCtxt<'tcx>,", "previous_filename": "src/librustc/cfg/graphviz.rs"}, {"sha": "981199c91d513effe18b18fb911c4ecf593b9728", "filename": "src/librustc_ast_borrowck/cfg/mod.rs", "status": "renamed", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fcfg%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fcfg%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Fcfg%2Fmod.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -2,18 +2,18 @@\n //! Uses `Graph` as the underlying representation.\n \n use rustc_data_structures::graph::implementation as graph;\n-use crate::ty::TyCtxt;\n-use crate::hir;\n-use crate::hir::def_id::DefId;\n+use rustc::ty::TyCtxt;\n+use rustc::hir;\n+use rustc::hir::def_id::DefId;\n \n mod construct;\n pub mod graphviz;\n \n pub struct CFG {\n-    pub owner_def_id: DefId,\n-    pub graph: CFGGraph,\n-    pub entry: CFGIndex,\n-    pub exit: CFGIndex,\n+    owner_def_id: DefId,\n+    pub(crate) graph: CFGGraph,\n+    pub(crate) entry: CFGIndex,\n+    exit: CFGIndex,\n }\n \n #[derive(Copy, Clone, Debug, PartialEq)]\n@@ -26,7 +26,7 @@ pub enum CFGNodeData {\n }\n \n impl CFGNodeData {\n-    pub fn id(&self) -> hir::ItemLocalId {\n+    pub(crate) fn id(&self) -> hir::ItemLocalId {\n         if let CFGNodeData::AST(id) = *self {\n             id\n         } else {\n@@ -37,24 +37,19 @@ impl CFGNodeData {\n \n #[derive(Debug)]\n pub struct CFGEdgeData {\n-    pub exiting_scopes: Vec<hir::ItemLocalId>\n+    pub(crate) exiting_scopes: Vec<hir::ItemLocalId>\n }\n \n-pub type CFGIndex = graph::NodeIndex;\n+pub(crate) type CFGIndex = graph::NodeIndex;\n \n-pub type CFGGraph = graph::Graph<CFGNodeData, CFGEdgeData>;\n+pub(crate) type CFGGraph = graph::Graph<CFGNodeData, CFGEdgeData>;\n \n-pub type CFGNode = graph::Node<CFGNodeData>;\n+pub(crate) type CFGNode = graph::Node<CFGNodeData>;\n \n-pub type CFGEdge = graph::Edge<CFGEdgeData>;\n+pub(crate) type CFGEdge = graph::Edge<CFGEdgeData>;\n \n impl CFG {\n     pub fn new(tcx: TyCtxt<'_>, body: &hir::Body) -> CFG {\n         construct::construct(tcx, body)\n     }\n-\n-    pub fn node_is_reachable(&self, id: hir::ItemLocalId) -> bool {\n-        self.graph.depth_traverse(self.entry, graph::OUTGOING)\n-                  .any(|idx| self.graph.node_data(idx).id() == id)\n-    }\n }", "previous_filename": "src/librustc/cfg/mod.rs"}, {"sha": "a8562901d99c5f3c0443db6b6dc6980580533998", "filename": "src/librustc_ast_borrowck/dataflow.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Fdataflow.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -3,9 +3,7 @@\n //! and thus uses bitvectors. Your job is simply to specify the so-called\n //! GEN and KILL bits for each expression.\n \n-use rustc::cfg;\n-use rustc::cfg::CFGIndex;\n-use rustc::ty::TyCtxt;\n+use crate::cfg::{self, CFGIndex};\n use std::mem;\n use std::usize;\n use log::debug;\n@@ -16,6 +14,7 @@ use rustc::util::nodemap::FxHashMap;\n use rustc::hir;\n use rustc::hir::intravisit;\n use rustc::hir::print as pprust;\n+use rustc::ty::TyCtxt;\n \n #[derive(Copy, Clone, Debug)]\n pub enum EntryOrExit {"}, {"sha": "c077dc828aba22b98fe898fee4bd92039bef9832", "filename": "src/librustc_ast_borrowck/graphviz.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Fgraphviz.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -4,13 +4,12 @@\n \n pub use Variant::*;\n \n-pub use rustc::cfg::graphviz::{Node, Edge};\n-use rustc::cfg::graphviz as cfg_dot;\n-\n+pub(crate) use crate::cfg::graphviz::{Node, Edge};\n+use crate::cfg::graphviz as cfg_dot;\n+use crate::cfg::CFGIndex;\n use crate::borrowck::{self, BorrowckCtxt, LoanPath};\n use crate::dataflow::{DataFlowOperator, DataFlowContext, EntryOrExit};\n use log::debug;\n-use rustc::cfg::CFGIndex;\n use std::rc::Rc;\n \n #[derive(Debug, Copy, Clone)]"}, {"sha": "aea97fea1a9fd67d5aeec911beb59e6775e17f5b", "filename": "src/librustc_ast_borrowck/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_ast_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Flib.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -18,5 +18,6 @@ mod borrowck;\n pub mod graphviz;\n \n mod dataflow;\n+pub mod cfg;\n \n pub use borrowck::provide;"}, {"sha": "c4d3ad946f9f6ffe5481ff6999f61fe29e2bb49c", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb3529b627e8ae034237156c04bdad84ea8b61/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=84cb3529b627e8ae034237156c04bdad84ea8b61", "patch": "@@ -1,7 +1,5 @@\n //! The various pretty-printing routines.\n \n-use rustc::cfg;\n-use rustc::cfg::graphviz::LabelledCFG;\n use rustc::hir;\n use rustc::hir::map as hir_map;\n use rustc::hir::map::blocks;\n@@ -14,6 +12,7 @@ use rustc::util::common::ErrorReported;\n use rustc_interface::util::ReplaceBodyWithLoop;\n use rustc_ast_borrowck as borrowck;\n use rustc_ast_borrowck::graphviz as borrowck_dot;\n+use rustc_ast_borrowck::cfg::{self, graphviz::LabelledCFG};\n use rustc_mir::util::{write_mir_pretty, write_mir_graphviz};\n \n use syntax::ast;"}]}