{"sha": "4c08fc9be3f7b79e3040a154aa97c29c97ee5a49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMDhmYzliZTNmN2I3OWUzMDQwYTE1NGFhOTdjMjljOTdlZTVhNDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-15T13:52:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-15T13:53:33Z"}, "message": "Cleanup limits", "tree": {"sha": "dd3109495bde53a65f3c5fb17a358175e0cb3027", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd3109495bde53a65f3c5fb17a358175e0cb3027"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c08fc9be3f7b79e3040a154aa97c29c97ee5a49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c08fc9be3f7b79e3040a154aa97c29c97ee5a49", "html_url": "https://github.com/rust-lang/rust/commit/4c08fc9be3f7b79e3040a154aa97c29c97ee5a49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c08fc9be3f7b79e3040a154aa97c29c97ee5a49/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8baa2b727ddca404e65560de61ac2fb5e1224a5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8baa2b727ddca404e65560de61ac2fb5e1224a5b", "html_url": "https://github.com/rust-lang/rust/commit/8baa2b727ddca404e65560de61ac2fb5e1224a5b"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "d85a86c0a3ed72621eaa4c9bb18c3dce0a04d035", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c08fc9be3f7b79e3040a154aa97c29c97ee5a49/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c08fc9be3f7b79e3040a154aa97c29c97ee5a49/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=4c08fc9be3f7b79e3040a154aa97c29c97ee5a49", "patch": "@@ -36,6 +36,10 @@ use crate::{\n     TraitLoc, TypeAliasLoc, UnionLoc,\n };\n \n+const GLOB_RECURSION_LIMIT: usize = 100;\n+const EXPANSION_DEPTH_LIMIT: usize = 128;\n+const FIXED_POINT_LIMIT: usize = 8192;\n+\n pub(super) fn collect_defs(db: &dyn DefDatabase, mut def_map: CrateDefMap) -> CrateDefMap {\n     let crate_graph = db.crate_graph();\n \n@@ -217,7 +221,7 @@ impl DefCollector<'_> {\n                 ReachedFixedPoint::Yes => break,\n                 ReachedFixedPoint::No => i += 1,\n             }\n-            if i == 10000 {\n+            if i == FIXED_POINT_LIMIT {\n                 log::error!(\"name resolution is stuck\");\n                 break;\n             }\n@@ -587,7 +591,7 @@ impl DefCollector<'_> {\n         import_type: ImportType,\n         depth: usize,\n     ) {\n-        if depth > 100 {\n+        if depth > GLOB_RECURSION_LIMIT {\n             // prevent stack overflows (but this shouldn't be possible)\n             panic!(\"infinite recursion in glob imports!\");\n         }\n@@ -679,10 +683,6 @@ impl DefCollector<'_> {\n         self.unexpanded_attribute_macros = attribute_macros;\n \n         for (module_id, macro_call_id, depth) in resolved {\n-            if depth > 1024 {\n-                log::debug!(\"Max macro expansion depth reached\");\n-                continue;\n-            }\n             self.collect_macro_expansion(module_id, macro_call_id, depth);\n         }\n \n@@ -719,7 +719,7 @@ impl DefCollector<'_> {\n         macro_call_id: MacroCallId,\n         depth: usize,\n     ) {\n-        if depth > 100 {\n+        if depth > EXPANSION_DEPTH_LIMIT {\n             mark::hit!(macro_expansion_overflow);\n             log::warn!(\"macro expansion is too deep\");\n             return;"}]}