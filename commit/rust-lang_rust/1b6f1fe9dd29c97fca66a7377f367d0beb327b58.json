{"sha": "1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNmYxZmU5ZGQyOWM5N2ZjYTY2YTczNzdmMzY3ZDBiZWIzMjdiNTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-16T03:18:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-16T03:18:37Z"}, "message": "Auto merge of #39761 - est31:master, r=aturon\n\nStabilize field init shorthand\n\nCloses #37340.\n\n~Still blocked by the documentation issue #38830.~ EDIT: seems that all parts required for stabilisation are fixed, so its not blocked.", "tree": {"sha": "8a465ab551534596ba12c43f8ea7994571c421f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a465ab551534596ba12c43f8ea7994571c421f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "html_url": "https://github.com/rust-lang/rust/commit/1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d6019d07a942f5041e3d81f974f34515b024d0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d6019d07a942f5041e3d81f974f34515b024d0a", "html_url": "https://github.com/rust-lang/rust/commit/4d6019d07a942f5041e3d81f974f34515b024d0a"}, {"sha": "aebd94fd3c151212723906fb0445f0153917abac", "url": "https://api.github.com/repos/rust-lang/rust/commits/aebd94fd3c151212723906fb0445f0153917abac", "html_url": "https://github.com/rust-lang/rust/commit/aebd94fd3c151212723906fb0445f0153917abac"}], "stats": {"total": 50, "additions": 5, "deletions": 45}, "files": [{"sha": "6423147e66e094986dc09f15546daab1d4dbe64b", "filename": "src/doc/book/src/structs.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -122,8 +122,6 @@ fields of the data structure are initialized with variables of the same\n names as the fields.\n \n ```\n-#![feature(field_init_shorthand)]\n-\n #[derive(Debug)]\n struct Person<'a> {\n     name: &'a str,"}, {"sha": "f2be20d4a75168818d565830334f23cbae43df5e", "filename": "src/doc/reference.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -2825,7 +2825,6 @@ This allows a compact syntax with less duplication.\n Example:\n \n ```\n-# #![feature(field_init_shorthand)]\n # struct Point3d { x: i32, y: i32, z: i32 }\n # let x = 0;\n # let y_value = 0;"}, {"sha": "d144f7575a2e2dfa4e7d36d0a224c9f417084cf9", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -29,7 +29,7 @@\n #![feature(conservative_impl_trait)]\n #![feature(const_fn)]\n #![feature(core_intrinsics)]\n-#![feature(field_init_shorthand)]\n+#![cfg_attr(stage0,feature(field_init_shorthand))]\n #![feature(i128_type)]\n #![feature(libc)]\n #![feature(loop_break_value)]"}, {"sha": "906c4b7256fdc56c45e35e77502918681f5918aa", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -24,7 +24,7 @@\n #![feature(rand)]\n #![feature(core_intrinsics)]\n #![feature(conservative_impl_trait)]\n-#![feature(field_init_shorthand)]\n+#![cfg_attr(stage0,feature(field_init_shorthand))]\n #![feature(pub_restricted)]\n \n extern crate graphviz;"}, {"sha": "0bcf8ab7d6c2092079a822943aaa66222b20a895", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -77,7 +77,7 @@ This API is completely unstable and subject to change.\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(conservative_impl_trait)]\n-#![feature(field_init_shorthand)]\n+#![cfg_attr(stage0,feature(field_init_shorthand))]\n #![feature(loop_break_value)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "1bed3e2784773906d3730e3ad0b1cf3b074fa081", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -288,9 +288,6 @@ declare_features! (\n     // Allows attributes on lifetime/type formal parameters in generics (RFC 1327)\n     (active, generic_param_attrs, \"1.11.0\", Some(34761)),\n \n-    // Allows field shorthands (`x` meaning `x: x`) in struct literal expressions.\n-    (active, field_init_shorthand, \"1.14.0\", Some(37340)),\n-\n     // The #![windows_subsystem] attribute\n     (active, windows_subsystem, \"1.14.0\", Some(37499)),\n \n@@ -385,6 +382,8 @@ declare_features! (\n     (accepted, more_struct_aliases, \"1.16.0\", Some(37544)),\n     // elide `'static` lifetimes in `static`s and `const`s\n     (accepted, static_in_const, \"1.17.0\", Some(35897)),\n+    // Allows field shorthands (`x` meaning `x: x`) in struct literal expressions.\n+    (accepted, field_init_shorthand, \"1.17.0\", Some(37340)),\n );\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -1233,10 +1232,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             }\n             ast::ExprKind::Struct(_, ref fields, _) => {\n                 for field in fields {\n-                    if field.is_shorthand {\n-                        gate_feature_post!(&self, field_init_shorthand, field.span,\n-                                           \"struct field shorthands are unstable\");\n-                    }\n                     if starts_with_digit(&field.ident.node.name.as_str()) {\n                         gate_feature_post!(&self, relaxed_adts,\n                                           field.span,"}, {"sha": "cd2dae7f461abe608babd25ee7eb42e4a0cfb712", "filename": "src/test/compile-fail/feature-gate-field-init-shorthand.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4d6019d07a942f5041e3d81f974f34515b024d0a/src%2Ftest%2Fcompile-fail%2Ffeature-gate-field-init-shorthand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d6019d07a942f5041e3d81f974f34515b024d0a/src%2Ftest%2Fcompile-fail%2Ffeature-gate-field-init-shorthand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-field-init-shorthand.rs?ref=4d6019d07a942f5041e3d81f974f34515b024d0a", "patch": "@@ -1,24 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-struct Foo {\n-    x: i32,\n-    y: bool,\n-    z: i32\n-}\n-\n-fn main() {\n-    let (x, y, z) = (1, true, 2);\n-    let _ = Foo {\n-        x, //~ ERROR struct field shorthands are unstable\n-        y: y,\n-        z //~ ERROR struct field shorthands are unstable\n-    };\n-}"}, {"sha": "984f337fb3d14e5251ec135757bff4f065e7978a", "filename": "src/test/compile-fail/struct-fields-shorthand-unresolved.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Ftest%2Fcompile-fail%2Fstruct-fields-shorthand-unresolved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Ftest%2Fcompile-fail%2Fstruct-fields-shorthand-unresolved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-shorthand-unresolved.rs?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(field_init_shorthand)]\n-\n struct Foo {\n     x: i32,\n     y: i32"}, {"sha": "e46ae73f1a1d4740faad26754ea23ccd259b17bc", "filename": "src/test/compile-fail/struct-fields-shorthand.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Ftest%2Fcompile-fail%2Fstruct-fields-shorthand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Ftest%2Fcompile-fail%2Fstruct-fields-shorthand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-shorthand.rs?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(field_init_shorthand)]\n-\n struct Foo {\n     x: i32,\n     y: i32"}, {"sha": "49ba0d8bde62524f5dcfdc6a246613c2339a202e", "filename": "src/test/parse-fail/struct-field-numeric-shorthand.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Ftest%2Fparse-fail%2Fstruct-field-numeric-shorthand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Ftest%2Fparse-fail%2Fstruct-field-numeric-shorthand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-field-numeric-shorthand.rs?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags: -Z parse-only\n \n-#![feature(field_init_shorthand)]\n-\n struct Rgb(u8, u8, u8);\n \n fn main() {"}, {"sha": "b61e232200c9af3db7726f32a71018552c684da0", "filename": "src/test/run-pass/struct-field-shorthand.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Ftest%2Frun-pass%2Fstruct-field-shorthand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6f1fe9dd29c97fca66a7377f367d0beb327b58/src%2Ftest%2Frun-pass%2Fstruct-field-shorthand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-field-shorthand.rs?ref=1b6f1fe9dd29c97fca66a7377f367d0beb327b58", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(field_init_shorthand)]\n-\n struct Foo {\n     x: i32,\n     y: bool,"}]}