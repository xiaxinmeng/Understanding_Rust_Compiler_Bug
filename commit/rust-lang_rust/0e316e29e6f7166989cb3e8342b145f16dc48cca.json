{"sha": "0e316e29e6f7166989cb3e8342b145f16dc48cca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMzE2ZTI5ZTZmNzE2Njk4OWNiM2U4MzQyYjE0NWYxNmRjNDhjY2E=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-09T16:11:02Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:30Z"}, "message": "Fix HIR map validation", "tree": {"sha": "a06da51fbf2750b78d1c3d83d368fc03a2342115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a06da51fbf2750b78d1c3d83d368fc03a2342115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e316e29e6f7166989cb3e8342b145f16dc48cca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e316e29e6f7166989cb3e8342b145f16dc48cca", "html_url": "https://github.com/rust-lang/rust/commit/0e316e29e6f7166989cb3e8342b145f16dc48cca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e316e29e6f7166989cb3e8342b145f16dc48cca/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b16b023b1809fb10ed305cae4349c47c0accebe", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b16b023b1809fb10ed305cae4349c47c0accebe", "html_url": "https://github.com/rust-lang/rust/commit/8b16b023b1809fb10ed305cae4349c47c0accebe"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "c4c23c1a75445000b2284a1aa8cc898d09db059d", "filename": "src/librustc/hir/map/hir_id_validator.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0e316e29e6f7166989cb3e8342b145f16dc48cca/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e316e29e6f7166989cb3e8342b145f16dc48cca/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs?ref=0e316e29e6f7166989cb3e8342b145f16dc48cca", "patch": "@@ -1,18 +1,20 @@\n+use crate::hir::map::Map;\n use crate::ty::TyCtxt;\n-/*use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::{par_iter, Lock, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, DefIndex, CRATE_DEF_INDEX};\n use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n-use rustc_hir::{HirId, ItemLocalId};*/\n+use rustc_hir::{HirId, ItemLocalId};\n \n-pub fn check_crate(_tcx: TyCtxt<'_>) {\n-    /*tcx.dep_graph.assert_ignored();\n+pub fn check_crate(tcx: TyCtxt<'_>) {\n+    tcx.dep_graph.assert_ignored();\n \n     let errors = Lock::new(Vec::new());\n+    let hir_map = tcx.hir();\n \n-    par_iter(&hir_map.krate.modules).for_each(|(module_id, _)| {\n+    par_iter(&hir_map.krate().modules).for_each(|(module_id, _)| {\n         let local_def_id = hir_map.local_def_id(*module_id);\n         hir_map.visit_item_likes_in_module(\n             local_def_id,\n@@ -25,23 +27,23 @@ pub fn check_crate(_tcx: TyCtxt<'_>) {\n     if !errors.is_empty() {\n         let message = errors.iter().fold(String::new(), |s1, s2| s1 + \"\\n\" + s2);\n         tcx.sess.delay_span_bug(rustc_span::DUMMY_SP, &message);\n-    }*/\n+    }\n }\n-/*\n+\n struct HirIdValidator<'a, 'hir> {\n-    hir_map: &'a EarlyMap<'hir>,\n+    hir_map: Map<'hir>,\n     owner_def_index: Option<DefIndex>,\n     hir_ids_seen: FxHashSet<ItemLocalId>,\n     errors: &'a Lock<Vec<String>>,\n }\n \n struct OuterVisitor<'a, 'hir> {\n-    hir_map: &'a EarlyMap<'hir>,\n+    hir_map: Map<'hir>,\n     errors: &'a Lock<Vec<String>>,\n }\n \n impl<'a, 'hir> OuterVisitor<'a, 'hir> {\n-    fn new_inner_visitor(&self, hir_map: &'a EarlyMap<'hir>) -> HirIdValidator<'a, 'hir> {\n+    fn new_inner_visitor(&self, hir_map: Map<'hir>) -> HirIdValidator<'a, 'hir> {\n         HirIdValidator {\n             hir_map,\n             owner_def_index: None,\n@@ -133,7 +135,7 @@ impl<'a, 'hir> HirIdValidator<'a, 'hir> {\n }\n \n impl<'a, 'hir> intravisit::Visitor<'hir> for HirIdValidator<'a, 'hir> {\n-    type Map = EarlyMap<'hir>;\n+    type Map = Map<'hir>;\n \n     fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<Self::Map> {\n         intravisit::NestedVisitorMap::OnlyBodies(self.hir_map)\n@@ -173,4 +175,3 @@ impl<'a, 'hir> intravisit::Visitor<'hir> for HirIdValidator<'a, 'hir> {\n         // different owner.\n     }\n }\n-*/"}, {"sha": "8b13f008a89d0b90a17406f675416e1777e22c9a", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e316e29e6f7166989cb3e8342b145f16dc48cca/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e316e29e6f7166989cb3e8342b145f16dc48cca/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=0e316e29e6f7166989cb3e8342b145f16dc48cca", "patch": "@@ -25,6 +25,7 @@ pub mod blocks;\n mod collector;\n pub mod definitions;\n mod hir_id_validator;\n+pub use hir_id_validator::check_crate;\n \n /// Represents an entry and its parent `HirId`.\n #[derive(Copy, Clone, Debug)]"}, {"sha": "4fe7a06e5609ed4e014c85ec83a9239c5554cd9c", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e316e29e6f7166989cb3e8342b145f16dc48cca/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e316e29e6f7166989cb3e8342b145f16dc48cca/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=0e316e29e6f7166989cb3e8342b145f16dc48cca", "patch": "@@ -762,6 +762,8 @@ pub fn create_global_ctxt<'tcx>(\n fn analysis(tcx: TyCtxt<'_>, cnum: CrateNum) -> Result<()> {\n     assert_eq!(cnum, LOCAL_CRATE);\n \n+    rustc::hir::map::check_crate(tcx);\n+\n     let sess = tcx.sess;\n     let mut entry_point = None;\n "}]}