{"sha": "3f5be5e2357d11ed3273d4e286e2cb9efe46cd28", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNWJlNWUyMzU3ZDExZWQzMjczZDRlMjg2ZTJjYjllZmU0NmNkMjg=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-04-25T14:51:44Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-04-25T14:54:04Z"}, "message": "Fix cloned_instead_of_copied MSRV", "tree": {"sha": "54fc30f5beacea310157214cb023c734072fec33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54fc30f5beacea310157214cb023c734072fec33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f5be5e2357d11ed3273d4e286e2cb9efe46cd28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f5be5e2357d11ed3273d4e286e2cb9efe46cd28", "html_url": "https://github.com/rust-lang/rust/commit/3f5be5e2357d11ed3273d4e286e2cb9efe46cd28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f5be5e2357d11ed3273d4e286e2cb9efe46cd28/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08e36d7527c6f65b8f537c4644c762efe09880c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/08e36d7527c6f65b8f537c4644c762efe09880c5", "html_url": "https://github.com/rust-lang/rust/commit/08e36d7527c6f65b8f537c4644c762efe09880c5"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "9c1b6f55c88404e6e193dffc6620c6e5d6dbf450", "filename": "clippy_lints/src/methods/cloned_instead_of_copied.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3f5be5e2357d11ed3273d4e286e2cb9efe46cd28/clippy_lints%2Fsrc%2Fmethods%2Fcloned_instead_of_copied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f5be5e2357d11ed3273d4e286e2cb9efe46cd28/clippy_lints%2Fsrc%2Fmethods%2Fcloned_instead_of_copied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fcloned_instead_of_copied.rs?ref=3f5be5e2357d11ed3273d4e286e2cb9efe46cd28", "patch": "@@ -1,23 +1,33 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::is_trait_method;\n use clippy_utils::ty::{get_iterator_item_ty, is_copy};\n+use clippy_utils::{is_trait_method, meets_msrv};\n use rustc_errors::Applicability;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n use rustc_middle::ty;\n+use rustc_semver::RustcVersion;\n use rustc_span::{sym, Span};\n \n use super::CLONED_INSTEAD_OF_COPIED;\n \n-pub fn check(cx: &LateContext<'_>, expr: &Expr<'_>, recv: &Expr<'_>, span: Span) {\n+const ITERATOR_COPIED_MSRV: RustcVersion = RustcVersion::new(1, 36, 0);\n+const OPTION_COPIED_MSRV: RustcVersion = RustcVersion::new(1, 35, 0);\n+\n+pub fn check(cx: &LateContext<'_>, expr: &Expr<'_>, recv: &Expr<'_>, span: Span, msrv: Option<&RustcVersion>) {\n     let recv_ty = cx.typeck_results().expr_ty_adjusted(recv);\n     let inner_ty = match recv_ty.kind() {\n         // `Option<T>` -> `T`\n-        ty::Adt(adt, subst) if cx.tcx.is_diagnostic_item(sym::option_type, adt.did) => subst.type_at(0),\n-        _ if is_trait_method(cx, expr, sym::Iterator) => match get_iterator_item_ty(cx, recv_ty) {\n-            // <T as Iterator>::Item\n-            Some(ty) => ty,\n-            _ => return,\n+        ty::Adt(adt, subst)\n+            if cx.tcx.is_diagnostic_item(sym::option_type, adt.did) && meets_msrv(msrv, &OPTION_COPIED_MSRV) =>\n+        {\n+            subst.type_at(0)\n+        },\n+        _ if is_trait_method(cx, expr, sym::Iterator) && meets_msrv(msrv, &ITERATOR_COPIED_MSRV) => {\n+            match get_iterator_item_ty(cx, recv_ty) {\n+                // <T as Iterator>::Item\n+                Some(ty) => ty,\n+                _ => return,\n+            }\n         },\n         _ => return,\n     };"}, {"sha": "e15dbb899b36aac49bd00dae5ebf6cc7058a4a5d", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f5be5e2357d11ed3273d4e286e2cb9efe46cd28/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f5be5e2357d11ed3273d4e286e2cb9efe46cd28/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=3f5be5e2357d11ed3273d4e286e2cb9efe46cd28", "patch": "@@ -1959,7 +1959,7 @@ fn check_methods<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, msrv: Optio\n             (\"as_mut\", []) => useless_asref::check(cx, expr, \"as_mut\", recv),\n             (\"as_ref\", []) => useless_asref::check(cx, expr, \"as_ref\", recv),\n             (\"assume_init\", []) => uninit_assumed_init::check(cx, expr, recv),\n-            (\"cloned\", []) => cloned_instead_of_copied::check(cx, expr, recv, span),\n+            (\"cloned\", []) => cloned_instead_of_copied::check(cx, expr, recv, span, msrv),\n             (\"collect\", []) => match method_call!(recv) {\n                 Some((\"cloned\", [recv2], _)) => iter_cloned_collect::check(cx, expr, recv2),\n                 Some((\"map\", [m_recv, m_arg], _)) => {"}]}