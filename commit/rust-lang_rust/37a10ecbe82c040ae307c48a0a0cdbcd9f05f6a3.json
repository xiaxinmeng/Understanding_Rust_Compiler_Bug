{"sha": "37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YTEwZWNiZTgyYzA0MGFlMzA3YzQ4YTBhMGNkYmNkOWYwNWY2YTM=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-05-26T15:43:53Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-07-08T14:42:47Z"}, "message": "Make item translation order deterministic by sorting by symbol name.", "tree": {"sha": "e0623917df85771f80ce9f1827282724880ee6cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0623917df85771f80ce9f1827282724880ee6cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3", "html_url": "https://github.com/rust-lang/rust/commit/37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b38e0d0d44c6de6f0c72a4a1f8f9aa8c74ea842e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b38e0d0d44c6de6f0c72a4a1f8f9aa8c74ea842e", "html_url": "https://github.com/rust-lang/rust/commit/b38e0d0d44c6de6f0c72a4a1f8f9aa8c74ea842e"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "4bbbae85fb270166018b69312757b2fb8e625dcc", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3", "patch": "@@ -2626,14 +2626,20 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     // Instantiate translation items without filling out definitions yet...\n     for ccx in crate_context_list.iter() {\n-        for (&trans_item, &linkage) in &ccx.codegen_unit().items {\n+        let trans_items = ccx.codegen_unit()\n+                             .items_in_deterministic_order(&symbol_map);\n+\n+        for (trans_item, linkage) in trans_items {\n             trans_item.predefine(&ccx, linkage);\n         }\n     }\n \n     // ... and now that we have everything pre-defined, fill out those definitions.\n     for ccx in crate_context_list.iter() {\n-        for (trans_item, _) in &ccx.codegen_unit().items {\n+        let trans_items = ccx.codegen_unit()\n+                             .items_in_deterministic_order(&symbol_map);\n+\n+        for (trans_item, _) in trans_items {\n            trans_item.define(&ccx);\n         }\n     }"}, {"sha": "0e06fd6235e58e6b26349724e0ed6af40671b000", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=37a10ecbe82c040ae307c48a0a0cdbcd9f05f6a3", "patch": "@@ -124,15 +124,11 @@ use rustc::hir::map::DefPathData;\n use rustc::session::config::NUMBERED_CODEGEN_UNIT_MARKER;\n use rustc::ty::TyCtxt;\n use rustc::ty::item_path::characteristic_def_id_of_type;\n+use symbol_map::SymbolMap;\n use syntax::parse::token::{self, InternedString};\n use trans_item::TransItem;\n use util::nodemap::{FnvHashMap, FnvHashSet, NodeSet};\n \n-pub struct CodegenUnit<'tcx> {\n-    pub name: InternedString,\n-    pub items: FnvHashMap<TransItem<'tcx>, llvm::Linkage>,\n-}\n-\n pub enum PartitioningStrategy {\n     /// Generate one codegen unit per source-level module.\n     PerModule,\n@@ -141,6 +137,29 @@ pub enum PartitioningStrategy {\n     FixedUnitCount(usize)\n }\n \n+pub struct CodegenUnit<'tcx> {\n+    pub name: InternedString,\n+    pub items: FnvHashMap<TransItem<'tcx>, llvm::Linkage>,\n+}\n+\n+impl<'tcx> CodegenUnit<'tcx> {\n+    pub fn items_in_deterministic_order(&self,\n+                                        symbol_map: &SymbolMap)\n+                                        -> Vec<(TransItem<'tcx>, llvm::Linkage)> {\n+        let mut items: Vec<(TransItem<'tcx>, llvm::Linkage)> =\n+            self.items.iter().map(|(item, linkage)| (*item, *linkage)).collect();\n+\n+        items.as_mut_slice().sort_by(|&(trans_item1, _), &(trans_item2, _)| {\n+            let symbol_name1 = symbol_map.get(trans_item1).unwrap();\n+            let symbol_name2 = symbol_map.get(trans_item2).unwrap();\n+            symbol_name1.cmp(symbol_name2)\n+        });\n+\n+        items\n+    }\n+}\n+\n+\n // Anything we can't find a proper codegen unit for goes into this.\n const FALLBACK_CODEGEN_UNIT: &'static str = \"__rustc_fallback_codegen_unit\";\n \n@@ -184,7 +203,13 @@ pub fn partition<'a, 'tcx, I>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     debug_dump(tcx, \"POST INLINING:\", post_inlining.0.iter());\n \n-    post_inlining.0\n+    // Finally, sort by codegen unit name, so that we get deterministic results\n+    let mut result = post_inlining.0;\n+    result.as_mut_slice().sort_by(|cgu1, cgu2| {\n+        (&cgu1.name[..]).cmp(&cgu2.name[..])\n+    });\n+\n+    result\n }\n \n struct PreInliningPartitioning<'tcx> {"}]}