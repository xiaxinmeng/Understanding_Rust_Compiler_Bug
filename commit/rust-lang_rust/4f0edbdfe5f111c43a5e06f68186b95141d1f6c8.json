{"sha": "4f0edbdfe5f111c43a5e06f68186b95141d1f6c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmMGVkYmRmZTVmMTExYzQzYTVlMDZmNjgxODZiOTUxNDFkMWY2Yzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-29T17:14:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-29T17:14:54Z"}, "message": "Auto merge of #69263 - anyska:blacklist-powerpc-zst, r=nagisa\n\nBlacklist powerpc-unknown-linux-{gnu,musl} as having non-ignored GNU C ZSTs.\n\nRef #64259 (this is a simpler alternative to that). See also https://github.com/rust-lang/rust/pull/64259#issuecomment-585815831.", "tree": {"sha": "988048f6571e7d92bd374f2c69b3809efbfa1828", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/988048f6571e7d92bd374f2c69b3809efbfa1828"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f0edbdfe5f111c43a5e06f68186b95141d1f6c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f0edbdfe5f111c43a5e06f68186b95141d1f6c8", "html_url": "https://github.com/rust-lang/rust/commit/4f0edbdfe5f111c43a5e06f68186b95141d1f6c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f0edbdfe5f111c43a5e06f68186b95141d1f6c8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9bca510fe17354f876aa289bb39d347d7c69c69", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bca510fe17354f876aa289bb39d347d7c69c69", "html_url": "https://github.com/rust-lang/rust/commit/e9bca510fe17354f876aa289bb39d347d7c69c69"}, {"sha": "162d72727ecfad4d75c2564f84abc73212aa7f27", "url": "https://api.github.com/repos/rust-lang/rust/commits/162d72727ecfad4d75c2564f84abc73212aa7f27", "html_url": "https://github.com/rust-lang/rust/commit/162d72727ecfad4d75c2564f84abc73212aa7f27"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "b23b655db0b9562e50b8da29f5d56fed6b5afaa1", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4f0edbdfe5f111c43a5e06f68186b95141d1f6c8/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0edbdfe5f111c43a5e06f68186b95141d1f6c8/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=4f0edbdfe5f111c43a5e06f68186b95141d1f6c8", "patch": "@@ -2541,12 +2541,15 @@ where\n         };\n \n         let target = &cx.tcx().sess.target.target;\n+        let target_env_gnu_like = matches!(&target.target_env[..], \"gnu\" | \"musl\");\n         let win_x64_gnu =\n             target.target_os == \"windows\" && target.arch == \"x86_64\" && target.target_env == \"gnu\";\n-        let linux_s390x =\n-            target.target_os == \"linux\" && target.arch == \"s390x\" && target.target_env == \"gnu\";\n-        let linux_sparc64 =\n-            target.target_os == \"linux\" && target.arch == \"sparc64\" && target.target_env == \"gnu\";\n+        let linux_s390x_gnu_like =\n+            target.target_os == \"linux\" && target.arch == \"s390x\" && target_env_gnu_like;\n+        let linux_sparc64_gnu_like =\n+            target.target_os == \"linux\" && target.arch == \"sparc64\" && target_env_gnu_like;\n+        let linux_powerpc_gnu_like =\n+            target.target_os == \"linux\" && target.arch == \"powerpc\" && target_env_gnu_like;\n         let rust_abi = match sig.abi {\n             RustIntrinsic | PlatformIntrinsic | Rust | RustCall => true,\n             _ => false,\n@@ -2617,9 +2620,14 @@ where\n             if arg.layout.is_zst() {\n                 // For some forsaken reason, x86_64-pc-windows-gnu\n                 // doesn't ignore zero-sized struct arguments.\n-                // The same is true for s390x-unknown-linux-gnu\n-                // and sparc64-unknown-linux-gnu.\n-                if is_return || rust_abi || (!win_x64_gnu && !linux_s390x && !linux_sparc64) {\n+                // The same is true for {s390x,sparc64,powerpc}-unknown-linux-{gnu,musl}.\n+                if is_return\n+                    || rust_abi\n+                    || (!win_x64_gnu\n+                        && !linux_s390x_gnu_like\n+                        && !linux_sparc64_gnu_like\n+                        && !linux_powerpc_gnu_like)\n+                {\n                     arg.mode = PassMode::Ignore;\n                 }\n             }"}]}