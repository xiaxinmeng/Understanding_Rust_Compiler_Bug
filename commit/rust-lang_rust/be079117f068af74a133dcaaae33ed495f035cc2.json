{"sha": "be079117f068af74a133dcaaae33ed495f035cc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMDc5MTE3ZjA2OGFmNzRhMTMzZGNhYWFlMzNlZDQ5NWYwMzVjYzI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-22T21:04:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-22T21:04:22Z"}, "message": "remove the 'dereferenceable' attribute from Box", "tree": {"sha": "6cf2ac7b24b26ec58da4a6fc14a600f72f33c328", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cf2ac7b24b26ec58da4a6fc14a600f72f33c328"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be079117f068af74a133dcaaae33ed495f035cc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be079117f068af74a133dcaaae33ed495f035cc2", "html_url": "https://github.com/rust-lang/rust/commit/be079117f068af74a133dcaaae33ed495f035cc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be079117f068af74a133dcaaae33ed495f035cc2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "083b5a0a1bb3b2ee0873697ebf37e88d85faa3e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/083b5a0a1bb3b2ee0873697ebf37e88d85faa3e5", "html_url": "https://github.com/rust-lang/rust/commit/083b5a0a1bb3b2ee0873697ebf37e88d85faa3e5"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "e14a78a8c44ca5aeb2e14827ca23b53360a5125c", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/be079117f068af74a133dcaaae33ed495f035cc2/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be079117f068af74a133dcaaae33ed495f035cc2/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=be079117f068af74a133dcaaae33ed495f035cc2", "patch": "@@ -2526,9 +2526,15 @@ where\n \n             if let Some(pointee) = layout.pointee_info_at(cx, offset) {\n                 if let Some(kind) = pointee.safe {\n-                    attrs.pointee_size = pointee.size;\n                     attrs.pointee_align = Some(pointee.align);\n \n+                    // `Box` (`UniqueBorrowed`) are not necessarily dereferencable\n+                    // for the entire duration of the function, so set their size to 0.\n+                    attrs.pointee_size =  match kind {\n+                        PointerKind::UniqueOwned => Size::ZERO,\n+                        _ => pointee.size\n+                    };\n+\n                     // `Box` pointer parameters never alias because ownership is transferred\n                     // `&mut` pointer parameters never alias other parameters,\n                     // or mutable global data"}, {"sha": "1b55676fe4f98dd3a79f2817e5a880dfad71f24f", "filename": "src/librustc_target/abi/call/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be079117f068af74a133dcaaae33ed495f035cc2/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be079117f068af74a133dcaaae33ed495f035cc2/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs?ref=be079117f068af74a133dcaaae33ed495f035cc2", "patch": "@@ -69,6 +69,7 @@ mod attr_impl {\n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n pub struct ArgAttributes {\n     pub regular: ArgAttribute,\n+    /// The dereferenceable size of the pointee.\n     pub pointee_size: Size,\n     pub pointee_align: Option<Align>\n }"}, {"sha": "5c9aa48c0a5d6ba2e0c5e8a1ab042d03857d5e93", "filename": "src/test/codegen/function-arguments.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be079117f068af74a133dcaaae33ed495f035cc2/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be079117f068af74a133dcaaae33ed495f035cc2/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs?ref=be079117f068af74a133dcaaae33ed495f035cc2", "patch": "@@ -65,7 +65,9 @@ pub fn indirect_struct(_: S) {\n pub fn borrowed_struct(_: &S) {\n }\n \n-// CHECK: noalias align 4 dereferenceable(4) i32* @_box(i32* noalias align 4 dereferenceable(4) %x)\n+// `Box` can get deallocated during execution of the function, so it should\n+// not get `dereferenceable`.\n+// CHECK: noalias nonnull align 4 i32* @_box(i32* noalias nonnull align 4 %x)\n #[no_mangle]\n pub fn _box(x: Box<i32>) -> Box<i32> {\n   x"}]}