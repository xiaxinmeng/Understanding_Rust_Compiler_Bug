{"sha": "e2f90f7f74d805cd12d879feb3d3796acf088ae0", "node_id": "C_kwDOAAsO6NoAKGUyZjkwZjdmNzRkODA1Y2QxMmQ4NzlmZWIzZDM3OTZhY2YwODhhZTA", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-29T07:25:14Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-30T07:19:23Z"}, "message": "Add support for emitting functions with `coldcc` in LLVM\n\nThe eventual goal is to try using this for things like the internal panicking stuff, to see whether it helps.", "tree": {"sha": "d3c1d710cc0f4f30b54489a002bf454aca3bff27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3c1d710cc0f4f30b54489a002bf454aca3bff27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2f90f7f74d805cd12d879feb3d3796acf088ae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f90f7f74d805cd12d879feb3d3796acf088ae0", "html_url": "https://github.com/rust-lang/rust/commit/e2f90f7f74d805cd12d879feb3d3796acf088ae0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2f90f7f74d805cd12d879feb3d3796acf088ae0/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d27ec6c86d0c3464b5da71c86f0db53ff59242c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d27ec6c86d0c3464b5da71c86f0db53ff59242c0", "html_url": "https://github.com/rust-lang/rust/commit/d27ec6c86d0c3464b5da71c86f0db53ff59242c0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "59a7316c1c02845e20035eec803b66f955f2bf78", "filename": "src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2f90f7f74d805cd12d879feb3d3796acf088ae0/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2f90f7f74d805cd12d879feb3d3796acf088ae0/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=e2f90f7f74d805cd12d879feb3d3796acf088ae0", "patch": "@@ -22,7 +22,7 @@ fn clif_sig_from_fn_abi<'tcx>(\n     fn_abi: &FnAbi<'tcx, Ty<'tcx>>,\n ) -> Signature {\n     let call_conv = match fn_abi.conv {\n-        Conv::Rust | Conv::C => default_call_conv,\n+        Conv::Rust | Conv::C | Conv::RustCold => default_call_conv,\n         Conv::X86_64SysV => CallConv::SystemV,\n         Conv::X86_64Win64 => CallConv::WindowsFastcall,\n         Conv::ArmAapcs"}]}