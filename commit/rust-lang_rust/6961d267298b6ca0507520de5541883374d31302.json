{"sha": "6961d267298b6ca0507520de5541883374d31302", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NjFkMjY3Mjk4YjZjYTA1MDc1MjBkZTU1NDE4ODMzNzRkMzEzMDI=", "commit": {"author": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-08-22T23:51:37Z"}, "committer": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-08-22T23:51:37Z"}, "message": "Fix compiletest so it respects warnings for run-pass.", "tree": {"sha": "51012dc2bb2600032c0ba8141f91665abeb744a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51012dc2bb2600032c0ba8141f91665abeb744a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6961d267298b6ca0507520de5541883374d31302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6961d267298b6ca0507520de5541883374d31302", "html_url": "https://github.com/rust-lang/rust/commit/6961d267298b6ca0507520de5541883374d31302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6961d267298b6ca0507520de5541883374d31302/comments", "author": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "197be89f367d1240d5f9cd9c4efd77812775354e", "url": "https://api.github.com/repos/rust-lang/rust/commits/197be89f367d1240d5f9cd9c4efd77812775354e", "html_url": "https://github.com/rust-lang/rust/commit/197be89f367d1240d5f9cd9c4efd77812775354e"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "be2a45ca79abd9762de01cba088c980a47e2481e", "filename": "src/test/run-pass-fulldeps/deprecated-derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass-fulldeps%2Fdeprecated-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass-fulldeps%2Fdeprecated-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fdeprecated-derive.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(rustc_private)]\n+#![allow(dead_code)]\n \n extern crate serialize;\n "}, {"sha": "21942b84bff9c95261a4d6a39a5801f9932f739a", "filename": "src/test/run-pass-fulldeps/lint-group-plugin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -14,6 +14,7 @@\n \n #![feature(plugin)]\n #![plugin(lint_group_plugin_test)]\n+#![allow(dead_code)]\n \n fn lintme() { } //~ WARNING item is named 'lintme'\n fn pleaselintme() { } //~ WARNING item is named 'pleaselintme'"}, {"sha": "2a6daa5040b7189456f32228e35f0d694f471daf", "filename": "src/test/run-pass-fulldeps/lint-plugin-cmdline-load.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -13,6 +13,8 @@\n // ignore-pretty: Random space appears with the pretty test\n // compile-flags: -Z extra-plugins=lint_plugin_test\n \n+#![allow(dead_code)]\n+\n fn lintme() { } //~ WARNING item is named 'lintme'\n \n #[allow(test_lint)]"}, {"sha": "b694a1c332079969040f7fa24830f3825bf49e43", "filename": "src/test/run-pass-fulldeps/lint-plugin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -14,6 +14,7 @@\n \n #![feature(plugin)]\n #![plugin(lint_plugin_test)]\n+#![allow(dead_code)]\n \n fn lintme() { } //~ WARNING item is named 'lintme'\n "}, {"sha": "2a86489c69aa58018244b699f00304e6314cf10d", "filename": "src/test/run-pass/attr-before-view-item.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:expected item\n-\n // pretty-expanded FIXME #23616\n \n #![feature(custom_attribute, test)]"}, {"sha": "c8683f2d1475139b2bb7ea99600f0d7757b2a5d2", "filename": "src/test/run-pass/attr-before-view-item2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:expected item\n-\n // pretty-expanded FIXME #23616\n \n #![feature(custom_attribute, test)]"}, {"sha": "ff513325d5e6846260780b0ffdf117778f249c01", "filename": "src/test/run-pass/deriving-meta-empty-trait-list.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -10,6 +10,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n #[derive]   //~ WARNING empty trait list in `derive`\n struct Foo;"}, {"sha": "21996c5fabf1a30c2bd310c158dbfa888a844749", "filename": "src/test/run-pass/enum-size-variance.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fenum-size-variance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fenum-size-variance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-size-variance.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -10,7 +10,7 @@\n //\n // ignore-pretty\n \n-#![deny(enum_size_variance)]\n+#![warn(variant_size_differences)]\n #![allow(dead_code)]\n \n enum Enum1 { }\n@@ -21,8 +21,8 @@ enum Enum3 { D(isize), E, F }\n \n enum Enum4 { H(isize), I(isize), J }\n \n-enum Enum5 { //~ ERROR three times larger\n-    L(isize, isize, isize, isize), //~ NOTE this variant is the largest\n+enum Enum5 {\n+    L(isize, isize, isize, isize), //~ WARNING three times larger\n     M(isize),\n     N\n }\n@@ -33,7 +33,7 @@ enum Enum6<T, U> {\n     Q(isize)\n }\n \n-#[allow(enum_size_variance)]\n+#[allow(variant_size_differences)]\n enum Enum7 {\n     R(isize, isize, isize, isize),\n     S(isize),"}, {"sha": "7ff9ae996f525b2f753b4956a724ad18e6556cdb", "filename": "src/test/run-pass/issue-19100.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fissue-19100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fissue-19100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19100.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_snake_case)]\n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n+\n #[derive(Copy, Clone)]\n enum Foo {\n     Bar,"}, {"sha": "d1fb75377050d680a50b1aaf359cff98ee8510da", "filename": "src/test/run-pass/issue-25757.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fissue-25757.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fissue-25757.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-25757.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -22,6 +22,6 @@ const FUNC: &'static Fn(&mut Foo) -> () = &Foo::x;\n \n fn main() {\n     let mut foo = Foo { a: 137 };\n-    FUNC(&mut foo); //~ ERROR bad\n+    FUNC(&mut foo);\n     assert_eq!(foo.a, 5);\n }"}, {"sha": "e223d3412e04929b7a280dbfc77687349bd63369", "filename": "src/test/run-pass/issue-2611-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fissue-2611-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fissue-2611-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2611-3.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -22,7 +22,6 @@ struct E {\n \n impl A for E {\n   fn b<F,G>(&self, _x: F) -> F { panic!() }\n-  //~^ ERROR in method `b`, type parameter 0 has 1 bound, but\n }\n \n pub fn main() {}"}, {"sha": "e010b162cc4068f75c638e137886748eb5c6a703", "filename": "src/test/run-pass/issue-27320.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fissue-27320.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fissue-27320.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-27320.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_variables)]\n+#![allow(dead_code)]\n+\n macro_rules! piece(\n     ($piece:pat) => ($piece);\n );"}, {"sha": "76b44832a8a1651f1c1d06360a8495e1cfbb8466", "filename": "src/test/run-pass/liveness-assign-imm-local-after-ret.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-ret.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -10,13 +10,13 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(unreachable_code)]\n+#![allow(dead_code)]\n \n fn test() {\n     let _v: isize;\n     _v = 1;\n     return;\n-    _v = 2; //~ WARNING: unreachable statement\n+    _v = 2;\n }\n \n pub fn main() {"}, {"sha": "6448056fb11f4db1448b7ce57008c48c09890b9d", "filename": "src/test/run-pass/unreachable-code-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -9,14 +9,14 @@\n // except according to those terms.\n \n \n-#![allow(unreachable_code)]\n #![allow(unused_variables)]\n+#![allow(dead_code)]\n \n fn id(x: bool) -> bool { x }\n \n fn call_id() {\n     let c = panic!();\n-    id(c); //~ WARNING unreachable statement\n+    id(c);\n }\n \n fn call_id_3() { id(return) && id(return); }"}, {"sha": "60a0d8f0b865f983735eb7ea10869e98a8dbdd53", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6961d267298b6ca0507520de5541883374d31302/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961d267298b6ca0507520de5541883374d31302/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=6961d267298b6ca0507520de5541883374d31302", "patch": "@@ -197,6 +197,11 @@ impl<'test> TestCx<'test> {\n             self.fatal_proc_rec(\"compilation failed!\", &proc_res);\n         }\n \n+        let expected_errors = errors::load_errors(&self.testpaths.file, self.revision);\n+        if !expected_errors.is_empty() {\n+            self.check_expected_errors(expected_errors, &proc_res);\n+        }\n+\n         let proc_res = self.exec_compiled_test();\n \n         if !proc_res.status.success() {\n@@ -992,7 +997,8 @@ actual:\\n\\\n     fn check_expected_errors(&self,\n                              expected_errors: Vec<errors::Error>,\n                              proc_res: &ProcRes) {\n-        if proc_res.status.success() {\n+        if proc_res.status.success() &&\n+            expected_errors.iter().any(|x| x.kind == Some(ErrorKind::Error)) {\n             self.fatal_proc_rec(\"process did not return an error status\", proc_res);\n         }\n \n@@ -1320,6 +1326,7 @@ actual:\\n\\\n         match self.config.mode {\n             CompileFail |\n             ParseFail |\n+            RunPass |\n             Incremental => {\n                 // If we are extracting and matching errors in the new\n                 // fashion, then you want JSON mode. Old-skool error\n@@ -1350,7 +1357,6 @@ actual:\\n\\\n                 args.push(dir_opt);\n             }\n             RunFail |\n-            RunPass |\n             RunPassValgrind |\n             Pretty |\n             DebugInfoGdb |"}]}