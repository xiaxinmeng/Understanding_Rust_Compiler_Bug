{"sha": "6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNWEwYTNiM2JhNmZjNDQ0Y2U3MjIwNDljYWRjZmIyNmE5NmRjMzU=", "commit": {"author": {"name": "Lenny222", "email": "github@kudling.de", "date": "2011-12-21T20:36:43Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-22T07:46:49Z"}, "message": "json: add \"null\"", "tree": {"sha": "0dc9d1ee83f51ceee1966851a2998c474ce33e0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dc9d1ee83f51ceee1966851a2998c474ce33e0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35", "html_url": "https://github.com/rust-lang/rust/commit/6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35/comments", "author": null, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bf12f372355ab3213d99a42eb6dae1de2a53b06", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf12f372355ab3213d99a42eb6dae1de2a53b06", "html_url": "https://github.com/rust-lang/rust/commit/7bf12f372355ab3213d99a42eb6dae1de2a53b06"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "2adfbca70cf73e619bd64812a9bd9db769d4fedd", "filename": "src/libstd/json.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35", "patch": "@@ -34,6 +34,8 @@ tag json {\n     list(@[json]);\n     /* Variant: dict */\n     dict(map::hashmap<str,json>);\n+    /* Variant: null */\n+    null;\n }\n \n /*\n@@ -233,6 +235,14 @@ fn from_str_bool(s: str) -> (option::t<json>, str) {\n     }\n }\n \n+fn from_str_null(s: str) -> (option::t<json>, str) {\n+    if (str::starts_with(s, \"null\")) {\n+        (some(null), str::slice(s, 4u, str::byte_len(s)))\n+    } else {\n+        (none, s)\n+    }\n+}\n+\n fn from_str_helper(s: str) -> (option::t<json>, str) {\n     let s = str::trim_left(s);\n     if str::is_empty(s) { ret (none, s); }\n@@ -243,6 +253,7 @@ fn from_str_helper(s: str) -> (option::t<json>, str) {\n         '{' { from_str_dict(s) }\n         '0' to '9' | '-' | '+' | '.' { from_str_float(s) }\n         't' | 'f' { from_str_bool(s) }\n+        'n' { from_str_null(s) }\n         _ { ret (none, s); }\n     }\n }"}, {"sha": "41031b2e16a4c2a42a09d9d72add533abadae0c0", "filename": "src/test/stdtest/json.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35/src%2Ftest%2Fstdtest%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35/src%2Ftest%2Fstdtest%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fjson.rs?ref=6f5a0a3b3ba6fc444ce722049cadcfb26a96dc35", "patch": "@@ -5,6 +5,11 @@ import option;\n import std::json::*;\n import option::{none, some};\n \n+#[test]\n+fn test_from_str_null() {\n+    assert(from_str(\"null\") == some(null));\n+}\n+\n #[test]\n fn test_from_str_num() {\n     assert(from_str(\"3\") == some(num(3f)));\n@@ -31,6 +36,7 @@ fn test_from_str_bool() {\n fn test_from_str_list() {\n     assert(from_str(\"[]\") == some(list(@[])));\n     assert(from_str(\"[true]\") == some(list(@[boolean(true)])));\n+    assert(from_str(\"[null]\") == some(list(@[null])));\n     assert(from_str(\"[3, 1]\") == some(list(@[num(3f), num(1f)])));\n     assert(from_str(\"[2, [4, 1]]\") ==\n         some(list(@[num(2f), list(@[num(4f), num(1f)])])));\n@@ -44,6 +50,7 @@ fn test_from_str_list() {\n fn test_from_str_dict() {\n     assert(from_str(\"{}\") != none);\n     assert(from_str(\"{\\\"a\\\": 3}\") != none);\n+    assert(from_str(\"{\\\"a\\\": null}\") != none);\n     assert(from_str(\"{\\\"a\\\": }\") == none);\n     assert(from_str(\"{\\\"a\\\" }\") == none);\n     assert(from_str(\"{\\\"a\\\"\") == none);"}]}