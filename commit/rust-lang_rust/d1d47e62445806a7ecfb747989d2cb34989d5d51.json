{"sha": "d1d47e62445806a7ecfb747989d2cb34989d5d51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZDQ3ZTYyNDQ1ODA2YTdlY2ZiNzQ3OTg5ZDJjYjM0OTg5ZDVkNTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-28T17:48:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-28T17:53:01Z"}, "message": "Skip over balanced parens", "tree": {"sha": "c47d0cef58945190e9e5dcf40317450cfe0db797", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c47d0cef58945190e9e5dcf40317450cfe0db797"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1d47e62445806a7ecfb747989d2cb34989d5d51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1d47e62445806a7ecfb747989d2cb34989d5d51", "html_url": "https://github.com/rust-lang/rust/commit/d1d47e62445806a7ecfb747989d2cb34989d5d51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1d47e62445806a7ecfb747989d2cb34989d5d51/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "html_url": "https://github.com/rust-lang/rust/commit/4adf0c20b71f8eb6365893cb1739b1cd33b081cc"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "56e3208ac445e0e68dcf99e0639e37d1f1a87dd9", "filename": "src/parser/event_parser/grammar/items.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d1d47e62445806a7ecfb747989d2cb34989d5d51/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1d47e62445806a7ecfb747989d2cb34989d5d51/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs?ref=d1d47e62445806a7ecfb747989d2cb34989d5d51", "patch": "@@ -36,6 +36,11 @@ fn item(p: &mut Parser) {\n             fn_item(p);\n             FN_ITEM\n         }\n+        L_CURLY => {\n+            item.abandon(p);\n+            error_block(p, \"expected item\");\n+            return;\n+        }\n         err_token => {\n             item.abandon(p);\n             let message = if err_token == SEMI {"}, {"sha": "e7f1915d260f309cf3e24a8b1e93e1c6430ebcfc", "filename": "src/parser/event_parser/grammar/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d1d47e62445806a7ecfb747989d2cb34989d5d51/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1d47e62445806a7ecfb747989d2cb34989d5d51/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs?ref=d1d47e62445806a7ecfb747989d2cb34989d5d51", "patch": "@@ -49,6 +49,23 @@ fn alias(p: &mut Parser) -> bool {\n     true //FIXME: return false if three are errors\n }\n \n+fn error_block(p: &mut Parser, message: &str) {\n+    assert!(p.at(L_CURLY));\n+    let err = p.start();\n+    p.error().message(message).emit();\n+    p.bump();\n+    let mut level: u32 = 1;\n+    while level > 0 && !p.at(EOF) {\n+        match p.current() {\n+            L_CURLY => level += 1,\n+            R_CURLY => level -= 1,\n+            _ => (),\n+        }\n+        p.bump();\n+    }\n+    err.complete(p, ERROR);\n+}\n+\n impl<'p> Parser<'p> {\n     fn at<L: Lookahead>(&self, l: L) -> bool {\n         l.is_ahead(self)"}, {"sha": "9fcac19b5ce0661e650363c48a5d6efdaa38025c", "filename": "tests/data/parser/err/0008_item_block_recovery.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d1d47e62445806a7ecfb747989d2cb34989d5d51/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1d47e62445806a7ecfb747989d2cb34989d5d51/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.rs?ref=d1d47e62445806a7ecfb747989d2cb34989d5d51", "patch": "@@ -0,0 +1,13 @@\n+fn foo() {\n+}\n+\n+bar() {\n+    if true {\n+        1\n+    } else {\n+        2 + 3\n+    }\n+}\n+\n+fn baz() {\n+}"}, {"sha": "4bb66f56a1277d67aa575badca00c668f248e8e1", "filename": "tests/data/parser/err/0008_item_block_recovery.txt", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/d1d47e62445806a7ecfb747989d2cb34989d5d51/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d1d47e62445806a7ecfb747989d2cb34989d5d51/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.txt?ref=d1d47e62445806a7ecfb747989d2cb34989d5d51", "patch": "@@ -0,0 +1,61 @@\n+FILE@[0; 95)\n+  FN_ITEM@[0; 14)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    IDENT@[3; 6)\n+    L_PAREN@[6; 7)\n+    R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    L_CURLY@[9; 10)\n+    WHITESPACE@[10; 11)\n+    R_CURLY@[11; 12)\n+    WHITESPACE@[12; 14)\n+  ERROR@[14; 17)\n+  err: `expected item`\n+    IDENT@[14; 17)\n+  ERROR@[17; 18)\n+  err: `expected item`\n+    L_PAREN@[17; 18)\n+  ERROR@[18; 20)\n+  err: `expected item`\n+    R_PAREN@[18; 19)\n+    WHITESPACE@[19; 20)\n+  ERROR@[20; 82)\n+  err: `expected item`\n+    L_CURLY@[20; 21)\n+    WHITESPACE@[21; 26)\n+    IDENT@[26; 28)\n+    WHITESPACE@[28; 29)\n+    TRUE_KW@[29; 33)\n+    WHITESPACE@[33; 34)\n+    L_CURLY@[34; 35)\n+    WHITESPACE@[35; 44)\n+    INT_NUMBER@[44; 45)\n+    WHITESPACE@[45; 50)\n+    R_CURLY@[50; 51)\n+    WHITESPACE@[51; 52)\n+    IDENT@[52; 56)\n+    WHITESPACE@[56; 57)\n+    L_CURLY@[57; 58)\n+    WHITESPACE@[58; 67)\n+    INT_NUMBER@[67; 68)\n+    WHITESPACE@[68; 69)\n+    PLUS@[69; 70)\n+    WHITESPACE@[70; 71)\n+    INT_NUMBER@[71; 72)\n+    WHITESPACE@[72; 77)\n+    R_CURLY@[77; 78)\n+    WHITESPACE@[78; 79)\n+    R_CURLY@[79; 80)\n+    WHITESPACE@[80; 82)\n+  FN_ITEM@[82; 95)\n+    FN_KW@[82; 84)\n+    WHITESPACE@[84; 85)\n+    IDENT@[85; 88)\n+    L_PAREN@[88; 89)\n+    R_PAREN@[89; 90)\n+    WHITESPACE@[90; 91)\n+    L_CURLY@[91; 92)\n+    WHITESPACE@[92; 93)\n+    R_CURLY@[93; 94)\n+    WHITESPACE@[94; 95)"}]}