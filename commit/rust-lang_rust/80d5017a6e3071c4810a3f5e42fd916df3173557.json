{"sha": "80d5017a6e3071c4810a3f5e42fd916df3173557", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZDUwMTdhNmUzMDcxYzQ4MTBhM2Y1ZTQyZmQ5MTZkZjMxNzM1NTc=", "commit": {"author": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2020-10-04T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-04T00:00:00Z"}, "message": "Fix miscompile in SimplifyBranchSame", "tree": {"sha": "76df6403d186b313a95296875b298ec9c9dcc07f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76df6403d186b313a95296875b298ec9c9dcc07f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80d5017a6e3071c4810a3f5e42fd916df3173557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80d5017a6e3071c4810a3f5e42fd916df3173557", "html_url": "https://github.com/rust-lang/rust/commit/80d5017a6e3071c4810a3f5e42fd916df3173557", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80d5017a6e3071c4810a3f5e42fd916df3173557/comments", "author": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ccf5f731bb71db3470002d6baf5ab4792b821d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ccf5f731bb71db3470002d6baf5ab4792b821d9", "html_url": "https://github.com/rust-lang/rust/commit/4ccf5f731bb71db3470002d6baf5ab4792b821d9"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a4e7a5a94533d97f903a55309959fb985aa4a4e7", "filename": "compiler/rustc_mir/src/transform/simplify_try.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80d5017a6e3071c4810a3f5e42fd916df3173557/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d5017a6e3071c4810a3f5e42fd916df3173557/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs?ref=80d5017a6e3071c4810a3f5e42fd916df3173557", "patch": "@@ -630,7 +630,8 @@ impl<'a, 'tcx> SimplifyBranchSameOptimizationFinder<'a, 'tcx> {\n                 // All successor basic blocks must be equal or contain statements that are pairwise considered equal.\n                 for ((target_and_value_l,bb_l), (target_and_value_r,bb_r)) in iter_bbs_reachable.tuple_windows() {\n                     let trivial_checks = bb_l.is_cleanup == bb_r.is_cleanup\n-                    && bb_l.terminator().kind == bb_r.terminator().kind;\n+                                            && bb_l.terminator().kind == bb_r.terminator().kind\n+                                            && bb_l.statements.len() == bb_r.statements.len();\n                     let statement_check = || {\n                         bb_l.statements.iter().zip(&bb_r.statements).try_fold(StatementEquality::TrivialEqual, |acc,(l,r)| {\n                             let stmt_equality = self.statement_equality(*adt_matched_on, &l, target_and_value_l, &r, target_and_value_r);"}]}