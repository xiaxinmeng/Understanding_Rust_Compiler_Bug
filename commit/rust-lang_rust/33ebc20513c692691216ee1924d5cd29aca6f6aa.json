{"sha": "33ebc20513c692691216ee1924d5cd29aca6f6aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZWJjMjA1MTNjNjkyNjkxMjE2ZWUxOTI0ZDVjZDI5YWNhNmY2YWE=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-02-28T13:10:33Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-03-06T21:02:20Z"}, "message": "Turn trailing tokens in `assert!()` into hard errors", "tree": {"sha": "97232471d3f42e0c48580eb25a179155d60bbd93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97232471d3f42e0c48580eb25a179155d60bbd93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33ebc20513c692691216ee1924d5cd29aca6f6aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33ebc20513c692691216ee1924d5cd29aca6f6aa", "html_url": "https://github.com/rust-lang/rust/commit/33ebc20513c692691216ee1924d5cd29aca6f6aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33ebc20513c692691216ee1924d5cd29aca6f6aa/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "865b44a3e330f3ef8be0f6edf69896c9ed957ac0", "url": "https://api.github.com/repos/rust-lang/rust/commits/865b44a3e330f3ef8be0f6edf69896c9ed957ac0", "html_url": "https://github.com/rust-lang/rust/commit/865b44a3e330f3ef8be0f6edf69896c9ed957ac0"}], "stats": {"total": 32, "additions": 11, "deletions": 21}, "files": [{"sha": "09ff770e87b59276e8654a678c4a67e00b8d38c9", "filename": "src/librustc_builtin_macros/assert.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/33ebc20513c692691216ee1924d5cd29aca6f6aa/src%2Flibrustc_builtin_macros%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33ebc20513c692691216ee1924d5cd29aca6f6aa/src%2Flibrustc_builtin_macros%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fassert.rs?ref=33ebc20513c692691216ee1924d5cd29aca6f6aa", "patch": "@@ -80,17 +80,15 @@ fn parse_assert<'a>(\n     //     my_function();\n     // );\n     //\n-    // Warn about semicolon and suggest removing it. Eventually, this should be turned into an\n-    // error.\n+    // Emit an error about semicolon and suggest removing it.\n     if parser.token == token::Semi {\n-        let mut err = cx.struct_span_warn(sp, \"macro requires an expression as an argument\");\n+        let mut err = cx.struct_span_err(sp, \"macro requires an expression as an argument\");\n         err.span_suggestion(\n             parser.token.span,\n             \"try removing semicolon\",\n             String::new(),\n             Applicability::MaybeIncorrect,\n         );\n-        err.note(\"this is going to be an error in the future\");\n         err.emit();\n \n         parser.bump();\n@@ -101,19 +99,17 @@ fn parse_assert<'a>(\n     //\n     // assert!(true \"error message\");\n     //\n-    // Parse this as an actual message, and suggest inserting a comma. Eventually, this should be\n-    // turned into an error.\n+    // Emit an error and suggest inserting a comma.\n     let custom_message =\n         if let token::Literal(token::Lit { kind: token::Str, .. }) = parser.token.kind {\n-            let mut err = cx.struct_span_warn(parser.token.span, \"unexpected string literal\");\n+            let mut err = cx.struct_span_err(parser.token.span, \"unexpected string literal\");\n             let comma_span = parser.prev_token.span.shrink_to_hi();\n             err.span_suggestion_short(\n                 comma_span,\n                 \"try adding a comma\",\n                 \", \".to_string(),\n                 Applicability::MaybeIncorrect,\n             );\n-            err.note(\"this is going to be an error in the future\");\n             err.emit();\n \n             parse_custom_message(&mut parser)"}, {"sha": "cd7faf9bf8bfb056a8ed983dbdc1f8c54a009434", "filename": "src/test/ui/macros/assert-trailing-junk.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33ebc20513c692691216ee1924d5cd29aca6f6aa/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33ebc20513c692691216ee1924d5cd29aca6f6aa/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.rs?ref=33ebc20513c692691216ee1924d5cd29aca6f6aa", "patch": "@@ -13,12 +13,12 @@ fn main() {\n     //~^ ERROR no rules expected\n \n     assert!(true \"whatever\" blah);\n-    //~^ WARN unexpected string literal\n+    //~^ ERROR unexpected string literal\n     //~^^ ERROR no rules expected\n \n     assert!(true;);\n-    //~^ WARN macro requires an expression\n+    //~^ ERROR macro requires an expression\n \n     assert!(false || true \"error message\");\n-    //~^ WARN unexpected string literal\n+    //~^ ERROR unexpected string literal\n }"}, {"sha": "84a6768b3f453cde932ed520909c8f88d9b189f8", "filename": "src/test/ui/macros/assert-trailing-junk.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/33ebc20513c692691216ee1924d5cd29aca6f6aa/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33ebc20513c692691216ee1924d5cd29aca6f6aa/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr?ref=33ebc20513c692691216ee1924d5cd29aca6f6aa", "patch": "@@ -18,15 +18,13 @@ LL |     assert!(true, \"whatever\" blah);\n    |                             |\n    |                             help: missing comma here\n \n-warning: unexpected string literal\n+error: unexpected string literal\n   --> $DIR/assert-trailing-junk.rs:15:18\n    |\n LL |     assert!(true \"whatever\" blah);\n    |                 -^^^^^^^^^^\n    |                 |\n    |                 help: try adding a comma\n-   |\n-   = note: this is going to be an error in the future\n \n error: no rules expected the token `blah`\n   --> $DIR/assert-trailing-junk.rs:15:29\n@@ -36,25 +34,21 @@ LL |     assert!(true \"whatever\" blah);\n    |                            |\n    |                            help: missing comma here\n \n-warning: macro requires an expression as an argument\n+error: macro requires an expression as an argument\n   --> $DIR/assert-trailing-junk.rs:19:5\n    |\n LL |     assert!(true;);\n    |     ^^^^^^^^^^^^-^^\n    |                 |\n    |                 help: try removing semicolon\n-   |\n-   = note: this is going to be an error in the future\n \n-warning: unexpected string literal\n+error: unexpected string literal\n   --> $DIR/assert-trailing-junk.rs:22:27\n    |\n LL |     assert!(false || true \"error message\");\n    |                          -^^^^^^^^^^^^^^^\n    |                          |\n    |                          help: try adding a comma\n-   |\n-   = note: this is going to be an error in the future\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 7 previous errors\n "}]}