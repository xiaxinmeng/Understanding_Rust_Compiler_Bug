{"sha": "159525b120121b217f2831869b6ea9a3cf9fe554", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1OTUyNWIxMjAxMjFiMjE3ZjI4MzE4NjliNmVhOWEzY2Y5ZmU1NTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-09T10:18:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-09T10:18:46Z"}, "message": "Check Fileid in SourceFileMap", "tree": {"sha": "cde35c9e5218afd721a159f46c768641b496dd63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cde35c9e5218afd721a159f46c768641b496dd63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/159525b120121b217f2831869b6ea9a3cf9fe554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/159525b120121b217f2831869b6ea9a3cf9fe554", "html_url": "https://github.com/rust-lang/rust/commit/159525b120121b217f2831869b6ea9a3cf9fe554", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/159525b120121b217f2831869b6ea9a3cf9fe554/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "html_url": "https://github.com/rust-lang/rust/commit/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "f50b922af219ffaad6f8465fd8e666efff30455d", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=159525b120121b217f2831869b6ea9a3cf9fe554", "patch": "@@ -110,16 +110,32 @@ pub struct SourceItemId {\n }\n \n /// Maps item's `SyntaxNode`s to `SourceFileItemId` and back.\n-#[derive(Debug, PartialEq, Eq, Default)]\n+#[derive(Debug, PartialEq, Eq)]\n pub struct SourceFileItems {\n+    file_id: FileId,\n     arena: Arena<SyntaxNode>,\n }\n \n impl SourceFileItems {\n+    fn new(file_id: FileId) -> SourceFileItems {\n+        SourceFileItems {\n+            file_id,\n+            arena: Arena::default(),\n+        }\n+    }\n+\n     fn alloc(&mut self, item: SyntaxNode) -> SourceFileItemId {\n         self.arena.alloc(item)\n     }\n-    pub fn id_of(&self, item: SyntaxNodeRef) -> SourceFileItemId {\n+    pub fn id_of(&self, file_id: FileId, item: SyntaxNodeRef) -> SourceFileItemId {\n+        assert_eq!(\n+            self.file_id, file_id,\n+            \"SourceFileItems: wrong file, expected {:?}, got {:?}\",\n+            self.file_id, file_id\n+        );\n+        self.id_of_unchecked(item)\n+    }\n+    fn id_of_unchecked(&self, item: SyntaxNodeRef) -> SourceFileItemId {\n         let (id, _item) = self\n             .arena\n             .iter()"}, {"sha": "e7a49f83abe781873b15a3533582bf83388f23af", "filename": "crates/ra_hir/src/module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule.rs?ref=159525b120121b217f2831869b6ea9a3cf9fe554", "patch": "@@ -280,7 +280,7 @@ impl ModuleSource {\n     ) -> ModuleSource {\n         assert!(!m.has_semi());\n         let file_items = db.file_items(file_id);\n-        let item_id = file_items.id_of(m.syntax());\n+        let item_id = file_items.id_of(file_id, m.syntax());\n         ModuleSource::new(file_id, item_id)\n     }\n "}, {"sha": "6511359d08b321a7021d52e0ff05677f0c7f2750", "filename": "crates/ra_hir/src/module/nameres.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs?ref=159525b120121b217f2831869b6ea9a3cf9fe554", "patch": "@@ -168,7 +168,7 @@ impl InputModuleItems {\n     }\n \n     fn add_use_item(&mut self, file_items: &SourceFileItems, item: ast::UseItem) {\n-        let file_item_id = file_items.id_of(item.syntax());\n+        let file_item_id = file_items.id_of_unchecked(item.syntax());\n         let start_offset = item.syntax().range().start();\n         Path::expand_use_item(item, |path, range| {\n             let kind = match range {\n@@ -188,7 +188,7 @@ impl ModuleItem {\n         let name = item.name()?.text();\n         let kind = item.syntax().kind();\n         let vis = Vis::Other;\n-        let id = file_items.id_of(item.syntax());\n+        let id = file_items.id_of_unchecked(item.syntax());\n         let res = ModuleItem {\n             id,\n             name,"}, {"sha": "bb4457d072e7c44221ad8da4df6f6afd599f5657", "filename": "crates/ra_hir/src/query_definitions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs?ref=159525b120121b217f2831869b6ea9a3cf9fe554", "patch": "@@ -36,7 +36,7 @@ pub(super) fn fn_scopes(db: &impl HirDatabase, fn_id: FnId) -> Arc<FnScopes> {\n }\n \n pub(super) fn file_items(db: &impl HirDatabase, file_id: FileId) -> Arc<SourceFileItems> {\n-    let mut res = SourceFileItems::default();\n+    let mut res = SourceFileItems::new(file_id);\n     let source_file = db.source_file(file_id);\n     res.alloc(source_file.syntax().owned());\n     let source_file = source_file.borrowed();"}, {"sha": "0c16ccc243d6c033b76b73dafd0ec8ed6955b959", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159525b120121b217f2831869b6ea9a3cf9fe554/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=159525b120121b217f2831869b6ea9a3cf9fe554", "patch": "@@ -75,7 +75,7 @@ pub fn function_from_source(\n ) -> Cancelable<Option<Function>> {\n     let module = ctry!(module_from_child_node(db, file_id, fn_def.syntax())?);\n     let file_items = db.file_items(file_id);\n-    let item_id = file_items.id_of(fn_def.syntax());\n+    let item_id = file_items.id_of(file_id, fn_def.syntax());\n     let source_item_id = SourceItemId { file_id, item_id };\n     let def_loc = DefLoc {\n         kind: DefKind::Function,"}]}