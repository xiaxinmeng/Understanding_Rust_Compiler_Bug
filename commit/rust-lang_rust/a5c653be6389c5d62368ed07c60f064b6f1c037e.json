{"sha": "a5c653be6389c5d62368ed07c60f064b6f1c037e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1YzY1M2JlNjM4OWM1ZDYyMzY4ZWQwN2M2MGYwNjRiNmYxYzAzN2U=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-20T10:07:30Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-27T09:44:55Z"}, "message": "Simplify `TypeVariableTable::vars_since_snapshot`", "tree": {"sha": "cd60daa7cc407e41d38060a64982ec7a0f3432a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd60daa7cc407e41d38060a64982ec7a0f3432a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5c653be6389c5d62368ed07c60f064b6f1c037e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5c653be6389c5d62368ed07c60f064b6f1c037e", "html_url": "https://github.com/rust-lang/rust/commit/a5c653be6389c5d62368ed07c60f064b6f1c037e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5c653be6389c5d62368ed07c60f064b6f1c037e/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a08860ae6ec94eccbe7b2b73fbe9d0c175196d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a08860ae6ec94eccbe7b2b73fbe9d0c175196d4", "html_url": "https://github.com/rust-lang/rust/commit/2a08860ae6ec94eccbe7b2b73fbe9d0c175196d4"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "422dd24eb0b45e13db6c1f87e9b379292eb6eaa6", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a5c653be6389c5d62368ed07c60f064b6f1c037e/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5c653be6389c5d62368ed07c60f064b6f1c037e/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=a5c653be6389c5d62368ed07c60f064b6f1c037e", "patch": "@@ -295,19 +295,10 @@ impl<'tcx> TypeVariableTable<'tcx> {\n     /// Returns a map from the type variables created during the\n     /// snapshot to the origin of the type variable.\n     pub fn vars_since_snapshot(&mut self, s: &Snapshot<'tcx>) -> TypeVariableMap {\n-        let actions_since_snapshot = self.values.actions_since_snapshot(&s.snapshot);\n-\n-        actions_since_snapshot\n-            .iter()\n-            .filter_map(|action| match action {\n-                &sv::UndoLog::NewElem(index) => Some(ty::TyVid { index: index as u32 }),\n-                _ => None,\n-            })\n-            .map(|vid| {\n-                let origin = self.values.get(vid.index as usize).origin.clone();\n-                (vid, origin)\n-            })\n-            .collect()\n+        self.values.values_since_snapshot(&s.snapshot).map(|idx| {\n+            let origin = self.values.get(idx).origin.clone();\n+            (ty::TyVid { index: idx as u32 }, origin)\n+        }).collect()\n     }\n \n     /// Finds the set of type variables that existed *before* `s`"}]}