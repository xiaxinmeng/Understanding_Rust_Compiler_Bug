{"sha": "24a2929ed1d3e1760bf89c878352448fb5ee2087", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YTI5MjllZDFkM2UxNzYwYmY4OWM4NzgzNTI0NDhmYjVlZTIwODc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2020-01-22T23:57:38Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2020-01-24T16:24:50Z"}, "message": "Normalise notes with the/is", "tree": {"sha": "d2c30258d1be01b757a56bca0fc76d69210185c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2c30258d1be01b757a56bca0fc76d69210185c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24a2929ed1d3e1760bf89c878352448fb5ee2087", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24a2929ed1d3e1760bf89c878352448fb5ee2087", "html_url": "https://github.com/rust-lang/rust/commit/24a2929ed1d3e1760bf89c878352448fb5ee2087", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24a2929ed1d3e1760bf89c878352448fb5ee2087/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4f96e294335de13bc7341c626837affdb2e4a45", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f96e294335de13bc7341c626837affdb2e4a45", "html_url": "https://github.com/rust-lang/rust/commit/f4f96e294335de13bc7341c626837affdb2e4a45"}], "stats": {"total": 846, "additions": 423, "deletions": 423}, "files": [{"sha": "8c18b1368a9d8f84c2728b65bae38cc12daf33ce", "filename": "src/librustc/lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -259,7 +259,7 @@ pub fn struct_lint_level<'a>(\n                 &mut err,\n                 DiagnosticMessageId::from(lint),\n                 src,\n-                \"lint level defined here\",\n+                \"the lint level is defined here\",\n             );\n             if lint_attr_name.as_str() != name {\n                 let level_str = level.as_str();"}, {"sha": "9e33ee8da2152bf8e9fdd983d45eb1e38f41b076", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -204,17 +204,17 @@ impl LanguageItemCollector<'tcx> {\n                     },\n                 };\n                 if let Some(span) = self.tcx.hir().span_if_local(original_def_id) {\n-                    err.span_note(span, \"first defined here\");\n+                    err.span_note(span, \"the lang item is first defined here\");\n                 } else {\n                     match self.tcx.extern_crate(original_def_id) {\n                         Some(ExternCrate {dependency_of, ..}) => {\n                             err.note(&format!(\n-                            \"first defined in crate `{}` (which `{}` depends on)\",\n+                            \"the lang item is first defined in crate `{}` (which `{}` depends on)\",\n                                       self.tcx.crate_name(original_def_id.krate),\n                                       self.tcx.crate_name(*dependency_of)));\n                         },\n                         _ => {\n-                            err.note(&format!(\"first defined in crate `{}`.\",\n+                            err.note(&format!(\"the lang item is first defined in crate `{}`.\",\n                                       self.tcx.crate_name(original_def_id.krate)));\n                         }\n                     }"}, {"sha": "d96ba59d9a353cf3baf96804e75a0ee394bf7166", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -894,7 +894,7 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n         diag.note(note);\n         if let ty::Adt(def, _) = ty.kind {\n             if let Some(sp) = self.cx.tcx.hir().span_if_local(def.did) {\n-                diag.span_note(sp, \"type defined here\");\n+                diag.span_note(sp, \"the type is defined here\");\n             }\n         }\n         diag.emit();"}, {"sha": "f23b180eb8c819cb947da8bf47c11ee801b2d8b2", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -625,7 +625,7 @@ fn check_short_circuiting_in_const_local(item: &Item<'_, 'tcx>) {\n         }\n         for local in locals {\n             let span = body.local_decls[local].source_info.span;\n-            error.span_note(span, \"more locals defined here\");\n+            error.span_note(span, \"more locals are defined here\");\n         }\n         error.emit();\n     }"}, {"sha": "5e831b558a3509f16dc5e0c66d86371f5ff6dc96", "filename": "src/librustc_passes/diagnostic_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostic_items.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -73,10 +73,10 @@ fn collect_item(\n                 )),\n             };\n             if let Some(span) = tcx.hir().span_if_local(original_def_id) {\n-                err.span_note(span, \"first defined here\");\n+                err.span_note(span, \"the diagnostic item is first defined here\");\n             } else {\n                 err.note(&format!(\n-                    \"first defined in crate `{}`.\",\n+                    \"the diagnostic item is first defined in crate `{}`.\",\n                     tcx.crate_name(original_def_id.krate)\n                 ));\n             }"}, {"sha": "c2123876b679bbfa5b83c38af2e86cf54e1f926e", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -2220,7 +2220,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n             let mut could_refer_to = |kind: DefKind, def_id, also| {\n                 let note_msg = format!(\n-                    \"`{}` could{} refer to {} defined here\",\n+                    \"`{}` could{} refer to the {} defined here\",\n                     assoc_ident,\n                     also,\n                     kind.descr(def_id)"}, {"sha": "bc21cfd47c5d1000e535e5db74ebf8e21d634039", "filename": "src/test/rustdoc-ui/deny-intra-link-resolution-failure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `[v2]` cannot be resolved, ignoring it.\n LL | /// [v2]\n    |      ^^ cannot be resolved, ignoring\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deny-intra-link-resolution-failure.rs:1:9\n    |\n LL | #![deny(intra_doc_link_resolution_failure)]"}, {"sha": "f0a13b70b977f6e20059098372ef52a3fdadcf5d", "filename": "src/test/rustdoc-ui/deny-missing-docs-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fdeny-missing-docs-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fdeny-missing-docs-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-missing-docs-crate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | |\n LL | | pub struct Foo;\n    | |_______________^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deny-missing-docs-crate.rs:1:9\n    |\n LL | #![deny(missing_docs)]"}, {"sha": "a564006e74f4817259412c737691e90bc3492e5f", "filename": "src/test/rustdoc-ui/deny-missing-docs-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fdeny-missing-docs-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fdeny-missing-docs-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-missing-docs-macro.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: missing documentation for macro\n LL | macro_rules! foo {\n    | ^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deny-missing-docs-macro.rs:3:9\n    |\n LL | #![deny(missing_docs)]"}, {"sha": "f2b2328322a7b9ddc2b3f75eca3366114f356067", "filename": "src/test/rustdoc-ui/doc-without-codeblock.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -10,7 +10,7 @@ LL | |     pub fn bar() {}\n LL | | }\n    | |_^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/doc-without-codeblock.rs:1:9\n    |\n LL | #![deny(missing_doc_code_examples)]"}, {"sha": "cf26675163054067e30c40a75bed45e2a9990e86", "filename": "src/test/rustdoc-ui/intra-doc-alias-ice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fintra-doc-alias-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fintra-doc-alias-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc-alias-ice.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `[TypeAlias::hoge]` cannot be resolved, ignoring it.\n LL | /// [broken cross-reference](TypeAlias::hoge)\n    |                              ^^^^^^^^^^^^^^^ cannot be resolved, ignoring\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/intra-doc-alias-ice.rs:1:9\n    |\n LL | #![deny(intra_doc_link_resolution_failure)]"}, {"sha": "ce31eb3a8a3786cd2bf9712ac1c4c45d3f7dd6f6", "filename": "src/test/rustdoc-ui/intra-link-span-ice-55723.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fintra-link-span-ice-55723.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fintra-link-span-ice-55723.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-span-ice-55723.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `[i]` cannot be resolved, ignoring it.\n LL | /// \uff08arr[i]\uff09\n    |           ^ cannot be resolved, ignoring\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/intra-link-span-ice-55723.rs:1:9\n    |\n LL | #![deny(intra_doc_link_resolution_failure)]"}, {"sha": "7b9821b3d047abf14aa77ada70b81107a5153240", "filename": "src/test/rustdoc-ui/intra-links-ambiguity.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fintra-links-ambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fintra-links-ambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-ambiguity.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `ambiguous` is both a struct and a function\n LL | /// [`ambiguous`] is ambiguous.\n    |      ^^^^^^^^^^^ ambiguous link\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/intra-links-ambiguity.rs:1:9\n    |\n LL | #![deny(intra_doc_link_resolution_failure)]"}, {"sha": "11dee5547db4f541c8ecaea0637609ad985b8757", "filename": "src/test/rustdoc-ui/intra-links-anchors.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fintra-links-anchors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fintra-links-anchors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-anchors.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `[Foo::f#hola]` has an issue with the link anchor.\n LL | /// Or maybe [Foo::f#hola].\n    |               ^^^^^^^^^^^ struct fields cannot be followed by anchors\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/intra-links-anchors.rs:1:9\n    |\n LL | #![deny(intra_doc_link_resolution_failure)]"}, {"sha": "852c9120e0bf9ca141b9e7cbdca9369a74020965", "filename": "src/test/rustdoc-ui/lint-group.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Flint-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Flint-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Flint-group.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -8,7 +8,7 @@ LL | | /// println!(\"sup\");\n LL | | /// ```\n    | |_______^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-group.rs:7:9\n    |\n LL | #![deny(rustdoc)]\n@@ -21,7 +21,7 @@ error: `[error]` cannot be resolved, ignoring it.\n LL | /// what up, let's make an [error]\n    |                             ^^^^^ cannot be resolved, ignoring\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-group.rs:7:9\n    |\n LL | #![deny(rustdoc)]\n@@ -35,7 +35,7 @@ error: missing code example in this documentation\n LL | /// wait, this doesn't have a doctest?\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-group.rs:7:9\n    |\n LL | #![deny(rustdoc)]"}, {"sha": "3fcfc1808e079aa8f035a33a2da9aaea631770c0", "filename": "src/test/rustdoc-ui/lint-missing-doc-code-example.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -5,7 +5,7 @@ LL | / mod module1 {\n LL | | }\n    | |_^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-missing-doc-code-example.rs:2:9\n    |\n LL | #![deny(missing_doc_code_examples)]"}, {"sha": "70b6638b23711bd4732a02872af1993c31f12452", "filename": "src/test/rustdoc-ui/private-item-doc-test.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -8,7 +8,7 @@ LL | |     /// assert!(false);\n LL | |     /// ```\n    | |___________^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/private-item-doc-test.rs:1:9\n    |\n LL | #![deny(private_doc_tests)]"}, {"sha": "4f78f51b676f4110f6359467475d31104b46f925", "filename": "src/test/ui-fulldeps/internal-lints/default_hash_types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: Prefer FxHashMap over HashMap, it has better performance\n LL |     let _map: HashMap<String, String> = HashMap::default();\n    |               ^^^^^^^ help: use: `FxHashMap`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/default_hash_types.rs:10:8\n    |\n LL | #[deny(rustc::default_hash_types)]"}, {"sha": "966a747a1c9f4f61b7024a6d6ed3958ae3493c53", "filename": "src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: implementing `LintPass` by hand\n LL | impl LintPass for Foo {\n    |      ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint_pass_impl_without_macro.rs:4:9\n    |\n LL | #![deny(rustc::lint_pass_impl_without_macro)]"}, {"sha": "2751a37f7419d788fc8f1591e6a500a49615c1ee", "filename": "src/test/ui-fulldeps/internal-lints/pass_ty_by_ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: passing `Ty<'_>` by reference\n LL |     ty_ref: &Ty<'_>,\n    |             ^^^^^^^ help: try passing by value: `Ty<'_>`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/pass_ty_by_ref.rs:4:9\n    |\n LL | #![deny(rustc::ty_pass_by_reference)]"}, {"sha": "59732cd84e52096e2f346204823dc8d14cb6c208", "filename": "src/test/ui-fulldeps/internal-lints/qualified_ty_ty_ctxt.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: usage of qualified `ty::Ty<'_>`\n LL |     ty_q: ty::Ty<'_>,\n    |           ^^^^^^^^^^ help: try using it unqualified: `Ty<'_>`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/qualified_ty_ty_ctxt.rs:4:9\n    |\n LL | #![deny(rustc::usage_of_qualified_ty)]"}, {"sha": "ee9f1ff10f88ebd82cad73119b98be547b84d8c0", "filename": "src/test/ui-fulldeps/internal-lints/ty_tykind_usage.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: usage of `ty::TyKind::<kind>`\n LL |     let kind = TyKind::Bool;\n    |                ^^^^^^ help: try using ty::<kind> directly: `ty`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/ty_tykind_usage.rs:9:8\n    |\n LL | #[deny(rustc::usage_of_ty_tykind)]"}, {"sha": "a0081b15f53c5cc8496fd6d22c6395ed30ac8b09", "filename": "src/test/ui-fulldeps/lint-plugin-deny-attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-deny-attr.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ error: item is named 'lintme'\n LL | fn lintme() { }\n    | ^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-plugin-deny-attr.rs:7:9\n    |\n LL | #![deny(test_lint)]"}, {"sha": "df92bc70a7971fbcd626625e9836b80908e4d206", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-attrs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -30,7 +30,7 @@ error: item is named 'lintme'\n LL | fn lintme() { }\n    | ^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-plugin-forbid-attrs.rs:7:11\n    |\n LL | #![forbid(test_lint)]"}, {"sha": "31d25652d5d390d072fa91e37d5a074a13ea9e70", "filename": "src/test/ui-fulldeps/lint-tool-test.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -70,7 +70,7 @@ error: item is named 'lintme'\n LL | fn lintme() { }\n    | ^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-tool-test.rs:13:9\n    |\n LL | #![deny(clippy_group)]\n@@ -83,7 +83,7 @@ error: item is named 'lintmetoo'\n LL |     fn lintmetoo() { }\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-tool-test.rs:13:9\n    |\n LL | #![deny(clippy_group)]"}, {"sha": "4520559845f476b9272a9162c4de4cd2f7ad4fa8", "filename": "src/test/ui/anon-params-deprecated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fanon-params-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fanon-params-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanon-params-deprecated.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: anonymous parameters are deprecated and will be removed in the next edi\n LL |     fn foo(i32);\n    |            ^^^ help: try naming the parameter or explicitly ignoring it: `_: i32`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/anon-params-deprecated.rs:1:9\n    |\n LL | #![warn(anonymous_parameters)]"}, {"sha": "172aed733fca96545b883ba9c802f6f4e5d5d02f", "filename": "src/test/ui/associated-const/associated-const-dead-code.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-dead-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-dead-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-dead-code.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: associated const is never used: `BAR`\n LL |     const BAR: u32 = 1;\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/associated-const-dead-code.rs:1:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "474c09d79dfbbe4b115c3a937acdf7892dc0382d", "filename": "src/test/ui/async-await/await-keyword/2015-edition-error-various-positions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2015-edition-error-various-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2015-edition-error-various-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2015-edition-error-various-positions.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `await` is a keyword in the 2018 edition\n LL |     pub mod await {\n    |             ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/2015-edition-error-various-positions.rs:2:9\n    |\n LL | #![deny(keyword_idents)]"}, {"sha": "0c558eb12f089e7b62c1e4d0e354dbb46c99b79c", "filename": "src/test/ui/async-await/await-keyword/2015-edition-warning.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2015-edition-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2015-edition-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2015-edition-warning.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `await` is a keyword in the 2018 edition\n LL |     pub mod await {\n    |             ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/2015-edition-warning.rs:4:9\n    |\n LL | #![deny(keyword_idents)]"}, {"sha": "e9325788961b274eb6c6456a2a91275f6c713412", "filename": "src/test/ui/async-await/unreachable-lint-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fasync-await%2Funreachable-lint-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fasync-await%2Funreachable-lint-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funreachable-lint-1.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     return; bar().await;\n    |     |\n    |     any code following this expression is unreachable\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable-lint-1.rs:2:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "2a7a12a364346ce4bd00ed89827a87bb1f24cafa", "filename": "src/test/ui/async-await/unused-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: lifetime parameter `'a` never used\n LL | pub async fn func_with_unused_lifetime<'a>(s: &'a str) {\n    |                                        ^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused-lifetime.rs:7:9\n    |\n LL | #![deny(unused_lifetimes)]"}, {"sha": "85a4fa4a7481313c0fbd8201fe29fa6c3bb0baea", "filename": "src/test/ui/attributes/register-attr-tool-unused.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused attribute\n LL | #[register_attr(attr)]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/register-attr-tool-unused.rs:1:9\n    |\n LL | #![deny(unused)]"}, {"sha": "3f3affe5a98115683a401d62d02c905bed2a30cc", "filename": "src/test/ui/bad/bad-lint-cap2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused import: `std::option`\n LL | use std::option;\n    |     ^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/bad-lint-cap2.rs:4:9\n    |\n LL | #![deny(warnings)]"}, {"sha": "a4e399b1fac39d7e06b01284543b9dae3c47427c", "filename": "src/test/ui/bad/bad-lint-cap3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused import: `std::option`\n LL | use std::option;\n    |     ^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/bad-lint-cap3.rs:5:9\n    |\n LL | #![deny(warnings)]"}, {"sha": "85779e53437c7389941688439b5cd2e4ea8843d9", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-future-compat-lint.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -9,7 +9,7 @@ LL |         v.push(shared.len());\n    |         |\n    |         mutable borrow occurs here\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/two-phase-reservation-sharing-interference-future-compat-lint.rs:18:13\n    |\n LL |     #![warn(mutable_borrow_reservation_conflict)]\n@@ -28,7 +28,7 @@ LL |         v.push(shared.len());\n    |         |\n    |         mutable borrow occurs here\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/two-phase-reservation-sharing-interference-future-compat-lint.rs:31:13\n    |\n LL |     #![deny(mutable_borrow_reservation_conflict)]"}, {"sha": "211937c9d6fafec2259d455cdc7189c389b60089", "filename": "src/test/ui/cast-char.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fcast-char.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fcast-char.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast-char.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: only `u8` can be cast into `char`\n LL |     const XYZ: char = 0x1F888 as char;\n    |                       ^^^^^^^^^^^^^^^ help: use a `char` literal instead: `'\\u{1F888}'`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/cast-char.rs:1:9\n    |\n LL | #![deny(overflowing_literals)]"}, {"sha": "67cb6530e3831c7a2989b645457bbb9b0020e958", "filename": "src/test/ui/conditional-compilation/cfg-attr-empty-is-unused.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused attribute\n LL | #[cfg_attr(FALSE,)]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/cfg-attr-empty-is-unused.rs:5:9\n    |\n LL | #![deny(unused)]"}, {"sha": "d2c613845a0ff98930d4ffd7a51e943db4a241ce", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-true.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -30,7 +30,7 @@ warning: unused `MustUseDeprecated` that must be used\n LL |     MustUseDeprecated::new();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/cfg-attr-multi-true.rs:7:9\n    |\n LL | #![warn(unused_must_use)]"}, {"sha": "3fb7c8c48b90d4fd8885be9bf4c3480e8dc70a35", "filename": "src/test/ui/const-generics/const-parameter-uppercase-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ error: const parameter `x` should have an upper case name\n LL | fn noop<const x: u32>() {\n    |               ^ help: convert the identifier to upper case (notice the capitalization): `X`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-parameter-uppercase-lint.rs:4:9\n    |\n LL | #![deny(non_upper_case_globals)]"}, {"sha": "59e116970150a819ab74ac8ad02f8225d314b1f6", "filename": "src/test/ui/consts/array-literal-index-oob.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: index out of bounds: the len is 3 but the index is 4\n LL |     &{ [1, 2, 3][4] };\n    |        ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/array-literal-index-oob.rs:4:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "104197fa17fc6073a3b065c9eb67f01c6618f7bf", "filename": "src/test/ui/consts/assoc_const_generic_impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fassoc_const_generic_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fassoc_const_generic_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fassoc_const_generic_impl.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     const I_AM_ZERO_SIZED: ()  = [()][std::mem::size_of::<Self>()];\n    |                                  |\n    |                                  index out of bounds: the len is 1 but the index is 4\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/assoc_const_generic_impl.rs:3:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "b78ac38d7e7e26673b0222fd4ac63aae56c7a13c", "filename": "src/test/ui/consts/const-err-early.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err-early.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err-early.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err-early.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | pub const A: i8 = -std::i8::MIN;\n    |                   |\n    |                   attempt to negate with overflow\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-err-early.rs:1:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "65427b8a1b289b91cffab39fedfb09a849f1a4ec", "filename": "src/test/ui/consts/const-err-multi.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err-multi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err-multi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err-multi.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | pub const A: i8 = -std::i8::MIN;\n    |                   |\n    |                   attempt to negate with overflow\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-err-multi.rs:1:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "069521e6e4541ef4d29b774f85faa6c1a2d11f36", "filename": "src/test/ui/consts/const-err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | const FOO: u8 = [5u8][1];\n    |                 |\n    |                 index out of bounds: the len is 1 but the index is 1\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-err.rs:5:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "a76b6d1775f04fa8f53d25d171b180b184e65cc5", "filename": "src/test/ui/consts/const-err2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: this expression will panic at runtime\n LL |     let a = -std::i8::MIN;\n    |             ^^^^^^^^^^^^^ attempt to negate with overflow\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-err2.rs:11:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "02b912e928c8088f9bf0758a455220aef59d3681", "filename": "src/test/ui/consts/const-err3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-err3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err3.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: attempt to negate with overflow\n LL |     let a = -std::i8::MIN;\n    |             ^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-err3.rs:11:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "c72a1ed40c5d4e3c289480e3b3e5f5548e1054a7", "filename": "src/test/ui/consts/const-eval/conditional_array_execution.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n    |                   |\n    |                   attempt to subtract with overflow\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/conditional_array_execution.rs:3:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "6f823005572b5de0bbbebae780c03d999d777539", "filename": "src/test/ui/consts/const-eval/const-eval-overflow2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -8,7 +8,7 @@ LL | |      i8::MIN - 1,\n LL | |      );\n    | |_______-\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-eval-overflow2.rs:8:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "f9a4e5aa96801328137cc325ed10d86fbdf45302", "filename": "src/test/ui/consts/const-eval/const-eval-overflow2b.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2b.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -8,7 +8,7 @@ LL | |      i8::MAX + 1,\n LL | |      );\n    | |_______-\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-eval-overflow2b.rs:8:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "6b906178026292ee1b51b0d166cb025a0b2a65bf", "filename": "src/test/ui/consts/const-eval/const-eval-overflow2c.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2c.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2c.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow2c.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -8,7 +8,7 @@ LL | |      i8::MIN * 2,\n LL | |      );\n    | |_______-\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const-eval-overflow2c.rs:8:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "8fadfabe41c93c802a71f635aa1e9574f9b9f791", "filename": "src/test/ui/consts/const-eval/index-out-of-bounds-never-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Findex-out-of-bounds-never-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Findex-out-of-bounds-never-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Findex-out-of-bounds-never-type.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     const VOID: ! = { let x = 0 * std::mem::size_of::<T>(); [][x] };\n    |                                                             |\n    |                                                             index out of bounds: the len is 0 but the index is 0\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/index-out-of-bounds-never-type.rs:4:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "668d061b799d040a8b61b34484eba4d9d1e06e29", "filename": "src/test/ui/consts/const-eval/issue-43197.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     const X: u32 = 0 - 1;\n    |                    |\n    |                    attempt to subtract with overflow\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-43197.rs:3:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "d09a295264c629bf7d392e49a7dc0de21cf94ed4", "filename": "src/test/ui/consts/const-eval/panic-assoc-never-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     const VOID: ! = panic!();\n    |                     |\n    |                     the evaluated program panicked at 'explicit panic', $DIR/panic-assoc-never-type.rs:11:21\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/panic-assoc-never-type.rs:4:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "3daad0a2fdd8cc8acb00c57dbb704fffdb261596", "filename": "src/test/ui/consts/const-eval/panic-never-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | const VOID: ! = panic!();\n    |                 |\n    |                 the evaluated program panicked at 'explicit panic', $DIR/panic-never-type.rs:8:17\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/panic-never-type.rs:4:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "08ae5c7a32b65f81258193581c931d2e418688ef", "filename": "src/test/ui/consts/const-eval/promoted_errors.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: this expression will panic at runtime\n LL |     let _x = 0u32 - 1;\n    |              ^^^^^^^^ attempt to subtract with overflow\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/promoted_errors.rs:5:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "d1a9cb958e1553d9e10111552c3af5904067b935", "filename": "src/test/ui/consts/const-eval/promoted_errors2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: attempt to subtract with overflow\n LL |     println!(\"{}\", 0u32 - 1);\n    |                    ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/promoted_errors2.rs:5:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "ded2df4e013a34459b9951be9be7d201809d8637", "filename": "src/test/ui/consts/const-eval/pub_const_err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | pub const Z: u32 = 0 - 1;\n    |                    |\n    |                    attempt to subtract with overflow\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/pub_const_err.rs:2:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "570a8e49319a2e6ae128501388dc94bf111300aa", "filename": "src/test/ui/consts/const-eval/pub_const_err_bin.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err_bin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err_bin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpub_const_err_bin.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | pub const Z: u32 = 0 - 1;\n    |                    |\n    |                    attempt to subtract with overflow\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/pub_const_err_bin.rs:2:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "4d9d258f80890a23afa695528fc0a3fe5b72c34d", "filename": "src/test/ui/consts/const-eval/ub-nonnull.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -18,7 +18,7 @@ LL | |     mem::transmute(out_of_bounds_ptr)\n LL | | } };\n    | |____-\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/ub-nonnull.rs:14:8\n    |\n LL | #[deny(const_err)] // this triggers a `const_err` so validation does not even happen"}, {"sha": "c98e206e88c240c8c7a45106274200cb6856eb71", "filename": "src/test/ui/consts/const-eval/validate_uninhabited_zsts.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -10,7 +10,7 @@ LL |     unsafe { std::mem::transmute(()) }\n LL | const FOO: [Empty; 3] = [foo(); 3];\n    | -----------------------------------\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/validate_uninhabited_zsts.rs:13:8\n    |\n LL | #[warn(const_err)]"}, {"sha": "15e13942481c970723ab35e99f73e6c1ad732b7e", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -64,7 +64,7 @@ LL | |\n LL | | };\n    | |__-\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/const_refers_to_static.rs:2:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "86f27784701c6a81c707b941aa5d965160509115", "filename": "src/test/ui/consts/miri_unleashed/mutable_const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -16,7 +16,7 @@ LL | |     }\n LL | | };\n    | |__-\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/mutable_const.rs:5:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "dcd37345fdd5821490edeeb1b1260c7e0ff59308", "filename": "src/test/ui/consts/miri_unleashed/non_const_fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fnon_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fnon_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fnon_const_fn.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ LL | const C: () = foo();\n    |               |\n    |               calling non-const function `foo`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/non_const_fn.rs:4:9\n    |\n LL | #![warn(const_err)]"}, {"sha": "e8c2156742f0d0fa3dc5f3a4789ab257a26ed057", "filename": "src/test/ui/deprecation/deprecation-lint-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'deprecation_lint::deprecated': text\n LL |     macro_test!();\n    |     ^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deprecation-lint-2.rs:4:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "7cc06a23b0fe35e41cfad8200fcbdf79c502f801", "filename": "src/test/ui/deprecation/deprecation-lint-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-3.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'deprecation_lint::deprecated_text': text\n LL |     macro_test_arg_nested!(deprecated_text);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deprecation-lint-3.rs:4:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "b71f90014fe6e213502ee34af99d53b9d58a826c", "filename": "src/test/ui/deprecation/deprecation-lint-nested.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-nested.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'loud::DeprecatedType'\n LL |     struct Foo(DeprecatedType);\n    |                ^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deprecation-lint-nested.rs:1:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "362a901d77d44755853b94ad7759964d366005ac", "filename": "src/test/ui/deprecation/deprecation-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'deprecation_lint::deprecated': text\n LL |         deprecated();\n    |         ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deprecation-lint.rs:4:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "4aff11ad66f18d8b96832c579a699a9ead3d0137", "filename": "src/test/ui/deprecation/rustc_deprecation-in-future.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of item 'S' that will be deprecated in future version 99.99.99: effec\n LL |     let _ = S;\n    |             ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/rustc_deprecation-in-future.rs:3:9\n    |\n LL | #![deny(deprecated_in_future)]"}, {"sha": "b60d420b546895dd60c726c7b8250ef3d21885a0", "filename": "src/test/ui/deprecation/suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fsuggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdeprecation%2Fsuggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fsuggestion.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'Foo::deprecated': replaced by `replacement`\n LL |     foo.deprecated();\n    |         ^^^^^^^^^^ help: replace the use of the deprecated item: `replacement`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/suggestion.rs:7:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "1fd7d58c86a376f4c1889bc81854cd562d068d4b", "filename": "src/test/ui/derives/deriving-meta-empty-trait-list.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-empty-trait-list.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-empty-trait-list.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-empty-trait-list.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused attribute\n LL | #[derive()]\n    | ^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deriving-meta-empty-trait-list.rs:1:9\n    |\n LL | #![deny(unused)]"}, {"sha": "8ab2e4cba7493b4ff706ce44baaa11b9043ca2ba", "filename": "src/test/ui/derives/deriving-with-repr-packed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fderives%2Fderiving-with-repr-packed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fderives%2Fderiving-with-repr-packed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderiving-with-repr-packed.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `#[derive]` can't be used on a `#[repr(packed)]` struct with type or cons\n LL | #[derive(Copy, Clone, PartialEq, Eq)]\n    |                ^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deriving-with-repr-packed.rs:1:9\n    |\n LL | #![deny(safe_packed_borrows)]"}, {"sha": "2d52ea3f6c20e41cae1ddd6002081350e1946da9", "filename": "src/test/ui/duplicate_entry_error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fduplicate_entry_error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fduplicate_entry_error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate_entry_error.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL | |     loop {}\n LL | | }\n    | |_^\n    |\n-   = note: first defined in crate `std` (which `duplicate_entry_error` depends on)\n+   = note: the lang item is first defined in crate `std` (which `duplicate_entry_error` depends on)\n \n error: aborting due to previous error\n "}, {"sha": "32f06b62bb41acacc04eda5b89f6e19096d6be74", "filename": "src/test/ui/dyn-keyword/dyn-2015-edition-keyword-ident-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2015-edition-keyword-ident-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2015-edition-keyword-ident-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2015-edition-keyword-ident-lint.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `dyn` is a keyword in the 2018 edition\n LL |     pub mod dyn {\n    |             ^^^ help: you can use a raw identifier to stay compatible: `r#dyn`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/dyn-2015-edition-keyword-ident-lint.rs:10:9\n    |\n LL | #![deny(keyword_idents)]"}, {"sha": "dd39847d49afa9a211d5b2bea0434930cdcd9dbe", "filename": "src/test/ui/editions/edition-extern-crate-allowed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused extern crate\n LL | extern crate edition_extern_crate_allowed;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/edition-extern-crate-allowed.rs:5:9\n    |\n LL | #![warn(rust_2018_idioms)]"}, {"sha": "1df582ee06c42f97a43f6c021931b1872f8954cd", "filename": "src/test/ui/editions/edition-raw-pointer-method-2015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Feditions%2Fedition-raw-pointer-method-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Feditions%2Fedition-raw-pointer-method-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-raw-pointer-method-2015.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: type annotations needed\n LL |     let _ = y.is_null();\n    |               ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/edition-raw-pointer-method-2015.rs:5:8\n    |\n LL | #[deny(warnings)]"}, {"sha": "bb4e928ad1583a66c7629942b08717b889b47a01", "filename": "src/test/ui/enable-unstable-lib-feature.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: function `BOGUS` should have a snake case name\n LL | pub fn BOGUS() { }\n    |        ^^^^^ help: convert the identifier to snake case: `bogus`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/enable-unstable-lib-feature.rs:6:9\n    |\n LL | #![deny(non_snake_case)] // To trigger a hard error"}, {"sha": "3aa88df29f11b2652472bd7e18751fcce1b9d24c", "filename": "src/test/ui/enum/enum-discrim-too-small2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-too-small2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: literal out of range for `i8`\n LL |     Ci8 = 223,\n    |           ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/enum-discrim-too-small2.rs:1:9\n    |\n LL | #![deny(overflowing_literals)]"}, {"sha": "cf8321d5f3a44be5950abcfebcda5bd2fca4ff26", "filename": "src/test/ui/enum/enum-size-variance.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fenum%2Fenum-size-variance.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fenum%2Fenum-size-variance.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-size-variance.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: enum variant is more than three times larger (32 bytes) than the next l\n LL |     L(i64, i64, i64, i64),\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/enum-size-variance.rs:3:9\n    |\n LL | #![warn(variant_size_differences)]"}, {"sha": "577c49032d799b3659c71e27cb4e0c29bacc2a9a", "filename": "src/test/ui/error-codes/E0001.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ferror-codes%2FE0001.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ferror-codes%2FE0001.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0001.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         _ => {/* ... */}\n    |         ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/E0001.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "29981991ee02b7cab6c264edac67ba9cbda4ffcf", "filename": "src/test/ui/error-codes/E0152.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ferror-codes%2FE0152.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ferror-codes%2FE0152.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0152.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error[E0152]: found duplicate lang item `arc`\n LL | struct Foo;\n    | ^^^^^^^^^^^\n    |\n-   = note: first defined in crate `alloc` (which `std` depends on)\n+   = note: the lang item is first defined in crate `alloc` (which `std` depends on)\n \n error: aborting due to previous error\n "}, {"sha": "c6b373e3f13c41ea78efd1e91ae8bd65aa5d7fc9", "filename": "src/test/ui/expr_attr_paren_order.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fexpr_attr_paren_order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fexpr_attr_paren_order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr_attr_paren_order.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: variable `X` should have a snake case name\n LL |             let X = 0;\n    |                 ^ help: convert the identifier to snake case (notice the capitalization): `x`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_attr_paren_order.rs:17:17\n    |\n LL |         #![deny(non_snake_case)]"}, {"sha": "94c7deaa80de8957095cb9d54454724e4177c0f3", "filename": "src/test/ui/extern-flag/public-and-private.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fextern-flag%2Fpublic-and-private.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fextern-flag%2Fpublic-and-private.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern-flag%2Fpublic-and-private.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: type `somedep::S` from private dependency 'somedep' in public interface\n LL |     pub field: somedep::S,\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/public-and-private.rs:5:9\n    |\n LL | #![deny(exported_private_dependencies)]"}, {"sha": "96c87a675a9faac92c60c0f8ecf6fec3975e42bd", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unknown lint: `x5400`\n LL | #![warn(x5400)]\n    |         ^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:36:28\n    |\n LL | #![warn(unused_attributes, unknown_lints)]\n@@ -250,7 +250,7 @@ warning: unused attribute\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:36:9\n    |\n LL | #![warn(unused_attributes, unknown_lints)]"}, {"sha": "ad97741dae4d07afca9b1fbea91095a753cda02f", "filename": "src/test/ui/feature-gates/feature-gate-feature-gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-feature-gate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unstable feature\n LL | #![feature(intrinsics)]\n    |            ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/feature-gate-feature-gate.rs:1:11\n    |\n LL | #![forbid(unstable_features)]"}, {"sha": "9a6f898f2a5a8ce508ad9f107840e9dcffcc28fc", "filename": "src/test/ui/feature-gates/feature-gate-no-debug-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug-2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated attribute `no_debug`: the `#[no_debug]` attribute was a\n LL | #[no_debug]\n    | ^^^^^^^^^^^ help: remove this attribute\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/feature-gate-no-debug-2.rs:1:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "64f865e5b70aeeaf23bca25c8773648a9fd8f898", "filename": "src/test/ui/fn_must_use.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffn_must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffn_must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn_must_use.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused return value of `need_to_use_this_value` that must be used\n LL |     need_to_use_this_value();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/fn_must_use.rs:3:9\n    |\n LL | #![warn(unused_must_use)]"}, {"sha": "a19051e8bc0b281a6306e85aca2d345e94312399", "filename": "src/test/ui/future-incompatible-lint-group.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffuture-incompatible-lint-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Ffuture-incompatible-lint-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffuture-incompatible-lint-group.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: anonymous parameters are deprecated and will be removed in the next editi\n LL |     fn f(u8) {}\n    |          ^^ help: try naming the parameter or explicitly ignoring it: `_: u8`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/future-incompatible-lint-group.rs:1:9\n    |\n LL | #![deny(future_incompatible)]"}, {"sha": "ab2ad541e8640916f62bd651c080a4c6637a9e79", "filename": "src/test/ui/generic/generic-no-mangle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fgeneric%2Fgeneric-no-mangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fgeneric%2Fgeneric-no-mangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric%2Fgeneric-no-mangle.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | #[no_mangle]\n LL | pub fn foo<T>() {}\n    | ^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/generic-no-mangle.rs:1:9\n    |\n LL | #![deny(no_mangle_generic_items)]"}, {"sha": "1b9a2e4720d5f0e3f62ca9f8a9606560a143b41c", "filename": "src/test/ui/imports/extern-crate-used.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Fextern-crate-used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Fextern-crate-used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-crate-used.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused extern crate\n LL | extern crate core;\n    | ^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/extern-crate-used.rs:6:9\n    |\n LL | #![deny(unused_extern_crates)]"}, {"sha": "7b0d63574ec8e8c4d6d2442a65e3de359f8bb38c", "filename": "src/test/ui/imports/reexports.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -40,7 +40,7 @@ warning: glob import doesn't reexport anything because no candidate is public en\n LL |         pub use super::*;\n    |                 ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/reexports.rs:1:9\n    |\n LL | #![warn(unused_imports)]"}, {"sha": "69765b9227d6e03f3e739d63abd37b6f37ca3d4a", "filename": "src/test/ui/imports/unresolved-imports-used.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -52,7 +52,7 @@ error: unused import: `qux::quy`\n LL | use qux::quy;\n    |     ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unresolved-imports-used.rs:2:9\n    |\n LL | #![deny(unused_imports)]"}, {"sha": "7137a90e45956f30944d3b8ae02d2b7475d192f6", "filename": "src/test/ui/imports/unused-macro-use.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Funused-macro-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Funused-macro-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funused-macro-use.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused `#[macro_use]` import\n LL | #[macro_use]\n    | ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused-macro-use.rs:1:9\n    |\n LL | #![deny(unused)]"}, {"sha": "08128d794251be824fd0963d2459531b2b5f2250", "filename": "src/test/ui/imports/unused.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Funused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fimports%2Funused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funused.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused import: `super::f`\n LL |         pub(super) use super::f;\n    |                        ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused.rs:1:9\n    |\n LL | #![deny(unused)]"}, {"sha": "2998f05efbae405301141b8bc64d77eaa5d45f5b", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -3,7 +3,7 @@\n \n #![allow(unused)]\n #![deny(elided_lifetimes_in_paths)]\n-//~^ NOTE lint level defined here\n+//~^ NOTE the lint level is defined here\n \n use std::cell::{RefCell, Ref};\n "}, {"sha": "b729a15a29edd78d2e17d9df290d190f3f9d9e00", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -3,7 +3,7 @@\n \n #![allow(unused)]\n #![deny(elided_lifetimes_in_paths)]\n-//~^ NOTE lint level defined here\n+//~^ NOTE the lint level is defined here\n \n use std::cell::{RefCell, Ref};\n "}, {"sha": "1184f51680a0e52922ee7de2b6416abb29591626", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: hidden lifetime parameters in types are deprecated\n LL | fn foo(x: &Foo) {\n    |            ^^^- help: indicate the anonymous lifetime: `<'_>`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/elided-lifetimes.rs:5:9\n    |\n LL | #![deny(elided_lifetimes_in_paths)]"}, {"sha": "9d07eafcc8f20300db83d299818f05d63de7902c", "filename": "src/test/ui/invalid/invalid-plugin-attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Finvalid%2Finvalid-plugin-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Finvalid%2Finvalid-plugin-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid%2Finvalid-plugin-attr.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ error: unused attribute\n LL | #[plugin(bla)]\n    | ^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/invalid-plugin-attr.rs:1:9\n    |\n LL | #![deny(unused_attributes)]"}, {"sha": "2e91a598dce405800e38e40f5442f2a739f4f03b", "filename": "src/test/ui/issues/issue-10656.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-10656.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-10656.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10656.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -5,7 +5,7 @@ LL | / #![deny(missing_docs)]\n LL | | #![crate_type=\"lib\"]\n    | |____________________^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-10656.rs:1:9\n    |\n LL | #![deny(missing_docs)]"}, {"sha": "4d162eb77e725879e71ea638d717474ee730f0c3", "filename": "src/test/ui/issues/issue-12116.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-12116.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-12116.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12116.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         &IntList::Cons(val, box IntList::Nil)  => IntList::Cons(val, box IntList::Nil),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-12116.rs:5:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "aab2be78c9a4c6cbb0f9c7deb6d4e3fa1b26f855", "filename": "src/test/ui/issues/issue-12369.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-12369.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-12369.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12369.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         &[10,a, ref rest @ ..] => 10\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-12369.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "07ca56a566ff12a4b0ad7409529aae8300415c83", "filename": "src/test/ui/issues/issue-13727.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-13727.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-13727.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13727.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |     512 => print!(\"0b1111\\n\"),\n    |     ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-13727.rs:2:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "63680f6ca56a7d4fb372807d9936f04c07548d15", "filename": "src/test/ui/issues/issue-14221.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-14221.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-14221.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14221.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -21,7 +21,7 @@ LL |\n LL |             B => \"B\",\n    |             ^ unreachable pattern\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-14221.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "799991f7ee4baeaabac128e5ec1298ce9ad48986", "filename": "src/test/ui/issues/issue-14309.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-14309.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-14309.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14309.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,14 +4,14 @@ error: `extern` block uses type `A`, which is not FFI-safe\n LL |     fn foo(x: A);\n    |               ^ not FFI-safe\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-14309.rs:1:9\n    |\n LL | #![deny(improper_ctypes)]\n    |         ^^^^^^^^^^^^^^^\n    = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\n    = note: this struct has unspecified layout\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/issue-14309.rs:4:1\n    |\n LL | / struct A {\n@@ -27,7 +27,7 @@ LL |     fn bar(x: B);\n    |\n    = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\n    = note: this struct has unspecified layout\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/issue-14309.rs:4:1\n    |\n LL | / struct A {\n@@ -43,7 +43,7 @@ LL |     fn qux(x: A2);\n    |\n    = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\n    = note: this struct has unspecified layout\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/issue-14309.rs:4:1\n    |\n LL | / struct A {\n@@ -59,7 +59,7 @@ LL |     fn quux(x: B2);\n    |\n    = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\n    = note: this struct has unspecified layout\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/issue-14309.rs:4:1\n    |\n LL | / struct A {\n@@ -75,7 +75,7 @@ LL |     fn fred(x: D);\n    |\n    = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\n    = note: this struct has unspecified layout\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/issue-14309.rs:4:1\n    |\n LL | / struct A {"}, {"sha": "45f854f93ecb92bb56ba2bed822a04240efb8ba1", "filename": "src/test/ui/issues/issue-16250.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-16250.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-16250.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16250.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,15 +4,15 @@ error: `extern` block uses type `Foo`, which is not FFI-safe\n LL |     pub fn foo(x: (Foo));\n    |                    ^^^ not FFI-safe\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-16250.rs:1:9\n    |\n LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[deny(improper_ctypes)]` implied by `#[deny(warnings)]`\n    = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\n    = note: this struct has unspecified layout\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/issue-16250.rs:3:1\n    |\n LL | pub struct Foo;"}, {"sha": "4a8116b1ffdb97f98a11a6e59735461ac6eedb1d", "filename": "src/test/ui/issues/issue-17337.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-17337.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-17337.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17337.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'Foo::foo': text\n LL |     .foo();\n    |      ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-17337.rs:2:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "4c0aa0553ebd2fff0518598879108127dd4ab0d3", "filename": "src/test/ui/issues/issue-17718-const-naming.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: constant item is never used: `foo`\n LL | const foo: isize = 3;\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-17718-const-naming.rs:2:9\n    |\n LL | #![deny(warnings)]\n@@ -17,7 +17,7 @@ error: constant `foo` should have an upper case name\n LL | const foo: isize = 3;\n    |       ^^^ help: convert the identifier to upper case (notice the capitalization): `FOO`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-17718-const-naming.rs:2:9\n    |\n LL | #![deny(warnings)]"}, {"sha": "448208ef033f71a54b609f4341216db42d531b05", "filename": "src/test/ui/issues/issue-17999.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-17999.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-17999.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17999.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused variable: `x`\n LL |         let x = ();\n    |             ^ help: consider prefixing with an underscore: `_x`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-17999.rs:1:9\n    |\n LL | #![deny(unused_variables)]"}, {"sha": "3f3702551069f4aaee2d934609c43a522a7b3064", "filename": "src/test/ui/issues/issue-2150.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-2150.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-2150.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-2150.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     panic!();\n LL |     for x in &v { i += 1; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-2150.rs:1:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "9c3b2cbe6c79680982cd7a0c3a3d995fa8423f3a", "filename": "src/test/ui/issues/issue-22599.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-22599.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-22599.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22599.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused variable: `a`\n LL |     v = match 0 { a => 0 };\n    |                   ^ help: consider prefixing with an underscore: `_a`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-22599.rs:1:9\n    |\n LL | #![deny(unused_variables)]"}, {"sha": "6bf6348631a7030170624f33ca2cb527a8030800", "filename": "src/test/ui/issues/issue-27060.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-27060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-27060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27060.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: borrow of packed field is unsafe and requires unsafe function or block (e\n LL |     let _ = &good.data;\n    |             ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-27060.rs:13:8\n    |\n LL | #[deny(safe_packed_borrows)]"}, {"sha": "59d64bc256b507f4e027dc12abe9bd137d6aabc3", "filename": "src/test/ui/issues/issue-30240-b.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-30240-b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-30240-b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30240-b.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         \"hello\" => {}\n    |         ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-30240-b.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "770ed3d4f0152e7954ac756ea90e620a447186da", "filename": "src/test/ui/issues/issue-30302.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-30302.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-30302.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30302.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -15,7 +15,7 @@ LL |\n LL |         _ => false\n    |         ^ unreachable pattern\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-30302.rs:4:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "b299e99a3a90884aa124a9e8e8d116f54c43398d", "filename": "src/test/ui/issues/issue-30730.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-30730.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-30730.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30730.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused import: `std::thread`\n LL | use std::thread;\n    |     ^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-30730.rs:2:9\n    |\n LL | #![deny(warnings)]"}, {"sha": "7d349144456374732b7918f3c02b56d3de10cb0f", "filename": "src/test/ui/issues/issue-31221.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-31221.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-31221.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31221.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |         Var3 => (),\n LL |         Var2 => (),\n    |         ^^^^ unreachable pattern\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-31221.rs:4:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "efa77f5ceb8cae606dbfd5666901997e32e429ba", "filename": "src/test/ui/issues/issue-33140-traitobject-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | unsafe impl Trait for dyn (::std::marker::Send) + Sync { }\n LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-33140-traitobject-crate.rs:3:9\n    |\n LL | #![warn(order_dependent_trait_objects)]"}, {"sha": "1aafa512d835c36c92584cdf576f815a865a8fc9", "filename": "src/test/ui/issues/issue-37515.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-37515.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-37515.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37515.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: type alias is never used: `Z`\n LL | type Z = dyn for<'x> Send;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-37515.rs:3:9\n    |\n LL | #![warn(unused)]"}, {"sha": "b6e57afcd1292c92495ba25df382477fa0d4371c", "filename": "src/test/ui/issues/issue-41255.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-41255.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-41255.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41255.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: floating-point types cannot be used in patterns\n LL |         5.0 => {},\n    |         ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-41255.rs:6:11\n    |\n LL | #![forbid(illegal_floating_point_literal_pattern)]"}, {"sha": "321698e763696d6a593d81707a57f158a47754d8", "filename": "src/test/ui/issues/issue-45107-unnecessary-unsafe-in-closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-45107-unnecessary-unsafe-in-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-45107-unnecessary-unsafe-in-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45107-unnecessary-unsafe-in-closure.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |         let f = |v: &mut Vec<_>| {\n LL |             unsafe {\n    |             ^^^^^^ unnecessary `unsafe` block\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-45107-unnecessary-unsafe-in-closure.rs:1:8\n    |\n LL | #[deny(unused_unsafe)]"}, {"sha": "1e5e730ee649fd997411903477b938b253adb388", "filename": "src/test/ui/issues/issue-46576.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-46576.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-46576.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46576.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused import: `BufRead`\n LL | use std::io::{BufRead, BufReader, Read};\n    |               ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-46576.rs:4:9\n    |\n LL | #![deny(unused_imports)]"}, {"sha": "5acc4f16e9fc2ebaa56c21708e39332a2ba3dbef", "filename": "src/test/ui/issues/issue-48131.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-48131.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-48131.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-48131.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unnecessary `unsafe` block\n LL |         unsafe { /* unnecessary */ }\n    |         ^^^^^^ unnecessary `unsafe` block\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-48131.rs:3:9\n    |\n LL | #![deny(unused_unsafe)]"}, {"sha": "5b253750db0b64e54439815b0a539063aa3d4c2d", "filename": "src/test/ui/issues/issue-49934.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-49934.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-49934.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49934.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(stmt_expr_attributes)]\n-#![warn(unused_attributes)] //~ NOTE lint level defined here\n+#![warn(unused_attributes)] //~ NOTE the lint level is defined here\n \n fn main() {\n     // fold_stmt (Item)"}, {"sha": "64bf5214e6dd4e0fce306fe7722c8a98ff2a9f9b", "filename": "src/test/ui/issues/issue-49934.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-49934.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-49934.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49934.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ warning: unused attribute\n LL |     #[derive(Debug)]\n    |     ^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-49934.rs:4:9\n    |\n LL | #![warn(unused_attributes)]"}, {"sha": "cb6ca24c7124aa4087f2d8fab90be5775e86f35f", "filename": "src/test/ui/issues/issue-50781.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-50781.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-50781.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50781.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: the trait `X` cannot be made into an object\n LL |     fn foo(&self) where Self: Trait;\n    |        ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-50781.rs:1:9\n    |\n LL | #![deny(where_clauses_object_safety)]"}, {"sha": "91b81ba6943adde7191b7d798a2339d89337b161", "filename": "src/test/ui/issues/issue-55511.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55511.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: to use a constant of type `std::cell::Cell` in a pattern, `std::cell::C\n LL |         <() as Foo<'static>>::C => { }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-55511.rs:1:9\n    |\n LL | #![warn(indirect_structural_match)]"}, {"sha": "2cef3126b9ee0a7adbd1f71672a04a23ff9fb416", "filename": "src/test/ui/issues/issue-56685.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-56685.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-56685.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56685.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused variable: `x`\n LL |         E::A(x) | E::B(x) => {}\n    |              ^         ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-56685.rs:2:9\n    |\n LL | #![deny(unused_variables)]"}, {"sha": "26efdf6dbaf348ba3f21d761fdb1fe79b9ccbeac", "filename": "src/test/ui/issues/issue-57472.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |             Punned { bar: [_], .. } => println!(\"bar\"),\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-57472.rs:2:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "95b7938ae03832baa5364707e002afe45d04430c", "filename": "src/test/ui/issues/issue-59896.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-59896.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-59896.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59896.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL | struct S;\n LL |     use S;\n    |         ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-59896.rs:1:9\n    |\n LL | #![deny(unused_imports)]"}, {"sha": "79cb6cfc3549411c3ddd0c373f36f9dbfe51c798", "filename": "src/test/ui/issues/issue-60622.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-60622.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-60622.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-60622.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     fn a(&self) {}\n LL |     b.a::<'_, T>();\n    |           ^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-60622.rs:3:9\n    |\n LL | #![deny(warnings)]"}, {"sha": "c7411e27c255aca47014b1d3ed2e66546f31ba17", "filename": "src/test/ui/issues/issue-6804.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-6804.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-6804.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6804.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: floating-point types cannot be used in patterns\n LL |         NAN => {},\n    |         ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-6804.rs:4:9\n    |\n LL | #![deny(illegal_floating_point_literal_pattern)]"}, {"sha": "bb0221ecb86b448342489a288294386ebd84008f", "filename": "src/test/ui/issues/issue-7246.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-7246.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-7246.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7246.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     return;\n LL |     if *ptr::null() {};\n    |     ^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-7246.rs:1:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "6b1d74094a10b2edb5ffd24facf63a193fa22110", "filename": "src/test/ui/issues/issue-8460-const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: attempt to divide with overflow\n LL |     assert!(thread::spawn(move|| { isize::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-8460-const.rs:4:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "63b9123e9509774ccbb1666f5cce24840fc6dea0", "filename": "src/test/ui/issues/issue-8460-const2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: attempt to divide with overflow\n LL |     assert!(thread::spawn(move|| { isize::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-8460-const2.rs:4:9\n    |\n LL | #![deny(const_err)]"}, {"sha": "f7b9b9c613ae01478e7fbebba69e07d35027ed0f", "filename": "src/test/ui/lint/dead-code/basic.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fbasic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fbasic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fbasic.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: function is never used: `foo`\n LL | fn foo() {\n    |    ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/basic.rs:1:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "ed9a7ccd14b21dffce68f8528fca6b876de67684", "filename": "src/test/ui/lint/dead-code/empty-unused-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fempty-unused-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fempty-unused-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fempty-unused-enum.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: enum is never used: `E`\n LL | enum E {}\n    |      ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/empty-unused-enum.rs:1:9\n    |\n LL | #![deny(unused)]"}, {"sha": "09b6d08eb8fb8e596998f873ef9a02dcf83c5a07", "filename": "src/test/ui/lint/dead-code/impl-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fimpl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fimpl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fimpl-trait.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: type alias is never used: `Unused`\n LL | type Unused = ();\n    | ^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/impl-trait.rs:1:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "0a08aa6da9ac0642f6f44b2c3f908481376ea525", "filename": "src/test/ui/lint/dead-code/lint-dead-code-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-1.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: struct is never constructed: `Bar`\n LL |     pub struct Bar;\n    |                ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-dead-code-1.rs:5:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "b01ba57f9858005346c9f710093e40682b5724e2", "filename": "src/test/ui/lint/dead-code/lint-dead-code-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: function is never used: `dead_fn`\n LL | fn dead_fn() {}\n    |    ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-dead-code-2.rs:2:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "aab25c481e6c7073ee030921249d16857a6dda19", "filename": "src/test/ui/lint/dead-code/lint-dead-code-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: struct is never constructed: `Foo`\n LL | struct Foo;\n    |        ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-dead-code-3.rs:3:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "3905d1a06bdfe7642f887ef072738cb8b34ba07e", "filename": "src/test/ui/lint/dead-code/lint-dead-code-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-4.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: field is never read: `b`\n LL |     b: bool,\n    |     ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-dead-code-4.rs:3:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "c0de469102077ee1a7e33a8e2a78bbc04be493f9", "filename": "src/test/ui/lint/dead-code/lint-dead-code-5.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-5.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: variant is never constructed: `Variant2`\n LL |     Variant2\n    |     ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-dead-code-5.rs:2:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "fd74405f2b648eace21e61f5103cd923023163a9", "filename": "src/test/ui/lint/dead-code/newline-span.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: function is never used: `unused`\n LL | fn unused() {\n    |    ^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/newline-span.rs:1:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "b2acd5d4213b38590078956d8b9032d1405e647b", "filename": "src/test/ui/lint/dead-code/type-alias.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Ftype-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Ftype-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Ftype-alias.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: type alias is never used: `Unused`\n LL | type Unused = u8;\n    | ^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/type-alias.rs:1:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "9f368fdd2f8167b8705ac19642fd360afa6f2962", "filename": "src/test/ui/lint/dead-code/unused-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-enum.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: struct is never constructed: `F`\n LL | struct F;\n    |        ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused-enum.rs:1:9\n    |\n LL | #![deny(unused)]"}, {"sha": "b93d6d4ac1866ad0d70d7f2e7f69333dafcc8c1c", "filename": "src/test/ui/lint/dead-code/unused-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-struct-variant.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: variant is never constructed: `Bar`\n LL |     Bar(B),\n    |     ^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused-struct-variant.rs:1:9\n    |\n LL | #![deny(unused)]"}, {"sha": "a547f5af4b082e411f1692368ddbf8c13f6ce585", "filename": "src/test/ui/lint/dead-code/unused-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-variant.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: variant is never constructed: `Variant1`\n LL |     Variant1,\n    |     ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused-variant.rs:1:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "2c63e60d67609d54fac4951b860fb1103e639e5c", "filename": "src/test/ui/lint/dead-code/with-core-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwith-core-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwith-core-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwith-core-crate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: function is never used: `foo`\n LL | fn foo() {\n    |    ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/with-core-crate.rs:1:9\n    |\n LL | #![deny(dead_code)]"}, {"sha": "f5768626136e00acb5194f1621f3cbf531fc07cb", "filename": "src/test/ui/lint/inclusive-range-pattern-syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: `...` range patterns are deprecated\n LL |         1...2 => {}\n    |          ^^^ help: use `..=` for an inclusive range\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/inclusive-range-pattern-syntax.rs:4:9\n    |\n LL | #![warn(ellipsis_inclusive_range_patterns)]"}, {"sha": "5a999a4fa0db9e1ba9911497a4400f7e4f2c0146", "filename": "src/test/ui/lint/inline-trait-and-foreign-items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -20,7 +20,7 @@ warning: `#[inline]` is ignored on constants\n LL |     #[inline]\n    |     ^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/inline-trait-and-foreign-items.rs:4:9\n    |\n LL | #![warn(unused_attributes)]"}, {"sha": "b07474bb48673774ba80bd58182699eb4f88d808", "filename": "src/test/ui/lint/issue-47390-unused-variable-in-struct-pattern.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused variable: `i_think_continually`\n LL |     let i_think_continually = 2;\n    |         ^^^^^^^^^^^^^^^^^^^ help: consider prefixing with an underscore: `_i_think_continually`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:5:9\n    |\n LL | #![warn(unused)] // UI tests pass `-A unused` (#43896)\n@@ -49,7 +49,7 @@ warning: value assigned to `hours_are_suns` is never read\n LL |         hours_are_suns = false;\n    |         ^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:5:9\n    |\n LL | #![warn(unused)] // UI tests pass `-A unused` (#43896)\n@@ -107,7 +107,7 @@ LL |     let mut mut_unused_var = 1;\n    |         |\n    |         help: remove this `mut`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:5:9\n    |\n LL | #![warn(unused)] // UI tests pass `-A unused` (#43896)"}, {"sha": "840ecc0ce09ee3228c9d8256be08fc36095059a3", "filename": "src/test/ui/lint/issue-54180-unused-ref-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fissue-54180-unused-ref-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fissue-54180-unused-ref-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-54180-unused-ref-field.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |         E::Variant { ref field } => (),\n    |                      |\n    |                      help: try ignoring the field: `field: _`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-54180-unused-ref-field.rs:3:9\n    |\n LL | #![deny(unused)]"}, {"sha": "b6d532c31017c7ceb9da30a79d3f84c4aaca7951", "filename": "src/test/ui/lint/issue-54538-unused-parens-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ error: unnecessary parentheses around pattern\n LL |     let (a) = 0;\n    |         ^^^ help: remove these parentheses\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-54538-unused-parens-lint.rs:9:9\n    |\n LL | #![deny(unused_parens)]"}, {"sha": "09dc3640f99a618121106fd91d24528ddaf56cce", "filename": "src/test/ui/lint/issue-66362-no-snake-case-warning-for-field-puns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-66362-no-snake-case-warning-for-field-puns.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: structure field `lowerCamelCaseName` should have a snake case name\n LL |         lowerCamelCaseName: bool,\n    |         ^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `lower_camel_case_name`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-66362-no-snake-case-warning-for-field-puns.rs:1:9\n    |\n LL | #![deny(non_snake_case)]"}, {"sha": "583579140966027e90235e5ff0eb36e78df46150", "filename": "src/test/ui/lint/lint-attr-non-item-node.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-attr-non-item-node.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-attr-non-item-node.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-attr-non-item-node.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |         break;\n LL |         \"unreachable\";\n    |         ^^^^^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-attr-non-item-node.rs:4:12\n    |\n LL |     #[deny(unreachable_code)]"}, {"sha": "0926dada05d5af629e2514093415643e3a97e189", "filename": "src/test/ui/lint/lint-change-warnings.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-change-warnings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-change-warnings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-change-warnings.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: denote infinite loops with `loop { ... }`\n LL |     while true {}\n    |     ^^^^^^^^^^ help: use `loop`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-change-warnings.rs:1:9\n    |\n LL | #![deny(warnings)]\n@@ -25,7 +25,7 @@ error: denote infinite loops with `loop { ... }`\n LL |     while true {}\n    |     ^^^^^^^^^^ help: use `loop`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-change-warnings.rs:18:10\n    |\n LL | #[forbid(warnings)]"}, {"sha": "297ac2237a53fb97f7d3beeb2b9fe951dc984691", "filename": "src/test/ui/lint/lint-ctypes-enum.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,14 +4,14 @@ error: `extern` block uses type `U`, which is not FFI-safe\n LL |    fn uf(x: U);\n    |             ^ not FFI-safe\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-ctypes-enum.rs:3:9\n    |\n LL | #![deny(improper_ctypes)]\n    |         ^^^^^^^^^^^^^^^\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n    = note: enum has no representation hint\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/lint-ctypes-enum.rs:9:1\n    |\n LL | enum U { A }\n@@ -25,7 +25,7 @@ LL |    fn bf(x: B);\n    |\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n    = note: enum has no representation hint\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/lint-ctypes-enum.rs:10:1\n    |\n LL | enum B { C, D }\n@@ -39,7 +39,7 @@ LL |    fn tf(x: T);\n    |\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n    = note: enum has no representation hint\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/lint-ctypes-enum.rs:11:1\n    |\n LL | enum T { E, F, G }"}, {"sha": "9821f858d9caf26dd995b4d5242bea3186a5005a", "filename": "src/test/ui/lint/lint-ctypes.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-ctypes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-ctypes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,14 +4,14 @@ error: `extern` block uses type `Foo`, which is not FFI-safe\n LL |     pub fn ptr_type1(size: *const Foo);\n    |                            ^^^^^^^^^^ not FFI-safe\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-ctypes.rs:4:9\n    |\n LL | #![deny(improper_ctypes)]\n    |         ^^^^^^^^^^^^^^^\n    = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\n    = note: this struct has unspecified layout\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/lint-ctypes.rs:24:1\n    |\n LL | pub struct Foo;\n@@ -25,7 +25,7 @@ LL |     pub fn ptr_type2(size: *const Foo);\n    |\n    = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\n    = note: this struct has unspecified layout\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/lint-ctypes.rs:24:1\n    |\n LL | pub struct Foo;\n@@ -117,7 +117,7 @@ LL |     pub fn zero_size(p: ZeroSize);\n    |\n    = help: consider adding a member to this struct\n    = note: this struct has no fields\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/lint-ctypes.rs:20:1\n    |\n LL | pub struct ZeroSize;\n@@ -130,7 +130,7 @@ LL |     pub fn zero_size_phantom(p: ZeroSizeWithPhantomData);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe\n    |\n    = note: composed only of `PhantomData`\n-note: type defined here\n+note: the type is defined here\n   --> $DIR/lint-ctypes.rs:43:1\n    |\n LL | pub struct ZeroSizeWithPhantomData(::std::marker::PhantomData<i32>);"}, {"sha": "ccb139e0ed61565a8b583cad19fe288c08c91389", "filename": "src/test/ui/lint/lint-directives-on-use-items-issue-10534.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-directives-on-use-items-issue-10534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-directives-on-use-items-issue-10534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-directives-on-use-items-issue-10534.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused import: `a::x`\n LL |     use a::x;\n    |         ^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-directives-on-use-items-issue-10534.rs:1:9\n    |\n LL | #![deny(unused_imports)]\n@@ -16,7 +16,7 @@ error: unused import: `a::y`\n LL |     use a::y;\n    |         ^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-directives-on-use-items-issue-10534.rs:20:12\n    |\n LL |     #[deny(unused_imports)]"}, {"sha": "658577213b3cd57c2ac23db5db6390aa90d1ee11", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: attempt to shift left with overflow\n LL |       let n = 1u8 << 8;\n    |               ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-exceeding-bitshifts.rs:4:9\n    |\n LL | #![deny(exceeding_bitshifts, const_err)]"}, {"sha": "ac9f3b1e56bc3953f5ed12eadd9bcd1cc66fbf4c", "filename": "src/test/ui/lint/lint-exceeding-bitshifts2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: attempt to shift left with overflow\n LL |       let n = 1u8 << (4+4);\n    |               ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-exceeding-bitshifts2.rs:4:9\n    |\n LL | #![deny(exceeding_bitshifts, const_err)]"}, {"sha": "e31c003985ed8e606082245760b56fd0a07650a7", "filename": "src/test/ui/lint/lint-forbid-internal-unsafe.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `allow_internal_unsafe` allows defining macros using unsafe without trigg\n LL | #[allow_internal_unsafe]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-forbid-internal-unsafe.rs:1:11\n    |\n LL | #![forbid(unsafe_code)]"}, {"sha": "4ba49bf1ba7f522e4627b351e8bfa706d03348b5", "filename": "src/test/ui/lint/lint-group-nonstandard-style.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: type `snake_case` should have an upper camel case name\n LL |         struct snake_case;\n    |                ^^^^^^^^^^ help: convert the identifier to upper camel case: `SnakeCase`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-group-nonstandard-style.rs:18:17\n    |\n LL |         #![warn(nonstandard_style)]\n@@ -17,7 +17,7 @@ error: function `CamelCase` should have a snake case name\n LL | fn CamelCase() {}\n    |    ^^^^^^^^^ help: convert the identifier to snake case: `camel_case`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-group-nonstandard-style.rs:1:9\n    |\n LL | #![deny(nonstandard_style)]\n@@ -30,7 +30,7 @@ error: function `CamelCase` should have a snake case name\n LL |         fn CamelCase() {}\n    |            ^^^^^^^^^ help: convert the identifier to snake case: `camel_case`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-group-nonstandard-style.rs:10:14\n    |\n LL |     #[forbid(nonstandard_style)]\n@@ -43,7 +43,7 @@ error: static variable `bad` should have an upper case name\n LL |         static bad: isize = 1;\n    |                ^^^ help: convert the identifier to upper case: `BAD`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-group-nonstandard-style.rs:10:14\n    |\n LL |     #[forbid(nonstandard_style)]\n@@ -56,7 +56,7 @@ warning: function `CamelCase` should have a snake case name\n LL |         fn CamelCase() {}\n    |            ^^^^^^^^^ help: convert the identifier to snake case: `camel_case`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-group-nonstandard-style.rs:18:17\n    |\n LL |         #![warn(nonstandard_style)]"}, {"sha": "24ec9c7e4f3bf8c52231bef3f960fe2cf6505f3a", "filename": "src/test/ui/lint/lint-impl-fn.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-impl-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-impl-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-impl-fn.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: denote infinite loops with `loop { ... }`\n LL |     fn bar(&self) { while true {} }\n    |                     ^^^^^^^^^^ help: use `loop`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-impl-fn.rs:9:12\n    |\n LL |     #[deny(while_true)]\n@@ -16,7 +16,7 @@ error: denote infinite loops with `loop { ... }`\n LL |         fn foo(&self) { while true {} }\n    |                         ^^^^^^^^^^ help: use `loop`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-impl-fn.rs:13:8\n    |\n LL | #[deny(while_true)]\n@@ -28,7 +28,7 @@ error: denote infinite loops with `loop { ... }`\n LL |     while true {}\n    |     ^^^^^^^^^^ help: use `loop`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-impl-fn.rs:25:8\n    |\n LL | #[deny(while_true)]"}, {"sha": "8780fac05b1ebd6edb49dd8811fb42e21727cd48", "filename": "src/test/ui/lint/lint-lowercase-static-const-pattern.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: constant in pattern `a` should have an upper case name\n LL |         (0, a) => 0,\n    |             ^ help: convert the identifier to upper case: `A`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-lowercase-static-const-pattern.rs:4:9\n    |\n LL | #![deny(non_upper_case_globals)]"}, {"sha": "5c2ccc60e1f4cffe08fdc30f6f34fd203b180aad", "filename": "src/test/ui/lint/lint-match-arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-match-arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-match-arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-match-arms.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -1,7 +1,7 @@\n fn deny_on_arm() {\n     match 0 {\n         #[deny(unused_variables)]\n-        //~^ NOTE lint level defined here\n+        //~^ NOTE the lint level is defined here\n         y => (),\n         //~^ ERROR unused variable\n     }"}, {"sha": "b124971f90512622f089a9db0f135782021c70ed", "filename": "src/test/ui/lint/lint-match-arms.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-match-arms.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-match-arms.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-match-arms.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused variable: `y`\n LL |         y => (),\n    |         ^ help: consider prefixing with an underscore: `_y`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-match-arms.rs:3:16\n    |\n LL |         #[deny(unused_variables)]"}, {"sha": "3a7ca2f83aeba52f905a403b543fa795a55ecc2b", "filename": "src/test/ui/lint/lint-misplaced-attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-misplaced-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-misplaced-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-misplaced-attr.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused attribute\n LL |     #![crate_type = \"bin\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-misplaced-attr.rs:4:9\n    |\n LL | #![deny(unused_attributes)]"}, {"sha": "e5f5ce20d1c90906901bff4dbd034a846e4a8aa8", "filename": "src/test/ui/lint/lint-missing-copy-implementations.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-missing-copy-implementations.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-missing-copy-implementations.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-missing-copy-implementations.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | |         pub field: i32\n LL | |     }\n    | |_____^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-missing-copy-implementations.rs:3:9\n    |\n LL | #![deny(missing_copy_implementations)]"}, {"sha": "a18a97e5f7fb52937fbb29c7926514abee72bc31", "filename": "src/test/ui/lint/lint-missing-doc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-missing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-missing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-missing-doc.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: missing documentation for a type alias\n LL | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-missing-doc.rs:3:9\n    |\n LL | #![deny(missing_docs)]"}, {"sha": "875380b5dabc68b53e6754c35a9ad5a3d382589d", "filename": "src/test/ui/lint/lint-non-camel-case-types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: type `ONE_TWO_THREE` should have an upper camel case name\n LL | struct ONE_TWO_THREE;\n    |        ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OneTwoThree`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-camel-case-types.rs:1:11\n    |\n LL | #![forbid(non_camel_case_types)]"}, {"sha": "e295112932770b8b07d3045ddcf1e60b055b7e42", "filename": "src/test/ui/lint/lint-non-snake-case-crate-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-crate-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-crate-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-crate-2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -1,6 +1,6 @@\n error: crate `NonSnakeCase` should have a snake case name\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-snake-case-crate-2.rs:4:9\n    |\n LL | #![deny(non_snake_case)]"}, {"sha": "da6b89c1e0499598d19c2eb66ac73fe905f4ff31", "filename": "src/test/ui/lint/lint-non-snake-case-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-crate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: crate `NonSnakeCase` should have a snake case name\n LL | #![crate_name = \"NonSnakeCase\"]\n    |                  ^^^^^^^^^^^^ help: convert the identifier to snake case: `non_snake_case`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-snake-case-crate.rs:3:9\n    |\n LL | #![deny(non_snake_case)]"}, {"sha": "f6ac6b99b602f378719cba59bf779aa83f05bc84", "filename": "src/test/ui/lint/lint-non-snake-case-functions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: method `Foo_Method` should have a snake case name\n LL |     fn Foo_Method() {}\n    |        ^^^^^^^^^^ help: convert the identifier to snake case: `foo_method`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-snake-case-functions.rs:1:9\n    |\n LL | #![deny(non_snake_case)]"}, {"sha": "d4fe26a43c2e9ed0413c0d185d3e2929b60a52b0", "filename": "src/test/ui/lint/lint-non-snake-case-lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-lifetimes.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: lifetime `'FooBar` should have a snake case name\n LL | fn f<'FooBar>(\n    |      ^^^^^^^ help: convert the identifier to snake case: `'foo_bar`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-snake-case-lifetimes.rs:1:9\n    |\n LL | #![deny(non_snake_case)]"}, {"sha": "c8b997c870704106d85c06632bd5d2a574d5113e", "filename": "src/test/ui/lint/lint-non-snake-case-modules.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-modules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-modules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-modules.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: module `FooBar` should have a snake case name\n LL | mod FooBar {\n    |     ^^^^^^ help: convert the identifier to snake case: `foo_bar`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-snake-case-modules.rs:1:9\n    |\n LL | #![deny(non_snake_case)]"}, {"sha": "411ff51aad748f7457a35484908b6ff3acd55fa1", "filename": "src/test/ui/lint/lint-non-uppercase-associated-const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: associated constant `not_upper` should have an upper case name\n LL |     const not_upper: bool = true;\n    |           ^^^^^^^^^ help: convert the identifier to upper case: `NOT_UPPER`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-uppercase-associated-const.rs:1:9\n    |\n LL | #![deny(non_upper_case_globals)]"}, {"sha": "c6fd0a6e0ddf8327c4ef020a700e4941dc4ba4dd", "filename": "src/test/ui/lint/lint-non-uppercase-statics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: static variable `foo` should have an upper case name\n LL | static foo: isize = 1;\n    |        ^^^ help: convert the identifier to upper case (notice the capitalization): `FOO`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-uppercase-statics.rs:1:11\n    |\n LL | #![forbid(non_upper_case_globals)]"}, {"sha": "2c6b47e494a52391f1370af2b7768c3c01eb3ed4", "filename": "src/test/ui/lint/lint-owned-heap-memory.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-owned-heap-memory.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-owned-heap-memory.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-owned-heap-memory.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: type uses owned (Box type) pointers: std::boxed::Box<isize>\n LL |     x: Box<isize>\n    |     ^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-owned-heap-memory.rs:2:11\n    |\n LL | #![forbid(box_pointers)]"}, {"sha": "149a782d97c2e20ad01a4a0f9a719a117ceec688", "filename": "src/test/ui/lint/lint-qualification.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-qualification.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-qualification.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-qualification.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unnecessary qualification\n LL |     foo::bar();\n    |     ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-qualification.rs:1:9\n    |\n LL | #![deny(unused_qualifications)]"}, {"sha": "dff61e022ebb87724b6fbb9cf5dc85da50cc524f", "filename": "src/test/ui/lint/lint-range-endpoint-overflow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-range-endpoint-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-range-endpoint-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-range-endpoint-overflow.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: range endpoint is out of range for `u8`\n LL |     let range_a = 0..256;\n    |                   ^^^^^^ help: use an inclusive range instead: `0..=255`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-range-endpoint-overflow.rs:1:9\n    |\n LL | #![deny(overflowing_literals)]"}, {"sha": "5ab95c89b9c7ee932b5fbfb3970d56d99cb06f5e", "filename": "src/test/ui/lint/lint-removed-allow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-removed-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-removed-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed-allow.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused variable: `unused`\n LL | fn main() { let unused = (); }\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-removed-allow.rs:7:8\n    |\n LL | #[deny(unused_variables)]"}, {"sha": "a9ebd3e32712cd64c04744f6a84fb46fde19eaa8", "filename": "src/test/ui/lint/lint-removed-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed-cmdline.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -20,7 +20,7 @@ error: unused variable: `unused`\n LL | fn main() { let unused = (); }\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-removed-cmdline.rs:11:8\n    |\n LL | #[deny(warnings)]"}, {"sha": "2c043392f098ca31dec48c06473624f3276227d5", "filename": "src/test/ui/lint/lint-removed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-removed.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ error: unused variable: `unused`\n LL | fn main() { let unused = (); }\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-removed.rs:7:8\n    |\n LL | #[deny(unused_variables)]"}, {"sha": "9da74f61b7569c9ef5fe261b76113b06333e852f", "filename": "src/test/ui/lint/lint-renamed-allow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-renamed-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-renamed-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed-allow.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused variable: `unused`\n LL | fn main() { let unused = (); }\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-renamed-allow.rs:7:8\n    |\n LL | #[deny(unused)]"}, {"sha": "235215598a2bdbe06d5deb02e33091fb00eab88e", "filename": "src/test/ui/lint/lint-renamed-cmdline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed-cmdline.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -20,7 +20,7 @@ error: unused variable: `unused`\n LL | fn main() { let unused = (); }\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-renamed-cmdline.rs:7:8\n    |\n LL | #[deny(unused)]"}, {"sha": "dc43f2e4c46da701aa2454e5898593a1e951d9a2", "filename": "src/test/ui/lint/lint-renamed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-renamed.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ error: unused variable: `unused`\n LL | fn main() { let unused = (); }\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_unused`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-renamed.rs:3:8\n    |\n LL | #[deny(unused)]"}, {"sha": "2d1ca30f991aec5d16546004116b04e46a672e10", "filename": "src/test/ui/lint/lint-shorthand-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-shorthand-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-shorthand-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-shorthand-field.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: the `x:` in this pattern is redundant\n LL |             x: x,\n    |             ^^^^ help: use shorthand field pattern: `x`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-shorthand-field.rs:4:9\n    |\n LL | #![deny(non_shorthand_field_patterns)]"}, {"sha": "734c6093e2b6237b6c4d88728cb9dc03be51848c", "filename": "src/test/ui/lint/lint-stability-deprecated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: use of deprecated item 'lint_stability::deprecated': text\n LL |         deprecated();\n    |         ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-stability-deprecated.rs:7:9\n    |\n LL | #![warn(deprecated)]"}, {"sha": "5210fb690e9d77acfc15522cb354ea1c112a12a4", "filename": "src/test/ui/lint/lint-stability-fields-deprecated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'cross_crate::lint_stability_fields::Deprecated':\n LL |         let x = Deprecated {\n    |                 ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-stability-fields-deprecated.rs:3:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "5bac22594d6650c20db6af2401a4a0e66a5d538e", "filename": "src/test/ui/lint/lint-stability2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-stability2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-stability2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'lint_stability::deprecated': text\n LL |     macro_test!();\n    |     ^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-stability2.rs:4:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "566734743caba532d619bac22bed1c08e6d1b86d", "filename": "src/test/ui/lint/lint-stability3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-stability3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-stability3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability3.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: use of deprecated item 'lint_stability::deprecated_text': text\n LL |     macro_test_arg_nested!(deprecated_text);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-stability3.rs:4:9\n    |\n LL | #![deny(deprecated)]"}, {"sha": "bf510823b568f9bd4b6880de2ec8adfca1cfc04d", "filename": "src/test/ui/lint/lint-type-limits2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ warning: literal out of range for `i8`\n LL |     128 > bar()\n    |     ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-type-limits2.rs:2:9\n    |\n LL | #![warn(overflowing_literals)]"}, {"sha": "00441f99e60d9163b54c1062cc52738c3a90b0d0", "filename": "src/test/ui/lint/lint-type-limits3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ warning: literal out of range for `i8`\n LL |     while 200 != i {\n    |           ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-type-limits3.rs:2:9\n    |\n LL | #![warn(overflowing_literals)]"}, {"sha": "ec15313158d5b8a5e4ae726bfbf37916386e19be", "filename": "src/test/ui/lint/lint-type-overflow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-overflow.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: literal out of range for `u8`\n LL |     let x1: u8 = 256;\n    |                  ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-type-overflow.rs:1:9\n    |\n LL | #![deny(overflowing_literals)]"}, {"sha": "dfc691ab910432f92b7f5e335f9a5967c968226b", "filename": "src/test/ui/lint/lint-type-overflow2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-overflow2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: literal out of range for `i8`\n LL |     let x2: i8 = --128;\n    |                    ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-type-overflow2.rs:3:9\n    |\n LL | #![deny(overflowing_literals)]"}, {"sha": "1770d71e2e2fe6f12d2921aa17ce029995aa2e87", "filename": "src/test/ui/lint/lint-unconditional-recursion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unconditional-recursion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unconditional-recursion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unconditional-recursion.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | fn foo() {\n LL |     foo();\n    |     ----- recursive call site\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unconditional-recursion.rs:1:9\n    |\n LL | #![deny(unconditional_recursion)]"}, {"sha": "3a102769e855b4696df7e0567cf184ad42f71fa7", "filename": "src/test/ui/lint/lint-unknown-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unknown-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unknown-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unknown-lint.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unknown lint: `not_a_real_lint`\n LL | #![allow(not_a_real_lint)]\n    |          ^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unknown-lint.rs:1:9\n    |\n LL | #![deny(unknown_lints)]"}, {"sha": "2d289404ded74face4f5a96419b27bf691a3eb8e", "filename": "src/test/ui/lint/lint-unnecessary-import-braces.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-import-braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-import-braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-import-braces.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: braces around A is unnecessary\n LL | use test::{A};\n    | ^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unnecessary-import-braces.rs:1:9\n    |\n LL | #![deny(unused_import_braces)]"}, {"sha": "3663f1d98bb9c56c46a932648973e75998bbda16", "filename": "src/test/ui/lint/lint-unnecessary-parens.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unnecessary parentheses around `return` value\n LL |     return (1);\n    |            ^^^ help: remove these parentheses\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unnecessary-parens.rs:1:9\n    |\n LL | #![deny(unused_parens)]"}, {"sha": "8e56fd4139b1f780b23150e4be2a7746c37a8fc1", "filename": "src/test/ui/lint/lint-unsafe-code.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: declaration of an `unsafe` function\n LL | unsafe fn baz() {}\n    | ^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unsafe-code.rs:3:9\n    |\n LL | #![deny(unsafe_code)]"}, {"sha": "46d8f3beeab4255b12653705fb06e1e2bff8a400", "filename": "src/test/ui/lint/lint-unused-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-extern-crate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused extern crate\n LL | extern crate lint_unused_extern_crate5;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unused-extern-crate.rs:7:9\n    |\n LL | #![deny(unused_extern_crates)]"}, {"sha": "0574ca4569fbf03c1fb713107994439afaa5730b", "filename": "src/test/ui/lint/lint-unused-imports.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused import: `std::fmt::{}`\n LL | use std::fmt::{};\n    |     ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unused-imports.rs:1:9\n    |\n LL | #![deny(unused_imports)]"}, {"sha": "16ad4758b92b8819385c263e20c88dbb9b2a8824", "filename": "src/test/ui/lint/lint-unused-mut-self.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-self.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     fn foo(mut self) {}\n    |            |\n    |            help: remove this `mut`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unused-mut-self.rs:4:9\n    |\n LL | #![deny(unused_mut)]"}, {"sha": "eda078da9a0eac7f2039d17d265a623ef00b315a", "filename": "src/test/ui/lint/lint-unused-mut-variables.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     mut a: i32,\n    |     |\n    |     help: remove this `mut`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unused-mut-variables.rs:5:9\n    |\n LL | #![deny(unused_mut)]\n@@ -212,7 +212,7 @@ LL |     let mut b = vec![2];\n    |         |\n    |         help: remove this `mut`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unused-mut-variables.rs:198:8\n    |\n LL | #[deny(unused_mut)]"}, {"sha": "57389f8d12010325fc104a29ff33204979be5fa9", "filename": "src/test/ui/lint/lint-unused-variables.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-unused-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-variables.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused variable: `a`\n LL |     a: i32,\n    |     ^ help: consider prefixing with an underscore: `_a`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-unused-variables.rs:5:9\n    |\n LL | #![deny(unused_variables)]"}, {"sha": "7c2497758d95521dd225ac5ecb1720bebd179dd7", "filename": "src/test/ui/lint/lint-uppercase-variables.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -24,7 +24,7 @@ warning: unused variable: `Foo`\n LL |         Foo => {}\n    |         ^^^ help: consider prefixing with an underscore: `_Foo`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-uppercase-variables.rs:1:9\n    |\n LL | #![warn(unused)]\n@@ -49,7 +49,7 @@ error: structure field `X` should have a snake case name\n LL |     X: usize\n    |     ^ help: convert the identifier to snake case (notice the capitalization): `x`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-uppercase-variables.rs:3:9\n    |\n LL | #![deny(non_snake_case)]"}, {"sha": "0d2adb2ad0492da056ac4e980801964e28db8f4f", "filename": "src/test/ui/lint/lints-in-foreign-macros.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     () => {use std::string::ToString;}\n LL | mod a { foo!(); }\n    |         ------- in this macro invocation\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lints-in-foreign-macros.rs:4:9\n    |\n LL | #![warn(unused_imports)]\n@@ -37,7 +37,7 @@ LL | |\n LL | | fn main() {}\n    | |____________^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lints-in-foreign-macros.rs:5:9\n    |\n LL | #![warn(missing_docs)]"}, {"sha": "4490d4afbd60589aaebf42eab3fe31341b132977", "filename": "src/test/ui/lint/must-use-ops.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust-use-ops.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused comparison that must be used\n LL |     val == 1;\n    |     ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/must-use-ops.rs:5:9\n    |\n LL | #![warn(unused_must_use)]"}, {"sha": "c42223b51985100370808d49dc1279711842fcf3", "filename": "src/test/ui/lint/must_use-array.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust_use-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust_use-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-array.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused array of `S` that must be used\n LL |     singleton();\n    |     ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/must_use-array.rs:1:9\n    |\n LL | #![deny(unused_must_use)]"}, {"sha": "11555d80825a4971b68dd366ad58997a2d89599f", "filename": "src/test/ui/lint/must_use-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust_use-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust_use-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-trait.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused implementer of `Critical` that must be used\n LL |     get_critical();\n    |     ^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/must_use-trait.rs:1:9\n    |\n LL | #![deny(unused_must_use)]"}, {"sha": "de3c6f46c686751ed653010099137226d31a313d", "filename": "src/test/ui/lint/must_use-tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused `std::result::Result` in tuple element 0 that must be used\n LL |     (Ok::<(), ()>(()),);\n    |      ^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/must_use-tuple.rs:1:9\n    |\n LL | #![deny(unused_must_use)]"}, {"sha": "7f25a19350862db0ea1d156626e4f32599e03927", "filename": "src/test/ui/lint/must_use-unit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unused return value of `foo` that must be used\n LL |     foo();\n    |     ^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/must_use-unit.rs:2:9\n    |\n LL | #![deny(unused_must_use)]"}, {"sha": "712095e3208bde45d7ced0ce8f00b30946c28d3d", "filename": "src/test/ui/lint/opaque-ty-ffi-unsafe.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fopaque-ty-ffi-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fopaque-ty-ffi-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fopaque-ty-ffi-unsafe.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `extern` block uses type `A`, which is not FFI-safe\n LL |     pub fn a(_: A);\n    |                 ^ not FFI-safe\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/opaque-ty-ffi-unsafe.rs:3:9\n    |\n LL | #![deny(improper_ctypes)]"}, {"sha": "c64c9cf0982128c148bec1fc7094df6d99b02ec5", "filename": "src/test/ui/lint/reasons.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Freasons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Freasons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons.rs?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -3,11 +3,11 @@\n #![feature(lint_reasons)]\n \n #![warn(elided_lifetimes_in_paths,\n-        //~^ NOTE lint level defined here\n+        //~^ NOTE the lint level is defined here\n         reason = \"explicit anonymous lifetimes aid reasoning about ownership\")]\n #![warn(\n     nonstandard_style,\n-    //~^ NOTE lint level defined here\n+    //~^ NOTE the lint level is defined here\n     reason = r#\"people shouldn't have to change their usual style habits\n to contribute to our project\"#\n )]"}, {"sha": "30bb8daf48a22c6e9e9790144c54b722adda5426", "filename": "src/test/ui/lint/reasons.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Freasons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Freasons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -5,7 +5,7 @@ LL |     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n    |                             ^^^^^^^^^^^^^^- help: indicate the anonymous lifetime: `<'_>`\n    |\n    = note: explicit anonymous lifetimes aid reasoning about ownership\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/reasons.rs:5:9\n    |\n LL | #![warn(elided_lifetimes_in_paths,\n@@ -19,7 +19,7 @@ LL |     let Social_exchange_psychology = CheaterDetectionMechanism {};\n    |\n    = note: people shouldn't have to change their usual style habits\n            to contribute to our project\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/reasons.rs:9:5\n    |\n LL |     nonstandard_style,"}, {"sha": "8c5ee58dc121d5ec4b0970e25eaf9db37b1c7226", "filename": "src/test/ui/lint/redundant-semicolon/redundant-semi-proc-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -5,7 +5,7 @@ error: unnecessary trailing semicolon\n LL |     let tst = 123;;\n    |                   ^ help: remove this semicolon\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/redundant-semi-proc-macro.rs:3:9\n    |\n LL | #![deny(redundant_semicolon)]"}, {"sha": "6c9f0866c017a59102d903b821c9659af2cb1400", "filename": "src/test/ui/lint/rfc-2457-non-ascii-idents/lint-non-ascii-idents.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-non-ascii-idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-non-ascii-idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-non-ascii-idents.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: identifier contains non-ASCII characters\n LL | const \u05d7\u05dc\u05d5\u05d3\u05d4: usize = 2;\n    |       ^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-non-ascii-idents.rs:2:9\n    |\n LL | #![deny(non_ascii_idents)]"}, {"sha": "b270bd1f051c261894ee5dd3636c9964ddf8718f", "filename": "src/test/ui/lint/rfc-2457-non-ascii-idents/lint-uncommon-codepoints.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: identifier contains uncommon Unicode codepoints\n LL | const \u00b5: f64 = 0.000001;\n    |       ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint-uncommon-codepoints.rs:2:9\n    |\n LL | #![deny(uncommon_codepoints)]"}, {"sha": "4e218ed0f1a920cd78bb54d5d0b1fb023e319cca", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -12,7 +12,7 @@ warning: unnecessary parentheses around assigned value\n LL |         let mut registry_no = (format!(\"NX-{}\", 74205));\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/suggestions.rs:3:21\n    |\n LL | #![warn(unused_mut, unused_parens)] // UI tests pass `-A unused`\u2014see Issue #43896\n@@ -34,7 +34,7 @@ LL |         let mut registry_no = (format!(\"NX-{}\", 74205));\n    |             |\n    |             help: remove this `mut`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/suggestions.rs:3:9\n    |\n LL | #![warn(unused_mut, unused_parens)] // UI tests pass `-A unused`\u2014see Issue #43896"}, {"sha": "f7c42acb34419a0043df2cbcdceb3d737f5f22e6", "filename": "src/test/ui/lint/trivial-casts-featuring-type-ascription.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Ftrivial-casts-featuring-type-ascription.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Ftrivial-casts-featuring-type-ascription.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftrivial-casts-featuring-type-ascription.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: trivial numeric cast: `i32` as `i32`\n LL |     let lugubrious = 12i32 as i32;\n    |                      ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/trivial-casts-featuring-type-ascription.rs:1:24\n    |\n LL | #![deny(trivial_casts, trivial_numeric_casts)]\n@@ -17,7 +17,7 @@ error: trivial cast: `&u32` as `*const u32`\n LL |     let _ = haunted as *const u32;\n    |             ^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/trivial-casts-featuring-type-ascription.rs:1:9\n    |\n LL | #![deny(trivial_casts, trivial_numeric_casts)]"}, {"sha": "1544f553cee4c5caf453e3621eb9d0d6fff666b9", "filename": "src/test/ui/lint/trivial-casts.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Ftrivial-casts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Ftrivial-casts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftrivial-casts.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: trivial numeric cast: `i32` as `i32`\n LL |     let lugubrious = 12i32 as i32;\n    |                      ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/trivial-casts.rs:1:24\n    |\n LL | #![deny(trivial_casts, trivial_numeric_casts)]\n@@ -17,7 +17,7 @@ error: trivial cast: `&u32` as `*const u32`\n LL |     let _ = haunted as *const u32;\n    |             ^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/trivial-casts.rs:1:9\n    |\n LL | #![deny(trivial_casts, trivial_numeric_casts)]"}, {"sha": "2432eb78b8732d8aaecb603f8bd2bb043a622fd0", "filename": "src/test/ui/lint/type-overflow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: literal out of range for `i8`\n LL |     let error = 255i8;\n    |                 ^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/type-overflow.rs:2:9\n    |\n LL | #![warn(overflowing_literals)]"}, {"sha": "6d669184deb3ef02bf349a2926cf339e6a433daf", "filename": "src/test/ui/lint/uninitialized-zeroed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |         let _val: &'static T = mem::zeroed();\n    |                                this code causes undefined behavior when executed\n    |                                help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/uninitialized-zeroed.rs:7:9\n    |\n LL | #![deny(invalid_value)]"}, {"sha": "abe07b1c6496c5b9e9a7c016bcce8cb9b659ae64", "filename": "src/test/ui/lint/unreachable_pub-pub_crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     pub use std::fmt;\n    |     |\n    |     help: consider restricting its visibility: `pub(crate)`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable_pub-pub_crate.rs:10:9\n    |\n LL | #![warn(unreachable_pub)]"}, {"sha": "6144d5bb6577c6744be7153dad559515c7e03db5", "filename": "src/test/ui/lint/unreachable_pub.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     pub use std::fmt;\n    |     |\n    |     help: consider restricting its visibility: `crate`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable_pub.rs:6:9\n    |\n LL | #![warn(unreachable_pub)]"}, {"sha": "1d6338572f31acefa7446230fca39b0a7a47e3f6", "filename": "src/test/ui/lint/unused_import_warning_issue_45268.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funused_import_warning_issue_45268.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funused_import_warning_issue_45268.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_import_warning_issue_45268.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused import: `test::Unused`\n LL | use test::Unused;   // This is really unused, so warning is OK\n    |     ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused_import_warning_issue_45268.rs:3:9\n    |\n LL | #![warn(unused_imports)] // Warning explanation here, it's OK"}, {"sha": "809aad2468873157f81281c2095addc5a5549de4", "filename": "src/test/ui/lint/unused_labels.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused label\n LL |     'unused_while_label: while 0 == 0 {\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused_labels.rs:8:9\n    |\n LL | #![warn(unused_labels)]"}, {"sha": "09f0fc90032dc1402a29c9e9bb07262552d46254", "filename": "src/test/ui/lint/unused_parens_json_suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@\n LL |     let _a = (1 / (2 + 3));\n    |              ^^^^^^^^^^^^^ help: remove these parentheses\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused_parens_json_suggestion.rs:10:9\n    |\n LL | #![deny(unused_parens)]"}, {"sha": "c3bf77a3a6f2d6dcc661c9c6d5a565563971382d", "filename": "src/test/ui/lint/unused_parens_remove_json_suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@\n LL |     if (_b) {\n    |        ^^^^ help: remove these parentheses\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused_parens_remove_json_suggestion.rs:10:9\n    |\n LL | #![deny(unused_parens)]"}, {"sha": "85a5cce4dd071d2e6b9d7223ed30d7de17556821", "filename": "src/test/ui/lint/use-redundant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fuse-redundant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fuse-redundant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse-redundant.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused import: `m1::*`\n LL | use m1::*;\n    |     ^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/use-redundant.rs:2:9\n    |\n LL | #![warn(unused_imports)]"}, {"sha": "843db8ce8150266e2f0ab9660db89ad5002b7911", "filename": "src/test/ui/lint/warn-unused-inline-on-fn-prototypes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: `#[inline]` is ignored on function prototypes\n LL |     #[inline]\n    |     ^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/warn-unused-inline-on-fn-prototypes.rs:1:9\n    |\n LL | #![deny(unused_attributes)]"}, {"sha": "12680ab11568fb05a6f0d54a86a578249b9868ac", "filename": "src/test/ui/liveness/liveness-dead.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fliveness%2Fliveness-dead.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fliveness%2Fliveness-dead.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-dead.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: value assigned to `x` is never read\n LL |     let mut x: isize = 3;\n    |             ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/liveness-dead.rs:2:9\n    |\n LL | #![deny(unused_assignments)]"}, {"sha": "7adb6a3295b0ea20041860868947210a1e3eb3a1", "filename": "src/test/ui/liveness/liveness-unused.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-unused.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |         continue;\n LL |         drop(*x as i32);\n    |         ^^^^^^^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/liveness-unused.rs:1:9\n    |\n LL | #![warn(unused)]\n@@ -19,7 +19,7 @@ error: unused variable: `x`\n LL | fn f1(x: isize) {\n    |       ^ help: consider prefixing with an underscore: `_x`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/liveness-unused.rs:2:9\n    |\n LL | #![deny(unused_variables)]\n@@ -57,7 +57,7 @@ error: value assigned to `x` is never read\n LL |     x += 4;\n    |     ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/liveness-unused.rs:3:9\n    |\n LL | #![deny(unused_assignments)]"}, {"sha": "aa8bac13b61ab8a7f4db5bda7e7e3986bd67427d", "filename": "src/test/ui/macros/issue-61053-different-kleene.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-different-kleene.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-different-kleene.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-different-kleene.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: meta-variable repeats with different Kleene operator\n LL |     ( $( $i:ident = $($j:ident),+ );* ) => { $( $( $i = $j; )* )* };\n    |                                 - expected repetition   ^^   - conflicting repetition\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-61053-different-kleene.rs:1:9\n    |\n LL | #![deny(meta_variable_misuse)]"}, {"sha": "5a2af45d077c4580aaad07def05efad839fe092b", "filename": "src/test/ui/macros/issue-61053-duplicate-binder.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-duplicate-binder.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-duplicate-binder.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-duplicate-binder.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |             ($x:tt $x:tt) => { $x };\n    |              |\n    |              previous declaration\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-61053-duplicate-binder.rs:1:9\n    |\n LL | #![deny(meta_variable_misuse)]"}, {"sha": "738f711f04e138ee1f2abf9b9e81f9566979fb54", "filename": "src/test/ui/macros/issue-61053-missing-repetition.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-missing-repetition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-missing-repetition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-missing-repetition.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     ($( $i:ident = $($j:ident),+ );*) => { $( $i = $j; )* };\n    |                                |\n    |                                expected repetition\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-61053-missing-repetition.rs:1:9\n    |\n LL | #![deny(meta_variable_misuse)]"}, {"sha": "0d64effc9675285edec2d40ad6d1516ba1973d10", "filename": "src/test/ui/macros/issue-61053-unbound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-unbound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-unbound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-61053-unbound.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unknown macro variable `k`\n LL |     ($( $i:ident = $($j:ident),+ );*) => { $( $( $i = $k; )+ )* };\n    |                                                       ^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-61053-unbound.rs:1:9\n    |\n LL | #![deny(meta_variable_misuse)]"}, {"sha": "cbabf0672fa8df45214c7a3d7ae20aa3fa7d2657", "filename": "src/test/ui/macros/macro-use-all-and-none.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-all-and-none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-all-and-none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-all-and-none.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused attribute\n LL | #[macro_use()]\n    | ^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/macro-use-all-and-none.rs:4:9\n    |\n LL | #![warn(unused_attributes)]"}, {"sha": "a0a3697266d4e8e129455dfa49a2e79f642e4083", "filename": "src/test/ui/match/match-no-arms-unreachable-after.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmatch%2Fmatch-no-arms-unreachable-after.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmatch%2Fmatch-no-arms-unreachable-after.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-no-arms-unreachable-after.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     match v { }\n LL |     let x = 2;\n    |     ^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/match-no-arms-unreachable-after.rs:2:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "9e07d5ea31ea573bbc0a5e6029744e272e068a5f", "filename": "src/test/ui/methods/method-call-lifetime-args-lint-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-lint-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-lint-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-lint-fail.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n LL |     S.late::<'static>(&0, &0);\n    |              ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/method-call-lifetime-args-lint-fail.rs:1:9\n    |\n LL | #![deny(late_bound_lifetime_arguments)]"}, {"sha": "f31f510a3a7447699a3a5fa401a37caa77a95ca8", "filename": "src/test/ui/methods/method-call-lifetime-args-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-lint.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n LL |     S.late::<'static>(&0, &0);\n    |              ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/method-call-lifetime-args-lint.rs:1:9\n    |\n LL | #![deny(late_bound_lifetime_arguments)]"}, {"sha": "5f8adb791f6873cf4bd2df912dc84eebf58b4f84", "filename": "src/test/ui/missing_debug_impls.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmissing_debug_impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fmissing_debug_impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing_debug_impls.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: type does not implement `fmt::Debug`; consider adding `#[derive(Debug)]`\n LL | pub enum A {}\n    | ^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/missing_debug_impls.rs:2:9\n    |\n LL | #![deny(missing_debug_implementations)]"}, {"sha": "f0a11ae1bcc287eb88dc0d0c81c68e98bbe2246e", "filename": "src/test/ui/never_type/never-assign-dead-code.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fnever-assign-dead-code.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     let x: ! = panic!(\"aah\");\n LL |     drop(x);\n    |     ^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/never-assign-dead-code.rs:6:9\n    |\n LL | #![warn(unused)]\n@@ -28,7 +28,7 @@ warning: unused variable: `x`\n LL |     let x: ! = panic!(\"aah\");\n    |         ^ help: consider prefixing with an underscore: `_x`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/never-assign-dead-code.rs:6:9\n    |\n LL | #![warn(unused)]"}, {"sha": "95d8e874a68d465c1fa36c88c6d1de7c051b91ca", "filename": "src/test/ui/nll/capture-mut-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fnll%2Fcapture-mut-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fnll%2Fcapture-mut-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fcapture-mut-ref.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     let mut x = &mut 0;\n    |         |\n    |         help: remove this `mut`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/capture-mut-ref.rs:4:9\n    |\n LL | #![deny(unused_mut)]"}, {"sha": "41dd7254d75a37d6ae0711e05e884fb1e1f98e36", "filename": "src/test/ui/nll/issue-61424.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fnll%2Fissue-61424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fnll%2Fissue-61424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-61424.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     let mut x;\n    |         |\n    |         help: remove this `mut`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-61424.rs:1:9\n    |\n LL | #![deny(unused_mut)]"}, {"sha": "c86981a8dff1576faec795413dcc72c55362832f", "filename": "src/test/ui/nll/unused-mut-issue-50343.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fnll%2Funused-mut-issue-50343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fnll%2Funused-mut-issue-50343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Funused-mut-issue-50343.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     vec![(42, 22)].iter().map(|(mut x, _y)| ()).count();\n    |                                 |\n    |                                 help: remove this `mut`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused-mut-issue-50343.rs:1:9\n    |\n LL | #![deny(unused_mut)]"}, {"sha": "905a89af4e58782e6c527f4cdc7ad99a76cd42ab", "filename": "src/test/ui/no-patterns-in-args-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fno-patterns-in-args-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fno-patterns-in-args-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-patterns-in-args-2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -10,7 +10,7 @@ error: patterns aren't allowed in methods without bodies\n LL |     fn f1(mut arg: u8);\n    |           ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/no-patterns-in-args-2.rs:1:9\n    |\n LL | #![deny(patterns_in_fns_without_body)]"}, {"sha": "7f7bb929a0d275570ae8f7a9fdc61e5ab77cdc5f", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         (1,) => {}\n    |         ^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/exhaustiveness-unreachable-pattern.rs:4:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "8603ef91beffdee8e54bad91cd6f87493fd5d66e", "filename": "src/test/ui/panic-handler/panic-handler-duplicate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-duplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-duplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-duplicate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | |     loop {}\n LL | | }\n    | |_^\n    |\n-note: first defined here\n+note: the lang item is first defined here\n   --> $DIR/panic-handler-duplicate.rs:10:1\n    |\n LL | / fn panic(info: &PanicInfo) -> ! {"}, {"sha": "f71c28e5aa641137e10323ec4cb8d17191512e86", "filename": "src/test/ui/panic-handler/panic-handler-std.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL | |     loop {}\n LL | | }\n    | |_^\n    |\n-   = note: first defined in crate `std` (which `panic_handler_std` depends on)\n+   = note: the lang item is first defined in crate `std` (which `panic_handler_std` depends on)\n \n error: argument should be `&PanicInfo`\n   --> $DIR/panic-handler-std.rs:7:16"}, {"sha": "50bfbcec2475e0275d21134180771bb0a5553003", "filename": "src/test/ui/parser/recover-range-pats.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fparser%2Frecover-range-pats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fparser%2Frecover-range-pats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-range-pats.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -195,7 +195,7 @@ error: `...` range patterns are deprecated\n LL |     if let 0...3 = 0 {}\n    |             ^^^ help: use `..=` for an inclusive range\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/recover-range-pats.rs:8:9\n    |\n LL | #![deny(ellipsis_inclusive_range_patterns)]"}, {"sha": "62b3b507e1d26241096fa3ea60a0fd48665e50f1", "filename": "src/test/ui/path-lookahead.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpath-lookahead.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unnecessary parentheses around `return` value\n LL |   return (<T as ToString>::to_string(&arg));\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/path-lookahead.rs:3:9\n    |\n LL | #![warn(unused_parens)]"}, {"sha": "308a6c7c58e6631f1d9c13017203fdbe735ce741", "filename": "src/test/ui/pattern/deny-irrefutable-let-patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fdeny-irrefutable-let-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fdeny-irrefutable-let-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fdeny-irrefutable-let-patterns.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: irrefutable if-let pattern\n LL |     if let _ = 5 {}\n    |     ^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/deny-irrefutable-let-patterns.rs:1:9\n    |\n LL | #![deny(irrefutable_let_patterns)]"}, {"sha": "5866df5cb1db881d3fedcc4805607b89fce3dc9f", "filename": "src/test/ui/pattern/usefulness/exhaustive_integer_patterns.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fexhaustive_integer_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fexhaustive_integer_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fexhaustive_integer_patterns.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         200 => {}\n    |         ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/exhaustive_integer_patterns.rs:3:9\n    |\n LL | #![deny(unreachable_patterns)]\n@@ -88,7 +88,7 @@ LL |         0 .. 2 => {}\n LL |         1 ..= 2 => {}\n    |         ^^^^^^^ overlapping patterns\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/exhaustive_integer_patterns.rs:4:9\n    |\n LL | #![deny(overlapping_patterns)]"}, {"sha": "cdd3067a678a574c9e15e57dba3146e217d20bc9", "filename": "src/test/ui/pattern/usefulness/issue-43253.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |         1..10 => {},\n LL |         9..=10 => {},\n    |         ^^^^^^ overlapping patterns\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-43253.rs:4:9\n    |\n LL | #![warn(overlapping_patterns)]\n@@ -18,7 +18,7 @@ warning: unreachable pattern\n LL |         9 => {},\n    |         ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue-43253.rs:3:9\n    |\n LL | #![warn(unreachable_patterns)]"}, {"sha": "a5dffebf69967b90ca19123294a7fccee71d2751", "filename": "src/test/ui/pattern/usefulness/match-arm-statics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-arm-statics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-arm-statics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-arm-statics.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         (true, true) => ()\n    |         ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/match-arm-statics.rs:2:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "0c582be8df8bc9423720a2470d9022d10b761c93", "filename": "src/test/ui/pattern/usefulness/match-byte-array-patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-byte-array-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-byte-array-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-byte-array-patterns.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         &[0x41, 0x41, 0x41, 0x41] => {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/match-byte-array-patterns.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "49c38d2a9d3d7fe1b82eba4f05a2bd669638bf6c", "filename": "src/test/ui/pattern/usefulness/match-empty-exhaustive_patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty-exhaustive_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty-exhaustive_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty-exhaustive_patterns.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         _ => {},\n    |         ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/match-empty-exhaustive_patterns.rs:3:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "76a6d1d3eaa1bc864cb9874148dfd1b9a6daa27f", "filename": "src/test/ui/pattern/usefulness/match-range-fail-dominate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-range-fail-dominate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-range-fail-dominate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-range-fail-dominate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |       5 ..= 6 => { }\n    |       ^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/match-range-fail-dominate.rs:1:9\n    |\n LL | #![deny(unreachable_patterns, overlapping_patterns)]"}, {"sha": "fad0940baa441a8a0bea86d9ea1bb4bb31a2d490", "filename": "src/test/ui/pattern/usefulness/match-ref-ice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-ref-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-ref-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-ref-ice.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         [1, 2, 3] => (),\n    |         ^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/match-ref-ice.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "e388a06cb9a145b53a907e543c6431f8a8c96438", "filename": "src/test/ui/pattern/usefulness/match-vec-fixed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-vec-fixed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-vec-fixed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-vec-fixed.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         [_, _, _] => {}\n    |         ^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/match-vec-fixed.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "672fd92fb5ebd8dacaf18f3ee42aa433edc461a5", "filename": "src/test/ui/pattern/usefulness/match-vec-unreachable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-vec-unreachable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-vec-unreachable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-vec-unreachable.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         [(1, 2), (2, 3), b] => (),\n    |         ^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/match-vec-unreachable.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "cd0cb2e887691b927636d87356657a11ac8c6e86", "filename": "src/test/ui/pattern/usefulness/slice-pattern-const-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const-2.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         FOO => (),\n    |         ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/slice-pattern-const-2.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "3ba01b9eba3cef24932178cdb7d1ca41eef0341a", "filename": "src/test/ui/pattern/usefulness/slice-pattern-const-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const-3.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         FOO => (),\n    |         ^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/slice-pattern-const-3.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "1fffb9fedbf2ef62b1efc9fd19ff42ce6a730b0c", "filename": "src/test/ui/pattern/usefulness/slice-pattern-const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-pattern-const.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         [84, 69, 83, 84] => (),\n    |         ^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/slice-pattern-const.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "607ffb76595e9b36cfeb9228616a501499f4185c", "filename": "src/test/ui/pattern/usefulness/slice-patterns-reachability.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-reachability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-reachability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-reachability.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         [true, ..] => {}\n    |         ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/slice-patterns-reachability.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "fbee33de6f30af88dacf89547059950cf0885122", "filename": "src/test/ui/pattern/usefulness/struct-pattern-match-useless.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fstruct-pattern-match-useless.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fstruct-pattern-match-useless.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fstruct-pattern-match-useless.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |         Foo { x: _x, y: _y } => (),\n LL |         Foo { .. } => ()\n    |         ^^^^^^^^^^ unreachable pattern\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/struct-pattern-match-useless.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "76bc4f8d0910adf2526453c686d33a0f6ab56db6", "filename": "src/test/ui/pattern/usefulness/top-level-alternation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |     while let 0..=2 | 1 = 0 {}\n    |                       ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/top-level-alternation.rs:1:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "2a41fae43c629a7a70f49fd2344aa35ba76e2540", "filename": "src/test/ui/privacy/private-in-public-non-principal.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -14,7 +14,7 @@ error: missing documentation for a method\n LL |         pub fn check_doc_lint() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/private-in-public-non-principal.rs:10:8\n    |\n LL | #[deny(missing_docs)]"}, {"sha": "079331bffd228af7564ac2ded97043ce9acc3056", "filename": "src/test/ui/privacy/private-in-public-warn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-warn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-warn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-warn.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: private type `types::Priv` in public interface (error E0446)\n LL |     pub type Alias = Priv;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/private-in-public-warn.rs:5:9\n    |\n LL | #![deny(private_in_public)]"}, {"sha": "010969c03afdaac9d5705fe0460b7625131e670e", "filename": "src/test/ui/privacy/pub-priv-dep/pub-priv1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fprivacy%2Fpub-priv-dep%2Fpub-priv1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fprivacy%2Fpub-priv-dep%2Fpub-priv1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fpub-priv-dep%2Fpub-priv1.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: type `priv_dep::OtherType` from private dependency 'priv_dep' in public i\n LL |     pub field: OtherType,\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/pub-priv1.rs:3:9\n    |\n LL | #![deny(exported_private_dependencies)]"}, {"sha": "27a215de032aa436c8b5228b8a40ea8c867a9c14", "filename": "src/test/ui/proc-macro/attributes-included.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused variable: `a`\n LL |     let a: i32 = \"foo\";\n    |         ^ help: consider prefixing with an underscore: `_a`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/attributes-included.rs:4:9\n    |\n LL | #![warn(unused)]"}, {"sha": "27943a3f7bf8c5ad5f865c92d644838f8d05d710", "filename": "src/test/ui/proc-macro/no-macro-use-attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused extern crate\n LL | extern crate test_macros;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/no-macro-use-attr.rs:4:9\n    |\n LL | #![warn(unused_extern_crates)]"}, {"sha": "8c4ebd10fc909ccf6ae5ef42530f4453440afa69", "filename": "src/test/ui/range/range-inclusive-pattern-precedence.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -16,7 +16,7 @@ warning: `...` range patterns are deprecated\n LL |         &0...9 => {}\n    |         ^^^^^^ help: use `..=` for an inclusive range: `&(0..=9)`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/range-inclusive-pattern-precedence.rs:9:9\n    |\n LL | #![warn(ellipsis_inclusive_range_patterns)]"}, {"sha": "692bd20f50940a51edd12c4fb1f6ae34d2078f0b", "filename": "src/test/ui/reachable/expr_add.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     let x = Foo + return;\n    |             |     any code following this expression is unreachable\n    |             unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_add.rs:3:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "a9b5832ba2c88b66e9acb3479350737641a35664", "filename": "src/test/ui/reachable/expr_again.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |         continue;\n LL |         println!(\"hi\");\n    |         ^^^^^^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_again.rs:3:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "e144d7184af6afda121d8254a1b0c2713453a4a9", "filename": "src/test/ui/reachable/expr_array.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     let x: [usize; 2] = [return, 22];\n    |                          |\n    |                          any code following this expression is unreachable\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_array.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "c51156b3f40cfcc79640b85ecf64c83df06432c4", "filename": "src/test/ui/reachable/expr_assign.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     x = return;\n    |     |   any code following this expression is unreachable\n    |     unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_assign.rs:5:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "8b696b7abcb722a5a0cc94f0dc7998bada2a0d27", "filename": "src/test/ui/reachable/expr_block.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |         return;\n LL |         22\n    |         ^^ unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_block.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "ea6472cbeab3493f4dfc95cd928d7fc92310db61", "filename": "src/test/ui/reachable/expr_box.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     let x = box return;\n    |             |   any code following this expression is unreachable\n    |             unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_box.rs:3:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "a5ad9a329f06ef9e4542fd36b656fa98dae99cfb", "filename": "src/test/ui/reachable/expr_call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     foo(return, 22);\n    |         |\n    |         any code following this expression is unreachable\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_call.rs:5:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "3aa15bde9956b57bcb1fbf3a9e2e6239b7537264", "filename": "src/test/ui/reachable/expr_cast.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     let x = {return} as !;\n    |             |any code following this expression is unreachable\n    |             unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_cast.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "6ae635ae4b7e81672354a6e2c22723ab5c0e74e7", "filename": "src/test/ui/reachable/expr_if.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -9,7 +9,7 @@ LL | |         println!(\"Hello, world!\");\n LL | |     }\n    | |_____^ unreachable block in `if` expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_if.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "e5d395254a06d21ad17873233fb21ac773c9760e", "filename": "src/test/ui/reachable/expr_loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     loop { return; }\n LL |     println!(\"I am dead.\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_loop.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "a8317192c2b32dc776da3a3ce1161a9c0667f0ff", "filename": "src/test/ui/reachable/expr_match.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     match () { () => return }\n LL |     println!(\"I am dead\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_match.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "41c3b8a39060f3a58bf16ea47973f35c2d910052", "filename": "src/test/ui/reachable/expr_method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     Foo.foo(return, 22);\n    |             |\n    |             any code following this expression is unreachable\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_method.rs:5:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "defa87046102877de0ecf73b03c8b82c6233856b", "filename": "src/test/ui/reachable/expr_repeat.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     let x: [usize; 2] = [return; 2];\n    |                         |any code following this expression is unreachable\n    |                         unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_repeat.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "e1bef80aeb00e22c7bb8ddbe8664d741b34a8a7e", "filename": "src/test/ui/reachable/expr_return.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     let x = {return {return {return;}}};\n    |                      |       any code following this expression is unreachable\n    |                      unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_return.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "3c562a7ee6f01074d3d75bb3a0964d879aec6a97", "filename": "src/test/ui/reachable/expr_return_in_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_return_in_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_return_in_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_return_in_macro.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |         return ()\n LL |     return early_return!();\n    |     ^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_return_in_macro.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "36b070456c56bfd074e72db2e2c6c5254603e153", "filename": "src/test/ui/reachable/expr_struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     let x = Foo { a: 22, b: 33, ..return };\n    |             |                     any code following this expression is unreachable\n    |             unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_struct.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "5ea6bf4abf6f21ac0fa633dfeb3411349ac71ad0", "filename": "src/test/ui/reachable/expr_tup.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     let x: (usize, usize) = (return, 2);\n    |                              |\n    |                              any code following this expression is unreachable\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_tup.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "c56c64be721fee20e7002ff40be516ee7596be2c", "filename": "src/test/ui/reachable/expr_type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     let x = {return}: !;\n    |             |any code following this expression is unreachable\n    |             unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_type.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "063d841c25e39cdb6d9a5ac7c3cb614eb55b584a", "filename": "src/test/ui/reachable/expr_unary.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -13,7 +13,7 @@ LL |     let x: ! = ! { return; };\n    |                |   any code following this expression is unreachable\n    |                unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_unary.rs:5:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "83354574eafc4ce260e895b41fe22f0056053c53", "filename": "src/test/ui/reachable/expr_while.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -10,7 +10,7 @@ LL | |         println!(\"Hello, world!\");\n LL | |     }\n    | |_____^ unreachable block in `while` expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/expr_while.rs:4:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "1cbea8288d465af213a291b23a9dd85e88b0951e", "filename": "src/test/ui/reachable/unreachable-arm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-arm.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |         Foo::A(_, 1) => { }\n    |         ^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable-arm.rs:4:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "4b951263dbde6d4217fce188fd17a83fb3750303", "filename": "src/test/ui/reachable/unreachable-code.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-code.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |\n LL |   let a = 3;\n    |   ^^^^^^^^^^ unreachable statement\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable-code.rs:1:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "cdfa79bf899466be85294e8236a54f763b66c6b6", "filename": "src/test/ui/reachable/unreachable-in-call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-in-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-in-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-in-call.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -6,7 +6,7 @@ LL |     call(diverge(),\n LL |          get_u8());\n    |          ^^^^^^^^ unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable-in-call.rs:2:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "680d22862d7fe32c168e710fc4ff236e6f371ed1", "filename": "src/test/ui/reachable/unreachable-loop-patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-loop-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-loop-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-loop-patterns.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ error: unreachable pattern\n LL |     for _ in unimplemented!() as Void {}\n    |         ^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable-loop-patterns.rs:5:9\n    |\n LL | #![deny(unreachable_patterns)]"}, {"sha": "d141e382313bff8e785d6551f92abe4bf6410f2e", "filename": "src/test/ui/reachable/unreachable-try-pattern.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-try-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funreachable-try-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-try-pattern.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     let y = (match x { Ok(n) => Ok(n as u32), Err(e) => Err(e) })?;\n    |                                    unreachable expression\n    |                                    any code following this expression is unreachable\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable-try-pattern.rs:3:9\n    |\n LL | #![warn(unreachable_code)]\n@@ -19,7 +19,7 @@ warning: unreachable pattern\n LL |     let y = (match x { Ok(n) => Ok(n as u32), Err(e) => Err(e) })?;\n    |                        ^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unreachable-try-pattern.rs:4:9\n    |\n LL | #![warn(unreachable_patterns)]"}, {"sha": "a296d2a055e09c09b37d36367f23e17d050ddac3", "filename": "src/test/ui/reachable/unwarned-match-on-never.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funwarned-match-on-never.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Freachable%2Funwarned-match-on-never.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funwarned-match-on-never.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -7,7 +7,7 @@ LL |     // But matches in unreachable code are warned.\n LL |     match x {}\n    |     ^^^^^^^^^^ unreachable expression\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unwarned-match-on-never.rs:1:9\n    |\n LL | #![deny(unreachable_code)]"}, {"sha": "c86556c89f43baef95b897f4968d61f100fe642f", "filename": "src/test/ui/removing-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a2929ed1d3e1760bf89c878352448fb5ee2087/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr?ref=24a2929ed1d3e1760bf89c878352448fb5ee2087", "patch": "@@ -4,7 +4,7 @@ warning: unused extern crate\n LL | extern crate removing_extern_crate as foo;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/removing-extern-crate.rs:6:9\n    |\n LL | #![warn(rust_2018_idioms)]"}]}