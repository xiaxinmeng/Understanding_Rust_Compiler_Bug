{"sha": "c07a6d2ef025839d0a36754c163899bc311460f6", "node_id": "C_kwDOAAsO6NoAKGMwN2E2ZDJlZjAyNTgzOWQwYTM2NzU0YzE2Mzg5OWJjMzExNDYwZjY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-10-31T17:24:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-11-30T21:55:07Z"}, "message": "Complete test.", "tree": {"sha": "df2928339225dd6c1ddae27b84c25749801bd943", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df2928339225dd6c1ddae27b84c25749801bd943"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c07a6d2ef025839d0a36754c163899bc311460f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c07a6d2ef025839d0a36754c163899bc311460f6", "html_url": "https://github.com/rust-lang/rust/commit/c07a6d2ef025839d0a36754c163899bc311460f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c07a6d2ef025839d0a36754c163899bc311460f6/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6211332001dc670e5e4ceedf4c084146b9a0d41", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6211332001dc670e5e4ceedf4c084146b9a0d41", "html_url": "https://github.com/rust-lang/rust/commit/b6211332001dc670e5e4ceedf4c084146b9a0d41"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "35e0701103c51148765426db6375375696b12b39", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.fixed", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6d2ef025839d0a36754c163899bc311460f6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6d2ef025839d0a36754c163899bc311460f6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed?ref=c07a6d2ef025839d0a36754c163899bc311460f6", "patch": "@@ -51,6 +51,15 @@ fn inspect_matched_set(set: MatchedSet<'_, '_>) {\n     println!(\"{} {}\", set.one, set.another);\n }\n \n+// Verify that the lint does not fire, because the added `'_` wouldn't be resolved correctly.\n+fn match_sets() -> MatchedSet<'static, 'static> {\n+    //~^ ERROR missing lifetime specifiers\n+    //~| NOTE expected 2 lifetime parameters\n+    //~| HELP this function's return type contains a borrowed value\n+    //~| HELP consider using the `'static` lifetime\n+    MatchedSet { one: \"one\", another: \"another\" }\n+}\n+\n macro_rules! autowrapper {\n     ($type_name:ident, $fn_name:ident, $lt:lifetime) => {\n         struct $type_name<$lt> {\n@@ -61,6 +70,9 @@ macro_rules! autowrapper {\n             //~^ ERROR hidden lifetime parameters in types are deprecated\n             //~| NOTE expected named lifetime parameter\n             //~| HELP consider using the `'_` lifetime\n+            //~| ERROR hidden lifetime parameters in types are deprecated\n+            //~| NOTE expected named lifetime parameter\n+            //~| HELP consider using the `'_` lifetime\n             $type_name { gift }\n         }\n     }\n@@ -70,6 +82,11 @@ autowrapper!(Autowrapped, autowrap_gift, 'a);\n //~^ NOTE in this expansion of autowrapper!\n //~| NOTE in this expansion of autowrapper!\n \n+// Verify that rustfix does not try to apply the fix twice.\n+autowrapper!(AutowrappedAgain, autowrap_gift_again, 'a);\n+//~^ NOTE in this expansion of autowrapper!\n+//~| NOTE in this expansion of autowrapper!\n+\n macro_rules! anytuple_ref_ty {\n     ($($types:ty),*) => {\n         Ref<'_, ($($types),*)>"}, {"sha": "4ad6141eda58cf55da0afd0a363428aa2429f498", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6d2ef025839d0a36754c163899bc311460f6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6d2ef025839d0a36754c163899bc311460f6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs?ref=c07a6d2ef025839d0a36754c163899bc311460f6", "patch": "@@ -51,6 +51,15 @@ fn inspect_matched_set(set: MatchedSet) {\n     println!(\"{} {}\", set.one, set.another);\n }\n \n+// Verify that the lint does not fire, because the added `'_` wouldn't be resolved correctly.\n+fn match_sets() -> MatchedSet {\n+    //~^ ERROR missing lifetime specifiers\n+    //~| NOTE expected 2 lifetime parameters\n+    //~| HELP this function's return type contains a borrowed value\n+    //~| HELP consider using the `'static` lifetime\n+    MatchedSet { one: \"one\", another: \"another\" }\n+}\n+\n macro_rules! autowrapper {\n     ($type_name:ident, $fn_name:ident, $lt:lifetime) => {\n         struct $type_name<$lt> {\n@@ -61,6 +70,9 @@ macro_rules! autowrapper {\n             //~^ ERROR hidden lifetime parameters in types are deprecated\n             //~| NOTE expected named lifetime parameter\n             //~| HELP consider using the `'_` lifetime\n+            //~| ERROR hidden lifetime parameters in types are deprecated\n+            //~| NOTE expected named lifetime parameter\n+            //~| HELP consider using the `'_` lifetime\n             $type_name { gift }\n         }\n     }\n@@ -70,6 +82,11 @@ autowrapper!(Autowrapped, autowrap_gift, 'a);\n //~^ NOTE in this expansion of autowrapper!\n //~| NOTE in this expansion of autowrapper!\n \n+// Verify that rustfix does not try to apply the fix twice.\n+autowrapper!(AutowrappedAgain, autowrap_gift_again, 'a);\n+//~^ NOTE in this expansion of autowrapper!\n+//~| NOTE in this expansion of autowrapper!\n+\n macro_rules! anytuple_ref_ty {\n     ($($types:ty),*) => {\n         Ref<($($types),*)>"}, {"sha": "b6994a3673ab338bddba2ee950b1402a9afea694", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.stderr", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6d2ef025839d0a36754c163899bc311460f6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6d2ef025839d0a36754c163899bc311460f6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr?ref=c07a6d2ef025839d0a36754c163899bc311460f6", "patch": "@@ -47,8 +47,20 @@ help: consider using the `'_` lifetime\n LL | fn inspect_matched_set(set: MatchedSet<'_, '_>) {\n    |                             ~~~~~~~~~~~~~~~~~~\n \n+error[E0106]: missing lifetime specifiers\n+  --> $DIR/elided-lifetimes.rs:55:20\n+   |\n+LL | fn match_sets() -> MatchedSet {\n+   |                    ^^^^^^^^^^ expected 2 lifetime parameters\n+   |\n+   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n+help: consider using the `'static` lifetime\n+   |\n+LL | fn match_sets() -> MatchedSet<'static, 'static> {\n+   |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n error: hidden lifetime parameters in types are deprecated\n-  --> $DIR/elided-lifetimes.rs:60:36\n+  --> $DIR/elided-lifetimes.rs:69:36\n    |\n LL |         fn $fn_name(gift: &str) -> $type_name {\n    |                                    ^^^^^^^^^^ expected named lifetime parameter\n@@ -63,7 +75,22 @@ LL |         fn $fn_name(gift: &str) -> $type_name<'_> {\n    |                                    ~~~~~~~~~~~~~~\n \n error: hidden lifetime parameters in types are deprecated\n-  --> $DIR/elided-lifetimes.rs:84:22\n+  --> $DIR/elided-lifetimes.rs:69:36\n+   |\n+LL |         fn $fn_name(gift: &str) -> $type_name {\n+   |                                    ^^^^^^^^^^ expected named lifetime parameter\n+...\n+LL | autowrapper!(AutowrappedAgain, autowrap_gift_again, 'a);\n+   | ------------------------------------------------------- in this macro invocation\n+   |\n+   = note: this error originates in the macro `autowrapper` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: consider using the `'_` lifetime\n+   |\n+LL |         fn $fn_name(gift: &str) -> $type_name<'_> {\n+   |                                    ~~~~~~~~~~~~~~\n+\n+error: hidden lifetime parameters in types are deprecated\n+  --> $DIR/elided-lifetimes.rs:101:22\n    |\n LL |     let loyalty: Ref<(u32, char)> = honesty.borrow();\n    |                      ^ expected named lifetime parameter\n@@ -74,7 +101,7 @@ LL |     let loyalty: Ref<'_, (u32, char)> = honesty.borrow();\n    |                      +++\n \n error: hidden lifetime parameters in types are deprecated\n-  --> $DIR/elided-lifetimes.rs:75:13\n+  --> $DIR/elided-lifetimes.rs:92:13\n    |\n LL |         Ref<($($types),*)>\n    |             ^ expected named lifetime parameter\n@@ -88,5 +115,6 @@ help: consider using the `'_` lifetime\n LL |         Ref<'_, ($($types),*)>\n    |             +++\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 9 previous errors\n \n+For more information about this error, try `rustc --explain E0106`."}]}