{"sha": "2cf394955b576352b972a649ff7711e3e81bfb08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZjM5NDk1NWI1NzYzNTJiOTcyYTY0OWZmNzcxMWUzZTgxYmZiMDg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-03T19:58:24Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-03T19:58:34Z"}, "message": "actually, we can use a plain constant", "tree": {"sha": "0d4fc9648f99eb5a221a1ad17bfe726a0376f41c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d4fc9648f99eb5a221a1ad17bfe726a0376f41c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cf394955b576352b972a649ff7711e3e81bfb08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cf394955b576352b972a649ff7711e3e81bfb08", "html_url": "https://github.com/rust-lang/rust/commit/2cf394955b576352b972a649ff7711e3e81bfb08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cf394955b576352b972a649ff7711e3e81bfb08/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f4332117866e9087e3d48a2fc676175092d2513", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f4332117866e9087e3d48a2fc676175092d2513", "html_url": "https://github.com/rust-lang/rust/commit/0f4332117866e9087e3d48a2fc676175092d2513"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "c386e6a528c77087020b4b62c68c1e143209880d", "filename": "tests/compiletest.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2cf394955b576352b972a649ff7711e3e81bfb08/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cf394955b576352b972a649ff7711e3e81bfb08/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=2cf394955b576352b972a649ff7711e3e81bfb08", "patch": "@@ -1,4 +1,4 @@\n-#![feature(slice_concat_ext, const_fn)]\n+#![feature(slice_concat_ext)]\n \n extern crate compiletest_rs as compiletest;\n \n@@ -13,15 +13,13 @@ macro_rules! eprintln {\n     }\n }\n \n-const fn miri_path() -> &'static str {\n-    concat!(\"target/\", env!(\"PROFILE\"), \"/miri\")\n-}\n+const MIRI_PATH: &'static str = concat!(\"target/\", env!(\"PROFILE\"), \"/miri\");\n \n fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, fullmir: bool) {\n     eprintln!(\"## Running compile-fail tests in {} against miri for target {}\", path, target);\n     let mut config = compiletest::default_config();\n     config.mode = \"compile-fail\".parse().expect(\"Invalid mode\");\n-    config.rustc_path = miri_path().into();\n+    config.rustc_path = MIRI_PATH.into();\n     if fullmir {\n         if host != target {\n             // skip fullmir on nonhost\n@@ -60,7 +58,7 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n     config.src_base = PathBuf::from(path);\n     config.target = target.to_owned();\n     config.host = host.to_owned();\n-    config.rustc_path = miri_path().into();\n+    config.rustc_path = MIRI_PATH.into();\n     let mut flags = Vec::new();\n     if fullmir {\n         if host != target {"}]}