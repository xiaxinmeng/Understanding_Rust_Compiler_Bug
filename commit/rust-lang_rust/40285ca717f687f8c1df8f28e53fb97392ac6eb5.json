{"sha": "40285ca717f687f8c1df8f28e53fb97392ac6eb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMjg1Y2E3MTdmNjg3ZjhjMWRmOGYyOGU1M2ZiOTczOTJhYzZlYjU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-03-06T12:54:44Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-05-24T20:49:08Z"}, "message": "Apply visit_path to import prefixes by default", "tree": {"sha": "b715d5b175f1dd37e3709391f324eff10420ce7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b715d5b175f1dd37e3709391f324eff10420ce7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40285ca717f687f8c1df8f28e53fb97392ac6eb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40285ca717f687f8c1df8f28e53fb97392ac6eb5", "html_url": "https://github.com/rust-lang/rust/commit/40285ca717f687f8c1df8f28e53fb97392ac6eb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40285ca717f687f8c1df8f28e53fb97392ac6eb5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd6e8d45e183861d44ed91a99f0a50403b2776a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd6e8d45e183861d44ed91a99f0a50403b2776a3", "html_url": "https://github.com/rust-lang/rust/commit/dd6e8d45e183861d44ed91a99f0a50403b2776a3"}], "stats": {"total": 34, "additions": 8, "deletions": 26}, "files": [{"sha": "e3074d6ec3439542e9a5bba6370e9db6592f44d4", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/40285ca717f687f8c1df8f28e53fb97392ac6eb5/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40285ca717f687f8c1df8f28e53fb97392ac6eb5/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=40285ca717f687f8c1df8f28e53fb97392ac6eb5", "patch": "@@ -274,12 +274,9 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n                     visitor.visit_path(path, item.id);\n                 }\n                 ViewPathList(ref prefix, ref list) => {\n-                    if !list.is_empty() {\n-                        for item in list {\n-                            visitor.visit_path_list_item(prefix, item)\n-                        }\n-                    } else {\n-                        visitor.visit_path(prefix, item.id);\n+                    visitor.visit_path(prefix, item.id);\n+                    for item in list {\n+                        visitor.visit_path_list_item(prefix, item)\n                     }\n                 }\n             }\n@@ -413,12 +410,8 @@ pub fn walk_path<'v, V: Visitor<'v>>(visitor: &mut V, path: &'v Path) {\n }\n \n pub fn walk_path_list_item<'v, V: Visitor<'v>>(visitor: &mut V,\n-                                               prefix: &'v Path,\n+                                               _prefix: &'v Path,\n                                                item: &'v PathListItem) {\n-    for segment in &prefix.segments {\n-        visitor.visit_path_segment(prefix.span, segment);\n-    }\n-\n     walk_opt_name(visitor, item.span, item.node.name());\n     walk_opt_name(visitor, item.span, item.node.rename());\n }"}, {"sha": "e5b22652d3dfdb263a058a2359c35ed258d03add", "filename": "src/librustc_incremental/calculate_svh.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40285ca717f687f8c1df8f28e53fb97392ac6eb5/src%2Flibrustc_incremental%2Fcalculate_svh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40285ca717f687f8c1df8f28e53fb97392ac6eb5/src%2Flibrustc_incremental%2Fcalculate_svh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh.rs?ref=40285ca717f687f8c1df8f28e53fb97392ac6eb5", "patch": "@@ -401,10 +401,6 @@ mod svh_visitor {\n             SawPath.hash(self.st); visit::walk_path(self, path)\n         }\n \n-        fn visit_path_list_item(&mut self, prefix: &'a Path, item: &'a PathListItem) {\n-            SawPath.hash(self.st); visit::walk_path_list_item(self, prefix, item)\n-        }\n-\n         fn visit_block(&mut self, b: &'a Block) {\n             SawBlock.hash(self.st); visit::walk_block(self, b)\n         }"}, {"sha": "3c56d9e23559c8984b5f6c97eb8cba15a78da870", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/40285ca717f687f8c1df8f28e53fb97392ac6eb5/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40285ca717f687f8c1df8f28e53fb97392ac6eb5/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=40285ca717f687f8c1df8f28e53fb97392ac6eb5", "patch": "@@ -247,12 +247,9 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n                     visitor.visit_path(path, item.id);\n                 }\n                 ViewPathList(ref prefix, ref list) => {\n-                    if !list.is_empty() {\n-                        for item in list {\n-                            visitor.visit_path_list_item(prefix, item)\n-                        }\n-                    } else {\n-                        visitor.visit_path(prefix, item.id);\n+                    visitor.visit_path(prefix, item.id);\n+                    for item in list {\n+                        visitor.visit_path_list_item(prefix, item)\n                     }\n                 }\n             }\n@@ -382,12 +379,8 @@ pub fn walk_path<'v, V: Visitor<'v>>(visitor: &mut V, path: &'v Path) {\n     }\n }\n \n-pub fn walk_path_list_item<'v, V: Visitor<'v>>(visitor: &mut V, prefix: &'v Path,\n+pub fn walk_path_list_item<'v, V: Visitor<'v>>(visitor: &mut V, _prefix: &'v Path,\n                                                item: &'v PathListItem) {\n-    for segment in &prefix.segments {\n-        visitor.visit_path_segment(prefix.span, segment);\n-    }\n-\n     walk_opt_ident(visitor, item.span, item.node.name());\n     walk_opt_ident(visitor, item.span, item.node.rename());\n }"}]}