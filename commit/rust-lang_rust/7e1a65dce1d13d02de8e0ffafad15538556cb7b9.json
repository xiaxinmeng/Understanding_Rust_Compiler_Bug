{"sha": "7e1a65dce1d13d02de8e0ffafad15538556cb7b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMWE2NWRjZTFkMTNkMDJkZThlMGZmYWZhZDE1NTM4NTU2Y2I3Yjk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-09-20T11:53:46Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-11T08:43:55Z"}, "message": "Ensure we do not treat all unions as not having any drop glue.", "tree": {"sha": "4259558cfe37824e5f1ee8ca3b78a5b841b23d8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4259558cfe37824e5f1ee8ca3b78a5b841b23d8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e1a65dce1d13d02de8e0ffafad15538556cb7b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e1a65dce1d13d02de8e0ffafad15538556cb7b9", "html_url": "https://github.com/rust-lang/rust/commit/7e1a65dce1d13d02de8e0ffafad15538556cb7b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e1a65dce1d13d02de8e0ffafad15538556cb7b9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb23a5cf3bda8d4d5ee89be4c1777d28a1061f9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb23a5cf3bda8d4d5ee89be4c1777d28a1061f9b", "html_url": "https://github.com/rust-lang/rust/commit/fb23a5cf3bda8d4d5ee89be4c1777d28a1061f9b"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "8f816cc1b737c6c4822e80379c969ae6185337ba", "filename": "src/test/ui/union/union-custom-drop.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7e1a65dce1d13d02de8e0ffafad15538556cb7b9/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e1a65dce1d13d02de8e0ffafad15538556cb7b9/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.rs?ref=7e1a65dce1d13d02de8e0ffafad15538556cb7b9", "patch": "@@ -0,0 +1,19 @@\n+// test for a union with a field that's a union with a manual impl Drop\n+// Ensures we do not treat all unions as not having any drop glue.\n+\n+#![feature(untagged_unions)]\n+\n+union Foo {\n+    bar: Bar, //~ ERROR unions may not contain fields that need dropping\n+}\n+\n+union Bar {\n+    a: i32,\n+    b: u32,\n+}\n+\n+impl Drop for Bar {\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {}"}, {"sha": "8e4e5dd40fd3f5d6c0d591f4bd046efa70fe8115", "filename": "src/test/ui/union/union-custom-drop.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7e1a65dce1d13d02de8e0ffafad15538556cb7b9/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e1a65dce1d13d02de8e0ffafad15538556cb7b9/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr?ref=7e1a65dce1d13d02de8e0ffafad15538556cb7b9", "patch": "@@ -0,0 +1,28 @@\n+error[E0601]: `main` function not found in crate `union_custom_drop`\n+  --> $DIR/union-custom-drop.rs:4:1\n+   |\n+LL | / #![feature(untagged_unions)]\n+LL | |\n+LL | | union Foo {\n+LL | |     bar: Bar,\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^ consider adding a `main` function to `$DIR/union-custom-drop.rs`\n+\n+error[E0740]: unions may not contain fields that need dropping\n+  --> $DIR/union-custom-drop.rs:7:5\n+   |\n+LL |     bar: Bar,\n+   |     ^^^^^^^^\n+   |\n+note: `std::mem::ManuallyDrop` can be used to wrap the type\n+  --> $DIR/union-custom-drop.rs:7:5\n+   |\n+LL |     bar: Bar,\n+   |     ^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0601, E0740.\n+For more information about an error, try `rustc --explain E0601`."}]}