{"sha": "f62e8616c879255e70052ae35ce7f98bffedac11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MmU4NjE2Yzg3OTI1NWU3MDA1MmFlMzVjZTdmOThiZmZlZGFjMTE=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-18T20:40:11Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-11-16T19:19:05Z"}, "message": "Add imports in auto completion", "tree": {"sha": "f1a21bebdd22483a1a503861bbe55b77fa1d2b37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1a21bebdd22483a1a503861bbe55b77fa1d2b37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f62e8616c879255e70052ae35ce7f98bffedac11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f62e8616c879255e70052ae35ce7f98bffedac11", "html_url": "https://github.com/rust-lang/rust/commit/f62e8616c879255e70052ae35ce7f98bffedac11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f62e8616c879255e70052ae35ce7f98bffedac11/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a658c4a973d934d622957a6fb03916271496385", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a658c4a973d934d622957a6fb03916271496385", "html_url": "https://github.com/rust-lang/rust/commit/0a658c4a973d934d622957a6fb03916271496385"}], "stats": {"total": 329, "additions": 199, "deletions": 130}, "files": [{"sha": "eb4e43ad951f95e71453051f215862d806f098f9", "filename": "Cargo.lock", "status": "modified", "additions": 55, "deletions": 105, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -2,9 +2,9 @@\n # It is not intended for manual editing.\n [[package]]\n name = \"addr2line\"\n-version = \"0.14.0\"\n+version = \"0.13.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7c0929d69e78dd9bf5408269919fcbcaeb2e35e5d43e5815517cdc6a8e11a423\"\n+checksum = \"1b6a2d3371669ab3ca9797670853d61402b03d0b4b9ebf33d677dfa720203072\"\n dependencies = [\n  \"gimli\",\n ]\n@@ -26,9 +26,9 @@ dependencies = [\n \n [[package]]\n name = \"anyhow\"\n-version = \"1.0.34\"\n+version = \"1.0.33\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bf8dcb5b4bbaa28653b647d8c77bd4ed40183b48882e130c1f1ffb73de069fd7\"\n+checksum = \"a1fd36ffbb1fb7c834eac128ea8d0e310c5aeb635548f9d58861e1308d46e71c\"\n \n [[package]]\n name = \"anymap\"\n@@ -42,9 +42,9 @@ version = \"0.0.0\"\n \n [[package]]\n name = \"arrayvec\"\n-version = \"0.5.2\"\n+version = \"0.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"23b62fc65de8e4e7f52534fb52b0f3ed04746ae267519eef2a83941e8085068b\"\n+checksum = \"cff77d8686867eceff3105329d4698d96c2391c176d5d03adc90c7389162b5b8\"\n \n [[package]]\n name = \"assists\"\n@@ -81,9 +81,9 @@ checksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n \n [[package]]\n name = \"backtrace\"\n-version = \"0.3.54\"\n+version = \"0.3.53\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"2baad346b2d4e94a24347adeee9c7a93f412ee94b9cc26e5b59dea23848e9f28\"\n+checksum = \"707b586e0e2f247cbde68cdd2c3ce69ea7b7be43e1c5b426e37c9319c4b9838e\"\n dependencies = [\n  \"addr2line\",\n  \"cfg-if 1.0.0\",\n@@ -132,7 +132,7 @@ version = \"0.12.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"d5a5f7b42f606b7f23674f6f4d877628350682bc40687d3fae65679a58d55345\"\n dependencies = [\n- \"semver 0.11.0\",\n+ \"semver\",\n  \"serde\",\n  \"serde_json\",\n ]\n@@ -255,6 +255,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"assists\",\n  \"base_db\",\n+ \"either\",\n  \"expect-test\",\n  \"hir\",\n  \"ide_db\",\n@@ -270,17 +271,17 @@ dependencies = [\n \n [[package]]\n name = \"const_fn\"\n-version = \"0.4.3\"\n+version = \"0.4.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c478836e029dcef17fb47c89023448c64f781a046e0300e257ad8225ae59afab\"\n+checksum = \"ce90df4c658c62f12d78f7508cf92f9173e5184a539c10bfe54a3107b3ffd0f2\"\n \n [[package]]\n name = \"crc32fast\"\n-version = \"1.2.1\"\n+version = \"1.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"81156fece84ab6a9f2afdb109ce3ae577e42b1228441eded99bd77f627953b1a\"\n+checksum = \"ba125de2af0df55319f41944744ad91c71113bf74a4646efff39afe1f6842db1\"\n dependencies = [\n- \"cfg-if 1.0.0\",\n+ \"cfg-if 0.1.10\",\n ]\n \n [[package]]\n@@ -417,11 +418,11 @@ checksum = \"37ab347416e802de484e4d03c7316c48f1ecb56574dfd4a46a80f173ce1de04d\"\n \n [[package]]\n name = \"flate2\"\n-version = \"1.0.19\"\n+version = \"1.0.18\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7411863d55df97a419aa64cb4d2f167103ea9d767e2c54a1868b7ac3f6b47129\"\n+checksum = \"da80be589a72651dcda34d8b35bcdc9b7254ad06325611074d9cc0fbb19f60ee\"\n dependencies = [\n- \"cfg-if 1.0.0\",\n+ \"cfg-if 0.1.10\",\n  \"crc32fast\",\n  \"libc\",\n  \"miniz_oxide\",\n@@ -470,9 +471,9 @@ dependencies = [\n \n [[package]]\n name = \"fst\"\n-version = \"0.4.5\"\n+version = \"0.4.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d79238883cf0307100b90aba4a755d8051a3182305dfe7f649a1e9dc0517006f\"\n+checksum = \"a7293de202dbfe786c0b3fe6110a027836c5438ed06db7b715c9955ff4bfea51\"\n \n [[package]]\n name = \"fuchsia-zircon\"\n@@ -490,24 +491,11 @@ version = \"0.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n \n-[[package]]\n-name = \"generator\"\n-version = \"0.6.23\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8cdc09201b2e8ca1b19290cf7e65de2246b8e91fb6874279722189c4de7b94dc\"\n-dependencies = [\n- \"cc\",\n- \"libc\",\n- \"log\",\n- \"rustc_version\",\n- \"winapi 0.3.9\",\n-]\n-\n [[package]]\n name = \"gimli\"\n-version = \"0.23.0\"\n+version = \"0.22.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f6503fe142514ca4799d4c26297c4248239fe8838d827db6bd6065c6ed29a6ce\"\n+checksum = \"aaf91faf136cb47367fa430cd46e37a788775e7fa104f8b4bcb3861dc389b724\"\n \n [[package]]\n name = \"goblin\"\n@@ -735,11 +723,11 @@ dependencies = [\n \n [[package]]\n name = \"instant\"\n-version = \"0.1.8\"\n+version = \"0.1.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"cb1fc4429a33e1f80d41dc9fea4d108a88bec1de8053878898ae448a0b52f613\"\n+checksum = \"63312a18f7ea8760cdd0a7c5aac1a619752a246b833545e3e36d1f81f7cd9e66\"\n dependencies = [\n- \"cfg-if 1.0.0\",\n+ \"cfg-if 0.1.10\",\n ]\n \n [[package]]\n@@ -796,17 +784,17 @@ checksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.80\"\n+version = \"0.2.79\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4d58d1b70b004888f764dfbf6a26a3b0342a1632d33968e4a179d8011c760614\"\n+checksum = \"2448f6066e80e3bfc792e9c98bf705b4b0fc6e8ef5b43e5889aff0eaa9c58743\"\n \n [[package]]\n name = \"libloading\"\n-version = \"0.6.5\"\n+version = \"0.6.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1090080fe06ec2648d0da3881d9453d97e71a45f00eb179af7fdd7e3f686fdb0\"\n+checksum = \"3557c9384f7f757f6d139cd3a4c62ef4e850696c16bf27924a5538c8a09717a1\"\n dependencies = [\n- \"cfg-if 1.0.0\",\n+ \"cfg-if 0.1.10\",\n  \"winapi 0.3.9\",\n ]\n \n@@ -837,19 +825,6 @@ dependencies = [\n  \"cfg-if 0.1.10\",\n ]\n \n-[[package]]\n-name = \"loom\"\n-version = \"0.3.6\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a0e8460f2f2121162705187214720353c517b97bdfb3494c0b1e33d83ebe4bed\"\n-dependencies = [\n- \"cfg-if 0.1.10\",\n- \"generator\",\n- \"scoped-tls\",\n- \"serde\",\n- \"serde_json\",\n-]\n-\n [[package]]\n name = \"lsp-server\"\n version = \"0.4.1\"\n@@ -912,9 +887,9 @@ dependencies = [\n \n [[package]]\n name = \"memchr\"\n-version = \"2.3.4\"\n+version = \"2.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0ee1c47aaa256ecabcaea351eae4a9b01ef39ed810004e298d2511ed284b1525\"\n+checksum = \"3728d817d99e5ac407411fa471ff9800a778d88a24685968b36824eaf4bee400\"\n \n [[package]]\n name = \"memmap\"\n@@ -1010,9 +985,9 @@ dependencies = [\n \n [[package]]\n name = \"notify\"\n-version = \"5.0.0-pre.4\"\n+version = \"5.0.0-pre.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a8b946889dfdad884379cd56367d93b6d0ce8889cc027d26a69a3a31c0a03bb5\"\n+checksum = \"77d03607cf88b4b160ba0e9ed425fff3cee3b55ac813f0c685b3a3772da37d0e\"\n dependencies = [\n  \"anymap\",\n  \"bitflags\",\n@@ -1030,19 +1005,19 @@ dependencies = [\n \n [[package]]\n name = \"num-integer\"\n-version = \"0.1.44\"\n+version = \"0.1.43\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d2cc698a63b549a70bc047073d2949cce27cd1c7b0a4a862d08a8031bc2801db\"\n+checksum = \"8d59457e662d541ba17869cf51cf177c0b5f0cbf476c66bdc90bf1edac4f875b\"\n dependencies = [\n  \"autocfg\",\n  \"num-traits\",\n ]\n \n [[package]]\n name = \"num-traits\"\n-version = \"0.2.14\"\n+version = \"0.2.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9a64b1ec5cda2586e284722486d802acf1f7dbdc623e2bfc57e65ca1cd099290\"\n+checksum = \"ac267bcc07f48ee5f8935ab0d24f316fb722d7a1292e2913f0cc196b29ffd611\"\n dependencies = [\n  \"autocfg\",\n ]\n@@ -1059,9 +1034,9 @@ dependencies = [\n \n [[package]]\n name = \"object\"\n-version = \"0.22.0\"\n+version = \"0.21.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8d3b63360ec3cb337817c2dbd47ab4a0f170d285d8e5a2064600f3def1402397\"\n+checksum = \"37fd5004feb2ce328a52b0b3d01dbf4ffff72583493900ed15f22d4111c51693\"\n \n [[package]]\n name = \"once_cell\"\n@@ -1310,9 +1285,9 @@ checksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n \n [[package]]\n name = \"regex\"\n-version = \"1.4.2\"\n+version = \"1.4.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"38cf2c13ed4745de91a5eb834e11c00bcc3709e773173b2ce4c56c9fbde04b9c\"\n+checksum = \"8963b85b8ce3074fecffde43b4b0dded83ce2f367dc8d363afc56679f3ee820b\"\n dependencies = [\n  \"regex-syntax\",\n ]\n@@ -1329,9 +1304,9 @@ dependencies = [\n \n [[package]]\n name = \"regex-syntax\"\n-version = \"0.6.21\"\n+version = \"0.6.20\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3b181ba2dcf07aaccad5448e8ead58db5b742cf85dfe035e2227f137a539a189\"\n+checksum = \"8cab7a364d15cde1e505267766a2d3c4e22a843e1a601f0fa7564c0f82ced11c\"\n \n [[package]]\n name = \"rowan\"\n@@ -1404,25 +1379,16 @@ dependencies = [\n \n [[package]]\n name = \"rustc-demangle\"\n-version = \"0.1.18\"\n+version = \"0.1.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"6e3bad0ee36814ca07d7968269dd4b7ec89ec2da10c4bb613928d3077083c232\"\n+checksum = \"b2610b7f643d18c87dff3b489950269617e6601a51f1f05aa5daefee36f64f0b\"\n \n [[package]]\n name = \"rustc-hash\"\n version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n \n-[[package]]\n-name = \"rustc_version\"\n-version = \"0.2.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n-dependencies = [\n- \"semver 0.9.0\",\n-]\n-\n [[package]]\n name = \"ryu\"\n version = \"1.0.5\"\n@@ -1490,40 +1456,25 @@ dependencies = [\n \n [[package]]\n name = \"scroll_derive\"\n-version = \"0.10.4\"\n+version = \"0.10.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b12bd20b94c7cdfda8c7ba9b92ad0d9a56e3fa018c25fca83b51aa664c9b4c0d\"\n+checksum = \"6dfde5d1531034db129e95c76ac857e2baecea3443579d493d02224950b0fb6d\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n  \"syn\",\n ]\n \n-[[package]]\n-name = \"semver\"\n-version = \"0.9.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n-dependencies = [\n- \"semver-parser 0.7.0\",\n-]\n-\n [[package]]\n name = \"semver\"\n version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"f301af10236f6df4160f7c3f04eec6dbc70ace82d23326abad5edee88801c6b6\"\n dependencies = [\n- \"semver-parser 0.10.1\",\n+ \"semver-parser\",\n  \"serde\",\n ]\n \n-[[package]]\n-name = \"semver-parser\"\n-version = \"0.7.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n-\n [[package]]\n name = \"semver-parser\"\n version = \"0.10.1\"\n@@ -1577,12 +1528,11 @@ dependencies = [\n \n [[package]]\n name = \"sharded-slab\"\n-version = \"0.1.0\"\n+version = \"0.0.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7b4921be914e16899a80adefb821f8ddb7974e3f1250223575a44ed994882127\"\n+checksum = \"06d5a3f5166fb5b42a5439f2eee8b9de149e235961e3eb21c5808fc3ea17ff3e\"\n dependencies = [\n  \"lazy_static\",\n- \"loom\",\n ]\n \n [[package]]\n@@ -1626,9 +1576,9 @@ version = \"0.0.0\"\n \n [[package]]\n name = \"syn\"\n-version = \"1.0.48\"\n+version = \"1.0.45\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"cc371affeffc477f42a221a1e4297aedcea33d47d19b61455588bd9d8f6b19ac\"\n+checksum = \"ea9c5432ff16d6152371f808fb5a871cd67368171b09bb21b43df8e4a47a3556\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -1805,9 +1755,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing-subscriber\"\n-version = \"0.2.15\"\n+version = \"0.2.13\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a1fa8f0c8f4c594e4fc9debc1990deab13238077271ba84dd853d54902ee3401\"\n+checksum = \"4ef0a5e15477aa303afbfac3a44cba9b6430fdaad52423b1e6c0dbbe28c3eedd\"\n dependencies = [\n  \"ansi_term\",\n  \"chrono\","}, {"sha": "d665837a2f3bad0b4b8279ca1ca16f2cfdac8fda", "filename": "crates/assists/src/handlers/auto_import.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -98,7 +98,8 @@ pub(crate) fn auto_import(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n \n     let range = ctx.sema.original_range(import_assets.syntax_under_caret()).range;\n     let group = import_group_message(import_assets.import_candidate());\n-    let scope = ImportScope::find_insert_use_container(import_assets.syntax_under_caret(), ctx)?;\n+    let scope =\n+        ImportScope::find_insert_use_container(import_assets.syntax_under_caret(), &ctx.sema)?;\n     for (import, _) in proposed_imports {\n         acc.add_group(\n             &group,"}, {"sha": "cac77c49bbc46fdc601245e4881f945e1689e1ea", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -143,8 +143,7 @@ fn insert_import(\n     if let Some(mut mod_path) = mod_path {\n         mod_path.segments.pop();\n         mod_path.segments.push(variant_hir_name.clone());\n-        let scope = ImportScope::find_insert_use_container(scope_node, ctx)?;\n-\n+        let scope = ImportScope::find_insert_use_container(scope_node, &ctx.sema)?;\n         *rewriter += insert_use(&scope, mod_path_to_ast(&mod_path), ctx.config.insert_use.merge);\n     }\n     Some(())"}, {"sha": "a66db9ae3a15f271b78fc8a9a7e58edda1b1ae9e", "filename": "crates/assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -34,7 +34,7 @@ pub(crate) fn replace_qualified_name_with_use(\n     }\n \n     let target = path.syntax().text_range();\n-    let scope = ImportScope::find_insert_use_container(path.syntax(), ctx)?;\n+    let scope = ImportScope::find_insert_use_container(path.syntax(), &ctx.sema)?;\n     let syntax = scope.as_syntax_node();\n     acc.add(\n         AssistId(\"replace_qualified_name_with_use\", AssistKind::RefactorRewrite),"}, {"sha": "caabc44dea50216add89af6a6ce0292e4964b4b4", "filename": "crates/assists/src/utils.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -21,8 +21,7 @@ use crate::{\n     ast_transform::{self, AstTransform, QualifyPaths, SubstituteTypeParams},\n };\n \n-pub use insert_use::MergeBehaviour;\n-pub(crate) use insert_use::{insert_use, ImportScope};\n+pub use insert_use::{insert_use, ImportScope, MergeBehaviour};\n \n pub fn mod_path_to_ast(path: &hir::ModPath) -> ast::Path {\n     let mut segments = Vec::new();"}, {"sha": "1aa727e11fe5de95c9a3e9fdc90a9846727e38ca", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -1,6 +1,8 @@\n //! Handle syntactic aspects of inserting a new `use`.\n use std::{cmp::Ordering, iter::successors};\n \n+use hir::Semantics;\n+use ide_db::RootDatabase;\n use itertools::{EitherOrBoth, Itertools};\n use syntax::{\n     algo::SyntaxRewriter,\n@@ -14,7 +16,7 @@ use syntax::{\n use test_utils::mark;\n \n #[derive(Debug)]\n-pub(crate) enum ImportScope {\n+pub enum ImportScope {\n     File(ast::SourceFile),\n     Module(ast::ItemList),\n }\n@@ -31,14 +33,14 @@ impl ImportScope {\n     }\n \n     /// Determines the containing syntax node in which to insert a `use` statement affecting `position`.\n-    pub(crate) fn find_insert_use_container(\n+    pub fn find_insert_use_container(\n         position: &SyntaxNode,\n-        ctx: &crate::assist_context::AssistContext,\n+        sema: &Semantics<'_, RootDatabase>,\n     ) -> Option<Self> {\n-        ctx.sema.ancestors_with_macros(position.clone()).find_map(Self::from)\n+        sema.ancestors_with_macros(position.clone()).find_map(Self::from)\n     }\n \n-    pub(crate) fn as_syntax_node(&self) -> &SyntaxNode {\n+    pub fn as_syntax_node(&self) -> &SyntaxNode {\n         match self {\n             ImportScope::File(file) => file.syntax(),\n             ImportScope::Module(item_list) => item_list.syntax(),\n@@ -88,7 +90,7 @@ fn is_inner_comment(token: SyntaxToken) -> bool {\n }\n \n /// Insert an import path into the given file/node. A `merge` value of none indicates that no import merging is allowed to occur.\n-pub(crate) fn insert_use<'a>(\n+pub fn insert_use<'a>(\n     scope: &ImportScope,\n     path: ast::Path,\n     merge: Option<MergeBehaviour>,"}, {"sha": "799b4a3d54453aeb1b11017adf2233e70d8bb55b", "filename": "crates/completion/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2FCargo.toml?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -13,6 +13,7 @@ doctest = false\n itertools = \"0.9.0\"\n log = \"0.4.8\"\n rustc-hash = \"1.1.0\"\n+either = \"1.6.1\"\n \n assists = { path = \"../assists\", version = \"0.0.0\" }\n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n@@ -21,6 +22,7 @@ text_edit = { path = \"../text_edit\", version = \"0.0.0\" }\n base_db = { path = \"../base_db\", version = \"0.0.0\" }\n ide_db = { path = \"../ide_db\", version = \"0.0.0\" }\n profile = { path = \"../profile\", version = \"0.0.0\" }\n+assists = { path = \"../assists\", version = \"0.0.0\" }\n test_utils = { path = \"../test_utils\", version = \"0.0.0\" }\n \n # completions crate should depend only on the top-level `hir` package. if you need"}, {"sha": "99db5f9980f3bd2d032a3f2cdd51200efef236e5", "filename": "crates/completion/src/completions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2Fsrc%2Fcompletions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2Fsrc%2Fcompletions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -13,6 +13,7 @@ pub(crate) mod postfix;\n pub(crate) mod macro_in_item_position;\n pub(crate) mod trait_impl;\n pub(crate) mod mod_;\n+pub(crate) mod complete_magic;\n \n use hir::{ModPath, ScopeDef, Type};\n "}, {"sha": "857a0b6209383afabfe6400adb5756d327fe4cb1", "filename": "crates/completion/src/completions/complete_magic.rs", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fcomplete_magic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fcomplete_magic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fcomplete_magic.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -0,0 +1,114 @@\n+//! TODO kb move this into the complete_unqualified_path when starts to work properly\n+\n+use assists::utils::{insert_use, mod_path_to_ast, ImportScope, MergeBehaviour};\n+use hir::Query;\n+use itertools::Itertools;\n+use syntax::AstNode;\n+use text_edit::TextEdit;\n+\n+use crate::{context::CompletionContext, item::CompletionKind, CompletionItem, CompletionItemKind};\n+\n+use super::Completions;\n+\n+pub(crate) fn complete_magic(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n+    if !(ctx.is_trivial_path || ctx.is_pat_binding_or_const) {\n+        return None;\n+    }\n+    let current_module = ctx.scope.module()?;\n+    let anchor = ctx.name_ref_syntax.as_ref()?;\n+    let import_scope = ImportScope::find_insert_use_container(anchor.syntax(), &ctx.sema)?;\n+    // TODO kb now this is the whole file, which is not disjoint with any other change in the same file, fix it\n+    // otherwise it's impossible to correctly add the use statement and also change the completed text into something more meaningful\n+    let import_syntax = import_scope.as_syntax_node();\n+\n+    // TODO kb consider heuristics, such as \"don't show `hash_map` import if `HashMap` is the import for completion\"\n+    // TODO kb module functions are not completed, consider `std::io::stdin` one\n+    let potential_import_name = ctx.token.to_string();\n+\n+    let possible_imports = ctx\n+        .krate?\n+        // TODO kb use imports_locator instead?\n+        .query_external_importables(ctx.db, Query::new(&potential_import_name).limit(40))\n+        .unique()\n+        .filter_map(|import_candidate| match import_candidate {\n+            either::Either::Left(module_def) => current_module.find_use_path(ctx.db, module_def),\n+            either::Either::Right(macro_def) => current_module.find_use_path(ctx.db, macro_def),\n+        })\n+        .filter_map(|mod_path| {\n+            let correct_qualifier = mod_path.segments.last()?.to_string();\n+            let rewriter =\n+                insert_use(&import_scope, mod_path_to_ast(&mod_path), Some(MergeBehaviour::Full));\n+            let rewritten_node = rewriter.rewrite(import_syntax);\n+            let insert_use_edit =\n+                TextEdit::replace(import_syntax.text_range(), rewritten_node.to_string());\n+            let mut completion_edit =\n+                TextEdit::replace(anchor.syntax().text_range(), correct_qualifier);\n+            completion_edit.union(insert_use_edit).expect(\"TODO kb\");\n+\n+            let completion_item: CompletionItem = CompletionItem::new(\n+                CompletionKind::Magic,\n+                ctx.source_range(),\n+                mod_path.to_string(),\n+            )\n+            .kind(CompletionItemKind::Struct)\n+            .text_edit(completion_edit)\n+            .into();\n+            Some(completion_item)\n+        });\n+    acc.add_all(possible_imports);\n+\n+    Some(())\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use expect_test::{expect, Expect};\n+\n+    use crate::{\n+        item::CompletionKind,\n+        test_utils::{check_edit, completion_list},\n+    };\n+\n+    fn check(ra_fixture: &str, expect: Expect) {\n+        let actual = completion_list(ra_fixture, CompletionKind::Magic);\n+        expect.assert_eq(&actual)\n+    }\n+\n+    #[test]\n+    fn case_insensitive_magic_completion_works() {\n+        check(\n+            r#\"\n+//- /lib.rs crate:dep\n+pub struct TestStruct;\n+\n+//- /main.rs crate:main deps:dep\n+fn main() {\n+    teru<|>\n+}\n+\"#,\n+            expect![[r#\"\n+                st dep::TestStruct\n+            \"#]],\n+        );\n+\n+        check_edit(\n+            \"dep::TestStruct\",\n+            r#\"\n+//- /lib.rs crate:dep\n+pub struct TestStruct;\n+\n+//- /main.rs crate:main deps:dep\n+fn main() {\n+    teru<|>\n+}\n+\"#,\n+            r#\"\n+use dep::TestStruct;\n+\n+fn main() {\n+    TestStruct\n+}\n+\"#,\n+        );\n+    }\n+}"}, {"sha": "f23913935c0e018e7d3287422c6efedd02a70512", "filename": "crates/completion/src/item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fitem.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -31,6 +31,7 @@ pub struct CompletionItem {\n     ///\n     /// Typically, replaces `source_range` with new identifier.\n     text_edit: TextEdit,\n+\n     insert_text_format: InsertTextFormat,\n \n     /// What item (struct, function, etc) are we completing."}, {"sha": "e920fa6b59d81886f3771a4aac9a26a8753ae9b0", "filename": "crates/completion/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fcompletion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Flib.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -118,6 +118,7 @@ pub fn completions(\n     completions::macro_in_item_position::complete_macro_in_item_position(&mut acc, &ctx);\n     completions::trait_impl::complete_trait_impl(&mut acc, &ctx);\n     completions::mod_::complete_mod(&mut acc, &ctx);\n+    completions::complete_magic::complete_magic(&mut acc, &ctx);\n \n     Some(acc)\n }"}, {"sha": "37ed092ad0ad43ed6c70acfc914be095a91fb89d", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -110,15 +110,9 @@ impl Crate {\n     pub fn query_external_importables(\n         self,\n         db: &dyn DefDatabase,\n-        query: &str,\n+        query: import_map::Query,\n     ) -> impl Iterator<Item = Either<ModuleDef, MacroDef>> {\n-        import_map::search_dependencies(\n-            db,\n-            self.into(),\n-            import_map::Query::new(query).anchor_end().case_sensitive().limit(40),\n-        )\n-        .into_iter()\n-        .map(|item| match item {\n+        import_map::search_dependencies(db, self.into(), query).into_iter().map(|item| match item {\n             ItemInNs::Types(mod_id) | ItemInNs::Values(mod_id) => Either::Left(mod_id.into()),\n             ItemInNs::Macros(mac_id) => Either::Right(mac_id.into()),\n         })"}, {"sha": "ad58a7cfe0755810144ece6c14d158cb29ecdf05", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -49,6 +49,7 @@ pub use hir_def::{\n     builtin_type::BuiltinType,\n     docs::Documentation,\n     find_path::PrefixKind,\n+    import_map::Query,\n     item_scope::ItemInNs,\n     nameres::ModuleSource,\n     path::{ModPath, PathKind},"}, {"sha": "e4f4b54274fb51eb468be4b1ace3a48b9d33a24d", "filename": "crates/ide_db/src/imports_locator.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fide_db%2Fsrc%2Fimports_locator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f62e8616c879255e70052ae35ce7f98bffedac11/crates%2Fide_db%2Fsrc%2Fimports_locator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fimports_locator.rs?ref=f62e8616c879255e70052ae35ce7f98bffedac11", "patch": "@@ -1,12 +1,12 @@\n //! This module contains an import search funcionality that is provided to the assists module.\n //! Later, this should be moved away to a separate crate that is accessible from the assists module.\n \n-use hir::{Crate, MacroDef, ModuleDef, Semantics};\n+use hir::{Crate, MacroDef, ModuleDef, Query as ImportMapQuery, Semantics};\n use syntax::{ast, AstNode, SyntaxKind::NAME};\n \n use crate::{\n     defs::{Definition, NameClass},\n-    symbol_index::{self, FileSymbol, Query},\n+    symbol_index::{self, FileSymbol, Query as SymbolQuery},\n     RootDatabase,\n };\n use either::Either;\n@@ -21,12 +21,16 @@ pub fn find_imports<'a>(\n     let db = sema.db;\n \n     // Query dependencies first.\n-    let mut candidates: FxHashSet<_> =\n-        krate.query_external_importables(db, name_to_import).collect();\n+    let mut candidates: FxHashSet<_> = krate\n+        .query_external_importables(\n+            db,\n+            ImportMapQuery::new(name_to_import).anchor_end().case_sensitive().limit(40),\n+        )\n+        .collect();\n \n     // Query the local crate using the symbol index.\n     let local_results = {\n-        let mut query = Query::new(name_to_import.to_string());\n+        let mut query = SymbolQuery::new(name_to_import.to_string());\n         query.exact();\n         query.limit(40);\n         symbol_index::crate_symbols(db, krate.into(), query)"}]}