{"sha": "e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNDNhYTI0YjNkMGE2YjY1NjhlZDlhYmU1NGFkZTgxZjBjZGVmOWQ=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-01-04T03:51:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-04T03:51:56Z"}, "message": "Merge pull request #2332 from topecongiro/impl-and-trait\n\nFix up formatting bugs in impl and trait", "tree": {"sha": "fae34d5c46718a4e08ef0128654eb2cf39833545", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fae34d5c46718a4e08ef0128654eb2cf39833545"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaTaTcCRBK7hj4Ov3rIwAAdHIIAGY2JOxHOdSNcQ4evm5SAn2S\nxYo+R4vlG8Y9JY91CNMQ1VCJIYEwOzbayPck1e7+Rg/WsOYtbgEquWhXO9Yn9rhC\no/hm0vo6N8GfBlaKS1rN0fwa0lnRNSMpIIW0OQ7twd2IOhos5HdVe5t+kZQSxxN3\npSJgLwTYDLnwyYrU+wSHHXKJWbJZfkLz1lcfGzxSMndg2fhFzXW6FPEqhzb7JUr8\nWAgutBIJARZZZ9+/Ib2P6imcuL6RSZrMyQY4/6WuLBQ9fjYsU0k8g9NkkU0WvR5p\nHJzfzqyK72wEbvEHzKeUOYL2GOdtLaMQQjeUjtMmm7Lpmy0Wl2oigAii2uIP7nA=\n=iRbD\n-----END PGP SIGNATURE-----\n", "payload": "tree fae34d5c46718a4e08ef0128654eb2cf39833545\nparent 0f24bc0d446ee5c74b94c371b9e30843df1250bb\nparent 19d6a3c7868c5c887c1c617fbef86bba8718625c\nauthor Nick Cameron <nrc@ncameron.org> 1515037916 +1300\ncommitter GitHub <noreply@github.com> 1515037916 +1300\n\nMerge pull request #2332 from topecongiro/impl-and-trait\n\nFix up formatting bugs in impl and trait"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "html_url": "https://github.com/rust-lang/rust/commit/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f24bc0d446ee5c74b94c371b9e30843df1250bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f24bc0d446ee5c74b94c371b9e30843df1250bb", "html_url": "https://github.com/rust-lang/rust/commit/0f24bc0d446ee5c74b94c371b9e30843df1250bb"}, {"sha": "19d6a3c7868c5c887c1c617fbef86bba8718625c", "url": "https://api.github.com/repos/rust-lang/rust/commits/19d6a3c7868c5c887c1c617fbef86bba8718625c", "html_url": "https://github.com/rust-lang/rust/commit/19d6a3c7868c5c887c1c617fbef86bba8718625c"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "d8d490f72c0fffa2b00c8fd071a317def8b4137e", "filename": "src/items.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "patch": "@@ -33,8 +33,8 @@ use types::join_bounds;\n use utils::{colon_spaces, contains_skip, first_line_width, format_abi, format_constness,\n             format_defaultness, format_mutability, format_unsafety, format_visibility,\n             is_attributes_extendable, last_line_contains_single_line_comment,\n-            last_line_used_width, last_line_width, mk_sp, semicolon_for_expr, starts_with_newline,\n-            stmt_expr, trimmed_last_line_width};\n+            last_line_extendable, last_line_used_width, last_line_width, mk_sp,\n+            semicolon_for_expr, starts_with_newline, stmt_expr, trimmed_last_line_width};\n use vertical::rewrite_with_alignment;\n use visitor::FmtVisitor;\n \n@@ -639,8 +639,10 @@ pub fn format_impl(\n         }\n         result.push_str(&where_clause_str);\n \n+        let need_newline = !last_line_extendable(&result)\n+            && (last_line_contains_single_line_comment(&result) || result.contains('\\n'));\n         match context.config.brace_style() {\n-            _ if last_line_contains_single_line_comment(&result) => result.push_str(&sep),\n+            _ if need_newline => result.push_str(&sep),\n             BraceStyle::AlwaysNextLine => result.push_str(&sep),\n             BraceStyle::PreferSameLine => result.push(' '),\n             BraceStyle::SameLineWhere => {\n@@ -938,7 +940,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n \n         let body_lo = context.codemap.span_after(item.span, \"{\");\n \n-        let shape = Shape::indented(offset, context.config);\n+        let shape = Shape::indented(offset, context.config).offset_left(result.len())?;\n         let generics_str =\n             rewrite_generics(context, generics, shape, mk_sp(item.span.lo(), body_lo))?;\n         result.push_str(&generics_str);"}, {"sha": "2f65d27324659b0cdb93627b1c82f67cd73b9dff", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "patch": "@@ -178,7 +178,7 @@ pub fn last_line_extendable(s: &str) -> bool {\n     }\n     for c in s.chars().rev() {\n         match c {\n-            ')' | ']' | '}' | '?' => continue,\n+            ')' | ']' | '}' | '?' | '>' => continue,\n             '\\n' => break,\n             _ if c.is_whitespace() => continue,\n             _ => return false,"}, {"sha": "e8de36db35e6e17bccd78849f5bf3c4f51ed1a76", "filename": "tests/source/trait.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Fsource%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Fsource%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftrait.rs?ref=e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "patch": "@@ -72,6 +72,11 @@ trait Foo {\n     type IteRev = <MergingUntypedTimeSeries<SliceSeries<SliceWindow>> as UntypedTimeSeries>::IterRev;\n }\n \n+// #2331\n+trait MyTrait<AAAAAAAAAAAAAAAAAAAA, BBBBBBBBBBBBBBBBBBBB, CCCCCCCCCCCCCCCCCCCC, DDDDDDDDDDDDDDDDDDDD> {\n+    fn foo() {}\n+}\n+\n // Trait aliases\n trait FooBar =\n     Foo "}, {"sha": "bc16f12c9d7a112611a9fb5d02f49b2b28944465", "filename": "tests/target/big-impl-rfc.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Ftarget%2Fbig-impl-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Ftarget%2Fbig-impl-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fbig-impl-rfc.rs?ref=e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "patch": "@@ -29,19 +29,22 @@ where\n \n // #1369\n impl<ExcessivelyLongGenericName, ExcessivelyLongGenericName, AnotherExcessivelyLongGenericName> Foo\n-    for Bar {\n+    for Bar\n+{\n     fn foo() {}\n }\n impl Foo<ExcessivelyLongGenericName, ExcessivelyLongGenericName, AnotherExcessivelyLongGenericName>\n-    for Bar {\n+    for Bar\n+{\n     fn foo() {}\n }\n impl<\n     ExcessivelyLongGenericName,\n     ExcessivelyLongGenericName,\n     AnotherExcessivelyLongGenericName,\n > Foo<ExcessivelyLongGenericName, ExcessivelyLongGenericName, AnotherExcessivelyLongGenericName>\n-    for Bar {\n+    for Bar\n+{\n     fn foo() {}\n }\n impl<ExcessivelyLongGenericName, ExcessivelyLongGenericName, AnotherExcessivelyLongGenericName> Foo"}, {"sha": "6f122e7e0b68610d8cdf3be06fd8e4382fb4ff74", "filename": "tests/target/big-impl.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Ftarget%2Fbig-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Ftarget%2Fbig-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fbig-impl.rs?ref=e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "patch": "@@ -27,19 +27,22 @@ where\n \n // #1369\n impl<ExcessivelyLongGenericName, ExcessivelyLongGenericName, AnotherExcessivelyLongGenericName> Foo\n-    for Bar {\n+    for Bar\n+{\n     fn foo() {}\n }\n impl Foo<ExcessivelyLongGenericName, ExcessivelyLongGenericName, AnotherExcessivelyLongGenericName>\n-    for Bar {\n+    for Bar\n+{\n     fn foo() {}\n }\n impl<\n     ExcessivelyLongGenericName,\n     ExcessivelyLongGenericName,\n     AnotherExcessivelyLongGenericName,\n > Foo<ExcessivelyLongGenericName, ExcessivelyLongGenericName, AnotherExcessivelyLongGenericName>\n-    for Bar {\n+    for Bar\n+{\n     fn foo() {}\n }\n impl<ExcessivelyLongGenericName, ExcessivelyLongGenericName, AnotherExcessivelyLongGenericName> Foo"}, {"sha": "91172b39fe593be5337a3e08dac05856c297d34b", "filename": "tests/target/impls.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Ftarget%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Ftarget%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpls.rs?ref=e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "patch": "@@ -141,11 +141,13 @@ mod m {\n }\n \n impl<BorrowType, K, V, NodeType, HandleType>\n-    Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType> {\n+    Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType>\n+{\n }\n \n impl<BorrowType, K, V, NodeType, HandleType> PartialEq\n-    for Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType> {\n+    for Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType>\n+{\n }\n \n mod x {\n@@ -160,7 +162,8 @@ mod x {\n }\n \n impl<ConcreteThreadSafeLayoutNode: ThreadSafeLayoutNodeFoo>\n-    Issue1249<ConcreteThreadSafeLayoutNode> {\n+    Issue1249<ConcreteThreadSafeLayoutNode>\n+{\n     // Creates a new flow constructor.\n     fn foo() {}\n }"}, {"sha": "133e8babedb9759c5bdaf851eb0653d4d62e1e15", "filename": "tests/target/trait.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=e343aa24b3d0a6b6568ed9abe54ade81f0cdef9d", "patch": "@@ -100,6 +100,16 @@ trait Foo {\n         <MergingUntypedTimeSeries<SliceSeries<SliceWindow>> as UntypedTimeSeries>::IterRev;\n }\n \n+// #2331\n+trait MyTrait<\n+    AAAAAAAAAAAAAAAAAAAA,\n+    BBBBBBBBBBBBBBBBBBBB,\n+    CCCCCCCCCCCCCCCCCCCC,\n+    DDDDDDDDDDDDDDDDDDDD,\n+> {\n+    fn foo() {}\n+}\n+\n // Trait aliases\n trait FooBar = Foo + Bar;\n trait FooBar<A, B, C> = Foo + Bar;"}]}