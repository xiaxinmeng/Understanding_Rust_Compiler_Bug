{"sha": "3a72afed8cca3288fb955e66521f62f57aceace2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNzJhZmVkOGNjYTMyODhmYjk1NWU2NjUyMWY2MmY1N2FjZWFjZTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-25T09:27:22Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-25T09:43:21Z"}, "message": "Improve logging", "tree": {"sha": "5dcc5e12e667ab5972e37b0df313db2f6e9044f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dcc5e12e667ab5972e37b0df313db2f6e9044f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a72afed8cca3288fb955e66521f62f57aceace2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a72afed8cca3288fb955e66521f62f57aceace2", "html_url": "https://github.com/rust-lang/rust/commit/3a72afed8cca3288fb955e66521f62f57aceace2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a72afed8cca3288fb955e66521f62f57aceace2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4bc34649857cfcf7fcb39b9af02342fb7b8c89e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4bc34649857cfcf7fcb39b9af02342fb7b8c89e", "html_url": "https://github.com/rust-lang/rust/commit/b4bc34649857cfcf7fcb39b9af02342fb7b8c89e"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "b601d7dc390532a053206b13766f33b8c0b8aab1", "filename": "crates/project_model/src/lib.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3a72afed8cca3288fb955e66521f62f57aceace2/crates%2Fproject_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a72afed8cca3288fb955e66521f62f57aceace2/crates%2Fproject_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Flib.rs?ref=3a72afed8cca3288fb955e66521f62f57aceace2", "patch": "@@ -6,6 +6,7 @@ mod sysroot;\n mod cfg_flag;\n \n use std::{\n+    fmt,\n     fs::{self, read_dir, ReadDir},\n     io,\n     process::Command,\n@@ -27,14 +28,27 @@ pub use crate::{\n \n pub use proc_macro_api::ProcMacroClient;\n \n-#[derive(Debug, Clone, Eq, PartialEq)]\n+#[derive(Clone, Eq, PartialEq)]\n pub enum ProjectWorkspace {\n     /// Project workspace was discovered by running `cargo metadata` and `rustc --print sysroot`.\n     Cargo { cargo: CargoWorkspace, sysroot: Sysroot },\n     /// Project workspace was manually specified using a `rust-project.json` file.\n     Json { project: ProjectJson },\n }\n \n+impl fmt::Debug for ProjectWorkspace {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match self {\n+            ProjectWorkspace::Cargo { cargo, .. } => {\n+                f.debug_struct(\"Cargo\").field(\"n_packages\", &cargo.packages().len()).finish()\n+            }\n+            ProjectWorkspace::Json { project } => {\n+                f.debug_struct(\"Json\").field(\"n_crates\", &project.crates.len()).finish()\n+            }\n+        }\n+    }\n+}\n+\n /// `PackageRoot` describes a package root folder.\n /// Which may be an external dependency, or a member of\n /// the current workspace."}, {"sha": "0e03a0ca8b5d2476bba5b811d392f4482935e1e8", "filename": "crates/rust-analyzer/src/bin/main.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3a72afed8cca3288fb955e66521f62f57aceace2/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a72afed8cca3288fb955e66521f62f57aceace2/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs?ref=3a72afed8cca3288fb955e66521f62f57aceace2", "patch": "@@ -60,11 +60,12 @@ fn setup_logging() -> Result<()> {\n }\n \n fn run_server() -> Result<()> {\n-    log::info!(\"lifecycle: server started\");\n+    log::info!(\"server will start\");\n \n     let (connection, io_threads) = Connection::stdio();\n \n     let (initialize_id, initialize_params) = connection.initialize_start()?;\n+    log::info!(\"InitializeParams: {}\", initialize_params);\n     let initialize_params =\n         from_json::<lsp_types::InitializeParams>(\"InitializeParams\", initialize_params)?;\n \n@@ -118,19 +119,17 @@ fn run_server() -> Result<()> {\n                 .filter(|workspaces| !workspaces.is_empty())\n                 .unwrap_or_else(|| vec![config.root_path.clone()]);\n \n-            config.linked_projects = ProjectManifest::discover_all(&workspace_roots)\n-                .into_iter()\n-                .map(LinkedProject::from)\n-                .collect();\n+            let discovered = ProjectManifest::discover_all(&workspace_roots);\n+            log::info!(\"discovered projects: {:?}\", discovered);\n+            config.linked_projects = discovered.into_iter().map(LinkedProject::from).collect();\n         }\n \n         config\n     };\n \n     rust_analyzer::main_loop(config, connection)?;\n \n-    log::info!(\"shutting down IO...\");\n     io_threads.join()?;\n-    log::info!(\"... IO is down\");\n+    log::info!(\"server did shut down\");\n     Ok(())\n }"}, {"sha": "355caaee200b8c3b5b7c78095e281a057f5da76e", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3a72afed8cca3288fb955e66521f62f57aceace2/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a72afed8cca3288fb955e66521f62f57aceace2/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=3a72afed8cca3288fb955e66521f62f57aceace2", "patch": "@@ -10,6 +10,8 @@ use crossbeam_channel::{select, Receiver};\n use ide::{Canceled, FileId};\n use lsp_server::{Connection, Notification, Request, Response};\n use lsp_types::notification::Notification as _;\n+use project_model::ProjectWorkspace;\n+use vfs::ChangeKind;\n \n use crate::{\n     config::Config,\n@@ -21,8 +23,6 @@ use crate::{\n     lsp_utils::{apply_document_changes, is_canceled, notification_is, Progress},\n     Result,\n };\n-use project_model::ProjectWorkspace;\n-use vfs::ChangeKind;\n \n pub fn main_loop(config: Config, connection: Connection) -> Result<()> {\n     log::info!(\"initial config: {:#?}\", config);\n@@ -175,9 +175,9 @@ impl GlobalState {\n         let _p = profile::span(\"GlobalState::handle_event\");\n \n         log::info!(\"handle_event({:?})\", event);\n-        let queue_count = self.task_pool.handle.len();\n-        if queue_count > 0 {\n-            log::info!(\"queued count = {}\", queue_count);\n+        let task_queue_len = self.task_pool.handle.len();\n+        if task_queue_len > 0 {\n+            log::info!(\"task queue len: {}\", task_queue_len);\n         }\n \n         let prev_status = self.status;"}, {"sha": "20019b9445867e14b5d49740def38f85fa200ca1", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a72afed8cca3288fb955e66521f62f57aceace2/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a72afed8cca3288fb955e66521f62f57aceace2/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=3a72afed8cca3288fb955e66521f62f57aceace2", "patch": "@@ -92,6 +92,7 @@ impl GlobalState {\n         }\n     }\n     pub(crate) fn fetch_workspaces(&mut self) {\n+        log::info!(\"will fetch workspaces\");\n         self.task_pool.handle.spawn({\n             let linked_projects = self.config.linked_projects.clone();\n             let cargo_config = self.config.cargo.clone();\n@@ -112,13 +113,14 @@ impl GlobalState {\n                         }\n                     })\n                     .collect::<Vec<_>>();\n+                log::info!(\"did fetch workspaces {:?}\", workspaces);\n                 Task::Workspaces(workspaces)\n             }\n         });\n     }\n     pub(crate) fn switch_workspaces(&mut self, workspaces: Vec<anyhow::Result<ProjectWorkspace>>) {\n         let _p = profile::span(\"GlobalState::switch_workspaces\");\n-        log::info!(\"reloading projects: {:?}\", self.config.linked_projects);\n+        log::info!(\"will switch workspaces: {:?}\", workspaces);\n \n         let mut has_errors = false;\n         let workspaces = workspaces\n@@ -223,6 +225,7 @@ impl GlobalState {\n         self.analysis_host.apply_change(change);\n         self.process_changes();\n         self.reload_flycheck();\n+        log::info!(\"did switch workspaces\");\n     }\n \n     fn reload_flycheck(&mut self) {"}, {"sha": "bebcee023226ccde11a39bd7730e4b35791db8ee", "filename": "docs/user/manual.adoc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a72afed8cca3288fb955e66521f62f57aceace2/docs%2Fuser%2Fmanual.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/3a72afed8cca3288fb955e66521f62f57aceace2/docs%2Fuser%2Fmanual.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fmanual.adoc?ref=3a72afed8cca3288fb955e66521f62f57aceace2", "patch": "@@ -341,6 +341,8 @@ Relative paths are interpreted relative to `rust-project.json` file location or\n \n See https://github.com/rust-analyzer/rust-project.json-example for a small example.\n \n+You can set `RA_LOG` environmental variable to `\"'rust_analyzer=info\"` to inspect how rust-analyzer handles config and project loading.\n+\n == Features\n \n include::./generated_features.adoc[]"}]}