{"sha": "07726e3bf2cd7840628b8e3e686a885e9fba26b8", "node_id": "C_kwDOAAsO6NoAKDA3NzI2ZTNiZjJjZDc4NDA2MjhiOGUzZTY4NmE4ODVlOWZiYTI2Yjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-30T23:09:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-30T23:09:48Z"}, "message": "Rollup merge of #111015 - cjgillot:chained-let-and, r=compiler-errors\n\nRemove wrong assertion in match checking.\n\nThis assertions is completely misguided, introduced by https://github.com/rust-lang/rust/pull/108504. The responsible PR is on beta, nominating for backport.\n\nInstead of checking that this is not a `&&`, it would make sense to check that neither arms of that `&&` is a `let`. This seems like a lot of code for unclear benefit.\n\nr? `@saethlin`", "tree": {"sha": "119047ae54977dc78c62b7c67ba56d461d5c5da3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/119047ae54977dc78c62b7c67ba56d461d5c5da3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07726e3bf2cd7840628b8e3e686a885e9fba26b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkTvU8CRBK7hj4Ov3rIwAADSAIAFINfBuOsMgJIgqpfIYlab4D\nxK7ITGVK+mqAoZfLgVFE91bEtEZgkavmBjdoDFAfvQPZSzx/Ga9JkPxq49MYXFIx\nzhVv+6XZ6qm3e60Tb+0KZZwrELLyiJjiIzZvGhfg+oNA9VEBxNiZJZB2kUvQEGzF\nIGjhOxg0esFnpjLn+7vzqxW7XLZzN5aYiweph3mSwKfCi8Dz8hwC7HMZ1oqwlxqE\nU78WUXSiEfibr5DNisDsCb6EblIAhbRyXughLIVAK9QjGOJ3/9fyA2DC8paHRaH/\nw9v0v17+P/YM5uK6xy5ijXHsjLPfxyISxVkEzkgTENe+zjU3GfnEL3dpcypd/8o=\n=3oeb\n-----END PGP SIGNATURE-----\n", "payload": "tree 119047ae54977dc78c62b7c67ba56d461d5c5da3\nparent 1b262b8b5660bc70530f647822b477a8d56e1f4e\nparent 84cb7ecbc1a54de37422a0bf3cc68987acb6610b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682896188 +0200\ncommitter GitHub <noreply@github.com> 1682896188 +0200\n\nRollup merge of #111015 - cjgillot:chained-let-and, r=compiler-errors\n\nRemove wrong assertion in match checking.\n\nThis assertions is completely misguided, introduced by https://github.com/rust-lang/rust/pull/108504. The responsible PR is on beta, nominating for backport.\n\nInstead of checking that this is not a `&&`, it would make sense to check that neither arms of that `&&` is a `let`. This seems like a lot of code for unclear benefit.\n\nr? `@saethlin`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07726e3bf2cd7840628b8e3e686a885e9fba26b8", "html_url": "https://github.com/rust-lang/rust/commit/07726e3bf2cd7840628b8e3e686a885e9fba26b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07726e3bf2cd7840628b8e3e686a885e9fba26b8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b262b8b5660bc70530f647822b477a8d56e1f4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b262b8b5660bc70530f647822b477a8d56e1f4e", "html_url": "https://github.com/rust-lang/rust/commit/1b262b8b5660bc70530f647822b477a8d56e1f4e"}, {"sha": "84cb7ecbc1a54de37422a0bf3cc68987acb6610b", "url": "https://api.github.com/repos/rust-lang/rust/commits/84cb7ecbc1a54de37422a0bf3cc68987acb6610b", "html_url": "https://github.com/rust-lang/rust/commit/84cb7ecbc1a54de37422a0bf3cc68987acb6610b"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "66d29931400f1aec26531290fb2f26f439e10b3d", "filename": "compiler/rustc_mir_build/src/thir/pattern/check_match.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/07726e3bf2cd7840628b8e3e686a885e9fba26b8/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07726e3bf2cd7840628b8e3e686a885e9fba26b8/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs?ref=07726e3bf2cd7840628b8e3e686a885e9fba26b8", "patch": "@@ -334,9 +334,6 @@ impl<'p, 'tcx> MatchVisitor<'_, 'p, 'tcx> {\n                     let refutable = !is_let_irrefutable(&mut ncx, local_lint_level, tpat);\n                     Some((expr.span, refutable))\n                 }\n-                ExprKind::LogicalOp { op: LogicalOp::And, .. } => {\n-                    bug!()\n-                }\n                 _ => None,\n             }\n         };"}, {"sha": "3a1c341f3ee5aeae68353bddd9fa8423a50462c3", "filename": "tests/ui/match/guards-parenthesized-and.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/07726e3bf2cd7840628b8e3e686a885e9fba26b8/tests%2Fui%2Fmatch%2Fguards-parenthesized-and.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07726e3bf2cd7840628b8e3e686a885e9fba26b8/tests%2Fui%2Fmatch%2Fguards-parenthesized-and.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch%2Fguards-parenthesized-and.rs?ref=07726e3bf2cd7840628b8e3e686a885e9fba26b8", "patch": "@@ -0,0 +1,10 @@\n+// check-pass\n+\n+fn main() {\n+    let c = 1;\n+    let w = \"T\";\n+    match Some(5) {\n+        None if c == 1 && (w != \"Y\" && w != \"E\") => {}\n+        _ => panic!(),\n+    }\n+}"}]}