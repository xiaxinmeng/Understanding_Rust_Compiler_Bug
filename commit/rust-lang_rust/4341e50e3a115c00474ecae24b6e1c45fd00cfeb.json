{"sha": "4341e50e3a115c00474ecae24b6e1c45fd00cfeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNDFlNTBlM2ExMTVjMDA0NzRlY2FlMjRiNmUxYzQ1ZmQwMGNmZWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-13T22:36:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-21T01:23:47Z"}, "message": "Add safe versions of spawn using bare functions\n\nCurrently they just wrap the unsafe versions. Will need to be rewritten\neventually.\n\nIssue #1022", "tree": {"sha": "1091a07c071e619455a3bcc8d35ee7ea4c62e257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1091a07c071e619455a3bcc8d35ee7ea4c62e257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4341e50e3a115c00474ecae24b6e1c45fd00cfeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4341e50e3a115c00474ecae24b6e1c45fd00cfeb", "html_url": "https://github.com/rust-lang/rust/commit/4341e50e3a115c00474ecae24b6e1c45fd00cfeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4341e50e3a115c00474ecae24b6e1c45fd00cfeb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "034408c40a149033c7dd65149914ae311f998986", "url": "https://api.github.com/repos/rust-lang/rust/commits/034408c40a149033c7dd65149914ae311f998986", "html_url": "https://github.com/rust-lang/rust/commit/034408c40a149033c7dd65149914ae311f998986"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "45164a3bc4d013a3e297d60c3ad00b54e24be920", "filename": "src/lib/task.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/4341e50e3a115c00474ecae24b6e1c45fd00cfeb/src%2Flib%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4341e50e3a115c00474ecae24b6e1c45fd00cfeb/src%2Flib%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftask.rs?ref=4341e50e3a115c00474ecae24b6e1c45fd00cfeb", "patch": "@@ -21,6 +21,9 @@ export task_result;\n export tr_success;\n export tr_failure;\n export get_task_id;\n+export spawn2;\n+export spawn_notify2;\n+export spawn_joinable2;\n \n native \"rust\" mod rustrt {\n     fn task_sleep(time_in_us: uint);\n@@ -93,6 +96,47 @@ fn unpin() { rustrt::unpin_task(); }\n \n fn set_min_stack(stack_size: uint) { rustrt::set_min_stack(stack_size); }\n \n+fn spawn2<~T>(-data: T, f: fn#(T)) -> task {\n+    spawn_inner2(data, f, none)\n+}\n+\n+fn spawn_notify2<~T>(-data: T, f: fn#(T),\n+                         notify: comm::chan<task_notification>) -> task {\n+    spawn_inner2(data, f, some(notify))\n+}\n+\n+fn spawn_joinable2<~T>(-data: T, f: fn#(T)) -> joinable_task {\n+    let p = comm::port::<task_notification>();\n+    let id = spawn_notify2(data, f, comm::chan::<task_notification>(p));\n+    ret (id, p);\n+}\n+\n+// FIXME: To transition from the unsafe spawn that spawns a shared closure to\n+// the safe spawn that spawns a bare function we're going to write\n+// barefunc-spawn on top of unsafe-spawn.  Sadly, bind does not work reliably\n+// enough to suite our needs (#1034, probably others yet to be discovered), so\n+// we're going to copy the bootstrap data into a unique pointer, cast it to an\n+// unsafe pointer then wrap up the bare function and the unsafe pointer in a\n+// shared closure to spawn.\n+//\n+// After the transition this should all be rewritten.\n+\n+fn spawn_inner2<~T>(-data: T, f: fn#(T),\n+                    notify: option<comm::chan<task_notification>>)\n+    -> task_id {\n+\n+    fn wrapper<~T>(-data: *u8, f: fn#(T)) {\n+        let data: ~T = unsafe::reinterpret_cast(data);\n+        f(*data);\n+    }\n+\n+    let data = ~data;\n+    let dataptr: *u8 = unsafe::reinterpret_cast(data);\n+    unsafe::leak(data);\n+    let wrapped = bind wrapper(dataptr, f);\n+    ret spawn_inner(wrapped, notify);\n+}\n+\n fn spawn(-thunk: fn()) -> task { spawn_inner(thunk, none) }\n \n fn spawn_notify(-thunk: fn(), notify: comm::chan<task_notification>) -> task {"}]}