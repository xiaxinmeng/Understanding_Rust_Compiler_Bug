{"sha": "b02b38e1c4f7c8075c92d41e9e08bf2a20982f66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMmIzOGUxYzRmN2M4MDc1YzkyZDQxZTllMDhiZjJhMjA5ODJmNjY=", "commit": {"author": {"name": "mitchmindtree", "email": "mitchell.nordine@gmail.com", "date": "2016-07-08T14:35:08Z"}, "committer": {"name": "mitchmindtree", "email": "mitchell.nordine@gmail.com", "date": "2016-07-08T14:35:08Z"}, "message": "Add the unstable attribute to the new mpsc::Receiver::try_iter API", "tree": {"sha": "a487847033f09eb9db43b8ed8a9b51d43366676f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a487847033f09eb9db43b8ed8a9b51d43366676f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b02b38e1c4f7c8075c92d41e9e08bf2a20982f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b02b38e1c4f7c8075c92d41e9e08bf2a20982f66", "html_url": "https://github.com/rust-lang/rust/commit/b02b38e1c4f7c8075c92d41e9e08bf2a20982f66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b02b38e1c4f7c8075c92d41e9e08bf2a20982f66/comments", "author": {"login": "mitchmindtree", "id": 4587373, "node_id": "MDQ6VXNlcjQ1ODczNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4587373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitchmindtree", "html_url": "https://github.com/mitchmindtree", "followers_url": "https://api.github.com/users/mitchmindtree/followers", "following_url": "https://api.github.com/users/mitchmindtree/following{/other_user}", "gists_url": "https://api.github.com/users/mitchmindtree/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitchmindtree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitchmindtree/subscriptions", "organizations_url": "https://api.github.com/users/mitchmindtree/orgs", "repos_url": "https://api.github.com/users/mitchmindtree/repos", "events_url": "https://api.github.com/users/mitchmindtree/events{/privacy}", "received_events_url": "https://api.github.com/users/mitchmindtree/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitchmindtree", "id": 4587373, "node_id": "MDQ6VXNlcjQ1ODczNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4587373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitchmindtree", "html_url": "https://github.com/mitchmindtree", "followers_url": "https://api.github.com/users/mitchmindtree/followers", "following_url": "https://api.github.com/users/mitchmindtree/following{/other_user}", "gists_url": "https://api.github.com/users/mitchmindtree/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitchmindtree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitchmindtree/subscriptions", "organizations_url": "https://api.github.com/users/mitchmindtree/orgs", "repos_url": "https://api.github.com/users/mitchmindtree/repos", "events_url": "https://api.github.com/users/mitchmindtree/events{/privacy}", "received_events_url": "https://api.github.com/users/mitchmindtree/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b354887180b665441dd6e3ea51b2651085de88f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b354887180b665441dd6e3ea51b2651085de88f9", "html_url": "https://github.com/rust-lang/rust/commit/b354887180b665441dd6e3ea51b2651085de88f9"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2d2bded9f6060b108232f950f9b2e39525549d81", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b02b38e1c4f7c8075c92d41e9e08bf2a20982f66/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b02b38e1c4f7c8075c92d41e9e08bf2a20982f66/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=b02b38e1c4f7c8075c92d41e9e08bf2a20982f66", "patch": "@@ -317,6 +317,7 @@ pub struct Iter<'a, T: 'a> {\n ///\n /// This Iterator will never block the caller in order to wait for data to\n /// become available. Instead, it will return `None`.\n+#[unstable(feature = \"receiver_try_iter\")]\n pub struct TryIter<'a, T: 'a> {\n     rx: &'a Receiver<T>\n }\n@@ -997,6 +998,7 @@ impl<T> Receiver<T> {\n     /// It will return `None` if there are no more pending values or if the\n     /// channel has hung up. The iterator will never `panic!` or block the\n     /// user by waiting for values.\n+    #[unstable(feature = \"receiver_try_iter\")]\n     pub fn try_iter(&self) -> TryIter<T> {\n         TryIter { rx: self }\n     }\n@@ -1096,6 +1098,7 @@ impl<'a, T> Iterator for Iter<'a, T> {\n     fn next(&mut self) -> Option<T> { self.rx.recv().ok() }\n }\n \n+#[unstable(feature = \"receiver_try_iter\")]\n impl<'a, T> Iterator for TryIter<'a, T> {\n     type Item = T;\n "}]}