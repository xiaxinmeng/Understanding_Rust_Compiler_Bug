{"sha": "68be86d032919e2eea1b04d5077d3e58ffaf0214", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YmU4NmQwMzI5MTllMmVlYTFiMDRkNTA3N2QzZTU4ZmZhZjAyMTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-22T02:16:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-22T02:16:00Z"}, "message": "Auto merge of #42973 - zackmdavis:json_byte_position_to_start_at_top_of_file, r=nrc\n\nmake JSON error byte position start at top of file\n\nThe `hi` and `lo` offsets in a span are relative to a `CodeMap`, but this\ndoesn't seem to be terribly useful for tool consumers who don't have the\ncodemap, but might want the byte offset within an actual file?\n\nI couldn't get @killercup's [example](https://github.com/rust-lang/rust/issues/35164#issuecomment-301436519) to run, perhaps due to the limitations of the merely-stage-1 compiler that I built (error was `libproc_macro-456500c7095d8fbe.so: cannot open shared object file: No such file or directory`)??\u2014but a dummy project confirms that the byte offsets have successfully been changed to be file-relative\u2014\n\n**Before:**\n\n```\n$ cargo run --message-format json\n   Compiling byte_json v0.1.0 (file:///home/ubuntu/byte_json)\n{\"message\":{\"children\":[{\"children\":[],\"code\":null,\"level\":\"note\",\"message\":\"#[warn(dead_code)] on by default\",\"rendered\":null,\"spans\":[]}],\"code\":null,\"level\":\"warning\",\"message\":\"function is never used: `rah`\",\"rendered\":null,\"spans\":[{\"byte_end\":100,\"byte_start\":67,\"column_end\":2,\"column_start\":1,\"expansion\":null,\"file_name\":\"src/foo.rs\",\"is_primary\":true,\"label\":null,\"line_end\":5,\"line_start\":3,\"suggested_replacement\":null,\"text\":[{\"highlight_end\":11,\"highlight_start\":1,\"text\":\"fn rah() {\"},{\"highlight_end\":21,\"highlight_start\":1,\"text\":\"    println!(\\\"rah!\\\")\"},{\"highlight_end\":2,\"highlight_start\":1,\"text\":\"}\"}]}]},\"package_id\":\"byte_json 0.1.0 (path+file:///home/ubuntu/byte_json)\",\"reason\":\"compiler-message\",\"target\":{\"crate_types\":[\"bin\"],\"kind\":[\"bin\"],\"name\":\"byte_json\",\"src_path\":\"/home/ubuntu/byte_json/src/main.rs\"}}\n{\"message\":{\"children\":[{\"children\":[],\"code\":null,\"level\":\"note\",\"message\":\"#[warn(dead_code)] on by default\",\"rendered\":null,\"spans\":[]}],\"code\":null,\"level\":\"warning\",\"message\":\"function is never used: `alas`\",\"rendered\":null,\"spans\":[{\"byte_end\":137,\"byte_start\":102,\"column_end\":2,\"column_start\":1,\"expansion\":null,\"file_name\":\"src/bar.rs\",\"is_primary\":true,\"label\":null,\"line_end\":3,\"line_start\":1,\"suggested_replacement\":null,\"text\":[{\"highlight_end\":12,\"highlight_start\":1,\"text\":\"fn alas() {\"},{\"highlight_end\":22,\"highlight_start\":1,\"text\":\"    println!(\\\"alas\\\");\"},{\"highlight_end\":2,\"highlight_start\":1,\"text\":\"}\"}]}]},\"package_id\":\"byte_json 0.1.0 (path+file:///home/ubuntu/byte_json)\",\"reason\":\"compiler-message\",\"target\":{\"crate_types\":[\"bin\"],\"kind\":[\"bin\"],\"name\":\"byte_json\",\"src_path\":\"/home/ubuntu/byte_json/src/main.rs\"}}\n{\"features\":[],\"filenames\":[\"/home/ubuntu/byte_json/target/debug/byte_json\"],\"fresh\":false,\"package_id\":\"byte_json 0.1.0 (path+file:///home/ubuntu/byte_json)\",\"profile\":{\"debug_assertions\":true,\"debuginfo\":2,\"opt_level\":\"0\",\"overflow_checks\":true,\"test\":false},\"reason\":\"compiler-artifact\",\"target\":{\"crate_types\":[\"bin\"],\"kind\":[\"bin\"],\"name\":\"byte_json\",\"src_path\":\"/home/ubuntu/byte_json/src/main.rs\"}}\n    Finished dev [unoptimized + debuginfo] target(s) in 0.36 secs\n     Running `target/debug/byte_json`\nHello, world!\n```\n\n**After:**\n\n```\n$ RUSTC=../rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc cargo run --message-format json\n   Compiling byte_json v0.1.0 (file:///home/ubuntu/byte_json)\n{\"message\":{\"children\":[{\"children\":[],\"code\":null,\"level\":\"note\",\"message\":\"#[warn(dead_code)] on by default\",\"rendered\":null,\"spans\":[]}],\"code\":null,\"level\":\"warning\",\"message\":\"function is never used: `rah`\",\"rendered\":null,\"spans\":[{\"byte_end\":35,\"byte_start\":2,\"column_end\":2,\"column_start\":1,\"expansion\":null,\"file_name\":\"src/foo.rs\",\"is_primary\":true,\"label\":null,\"line_end\":5,\"line_start\":3,\"suggested_replacement\":null,\"text\":[{\"highlight_end\":11,\"highlight_start\":1,\"text\":\"fn rah() {\"},{\"highlight_end\":21,\"highlight_start\":1,\"text\":\"    println!(\\\"rah!\\\")\"},{\"highlight_end\":2,\"highlight_start\":1,\"text\":\"}\"}]}]},\"package_id\":\"byte_json 0.1.0 (path+file:///home/ubuntu/byte_json)\",\"reason\":\"compiler-message\",\"target\":{\"crate_types\":[\"bin\"],\"kind\":[\"bin\"],\"name\":\"byte_json\",\"src_path\":\"/home/ubuntu/byte_json/src/main.rs\"}}\n{\"message\":{\"children\":[{\"children\":[],\"code\":null,\"level\":\"note\",\"message\":\"#[warn(dead_code)] on by default\",\"rendered\":null,\"spans\":[]}],\"code\":null,\"level\":\"warning\",\"message\":\"function is never used: `alas`\",\"rendered\":null,\"spans\":[{\"byte_end\":35,\"byte_start\":0,\"column_end\":2,\"column_start\":1,\"expansion\":null,\"file_name\":\"src/bar.rs\",\"is_primary\":true,\"label\":null,\"line_end\":3,\"line_start\":1,\"suggested_replacement\":null,\"text\":[{\"highlight_end\":12,\"highlight_start\":1,\"text\":\"fn alas() {\"},{\"highlight_end\":22,\"highlight_start\":1,\"text\":\"    println!(\\\"alas\\\");\"},{\"highlight_end\":2,\"highlight_start\":1,\"text\":\"}\"}]}]},\"package_id\":\"byte_json 0.1.0 (path+file:///home/ubuntu/byte_json)\",\"reason\":\"compiler-message\",\"target\":{\"crate_types\":[\"bin\"],\"kind\":[\"bin\"],\"name\":\"byte_json\",\"src_path\":\"/home/ubuntu/byte_json/src/main.rs\"}}\n{\"features\":[],\"filenames\":[\"/home/ubuntu/byte_json/target/debug/byte_json\"],\"fresh\":false,\"package_id\":\"byte_json 0.1.0 (path+file:///home/ubuntu/byte_json)\",\"profile\":{\"debug_assertions\":true,\"debuginfo\":2,\"opt_level\":\"0\",\"overflow_checks\":true,\"test\":false},\"reason\":\"compiler-artifact\",\"target\":{\"crate_types\":[\"bin\"],\"kind\":[\"bin\"],\"name\":\"byte_json\",\"src_path\":\"/home/ubuntu/byte_json/src/main.rs\"}}\n    Finished dev [unoptimized + debuginfo] target(s) in 2.59 secs\n     Running `target/debug/byte_json`\nHello, world!\n```\n\nResolves #35164.\n\nr? @jonathandturner", "tree": {"sha": "aeb29efbbf46ccfab3089d1feafcc7de549393d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aeb29efbbf46ccfab3089d1feafcc7de549393d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68be86d032919e2eea1b04d5077d3e58ffaf0214", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68be86d032919e2eea1b04d5077d3e58ffaf0214", "html_url": "https://github.com/rust-lang/rust/commit/68be86d032919e2eea1b04d5077d3e58ffaf0214", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68be86d032919e2eea1b04d5077d3e58ffaf0214/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "504328a31a211814f9cac6de84c5a7ed154f58eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/504328a31a211814f9cac6de84c5a7ed154f58eb", "html_url": "https://github.com/rust-lang/rust/commit/504328a31a211814f9cac6de84c5a7ed154f58eb"}, {"sha": "bb2b8630f5ae9128f80d4e7a5d30f63aed55934f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb2b8630f5ae9128f80d4e7a5d30f63aed55934f", "html_url": "https://github.com/rust-lang/rust/commit/bb2b8630f5ae9128f80d4e7a5d30f63aed55934f"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "695c740f4052bd5b8110ef6cb05ece8a19cbf3fe", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/68be86d032919e2eea1b04d5077d3e58ffaf0214/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68be86d032919e2eea1b04d5077d3e58ffaf0214/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=68be86d032919e2eea1b04d5077d3e58ffaf0214", "patch": "@@ -256,8 +256,8 @@ impl DiagnosticSpan {\n         });\n         DiagnosticSpan {\n             file_name: start.file.name.clone(),\n-            byte_start: span.lo.0,\n-            byte_end: span.hi.0,\n+            byte_start: span.lo.0 - start.file.start_pos.0,\n+            byte_end: span.hi.0 - start.file.start_pos.0,\n             line_start: start.line,\n             line_end: end.line,\n             column_start: start.col.0 + 1,\n@@ -362,4 +362,3 @@ impl JsonEmitter {\n         suggestion.splice_lines(&*self.cm).iter().map(|line| line.0.to_owned()).collect()\n     }\n }\n-"}, {"sha": "c7bc26e3f5a9e34e7af1cfcc30654cbdf2bf0aad", "filename": "src/test/run-make/issue-35164/Makefile", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68be86d032919e2eea1b04d5077d3e58ffaf0214/src%2Ftest%2Frun-make%2Fissue-35164%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/68be86d032919e2eea1b04d5077d3e58ffaf0214/src%2Ftest%2Frun-make%2Fissue-35164%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-35164%2FMakefile?ref=68be86d032919e2eea1b04d5077d3e58ffaf0214", "patch": "@@ -0,0 +1,4 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) main.rs --error-format json 2>&1 | grep -q '\"byte_start\":490.*\"byte_end\":496'"}, {"sha": "24322a2484fe07fd13f410e6afd2dda3b6c49481", "filename": "src/test/run-make/issue-35164/main.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/68be86d032919e2eea1b04d5077d3e58ffaf0214/src%2Ftest%2Frun-make%2Fissue-35164%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68be86d032919e2eea1b04d5077d3e58ffaf0214/src%2Ftest%2Frun-make%2Fissue-35164%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-35164%2Fmain.rs?ref=68be86d032919e2eea1b04d5077d3e58ffaf0214", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod submodule;\n+\n+fn main() {\n+    submodule::foo();\n+}"}, {"sha": "7847c13af787d9ca196a637c1a024a1e552ae4ff", "filename": "src/test/run-make/issue-35164/submodule/mod.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/68be86d032919e2eea1b04d5077d3e58ffaf0214/src%2Ftest%2Frun-make%2Fissue-35164%2Fsubmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68be86d032919e2eea1b04d5077d3e58ffaf0214/src%2Ftest%2Frun-make%2Fissue-35164%2Fsubmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-35164%2Fsubmodule%2Fmod.rs?ref=68be86d032919e2eea1b04d5077d3e58ffaf0214", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {\n+    let _MyFoo = 2;\n+}"}]}