{"sha": "a0d55edc3873c7788ab2f91e394e53a5a77c16b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZDU1ZWRjMzg3M2M3Nzg4YWIyZjkxZTM5NGU1M2E1YTc3YzE2Yjg=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-10-27T16:26:44Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-10-27T16:26:44Z"}, "message": "Be more precise with function signatures\n\nFixes #2093", "tree": {"sha": "31b7744dedb362eefe873d799c4c2a509c4324f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31b7744dedb362eefe873d799c4c2a509c4324f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0d55edc3873c7788ab2f91e394e53a5a77c16b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d55edc3873c7788ab2f91e394e53a5a77c16b8", "html_url": "https://github.com/rust-lang/rust/commit/a0d55edc3873c7788ab2f91e394e53a5a77c16b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0d55edc3873c7788ab2f91e394e53a5a77c16b8/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad950830d0902aaacfb5a76355a203626eb93b5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad950830d0902aaacfb5a76355a203626eb93b5f", "html_url": "https://github.com/rust-lang/rust/commit/ad950830d0902aaacfb5a76355a203626eb93b5f"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "c95133343d6132fc364e5ad2d3f5bad4de6594e9", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/a0d55edc3873c7788ab2f91e394e53a5a77c16b8/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d55edc3873c7788ab2f91e394e53a5a77c16b8/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=a0d55edc3873c7788ab2f91e394e53a5a77c16b8", "patch": "@@ -2,7 +2,7 @@\n \n use ra_db::SourceDatabase;\n use ra_syntax::{\n-    algo::find_node_at_offset,\n+    algo::ancestors_at_offset,\n     ast::{self, ArgListOwner},\n     AstNode, SyntaxNode, TextUnit,\n };\n@@ -82,13 +82,15 @@ enum FnCallNode {\n \n impl FnCallNode {\n     fn with_node(syntax: &SyntaxNode, offset: TextUnit) -> Option<FnCallNode> {\n-        if let Some(expr) = find_node_at_offset::<ast::CallExpr>(syntax, offset) {\n-            return Some(FnCallNode::CallExpr(expr));\n-        }\n-        if let Some(expr) = find_node_at_offset::<ast::MethodCallExpr>(syntax, offset) {\n-            return Some(FnCallNode::MethodCallExpr(expr));\n-        }\n-        None\n+        ancestors_at_offset(syntax, offset).find_map(|node| {\n+            if let Some(expr) = ast::CallExpr::cast(node.clone()) {\n+                Some(FnCallNode::CallExpr(expr))\n+            } else if let Some(expr) = ast::MethodCallExpr::cast(node.clone()) {\n+                Some(FnCallNode::MethodCallExpr(expr))\n+            } else {\n+                None\n+            }\n+        })\n     }\n \n     fn name_ref(&self) -> Option<ast::NameRef> {\n@@ -438,4 +440,26 @@ By default this method stops actor's `Context`.\"#\n         let call_info = analysis.call_info(position).unwrap();\n         assert!(call_info.is_none());\n     }\n+\n+    #[test]\n+    fn test_nested_method_in_lamba() {\n+        let info = call_info(\n+            r#\"struct Foo;\n+\n+impl Foo {\n+    fn bar(&self, _: u32) { }\n+}\n+\n+fn bar(_: u32) { }\n+\n+fn main() {\n+    let foo = Foo;\n+    std::thread::spawn(move || foo.bar(<|>));\n+}\"#,\n+        );\n+\n+        assert_eq!(info.parameters(), [\"&self\", \"_: u32\"]);\n+        assert_eq!(info.active_parameter, Some(1));\n+        assert_eq!(info.label(), \"fn bar(&self, _: u32)\");\n+    }\n }"}]}