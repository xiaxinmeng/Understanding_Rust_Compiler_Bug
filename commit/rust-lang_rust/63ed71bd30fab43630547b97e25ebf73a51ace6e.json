{"sha": "63ed71bd30fab43630547b97e25ebf73a51ace6e", "node_id": "C_kwDOAAsO6NoAKDYzZWQ3MWJkMzBmYWI0MzYzMDU0N2I5N2UyNWViZjczYTUxYWNlNmU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-10-10T07:47:09Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-10-10T07:47:09Z"}, "message": "Honor cfg attributes on params when lowering their patterns", "tree": {"sha": "819618a87d6cae047c45289a78f83ed10b196879", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/819618a87d6cae047c45289a78f83ed10b196879"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63ed71bd30fab43630547b97e25ebf73a51ace6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63ed71bd30fab43630547b97e25ebf73a51ace6e", "html_url": "https://github.com/rust-lang/rust/commit/63ed71bd30fab43630547b97e25ebf73a51ace6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63ed71bd30fab43630547b97e25ebf73a51ace6e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "476d0438749e3a5b2669811f9429da79a6628e8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/476d0438749e3a5b2669811f9429da79a6628e8a", "html_url": "https://github.com/rust-lang/rust/commit/476d0438749e3a5b2669811f9429da79a6628e8a"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "759f3b8c04b6cdb1e2ea7cd02cc52b2df7f4b894", "filename": "crates/hir-def/src/body.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/63ed71bd30fab43630547b97e25ebf73a51ace6e/crates%2Fhir-def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ed71bd30fab43630547b97e25ebf73a51ace6e/crates%2Fhir-def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody.rs?ref=63ed71bd30fab43630547b97e25ebf73a51ace6e", "patch": "@@ -311,7 +311,20 @@ impl Body {\n             DefWithBodyId::FunctionId(f) => {\n                 let f = f.lookup(db);\n                 let src = f.source(db);\n-                params = src.value.param_list();\n+                params = src.value.param_list().map(|param_list| {\n+                    let item_tree = f.id.item_tree(db);\n+                    let func = &item_tree[f.id.value];\n+                    let krate = f.container.module(db).krate;\n+                    let crate_graph = db.crate_graph();\n+                    (\n+                        param_list,\n+                        func.params.clone().map(move |param| {\n+                            item_tree\n+                                .attrs(db, krate, param.into())\n+                                .is_cfg_enabled(&crate_graph[krate].cfg_options)\n+                        }),\n+                    )\n+                });\n                 (src.file_id, f.module(db), src.value.body().map(ast::Expr::from))\n             }\n             DefWithBodyId::ConstId(c) => {\n@@ -334,6 +347,7 @@ impl Body {\n         let expander = Expander::new(db, file_id, module);\n         let (mut body, source_map) = Body::new(db, expander, params, body);\n         body.shrink_to_fit();\n+\n         (Arc::new(body), Arc::new(source_map))\n     }\n \n@@ -370,7 +384,7 @@ impl Body {\n     fn new(\n         db: &dyn DefDatabase,\n         expander: Expander,\n-        params: Option<ast::ParamList>,\n+        params: Option<(ast::ParamList, impl Iterator<Item = bool>)>,\n         body: Option<ast::Expr>,\n     ) -> (Body, BodySourceMap) {\n         lower::lower(db, expander, params, body)"}, {"sha": "ccc01c3efca51468eb320a664128bba7d61473e7", "filename": "crates/hir-def/src/body/lower.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/63ed71bd30fab43630547b97e25ebf73a51ace6e/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ed71bd30fab43630547b97e25ebf73a51ace6e/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs?ref=63ed71bd30fab43630547b97e25ebf73a51ace6e", "patch": "@@ -77,7 +77,7 @@ impl<'a> LowerCtx<'a> {\n pub(super) fn lower(\n     db: &dyn DefDatabase,\n     expander: Expander,\n-    params: Option<ast::ParamList>,\n+    params: Option<(ast::ParamList, impl Iterator<Item = bool>)>,\n     body: Option<ast::Expr>,\n ) -> (Body, BodySourceMap) {\n     ExprCollector {\n@@ -119,11 +119,13 @@ struct ExprCollector<'a> {\n impl ExprCollector<'_> {\n     fn collect(\n         mut self,\n-        param_list: Option<ast::ParamList>,\n+        param_list: Option<(ast::ParamList, impl Iterator<Item = bool>)>,\n         body: Option<ast::Expr>,\n     ) -> (Body, BodySourceMap) {\n-        if let Some(param_list) = param_list {\n-            if let Some(self_param) = param_list.self_param() {\n+        if let Some((param_list, mut attr_enabled)) = param_list {\n+            if let Some(self_param) =\n+                param_list.self_param().filter(|_| attr_enabled.next().unwrap_or(false))\n+            {\n                 let ptr = AstPtr::new(&self_param);\n                 let param_pat = self.alloc_pat(\n                     Pat::Bind {\n@@ -139,7 +141,11 @@ impl ExprCollector<'_> {\n                 self.body.params.push(param_pat);\n             }\n \n-            for pat in param_list.params().filter_map(|param| param.pat()) {\n+            for pat in param_list\n+                .params()\n+                .zip(attr_enabled)\n+                .filter_map(|(param, enabled)| param.pat().filter(|_| enabled))\n+            {\n                 let param_pat = self.collect_pat(pat);\n                 self.body.params.push(param_pat);\n             }"}, {"sha": "74de33117ee7d6dff7a4f90fb79fabd3e77cb7b9", "filename": "crates/hir-ty/src/tests/patterns.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/63ed71bd30fab43630547b97e25ebf73a51ace6e/crates%2Fhir-ty%2Fsrc%2Ftests%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ed71bd30fab43630547b97e25ebf73a51ace6e/crates%2Fhir-ty%2Fsrc%2Ftests%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fpatterns.rs?ref=63ed71bd30fab43630547b97e25ebf73a51ace6e", "patch": "@@ -1070,3 +1070,13 @@ fn main() {\n         \"#,\n     );\n }\n+\n+#[test]\n+fn cfg_params() {\n+    check_types(\n+        r#\"\n+fn my_fn(#[cfg(feature = \"feature\")] u8: u8, u32: u32) {}\n+                                           //^^^ u32\n+\"#,\n+    );\n+}"}, {"sha": "f0563e290db411cb7ef126b02d5ac104eec4009c", "filename": "crates/ide-completion/src/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/63ed71bd30fab43630547b97e25ebf73a51ace6e/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ed71bd30fab43630547b97e25ebf73a51ace6e/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext.rs?ref=63ed71bd30fab43630547b97e25ebf73a51ace6e", "patch": "@@ -1,4 +1,4 @@\n-//! See `CompletionContext` structure.\n+//! See [`CompletionContext`] structure.\n \n mod analysis;\n #[cfg(test)]"}]}