{"sha": "18841ec342def87006b0535bbaa658d5fa43ba28", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ODQxZWMzNDJkZWY4NzAwNmIwNTM1YmJhYTY1OGQ1ZmE0M2JhMjg=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-03-06T20:37:07Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-03-06T20:50:30Z"}, "message": "Revert fmt version, add rustdoc-json-types to bootstrap tests", "tree": {"sha": "db0e42028650ac420a3b0d00f173b4846e36010e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db0e42028650ac420a3b0d00f173b4846e36010e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18841ec342def87006b0535bbaa658d5fa43ba28", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmBD6xYACgkQfsyTL4ss\ncx6z8w//U35Hdwg5NBlz4j6e/SWzzWBeROw9A9+LEZhpg3kzRHkSFIKN5+rs2rFU\n6C0P0c0dY3dFKx+mLNdA8heX9hSoUv8LZvWan2ziYtUfPecpYT5C6ayXcsvqyZPK\nveQ7BzfAX+bVu8i0VFQ2Fs5SKbUcNfBX6/KZRHGN0LHUEC78N7scaMsV+WrtXTXd\n0eII1wELcBwEeKOgs40mO007vkEh47LaY2SWmZ3l2n2PP/PV86vLaIIinEdUbfvf\nAmSwBMtE8v87cqE6SErQ4cru76dNZA2Lcy6sb1fnrmFA/CaglVJT51HKCF2hTklb\nQHJWNtnMPUkQ1W3FuTBZ2j359RJ4cekWiRg3KGa8TOPsmvb04KlTX5wb0mjRl9+C\nhRFB4wkLtsP0jOi1wlLCripZ3oH79rNPz52CrDn6Z8nBrnRzd2QeuY3Acfhpw659\n8hKxDxcVX7+CCAwQPbQi3k67EWxjOqY+AWXudsjqFyNm3pZX+BNKRgblQ5wJzbSj\nf/qHfq/unzTD5uq5FOIzoBVL9hzypZ/MNYXnOw9ZGbfwSI9Z/sCOxce8g1kiDvSi\nKSz505khVx7y0LSp4FFhLk+SdzvX28aYVtPywhxODwIhztYyYlVikOo2HfVn1SYJ\nEMUiq6g00Wsq21zLlB87I6Q7EBXuT8YC2wlhP9xf9dFzoSI6y4E=\n=4CA4\n-----END PGP SIGNATURE-----", "payload": "tree db0e42028650ac420a3b0d00f173b4846e36010e\nparent 70c9b370e822424de5c35b97bf49dffb5b8b9167\nauthor Rune Tynan <runetynan@gmail.com> 1615063027 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1615063830 -0500\n\nRevert fmt version, add rustdoc-json-types to bootstrap tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18841ec342def87006b0535bbaa658d5fa43ba28", "html_url": "https://github.com/rust-lang/rust/commit/18841ec342def87006b0535bbaa658d5fa43ba28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18841ec342def87006b0535bbaa658d5fa43ba28/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70c9b370e822424de5c35b97bf49dffb5b8b9167", "url": "https://api.github.com/repos/rust-lang/rust/commits/70c9b370e822424de5c35b97bf49dffb5b8b9167", "html_url": "https://github.com/rust-lang/rust/commit/70c9b370e822424de5c35b97bf49dffb5b8b9167"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "328a220430601b11d9119cdf3baad16a3cf703f4", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18841ec342def87006b0535bbaa658d5fa43ba28/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/18841ec342def87006b0535bbaa658d5fa43ba28/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=18841ec342def87006b0535bbaa658d5fa43ba28", "patch": "@@ -1,7 +1,5 @@\n # This file is automatically @generated by Cargo.\n # It is not intended for manual editing.\n-version = 3\n-\n [[package]]\n name = \"addr2line\"\n version = \"0.14.0\""}, {"sha": "22a1eb63702357d5ceb0aab2c459ebdd5feba64b", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18841ec342def87006b0535bbaa658d5fa43ba28/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18841ec342def87006b0535bbaa658d5fa43ba28/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=18841ec342def87006b0535bbaa658d5fa43ba28", "patch": "@@ -397,6 +397,7 @@ impl<'a> Builder<'a> {\n                 test::Crate,\n                 test::CrateLibrustc,\n                 test::CrateRustdoc,\n+                test::CrateRustdocJsonTypes,\n                 test::Linkcheck,\n                 test::TierCheck,\n                 test::Cargotest,"}, {"sha": "03ae684e23fedb0a23d765824769f5484b24f93b", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/18841ec342def87006b0535bbaa658d5fa43ba28/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18841ec342def87006b0535bbaa658d5fa43ba28/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=18841ec342def87006b0535bbaa658d5fa43ba28", "patch": "@@ -1922,6 +1922,77 @@ impl Step for CrateRustdoc {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+pub struct CrateRustdocJsonTypes {\n+    host: TargetSelection,\n+    test_kind: TestKind,\n+}\n+\n+impl Step for CrateRustdocJsonTypes {\n+    type Output = ();\n+    const DEFAULT: bool = true;\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        run.path(\"src/rustdoc-json-types\")\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        let builder = run.builder;\n+\n+        let test_kind = builder.kind.into();\n+\n+        builder.ensure(CrateRustdocJsonTypes { host: run.target, test_kind });\n+    }\n+\n+    fn run(self, builder: &Builder<'_>) {\n+        let test_kind = self.test_kind;\n+        let target = self.host;\n+\n+        // Use the previous stage compiler to reuse the artifacts that are\n+        // created when running compiletest for src/test/rustdoc. If this used\n+        // `compiler`, then it would cause rustdoc to be built *again*, which\n+        // isn't really necessary.\n+        let compiler = builder.compiler_for(builder.top_stage, target, target);\n+        builder.ensure(compile::Rustc { compiler, target });\n+\n+        let mut cargo = tool::prepare_tool_cargo(\n+            builder,\n+            compiler,\n+            Mode::ToolRustc,\n+            target,\n+            test_kind.subcommand(),\n+            \"src/rustdoc-json-types\",\n+            SourceType::InTree,\n+            &[],\n+        );\n+        if test_kind.subcommand() == \"test\" && !builder.fail_fast {\n+            cargo.arg(\"--no-fail-fast\");\n+        }\n+\n+        cargo.arg(\"-p\").arg(\"rustdoc-json-types\");\n+\n+        cargo.arg(\"--\");\n+        cargo.args(&builder.config.cmd.test_args());\n+\n+        if self.host.contains(\"musl\") {\n+            cargo.arg(\"'-Ctarget-feature=-crt-static'\");\n+        }\n+\n+        if !builder.config.verbose_tests {\n+            cargo.arg(\"--quiet\");\n+        }\n+\n+        builder.info(&format!(\n+            \"{} rustdoc-json-types stage{} ({} -> {})\",\n+            test_kind, compiler.stage, &compiler.host, target\n+        ));\n+        let _time = util::timeit(&builder);\n+\n+        try_run(builder, &mut cargo.into());\n+    }\n+}\n+\n /// Some test suites are run inside emulators or on remote devices, and most\n /// of our test binaries are linked dynamically which means we need to ship\n /// the standard library and such to the emulator ahead of time. This step"}, {"sha": "8b0c049c05bc7186962364946b0355d45f2c1e7a", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18841ec342def87006b0535bbaa658d5fa43ba28/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18841ec342def87006b0535bbaa658d5fa43ba28/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=18841ec342def87006b0535bbaa658d5fa43ba28", "patch": "@@ -242,7 +242,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n                     )\n                 })\n                 .collect(),\n-            format_version: 5,\n+            format_version: 4,\n         };\n         let mut p = self.out_path.clone();\n         p.push(output.index.get(&output.root).unwrap().name.clone().unwrap());"}]}