{"sha": "2e4766c3afcdac9f45edbd73723384b360ee4b68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNDc2NmMzYWZjZGFjOWY0NWVkYmQ3MzcyMzM4NGIzNjBlZTRiNjg=", "commit": {"author": {"name": "Vardhan Thigle", "email": "vardhan.thigle@fortanix.com", "date": "2019-01-09T11:50:37Z"}, "committer": {"name": "Vardhan Thigle", "email": "vardhan.thigle@fortanix.com", "date": "2019-01-09T12:37:59Z"}, "message": "Exposing enclave image-base to the enclave application\n\nimage-base could be used by crates like backtrace to providing to make\nsymbol resolution easier.", "tree": {"sha": "d7057bf0b7f19b7ccd870a9310dad0c13fb95cee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7057bf0b7f19b7ccd870a9310dad0c13fb95cee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e4766c3afcdac9f45edbd73723384b360ee4b68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e4766c3afcdac9f45edbd73723384b360ee4b68", "html_url": "https://github.com/rust-lang/rust/commit/2e4766c3afcdac9f45edbd73723384b360ee4b68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e4766c3afcdac9f45edbd73723384b360ee4b68/comments", "author": null, "committer": null, "parents": [{"sha": "4166a4e5d0ef32ceb0d67d1f5dba334caf439a0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4166a4e5d0ef32ceb0d67d1f5dba334caf439a0d", "html_url": "https://github.com/rust-lang/rust/commit/4166a4e5d0ef32ceb0d67d1f5dba334caf439a0d"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "808f1ce3ff2c73a4265f9d60319357505de2a425", "filename": "src/libstd/sys/sgx/abi/mem.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e4766c3afcdac9f45edbd73723384b360ee4b68/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e4766c3afcdac9f45edbd73723384b360ee4b68/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fmem.rs?ref=2e4766c3afcdac9f45edbd73723384b360ee4b68", "patch": "@@ -17,8 +17,10 @@ extern {\n // Do not remove inline: will result in relocation failure\n // For the same reason we use inline ASM here instead of an extern static to\n // locate the base\n+/// Returns address at which current enclave is loaded.\n #[inline(always)]\n-fn image_base() -> u64 {\n+#[unstable(feature = \"sgx_platform\", issue = \"56975\")]\n+pub fn image_base() -> u64 {\n     let base;\n     unsafe { asm!(\"lea IMAGE_BASE(%rip),$0\":\"=r\"(base)) };\n     base"}, {"sha": "2b8e1da05791dee62231a0c0c1aeeb02ee26cadf", "filename": "src/libstd/sys/sgx/backtrace.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e4766c3afcdac9f45edbd73723384b360ee4b68/src%2Flibstd%2Fsys%2Fsgx%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e4766c3afcdac9f45edbd73723384b360ee4b68/src%2Flibstd%2Fsys%2Fsgx%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fbacktrace.rs?ref=2e4766c3afcdac9f45edbd73723384b360ee4b68", "patch": "@@ -3,6 +3,7 @@ use error::Error;\n use libc;\n use sys_common::backtrace::Frame;\n use unwind as uw;\n+use sys::sgx::abi::mem::image_base;\n \n pub struct BacktraceContext;\n \n@@ -75,11 +76,6 @@ extern \"C\" fn trace_fn(\n     uw::_URC_NO_REASON\n }\n \n-extern {\n-   static IMAGE_BASE: u8;\n-}\n-\n-\n // To reduce TCB size in Sgx enclave, we do not want to implement resolve_symname functionality.\n // Rather, we print the offset of the address here, which could be later mapped to correct function.\n pub fn resolve_symname<F>(frame: Frame,\n@@ -88,7 +84,7 @@ pub fn resolve_symname<F>(frame: Frame,\n     where F: FnOnce(Option<&str>) -> io::Result<()>\n {\n     callback(Some(&format!(\"0x{:x}\",\n-            (unsafe {frame.symbol_addr.wrapping_offset_from(&IMAGE_BASE)}))))\n+            (frame.symbol_addr.wrapping_offset_from(image_base() as _)))))\n }\n \n pub fn foreach_symbol_fileline<F>(_: Frame,"}]}