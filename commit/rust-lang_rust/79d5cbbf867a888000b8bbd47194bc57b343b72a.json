{"sha": "79d5cbbf867a888000b8bbd47194bc57b343b72a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZDVjYmJmODY3YTg4ODAwMGI4YmJkNDcxOTRiYzU3YjM0M2I3MmE=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-07-11T08:45:26Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-07-19T09:29:11Z"}, "message": "Use Option::as_deref", "tree": {"sha": "3aa247b44f8a4e341fdcdeccdccbbc5db5f0a2cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aa247b44f8a4e341fdcdeccdccbbc5db5f0a2cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79d5cbbf867a888000b8bbd47194bc57b343b72a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79d5cbbf867a888000b8bbd47194bc57b343b72a", "html_url": "https://github.com/rust-lang/rust/commit/79d5cbbf867a888000b8bbd47194bc57b343b72a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79d5cbbf867a888000b8bbd47194bc57b343b72a/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07d56cba8ffd854f1c8b91bb1372130e5abe6169", "url": "https://api.github.com/repos/rust-lang/rust/commits/07d56cba8ffd854f1c8b91bb1372130e5abe6169", "html_url": "https://github.com/rust-lang/rust/commit/07d56cba8ffd854f1c8b91bb1372130e5abe6169"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "3929ce28ab0a685ca0aa9b9f619d74ccc88e0347", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79d5cbbf867a888000b8bbd47194bc57b343b72a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d5cbbf867a888000b8bbd47194bc57b343b72a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=79d5cbbf867a888000b8bbd47194bc57b343b72a", "patch": "@@ -171,7 +171,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         .and_then(extract_lldb_version)\n         .map(|(v, b)| (Some(v), b))\n         .unwrap_or((None, false));\n-    let color = match matches.opt_str(\"color\").as_ref().map(|x| &**x) {\n+    let color = match matches.opt_str(\"color\").as_deref() {\n         Some(\"auto\") | None => ColorConfig::AutoColor,\n         Some(\"always\") => ColorConfig::AlwaysColor,\n         Some(\"never\") => ColorConfig::NeverColor,\n@@ -255,7 +255,7 @@ pub fn log_config(config: &Config) {\n     logv(c, format!(\"stage_id: {}\", config.stage_id));\n     logv(c, format!(\"mode: {}\", config.mode));\n     logv(c, format!(\"run_ignored: {}\", config.run_ignored));\n-    logv(c, format!(\"filter: {}\", opt_str(&config.filter.as_ref().map(|re| re.to_owned()))));\n+    logv(c, format!(\"filter: {}\", opt_str(&config.filter)));\n     logv(c, format!(\"filter_exact: {}\", config.filter_exact));\n     logv(\n         c,\n@@ -723,9 +723,7 @@ fn make_test_closure(\n     let config = config.clone();\n     let testpaths = testpaths.clone();\n     let revision = revision.cloned();\n-    test::DynTestFn(Box::new(move || {\n-        runtest::run(config, &testpaths, revision.as_ref().map(|s| s.as_str()))\n-    }))\n+    test::DynTestFn(Box::new(move || runtest::run(config, &testpaths, revision.as_deref())))\n }\n \n /// Returns `true` if the given target is an Android target for the"}]}