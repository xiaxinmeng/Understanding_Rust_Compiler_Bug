{"sha": "9e399463e700075022b39920ce55aeee2be63472", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMzk5NDYzZTcwMDA3NTAyMmIzOTkyMGNlNTVhZWVlMmJlNjM0NzI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-03-28T19:03:57Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-03-28T19:03:57Z"}, "message": "Merge pull request #881 from marcusklaas/nightly-update\n\nFix tuple destructuring in impl fns", "tree": {"sha": "0f1cb3aab943d26750d4c3c89a862bccdd45ffa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1cb3aab943d26750d4c3c89a862bccdd45ffa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e399463e700075022b39920ce55aeee2be63472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e399463e700075022b39920ce55aeee2be63472", "html_url": "https://github.com/rust-lang/rust/commit/9e399463e700075022b39920ce55aeee2be63472", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e399463e700075022b39920ce55aeee2be63472/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd95df54ab5de3dddfd47d8ae9fc52fea803844", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd95df54ab5de3dddfd47d8ae9fc52fea803844", "html_url": "https://github.com/rust-lang/rust/commit/8fd95df54ab5de3dddfd47d8ae9fc52fea803844"}, {"sha": "03bf1ceeb9e015fb8a3aca88e49b33b73158f0d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/03bf1ceeb9e015fb8a3aca88e49b33b73158f0d4", "html_url": "https://github.com/rust-lang/rust/commit/03bf1ceeb9e015fb8a3aca88e49b33b73158f0d4"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "ce3e5701ad272a4cbe8c49837f7d39d8a2d15db8", "filename": "Cargo.lock", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9e399463e700075022b39920ce55aeee2be63472/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9e399463e700075022b39920ce55aeee2be63472/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9e399463e700075022b39920ce55aeee2be63472", "patch": "@@ -6,7 +6,7 @@ dependencies = [\n  \"env_logger 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 0.1.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"strings 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syntex_syntax 0.29.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -39,7 +39,7 @@ version = \"0.3.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"log 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 0.1.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -52,7 +52,7 @@ name = \"kernel32-sys\"\n version = \"0.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"winapi 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -79,7 +79,7 @@ dependencies = [\n \n [[package]]\n name = \"regex\"\n-version = \"0.1.56\"\n+version = \"0.1.58\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"aho-corasick 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -125,7 +125,7 @@ version = \"0.2.14\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"kernel32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"winapi 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -153,7 +153,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"winapi\"\n-version = \"0.2.5\"\n+version = \"0.2.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]"}, {"sha": "97f12df8187a79a76903f3d14bc51ed7f8614248", "filename": "src/items.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9e399463e700075022b39920ce55aeee2be63472/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e399463e700075022b39920ce55aeee2be63472/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=9e399463e700075022b39920ce55aeee2be63472", "patch": "@@ -20,9 +20,8 @@ use comment::{FindUncommented, contains_comment};\n use visitor::FmtVisitor;\n use rewrite::{Rewrite, RewriteContext};\n use config::{Config, BlockIndentStyle, Density, ReturnIndent, BraceStyle, StructLitStyle};\n-use syntax::codemap;\n \n-use syntax::{ast, abi, ptr};\n+use syntax::{ast, abi, ptr, codemap};\n use syntax::codemap::{Span, BytePos, mk_sp};\n use syntax::parse::token;\n use syntax::ast::ImplItem;\n@@ -1477,7 +1476,13 @@ fn rewrite_args(context: &RewriteContext,\n     // it is explicit.\n     if args.len() >= min_args || variadic {\n         let comment_span_start = if min_args == 2 {\n-            let reduced_span = mk_sp(span.lo, args[1].ty.span.lo);\n+            let second_arg_start = if arg_has_pattern(&args[1]) {\n+                args[1].pat.span.lo\n+            } else {\n+                args[1].ty.span.lo\n+            };\n+            let reduced_span = mk_sp(span.lo, second_arg_start);\n+\n             context.codemap.span_after_last(reduced_span, \",\")\n         } else {\n             span.lo\n@@ -1562,6 +1567,19 @@ fn rewrite_args(context: &RewriteContext,\n     write_list(&arg_items, &fmt)\n }\n \n+fn arg_has_pattern(arg: &ast::Arg) -> bool {\n+    if let ast::PatKind::Ident(_,\n+                               codemap::Spanned {\n+                                   node: ast::Ident { name: ast::Name(0u32), .. },\n+                                   ..\n+                               },\n+                               _) = arg.pat.node {\n+        false\n+    } else {\n+        true\n+    }\n+}\n+\n fn compute_budgets_for_args(context: &RewriteContext,\n                             result: &str,\n                             indent: Indent,"}, {"sha": "e96baa91473ca1e890dbbfb274b1d9f2d7d0ea37", "filename": "tests/source/impls.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9e399463e700075022b39920ce55aeee2be63472/tests%2Fsource%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e399463e700075022b39920ce55aeee2be63472/tests%2Fsource%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimpls.rs?ref=9e399463e700075022b39920ce55aeee2be63472", "patch": "@@ -73,6 +73,12 @@ impl X { fn do_parse(  mut  self : X ) {} }\n \n impl Y5000 {\n     fn bar(self: X< 'a ,  'b >, y: Y) {}\n+\n+    fn bad(&self, ( x, y): CoorT) {}\n+\n+    fn turbo_bad(self: X< 'a ,  'b >  , ( x, y): CoorT) {\n+        \n+    }\n }\n \n pub impl<T> Foo for Bar<T> where T: Foo"}, {"sha": "c592ab6f9f92aeca62ab687ba2101c951a0154c5", "filename": "tests/target/impls.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e399463e700075022b39920ce55aeee2be63472/tests%2Ftarget%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e399463e700075022b39920ce55aeee2be63472/tests%2Ftarget%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpls.rs?ref=9e399463e700075022b39920ce55aeee2be63472", "patch": "@@ -93,6 +93,10 @@ impl X {\n \n impl Y5000 {\n     fn bar(self: X<'a, 'b>, y: Y) {}\n+\n+    fn bad(&self, (x, y): CoorT) {}\n+\n+    fn turbo_bad(self: X<'a, 'b>, (x, y): CoorT) {}\n }\n \n pub impl<T> Foo for Bar<T>"}]}