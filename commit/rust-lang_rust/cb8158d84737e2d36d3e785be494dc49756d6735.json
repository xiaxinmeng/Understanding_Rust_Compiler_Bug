{"sha": "cb8158d84737e2d36d3e785be494dc49756d6735", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiODE1OGQ4NDczN2UyZDM2ZDNlNzg1YmU0OTRkYzQ5NzU2ZDY3MzU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-12T21:55:10Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-12T21:55:10Z"}, "message": "correctly set the `reached_depth` field", "tree": {"sha": "5c7d9b4a50928d1f61d7d8820ece04f3a00ef891", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c7d9b4a50928d1f61d7d8820ece04f3a00ef891"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb8158d84737e2d36d3e785be494dc49756d6735", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb8158d84737e2d36d3e785be494dc49756d6735", "html_url": "https://github.com/rust-lang/rust/commit/cb8158d84737e2d36d3e785be494dc49756d6735", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb8158d84737e2d36d3e785be494dc49756d6735/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59f5045a1696018411f10807057e3168aa8a6ee5", "url": "https://api.github.com/repos/rust-lang/rust/commits/59f5045a1696018411f10807057e3168aa8a6ee5", "html_url": "https://github.com/rust-lang/rust/commit/59f5045a1696018411f10807057e3168aa8a6ee5"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "be7765c02462672ebc2066a4f2a7e0b4e3f2ba97", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cb8158d84737e2d36d3e785be494dc49756d6735/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb8158d84737e2d36d3e785be494dc49756d6735/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=cb8158d84737e2d36d3e785be494dc49756d6735", "patch": "@@ -4084,7 +4084,6 @@ impl<'o, 'tcx> TraitObligationStack<'o, 'tcx> {\n /// provisional results added from the subtree that encountered the\n /// error.  When we pop the node at `reached_depth` from the stack, we\n /// can commit all the things that remain in the provisional cache.\n-#[derive(Default)]\n struct ProvisionalEvaluationCache<'tcx> {\n     /// next \"depth first number\" to issue -- just a counter\n     dfn: Cell<usize>,\n@@ -4132,6 +4131,16 @@ struct ProvisionalEvaluation {\n     result: EvaluationResult,\n }\n \n+impl<'tcx> Default for ProvisionalEvaluationCache<'tcx> {\n+    fn default() -> Self {\n+        Self {\n+            dfn: Cell::new(0),\n+            reached_depth: Cell::new(std::usize::MAX),\n+            map: Default::default(),\n+        }\n+    }\n+}\n+\n impl<'tcx> ProvisionalEvaluationCache<'tcx> {\n     /// Get the next DFN in sequence (basically a counter).\n     fn next_dfn(&self) -> usize {\n@@ -4146,9 +4155,10 @@ impl<'tcx> ProvisionalEvaluationCache<'tcx> {\n     /// `self.current_reached_depth()` and above.\n     fn get_provisional(&self, fresh_trait_ref: ty::PolyTraitRef<'tcx>) -> Option<EvaluationResult> {\n         debug!(\n-            \"get_provisional(fresh_trait_ref={:?}) = {:#?}\",\n+            \"get_provisional(fresh_trait_ref={:?}) = {:#?} with reached-depth {}\",\n             fresh_trait_ref,\n             self.map.borrow().get(&fresh_trait_ref),\n+            self.reached_depth.get(),\n         );\n         Some(self.map.borrow().get(&fresh_trait_ref)?.result)\n     }\n@@ -4240,7 +4250,7 @@ impl<'tcx> ProvisionalEvaluationCache<'tcx> {\n             op(fresh_trait_ref, eval.result);\n         }\n \n-        self.reached_depth.set(depth);\n+        self.reached_depth.set(std::usize::MAX);\n     }\n }\n "}]}