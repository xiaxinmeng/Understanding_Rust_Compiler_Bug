{"sha": "af7b87f69d9c4633d7e0c7dd77f34c23bbd433d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmN2I4N2Y2OWQ5YzQ2MzNkN2UwYzdkZDc3ZjM0YzIzYmJkNDMzZDg=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-07-22T14:18:53Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-07-25T17:47:03Z"}, "message": "debuginfo: Minor cleanup now possible with new snapshot.", "tree": {"sha": "711be59787b3861b4916a10065571dd8baed7cf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/711be59787b3861b4916a10065571dd8baed7cf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af7b87f69d9c4633d7e0c7dd77f34c23bbd433d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af7b87f69d9c4633d7e0c7dd77f34c23bbd433d8", "html_url": "https://github.com/rust-lang/rust/commit/af7b87f69d9c4633d7e0c7dd77f34c23bbd433d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af7b87f69d9c4633d7e0c7dd77f34c23bbd433d8/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "url": "https://api.github.com/repos/rust-lang/rust/commits/02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "html_url": "https://github.com/rust-lang/rust/commit/02a0f2822e4911ffa3a36f48c0d9afc48f428ece"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "50acb080978bc37915d4d7d2cb50973421b3e192", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/af7b87f69d9c4633d7e0c7dd77f34c23bbd433d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af7b87f69d9c4633d7e0c7dd77f34c23bbd433d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=af7b87f69d9c4633d7e0c7dd77f34c23bbd433d8", "patch": "@@ -138,7 +138,7 @@ pub fn finalize(cx: @mut CrateContext) {\n pub fn create_local_var_metadata(bcx: @mut Block, local: &ast::Local) {\n     let cx = bcx.ccx();\n     let def_map = cx.tcx.def_map;\n-    let pattern = local.node.pat;\n+    let pattern = local.pat;\n \n     let scope = match bcx.parent {\n         None => create_function_metadata(bcx.fcx),\n@@ -157,7 +157,7 @@ pub fn create_local_var_metadata(bcx: @mut Block, local: &ast::Local) {\n         let ty = node_id_type(bcx, node_id);\n         let type_metadata = type_metadata(cx, ty, span);\n \n-        let var_metadata = do as_c_str(name) |name| {\n+        let var_metadata = do name.as_c_str |name| {\n             unsafe {\n                 llvm::LLVMDIBuilderCreateLocalVariable(\n                     DIB(cx),\n@@ -188,7 +188,7 @@ pub fn create_local_var_metadata(bcx: @mut Block, local: &ast::Local) {\n                 var_metadata,\n                 bcx.llbb);\n \n-            llvm::LLVMSetInstDebugLocation(trans::build::B(bcx), instr);\n+            llvm::LLVMSetInstDebugLocation(trans::build::B(bcx).llbuilder, instr);\n         }\n     }\n }\n@@ -227,7 +227,7 @@ pub fn create_argument_metadata(bcx: @mut Block, arg: &ast::arg, span: span) {\n         let name: &str = cx.sess.str_of(ident);\n         debug!(\"create_argument_metadata: %s\", name);\n \n-        let arg_metadata = do as_c_str(name) |name| {\n+        let arg_metadata = do name.as_c_str |name| {\n             unsafe {\n                 llvm::LLVMDIBuilderCreateLocalVariable(\n                     DIB(cx),\n@@ -260,7 +260,7 @@ pub fn create_argument_metadata(bcx: @mut Block, arg: &ast::arg, span: span) {\n                 arg_metadata,\n                 bcx.llbb);\n \n-            llvm::LLVMSetInstDebugLocation(trans::build::B(bcx), instr);\n+            llvm::LLVMSetInstDebugLocation(trans::build::B(bcx).llbuilder, instr);\n         }\n     }\n \n@@ -623,8 +623,6 @@ fn tuple_metadata(cx: &mut CrateContext,\n fn enum_metadata(cx: &mut CrateContext,\n                  enum_type: ty::t,\n                  enum_def_id: ast::def_id,\n-                 // _substs is only needed in the other version. Will go away with new snapshot.\n-                 _substs: &ty::substs,\n                  span: span)\n               -> DIType {\n \n@@ -1128,8 +1126,8 @@ fn type_metadata(cx: &mut CrateContext,\n                 }\n             }\n         },\n-        ty::ty_enum(def_id, ref substs) => {\n-            enum_metadata(cx, t, def_id, substs, span)\n+        ty::ty_enum(def_id, _) => {\n+            enum_metadata(cx, t, def_id, span)\n         },\n         ty::ty_box(ref mt) => {\n             create_pointer_to_box_metadata(cx, t, mt.ty)"}]}