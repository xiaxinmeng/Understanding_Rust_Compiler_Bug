{"sha": "ffcf61884245ca515f08f8685dc324b9db727e53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmY2Y2MTg4NDI0NWNhNTE1ZjA4Zjg2ODVkYzMyNGI5ZGI3MjdlNTM=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-27T08:21:04Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-27T08:21:04Z"}, "message": "Merge #662\n\n662: Preserve indentation in doc comments r=matklad a=kjeremy\n\nFixes #502 \n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "99fe4420fe14a036323efe553e609268929df599", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99fe4420fe14a036323efe553e609268929df599"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffcf61884245ca515f08f8685dc324b9db727e53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffcf61884245ca515f08f8685dc324b9db727e53", "html_url": "https://github.com/rust-lang/rust/commit/ffcf61884245ca515f08f8685dc324b9db727e53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffcf61884245ca515f08f8685dc324b9db727e53/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "2577a65684a61fe8ef9159809ca5352c9ac2e61d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2577a65684a61fe8ef9159809ca5352c9ac2e61d", "html_url": "https://github.com/rust-lang/rust/commit/2577a65684a61fe8ef9159809ca5352c9ac2e61d"}, {"sha": "a89206795140209b816eb8e91fa3f1e1d6509269", "url": "https://api.github.com/repos/rust-lang/rust/commits/a89206795140209b816eb8e91fa3f1e1d6509269", "html_url": "https://github.com/rust-lang/rust/commit/a89206795140209b816eb8e91fa3f1e1d6509269"}], "stats": {"total": 92, "additions": 65, "deletions": 27}, "files": [{"sha": "5db72c08a3e7c39c90a5b133d474e722f14db483", "filename": "crates/ra_hir/src/docs.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ffcf61884245ca515f08f8685dc324b9db727e53/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffcf61884245ca515f08f8685dc324b9db727e53/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdocs.rs?ref=ffcf61884245ca515f08f8685dc324b9db727e53", "patch": "@@ -27,10 +27,5 @@ pub trait Docs {\n }\n \n pub(crate) fn docs_from_ast(node: &impl ast::DocCommentsOwner) -> Option<Documentation> {\n-    let comments = node.doc_comment_text();\n-    if comments.is_empty() {\n-        None\n-    } else {\n-        Some(Documentation::new(&comments))\n-    }\n+    node.doc_comment_text().map(|it| Documentation::new(&it))\n }"}, {"sha": "ee1e137993673c3bd631b447b49bd8ea06ad2538", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ffcf61884245ca515f08f8685dc324b9db727e53/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffcf61884245ca515f08f8685dc324b9db727e53/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=ffcf61884245ca515f08f8685dc324b9db727e53", "patch": "@@ -126,8 +126,7 @@ impl CallInfo {\n         };\n \n         let mut doc = None;\n-        let docs = node.doc_comment_text();\n-        if !docs.is_empty() {\n+        if let Some(docs) = node.doc_comment_text() {\n             // Massage markdown\n             let mut processed_lines = Vec::new();\n             let mut in_code_block = false;"}, {"sha": "f993a461c35cfa4991d783c7757f9dc66e542feb", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ffcf61884245ca515f08f8685dc324b9db727e53/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffcf61884245ca515f08f8685dc324b9db727e53/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=ffcf61884245ca515f08f8685dc324b9db727e53", "patch": "@@ -100,12 +100,7 @@ impl NavigationTarget {\n     fn docs(&self, db: &RootDatabase) -> Option<String> {\n         let node = self.node(db)?;\n         fn doc_comments<N: ast::DocCommentsOwner>(node: &N) -> Option<String> {\n-            let comments = node.doc_comment_text();\n-            if comments.is_empty() {\n-                None\n-            } else {\n-                Some(comments)\n-            }\n+            node.doc_comment_text()\n         }\n \n         visitor()"}, {"sha": "3d22a88f358244127ba18ab5f2a0b40a4e742876", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 62, "deletions": 13, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/ffcf61884245ca515f08f8685dc324b9db727e53/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffcf61884245ca515f08f8685dc324b9db727e53/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=ffcf61884245ca515f08f8685dc324b9db727e53", "patch": "@@ -115,21 +115,38 @@ pub trait DocCommentsOwner: AstNode {\n     }\n \n     /// Returns the textual content of a doc comment block as a single string.\n-    /// That is, strips leading `///` and joins lines\n-    fn doc_comment_text(&self) -> std::string::String {\n-        self.doc_comments()\n+    /// That is, strips leading `///` (+ optional 1 character of whitespace)\n+    /// and joins lines.\n+    fn doc_comment_text(&self) -> Option<std::string::String> {\n+        let docs = self\n+            .doc_comments()\n             .filter(|comment| comment.is_doc_comment())\n             .map(|comment| {\n-                let prefix = comment.prefix();\n-                let trimmed = comment\n-                    .text()\n-                    .as_str()\n-                    .trim()\n-                    .trim_start_matches(prefix)\n-                    .trim_start();\n-                trimmed.to_owned()\n+                let prefix_len = comment.prefix().len();\n+\n+                let line = comment.text().as_str();\n+\n+                // Determine if the prefix or prefix + 1 char is stripped\n+                let pos = if line\n+                    .chars()\n+                    .nth(prefix_len)\n+                    .map(|c| c.is_whitespace())\n+                    .unwrap_or(false)\n+                {\n+                    prefix_len + 1\n+                } else {\n+                    prefix_len\n+                };\n+\n+                line[pos..].to_owned()\n             })\n-            .join(\"\\n\")\n+            .join(\"\\n\");\n+\n+        if docs.is_empty() {\n+            None\n+        } else {\n+            Some(docs)\n+        }\n     }\n }\n \n@@ -703,6 +720,18 @@ impl BindPat {\n     }\n }\n \n+#[test]\n+fn test_doc_comment_none() {\n+    let file = SourceFile::parse(\n+        r#\"\n+        // non-doc\n+        mod foo {}\n+        \"#,\n+    );\n+    let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n+    assert!(module.doc_comment_text().is_none());\n+}\n+\n #[test]\n fn test_doc_comment_of_items() {\n     let file = SourceFile::parse(\n@@ -713,5 +742,25 @@ fn test_doc_comment_of_items() {\n         \"#,\n     );\n     let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n-    assert_eq!(\"doc\", module.doc_comment_text());\n+    assert_eq!(\"doc\", module.doc_comment_text().unwrap());\n+}\n+\n+#[test]\n+fn test_doc_comment_preserves_indents() {\n+    let file = SourceFile::parse(\n+        r#\"\n+        /// doc1\n+        /// ```\n+        /// fn foo() {\n+        ///     // ...\n+        /// }\n+        /// ```\n+        mod foo {}\n+        \"#,\n+    );\n+    let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n+    assert_eq!(\n+        \"doc1\\n```\\nfn foo() {\\n    // ...\\n}\\n```\",\n+        module.doc_comment_text().unwrap()\n+    );\n }"}]}