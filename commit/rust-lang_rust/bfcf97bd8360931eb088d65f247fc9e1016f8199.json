{"sha": "bfcf97bd8360931eb088d65f247fc9e1016f8199", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmY2Y5N2JkODM2MDkzMWViMDg4ZDY1ZjI0N2ZjOWUxMDE2ZjgxOTk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-09T11:40:43Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-09T11:40:43Z"}, "message": "Update libc and libloading", "tree": {"sha": "0f537d7fa571b8c5b0ff469f36512edc13aa47cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f537d7fa571b8c5b0ff469f36512edc13aa47cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfcf97bd8360931eb088d65f247fc9e1016f8199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfcf97bd8360931eb088d65f247fc9e1016f8199", "html_url": "https://github.com/rust-lang/rust/commit/bfcf97bd8360931eb088d65f247fc9e1016f8199", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfcf97bd8360931eb088d65f247fc9e1016f8199/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fe5eace3c4c573b91fb751873d1ec8d06e2bccf", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fe5eace3c4c573b91fb751873d1ec8d06e2bccf", "html_url": "https://github.com/rust-lang/rust/commit/6fe5eace3c4c573b91fb751873d1ec8d06e2bccf"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "5659729838d5422f72a365cb1d23f2e18700e37d", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bfcf97bd8360931eb088d65f247fc9e1016f8199/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/bfcf97bd8360931eb088d65f247fc9e1016f8199/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=bfcf97bd8360931eb088d65f247fc9e1016f8199", "patch": "@@ -206,15 +206,15 @@ dependencies = [\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.85\"\n+version = \"0.2.86\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7ccac4b00700875e6a07c6cde370d44d32fa01c5a65cdd2fca6858c479d28bb3\"\n+checksum = \"b7282d924be3275cec7f6756ff4121987bc6481325397dde6ba3e7802b1a8b1c\"\n \n [[package]]\n name = \"libloading\"\n-version = \"0.6.7\"\n+version = \"0.7.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"351a32417a12d5f7e82c368a66781e307834dae04c6ce0cd4456d52989229883\"\n+checksum = \"6f84d96438c15fcd6c3f244c8fce01d1e2b9c6b5623e9c711dc9286d8fc92d6a\"\n dependencies = [\n  \"cfg-if\",\n  \"winapi\","}, {"sha": "bb1116484b692db31ceeb71cb343a1a7fa9ba3e9", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfcf97bd8360931eb088d65f247fc9e1016f8199/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bfcf97bd8360931eb088d65f247fc9e1016f8199/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=bfcf97bd8360931eb088d65f247fc9e1016f8199", "patch": "@@ -20,7 +20,7 @@ object = { version = \"0.23.0\", default-features = false, features = [\"std\", \"rea\n \n ar = { git = \"https://github.com/bjorn3/rust-ar.git\", branch = \"do_not_remove_cg_clif_ranlib\" }\n indexmap = \"1.0.2\"\n-libloading = { version = \"0.6.0\", optional = true }\n+libloading = { version = \"0.7.0\", optional = true }\n smallvec = \"1.6.1\"\n \n # Uncomment to use local checkout of cranelift"}, {"sha": "6c73fa56fd48bf82161fb96dc41368233c16d7cf", "filename": "src/driver/jit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfcf97bd8360931eb088d65f247fc9e1016f8199/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfcf97bd8360931eb088d65f247fc9e1016f8199/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=bfcf97bd8360931eb088d65f247fc9e1016f8199", "patch": "@@ -210,7 +210,7 @@ fn load_imported_symbols_for_jit(tcx: TyCtxt<'_>) -> Vec<(String, *const u8)> {\n     let mut imported_symbols = Vec::new();\n     for path in dylib_paths {\n         use object::{Object, ObjectSymbol};\n-        let lib = libloading::Library::new(&path).unwrap();\n+        let lib = unsafe { libloading::Library::new(&path).unwrap() };\n         let obj = std::fs::read(path).unwrap();\n         let obj = object::File::parse(&obj).unwrap();\n         imported_symbols.extend(obj.dynamic_symbols().filter_map(|symbol| {"}]}