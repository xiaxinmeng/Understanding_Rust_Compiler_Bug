{"sha": "7a6f68c87275fc1be2b0c3aa1455bead5c9dce18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNmY2OGM4NzI3NWZjMWJlMmIwYzNhYTE0NTViZWFkNWM5ZGNlMTg=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-01-28T18:50:48Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-01-29T09:02:03Z"}, "message": "Make error reporting work on generator upvars. Fixes #47793, #47805", "tree": {"sha": "d2e62b37b92cf39e34c9658b1df8302be85dd7ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2e62b37b92cf39e34c9658b1df8302be85dd7ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a6f68c87275fc1be2b0c3aa1455bead5c9dce18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6f68c87275fc1be2b0c3aa1455bead5c9dce18", "html_url": "https://github.com/rust-lang/rust/commit/7a6f68c87275fc1be2b0c3aa1455bead5c9dce18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a6f68c87275fc1be2b0c3aa1455bead5c9dce18/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238", "html_url": "https://github.com/rust-lang/rust/commit/dd3fa07a522cb4f059a96f5e8d82f8d82c33d238"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7fadc4b36e44fe4ab6c5b3abef36d7bd7fa13db1", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7a6f68c87275fc1be2b0c3aa1455bead5c9dce18/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6f68c87275fc1be2b0c3aa1455bead5c9dce18/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=7a6f68c87275fc1be2b0c3aa1455bead5c9dce18", "patch": "@@ -746,12 +746,12 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     self.describe_field_from_ty(&tnm.ty, field)\n                 }\n                 ty::TyArray(ty, _) | ty::TySlice(ty) => self.describe_field_from_ty(&ty, field),\n-                ty::TyClosure(closure_def_id, _) => {\n+                ty::TyClosure(def_id, _) | ty::TyGenerator(def_id, _, _) => {\n                     // Convert the def-id into a node-id. node-ids are only valid for\n                     // the local code in the current crate, so this returns an `Option` in case\n                     // the closure comes from another crate. But in that case we wouldn't\n                     // be borrowck'ing it, so we can just unwrap:\n-                    let node_id = self.tcx.hir.as_local_node_id(closure_def_id).unwrap();\n+                    let node_id = self.tcx.hir.as_local_node_id(def_id).unwrap();\n                     let freevar = self.tcx.with_freevars(node_id, |fv| fv[field.index()]);\n \n                     self.tcx.hir.name(freevar.var_id()).to_string()"}]}