{"sha": "a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZmM2Nzk5ZGYyN2E2Y2EwYWQwZWFiY2Q3MWY5ZmIzMGQ0ZTEwYTI=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2018-10-29T19:37:47Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2018-10-29T19:44:45Z"}, "message": "Rewrite registered lint collection", "tree": {"sha": "1cdcb5d8243785e97d78eb80263dba822eedad19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cdcb5d8243785e97d78eb80263dba822eedad19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE46kBTF5vnyuSPg0W6OiXpYcOQcIFAlvXY0EACgkQ6OiXpYcO\nQcIl2Q//dWBWNwDrXMqbb5bxH1MMvDcS/KavmVVidSr/oFaXTi49TVS/L5kV7e6N\nfkxZzAJMOh79wfAuDDpLwbQhXOaeOx8FXRKXeWldNkJDTlXllmnUWxAf75R5Y452\nNIscR5Ebhq4b3urT119MODsJ9dHsx9pX/BEyGpUAD+QZ8Bq0ozbbkiEFVa1eLlzJ\nqDN63dfcvvdUGQp2HBCQkspY6AH25R+/h7q/K0LTwc9uEKJb2dUVvAVyFre/bp7Y\nEkOVqZ5VAL+rJ53eiNk2XKkyc3hyfVuO1EVib/ZvMlnXsD5exWcV0F1n5SN+fUt1\nQSXDuHECxOy8lE14LrZwOLvOA0so5zQvaIF4uLo3s5Zrk9QsIuLX0Al3+algkdPd\neFl7s9P+ySM2G4mxwHvrUc4udfLaKm4zpJPAGfZYeA+C5bHD+qg8I6cfKo9XNXaL\nAdc2fT8m+UHAOYh2UHmiZhQAhMZ47hAUWHrmfZzgB11xhqm/lRYbIcPgd8OzTPmo\nOg31yYA3qHYY5EGnx+clW+XvzF1Hjx0t0Rf3L7zQFMdY6M3D5bcdV/JMskB2xOxD\njqFecpL0L/4wQYFsiW6Q3XU1LmqvgftoFWz6w4A85P2CmFQorO/NHvqg4UPJunq8\nYDoM8bXNynwWIT75iS+MIqvLuYod+tlife9UJZP7j2scWKtRIJ0=\n=m44m\n-----END PGP SIGNATURE-----", "payload": "tree 1cdcb5d8243785e97d78eb80263dba822eedad19\nparent 267d5d3433c08c6867fc212ed091a7b178d1c141\nauthor flip1995 <hello@philkrones.com> 1540841867 +0100\ncommitter flip1995 <hello@philkrones.com> 1540842285 +0100\n\nRewrite registered lint collection\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2", "html_url": "https://github.com/rust-lang/rust/commit/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "267d5d3433c08c6867fc212ed091a7b178d1c141", "url": "https://api.github.com/repos/rust-lang/rust/commits/267d5d3433c08c6867fc212ed091a7b178d1c141", "html_url": "https://github.com/rust-lang/rust/commit/267d5d3433c08c6867fc212ed091a7b178d1c141"}], "stats": {"total": 42, "additions": 26, "deletions": 16}, "files": [{"sha": "879157ec8a47f5bd1c37ca466ed54c24587d9b71", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2", "patch": "@@ -9,7 +9,7 @@\n \n \n use crate::utils::{\n-    match_def_path, match_qpath, match_type, paths, span_help_and_lint, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n+    match_def_path, match_type, paths, span_help_and_lint, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n };\n use if_chain::if_chain;\n use crate::rustc::hir;\n@@ -161,16 +161,21 @@ impl LintPass for LintWithoutLintPass {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LintWithoutLintPass {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n-        if let hir::ItemKind::Static(ref ty, MutImmutable, body_id) = item.node {\n-\n+        if let hir::ItemKind::Static(ref ty, MutImmutable, _) = item.node {\n             if is_lint_ref_type(cx, ty) {\n                 self.declared_lints.insert(item.name, item.span);\n-            } else if is_lint_array_type(ty) && item.name == \"ARRAY\" {\n-                if let VisibilityKind::Inherited = item.vis.node {\n+            }\n+        } else if let hir::ItemKind::Impl(.., Some(ref trait_ref), _, ref impl_item_refs) = item.node {\n+            if_chain! {\n+                if let hir::TraitRef{path, ..} = trait_ref;\n+                if let Def::Trait(def_id) = path.def;\n+                if match_def_path(cx.tcx, def_id, &paths::LINT_PASS);\n+                then {\n                     let mut collector = LintCollector {\n                         output: &mut self.registered_lints,\n                         cx,\n                     };\n+                    let body_id = cx.tcx.hir.body_owned_by(impl_item_refs[0].id.node_id);\n                     collector.visit_expr(&cx.tcx.hir.body(body_id).value);\n                 }\n             }\n@@ -223,14 +228,6 @@ fn is_lint_ref_type<'tcx>(cx: &LateContext<'_, 'tcx>, ty: &Ty) -> bool {\n     false\n }\n \n-fn is_lint_array_type(ty: &Ty) -> bool {\n-    if let TyKind::Path(ref path) = ty.node {\n-        match_qpath(path, &paths::LINT_ARRAY)\n-    } else {\n-        false\n-    }\n-}\n-\n struct LintCollector<'a, 'tcx: 'a> {\n     output: &'a mut FxHashSet<Name>,\n     cx: &'a LateContext<'a, 'tcx>,"}, {"sha": "107a8eea15d761f20b43a85aed135be42c777037", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2", "patch": "@@ -56,7 +56,7 @@ pub const ITERATOR: [&str; 4] = [\"core\", \"iter\", \"iterator\", \"Iterator\"];\n pub const LATE_CONTEXT: [&str; 4] = [\"rustc\", \"lint\", \"context\", \"LateContext\"];\n pub const LINKED_LIST: [&str; 4] = [\"alloc\", \"collections\", \"linked_list\", \"LinkedList\"];\n pub const LINT: [&str; 3] = [\"rustc\", \"lint\", \"Lint\"];\n-pub const LINT_ARRAY: [&str; 3] = [\"rustc\", \"lint\", \"LintArray\"];\n+pub const LINT_PASS: [&str; 3] = [\"rustc\", \"lint\", \"LintPass\"];\n pub const MEM_DISCRIMINANT: [&str; 3] = [\"core\", \"mem\", \"discriminant\"];\n pub const MEM_FORGET: [&str; 3] = [\"core\", \"mem\", \"forget\"];\n pub const MEM_REPLACE: [&str; 3] = [\"core\", \"mem\", \"replace\"];"}, {"sha": "c7e11840a37cc2f55626745dec70b4c31db60342", "filename": "tests/ui/lint_without_lint_pass.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2/tests%2Fui%2Flint_without_lint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2/tests%2Fui%2Flint_without_lint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.rs?ref=a7fc6799df27a6ca0ad0eabcd71f9fb30d4e10a2", "patch": "@@ -4,16 +4,29 @@\n \n #[macro_use]\n extern crate rustc;\n+use rustc::lint;\n \n #[macro_use]\n extern crate clippy_lints;\n \n-declare_clippy_lint!\n-{\n+declare_clippy_lint! {\n     pub TEST_LINT,\n     correctness,\n     \"\"\n }\n \n+declare_clippy_lint! {\n+    pub TEST_LINT_REGISTERED,\n+    correctness,\n+    \"\"\n+}\n+\n+pub struct Pass;\n+impl lint::LintPass for Pass {\n+    fn get_lints(&self) -> lint::LintArray {\n+        lint_array!(TEST_LINT_REGISTERED)\n+    }\n+}\n+\n fn main() {\n }"}]}