{"sha": "823ab42e66cc966098030616e36e4aa7417dcf7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyM2FiNDJlNjZjYzk2NjA5ODAzMDYxNmUzNmU0YWE3NDE3ZGNmN2Y=", "commit": {"author": {"name": "lqd", "email": "remy.rakic+github@gmail.com", "date": "2019-07-15T17:04:50Z"}, "committer": {"name": "lqd", "email": "remy.rakic+github@gmail.com", "date": "2019-07-22T09:36:47Z"}, "message": "Bless output of test unboxed-closures/unboxed-closures-failed-recursive-fn-1.rs for Polonius", "tree": {"sha": "99ba7f27fd471813242a28504c6d7c9b50d7c4cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ba7f27fd471813242a28504c6d7c9b50d7c4cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/823ab42e66cc966098030616e36e4aa7417dcf7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/823ab42e66cc966098030616e36e4aa7417dcf7f", "html_url": "https://github.com/rust-lang/rust/commit/823ab42e66cc966098030616e36e4aa7417dcf7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/823ab42e66cc966098030616e36e4aa7417dcf7f/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e0fb6fad256124354778783a135f3b0ac0553ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e0fb6fad256124354778783a135f3b0ac0553ee", "html_url": "https://github.com/rust-lang/rust/commit/9e0fb6fad256124354778783a135f3b0ac0553ee"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "4b906f75149af30ca900d06094f67c4190775ccc", "filename": "src/test/ui/unboxed-closures/unboxed-closures-failed-recursive-fn-1.polonius.stderr", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/823ab42e66cc966098030616e36e4aa7417dcf7f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-failed-recursive-fn-1.polonius.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/823ab42e66cc966098030616e36e4aa7417dcf7f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-failed-recursive-fn-1.polonius.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-failed-recursive-fn-1.polonius.stderr?ref=823ab42e66cc966098030616e36e4aa7417dcf7f", "patch": "@@ -0,0 +1,60 @@\n+error[E0597]: `factorial` does not live long enough\n+  --> $DIR/unboxed-closures-failed-recursive-fn-1.rs:15:17\n+   |\n+LL |     let f = |x: u32| -> u32 {\n+   |             --------------- value captured here\n+LL |         let g = factorial.as_ref().unwrap();\n+   |                 ^^^^^^^^^ borrowed value does not live long enough\n+...\n+LL | }\n+   | -\n+   | |\n+   | `factorial` dropped here while still borrowed\n+   | borrow might be used here, when `factorial` is dropped and runs the destructor for type `std::option::Option<std::boxed::Box<dyn std::ops::Fn(u32) -> u32>>`\n+\n+error[E0506]: cannot assign to `factorial` because it is borrowed\n+  --> $DIR/unboxed-closures-failed-recursive-fn-1.rs:20:5\n+   |\n+LL |     let f = |x: u32| -> u32 {\n+   |             --------------- borrow of `factorial` occurs here\n+LL |         let g = factorial.as_ref().unwrap();\n+   |                 --------- borrow occurs due to use in closure\n+...\n+LL |     factorial = Some(Box::new(f));\n+   |     ^^^^^^^^^\n+   |     |\n+   |     assignment to borrowed `factorial` occurs here\n+   |     borrow later used here\n+\n+error[E0597]: `factorial` does not live long enough\n+  --> $DIR/unboxed-closures-failed-recursive-fn-1.rs:28:17\n+   |\n+LL |     let f = |x: u32| -> u32 {\n+   |             --------------- value captured here\n+LL |         let g = factorial.as_ref().unwrap();\n+   |                 ^^^^^^^^^ borrowed value does not live long enough\n+...\n+LL | }\n+   | -\n+   | |\n+   | `factorial` dropped here while still borrowed\n+   | borrow might be used here, when `factorial` is dropped and runs the destructor for type `std::option::Option<std::boxed::Box<dyn std::ops::Fn(u32) -> u32>>`\n+\n+error[E0506]: cannot assign to `factorial` because it is borrowed\n+  --> $DIR/unboxed-closures-failed-recursive-fn-1.rs:33:5\n+   |\n+LL |     let f = |x: u32| -> u32 {\n+   |             --------------- borrow of `factorial` occurs here\n+LL |         let g = factorial.as_ref().unwrap();\n+   |                 --------- borrow occurs due to use in closure\n+...\n+LL |     factorial = Some(Box::new(f));\n+   |     ^^^^^^^^^\n+   |     |\n+   |     assignment to borrowed `factorial` occurs here\n+   |     borrow later used here\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0506, E0597.\n+For more information about an error, try `rustc --explain E0506`."}]}