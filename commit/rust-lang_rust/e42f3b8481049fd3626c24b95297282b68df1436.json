{"sha": "e42f3b8481049fd3626c24b95297282b68df1436", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MmYzYjg0ODEwNDlmZDM2MjZjMjRiOTUyOTcyODJiNjhkZjE0MzY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-27T18:20:51Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-27T18:33:09Z"}, "message": "Safeguard against self-assignment for unique types", "tree": {"sha": "af896b63d80dd61658dab18e44d6c658084620cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af896b63d80dd61658dab18e44d6c658084620cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e42f3b8481049fd3626c24b95297282b68df1436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e42f3b8481049fd3626c24b95297282b68df1436", "html_url": "https://github.com/rust-lang/rust/commit/e42f3b8481049fd3626c24b95297282b68df1436", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e42f3b8481049fd3626c24b95297282b68df1436/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "923aa4744eed0a2e82c89605221ac3aad616ee05", "url": "https://api.github.com/repos/rust-lang/rust/commits/923aa4744eed0a2e82c89605221ac3aad616ee05", "html_url": "https://github.com/rust-lang/rust/commit/923aa4744eed0a2e82c89605221ac3aad616ee05"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "6c8d9d6bb0d421f465e15f729125c4b1e2c7f2d7", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e42f3b8481049fd3626c24b95297282b68df1436/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e42f3b8481049fd3626c24b95297282b68df1436/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=e42f3b8481049fd3626c24b95297282b68df1436", "patch": "@@ -2020,13 +2020,15 @@ fn type_is_structural_or_param(tcx: ty::ctxt, t: ty::t) -> bool {\n \n fn copy_val(cx: @block_ctxt, action: copy_action, dst: ValueRef,\n             src: ValueRef, t: ty::t) -> @block_ctxt {\n-    if type_is_structural_or_param(bcx_ccx(cx).tcx, t) &&\n-           action == DROP_EXISTING {\n+    if action == DROP_EXISTING &&\n+        (type_is_structural_or_param(bcx_tcx(cx), t) ||\n+         ty::type_is_unique(bcx_tcx(cx), t)) {\n         let do_copy_cx = new_sub_block_ctxt(cx, \"do_copy\");\n         let next_cx = new_sub_block_ctxt(cx, \"next\");\n+        let dstcmp = load_if_immediate(cx, dst, t);\n         let self_assigning =\n-            ICmp(cx, lib::llvm::LLVMIntNE, PointerCast(cx, dst, val_ty(src)),\n-                 src);\n+            ICmp(cx, lib::llvm::LLVMIntNE,\n+                 PointerCast(cx, dstcmp, val_ty(src)), src);\n         CondBr(cx, self_assigning, do_copy_cx.llbb, next_cx.llbb);\n         do_copy_cx = copy_val_no_check(do_copy_cx, action, dst, src, t);\n         Br(do_copy_cx, next_cx.llbb);"}]}