{"sha": "5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZTI5ZDNkNmY4OTk0YTFkOWRiOWI5ZjhhYTA3NjAwMWY3YjhkMDc=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-22T13:00:53Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-07-20T18:35:34Z"}, "message": "metadata: record `unused_generic_params`\n\nThis commit records the results of `unused_generic_params` in crate\nmetadata, hopefully improving performance.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "a8e6a173b9f43bd09b30ce729c8d42d2ec6bb001", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e6a173b9f43bd09b30ce729c8d42d2ec6bb001"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl8V4/YACgkQJZLnbIc4\nH9ks+A//fB97cMX6UtwRMXjMUXH4ClGA7EqDfP4gIucJsZMuj9necNM40MBKtDHq\nsyi4ltTCgxDmv+JujsP+O+T5k3ornRoKADt3a86NXlMtRbgDHteihsX42Jz3zyC3\n/TGS8l6N7ko1X488EqGvqkP0VpjJzpQ1xNN2BycBOwKPBNjR1lT75vBaZnnHBFdi\nbOUcF84BVgVmvkDeqOyEzs9ASbhK8BKRWL+hyqKWpBRQ7Ubnsv7tyXGApD7zR4KU\nnNyJdsdUYvKRKySQaZgkJ6PPXMsL/a/iBBSA5i98M0afy8+4xxpWHUzQRhkF3HrO\nqo6E13mngWbqIbvWhtZUu4i+C9u9BJOn0nxespEit4c8hXnooAgHPDFDzxSVVrJJ\ntuuuKxJYyeY/4ba1Gdd6oYOrfLQHB5pEkOcReKIgPSZjWDMsTpVuzzEOeWwTar/w\nKWY2QowbzyrIErCGTH/YNUv8+6fmpp35KCivRiOtHHNbNoWAX6M3Fvx2EMEUGouY\nsoiFiMpYxkWlxUPmRu9jzUFPIMsr6XDBAqoxCbL0z9tuUScFTvMIEyFgKEujc6no\nhRq/PIuGv/UiVqhSOpvP0WoZneZrbsKvEOARdGCWjY2L4ieuHrE2T/go1pb6RqqW\nxX/NbvzXJEI2ABPn9f/9G2tbotLfCjGzq33MlkftC3B8qiQYE34=\n=OiKK\n-----END PGP SIGNATURE-----", "payload": "tree a8e6a173b9f43bd09b30ce729c8d42d2ec6bb001\nparent f52c72948aa1dd718cc1f168d21c91c584c0a662\nauthor David Wood <david@davidtw.co> 1592830853 +0100\ncommitter David Wood <david@davidtw.co> 1595270134 +0100\n\nmetadata: record `unused_generic_params`\n\nThis commit records the results of `unused_generic_params` in crate\nmetadata, hopefully improving performance.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07", "html_url": "https://github.com/rust-lang/rust/commit/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f52c72948aa1dd718cc1f168d21c91c584c0a662", "url": "https://api.github.com/repos/rust-lang/rust/commits/f52c72948aa1dd718cc1f168d21c91c584c0a662", "html_url": "https://github.com/rust-lang/rust/commit/f52c72948aa1dd718cc1f168d21c91c584c0a662"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "e4edb2427a2ff31ea569fb6a60cc658bbdf29782", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07", "patch": "@@ -1132,6 +1132,16 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n             .decode((self, tcx))\n     }\n \n+    fn get_unused_generic_params(&self, id: DefIndex) -> u64 {\n+        self.root\n+            .tables\n+            .unused_generic_params\n+            .get(self, id)\n+            .filter(|_| !self.is_proc_macro(id))\n+            .map(|params| params.decode(self))\n+            .unwrap_or_default()\n+    }\n+\n     fn get_promoted_mir(&self, tcx: TyCtxt<'tcx>, id: DefIndex) -> IndexVec<Promoted, Body<'tcx>> {\n         self.root\n             .tables"}, {"sha": "9160327c1d1b5e3b00b9c737a84736588f41a5db", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07", "patch": "@@ -113,6 +113,7 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     }\n     optimized_mir => { tcx.arena.alloc(cdata.get_optimized_mir(tcx, def_id.index)) }\n     promoted_mir => { tcx.arena.alloc(cdata.get_promoted_mir(tcx, def_id.index)) }\n+    unused_generic_params => { cdata.get_unused_generic_params(def_id.index) }\n     mir_const_qualif => { cdata.mir_const_qualif(def_id.index) }\n     fn_sig => { cdata.fn_sig(def_id.index, tcx) }\n     inherent_impls => { cdata.get_inherent_implementations_for_type(tcx, def_id.index) }"}, {"sha": "186828b6a19f6234fa0a96da047e31108170a5d8", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07", "patch": "@@ -1065,6 +1065,8 @@ impl EncodeContext<'tcx> {\n         debug!(\"EntryBuilder::encode_mir({:?})\", def_id);\n         if self.tcx.mir_keys(LOCAL_CRATE).contains(&def_id) {\n             record!(self.tables.mir[def_id.to_def_id()] <- self.tcx.optimized_mir(def_id));\n+            record!(self.tables.unused_generic_params[def_id.to_def_id()] <-\n+                    self.tcx.unused_generic_params(def_id));\n         }\n     }\n "}, {"sha": "1d095ac06ec1da06e7e944e2e21b0c0077d4eead", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=5ce29d3d6f8994a1d9db9b9f8aa076001f7b8d07", "patch": "@@ -277,6 +277,7 @@ define_tables! {\n     super_predicates: Table<DefIndex, Lazy!(ty::GenericPredicates<'tcx>)>,\n     mir: Table<DefIndex, Lazy!(mir::Body<'tcx>)>,\n     promoted_mir: Table<DefIndex, Lazy!(IndexVec<mir::Promoted, mir::Body<'tcx>>)>,\n+    unused_generic_params: Table<DefIndex, Lazy<u64>>,\n }\n \n #[derive(Copy, Clone, RustcEncodable, RustcDecodable)]"}]}