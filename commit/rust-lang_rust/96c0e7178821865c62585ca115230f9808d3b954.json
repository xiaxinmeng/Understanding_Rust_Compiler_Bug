{"sha": "96c0e7178821865c62585ca115230f9808d3b954", "node_id": "C_kwDOAAsO6NoAKDk2YzBlNzE3ODgyMTg2NWM2MjU4NWNhMTE1MjMwZjk4MDhkM2I5NTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-27T04:11:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-27T04:11:38Z"}, "message": "Rollup merge of #90278 - notriddle:notriddle/highlight-ptr, r=jyn541,GuillaumeGomez\n\nrustdoc: use better highlighting for *const, *mut, and &mut\n\nThis generates more consistent HTML for these RefKeyWord combinations.\n\nBefore:\n\n![image](https://user-images.githubusercontent.com/1593513/138742752-7e00a3f7-4621-4c62-82d1-3e4c2ef503d1.png)\n\nAfter:\n\n![image](https://user-images.githubusercontent.com/1593513/138743955-90abcdcd-fc88-4e2f-95bb-c1b1635c0001.png)", "tree": {"sha": "046b61622b5d2f4b887a006e6b68f4cb67e9da3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/046b61622b5d2f4b887a006e6b68f4cb67e9da3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96c0e7178821865c62585ca115230f9808d3b954", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJheNF6CRBK7hj4Ov3rIwAAqlEIAEAz2E7SUBDQtc/2+9068zAP\n83Oq5atHKWQWEEBQ5R0wtKJmmUiIH60Mi8K//OUToSoNMxygANr6tj0kmEXohq5j\n9VZbmvE5rrcXt18zOV+DjHmL6QCbwC/cMlhQG0y/1TFSoxvKI/C3FY20yzUtS6Eq\nt0P+Y1n38ENUX7E9TcJ+JiqvyLhgynNIKoXmrDexWXSDlUs95RocG6FzxlMcWoch\nO2vOh8QSJQhYvRiEVTuYe1fGNoaINYtL4u/c4OKs000YFdTVf9XHHkuwdnA8dTv8\nz6Ld6gZZ1p5vF7ztmr3G+BaQq8t1hgx9cMbTk4OqZxMpVEdxbNg1xEy6amPGkUs=\n=AlgZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 046b61622b5d2f4b887a006e6b68f4cb67e9da3e\nparent 60cad9789c8ab22bc008f88817001d538acb40b3\nparent 3a79370367b6b606c5682b17cf601f34df9690fd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635307898 +0200\ncommitter GitHub <noreply@github.com> 1635307898 +0200\n\nRollup merge of #90278 - notriddle:notriddle/highlight-ptr, r=jyn541,GuillaumeGomez\n\nrustdoc: use better highlighting for *const, *mut, and &mut\n\nThis generates more consistent HTML for these RefKeyWord combinations.\n\nBefore:\n\n![image](https://user-images.githubusercontent.com/1593513/138742752-7e00a3f7-4621-4c62-82d1-3e4c2ef503d1.png)\n\nAfter:\n\n![image](https://user-images.githubusercontent.com/1593513/138743955-90abcdcd-fc88-4e2f-95bb-c1b1635c0001.png)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96c0e7178821865c62585ca115230f9808d3b954", "html_url": "https://github.com/rust-lang/rust/commit/96c0e7178821865c62585ca115230f9808d3b954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96c0e7178821865c62585ca115230f9808d3b954/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60cad9789c8ab22bc008f88817001d538acb40b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/60cad9789c8ab22bc008f88817001d538acb40b3", "html_url": "https://github.com/rust-lang/rust/commit/60cad9789c8ab22bc008f88817001d538acb40b3"}, {"sha": "3a79370367b6b606c5682b17cf601f34df9690fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a79370367b6b606c5682b17cf601f34df9690fd", "html_url": "https://github.com/rust-lang/rust/commit/3a79370367b6b606c5682b17cf601f34df9690fd"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "a33bb3479cea7603a4a7c8e2d95a1030d55dfe9f", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/96c0e7178821865c62585ca115230f9808d3b954/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c0e7178821865c62585ca115230f9808d3b954/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=96c0e7178821865c62585ca115230f9808d3b954", "patch": "@@ -469,22 +469,37 @@ impl<'a> Classifier<'a> {\n             // Assume that '&' or '*' is the reference or dereference operator\n             // or a reference or pointer type. Unless, of course, it looks like\n             // a logical and or a multiplication operator: `&&` or `* `.\n-            TokenKind::Star => match self.peek() {\n-                Some(TokenKind::Whitespace) => Class::Op,\n+            TokenKind::Star => match self.tokens.peek() {\n+                Some((TokenKind::Whitespace, _)) => Class::Op,\n+                Some((TokenKind::Ident, \"mut\")) => {\n+                    self.next();\n+                    sink(Highlight::Token { text: \"*mut\", class: Some(Class::RefKeyWord) });\n+                    return;\n+                }\n+                Some((TokenKind::Ident, \"const\")) => {\n+                    self.next();\n+                    sink(Highlight::Token { text: \"*const\", class: Some(Class::RefKeyWord) });\n+                    return;\n+                }\n                 _ => Class::RefKeyWord,\n             },\n-            TokenKind::And => match lookahead {\n-                Some(TokenKind::And) => {\n+            TokenKind::And => match self.tokens.peek() {\n+                Some((TokenKind::And, _)) => {\n                     self.next();\n                     sink(Highlight::Token { text: \"&&\", class: Some(Class::Op) });\n                     return;\n                 }\n-                Some(TokenKind::Eq) => {\n+                Some((TokenKind::Eq, _)) => {\n                     self.next();\n                     sink(Highlight::Token { text: \"&=\", class: Some(Class::Op) });\n                     return;\n                 }\n-                Some(TokenKind::Whitespace) => Class::Op,\n+                Some((TokenKind::Whitespace, _)) => Class::Op,\n+                Some((TokenKind::Ident, \"mut\")) => {\n+                    self.next();\n+                    sink(Highlight::Token { text: \"&mut\", class: Some(Class::RefKeyWord) });\n+                    return;\n+                }\n                 _ => Class::RefKeyWord,\n             },\n "}, {"sha": "b117a12e39f4a45bf1e0938ce9f4eb51e1d13e1c", "filename": "src/librustdoc/html/highlight/fixtures/sample.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96c0e7178821865c62585ca115230f9808d3b954/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html", "raw_url": "https://github.com/rust-lang/rust/raw/96c0e7178821865c62585ca115230f9808d3b954/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html?ref=96c0e7178821865c62585ca115230f9808d3b954", "patch": "@@ -15,11 +15,11 @@\n <span class=\"attribute\">#[<span class=\"ident\">cfg</span>(<span class=\"ident\">target_os</span> <span class=\"op\">=</span> <span class=\"string\">&quot;linux&quot;</span>)]</span>\n <span class=\"kw\">fn</span> <span class=\"ident\">main</span>() -&gt; () {\n     <span class=\"kw\">let</span> <span class=\"ident\">foo</span> <span class=\"op\">=</span> <span class=\"bool-val\">true</span> <span class=\"op\">&amp;&amp;</span> <span class=\"bool-val\">false</span> <span class=\"op\">|</span><span class=\"op\">|</span> <span class=\"bool-val\">true</span>;\n-    <span class=\"kw\">let</span> <span class=\"kw\">_</span>: <span class=\"kw-2\">*</span><span class=\"kw\">const</span> () <span class=\"op\">=</span> <span class=\"number\">0</span>;\n+    <span class=\"kw\">let</span> <span class=\"kw\">_</span>: <span class=\"kw-2\">*const</span> () <span class=\"op\">=</span> <span class=\"number\">0</span>;\n     <span class=\"kw\">let</span> <span class=\"kw\">_</span> <span class=\"op\">=</span> <span class=\"kw-2\">&amp;</span><span class=\"ident\">foo</span>;\n     <span class=\"kw\">let</span> <span class=\"kw\">_</span> <span class=\"op\">=</span> <span class=\"op\">&amp;&amp;</span><span class=\"ident\">foo</span>;\n     <span class=\"kw\">let</span> <span class=\"kw\">_</span> <span class=\"op\">=</span> <span class=\"kw-2\">*</span><span class=\"ident\">foo</span>;\n-    <span class=\"macro\">mac!</span>(<span class=\"ident\">foo</span>, <span class=\"kw-2\">&amp;</span><span class=\"kw-2\">mut</span> <span class=\"ident\">bar</span>);\n+    <span class=\"macro\">mac!</span>(<span class=\"ident\">foo</span>, <span class=\"kw-2\">&amp;mut</span> <span class=\"ident\">bar</span>);\n     <span class=\"macro\">assert!</span>(<span class=\"self\">self</span>.<span class=\"ident\">length</span> <span class=\"op\">&lt;</span> <span class=\"ident\">N</span> <span class=\"op\">&amp;&amp;</span> <span class=\"ident\">index</span> <span class=\"op\">&lt;</span><span class=\"op\">=</span> <span class=\"self\">self</span>.<span class=\"ident\">length</span>);\n     <span class=\"ident\">::std::env::var</span>(<span class=\"string\">&quot;gateau&quot;</span>).<span class=\"ident\">is_ok</span>();\n     <span class=\"attribute\">#[<span class=\"ident\">rustfmt::skip</span>]</span>"}]}