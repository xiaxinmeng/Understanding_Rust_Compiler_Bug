{"sha": "3c3bfb4c3c5f89a6c4f48b7ad8b9f71de792be04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjM2JmYjRjM2M1Zjg5YTZjNGY0OGI3YWQ4YjlmNzFkZTc5MmJlMDQ=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-08-19T20:50:23Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-08-20T17:28:50Z"}, "message": "Add more capabilities to typarams bounded by traits with super-builtin-kinds. Close #7083.", "tree": {"sha": "4c57dfadb0c1a6ced94703a77572d57c79918424", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c57dfadb0c1a6ced94703a77572d57c79918424"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c3bfb4c3c5f89a6c4f48b7ad8b9f71de792be04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c3bfb4c3c5f89a6c4f48b7ad8b9f71de792be04", "html_url": "https://github.com/rust-lang/rust/commit/3c3bfb4c3c5f89a6c4f48b7ad8b9f71de792be04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c3bfb4c3c5f89a6c4f48b7ad8b9f71de792be04/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ca2e55adbf0cfbc34d8b1e7de773045d36cce2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca2e55adbf0cfbc34d8b1e7de773045d36cce2e", "html_url": "https://github.com/rust-lang/rust/commit/4ca2e55adbf0cfbc34d8b1e7de773045d36cce2e"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "3672bfeec86c3d68e5aca3ea46c7eb25b9b241ff", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3c3bfb4c3c5f89a6c4f48b7ad8b9f71de792be04/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c3bfb4c3c5f89a6c4f48b7ad8b9f71de792be04/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=3c3bfb4c3c5f89a6c4f48b7ad8b9f71de792be04", "patch": "@@ -2322,7 +2322,7 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n         let _i = indenter();\n \n         let mut tc = TC_ALL;\n-        for bound in type_param_def.bounds.builtin_bounds.iter() {\n+        do each_inherited_builtin_bound(cx, type_param_def.bounds) |bound| {\n             debug!(\"tc = %s, bound = %?\", tc.to_str(), bound);\n             tc = tc - match bound {\n                 BoundStatic => TypeContents::nonstatic(cx),\n@@ -2335,6 +2335,23 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n \n         debug!(\"result = %s\", tc.to_str());\n         return tc;\n+\n+        // Iterates over all builtin bounds on the type parameter def, including\n+        // those inherited from traits with builtin-kind-supertraits.\n+        fn each_inherited_builtin_bound(cx: ctxt, bounds: &ParamBounds,\n+                                        f: &fn(BuiltinBound)) {\n+            for bound in bounds.builtin_bounds.iter() {\n+                f(bound);\n+            }\n+\n+            do each_bound_trait_and_supertraits(cx, bounds.trait_bounds) |trait_ref| {\n+                let trait_def = lookup_trait_def(cx, trait_ref.def_id);\n+                for bound in trait_def.bounds.iter() {\n+                    f(bound);\n+                }\n+                true\n+            };\n+        }\n     }\n }\n "}]}