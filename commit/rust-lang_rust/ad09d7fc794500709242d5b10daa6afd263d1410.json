{"sha": "ad09d7fc794500709242d5b10daa6afd263d1410", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMDlkN2ZjNzk0NTAwNzA5MjQyZDViMTBkYWE2YWZkMjYzZDE0MTA=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2019-01-20T10:14:26Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2019-01-20T10:14:26Z"}, "message": "rustdoc: Don't modify library path for doctests\n\nIt shouldn't be needed anymore because doctests are no longer compiled with `prefer-dynamic`.", "tree": {"sha": "cc58609184f6f28ff124d0d3e42d06ec71a4ada9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc58609184f6f28ff124d0d3e42d06ec71a4ada9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad09d7fc794500709242d5b10daa6afd263d1410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad09d7fc794500709242d5b10daa6afd263d1410", "html_url": "https://github.com/rust-lang/rust/commit/ad09d7fc794500709242d5b10daa6afd263d1410", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad09d7fc794500709242d5b10daa6afd263d1410/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "588f94b37d020aefe54b0c00ced2fdd7ccc61dfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/588f94b37d020aefe54b0c00ced2fdd7ccc61dfb", "html_url": "https://github.com/rust-lang/rust/commit/588f94b37d020aefe54b0c00ced2fdd7ccc61dfb"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "f4b67771c16638ef55cee7eb2f0cdaf6e05932dd", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ad09d7fc794500709242d5b10daa6afd263d1410/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad09d7fc794500709242d5b10daa6afd263d1410/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=ad09d7fc794500709242d5b10daa6afd263d1410", "patch": "@@ -5,12 +5,11 @@ use rustc_lint;\n use rustc_driver::{self, driver, target_features, Compilation};\n use rustc_driver::driver::phase_2_configure_and_expand;\n use rustc_metadata::cstore::CStore;\n-use rustc_metadata::dynamic_lib::DynamicLibrary;\n use rustc::hir;\n use rustc::hir::intravisit;\n use rustc::session::{self, CompileIncomplete, config};\n use rustc::session::config::{OutputType, OutputTypes, Externs, CodegenOptions};\n-use rustc::session::search_paths::{SearchPath, PathKind};\n+use rustc::session::search_paths::SearchPath;\n use syntax::ast;\n use syntax::source_map::SourceMap;\n use syntax::edition::Edition;\n@@ -21,7 +20,6 @@ use tempfile::Builder as TempFileBuilder;\n use testing;\n \n use std::env;\n-use std::ffi::OsString;\n use std::io::prelude::*;\n use std::io;\n use std::path::PathBuf;\n@@ -265,7 +263,7 @@ fn run_test(test: &str, cratename: &str, filename: &FileName, line: usize,\n         }\n     }\n \n-    let (libdir, outdir, compile_result) = driver::spawn_thread_pool(sessopts, |sessopts| {\n+    let (outdir, compile_result) = driver::spawn_thread_pool(sessopts, |sessopts| {\n         let source_map = Lrc::new(SourceMap::new(sessopts.file_path_mapping()));\n         let emitter = errors::emitter::EmitterWriter::new(box Sink(data.clone()),\n                                                         Some(source_map.clone()),\n@@ -304,7 +302,6 @@ fn run_test(test: &str, cratename: &str, filename: &FileName, line: usize,\n                                 .expect(\"rustdoc needs a tempdir\"))\n             }\n         );\n-        let libdir = sess.target_filesearch(PathKind::All).get_lib_path();\n         let mut control = driver::CompileController::basic();\n \n         let mut cfg = config::build_configuration(&sess, config::parse_cfgspecs(cfgs.clone()));\n@@ -336,7 +333,7 @@ fn run_test(test: &str, cratename: &str, filename: &FileName, line: usize,\n             Err(_) | Ok(Err(CompileIncomplete::Errored(_))) => Err(())\n         };\n \n-        (libdir, outdir, compile_result)\n+        (outdir, compile_result)\n     });\n \n     match (compile_result, compile_fail) {\n@@ -362,21 +359,7 @@ fn run_test(test: &str, cratename: &str, filename: &FileName, line: usize,\n     if no_run { return }\n \n     // Run the code!\n-    //\n-    // We're careful to prepend the *target* dylib search path to the child's\n-    // environment to ensure that the target loads the right libraries at\n-    // runtime. It would be a sad day if the *host* libraries were loaded as a\n-    // mistake.\n     let mut cmd = Command::new(&outdir.lock().unwrap().path().join(\"rust_out\"));\n-    let var = DynamicLibrary::envvar();\n-    let newpath = {\n-        let path = env::var_os(var).unwrap_or(OsString::new());\n-        let mut path = env::split_paths(&path).collect::<Vec<_>>();\n-        path.insert(0, libdir);\n-        env::join_paths(path).unwrap()\n-    };\n-    cmd.env(var, &newpath);\n-\n     match cmd.output() {\n         Err(e) => panic!(\"couldn't run the test: {}{}\", e,\n                         if e.kind() == io::ErrorKind::PermissionDenied {"}, {"sha": "b7617ec556d2083651f881f0bb8f0adb0165c88d", "filename": "src/test/rustdoc-ui/failed-doctest-output.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad09d7fc794500709242d5b10daa6afd263d1410/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/ad09d7fc794500709242d5b10daa6afd263d1410/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout?ref=ad09d7fc794500709242d5b10daa6afd263d1410", "patch": "@@ -12,7 +12,7 @@ error[E0425]: cannot find value `no` in this scope\n 3 | no\n   | ^^ not found in this scope\n \n-thread '$DIR/failed-doctest-output.rs - OtherStruct (line 17)' panicked at 'couldn't compile the test', src/librustdoc/test.rs:354:13\n+thread '$DIR/failed-doctest-output.rs - OtherStruct (line 17)' panicked at 'couldn't compile the test', src/librustdoc/test.rs:351:13\n note: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n \n ---- $DIR/failed-doctest-output.rs - SomeStruct (line 11) stdout ----\n@@ -21,7 +21,7 @@ thread '$DIR/failed-doctest-output.rs - SomeStruct (line 11)' panicked at 'test\n thread 'main' panicked at 'oh no', $DIR/failed-doctest-output.rs:3:1\n note: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n \n-', src/librustdoc/test.rs:389:17\n+', src/librustdoc/test.rs:372:17\n \n \n failures:"}]}