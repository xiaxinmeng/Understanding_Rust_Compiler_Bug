{"sha": "9d3558725b9110beaa6740e88847e3addc9c2d0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMzU1ODcyNWI5MTEwYmVhYTY3NDBlODg4NDdlM2FkZGM5YzJkMGQ=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-06T00:10:24Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-06T00:10:24Z"}, "message": "work around weird match arm lifetimes", "tree": {"sha": "dbf060cf29942448dd691776e1b97a4d6a652966", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbf060cf29942448dd691776e1b97a4d6a652966"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d3558725b9110beaa6740e88847e3addc9c2d0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d3558725b9110beaa6740e88847e3addc9c2d0d", "html_url": "https://github.com/rust-lang/rust/commit/9d3558725b9110beaa6740e88847e3addc9c2d0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d3558725b9110beaa6740e88847e3addc9c2d0d/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66c032cb2d5748e36c416e25c75b80f137f3a7fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/66c032cb2d5748e36c416e25c75b80f137f3a7fc", "html_url": "https://github.com/rust-lang/rust/commit/66c032cb2d5748e36c416e25c75b80f137f3a7fc"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "db8ca0628c4ed2f44c347c1240049cb497cd1ebe", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9d3558725b9110beaa6740e88847e3addc9c2d0d/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3558725b9110beaa6740e88847e3addc9c2d0d/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=9d3558725b9110beaa6740e88847e3addc9c2d0d", "patch": "@@ -585,9 +585,29 @@ impl<'a, 'gcx, 'tcx> BitDenotation for EverInitializedLvals<'a, 'gcx, 'tcx> {\n         sets.gen_all(&init_loc_map[location]);\n \n         match stmt.kind {\n-            mir::StatementKind::StorageDead(local) => {\n-                // End inits for StorageDead, so that an immutable variable can\n-                // be reinitialized on the next iteration of the loop.\n+            mir::StatementKind::StorageDead(local) |\n+            mir::StatementKind::StorageLive(local) => {\n+                // End inits for StorageDead and StorageLive, so that an immutable\n+                // variable can be reinitialized on the next iteration of the loop.\n+                //\n+                // FIXME(#46525): We *need* to do this for StorageLive as well as\n+                // StorageDead, because lifetimes of match bindings with guards are\n+                // weird - i.e. this code\n+                //\n+                // ```\n+                //     fn main() {\n+                //         match 0 {\n+                //             a | a\n+                //             if { println!(\"a={}\", a); false } => {}\n+                //             _ => {}\n+                //         }\n+                //     }\n+                // ```\n+                //\n+                // runs the guard twice, using the same binding for `a`, and only\n+                // storagedeads after everything ends, so if we don't regard the\n+                // storagelive as killing storage, we would have a multiple assignment\n+                // to immutable data error.\n                 if let LookupResult::Exact(mpi) = rev_lookup.find(&mir::Place::Local(local)) {\n                     debug!(\"stmt {:?} at loc {:?} clears the ever initialized status of {:?}\",\n                            stmt, location, &init_path_map[mpi]);"}, {"sha": "9592da77a1b583cb329e6171994892395a71e942", "filename": "src/test/run-pass/match-pipe-binding.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d3558725b9110beaa6740e88847e3addc9c2d0d/src%2Ftest%2Frun-pass%2Fmatch-pipe-binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3558725b9110beaa6740e88847e3addc9c2d0d/src%2Ftest%2Frun-pass%2Fmatch-pipe-binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-pipe-binding.rs?ref=9d3558725b9110beaa6740e88847e3addc9c2d0d", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// compile-flags: -Z borrowck=compare\n \n fn test1() {\n     // from issue 6338"}]}