{"sha": "4bd4e271e44a88cf57d63214716f5c33429cf2d3", "node_id": "C_kwDOAAsO6NoAKDRiZDRlMjcxZTQ0YTg4Y2Y1N2Q2MzIxNDcxNmY1YzMzNDI5Y2YyZDM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-01T09:48:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-01T09:48:58Z"}, "message": "Rollup merge of #92469 - joshtriplett:test-number-fix, r=Mark-Simulacrum\n\nMake tidy check for magic numbers that spell things\n\nRemove existing problematic cases.\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "a748f49ea5fca0a8775ad712a130b6da4d3f824c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a748f49ea5fca0a8775ad712a130b6da4d3f824c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bd4e271e44a88cf57d63214716f5c33429cf2d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0COLCRBK7hj4Ov3rIwAAi0oIAE/RVlfuGZ1/NpRol3Ra6B4I\nJ82WAOeQ4Hp/GgtsaYj2HmdXvB1GrLAgxSc2r1UHXq4J/2qo2haRO9j0LeH1i69E\n+Z9zA/iPjh7+BzTze1ty8aCqPgLcl/f3oLDlqeZJsy7N5L8ZX9aq2ztszKByEHvA\nC/UFblvcCivlmu05J9RddguqFkifRjPndlV85po1/wow4ItERdoeWEWjUHXEeX72\n1HxzXCz0qYXSv68HMcpzTSAJfGG3o2NX+RJnoWNE/rX6hPro3bjjCL4WOhekn85J\n0RaNIYvtCNiBT2X7iSYOqsSDjjpjDV4LtcPloXKgPxX8mv1HhTmAku6Wf+u3Jp8=\n=+c7J\n-----END PGP SIGNATURE-----\n", "payload": "tree a748f49ea5fca0a8775ad712a130b6da4d3f824c\nparent 913bc8644a43a11d41ad5f051cb0fcd0bd795163\nparent 0d55bd11009686dba662b0f4e697183691e7b308\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641030538 +0100\ncommitter GitHub <noreply@github.com> 1641030538 +0100\n\nRollup merge of #92469 - joshtriplett:test-number-fix, r=Mark-Simulacrum\n\nMake tidy check for magic numbers that spell things\n\nRemove existing problematic cases.\n\nr? `@Mark-Simulacrum`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd4e271e44a88cf57d63214716f5c33429cf2d3", "html_url": "https://github.com/rust-lang/rust/commit/4bd4e271e44a88cf57d63214716f5c33429cf2d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bd4e271e44a88cf57d63214716f5c33429cf2d3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "913bc8644a43a11d41ad5f051cb0fcd0bd795163", "url": "https://api.github.com/repos/rust-lang/rust/commits/913bc8644a43a11d41ad5f051cb0fcd0bd795163", "html_url": "https://github.com/rust-lang/rust/commit/913bc8644a43a11d41ad5f051cb0fcd0bd795163"}, {"sha": "0d55bd11009686dba662b0f4e697183691e7b308", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d55bd11009686dba662b0f4e697183691e7b308", "html_url": "https://github.com/rust-lang/rust/commit/0d55bd11009686dba662b0f4e697183691e7b308"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "70a7d7a8cabc14e73e0634a75bd71517083dbae5", "filename": "library/std/src/net/ip.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4bd4e271e44a88cf57d63214716f5c33429cf2d3/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd4e271e44a88cf57d63214716f5c33429cf2d3/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip.rs?ref=4bd4e271e44a88cf57d63214716f5c33429cf2d3", "patch": "@@ -1140,8 +1140,8 @@ impl From<Ipv4Addr> for u32 {\n     /// ```\n     /// use std::net::Ipv4Addr;\n     ///\n-    /// let addr = Ipv4Addr::new(0xca, 0xfe, 0xba, 0xbe);\n-    /// assert_eq!(0xcafebabe, u32::from(addr));\n+    /// let addr = Ipv4Addr::new(0x12, 0x34, 0x56, 0x78);\n+    /// assert_eq!(0x12345678, u32::from(addr));\n     /// ```\n     #[inline]\n     fn from(ip: Ipv4Addr) -> u32 {\n@@ -1159,8 +1159,8 @@ impl From<u32> for Ipv4Addr {\n     /// ```\n     /// use std::net::Ipv4Addr;\n     ///\n-    /// let addr = Ipv4Addr::from(0xcafebabe);\n-    /// assert_eq!(Ipv4Addr::new(0xca, 0xfe, 0xba, 0xbe), addr);\n+    /// let addr = Ipv4Addr::from(0x12345678);\n+    /// assert_eq!(Ipv4Addr::new(0x12, 0x34, 0x56, 0x78), addr);\n     /// ```\n     #[inline]\n     fn from(ip: u32) -> Ipv4Addr {"}, {"sha": "48efb07ff48bc34082edc923eb4db364aa94f0c4", "filename": "src/test/ui/link-section.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftest%2Fui%2Flink-section.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftest%2Fui%2Flink-section.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flink-section.rs?ref=4bd4e271e44a88cf57d63214716f5c33429cf2d3", "patch": "@@ -31,7 +31,7 @@ static mut frobulator: usize = 0xdeadbeef;\n \n pub fn main() {\n     unsafe {\n-        frobulator = 0xcafebabe;\n+        frobulator = 0x12345678;\n         println!(\"{} {} {}\", i_live_in_more_text(), magic, frobulator);\n     }\n }"}, {"sha": "e726b652ef1ed7a18ba4b950137770e271ab57f7", "filename": "src/tools/clippy/tests/ui/unreadable_literal.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.fixed?ref=4bd4e271e44a88cf57d63214716f5c33429cf2d3", "patch": "@@ -30,7 +30,7 @@ fn main() {\n         1_234.123_f32,\n         1.123_4_f32,\n     );\n-    let _bad = (0b11_0110_i64, 0xcafe_babe_usize, 123_456_f32, 1.234_567_f32);\n+    let _bad = (0b11_0110_i64, 0x1234_5678_usize, 123_456_f32, 1.234_567_f32);\n     let _good_sci = 1.1234e1;\n     let _bad_sci = 1.123_456e1;\n "}, {"sha": "5bbb2fc9dc137c28339316a5d5c7dc3a85792d64", "filename": "src/tools/clippy/tests/ui/unreadable_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.rs?ref=4bd4e271e44a88cf57d63214716f5c33429cf2d3", "patch": "@@ -30,7 +30,7 @@ fn main() {\n         1_234.123_f32,\n         1.123_4_f32,\n     );\n-    let _bad = (0b110110_i64, 0xcafebabe_usize, 123456_f32, 1.234567_f32);\n+    let _bad = (0b110110_i64, 0x12345678_usize, 123456_f32, 1.234567_f32);\n     let _good_sci = 1.1234e1;\n     let _bad_sci = 1.123456e1;\n "}, {"sha": "ee5466fd517fd6e00dd79b2cd4324f1df819a8c3", "filename": "src/tools/clippy/tests/ui/unreadable_literal.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funreadable_literal.stderr?ref=4bd4e271e44a88cf57d63214716f5c33429cf2d3", "patch": "@@ -9,27 +9,27 @@ LL |         0x1_234_567,\n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:33:17\n    |\n-LL |     let _bad = (0b110110_i64, 0xcafebabe_usize, 123456_f32, 1.234567_f32);\n+LL |     let _bad = (0b110110_i64, 0x12345678_usize, 123456_f32, 1.234567_f32);\n    |                 ^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n    |\n    = note: `-D clippy::unreadable-literal` implied by `-D warnings`\n \n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:33:31\n    |\n-LL |     let _bad = (0b110110_i64, 0xcafebabe_usize, 123456_f32, 1.234567_f32);\n-   |                               ^^^^^^^^^^^^^^^^ help: consider: `0xcafe_babe_usize`\n+LL |     let _bad = (0b110110_i64, 0x12345678_usize, 123456_f32, 1.234567_f32);\n+   |                               ^^^^^^^^^^^^^^^^ help: consider: `0x1234_5678_usize`\n \n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:33:49\n    |\n-LL |     let _bad = (0b110110_i64, 0xcafebabe_usize, 123456_f32, 1.234567_f32);\n+LL |     let _bad = (0b110110_i64, 0x12345678_usize, 123456_f32, 1.234567_f32);\n    |                                                 ^^^^^^^^^^ help: consider: `123_456_f32`\n \n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:33:61\n    |\n-LL |     let _bad = (0b110110_i64, 0xcafebabe_usize, 123456_f32, 1.234567_f32);\n+LL |     let _bad = (0b110110_i64, 0x12345678_usize, 123456_f32, 1.234567_f32);\n    |                                                             ^^^^^^^^^^^^ help: consider: `1.234_567_f32`\n \n error: long literal lacking separators"}, {"sha": "ca79c835b9fa11db5edc962eb0268a471cec6d4c", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd4e271e44a88cf57d63214716f5c33429cf2d3/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=4bd4e271e44a88cf57d63214716f5c33429cf2d3", "patch": "@@ -56,6 +56,12 @@ const ANNOTATIONS_TO_IGNORE: &[&str] = &[\n     \"// normalize-stderr-test\",\n ];\n \n+// Intentionally written in decimal rather than hex\n+const PROBLEMATIC_CONSTS: &[u32] = &[\n+    184594741, 2880289470, 2881141438, 2965027518, 2976579765, 3203381950, 3405691582, 3405697037,\n+    3735927486, 4027431614, 4276992702,\n+];\n+\n /// Parser states for `line_is_url`.\n #[derive(Clone, Copy, PartialEq)]\n #[allow(non_camel_case_types)]\n@@ -217,6 +223,10 @@ pub fn check(path: &Path, bad: &mut bool) {\n     fn skip(path: &Path) -> bool {\n         super::filter_dirs(path) || skip_markdown_path(path)\n     }\n+    let problematic_consts_strings: Vec<String> = (PROBLEMATIC_CONSTS.iter().map(u32::to_string))\n+        .chain(PROBLEMATIC_CONSTS.iter().map(|v| format!(\"{:x}\", v)))\n+        .chain(PROBLEMATIC_CONSTS.iter().map(|v| format!(\"{:X}\", v)))\n+        .collect();\n     super::walk(path, &mut skip, &mut |entry, contents| {\n         let file = entry.path();\n         let filename = file.file_name().unwrap().to_string_lossy();\n@@ -306,6 +316,11 @@ pub fn check(path: &Path, bad: &mut bool) {\n                 if line.contains(\"//\") && line.contains(\" XXX\") {\n                     err(\"XXX is deprecated; use FIXME\")\n                 }\n+                for s in problematic_consts_strings.iter() {\n+                    if line.contains(s) {\n+                        err(\"Don't use magic numbers that spell things (consider 0x12345678)\");\n+                    }\n+                }\n             }\n             let is_test = || file.components().any(|c| c.as_os_str() == \"tests\");\n             // for now we just check libcore"}]}