{"sha": "28fec95c5963bbd524f4271cb7cac63dcd2ec0cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZmVjOTVjNTk2M2JiZDUyNGY0MjcxY2I3Y2FjNjNkY2QyZWMwY2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-07T01:25:39Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-07T01:25:39Z"}, "message": "tutorial: Add some work on borrowed pointers", "tree": {"sha": "86cc1cfbdb9a04669dd8644beb1aa8ac5e8c3bf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86cc1cfbdb9a04669dd8644beb1aa8ac5e8c3bf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28fec95c5963bbd524f4271cb7cac63dcd2ec0cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28fec95c5963bbd524f4271cb7cac63dcd2ec0cf", "html_url": "https://github.com/rust-lang/rust/commit/28fec95c5963bbd524f4271cb7cac63dcd2ec0cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28fec95c5963bbd524f4271cb7cac63dcd2ec0cf/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af199f2edb0e5a85af7fdd2b8b85173f0928b512", "url": "https://api.github.com/repos/rust-lang/rust/commits/af199f2edb0e5a85af7fdd2b8b85173f0928b512", "html_url": "https://github.com/rust-lang/rust/commit/af199f2edb0e5a85af7fdd2b8b85173f0928b512"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "f72557216ad84e1c92b1542ab9f750f72f9df629", "filename": "doc/tutorial.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/28fec95c5963bbd524f4271cb7cac63dcd2ec0cf/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/28fec95c5963bbd524f4271cb7cac63dcd2ec0cf/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=28fec95c5963bbd524f4271cb7cac63dcd2ec0cf", "patch": "@@ -1557,6 +1557,33 @@ to other tasks. The sending task will give up ownership of the box,\n and won't be able to access it afterwards. The receiving task will\n become the sole owner of the box.\n \n+### Borrowed Pointers\n+\n+Rust borrowed pointers are a general purpose reference/pointer type,\n+similar to the C++ reference type, but guaranteed to point to valid\n+memory. In contrast to unique pointers, where the holder of a unique\n+pointer is the owner of the pointed-to memory, borrowed pointers never\n+imply ownership. Pointers may be borrowed from any type, in which case\n+the pointer is guaranteed not to outlive the value it points to.\n+\n+~~~~\n+# fn work_with_foo_by_pointer(f: &str) { }\n+let foo = \"foo\";\n+work_with_foo_by_pointer(&foo);\n+~~~~\n+\n+The following shows an example of what is _not_ possible with borrowed\n+pointers. If you were able to write this then the pointer to `foo`\n+would outlive `foo` itself.\n+\n+~~~~ {.ignore}\n+let foo_ptr;\n+{\n+    let foo = \"foo\";\n+    foo_ptr = &foo;\n+}\n+~~~~\n+\n ### Mutability\n \n All pointer types have a mutable variant, written `@mut T` or `~mut"}]}