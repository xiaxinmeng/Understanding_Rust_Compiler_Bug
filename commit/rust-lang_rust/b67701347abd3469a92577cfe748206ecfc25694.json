{"sha": "b67701347abd3469a92577cfe748206ecfc25694", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NzcwMTM0N2FiZDM0NjlhOTI1NzdjZmU3NDgyMDZlY2ZjMjU2OTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-12-22T14:42:10Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-12-22T14:42:10Z"}, "message": "Improve code readability", "tree": {"sha": "a965685d53e53cd0a382500e643f0a074e46e89c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a965685d53e53cd0a382500e643f0a074e46e89c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b67701347abd3469a92577cfe748206ecfc25694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b67701347abd3469a92577cfe748206ecfc25694", "html_url": "https://github.com/rust-lang/rust/commit/b67701347abd3469a92577cfe748206ecfc25694", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b67701347abd3469a92577cfe748206ecfc25694/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ce2384501833127fa3c9e995240d78b07f0ab2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ce2384501833127fa3c9e995240d78b07f0ab2f", "html_url": "https://github.com/rust-lang/rust/commit/4ce2384501833127fa3c9e995240d78b07f0ab2f"}], "stats": {"total": 80, "additions": 37, "deletions": 43}, "files": [{"sha": "d0c44cd40b21aaae65fc66451fc4ddaffa873cd1", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 37, "deletions": 43, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/b67701347abd3469a92577cfe748206ecfc25694/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/b67701347abd3469a92577cfe748206ecfc25694/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=b67701347abd3469a92577cfe748206ecfc25694", "patch": "@@ -138,6 +138,22 @@ function getSearchElement() {\n         }\n     }\n \n+    function showSearchResults(search) {\n+        if (search === null || typeof search === 'undefined') {\n+            search = getSearchElement();\n+        }\n+        addClass(main, \"hidden\");\n+        removeClass(search, \"hidden\");\n+    }\n+\n+    function hideSearchResults(search) {\n+        if (search === null || typeof search === 'undefined') {\n+            search = getSearchElement();\n+        }\n+        addClass(search, \"hidden\");\n+        removeClass(main, \"hidden\");\n+    }\n+\n     // used for special search precedence\n     var TY_PRIMITIVE = itemTypes.indexOf(\"primitive\");\n     var TY_KEYWORD = itemTypes.indexOf(\"keyword\");\n@@ -169,8 +185,7 @@ function getSearchElement() {\n         if (ev !== null && search && !hasClass(search, \"hidden\") && ev.newURL) {\n             // This block occurs when clicking on an element in the navbar while\n             // in a search.\n-            addClass(search, \"hidden\");\n-            removeClass(main, \"hidden\");\n+            hideSearchResults(search);\n             var hash = ev.newURL.slice(ev.newURL.indexOf(\"#\") + 1);\n             if (browserSupportsHistoryApi()) {\n                 history.replaceState(hash, \"\", \"?search=#\" + hash);\n@@ -324,16 +339,14 @@ function getSearchElement() {\n     }\n \n     function handleEscape(ev) {\n-        debugger;\n         var help = getHelpElement();\n         var search = getSearchElement();\n         hideModal();\n         if (hasClass(help, \"hidden\") === false) {\n             displayHelp(false, ev, help);\n         } else if (hasClass(search, \"hidden\") === false) {\n             ev.preventDefault();\n-            addClass(search, \"hidden\");\n-            removeClass(main, \"hidden\");\n+            hideSearchResults(search);\n             document.title = titleBeforeSearch;\n         }\n         defocusSearchBar();\n@@ -1265,8 +1278,7 @@ function getSearchElement() {\n                 }\n                 dst = dst[0];\n                 if (window.location.pathname === dst.pathname) {\n-                    addClass(getSearchElement(), \"hidden\");\n-                    removeClass(main, \"hidden\");\n+                    hideSearchResults();\n                     document.location.href = dst.href;\n                 }\n             };\n@@ -1341,8 +1353,6 @@ function getSearchElement() {\n                     e.preventDefault();\n                 } else if (e.which === 16) { // shift\n                     // Does nothing, it's just to avoid losing \"focus\" on the highlighted element.\n-                } else if (e.which === 27) { // escape\n-                    handleEscape(e);\n                 } else if (actives[currentTab].length > 0) {\n                     removeClass(actives[currentTab][0], \"highlighted\");\n                 }\n@@ -1492,10 +1502,9 @@ function getSearchElement() {\n                 \"</div><div id=\\\"results\\\">\" +\n                 ret_others[0] + ret_in_args[0] + ret_returned[0] + \"</div>\";\n \n-            addClass(main, \"hidden\");\n             var search = getSearchElement();\n-            removeClass(search, \"hidden\");\n             search.innerHTML = output;\n+            showSearchResults(search);\n             var tds = search.getElementsByTagName(\"td\");\n             var td_width = 0;\n             if (tds.length > 0) {\n@@ -1700,13 +1709,7 @@ function getSearchElement() {\n                     if (browserSupportsHistoryApi()) {\n                         history.replaceState(\"\", window.currentCrate + \" - Rust\", \"?search=\");\n                     }\n-                    if (hasClass(main, \"content\")) {\n-                        removeClass(main, \"hidden\");\n-                    }\n-                    var search_c = getSearchElement();\n-                    if (hasClass(search_c, \"content\")) {\n-                        addClass(search_c, \"hidden\");\n-                    }\n+                    hideSearchResults();\n                 } else {\n                     searchTimeout = setTimeout(search, 500);\n                 }\n@@ -1742,19 +1745,8 @@ function getSearchElement() {\n                 // Store the previous <title> so we can revert back to it later.\n                 var previousTitle = document.title;\n \n-                window.onpopstate = function(e) {\n+                window.addEventListener(\"popstate\", function(e) {\n                     var params = getQueryStringParams();\n-                    // When browsing back from search results the main page\n-                    // visibility must be reset.\n-                    if (!params.search) {\n-                        if (hasClass(main, \"content\")) {\n-                            removeClass(main, \"hidden\");\n-                        }\n-                        var search_c = getSearchElement();\n-                        if (hasClass(search_c, \"content\")) {\n-                            addClass(search_c, \"hidden\");\n-                        }\n-                    }\n                     // Revert to the previous title manually since the History\n                     // API ignores the title parameter.\n                     document.title = previousTitle;\n@@ -1766,18 +1758,21 @@ function getSearchElement() {\n                     // perform the search. This will empty the bar if there's\n                     // nothing there, which lets you really go back to a\n                     // previous state with nothing in the bar.\n-                    if (params.search) {\n+                    if (params.search && params.search.length > 0) {\n                         search_input.value = params.search;\n+                        // Some browsers fire \"onpopstate\" for every page load\n+                        // (Chrome), while others fire the event only when actually\n+                        // popping a state (Firefox), which is why search() is\n+                        // called both here and at the end of the startSearch()\n+                        // function.\n+                        search(e);\n                     } else {\n                         search_input.value = \"\";\n+                        // When browsing back from search results the main page\n+                        // visibility must be reset.\n+                        hideSearchResults();\n                     }\n-                    // Some browsers fire \"onpopstate\" for every page load\n-                    // (Chrome), while others fire the event only when actually\n-                    // popping a state (Firefox), which is why search() is\n-                    // called both here and at the end of the startSearch()\n-                    // function.\n-                    search();\n-                };\n+                });\n             }\n             search();\n         }\n@@ -2523,9 +2518,9 @@ function getSearchElement() {\n     }\n \n     function putBackSearch(search_input) {\n-        if (search_input.value !== \"\") {\n-            addClass(main, \"hidden\");\n-            removeClass(getSearchElement(), \"hidden\");\n+        var search = getSearchElement();\n+        if (search_input.value !== \"\" && hasClass(search, \"hidden\")) {\n+            showSearchResults(search);\n             if (browserSupportsHistoryApi()) {\n                 history.replaceState(search_input.value,\n                                      \"\",\n@@ -2542,10 +2537,9 @@ function getSearchElement() {\n \n     var params = getQueryStringParams();\n     if (params && params.search) {\n-        addClass(main, \"hidden\");\n         var search = getSearchElement();\n-        removeClass(search, \"hidden\");\n         search.innerHTML = \"<h3 style=\\\"text-align: center;\\\">Loading search results...</h3>\";\n+        showSearchResults(search);\n     }\n \n     var sidebar_menu = document.getElementsByClassName(\"sidebar-menu\")[0];"}]}