{"sha": "f5d388302b045f60a417b906f80c00d46db99ee5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZDM4ODMwMmIwNDVmNjBhNDE3YjkwNmY4MGMwMGQ0NmRiOTllZTU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-29T11:02:59Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-07T16:48:58Z"}, "message": "Remove cg_llvm::metadata module", "tree": {"sha": "2606b32740b9b9f3540c00badba6bbf8078d6b80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2606b32740b9b9f3540c00badba6bbf8078d6b80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5d388302b045f60a417b906f80c00d46db99ee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5d388302b045f60a417b906f80c00d46db99ee5", "html_url": "https://github.com/rust-lang/rust/commit/f5d388302b045f60a417b906f80c00d46db99ee5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5d388302b045f60a417b906f80c00d46db99ee5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "267d55d44acf6bb2821de39d4f868650ff0a9c7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/267d55d44acf6bb2821de39d4f868650ff0a9c7b", "html_url": "https://github.com/rust-lang/rust/commit/267d55d44acf6bb2821de39d4f868650ff0a9c7b"}], "stats": {"total": 41, "additions": 15, "deletions": 26}, "files": [{"sha": "aeb0561c08620eae9000421a7ecb68fe1f179d39", "filename": "compiler/rustc_codegen_llvm/src/base.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f5d388302b045f60a417b906f80c00d46db99ee5/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5d388302b045f60a417b906f80c00d46db99ee5/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs?ref=f5d388302b045f60a417b906f80c00d46db99ee5", "patch": "@@ -18,7 +18,6 @@ use crate::builder::Builder;\n use crate::common;\n use crate::context::CodegenCx;\n use crate::llvm;\n-use crate::metadata;\n use crate::value::Value;\n \n use rustc_codegen_ssa::base::maybe_create_entry_wrapper;\n@@ -47,6 +46,21 @@ pub fn write_compressed_metadata<'tcx>(\n     use snap::write::FrameEncoder;\n     use std::io::Write;\n \n+    // Historical note:\n+    //\n+    // When using link.exe it was seen that the section name `.note.rustc`\n+    // was getting shortened to `.note.ru`, and according to the PE and COFF\n+    // specification:\n+    //\n+    // > Executable images do not use a string table and do not support\n+    // > section names longer than 8\u00a0characters\n+    //\n+    // https://docs.microsoft.com/en-us/windows/win32/debug/pe-format\n+    //\n+    // As a result, we choose a slightly shorter name! As to why\n+    // `.note.rustc` works on MinGW, that's another good question...\n+    let section_name = if tcx.sess.target.is_like_osx { \"__DATA,.rustc\" } else { \".rustc\" };\n+\n     let (metadata_llcx, metadata_llmod) = (&*llvm_module.llcx, llvm_module.llmod());\n     let mut compressed = tcx.metadata_encoding_version();\n     FrameEncoder::new(&mut compressed).write_all(&metadata.raw_data).unwrap();\n@@ -59,7 +73,6 @@ pub fn write_compressed_metadata<'tcx>(\n         unsafe { llvm::LLVMAddGlobal(metadata_llmod, common::val_ty(llconst), buf.as_ptr()) };\n     unsafe {\n         llvm::LLVMSetInitializer(llglobal, llconst);\n-        let section_name = metadata::metadata_section_name(&tcx.sess.target);\n         let name = SmallCStr::new(section_name);\n         llvm::LLVMSetSection(llglobal, name.as_ptr());\n "}, {"sha": "4f8ea50acaabca62ad2d1c554b8d7a15dc0b210a", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f5d388302b045f60a417b906f80c00d46db99ee5/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5d388302b045f60a417b906f80c00d46db99ee5/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=f5d388302b045f60a417b906f80c00d46db99ee5", "patch": "@@ -69,7 +69,6 @@ pub mod llvm {\n }\n \n mod llvm_util;\n-mod metadata;\n mod mono_item;\n mod type_;\n mod type_of;"}, {"sha": "4bad93a75674bd64cde1c034aabcc2ad59b2d55e", "filename": "compiler/rustc_codegen_llvm/src/metadata.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/267d55d44acf6bb2821de39d4f868650ff0a9c7b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/267d55d44acf6bb2821de39d4f868650ff0a9c7b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmetadata.rs?ref=267d55d44acf6bb2821de39d4f868650ff0a9c7b", "patch": "@@ -1,23 +0,0 @@\n-use rustc_target::spec::Target;\n-\n-use rustc_fs_util::path_to_c_string;\n-use std::path::Path;\n-use std::slice;\n-\n-pub fn metadata_section_name(target: &Target) -> &'static str {\n-    // Historical note:\n-    //\n-    // When using link.exe it was seen that the section name `.note.rustc`\n-    // was getting shortened to `.note.ru`, and according to the PE and COFF\n-    // specification:\n-    //\n-    // > Executable images do not use a string table and do not support\n-    // > section names longer than 8\u00a0characters\n-    //\n-    // https://docs.microsoft.com/en-us/windows/win32/debug/pe-format\n-    //\n-    // As a result, we choose a slightly shorter name! As to why\n-    // `.note.rustc` works on MinGW, that's another good question...\n-\n-    if target.is_like_osx { \"__DATA,.rustc\" } else { \".rustc\" }\n-}"}]}