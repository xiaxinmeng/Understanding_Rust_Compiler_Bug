{"sha": "762639e7fd968905d97599f9396568554c304f61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MjYzOWU3ZmQ5Njg5MDVkOTc1OTlmOTM5NjU2ODU1NGMzMDRmNjE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-10T05:16:12Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-10T05:34:50Z"}, "message": "Reset the error count of parser from the previous file", "tree": {"sha": "a822ac3de029458beee7c5958d7dd48f91817657", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a822ac3de029458beee7c5958d7dd48f91817657"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/762639e7fd968905d97599f9396568554c304f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/762639e7fd968905d97599f9396568554c304f61", "html_url": "https://github.com/rust-lang/rust/commit/762639e7fd968905d97599f9396568554c304f61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/762639e7fd968905d97599f9396568554c304f61/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c879d5ebd719875cf99bda55e577df07b28f6ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c879d5ebd719875cf99bda55e577df07b28f6ea6", "html_url": "https://github.com/rust-lang/rust/commit/c879d5ebd719875cf99bda55e577df07b28f6ea6"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "6488c83e9831fa260e0bd0e88726188fcd9fce8f", "filename": "src/lib.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/762639e7fd968905d97599f9396568554c304f61/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/762639e7fd968905d97599f9396568554c304f61/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=762639e7fd968905d97599f9396568554c304f61", "patch": "@@ -427,9 +427,10 @@ impl fmt::Display for FormatReport {\n \n // Formatting which depends on the AST.\n fn format_ast<F>(krate: &ast::Crate,\n-                 parse_session: &ParseSess,\n+                 mut parse_session: &mut ParseSess,\n                  main_file: &Path,\n                  config: &Config,\n+                 codemap: &Rc<CodeMap>,\n                  mut after_file: F)\n                  -> Result<(FileMap, bool), io::Error>\n     where F: FnMut(&str, &mut StringBuffer) -> Result<bool, io::Error>\n@@ -449,12 +450,19 @@ fn format_ast<F>(krate: &ast::Crate,\n         if config.verbose() {\n             println!(\"Formatting {}\", path);\n         }\n-        let mut visitor = FmtVisitor::from_codemap(parse_session, config);\n-        visitor.format_separate_mod(module);\n+        {\n+            let mut visitor = FmtVisitor::from_codemap(parse_session, config);\n+            visitor.format_separate_mod(module);\n \n-        has_diff |= after_file(path, &mut visitor.buffer)?;\n+            has_diff |= after_file(path, &mut visitor.buffer)?;\n \n-        result.push((path.to_owned(), visitor.buffer));\n+            result.push((path.to_owned(), visitor.buffer));\n+        }\n+        // Reset the error count.\n+        if parse_session.span_diagnostic.has_errors() {\n+            parse_session.span_diagnostic =\n+                Handler::with_tty_emitter(ColorConfig::Auto, true, false, Some(codemap.clone()));\n+        }\n     }\n \n     Ok((result, has_diff))\n@@ -612,9 +620,10 @@ pub fn format_input<T: Write>(input: Input,\n \n     match format_ast(\n         &krate,\n-        &parse_session,\n+        &mut parse_session,\n         &main_file,\n         config,\n+        &codemap,\n         |file_name, file| {\n             // For some reason, the codemap does not include terminating\n             // newlines so we must add one on for each file. This is sad."}]}