{"sha": "f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZTNlNjkwM2IyMGRmMDFhNmFiZTM2ZDc0MWMzOWQ2ZTk2OTZlYmI=", "commit": {"author": {"name": "Peter Hull", "email": "peterhull90@gmail.com", "date": "2010-09-20T21:08:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-30T20:50:25Z"}, "message": "Initial check-in of 99 Bottles Of Beer\nusing different methods (simple, iterator, tail-call, pattern match)", "tree": {"sha": "0a6754a03a66878aa0b4567e5b1420c5a006d785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a6754a03a66878aa0b4567e5b1420c5a006d785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "html_url": "https://github.com/rust-lang/rust/commit/f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/comments", "author": {"login": "pedro-w", "id": 22172519, "node_id": "MDQ6VXNlcjIyMTcyNTE5", "avatar_url": "https://avatars.githubusercontent.com/u/22172519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedro-w", "html_url": "https://github.com/pedro-w", "followers_url": "https://api.github.com/users/pedro-w/followers", "following_url": "https://api.github.com/users/pedro-w/following{/other_user}", "gists_url": "https://api.github.com/users/pedro-w/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedro-w/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedro-w/subscriptions", "organizations_url": "https://api.github.com/users/pedro-w/orgs", "repos_url": "https://api.github.com/users/pedro-w/repos", "events_url": "https://api.github.com/users/pedro-w/events{/privacy}", "received_events_url": "https://api.github.com/users/pedro-w/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a3404803b6c6de079a590a4bc96313d9a68f164", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a3404803b6c6de079a590a4bc96313d9a68f164", "html_url": "https://github.com/rust-lang/rust/commit/4a3404803b6c6de079a590a4bc96313d9a68f164"}], "stats": {"total": 269, "additions": 269, "deletions": 0}, "files": [{"sha": "336939c8d356921eb0ceeb0bbbd0c1cd5fcc45f6", "filename": "src/test/bench/99-bottles/99bob-iter.rs", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2F99bob-iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2F99bob-iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2F99bob-iter.rs?ref=f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "patch": "@@ -0,0 +1,67 @@\n+/* -*- mode:rust;indent-tabs-mode:nil -*- \n+ * Implementation of 99 Bottles of Beer\n+ * http://99-bottles-of-beer.net/\n+ */\n+use std;\n+import std._int;\n+import std._str;\n+\n+fn b1() -> str {\n+  ret \"# of beer on the wall, # of beer.\";\n+}\n+fn b2() -> str {\n+  ret \"Take one down and pass it around, # of beer on the wall.\";\n+}\n+\n+fn b7() ->str {\n+  ret \"No more bottles of beer on the wall, no more bottles of beer.\";\n+}\n+fn b8() -> str {\n+  ret \"Go to the store and buy some more, # of beer on the wall.\";\n+}\n+\n+fn sub(str t, int n) -> str {\n+  let str b = \"\";\n+  let uint i = 0u;\n+  let str ns;\n+  alt (n) {\n+    case (0) {\n+      ns = \"no more bottles\";\n+    }\n+case (1) {\n+    ns = \"1 bottle\";\n+  }\n+ case (_) {\n+    ns = _int.to_str(n, 10u) + \" bottles\";\n+  }\n+  }\n+  while (i < _str.byte_len(t)) {\n+    if (t.(i) == ('#' as u8)) {\n+      b += ns;\n+    }\n+    else {\n+      b += t.(i);\n+    }\n+    i += 1u;\n+  }\n+  ret b;\n+}\n+\n+/* Using an interator */\n+iter ninetynine() -> int {\n+    let int n = 100;\n+    while (n > 1) {\n+      n -= 1;\n+      put n;\n+    }\n+  }\n+fn main() {\n+  for each (int n in ninetynine()) {\n+    log sub(b1(), n);\n+    log sub(b2(), n-1);\n+    log \"\";\n+  }\n+  log b7();\n+  log b8();\n+}\n+"}, {"sha": "58d2d2c3e5434f3cbfab908e1f5e04ec48e919f1", "filename": "src/test/bench/99-bottles/99bob-pattern.rs", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2F99bob-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2F99bob-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2F99bob-pattern.rs?ref=f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "patch": "@@ -0,0 +1,75 @@\n+/* -*- mode:rust;indent-tabs-mode:nil -*- \n+ * Implementation of 99 Bottles of Beer\n+ * http://99-bottles-of-beer.net/\n+ */\n+use std;\n+import std._int;\n+import std._str;\n+\n+tag bottle { none; dual; single; multiple(int);}\n+\n+fn show(bottle b) {\n+  alt(b) {\n+    case (none) {\n+      log \"No more bottles of beer on the wall, no more bottles of beer,\";\n+      log \"Go to the store and buy some more, \"\n+        +\"99 bottles of beer on the wall.\";\n+    }\n+    case (single) {\n+      log \"1 bottle of beer on the wall, 1 bottle of beer,\";\n+      log \"Take one down and pass it around, \"\n+        +\"no more bottles of beer on the wall.\";\n+    }\n+    case (dual) {\n+      log \"2 bottles of beer on the wall, 2 bottles of beer,\";\n+      log \"Take one down and pass it around, 1 bottle of beer on the wall.\";\n+    }\n+    case (multiple(?n)) {\n+      let str nb =  _int.to_str(n, 10u);\n+      let str mb = _int.to_str(n - 1, 10u);\n+      log nb + \" bottles of beer on the wall, \" + nb + \" bottles of beer,\";\n+      log \"Take one down and pass it around, \" \n+        + mb + \" bottles of beer on the wall.\";\n+    }\n+  }\n+}\n+fn next(bottle b) -> bottle {\n+  alt(b) {\n+    case (none) {\n+      ret none;\n+    }\n+    case (single) {\n+      ret none;\n+    }\n+    case (dual) {\n+      ret single;\n+    }\n+    case (multiple(3)) {\n+      ret dual;\n+    }\n+    case (multiple(?n)) {\n+      ret multiple(n - 1);\n+    }\n+  }\n+}\n+// Won't need this when tags can be compared with ==\n+fn more(bottle b) -> bool {\n+  alt(b) {\n+    case (none) {\n+      ret false;\n+    }\n+    case (_) {\n+      ret true;\n+    }\n+  }\n+}\n+fn main() {\n+  let bottle b = multiple(99);\n+  let bool running = true;\n+  while (running) {\n+    show(b);\n+    log \"\";\n+    running = more(b);\n+    b = next(b);\n+  }\n+}\n\\ No newline at end of file"}, {"sha": "10fec27ac87de7c7ad963a1186936aa48fc4b0a9", "filename": "src/test/bench/99-bottles/99bob-simple.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2F99bob-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2F99bob-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2F99bob-simple.rs?ref=f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "patch": "@@ -0,0 +1,61 @@\n+/* -*- mode:rust;indent-tabs-mode:nil -*- \n+ * Implementation of 99 Bottles of Beer\n+ * http://99-bottles-of-beer.net/\n+ */\n+use std;\n+import std._int;\n+import std._str;\n+\n+fn b1() -> str {\n+  ret \"# of beer on the wall, # of beer.\";\n+}\n+fn b2() -> str {\n+  ret \"Take one down and pass it around, # of beer on the wall.\";\n+}\n+fn b7() ->str {\n+  ret \"No more bottles of beer on the wall, no more bottles of beer.\";\n+}\n+fn b8() -> str {\n+  ret \"Go to the store and buy some more, # of beer on the wall.\";\n+}\n+\n+fn sub(str t, int n) -> str {\n+  let str b = \"\";\n+  let uint i = 0u;\n+  let str ns;\n+  alt (n) {\n+    case (0) {\n+      ns = \"no more bottles\";\n+    }\n+case (1) {\n+    ns = \"1 bottle\";\n+  }\n+ case (_) {\n+    ns = _int.to_str(n, 10u) + \" bottles\";\n+  }\n+  }\n+  while (i < _str.byte_len(t)) {\n+    if (t.(i) == ('#' as u8)) {\n+      b += ns;\n+    }\n+    else {\n+      b += t.(i);\n+    }\n+    i += 1u;\n+  }\n+  ret b;\n+}\n+\n+/* Straightforward counter */\n+fn main() {\n+  let int n=99;\n+  while (n > 0) {\n+    log sub(b1(), n);\n+    log sub(b2(), n - 1);\n+    log \"\";\n+    n -= 1;\n+  }\n+  log b7();\n+  log sub(b8(),99);\n+} \n+"}, {"sha": "16e66d333d3e65061526fc54c50aaa7e51d4b8b9", "filename": "src/test/bench/99-bottles/99bob-tail.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2F99bob-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2F99bob-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2F99bob-tail.rs?ref=f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "patch": "@@ -0,0 +1,43 @@\n+/* -*- mode:rust;indent-tabs-mode:nil -*- \n+ * Implementation of 99 Bottles of Beer\n+ * http://99-bottles-of-beer.net/\n+ */\n+use std;\n+import std._int;\n+import std._str;\n+\n+fn main() {\n+  fn multiple(int n) {\n+    let str nb =  _int.to_str(n, 10u);\n+    let str mb =  _int.to_str(n - 1, 10u);\n+    log nb + \" bottles of beer on the wall, \" + nb + \" bottles of beer,\";\n+    log \"Take one down and pass it around, \" \n+      + mb + \" bottles of beer on the wall.\";\n+    log \"\";\n+    if (n > 3) {\n+      be multiple(n - 1);\n+    }\n+    else {\n+      be dual();\n+    }\n+  }\n+  fn dual() {\n+    log \"2 bottles of beer on the wall, 2 bottles of beer,\";\n+    log \"Take one down and pass it around, 1 bottle of beer on the wall.\";\n+    log \"\";\n+    be single();\n+  }\n+  fn single() {\n+    log \"1 bottle of beer on the wall, 1 bottle of beer,\";\n+    log \"Take one down and pass it around, \"\n+      + \"no more bottles of beer on the wall.\";\n+    log \"\";\n+    be none();\n+  }\n+  fn none() {\n+    log \"No more bottles of beer on the wall, no more bottles of beer,\";\n+    log \"Go to the store and buy some more, 99 bottles of beer on the wall.\";\n+    log \"\";\n+  }\n+  multiple(99);\n+}\n\\ No newline at end of file"}, {"sha": "8d1d27f99f83984b9f4d3f5ac63f34e026241c52", "filename": "src/test/bench/99-bottles/Makefile", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2FMakefile?ref=f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "patch": "@@ -0,0 +1,20 @@\n+RC:=../../../rustboot\n+RFLAGS:=-L ../../..\n+TARGETS:= 99bob-simple 99bob-iter 99bob-tail 99bob-pattern\n+TARGET_X86:=$(addsuffix .x86,$(TARGETS))\n+TARGET_LLVM:=$(addsuffix .llvm,$(TARGETS))\n+\n+all : x86s llvms\n+\n+clean:\n+\trm  $(TARGET_X86) $(TARGET_LLVM)\n+\n+x86s : $(TARGET_X86) \n+\n+llvms:  $(TARGET_LLVM)\n+\n+%.x86 : %.rs\n+\t$(RC) $(RFLAGS) $^ -o $@\n+\n+%.llvm : %.rs\n+\t$(RC) $(RFLAGS) -llvm $^ -o $@\n\\ No newline at end of file"}, {"sha": "9da274e41f905c1ee5813b9519e5162a3addde7f", "filename": "src/test/bench/99-bottles/r.sh", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2Fr.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f6e3e6903b20df01a6abe36d741c39d6e9696ebb/src%2Ftest%2Fbench%2F99-bottles%2Fr.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2Fr.sh?ref=f6e3e6903b20df01a6abe36d741c39d6e9696ebb", "patch": "@@ -0,0 +1,3 @@\n+#!/bin/sh\n+make -k $1.x86\n+DYLD_LIBRARY_PATH=../../.. ./$1.x86"}]}