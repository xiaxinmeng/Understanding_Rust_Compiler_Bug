{"sha": "90d28ec372185f94529fd6c72cc17c9cf1e9f137", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZDI4ZWMzNzIxODVmOTQ1MjlmZDZjNzJjYzE3YzljZjFlOWYxMzc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-02-24T07:00:48Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-02-28T18:50:13Z"}, "message": "rustbuild: Enable bootstrapping new hosts\n\nThis commit fixes a longstanding issue with the makefiles where all host\nplatforms bootstrap themselves. This commit alters the build logic for the\nbootstrap to instead only bootstrap the build triple, and all other compilers\nare compiled from that one compiler.\n\nThe benefit of this change is that we can cross-compile compilers which cannot\nrun on the build platform. For example our builders could start creating\n`arm-unknown-linux-gnueabihf` compilers.\n\nThis reduces the amount of bootstrapping we do, reducing the amount of test\ncoverage, but overall it should largely just end in faster build times for\nmulti-host compiles as well as enabling a feature which can't be done today.\n\ncc #5258", "tree": {"sha": "fad689dedceea6e6d4191b3d35e2159c1ec531cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fad689dedceea6e6d4191b3d35e2159c1ec531cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90d28ec372185f94529fd6c72cc17c9cf1e9f137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90d28ec372185f94529fd6c72cc17c9cf1e9f137", "html_url": "https://github.com/rust-lang/rust/commit/90d28ec372185f94529fd6c72cc17c9cf1e9f137", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90d28ec372185f94529fd6c72cc17c9cf1e9f137/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "095f5e7c81ae2894bdad8b614297b281b67fd2fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/095f5e7c81ae2894bdad8b614297b281b67fd2fc", "html_url": "https://github.com/rust-lang/rust/commit/095f5e7c81ae2894bdad8b614297b281b67fd2fc"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "6c0c55fddeea35939e149eba27290d7f2beac295", "filename": "src/bootstrap/build/step.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/90d28ec372185f94529fd6c72cc17c9cf1e9f137/src%2Fbootstrap%2Fbuild%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90d28ec372185f94529fd6c72cc17c9cf1e9f137/src%2Fbootstrap%2Fbuild%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fstep.rs?ref=90d28ec372185f94529fd6c72cc17c9cf1e9f137", "patch": "@@ -151,15 +151,12 @@ impl<'a> Step<'a> {\n     pub fn deps(&self, build: &'a Build) -> Vec<Step<'a>> {\n         match self.src {\n             Source::Rustc { stage: 0 } => {\n-                if self.target == build.config.build {\n-                    Vec::new()\n-                } else {\n-                    let compiler = Compiler::new(0, &build.config.build);\n-                    vec![self.librustc(0, compiler)]\n-                }\n+                assert!(self.target == build.config.build);\n+                Vec::new()\n             }\n             Source::Rustc { stage } => {\n-                vec![self.librustc(stage - 1, self.compiler(stage - 1))]\n+                let compiler = Compiler::new(stage - 1, &build.config.build);\n+                vec![self.librustc(stage - 1, compiler)]\n             }\n             Source::Librustc { stage, compiler } => {\n                 vec![self.libstd(stage, compiler), self.llvm(())]"}]}