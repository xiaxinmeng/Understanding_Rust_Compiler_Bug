{"sha": "c32f1332363fd719cade4b4b2a7ba885a3ded4e7", "node_id": "C_kwDOAAsO6NoAKGMzMmYxMzMyMzYzZmQ3MTljYWRlNGI0YjJhN2JhODg1YTNkZWQ0ZTc", "commit": {"author": {"name": "Jeremy Banks", "email": "_@jeremy.ca", "date": "2022-06-15T19:42:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-15T19:42:43Z"}, "message": "fix: inserted imports must come after a shebang if present", "tree": {"sha": "1ef3bfd60915f0c75a4889283ddde41da7050f17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ef3bfd60915f0c75a4889283ddde41da7050f17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c32f1332363fd719cade4b4b2a7ba885a3ded4e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c32f1332363fd719cade4b4b2a7ba885a3ded4e7", "html_url": "https://github.com/rust-lang/rust/commit/c32f1332363fd719cade4b4b2a7ba885a3ded4e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c32f1332363fd719cade4b4b2a7ba885a3ded4e7/comments", "author": {"login": "jeremyBanks", "id": 18020, "node_id": "MDQ6VXNlcjE4MDIw", "avatar_url": "https://avatars.githubusercontent.com/u/18020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremyBanks", "html_url": "https://github.com/jeremyBanks", "followers_url": "https://api.github.com/users/jeremyBanks/followers", "following_url": "https://api.github.com/users/jeremyBanks/following{/other_user}", "gists_url": "https://api.github.com/users/jeremyBanks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremyBanks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremyBanks/subscriptions", "organizations_url": "https://api.github.com/users/jeremyBanks/orgs", "repos_url": "https://api.github.com/users/jeremyBanks/repos", "events_url": "https://api.github.com/users/jeremyBanks/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremyBanks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f32ad8362f075a80d4c4861c5f6f601fd7484ff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f32ad8362f075a80d4c4861c5f6f601fd7484ff6", "html_url": "https://github.com/rust-lang/rust/commit/f32ad8362f075a80d4c4861c5f6f601fd7484ff6"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "d1cd347819703f8ec64f0372800e4b3a24c9f775", "filename": "crates/ide-db/src/imports/insert_use.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c32f1332363fd719cade4b4b2a7ba885a3ded4e7/crates%2Fide-db%2Fsrc%2Fimports%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c32f1332363fd719cade4b4b2a7ba885a3ded4e7/crates%2Fide-db%2Fsrc%2Fimports%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fimports%2Finsert_use.rs?ref=c32f1332363fd719cade4b4b2a7ba885a3ded4e7", "patch": "@@ -403,7 +403,8 @@ fn insert_use_(\n         .take_while(|child| match child {\n             NodeOrToken::Node(node) => is_inner_attribute(node.clone()),\n             NodeOrToken::Token(token) => {\n-                [SyntaxKind::WHITESPACE, SyntaxKind::COMMENT].contains(&token.kind())\n+                [SyntaxKind::WHITESPACE, SyntaxKind::COMMENT, SyntaxKind::SHEBANG]\n+                    .contains(&token.kind())\n             }\n         })\n         .filter(|child| child.as_token().map_or(true, |t| t.kind() != SyntaxKind::WHITESPACE))"}]}