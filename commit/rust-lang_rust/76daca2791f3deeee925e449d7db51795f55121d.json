{"sha": "76daca2791f3deeee925e449d7db51795f55121d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZGFjYTI3OTFmM2RlZWVlOTI1ZTQ0OWQ3ZGI1MTc5NWY1NTEyMWQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T13:39:09Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T13:39:09Z"}, "message": "Add #[inline] to some core::str functions.\n\nAlmost all these functions already had #[inline]. These were missing.", "tree": {"sha": "a38a01704622111cfa403a78fe0d7199d3ac1e88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a38a01704622111cfa403a78fe0d7199d3ac1e88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76daca2791f3deeee925e449d7db51795f55121d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76daca2791f3deeee925e449d7db51795f55121d", "html_url": "https://github.com/rust-lang/rust/commit/76daca2791f3deeee925e449d7db51795f55121d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76daca2791f3deeee925e449d7db51795f55121d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a25123845778fdaa715815cc9ec917a67c35dbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a25123845778fdaa715815cc9ec917a67c35dbd", "html_url": "https://github.com/rust-lang/rust/commit/7a25123845778fdaa715815cc9ec917a67c35dbd"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "28cd350019ebf1603b200c3bb1ba64c697c8fc73", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76daca2791f3deeee925e449d7db51795f55121d/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76daca2791f3deeee925e449d7db51795f55121d/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=76daca2791f3deeee925e449d7db51795f55121d", "patch": "@@ -326,6 +326,7 @@ unsafe impl TrustedLen for Bytes<'_> {}\n #[doc(hidden)]\n #[unstable(feature = \"trusted_random_access\", issue = \"none\")]\n unsafe impl TrustedRandomAccess for Bytes<'_> {\n+    #[inline]\n     fn may_have_side_effect() -> bool {\n         false\n     }"}, {"sha": "5d80d2be9a4d34c0815ee0eb57b187f0b515cf48", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/76daca2791f3deeee925e449d7db51795f55121d/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76daca2791f3deeee925e449d7db51795f55121d/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=76daca2791f3deeee925e449d7db51795f55121d", "patch": "@@ -1711,6 +1711,7 @@ impl str {\n     ///\n     /// assert_eq!(\"Hello\\tworld\", s.trim());\n     /// ```\n+    #[inline]\n     #[must_use = \"this returns the trimmed string as a slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1748,6 +1749,7 @@ impl str {\n     /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05e2') == s.trim_start().chars().next());\n     /// ```\n+    #[inline]\n     #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n@@ -1785,6 +1787,7 @@ impl str {\n     /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05ea') == s.trim_end().chars().rev().next());\n     /// ```\n+    #[inline]\n     #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n@@ -1823,6 +1826,7 @@ impl str {\n     /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea\";\n     /// assert!(Some('\u05e2') == s.trim_left().chars().next());\n     /// ```\n+    #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_deprecated(\n         since = \"1.33.0\",\n@@ -1864,6 +1868,7 @@ impl str {\n     /// let s = \"\u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05ea') == s.trim_right().chars().rev().next());\n     /// ```\n+    #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_deprecated(\n         since = \"1.33.0\",\n@@ -2261,6 +2266,7 @@ impl str {\n     /// assert_eq!(\"GR\u00fc\u00dfE, J\u00fcRGEN \u2764\", s);\n     /// ```\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[inline]\n     pub fn make_ascii_uppercase(&mut self) {\n         // SAFETY: safe because we transmute two types with the same layout.\n         let me = unsafe { self.as_bytes_mut() };\n@@ -2287,6 +2293,7 @@ impl str {\n     /// assert_eq!(\"gr\u00dc\u00dfe, j\u00dcrgen \u2764\", s);\n     /// ```\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[inline]\n     pub fn make_ascii_lowercase(&mut self) {\n         // SAFETY: safe because we transmute two types with the same layout.\n         let me = unsafe { self.as_bytes_mut() };"}]}