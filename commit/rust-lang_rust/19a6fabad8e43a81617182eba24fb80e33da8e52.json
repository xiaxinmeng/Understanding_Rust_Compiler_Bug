{"sha": "19a6fabad8e43a81617182eba24fb80e33da8e52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YTZmYWJhZDhlNDNhODE2MTcxODJlYmEyNGZiODBlMzNkYThlNTI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-08-29T06:47:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-11T07:13:22Z"}, "message": "Implement the notion of a \"generated unsafe block\"\n\nThis way syntax extensions can generate unsafe blocks without worrying about\nthem generating unnecessary unsafe warnings. Perhaps a special keyword could be\nadded to be used in macros, but I don't think that's the best solution.", "tree": {"sha": "25ff3085a8f251bc1298aecca1d3bb9c247d8237", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25ff3085a8f251bc1298aecca1d3bb9c247d8237"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19a6fabad8e43a81617182eba24fb80e33da8e52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19a6fabad8e43a81617182eba24fb80e33da8e52", "html_url": "https://github.com/rust-lang/rust/commit/19a6fabad8e43a81617182eba24fb80e33da8e52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19a6fabad8e43a81617182eba24fb80e33da8e52/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba9fa89bfb4aae53db93e9ecac31807af96356fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba9fa89bfb4aae53db93e9ecac31807af96356fc", "html_url": "https://github.com/rust-lang/rust/commit/ba9fa89bfb4aae53db93e9ecac31807af96356fc"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "9c02f544fbaeb11e41a0c2726da6a188c32df1d0", "filename": "src/librustc/middle/effect.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibrustc%2Fmiddle%2Feffect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibrustc%2Fmiddle%2Feffect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Feffect.rs?ref=19a6fabad8e43a81617182eba24fb80e33da8e52", "patch": "@@ -102,8 +102,10 @@ impl Visitor<()> for EffectCheckVisitor {\n     fn visit_block(&mut self, block:&Block, _:()) {\n \n             let old_unsafe_context = self.context.unsafe_context;\n-            if block.rules == ast::UnsafeBlock &&\n-                    self.context.unsafe_context == SafeContext {\n+            let is_unsafe = match block.rules {\n+                ast::UnsafeBlock(*) => true, ast::DefaultBlock => false\n+            };\n+            if is_unsafe && self.context.unsafe_context == SafeContext {\n                 self.context.unsafe_context = UnsafeBlock(block.id)\n             }\n "}, {"sha": "a4b64f5a1d84d1ea74e61ffc41f3db80dd352f67", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=19a6fabad8e43a81617182eba24fb80e33da8e52", "patch": "@@ -1131,7 +1131,9 @@ impl Visitor<@mut Context> for UnusedUnsafeLintVisitor {\n     fn visit_expr(&mut self, e:@ast::Expr, cx:@mut Context) {\n \n             match e.node {\n-                ast::ExprBlock(ref blk) if blk.rules == ast::UnsafeBlock => {\n+                // Don't warn about generated blocks, that'll just pollute the\n+                // output.\n+                ast::ExprBlock(ref blk) if blk.rules == ast::UnsafeBlock(false) => {\n                     if !cx.tcx.used_unsafe.contains(&blk.id) {\n                         cx.span_lint(unused_unsafe, blk.span,\n                                      \"unnecessary `unsafe` block\");"}, {"sha": "0c0326e9317e788e77cb1e48ec7c979c7c898d79", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=19a6fabad8e43a81617182eba24fb80e33da8e52", "patch": "@@ -200,7 +200,7 @@ impl PurityState {\n \n             purity => {\n                 let (purity, def) = match blk.rules {\n-                    ast::UnsafeBlock => (ast::unsafe_fn, blk.id),\n+                    ast::UnsafeBlock(*) => (ast::unsafe_fn, blk.id),\n                     ast::DefaultBlock => (purity, self.def),\n                 };\n                 PurityState{ def: def,"}, {"sha": "63a6e936550781e9afa64c5ab4918019eac723c9", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=19a6fabad8e43a81617182eba24fb80e33da8e52", "patch": "@@ -479,7 +479,7 @@ pub struct Field {\n #[deriving(Clone, Eq, Encodable, Decodable, IterBytes)]\n pub enum BlockCheckMode {\n     DefaultBlock,\n-    UnsafeBlock,\n+    UnsafeBlock(/* generated internally */ bool),\n }\n \n #[deriving(Clone, Eq, Encodable, Decodable,IterBytes)]"}, {"sha": "b0bcc91f9627b56f05aca804db1475776f5fde55", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=19a6fabad8e43a81617182eba24fb80e33da8e52", "patch": "@@ -1792,7 +1792,7 @@ impl Parser {\n         } else if self.eat_keyword(keywords::Match) {\n             return self.parse_match_expr();\n         } else if self.eat_keyword(keywords::Unsafe) {\n-            return self.parse_block_expr(lo, UnsafeBlock);\n+            return self.parse_block_expr(lo, UnsafeBlock(false));\n         } else if *self.token == token::LBRACKET {\n             self.bump();\n             let mutbl = self.parse_mutability();"}, {"sha": "9b9b157c9d85ba3983ae8991d8dabb31481e7712", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a6fabad8e43a81617182eba24fb80e33da8e52/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=19a6fabad8e43a81617182eba24fb80e33da8e52", "patch": "@@ -951,7 +951,7 @@ pub fn print_possibly_embedded_block_(s: @ps,\n                                       attrs: &[ast::Attribute],\n                                       close_box: bool) {\n     match blk.rules {\n-      ast::UnsafeBlock => word_space(s, \"unsafe\"),\n+      ast::UnsafeBlock(*) => word_space(s, \"unsafe\"),\n       ast::DefaultBlock => ()\n     }\n     maybe_print_comment(s, blk.span.lo);"}]}