{"sha": "7ead6bed48a0877a9752cfa2022351cec1773533", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYWQ2YmVkNDhhMDg3N2E5NzUyY2ZhMjAyMjM1MWNlYzE3NzM1MzM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-05-06T13:52:04Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-06-22T14:25:11Z"}, "message": "Rename and move ty_param_substs_and_ty", "tree": {"sha": "5e87634d99c652edfbb075aa3f2cfe57b94c744f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e87634d99c652edfbb075aa3f2cfe57b94c744f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ead6bed48a0877a9752cfa2022351cec1773533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ead6bed48a0877a9752cfa2022351cec1773533", "html_url": "https://github.com/rust-lang/rust/commit/7ead6bed48a0877a9752cfa2022351cec1773533", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ead6bed48a0877a9752cfa2022351cec1773533/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c39962d325c09849e9cbb1828f85028f29fcea3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c39962d325c09849e9cbb1828f85028f29fcea3", "html_url": "https://github.com/rust-lang/rust/commit/4c39962d325c09849e9cbb1828f85028f29fcea3"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "588ae76ba3bd4c1989427a3953fbfbfa888dc02f", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=7ead6bed48a0877a9752cfa2022351cec1773533", "patch": "@@ -1054,11 +1054,6 @@ pub struct ItemSubsts {\n     pub substs: Substs,\n }\n \n-pub struct ty_param_substs_and_ty {\n-    pub substs: Substs,\n-    pub ty: ty::t\n-}\n-\n pub type type_cache = RefCell<DefIdMap<ty_param_bounds_and_ty>>;\n \n pub type node_type_table = RefCell<HashMap<uint,t>>;"}, {"sha": "e9ee4b17abbe6103797b030172278613f180f67b", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=7ead6bed48a0877a9752cfa2022351cec1773533", "patch": "@@ -54,9 +54,10 @@ use middle::def;\n use middle::lang_items::FnMutTraitLangItem;\n use rl = middle::resolve_lifetime;\n use middle::subst::{Subst, Substs};\n-use middle::subst;\n-use middle::ty::ty_param_substs_and_ty;\n use middle::ty;\n+use middle::typeck::TypeAndSubsts;\n+use middle::typeck::rscope;\n+use middle::typeck::rscope::{RegionScope};\n use middle::typeck::lookup_def_tcx;\n use middle::typeck::rscope::RegionScope;\n use middle::typeck::rscope;\n@@ -289,7 +290,7 @@ pub fn ast_path_to_ty<AC:AstConv,RS:RegionScope>(\n         rscope: &RS,\n         did: ast::DefId,\n         path: &ast::Path)\n-     -> ty_param_substs_and_ty\n+     -> TypeAndSubsts\n {\n     let tcx = this.tcx();\n     let ty::ty_param_bounds_and_ty {\n@@ -299,7 +300,7 @@ pub fn ast_path_to_ty<AC:AstConv,RS:RegionScope>(\n \n     let substs = ast_path_substs(this, rscope, &generics, None, path);\n     let ty = decl_ty.subst(tcx, &substs);\n-    ty_param_substs_and_ty { substs: substs, ty: ty }\n+    TypeAndSubsts { substs: substs, ty: ty }\n }\n \n pub static NO_REGIONS: uint = 1;"}, {"sha": "4270ff1e7952d450967f652e4d4f29f616789059", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=7ead6bed48a0877a9752cfa2022351cec1773533", "patch": "@@ -93,6 +93,7 @@ use middle::typeck::{MethodOrigin, MethodParam};\n use middle::typeck::{MethodStatic, MethodObject};\n use middle::typeck::{param_index};\n use middle::typeck::check::regionmanip::replace_late_bound_regions_in_fn_sig;\n+use middle::typeck::TypeAndSubsts;\n use util::common::indenter;\n use util::ppaux;\n use util::ppaux::Repr;\n@@ -688,7 +689,7 @@ impl<'a> LookupContext<'a> {\n         // variables for each parameter:\n         let span = self.self_expr.map_or(self.span, |e| e.span);\n         let vcx = self.fcx.vtable_context();\n-        let ty::ty_param_substs_and_ty {\n+        let TypeAndSubsts {\n             substs: impl_substs,\n             ty: impl_ty\n         } = impl_self_ty(&vcx, span, impl_did);"}, {"sha": "1bb01be36da96ab89d9427d0c50bc092c42af26e", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=7ead6bed48a0877a9752cfa2022351cec1773533", "patch": "@@ -85,7 +85,7 @@ use middle::pat_util;\n use middle::subst;\n use middle::subst::{Subst, Substs, VecPerParamSpace, ParamSpace};\n use middle::ty::{FnSig, VariantInfo};\n-use middle::ty::{ty_param_bounds_and_ty, ty_param_substs_and_ty};\n+use middle::ty::{ty_param_bounds_and_ty};\n use middle::ty::{ParamTy, Disr, ExprTyProvider};\n use middle::ty;\n use middle::ty_fold::TypeFolder;\n@@ -109,6 +109,7 @@ use middle::typeck::{lookup_def_ccx};\n use middle::typeck::no_params;\n use middle::typeck::{require_same_types, vtable_map};\n use middle::typeck::{MethodCall, MethodMap};\n+use middle::typeck::{TypeAndSubsts};\n use middle::lang_items::TypeIdLangItem;\n use util::common::{block_query, indenter, loop_query};\n use util::ppaux;\n@@ -1791,7 +1792,7 @@ fn check_expr_with_lvalue_pref(fcx: &FnCtxt, expr: &ast::Expr,\n pub fn impl_self_ty(vcx: &VtableContext,\n                     span: Span, // (potential) receiver for this impl\n                     did: ast::DefId)\n-                 -> ty_param_substs_and_ty {\n+                    -> TypeAndSubsts {\n     let tcx = vcx.tcx();\n \n     let ity = ty::lookup_item_type(tcx, did);\n@@ -1805,7 +1806,7 @@ pub fn impl_self_ty(vcx: &VtableContext,\n     let substs = subst::Substs::new_type(tps, rps);\n     let substd_ty = raw_ty.subst(tcx, &substs);\n \n-    ty_param_substs_and_ty { substs: substs, ty: substd_ty }\n+    TypeAndSubsts { substs: substs, ty: substd_ty }\n }\n \n // Only for fields! Returns <none> for methods>"}, {"sha": "7e118291f345dd297aeb6d7bd8298f10359cafa9", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=7ead6bed48a0877a9752cfa2022351cec1773533", "patch": "@@ -23,6 +23,7 @@ use middle::typeck::{vtable_origin, vtable_res, vtable_param_res};\n use middle::typeck::{vtable_static, vtable_param, vtable_error};\n use middle::typeck::{param_index};\n use middle::typeck::MethodCall;\n+use middle::typeck::TypeAndSubsts;\n use middle::subst;\n use middle::subst::{Subst, VecPerParamSpace};\n use util::common::indenter;\n@@ -353,7 +354,7 @@ fn search_for_vtable(vcx: &VtableContext,\n         // FIXME: document a bit more what this means\n         //\n         // FIXME(#5781) this should be mk_eqty not mk_subty\n-        let ty::ty_param_substs_and_ty {\n+        let TypeAndSubsts {\n             substs: substs,\n             ty: for_ty\n         } = impl_self_ty(vcx, span, impl_did);"}, {"sha": "76fccf8cc9729541403d12d6256e10109b024377", "filename": "src/librustc/middle/typeck/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ead6bed48a0877a9752cfa2022351cec1773533/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs?ref=7ead6bed48a0877a9752cfa2022351cec1773533", "patch": "@@ -176,6 +176,11 @@ pub enum ExprAdjustment {\n     AutoObject\n }\n \n+pub struct TypeAndSubsts {\n+    pub substs: subst::Substs,\n+    pub ty: ty::t,\n+}\n+\n impl MethodCall {\n     pub fn expr(id: ast::NodeId) -> MethodCall {\n         MethodCall {"}]}