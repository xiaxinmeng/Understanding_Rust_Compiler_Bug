{"sha": "2198faeee2a1e3abf30fa71a032aa76c2545c4e3", "node_id": "C_kwDOAAsO6NoAKDIxOThmYWVlZTJhMWUzYWJmMzBmYTcxYTAzMmFhNzZjMjU0NWM0ZTM", "commit": {"author": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2023-05-08T20:38:54Z"}, "committer": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2023-05-10T06:54:56Z"}, "message": "Make `NonUseContext::AscribeUserTy` carry `ty::Variance`", "tree": {"sha": "7b3237c1cc7b94b03f0597674e8beb07cf45e7e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b3237c1cc7b94b03f0597674e8beb07cf45e7e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2198faeee2a1e3abf30fa71a032aa76c2545c4e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2198faeee2a1e3abf30fa71a032aa76c2545c4e3", "html_url": "https://github.com/rust-lang/rust/commit/2198faeee2a1e3abf30fa71a032aa76c2545c4e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/comments", "author": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0111af531178e48375f14f838d7a2298524067c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0111af531178e48375f14f838d7a2298524067c", "html_url": "https://github.com/rust-lang/rust/commit/a0111af531178e48375f14f838d7a2298524067c"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b775739fed2ae689a8027ddf02581d294fd9cf0a", "filename": "compiler/rustc_borrowck/src/def_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs?ref=2198faeee2a1e3abf30fa71a032aa76c2545c4e3", "patch": "@@ -55,7 +55,7 @@ pub fn categorize(context: PlaceContext) -> Option<DefUse> {\n         // `PlaceMention` and `AscribeUserType` both evaluate the place, which must not\n         // contain dangling references.\n         PlaceContext::NonMutatingUse(NonMutatingUseContext::PlaceMention) |\n-        PlaceContext::NonUse(NonUseContext::AscribeUserTy) |\n+        PlaceContext::NonUse(NonUseContext::AscribeUserTy(_)) |\n \n         PlaceContext::MutatingUse(MutatingUseContext::AddressOf) |\n         PlaceContext::NonMutatingUse(NonMutatingUseContext::AddressOf) |"}, {"sha": "33b24b68f7cfc5d59bed289afaf8cac199277ac6", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=2198faeee2a1e3abf30fa71a032aa76c2545c4e3", "patch": "@@ -777,7 +777,7 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n                 Inspect | Copy | Move | PlaceMention | SharedBorrow | ShallowBorrow | UniqueBorrow\n                 | AddressOf | Projection,\n             ) => ty::Covariant,\n-            PlaceContext::NonUse(AscribeUserTy) => ty::Covariant,\n+            PlaceContext::NonUse(AscribeUserTy(variance)) => variance,\n         }\n     }\n "}, {"sha": "4b7014e31090b4c59946b8898446bf5067958177", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=2198faeee2a1e3abf30fa71a032aa76c2545c4e3", "patch": "@@ -64,7 +64,7 @@\n \n use crate::mir::*;\n use crate::ty::subst::SubstsRef;\n-use crate::ty::{CanonicalUserTypeAnnotation, Ty};\n+use crate::ty::{self, CanonicalUserTypeAnnotation, Ty};\n use rustc_span::Span;\n \n macro_rules! make_mir_visitor {\n@@ -782,12 +782,12 @@ macro_rules! make_mir_visitor {\n \n             fn super_ascribe_user_ty(&mut self,\n                                      place: & $($mutability)? Place<'tcx>,\n-                                     _variance: $(& $mutability)? ty::Variance,\n+                                     variance: $(& $mutability)? ty::Variance,\n                                      user_ty: & $($mutability)? UserTypeProjection,\n                                      location: Location) {\n                 self.visit_place(\n                     place,\n-                    PlaceContext::NonUse(NonUseContext::AscribeUserTy),\n+                    PlaceContext::NonUse(NonUseContext::AscribeUserTy($(* &$mutability *)? variance)),\n                     location\n                 );\n                 self.visit_user_type_projection(user_ty);\n@@ -1320,7 +1320,7 @@ pub enum NonUseContext {\n     /// Ending a storage live range.\n     StorageDead,\n     /// User type annotation assertions for NLL.\n-    AscribeUserTy,\n+    AscribeUserTy(ty::Variance),\n     /// The data of a user variable, for debug info.\n     VarDebugInfo,\n }"}, {"sha": "da043ba691c646bd53b0cf0756a384e6f2fa1216", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2198faeee2a1e3abf30fa71a032aa76c2545c4e3/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=2198faeee2a1e3abf30fa71a032aa76c2545c4e3", "patch": "@@ -640,7 +640,7 @@ impl UnifyKey for FloatVid {\n     }\n }\n \n-#[derive(Copy, Clone, PartialEq, Decodable, Encodable, Hash, HashStable_Generic)]\n+#[derive(Copy, Clone, PartialEq, Eq, Decodable, Encodable, Hash, HashStable_Generic)]\n #[rustc_pass_by_value]\n pub enum Variance {\n     Covariant,     // T<A> <: T<B> iff A <: B -- e.g., function return type"}]}