{"sha": "cf318b1f6feef3dc7115bb767d180cd9308fc052", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMzE4YjFmNmZlZWYzZGM3MTE1YmI3NjdkMTgwY2Q5MzA4ZmMwNTI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-08-02T11:09:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-02T11:09:04Z"}, "message": "Merge pull request #278 from solson/unions\n\nProcess untagged unions", "tree": {"sha": "647ca7edcefc3aa33dd84a4badf0c24ce12530ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/647ca7edcefc3aa33dd84a4badf0c24ce12530ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf318b1f6feef3dc7115bb767d180cd9308fc052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf318b1f6feef3dc7115bb767d180cd9308fc052", "html_url": "https://github.com/rust-lang/rust/commit/cf318b1f6feef3dc7115bb767d180cd9308fc052", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf318b1f6feef3dc7115bb767d180cd9308fc052/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7700bd0c540989e56268a4b5b72afa5086040517", "url": "https://api.github.com/repos/rust-lang/rust/commits/7700bd0c540989e56268a4b5b72afa5086040517", "html_url": "https://github.com/rust-lang/rust/commit/7700bd0c540989e56268a4b5b72afa5086040517"}, {"sha": "f8c61da0704f86726139197b3d34381ac3e1334f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c61da0704f86726139197b3d34381ac3e1334f", "html_url": "https://github.com/rust-lang/rust/commit/f8c61da0704f86726139197b3d34381ac3e1334f"}], "stats": {"total": 174, "additions": 101, "deletions": 73}, "files": [{"sha": "4856f1aad5e8404f58d2d064337e7f8f042311dc", "filename": ".travis.yml", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cf318b1f6feef3dc7115bb767d180cd9308fc052/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/cf318b1f6feef3dc7115bb767d180cd9308fc052/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=cf318b1f6feef3dc7115bb767d180cd9308fc052", "patch": "@@ -27,6 +27,11 @@ script:\n - |\n   # and run all tests with full mir\n   MIRI_SYSROOT=~/.xargo/HOST cargo test\n+- |\n+  # test that the rustc_tests binary compiles\n+  cd rustc_tests &&\n+  cargo build &&\n+  cd ..\n notifications:\n   email:\n     on_success: never"}, {"sha": "bfe450c60887149a45f9280eae20d0db6920e029", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf318b1f6feef3dc7115bb767d180cd9308fc052/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cf318b1f6feef3dc7115bb767d180cd9308fc052/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=cf318b1f6feef3dc7115bb767d180cd9308fc052", "patch": "@@ -34,4 +34,4 @@ rustc_miri = { path = \"src/librustc_mir\" }\n compiletest_rs = \"0.2.6\"\n \n [workspace]\n-exclude = [\"xargo\", \"cargo-miri-test\"]\n+exclude = [\"xargo\", \"cargo-miri-test\", \"rustc_tests\"]"}, {"sha": "77aebb9725c693e6b5e96b144c1de19115f6937c", "filename": "miri/fn_call.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf318b1f6feef3dc7115bb767d180cd9308fc052/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf318b1f6feef3dc7115bb767d180cd9308fc052/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=cf318b1f6feef3dc7115bb767d180cd9308fc052", "patch": "@@ -126,7 +126,13 @@ impl<'a, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'tcx, super::Evaluator>\n             }\n \n             \"syscall\" => {\n+                // TODO: read `syscall` ids like `sysconf` ids and\n+                // figure out some way to actually process some of them\n+                //\n+                // libc::syscall(NR_GETRANDOM, buf.as_mut_ptr(), buf.len(), GRND_NONBLOCK)\n+                // is called if a `HashMap` is created the regular way.\n                 match self.value_to_primval(args[0], usize)?.to_u64()? {\n+                    318 |\n                     511 => return Err(EvalError::Unimplemented(\"miri does not support random number generators\".to_owned())),\n                     id => return Err(EvalError::Unimplemented(format!(\"miri does not support syscall id {}\", id))),\n                 }"}, {"sha": "2b6e311bf1b2a7a57ff2528fc945b76d337936bc", "filename": "rustc_tests/Cargo.lock", "status": "modified", "additions": 59, "deletions": 63, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/cf318b1f6feef3dc7115bb767d180cd9308fc052/rustc_tests%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/cf318b1f6feef3dc7115bb767d180cd9308fc052/rustc_tests%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tests%2FCargo.lock?ref=cf318b1f6feef3dc7115bb767d180cd9308fc052", "patch": "@@ -7,24 +7,24 @@ dependencies = [\n \n [[package]]\n name = \"aho-corasick\"\n-version = \"0.5.3\"\n+version = \"0.6.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"memchr 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"memchr 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"byteorder\"\n version = \"1.1.0\"\n-source = \"git+https://github.com/BurntSushi/byteorder#88f0b9851e9824d54248b862b20fe28415a30ec0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"cargo_metadata\"\n version = \"0.2.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -35,35 +35,26 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"env_logger\"\n-version = \"0.3.5\"\n+version = \"0.4.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex 0.1.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"itoa\"\n version = \"0.3.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"kernel32-sys\"\n-version = \"0.2.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"lazy_static\"\n version = \"0.2.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.26\"\n+version = \"0.2.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -81,21 +72,22 @@ dependencies = [\n \n [[package]]\n name = \"memchr\"\n-version = \"0.1.11\"\n+version = \"1.0.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.28 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"miri\"\n version = \"0.1.0\"\n dependencies = [\n- \"byteorder 1.1.0 (git+https://github.com/BurntSushi/byteorder)\",\n+ \"byteorder 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cargo_metadata 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log_settings 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc_miri 0.1.0\",\n ]\n \n [[package]]\n@@ -110,29 +102,40 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"regex\"\n-version = \"0.1.80\"\n+version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"aho-corasick 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"memchr 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex-syntax 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"thread_local 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"utf8-ranges 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"aho-corasick 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"memchr 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex-syntax 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"thread_local 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"utf8-ranges 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"regex-syntax\"\n-version = \"0.3.9\"\n+version = \"0.4.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"rustc_miri\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"byteorder 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log_settings 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"serde\"\n-version = \"1.0.10\"\n+version = \"1.0.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.10\"\n+version = \"1.0.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -157,7 +160,7 @@ dependencies = [\n  \"dtoa 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itoa 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -178,21 +181,13 @@ dependencies = [\n  \"unicode-xid 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"thread-id\"\n-version = \"2.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"thread_local\"\n-version = \"0.2.7\"\n+version = \"0.3.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"thread-id 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -201,46 +196,47 @@ version = \"0.0.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n-name = \"utf8-ranges\"\n-version = \"0.1.3\"\n+name = \"unreachable\"\n+version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n \n [[package]]\n-name = \"winapi\"\n-version = \"0.2.8\"\n+name = \"utf8-ranges\"\n+version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n-name = \"winapi-build\"\n-version = \"0.1.1\"\n+name = \"void\"\n+version = \"1.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [metadata]\n-\"checksum aho-corasick 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ca972c2ea5f742bfce5687b9aef75506a764f61d37f8f649047846a9686ddb66\"\n-\"checksum byteorder 1.1.0 (git+https://github.com/BurntSushi/byteorder)\" = \"<none>\"\n+\"checksum aho-corasick 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"500909c4f87a9e52355b26626d890833e9e1d53ac566db76c36faa984b889699\"\n+\"checksum byteorder 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff81738b726f5d099632ceaffe7fb65b90212e8dce59d518729e7e8634032d3d\"\n \"checksum cargo_metadata 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"be1057b8462184f634c3a208ee35b0f935cfd94b694b26deadccd98732088d7b\"\n \"checksum dtoa 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"80c8b71fd71146990a9742fc06dcbbde19161a267e0ad4e572c35162f4578c90\"\n-\"checksum env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15abd780e45b3ea4f76b4e9a26ff4843258dd8a3eed2775a0e7368c2e7936c2f\"\n+\"checksum env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3ddf21e73e016298f5cb37d6ef8e8da8e39f91f9ec8b0df44b7deb16a9f8cd5b\"\n \"checksum itoa 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eb2f404fbc66fd9aac13e998248505e7ecb2ad8e44ab6388684c5fb11c6c251c\"\n-\"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n \"checksum lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3b37545ab726dd833ec6420aaba8231c5b320814b9029ad585555d2a03e94fbf\"\n-\"checksum libc 0.2.26 (registry+https://github.com/rust-lang/crates.io-index)\" = \"30885bcb161cf67054244d10d4a7f4835ffd58773bc72e07d35fecf472295503\"\n+\"checksum libc 0.2.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb7b49972ee23d8aa1026c365a5b440ba08e35075f18c459980c7395c221ec48\"\n \"checksum log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"880f77541efa6e5cc74e76910c9884d9859683118839d6a1dc3b11e63512565b\"\n \"checksum log_settings 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3d382732ea0fbc09790c4899db3255bdea0fc78b54bf234bd18a63bb603915b6\"\n-\"checksum memchr 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d8b629fb514376c675b98c1421e80b151d3817ac42d7c667717d282761418d20\"\n+\"checksum memchr 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1dbccc0e46f1ea47b9f17e6d67c5a96bd27030519c519c9c91327e31275a47b4\"\n \"checksum num-traits 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"99843c856d68d8b4313b03a17e33c4bb42ae8f6610ea81b28abe076ac721b9b0\"\n \"checksum quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6e920b65c65f10b2ae65c831a81a073a89edd28c7cce89475bff467ab4167a\"\n-\"checksum regex 0.1.80 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4fd4ace6a8cf7860714a2c2280d6c1f7e6a413486c13298bbc86fd3da019402f\"\n-\"checksum regex-syntax 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f9ec002c35e86791825ed294b50008eea9ddfc8def4420124fbc6b08db834957\"\n-\"checksum serde 1.0.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"433d7d9f8530d5a939ad5e0e72a6243d2e42a24804f70bf592c679363dcacb2f\"\n-\"checksum serde_derive 1.0.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b707cf0d4cab852084f573058def08879bb467fda89d99052485e7d00edd624\"\n+\"checksum regex 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1731164734096285ec2a5ec7fea5248ae2f5485b3feeb0115af4fda2183b2d1b\"\n+\"checksum regex-syntax 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ad890a5eef7953f55427c50575c680c42841653abd2b028b68cd223d157f62db\"\n+\"checksum serde 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f7726f29ddf9731b17ff113c461e362c381d9d69433f79de4f3dd572488823e9\"\n+\"checksum serde_derive 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf823e706be268e73e7747b147aa31c8f633ab4ba31f115efb57e5047c3a76dd\"\n \"checksum serde_derive_internals 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"37aee4e0da52d801acfbc0cc219eb1eda7142112339726e427926a6f6ee65d3a\"\n \"checksum serde_json 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"48b04779552e92037212c3615370f6bd57a40ebba7f20e554ff9f55e41a69a7b\"\n \"checksum syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d3b891b9015c88c576343b9b3e41c2c11a51c219ef067b264bd9c8aa9b441dad\"\n \"checksum synom 0.11.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a393066ed9010ebaed60b9eafa373d4b1baac186dd7e008555b0f702b51945b6\"\n-\"checksum thread-id 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a9539db560102d1cef46b8b78ce737ff0bb64e7e18d35b2a5688f7d097d0ff03\"\n-\"checksum thread_local 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8576dbbfcaef9641452d5cf0df9b0e7eeab7694956dd33bb61515fb8f18cfdd5\"\n+\"checksum thread_local 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1697c4b57aeeb7a536b647165a2825faddffb1d3bad386d507709bd51a90bb14\"\n \"checksum unicode-xid 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c1f860d7d29cf02cb2f3f359fd35991af3d30bac52c57d265a3c461074cb4dc\"\n-\"checksum utf8-ranges 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a1ca13c08c41c9c3e04224ed9ff80461d97e121589ff27c753a16cb10830ae0f\"\n-\"checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n-\"checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n+\"checksum unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\n+\"checksum utf8-ranges 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"662fab6525a98beff2921d7f61a39e7d59e0b425ebc7d0d9e66d316e55124122\"\n+\"checksum void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\""}, {"sha": "736f0629768f28cee37b812a3071ed2dedf7befa", "filename": "rustc_tests/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf318b1f6feef3dc7115bb767d180cd9308fc052/rustc_tests%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cf318b1f6feef3dc7115bb767d180cd9308fc052/rustc_tests%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tests%2FCargo.toml?ref=cf318b1f6feef3dc7115bb767d180cd9308fc052", "patch": "@@ -4,4 +4,4 @@ version = \"0.1.0\"\n authors = [\"Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de>\"]\n \n [dependencies]\n-miri = { path = \"../miri\" }\n+miri = { path = \"..\" }"}, {"sha": "4cff381b332112731ef8318a981112709f8a7015", "filename": "rustc_tests/src/main.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf318b1f6feef3dc7115bb767d180cd9308fc052/rustc_tests%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf318b1f6feef3dc7115bb767d180cd9308fc052/rustc_tests%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tests%2Fsrc%2Fmain.rs?ref=cf318b1f6feef3dc7115bb767d180cd9308fc052", "patch": "@@ -149,11 +149,7 @@ fn main() {\n             args.push(Path::new(&std::env::var(\"HOME\").unwrap()).join(\".xargo\").join(\"HOST\").display().to_string());\n         }\n \n-        // we run the optimization passes inside miri\n-        // if we ran them twice we'd get funny failures due to borrowck ElaborateDrops only working on\n-        // unoptimized MIR\n-        // FIXME: add an after-mir-passes hook to rustc driver\n-        args.push(\"-Zmir-opt-level=0\".to_owned());\n+        args.push(\"-Zmir-opt-level=3\".to_owned());\n         // for auxilary builds in unit tests\n         args.push(\"-Zalways-encode-mir\".to_owned());\n \n@@ -218,7 +214,7 @@ fn main() {\n             }\n         }\n     }\n-    let stderr = std::io::stderr();:{MetaItemKind, NestedMetaItemKind, self};\n+    let stderr = std::io::stderr();\n     let mut stderr = stderr.lock();\n     writeln!(stderr, \"{} success, {} no mir, {} crate not found, {} failed, \\\n                         {} C fn, {} ABI, {} unsupported, {} intrinsic\","}, {"sha": "86e5d855f44a90b41b2c36c97d5f30ea461afa61", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf318b1f6feef3dc7115bb767d180cd9308fc052/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf318b1f6feef3dc7115bb767d180cd9308fc052/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=cf318b1f6feef3dc7115bb767d180cd9308fc052", "patch": "@@ -955,6 +955,8 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n                 let variant_def = adt_def.struct_variant();\n                 use rustc::ty::layout::Layout::*;\n                 match *self.type_layout(ty)? {\n+                    UntaggedUnion { ref variants } => \n+                        Ok(TyAndPacked { ty: variant_def.fields[field_index].ty(self.tcx, substs), packed: variants.packed }),\n                     Univariant { ref variant, .. } =>\n                         Ok(TyAndPacked { ty: variant_def.fields[field_index].ty(self.tcx, substs), packed: variant.packed }),\n                     _ => Err(EvalError::Unimplemented(format!(\"get_field_ty can't handle struct type: {:?}, {:?}\", ty, ty.sty))),\n@@ -988,8 +990,9 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n             StructWrappedNullablePointer { ref nonnull, .. } => {\n                 Ok(nonnull.offsets[field_index])\n             }\n+            UntaggedUnion { .. } => Ok(Size::from_bytes(0)),\n             _ => {\n-                let msg = format!(\"can't handle type: {:?}, with layout: {:?}\", ty, layout);\n+                let msg = format!(\"get_field_offset: can't handle type: {:?}, with layout: {:?}\", ty, layout);\n                 Err(EvalError::Unimplemented(msg))\n             }\n         }\n@@ -1006,8 +1009,9 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n             Vector { count , .. } |\n             Array { count, .. } => Ok(count),\n             Scalar { .. } => Ok(0),\n+            UntaggedUnion { .. } => Ok(1),\n             _ => {\n-                let msg = format!(\"can't handle type: {:?}, with layout: {:?}\", ty, layout);\n+                let msg = format!(\"get_field_count: can't handle type: {:?}, with layout: {:?}\", ty, layout);\n                 Err(EvalError::Unimplemented(msg))\n             }\n         }"}, {"sha": "d332f7be8330f61ed16ea0969378da9650f2b93e", "filename": "tests/run-pass-fullmir/unsized-tuple-impls.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cf318b1f6feef3dc7115bb767d180cd9308fc052/tests%2Frun-pass-fullmir%2Funsized-tuple-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf318b1f6feef3dc7115bb767d180cd9308fc052/tests%2Frun-pass-fullmir%2Funsized-tuple-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Funsized-tuple-impls.rs?ref=cf318b1f6feef3dc7115bb767d180cd9308fc052", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unsized_tuple_coercion)]\n+\n+fn main() {\n+    let x : &(i32, i32, [i32]) = &(0, 1, [2, 3]);\n+    let y : &(i32, i32, [i32]) = &(0, 1, [2, 3, 4]);\n+    let mut a = [y, x];\n+    a.sort();\n+    assert_eq!(a, [x, y]);\n+\n+    assert_eq!(&format!(\"{:?}\", a), \"[(0, 1, [2, 3]), (0, 1, [2, 3, 4])]\");\n+}"}]}