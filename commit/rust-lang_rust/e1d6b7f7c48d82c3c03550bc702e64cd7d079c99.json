{"sha": "e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZDZiN2Y3YzQ4ZDgyYzNjMDM1NTBiYzcwMmU2NGNkN2QwNzljOTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-11T12:50:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-11T12:51:41Z"}, "message": "Use dedicated semantic highlight tag for parameters\n\ncloses #5106", "tree": {"sha": "5b39f39acd93780faa5809dda2b11cec106ad182", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b39f39acd93780faa5809dda2b11cec106ad182"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "html_url": "https://github.com/rust-lang/rust/commit/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87ddcba05fe1a80e293565cd09a61c83adc6bc7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/87ddcba05fe1a80e293565cd09a61c83adc6bc7d", "html_url": "https://github.com/rust-lang/rust/commit/87ddcba05fe1a80e293565cd09a61c83adc6bc7d"}], "stats": {"total": 64, "additions": 44, "deletions": 20}, "files": [{"sha": "04fd335fe80172313cca34a76a1748742a8eb6b1", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -33,7 +33,10 @@ use hir_ty::{\n };\n use ra_db::{CrateId, Edition, FileId};\n use ra_prof::profile;\n-use ra_syntax::ast::{self, AttrsOwner, NameOwner};\n+use ra_syntax::{\n+    ast::{self, AttrsOwner, NameOwner},\n+    AstNode,\n+};\n use rustc_hash::FxHashSet;\n \n use crate::{\n@@ -955,6 +958,16 @@ pub struct Local {\n }\n \n impl Local {\n+    pub fn is_param(self, db: &dyn HirDatabase) -> bool {\n+        let src = self.source(db);\n+        match src.value {\n+            Either::Left(bind_pat) => {\n+                bind_pat.syntax().ancestors().any(|it| ast::Param::can_cast(it.kind()))\n+            }\n+            Either::Right(_self_param) => true,\n+        }\n+    }\n+\n     // FIXME: why is this an option? It shouldn't be?\n     pub fn name(self, db: &dyn HirDatabase) -> Option<Name> {\n         let body = db.body(self.parent.into());"}, {"sha": "5bb6f96422cbe58178a5061abc5005dffd8acf82", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -630,9 +630,10 @@ fn highlight_name(db: &RootDatabase, def: Definition) -> Highlight {\n         },\n         Definition::SelfType(_) => HighlightTag::SelfType,\n         Definition::TypeParam(_) => HighlightTag::TypeParam,\n-        // FIXME: distinguish between locals and parameters\n         Definition::Local(local) => {\n-            let mut h = Highlight::new(HighlightTag::Local);\n+            let tag =\n+                if local.is_param(db) { HighlightTag::ValueParam } else { HighlightTag::Local };\n+            let mut h = Highlight::new(tag);\n             if local.is_mut(db) || local.ty(db).is_mutable_reference() {\n                 h |= HighlightModifier::Mutable;\n             }"}, {"sha": "0be55bca985dea925b82e4227bd51f6448c353c7", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -83,14 +83,15 @@ pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padd\n .bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n .variable           { color: #DCDCCC; }\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n-.unresolved_reference { color: #FC5555; }\n .escape_sequence    { color: #94BFF3; }\n-\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n \";"}, {"sha": "719c6ed3cbfaf7699ab735570547cae53180d4b3", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -41,6 +41,7 @@ pub enum HighlightTag {\n     TypeAlias,\n     TypeParam,\n     Union,\n+    ValueParam,\n     Local,\n     UnresolvedReference,\n     FormatSpecifier,\n@@ -95,6 +96,7 @@ impl HighlightTag {\n             HighlightTag::TypeAlias => \"type_alias\",\n             HighlightTag::TypeParam => \"type_param\",\n             HighlightTag::Union => \"union\",\n+            HighlightTag::ValueParam => \"value_param\",\n             HighlightTag::Local => \"variable\",\n             HighlightTag::UnresolvedReference => \"unresolved_reference\",\n         }"}, {"sha": "a77fabb68d04afb6029bfa764f63299a3496dee1", "filename": "crates/ra_ide/test_data/highlight_doctest.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_doctest.html?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -24,15 +24,16 @@\n .bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n .variable           { color: #DCDCCC; }\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n-.unresolved_reference { color: #FC5555; }\n .escape_sequence    { color: #94BFF3; }\n-\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"comment documentation\">/// ```</span>\n <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> _ = </span><span class=\"string_literal injected\">\"early doctests should not go boom\"</span><span class=\"generic injected\">;</span>"}, {"sha": "e15234936c08aa70950b70e1185be88cd50920a0", "filename": "crates/ra_ide/test_data/highlight_injection.html", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_injection.html?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -24,17 +24,18 @@\n .bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n .variable           { color: #DCDCCC; }\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n-.unresolved_reference { color: #FC5555; }\n .escape_sequence    { color: #94BFF3; }\n-\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span>(<span class=\"variable declaration\">ra_fixture</span>: &<span class=\"builtin_type\">str</span>) {}\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span>(<span class=\"value_param declaration\">ra_fixture</span>: &<span class=\"builtin_type\">str</span>) {}\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span>() {\n     <span class=\"function\">fixture</span>(<span class=\"string_literal\">r#\"</span>"}, {"sha": "423813366108ce9426f9dc6970f4d9d8c385f68d", "filename": "crates/ra_ide/test_data/highlight_strings.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_strings.html?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -24,15 +24,16 @@\n .bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n .variable           { color: #DCDCCC; }\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n-.unresolved_reference { color: #FC5555; }\n .escape_sequence    { color: #94BFF3; }\n-\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"macro\">macro_rules!</span> <span class=\"macro declaration\">println</span> {\n     ($($arg:tt)*) =&gt; ({"}, {"sha": "7585fbb42654be46f68925454b8045d45a8b97c1", "filename": "crates/ra_ide/test_data/highlight_unsafe.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -24,15 +24,16 @@\n .bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n .variable           { color: #DCDCCC; }\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n-.unresolved_reference { color: #FC5555; }\n .escape_sequence    { color: #94BFF3; }\n-\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_fn</span>() {}\n "}, {"sha": "134743c72c8af4e2d9413964c191a5c297a9637d", "filename": "crates/ra_ide/test_data/highlighting.html", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -24,15 +24,16 @@\n .bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n .variable           { color: #DCDCCC; }\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n-.unresolved_reference { color: #FC5555; }\n .escape_sequence    { color: #94BFF3; }\n-\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"attribute\">#[</span><span class=\"function attribute\">derive</span><span class=\"attribute\">(Clone, Debug)]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span> {\n@@ -108,8 +109,8 @@\n <span class=\"keyword\">use</span> <span class=\"enum\">Option</span>::*;\n \n <span class=\"keyword\">impl</span>&lt;<span class=\"type_param declaration\">T</span>&gt; <span class=\"enum\">Option</span>&lt;<span class=\"type_param\">T</span>&gt; {\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span>&lt;<span class=\"type_param declaration\">U</span>&gt;(<span class=\"self_keyword\">self</span>, <span class=\"variable declaration\">other</span>: <span class=\"enum\">Option</span>&lt;<span class=\"type_param\">U</span>&gt;) -&gt; <span class=\"enum\">Option</span>&lt;(<span class=\"type_param\">T</span>, <span class=\"type_param\">U</span>)&gt; {\n-        <span class=\"keyword control\">match</span> <span class=\"variable\">other</span> {\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span>&lt;<span class=\"type_param declaration\">U</span>&gt;(<span class=\"self_keyword\">self</span>, <span class=\"value_param declaration\">other</span>: <span class=\"enum\">Option</span>&lt;<span class=\"type_param\">U</span>&gt;) -&gt; <span class=\"enum\">Option</span>&lt;(<span class=\"type_param\">T</span>, <span class=\"type_param\">U</span>)&gt; {\n+        <span class=\"keyword control\">match</span> <span class=\"value_param\">other</span> {\n             <span class=\"enum_variant\">None</span> =&gt; <span class=\"macro\">unimplemented!</span>(),\n             <span class=\"variable declaration\">Nope</span> =&gt; <span class=\"variable\">Nope</span>,\n         }"}, {"sha": "84a7686b2765e6a489b8c059d18c478dbdd7774e", "filename": "crates/ra_ide/test_data/rainbow_highlighting.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -24,15 +24,16 @@\n .bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n .variable           { color: #DCDCCC; }\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n-.unresolved_reference { color: #FC5555; }\n .escape_sequence    { color: #94BFF3; }\n-\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span>() {\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> = <span class=\"string_literal\">\"hello\"</span>;"}, {"sha": "f6d2f4fc4aee026eaebbd4ccb28920497176a15c", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d6b7f7c48d82c3c03550bc702e64cd7d079c99/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=e1d6b7f7c48d82c3c03550bc702e64cd7d079c99", "patch": "@@ -309,6 +309,7 @@ fn semantic_token_type_and_modifiers(\n         }\n         HighlightTag::EnumVariant => semantic_tokens::ENUM_MEMBER,\n         HighlightTag::Macro => lsp_types::SemanticTokenType::MACRO,\n+        HighlightTag::ValueParam => lsp_types::SemanticTokenType::PARAMETER,\n         HighlightTag::Local => lsp_types::SemanticTokenType::VARIABLE,\n         HighlightTag::TypeParam => lsp_types::SemanticTokenType::TYPE_PARAMETER,\n         HighlightTag::Lifetime => semantic_tokens::LIFETIME,"}]}