{"sha": "b4015b6aaa0dd80f5c85c7ed03e83d0d16042264", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MDE1YjZhYWEwZGQ4MGY1Yzg1YzdlZDAzZTgzZDBkMTYwNDIyNjQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-26T20:58:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-26T20:58:07Z"}, "message": "Merge #8995\n\n8995: fix: Create tasks for all workspaces r=matklad a=SomeoneToIgnore\n\nFollow-up of https://github.com/rust-analyzer/rust-analyzer/pull/8955#discussion_r637897170\r\n\r\nBefore: \r\n<img width=\"593\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/119575267-712b5300-bdbf-11eb-833c-f688f7a7dd0f.png\">\r\n\r\nAfter: \r\n<img width=\"643\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/119575273-74264380-bdbf-11eb-8283-a78bbcb7346e.png\">\r\n\r\nThis is the first time I've used multiple workspaces feature in VSCode, but so far looks like\r\n* opening detached files works\r\n* run and debug lens work\r\n* Rust Analyzer: Run action works\r\n* run task works and now shows tasks for all workspaces\r\n* there are no platform-specific changes involved\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "6e423f24d05092250af44cacf1cb1b881d471492", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e423f24d05092250af44cacf1cb1b881d471492"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrrZfCRBK7hj4Ov3rIwAA0lEIAEbiOK2ZZaqa3rr+dc1Tabfz\n+rYbcc5oh8nfiD12axpG2wawTxFAnzVYCCwRcLtLr9U4FUhkWqgzBIrKh3Cr5Ceu\nfSjSYKxB8YnpmGjOKFoIc8/B3ZhZLzOhmq1nmUdSNblmleYaMN10kKuB8qRJdFbD\ndV9XB2wcdzdE/iyrgeBKyOO6cAs6Rkdp5HcaedIgwZ9BypvBxOur5VFyYq9hywhV\nzOhGdUMev3B1JHUkVldVWZZENbt3j5W+XiK1s6AV5R3NQ97fudWhbAUOy1TtlAei\nTMaGarSzQQaJ0A6nY1tdD2U+xO+emGsRSDpHwb8soZsAvMewMAhLjaNBjKTLzyY=\n=2kRt\n-----END PGP SIGNATURE-----\n", "payload": "tree 6e423f24d05092250af44cacf1cb1b881d471492\nparent 666fc1cec10a41f88db56dfb339785eb1e7dd521\nparent a05163db1429bfb8cf30dbea4b1aa86a24258d49\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622062687 +0000\ncommitter GitHub <noreply@github.com> 1622062687 +0000\n\nMerge #8995\n\n8995: fix: Create tasks for all workspaces r=matklad a=SomeoneToIgnore\n\nFollow-up of https://github.com/rust-analyzer/rust-analyzer/pull/8955#discussion_r637897170\r\n\r\nBefore: \r\n<img width=\"593\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/119575267-712b5300-bdbf-11eb-833c-f688f7a7dd0f.png\">\r\n\r\nAfter: \r\n<img width=\"643\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/119575273-74264380-bdbf-11eb-8283-a78bbcb7346e.png\">\r\n\r\nThis is the first time I've used multiple workspaces feature in VSCode, but so far looks like\r\n* opening detached files works\r\n* run and debug lens work\r\n* Rust Analyzer: Run action works\r\n* run task works and now shows tasks for all workspaces\r\n* there are no platform-specific changes involved\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264", "html_url": "https://github.com/rust-lang/rust/commit/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "666fc1cec10a41f88db56dfb339785eb1e7dd521", "url": "https://api.github.com/repos/rust-lang/rust/commits/666fc1cec10a41f88db56dfb339785eb1e7dd521", "html_url": "https://github.com/rust-lang/rust/commit/666fc1cec10a41f88db56dfb339785eb1e7dd521"}, {"sha": "a05163db1429bfb8cf30dbea4b1aa86a24258d49", "url": "https://api.github.com/repos/rust-lang/rust/commits/a05163db1429bfb8cf30dbea4b1aa86a24258d49", "html_url": "https://github.com/rust-lang/rust/commit/a05163db1429bfb8cf30dbea4b1aa86a24258d49"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "f13ae07e148f33cbda21d19bfdaaad5b54b0cd13", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=b4015b6aaa0dd80f5c85c7ed03e83d0d16042264", "patch": "@@ -32,14 +32,9 @@ export function createClient(serverPath: string, workspace: Workspace, extraEnv:\n     const newEnv = Object.assign({}, process.env);\n     Object.assign(newEnv, extraEnv);\n \n-    let cwd = undefined;\n-    if (workspace.kind === \"Workspace Folder\") {\n-        cwd = workspace.folder.fsPath;\n-    };\n-\n     const run: lc.Executable = {\n         command: serverPath,\n-        options: { cwd, env: newEnv },\n+        options: { env: newEnv },\n     };\n     const serverOptions: lc.ServerOptions = {\n         run,"}, {"sha": "cf67dd8cff4227e61f947483cfddcdcf05c0f2af", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=b4015b6aaa0dd80f5c85c7ed03e83d0d16042264", "patch": "@@ -10,7 +10,6 @@ import { ServerStatusParams } from './lsp_ext';\n export type Workspace =\n     {\n         kind: 'Workspace Folder';\n-        folder: vscode.Uri;\n     }\n     | {\n         kind: 'Detached Files';"}, {"sha": "d26273246c9103fd5b09bddc06331d575132716c", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=b4015b6aaa0dd80f5c85c7ed03e83d0d16042264", "patch": "@@ -45,8 +45,7 @@ async function tryActivate(context: vscode.ExtensionContext) {\n         throw new Error(message);\n     });\n \n-    const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\n-    if (workspaceFolder === undefined) {\n+    if (vscode.workspace.workspaceFolders?.length === 0) {\n         const rustDocuments = vscode.workspace.textDocuments.filter(document => isRustDocument(document));\n         if (rustDocuments.length > 0) {\n             ctx = await Ctx.create(config, context, serverPath, { kind: 'Detached Files', files: rustDocuments });\n@@ -58,8 +57,8 @@ async function tryActivate(context: vscode.ExtensionContext) {\n         // registers its `onDidChangeDocument` handler before us.\n         //\n         // This a horribly, horribly wrong way to deal with this problem.\n-        ctx = await Ctx.create(config, context, serverPath, { kind: \"Workspace Folder\", folder: workspaceFolder.uri });\n-        ctx.pushCleanup(activateTaskProvider(workspaceFolder, ctx.config));\n+        ctx = await Ctx.create(config, context, serverPath, { kind: \"Workspace Folder\" });\n+        ctx.pushCleanup(activateTaskProvider(ctx.config));\n     }\n     await initCommonContext(context, ctx);\n "}, {"sha": "694ee1e41304e04d57e72499501e08e3054c5cfd", "filename": "editors/code/src/tasks.ts", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/editors%2Fcode%2Fsrc%2Ftasks.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b4015b6aaa0dd80f5c85c7ed03e83d0d16042264/editors%2Fcode%2Fsrc%2Ftasks.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftasks.ts?ref=b4015b6aaa0dd80f5c85c7ed03e83d0d16042264", "patch": "@@ -17,11 +17,9 @@ export interface CargoTaskDefinition extends vscode.TaskDefinition {\n }\n \n class CargoTaskProvider implements vscode.TaskProvider {\n-    private readonly target: vscode.WorkspaceFolder;\n     private readonly config: Config;\n \n-    constructor(target: vscode.WorkspaceFolder, config: Config) {\n-        this.target = target;\n+    constructor(config: Config) {\n         this.config = config;\n     }\n \n@@ -40,10 +38,12 @@ class CargoTaskProvider implements vscode.TaskProvider {\n         ];\n \n         const tasks: vscode.Task[] = [];\n-        for (const def of defs) {\n-            const vscodeTask = await buildCargoTask(this.target, { type: TASK_TYPE, command: def.command }, `cargo ${def.command}`, [def.command], this.config.cargoRunner);\n-            vscodeTask.group = def.group;\n-            tasks.push(vscodeTask);\n+        for (const workspaceTarget of vscode.workspace.workspaceFolders || []) {\n+            for (const def of defs) {\n+                const vscodeTask = await buildCargoTask(workspaceTarget, { type: TASK_TYPE, command: def.command }, `cargo ${def.command}`, [def.command], this.config.cargoRunner);\n+                vscodeTask.group = def.group;\n+                tasks.push(vscodeTask);\n+            }\n         }\n \n         return tasks;\n@@ -58,14 +58,19 @@ class CargoTaskProvider implements vscode.TaskProvider {\n \n         if (definition.type === TASK_TYPE && definition.command) {\n             const args = [definition.command].concat(definition.args ?? []);\n-\n-            return await buildCargoTask(this.target, definition, task.name, args, this.config.cargoRunner);\n+            if (isWorkspaceFolder(task.scope)) {\n+                return await buildCargoTask(task.scope, definition, task.name, args, this.config.cargoRunner);\n+            }\n         }\n \n         return undefined;\n     }\n }\n \n+function isWorkspaceFolder(scope?: any): scope is vscode.WorkspaceFolder {\n+    return (scope as vscode.WorkspaceFolder).name !== undefined;\n+}\n+\n export async function buildCargoTask(\n     target: vscode.WorkspaceFolder,\n     definition: CargoTaskDefinition,\n@@ -119,7 +124,7 @@ export async function buildCargoTask(\n     );\n }\n \n-export function activateTaskProvider(target: vscode.WorkspaceFolder, config: Config): vscode.Disposable {\n-    const provider = new CargoTaskProvider(target, config);\n+export function activateTaskProvider(config: Config): vscode.Disposable {\n+    const provider = new CargoTaskProvider(config);\n     return vscode.tasks.registerTaskProvider(TASK_TYPE, provider);\n }"}]}