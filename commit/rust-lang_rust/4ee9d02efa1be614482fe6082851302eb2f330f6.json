{"sha": "4ee9d02efa1be614482fe6082851302eb2f330f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZTlkMDJlZmExYmU2MTQ0ODJmZTYwODI4NTEzMDJlYjJmMzMwZjY=", "commit": {"author": {"name": "Jamie McClymont", "email": "jamie@kwiius.com", "date": "2019-08-19T02:18:05Z"}, "committer": {"name": "Jamie McClymont", "email": "jamie@kwiius.com", "date": "2019-08-19T02:20:38Z"}, "message": "Requested changes", "tree": {"sha": "597c2e6f6fa9b1e5879c493597564f3c3ff5e198", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/597c2e6f6fa9b1e5879c493597564f3c3ff5e198"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ee9d02efa1be614482fe6082851302eb2f330f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee9d02efa1be614482fe6082851302eb2f330f6", "html_url": "https://github.com/rust-lang/rust/commit/4ee9d02efa1be614482fe6082851302eb2f330f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ee9d02efa1be614482fe6082851302eb2f330f6/comments", "author": {"login": "JJJollyjim", "id": 691552, "node_id": "MDQ6VXNlcjY5MTU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/691552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JJJollyjim", "html_url": "https://github.com/JJJollyjim", "followers_url": "https://api.github.com/users/JJJollyjim/followers", "following_url": "https://api.github.com/users/JJJollyjim/following{/other_user}", "gists_url": "https://api.github.com/users/JJJollyjim/gists{/gist_id}", "starred_url": "https://api.github.com/users/JJJollyjim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JJJollyjim/subscriptions", "organizations_url": "https://api.github.com/users/JJJollyjim/orgs", "repos_url": "https://api.github.com/users/JJJollyjim/repos", "events_url": "https://api.github.com/users/JJJollyjim/events{/privacy}", "received_events_url": "https://api.github.com/users/JJJollyjim/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JJJollyjim", "id": 691552, "node_id": "MDQ6VXNlcjY5MTU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/691552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JJJollyjim", "html_url": "https://github.com/JJJollyjim", "followers_url": "https://api.github.com/users/JJJollyjim/followers", "following_url": "https://api.github.com/users/JJJollyjim/following{/other_user}", "gists_url": "https://api.github.com/users/JJJollyjim/gists{/gist_id}", "starred_url": "https://api.github.com/users/JJJollyjim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JJJollyjim/subscriptions", "organizations_url": "https://api.github.com/users/JJJollyjim/orgs", "repos_url": "https://api.github.com/users/JJJollyjim/repos", "events_url": "https://api.github.com/users/JJJollyjim/events{/privacy}", "received_events_url": "https://api.github.com/users/JJJollyjim/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "802a6d33dae32a116881990566bb1d5d7e62a9ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/802a6d33dae32a116881990566bb1d5d7e62a9ab", "html_url": "https://github.com/rust-lang/rust/commit/802a6d33dae32a116881990566bb1d5d7e62a9ab"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "c8ac26044ebc06cca21d01a1115da2e1eac22c94", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 11, "deletions": 19, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4ee9d02efa1be614482fe6082851302eb2f330f6/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee9d02efa1be614482fe6082851302eb2f330f6/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=4ee9d02efa1be614482fe6082851302eb2f330f6", "patch": "@@ -1,4 +1,6 @@\n-use crate::utils::{constants, snippet, snippet_opt, span_help_and_lint, span_lint, span_lint_and_then};\n+use crate::utils::{\n+    constants, snippet, snippet_opt, span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then,\n+};\n use if_chain::if_chain;\n use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n@@ -399,19 +401,14 @@ impl MiscEarlyLints {\n                 for (idx, ch) in src.chars().enumerate() {\n                     if ch == 'i' || ch == 'u' {\n                         if prev != '_' {\n-                            span_lint_and_then(\n+                            span_lint_and_sugg(\n                                 cx,\n                                 UNSEPARATED_LITERAL_SUFFIX,\n                                 lit.span,\n                                 \"integer type suffix should be separated by an underscore\",\n-                                |db| {\n-                                    db.span_suggestion(\n-                                        lit.span,\n-                                        \"add an underscore\",\n-                                        format!(\"{}_{}\", &src[0..idx], &src[idx..]),\n-                                        Applicability::MachineApplicable,\n-                                    );\n-                                },\n+                                \"add an underscore\",\n+                                format!(\"{}_{}\", &src[0..idx], &src[idx..]),\n+                                Applicability::MachineApplicable,\n                             );\n                         }\n                         break;\n@@ -466,19 +463,14 @@ impl MiscEarlyLints {\n                 for (idx, ch) in src.chars().enumerate() {\n                     if ch == 'f' {\n                         if prev != '_' {\n-                            span_lint_and_then(\n+                            span_lint_and_sugg(\n                                 cx,\n                                 UNSEPARATED_LITERAL_SUFFIX,\n                                 lit.span,\n                                 \"float type suffix should be separated by an underscore\",\n-                                |db| {\n-                                    db.span_suggestion(\n-                                        lit.span,\n-                                        \"add an underscore\",\n-                                        format!(\"{}_{}\", &src[0..idx], &src[idx..]),\n-                                        Applicability::MachineApplicable,\n-                                    );\n-                                },\n+                                \"add an underscore\",\n+                                format!(\"{}_{}\", &src[0..idx], &src[idx..]),\n+                                Applicability::MachineApplicable,\n                             );\n                         }\n                         break;"}]}