{"sha": "5e44115970f6d90b36d7cd4066bab0b573768567", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNDQxMTU5NzBmNmQ5MGIzNmQ3Y2Q0MDY2YmFiMGI1NzM3Njg1Njc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-15T21:10:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-15T21:10:16Z"}, "message": "Auto merge of #28408 - brson:relnotes, r=aturon\n\nI'd love to have any tips about highlights and lang stuff I missed. Sadly, this needs to be merged *tomorrow*.\r\n\r\n[Rendered](https://github.com/brson/rust/blob/relnotes/RELEASES.md)", "tree": {"sha": "55274a11aaac09920e159e9cbbf7ff15bab05ddb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55274a11aaac09920e159e9cbbf7ff15bab05ddb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e44115970f6d90b36d7cd4066bab0b573768567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e44115970f6d90b36d7cd4066bab0b573768567", "html_url": "https://github.com/rust-lang/rust/commit/5e44115970f6d90b36d7cd4066bab0b573768567", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e44115970f6d90b36d7cd4066bab0b573768567/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2e13e822a73e0ea46ae9e21afdd3155fc997f6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2e13e822a73e0ea46ae9e21afdd3155fc997f6d", "html_url": "https://github.com/rust-lang/rust/commit/d2e13e822a73e0ea46ae9e21afdd3155fc997f6d"}, {"sha": "f57bb9df284fca1355424ff5ae957419d9e1e1d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f57bb9df284fca1355424ff5ae957419d9e1e1d4", "html_url": "https://github.com/rust-lang/rust/commit/f57bb9df284fca1355424ff5ae957419d9e1e1d4"}], "stats": {"total": 236, "additions": 221, "deletions": 15}, "files": [{"sha": "e8ce773ceff816ee26d7a3bd3ea18edf38093197", "filename": "RELEASES.md", "status": "modified", "additions": 221, "deletions": 15, "changes": 236, "blob_url": "https://github.com/rust-lang/rust/blob/5e44115970f6d90b36d7cd4066bab0b573768567/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/5e44115970f6d90b36d7cd4066bab0b573768567/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=5e44115970f6d90b36d7cd4066bab0b573768567", "patch": "@@ -1,5 +1,211 @@\n+Version 1.3.0 (September 2015)\n+==============================\n+\n+* ~900 changes, numerous bugfixes\n+\n+Highlights\n+----------\n+\n+* The [new object lifetime defaults][nold] have been [turned\n+  on][nold2] after a cycle of warnings about the change. Now types\n+  like `&'a Box<Trait>` (or `&'a Rc<Trait>`, etc) will change from\n+  being interpreted as `&'a Box<Trait+'a>` to `&'a\n+  Box<Trait+'static>`.\n+* [The Rustonomicon][nom] is a new book in the official documentation\n+  that dives into writing unsafe Rust.\n+* The [`Duration`] API, [has been stabilized][ds]. This basic unit of\n+  timekeeping is employed by other std APIs, as well as out-of-tree\n+  time crates.\n+\n+Breaking Changes\n+----------------\n+\n+* The [new object lifetime defaults][nold] have been [turned\n+  on][nold2] after a cycle of warnings about the change.\n+* There is a known [regression][lr] in how object lifetime elision is\n+  interpreted, the proper solution for which is undetermined.\n+* The `#[prelude_import]` attribute, an internal implementation\n+  detail, was accidentally stabilized previously. [It has been put\n+  behind the `prelude_import` feature gate][pi]. This change is\n+  believed to break no existing code.\n+* The behavior of [`size_of_val`][dst1] and [`align_of_val`][dst2] is\n+  [more sane for dynamically sized types][dst3]. Code that relied on\n+  the previous behavior is thought to be broken.\n+* The `dropck` rules, which checks that destructors can't access\n+  destroyed values, [have been updated][dropck] to match the\n+  [RFC][dropckrfc]. This fixes some soundness holes, and as such will\n+  cause some previously-compiling code to no longer build.\n+\n+Language\n+--------\n+\n+* The [new object lifetime defaults][nold] have been [turned\n+  on][nold2] after a cycle of warnings about the change.\n+* Semicolons may [now follow types and paths in\n+  macros](https://github.com/rust-lang/rust/pull/27000).\n+* The behavior of [`size_of_val`][dst1] and [`align_of_val`][dst2] is\n+  [more sane for dynamically sized types][dst3]. Code that relied on\n+  the previous behavior is not known to exist, and suspected to be\n+  broken.\n+* `'static` variables [may now be recursive][st].\n+* `ref` bindings choose between [`Deref`] and [`DerefMut`]\n+  implementations correctly.\n+* The `dropck` rules, which checks that destructors can't access\n+  destroyed values, [have been updated][dropck] to match the\n+  [RFC][dropckrfc].\n+\n+Libraries\n+---------\n+\n+* The [`Duration`] API, [has been stabilized][ds], as well as the\n+  `std::time` module, which presently contains only `Duration`.\n+* `Box<str>` and `Box<[T]>` both implement `Clone`.\n+* The owned C string, [`CString`], implements [`Borrow`] and the\n+  borrowed C string, [`CStr`], implements [`ToOwned`]. The two of\n+  these allow C strings to be borrowed and cloned in generic code.\n+* [`CStr`] implements [`Debug`].\n+* [`AtomicPtr`] implements [`Debug`].\n+* [`Error`] trait objects [can be downcast to their concrete types][e]\n+  in many common configurations, using the [`is`], [`downcast`],\n+  [`downcast_ref`] and [`downcast_mut`] methods, similarly to the\n+  [`Any`] trait.\n+* Searching for substrings now [employs the two-way algorithm][search]\n+  instead of doing a naive search. This gives major speedups to a\n+  number of methods, including [`contains`][sc], [`find`][sf],\n+  [`rfind`][srf], [`split`][ss]. [`starts_with`][ssw] and\n+  [`ends_with`][sew] are also faster.\n+* The performance of `PartialEq` for slices is [much faster][ps].\n+* The [`Hash`] trait offers the default method, [`hash_slice`], which\n+  is overridden and optimized by the implementations for scalars.\n+* The [`Hasher`] trait now has a number of specialized `write_*`\n+  methods for primitive types, for efficiency.\n+* The I/O-specific error type, [`std::io::Error`][ie], gained a set of\n+  methods for accessing the 'inner error', if any: [`get_ref`][iegr],\n+  [`get_mut`][iegm], [`into_inner`][ieii]. As well, the implementation\n+  of [`std::error::Error::cause`][iec] also delegates to the inner\n+  error.\n+* [`process::Child`][pc] gained the [`id`] method, which returns a\n+  `u32` representing the platform-specific process identifier.\n+* The [`connect`] method on slices is deprecated, replaced by the new\n+  [`join`] method (note that both of these are on the *unstable*\n+  [`SliceConcatExt`] trait, but through the magic of the prelude are\n+  available to stable code anyway).\n+* The [`Div`] operator is implemented for [`Wrapping`] types.\n+* [`DerefMut` is implemented for `String`][dms].\n+* Performance of SipHash (the default hasher for `HashMap`) is\n+  [better for long data][sh].\n+* [`AtomicPtr`] implements [`Send`].\n+* The [`read_to_end`] implementations for [`Stdin`] and [`File`]\n+  are now [specialized to use uninitalized buffers for increased\n+  performance][rte].\n+* Lifetime parameters of foreign functions [are now resolved\n+  properly][f].\n+\n+Misc\n+----\n+\n+* Rust can now, with some coercion, [produce programs that run on\n+  Windows XP][xp], though XP is not considered a supported platform.\n+* Porting Rust on Windows from the GNU toolchain to MSVC continues\n+  ([1][win1], [2][win2], [3][win3], [4][win4]). It is still not\n+  recommended for use in 1.3, though should be fully-functional\n+  in the [64-bit 1.4 beta][b14].\n+* On Fedora-based systems installation will [properly configure the\n+  dynamic linker][fl].\n+* The compiler gained many new extended error descriptions, which can\n+  be accessed with the `--explain` flag.\n+* The `dropck` pass, which checks that destructors can't access\n+  destroyed values, [has been rewritten][dropck]. This fixes some\n+  soundness holes, and as such will cause some previously-compiling\n+  code to no longer build.\n+* `rustc` now uses [LLVM to write archive files where possible][ar].\n+  Eventually this will eliminate the compiler's dependency on the ar\n+  utility.\n+* Rust has [preliminary support for i686 FreeBSD][fb] (it has long\n+  supported FreeBSD on x86_64).\n+* The [`unused_mut`][lum], [`unconditional_recursion`][lur],\n+  [`improper_ctypes`][lic], and [`negate_unsigned`][lnu] lints are\n+  more strict.\n+* If landing pads are disabled (with `-Z no-landing-pads`), [`panic!`\n+  will kill the process instead of leaking][nlp].\n+\n+[`Any`]: http://doc.rust-lang.org/nightly/std/any/trait.Any.html\n+[`AtomicPtr`]: http://doc.rust-lang.org/nightly/std/sync/atomic/struct.AtomicPtr.html\n+[`Borrow`]: http://doc.rust-lang.org/nightly/std/borrow/trait.Borrow.html\n+[`CStr`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CStr.html\n+[`CString`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CString.html\n+[`Debug`]: http://doc.rust-lang.org/nightly/std/fmt/trait.Debug.html\n+[`DerefMut`]: http://doc.rust-lang.org/nightly/std/ops/trait.DerefMut.html\n+[`Deref`]: http://doc.rust-lang.org/nightly/std/ops/trait.Deref.html\n+[`Div`]: http://doc.rust-lang.org/nightly/std/ops/trait.Div.html\n+[`Duration`]: http://doc.rust-lang.org/nightly/std/time/struct.Duration.html\n+[`Error`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html\n+[`File`]: http://doc.rust-lang.org/nightly/std/fs/struct.File.html\n+[`Hash`]: http://doc.rust-lang.org/nightly/std/hash/trait.Hash.html\n+[`Hasher`]: http://doc.rust-lang.org/nightly/std/hash/trait.Hash.html\n+[`Send`]: http://doc.rust-lang.org/nightly/std/marker/trait.Send.html\n+[`SliceConcatExt`]: http://doc.rust-lang.org/nightly/std/slice/trait.SliceConcatExt.html\n+[`Stdin`]: http://doc.rust-lang.org/nightly/std/io/struct.Stdin.html\n+[`ToOwned`]: http://doc.rust-lang.org/nightly/std/borrow/trait.ToOwned.html\n+[`Wrapping`]: http://doc.rust-lang.org/nightly/std/num/struct.Wrapping.html\n+[`connect`]: http://doc.rust-lang.org/nightly/std/slice/trait.SliceConcatExt.html#method.connect\n+[`downcast_mut`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.downcast_mut\n+[`downcast_ref`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.downcast_ref\n+[`downcast`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.downcast\n+[`hash_slice`]: http://doc.rust-lang.org/nightly/std/hash/trait.Hash.html#method.hash_slice\n+[`id`]: http://doc.rust-lang.org/nightly/std/process/struct.Child.html#method.id\n+[`is`]: http://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.is\n+[`join`]: http://doc.rust-lang.org/nightly/std/slice/trait.SliceConcatExt.html#method.join\n+[`read_to_end`]: http://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_end\n+[ar]: https://github.com/rust-lang/rust/pull/26926\n+[b14]: https://static.rust-lang.org/dist/rust-beta-x86_64-pc-windows-msvc.msi\n+[dms]: https://github.com/rust-lang/rust/pull/26241\n+[dropck]: https://github.com/rust-lang/rust/pull/27261\n+[dropckrfc]: https://github.com/rust-lang/rfcs/blob/master/text/0769-sound-generic-drop.md\n+[ds]: https://github.com/rust-lang/rust/pull/26818\n+[dst1]: http://doc.rust-lang.org/nightly/std/mem/fn.size_of_val.html\n+[dst2]: http://doc.rust-lang.org/nightly/std/mem/fn.align_of_val.html\n+[dst3]: https://github.com/rust-lang/rust/pull/27351\n+[e]: https://github.com/rust-lang/rust/pull/24793\n+[f]: https://github.com/rust-lang/rust/pull/26588\n+[fb]: https://github.com/rust-lang/rust/pull/26959\n+[fl]: https://github.com/rust-lang/rust-installer/pull/41\n+[hs]: http://doc.rust-lang.org/nightly/std/hash/trait.Hash.html#method.hash_slice\n+[ie]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html\n+[iec]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html#method.cause\n+[iegm]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html#method.get_mut\n+[iegr]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html#method.get_ref\n+[ieii]: http://doc.rust-lang.org/nightly/std/io/struct.Error.html#method.into_inner\n+[lic]: https://github.com/rust-lang/rust/pull/26583\n+[lnu]: https://github.com/rust-lang/rust/pull/27026\n+[lr]: https://github.com/rust-lang/rust/issues/27248\n+[lum]: https://github.com/rust-lang/rust/pull/26378\n+[lur]: https://github.com/rust-lang/rust/pull/26783\n+[nlp]: https://github.com/rust-lang/rust/pull/27176\n+[nold2]: https://github.com/rust-lang/rust/pull/27045\n+[nold]: https://github.com/rust-lang/rfcs/blob/master/text/1156-adjust-default-object-bounds.md\n+[nom]: http://doc.rust-lang.org/nightly/nomicon/\n+[pc]: http://doc.rust-lang.org/nightly/std/process/struct.Child.html\n+[pi]: https://github.com/rust-lang/rust/pull/26699\n+[ps]: https://github.com/rust-lang/rust/pull/26884\n+[rte]: https://github.com/rust-lang/rust/pull/26950\n+[sc]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.contains\n+[search]: https://github.com/rust-lang/rust/pull/26327\n+[sew]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.ends_with\n+[sf]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.find\n+[sh]: https://github.com/rust-lang/rust/pull/27280\n+[srf]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.rfind\n+[ss]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.split\n+[ssw]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.starts_with\n+[st]: https://github.com/rust-lang/rust/pull/26630\n+[win1]: https://github.com/rust-lang/rust/pull/26569\n+[win2]: https://github.com/rust-lang/rust/pull/26741\n+[win3]: https://github.com/rust-lang/rust/pull/26741\n+[win4]: https://github.com/rust-lang/rust/pull/27210\n+[xp]: https://github.com/rust-lang/rust/pull/26569\n+\n Version 1.2.0 (2015-08-07)\n-===========================\n+==========================\n \n * ~1200 changes, numerous bugfixes\n \n@@ -427,7 +633,7 @@ Misc\n [path-normalize]: https://github.com/rust-lang/rust/pull/23229\n \n \n-Version 1.0.0-alpha.2 (February 2015)\n+Version 1.0.0-alpha.2 (2015-02-20)\n =====================================\n \n * ~1300 changes, numerous bugfixes\n@@ -526,7 +732,7 @@ Version 1.0.0-alpha.2 (February 2015)\n [un]: https://github.com/rust-lang/rust/pull/22256\n \n \n-Version 1.0.0-alpha (January 2015)\n+Version 1.0.0-alpha (2015-01-09)\n ==================================\n \n   * ~2400 changes, numerous bugfixes\n@@ -713,7 +919,7 @@ Version 1.0.0-alpha (January 2015)\n [rbe]: http://rustbyexample.com/\n \n \n-Version 0.12.0 (October 2014)\n+Version 0.12.0 (2014-10-09)\n =============================\n \n   * ~1900 changes, numerous bugfixes\n@@ -836,7 +1042,7 @@ Version 0.12.0 (October 2014)\n       kernels and distributions, built on CentOS 5.10.\n \n \n-Version 0.11.0 (July 2014)\n+Version 0.11.0 (2014-07-02)\n ==========================\n \n   * ~1700 changes, numerous bugfixes\n@@ -969,7 +1175,7 @@ Version 0.11.0 (July 2014)\n       greatly improved.\n \n \n-Version 0.10 (April 2014)\n+Version 0.10 (2014-04-03)\n =========================\n \n   * ~1500 changes, numerous bugfixes\n@@ -1136,7 +1342,7 @@ Version 0.10 (April 2014)\n         directory.\n \n \n-Version 0.9 (January 2014)\n+Version 0.9 (2014-01-09)\n ==========================\n \n    * ~1800 changes, numerous bugfixes\n@@ -1302,7 +1508,7 @@ Version 0.9 (January 2014)\n         build tools.\n \n \n-Version 0.8 (September 2013)\n+Version 0.8 (2013-09-26)\n ============================\n \n    * ~2200 changes, numerous bugfixes\n@@ -1458,7 +1664,7 @@ Version 0.8 (September 2013)\n         still invoked through the normal `rustdoc` command.\n \n \n-Version 0.7 (July 2013)\n+Version 0.7 (2013-07-03)\n =======================\n \n    * ~2000 changes, numerous bugfixes\n@@ -1575,7 +1781,7 @@ Version 0.7 (July 2013)\n       * Improvements to rustpkg (see the detailed release notes).\n \n \n-Version 0.6 (April 2013)\n+Version 0.6 (2013-04-03)\n ========================\n \n    * ~2100 changes, numerous bugfixes\n@@ -1678,7 +1884,7 @@ Version 0.6 (April 2013)\n       * Inline assembler supported by new asm!() syntax extension.\n \n \n-Version 0.5 (December 2012)\n+Version 0.5 (2012-12-21)\n ===========================\n \n    * ~900 changes, numerous bugfixes\n@@ -1735,7 +1941,7 @@ Version 0.5 (December 2012)\n       * License changed from MIT to dual MIT/APL2\n \n \n-Version 0.4 (October 2012)\n+Version 0.4 (2012-10-15)\n ==========================\n \n    * ~2000 changes, numerous bugfixes\n@@ -1791,7 +1997,7 @@ Version 0.4 (October 2012)\n       * All hash functions and tables converted to secure, randomized SipHash\n \n \n-Version 0.3  (July 2012)\n+Version 0.3  (2012-07-12)\n ========================\n \n    * ~1900 changes, numerous bugfixes\n@@ -1850,7 +2056,7 @@ Version 0.3  (July 2012)\n       * Cargo automatically resolves dependencies\n \n \n-Version 0.2  (March 2012)\n+Version 0.2  (2012-03-29)\n =========================\n \n    * >1500 changes, numerous bugfixes\n@@ -1891,7 +2097,7 @@ Version 0.2  (March 2012)\n       * Extensive cleanup, regularization in libstd, libcore\n \n \n-Version 0.1  (January 20, 2012)\n+Version 0.1  (2012-01-20)\n ===============================\n \n    * Most language features work, including:"}]}