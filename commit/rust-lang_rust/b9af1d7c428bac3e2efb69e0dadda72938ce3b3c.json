{"sha": "b9af1d7c428bac3e2efb69e0dadda72938ce3b3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5YWYxZDdjNDI4YmFjM2UyZWZiNjllMGRhZGRhNzI5MzhjZTNiM2M=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-03T14:07:00Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T22:05:07Z"}, "message": "Fix clippy::match_ref_pats", "tree": {"sha": "fb5144f91b879904f363a383b24ce38f0b5166a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb5144f91b879904f363a383b24ce38f0b5166a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9af1d7c428bac3e2efb69e0dadda72938ce3b3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9af1d7c428bac3e2efb69e0dadda72938ce3b3c", "html_url": "https://github.com/rust-lang/rust/commit/b9af1d7c428bac3e2efb69e0dadda72938ce3b3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9af1d7c428bac3e2efb69e0dadda72938ce3b3c/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dddcb0ad940a8010bb5df3d44526729d8e705213", "url": "https://api.github.com/repos/rust-lang/rust/commits/dddcb0ad940a8010bb5df3d44526729d8e705213", "html_url": "https://github.com/rust-lang/rust/commit/dddcb0ad940a8010bb5df3d44526729d8e705213"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "a03467011d8d9cd76f636a832371fb8ca8ef49e7", "filename": "crates/ra_ide_api/src/line_index_utils.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b9af1d7c428bac3e2efb69e0dadda72938ce3b3c/crates%2Fra_ide_api%2Fsrc%2Fline_index_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af1d7c428bac3e2efb69e0dadda72938ce3b3c/crates%2Fra_ide_api%2Fsrc%2Fline_index_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fline_index_utils.rs?ref=b9af1d7c428bac3e2efb69e0dadda72938ce3b3c", "patch": "@@ -133,9 +133,9 @@ impl<'a> Edits<'a> {\n     }\n \n     fn next_steps(&mut self, step: &Step) -> NextSteps {\n-        let step_pos = match step {\n-            &Step::Newline(n) => n,\n-            &Step::Utf16Char(r) => r.end(),\n+        let step_pos = match *step {\n+            Step::Newline(n) => n,\n+            Step::Utf16Char(r) => r.end(),\n         };\n         let res = match &mut self.current {\n             Some(edit) => {\n@@ -181,9 +181,9 @@ impl<'a> Edits<'a> {\n         if self.acc_diff == 0 {\n             x.clone()\n         } else {\n-            match x {\n-                &Step::Newline(n) => Step::Newline(self.translate(n)),\n-                &Step::Utf16Char(r) => Step::Utf16Char(self.translate_range(r)),\n+            match *x {\n+                Step::Newline(n) => Step::Newline(self.translate(n)),\n+                Step::Utf16Char(r) => Step::Utf16Char(self.translate_range(r)),\n             }\n         }\n     }"}, {"sha": "2dc0e71af2693201c6558a2637ca96dd7b4740d4", "filename": "crates/ra_text_edit/src/test_utils.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9af1d7c428bac3e2efb69e0dadda72938ce3b3c/crates%2Fra_text_edit%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9af1d7c428bac3e2efb69e0dadda72938ce3b3c/crates%2Fra_text_edit%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_text_edit%2Fsrc%2Ftest_utils.rs?ref=b9af1d7c428bac3e2efb69e0dadda72938ce3b3c", "patch": "@@ -42,8 +42,8 @@ pub fn arb_text_edit(text: &str) -> BoxedStrategy<TextEdit> {\n         .prop_flat_map(|cuts| {\n             let strategies: Vec<_> = cuts\n                 .chunks(2)\n-                .map(|chunk| match chunk {\n-                    &[from, to] => {\n+                .map(|chunk| match *chunk {\n+                    [from, to] => {\n                         let range = TextRange::from_to(from, to);\n                         Just(AtomTextEdit::delete(range))\n                             .boxed()\n@@ -54,7 +54,7 @@ pub fn arb_text_edit(text: &str) -> BoxedStrategy<TextEdit> {\n                             )\n                             .boxed()\n                     }\n-                    &[x] => arb_text().prop_map(move |text| AtomTextEdit::insert(x, text)).boxed(),\n+                    [x] => arb_text().prop_map(move |text| AtomTextEdit::insert(x, text)).boxed(),\n                     _ => unreachable!(),\n                 })\n                 .collect();"}]}