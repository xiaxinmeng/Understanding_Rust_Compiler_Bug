{"sha": "9d01c46c07c2418ae5c26f03785c350185b17ed0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMDFjNDZjMDdjMjQxOGFlNWMyNmYwMzc4NWMzNTAxODViMTdlZDA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-05-01T15:14:56Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-05-19T17:08:44Z"}, "message": "core: Add iterable functions to io::reader_utils.", "tree": {"sha": "a17005d314bad2ed4e43a20725aa4393445ba0fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a17005d314bad2ed4e43a20725aa4393445ba0fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d01c46c07c2418ae5c26f03785c350185b17ed0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d01c46c07c2418ae5c26f03785c350185b17ed0", "html_url": "https://github.com/rust-lang/rust/commit/9d01c46c07c2418ae5c26f03785c350185b17ed0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d01c46c07c2418ae5c26f03785c350185b17ed0/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7ca3e4db02d7d87dd7a2172394e08fbb92b8fb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7ca3e4db02d7d87dd7a2172394e08fbb92b8fb2", "html_url": "https://github.com/rust-lang/rust/commit/e7ca3e4db02d7d87dd7a2172394e08fbb92b8fb2"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "e210ab0944c418ae8f384905a49a6488310bf2a5", "filename": "src/libcore/io.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9d01c46c07c2418ae5c26f03785c350185b17ed0/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d01c46c07c2418ae5c26f03785c350185b17ed0/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=9d01c46c07c2418ae5c26f03785c350185b17ed0", "patch": "@@ -161,6 +161,24 @@ impl reader_util for reader {\n         while !self.eof() { buf += self.read_bytes(2048u); }\n         buf\n     }\n+\n+    fn each_byte(it: fn(int) -> bool) {\n+        while !self.eof() {\n+            if !it(self.read_byte()) { break; }\n+        }\n+    }\n+\n+    fn each_char(it: fn(char) -> bool) {\n+        while !self.eof() {\n+            if !it(self.read_char()) { break; }\n+        }\n+    }\n+\n+    fn each_line(it: fn(str) -> bool) {\n+        while !self.eof() {\n+            if !it(self.read_line()) { break; }\n+        }\n+    }\n }\n \n // Reader implementations"}]}