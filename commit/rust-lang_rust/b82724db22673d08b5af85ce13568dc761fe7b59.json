{"sha": "b82724db22673d08b5af85ce13568dc761fe7b59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MjcyNGRiMjI2NzNkMDhiNWFmODVjZTEzNTY4ZGM3NjFmZTdiNTk=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-19T16:45:02Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:51:15Z"}, "message": "needs_comma was always true", "tree": {"sha": "20af4ccef2a8cc999e620f974448dbe195157a54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20af4ccef2a8cc999e620f974448dbe195157a54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b82724db22673d08b5af85ce13568dc761fe7b59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b82724db22673d08b5af85ce13568dc761fe7b59", "html_url": "https://github.com/rust-lang/rust/commit/b82724db22673d08b5af85ce13568dc761fe7b59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b82724db22673d08b5af85ce13568dc761fe7b59/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "703390150a75abbe6fbacd6b6e3ae08c9a6f5e37", "url": "https://api.github.com/repos/rust-lang/rust/commits/703390150a75abbe6fbacd6b6e3ae08c9a6f5e37", "html_url": "https://github.com/rust-lang/rust/commit/703390150a75abbe6fbacd6b6e3ae08c9a6f5e37"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "880c431e15ca08f01a262ef97d8b15c3ba7f93ad", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b82724db22673d08b5af85ce13568dc761fe7b59/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82724db22673d08b5af85ce13568dc761fe7b59/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b82724db22673d08b5af85ce13568dc761fe7b59", "patch": "@@ -3807,7 +3807,7 @@ pub impl Parser {\n \n             let vis = self.parse_visibility();\n \n-            let ident, needs_comma, kind;\n+            let ident, kind;\n             let mut args = ~[], disr_expr = None;\n             ident = self.parse_ident();\n             if self.eat(&token::LBRACE) {\n@@ -3836,7 +3836,6 @@ pub impl Parser {\n             } else {\n                 kind = tuple_variant_kind(~[]);\n             }\n-            needs_comma = true;\n \n             let vr = ast::variant_ {\n                 name: ident,\n@@ -3848,7 +3847,7 @@ pub impl Parser {\n             };\n             variants.push(spanned(vlo, self.last_span.hi, vr));\n \n-            if needs_comma && !self.eat(&token::COMMA) { break; }\n+            if !self.eat(&token::COMMA) { break; }\n         }\n         self.expect(&token::RBRACE);\n         if (have_disr && !all_nullary) {"}]}