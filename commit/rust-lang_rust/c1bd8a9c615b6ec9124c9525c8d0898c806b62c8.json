{"sha": "c1bd8a9c615b6ec9124c9525c8d0898c806b62c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYmQ4YTljNjE1YjZlYzkxMjRjOTUyNWM4ZDA4OThjODA2YjYyYzg=", "commit": {"author": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-03T18:23:53Z"}, "committer": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-03T18:23:53Z"}, "message": "Add keyword docs on const\n\nTurns out writing docs on keywords that are used in multiple different\nplaces in entirely different contexts gets a little harder. I put a\nfootnote on `*const` syntax just to make sure you can find it if need\nbe, but it might need more detail.", "tree": {"sha": "c24b9d9dfe212b0dbfb95b1972d65743ca5c7839", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c24b9d9dfe212b0dbfb95b1972d65743ca5c7839"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1bd8a9c615b6ec9124c9525c8d0898c806b62c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1bd8a9c615b6ec9124c9525c8d0898c806b62c8", "html_url": "https://github.com/rust-lang/rust/commit/c1bd8a9c615b6ec9124c9525c8d0898c806b62c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1bd8a9c615b6ec9124c9525c8d0898c806b62c8/comments", "author": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84", "url": "https://api.github.com/repos/rust-lang/rust/commits/1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84", "html_url": "https://github.com/rust-lang/rust/commit/1142bbdfc4e9ae48045e9b7a2c6b507aa0626e84"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "5c3a2b18e1cbac0a72d6a8b187a93994801240fa", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/c1bd8a9c615b6ec9124c9525c8d0898c806b62c8/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1bd8a9c615b6ec9124c9525c8d0898c806b62c8/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=c1bd8a9c615b6ec9124c9525c8d0898c806b62c8", "patch": "@@ -10,7 +10,7 @@\n \n #[doc(keyword = \"as\")]\n //\n-/// The type coercion keyword\n+/// The type coercion keyword.\n ///\n /// `as` is most commonly used to turn primitive types into other primitive types, but it has other\n /// uses that include turning pointers into addresses, addresses into pointers, and pointers into\n@@ -35,6 +35,61 @@\n /// [Reference]: https://doc.rust-lang.org/reference/expressions/operator-expr.html#type-cast-expressions\n mod as_keyword { }\n \n+#[doc(keyword = \"const\")]\n+//\n+/// The keyword for defining constants.\n+///\n+/// Sometimes a certain value is used many times throughout a program, and it can become\n+/// inconvenient to copy it over and over. What's more, it's not always possible or desirable to\n+/// make it a variable that gets carried around to each function that needs it. In these cases, the\n+/// `const` keyword provides a convenient alternative to code duplication.\n+///\n+/// ```rust\n+/// const THING: u32 = 0xABAD1DEA;\n+///\n+/// let foo = 123 + THING;\n+/// ```\n+///\n+/// Constants must be explicitly typed, unlike with `let` you can't ignore its type and let the\n+/// compiler figure it out. Any constant value can be defined in a const, which in practice happens\n+/// to be most things that would be reasonable to have a constant. For example, you can't have a\n+/// File as a const.\n+///\n+/// The only lifetime allowed in a constant is 'static, which is the lifetime that encompasses all\n+/// others in a Rust program. For example, if you wanted to define a constant string, it would look\n+/// like this:\n+///\n+/// ```rust\n+/// const WORDS: &'static str = \"hello rust!\";\n+/// ```\n+///\n+/// Thanks to static lifetime elision, you usually don't have to explicitly use 'static:\n+///\n+/// ```rust\n+/// const WORDS: &str = \"hello convenience!\";\n+/// ```\n+///\n+/// `const` items looks remarkably similar to [`static`] items, which introduces some confusion as\n+/// to which one should be used at which times. To put it simply, constants are inlined wherever\n+/// they're used, making using them identical to simply replacing the name of the const with its\n+/// value. Static variables on the other hand point to a single location in memory, which all\n+/// accesses share. This means that, unlike with constants, they can't have destructors, but it\n+/// also means that (via unsafe code) they can be mutable, which is useful for the rare situations\n+/// in which you can't avoid using global state.\n+///\n+/// Constants, as with statics, should always be in SCREAMING_SNAKE_CASE.\n+///\n+/// The `const` keyword is also used in raw pointers in combination with `mut`, as seen in `*const\n+/// T` and `*mut T`. More about that can be read at the [pointer] primitive part of the Rust docs.\n+///\n+/// For more detail on `const`, see the [Rust Book] or the [Reference]\n+///\n+/// [`static`]: keyword.static.html\n+/// [pointer]: primitive.pointer.html\n+/// [Rust Book]: https://doc.rust-lang.org/stable/book/2018-edition/ch03-01-variables-and-mutability.html#differences-between-variables-and-constants\n+/// [Reference]: https://doc.rust-lang.org/reference/items/constant-items.html\n+mod const_keyword { }\n+\n #[doc(keyword = \"fn\")]\n //\n /// The `fn` keyword."}]}