{"sha": "dd1a5e41ad0763cf8f57eba2a92528b895dc9378", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMWE1ZTQxYWQwNzYzY2Y4ZjU3ZWJhMmE5MjUyOGI4OTVkYzkzNzg=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-04-02T15:28:48Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-04-02T15:55:45Z"}, "message": "Add saturating abs/neg", "tree": {"sha": "b52c89d4872dca003030939463080d9acf3edbe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b52c89d4872dca003030939463080d9acf3edbe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd1a5e41ad0763cf8f57eba2a92528b895dc9378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd1a5e41ad0763cf8f57eba2a92528b895dc9378", "html_url": "https://github.com/rust-lang/rust/commit/dd1a5e41ad0763cf8f57eba2a92528b895dc9378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd1a5e41ad0763cf8f57eba2a92528b895dc9378/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a6b4c0a2e245e3484196f2533600c29a8b8ae1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a6b4c0a2e245e3484196f2533600c29a8b8ae1a", "html_url": "https://github.com/rust-lang/rust/commit/4a6b4c0a2e245e3484196f2533600c29a8b8ae1a"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "0d9d62353568c42e8559716e1bbcffde0b16235f", "filename": "crates/core_simd/src/math.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/dd1a5e41ad0763cf8f57eba2a92528b895dc9378/crates%2Fcore_simd%2Fsrc%2Fmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1a5e41ad0763cf8f57eba2a92528b895dc9378/crates%2Fcore_simd%2Fsrc%2Fmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmath.rs?ref=dd1a5e41ad0763cf8f57eba2a92528b895dc9378", "patch": "@@ -78,6 +78,41 @@ macro_rules! impl_int_arith {\n             pub fn saturating_sub(self, second: Self) -> Self {\n                 unsafe { crate::intrinsics::simd_saturating_sub(self, second) }\n             }\n+\n+            /// Lanewise saturating absolute value, implemented in Rust.\n+            ///\n+            /// # Examples\n+            /// # use core_simd::*;\n+            #[doc = concat!(\"# use core::\", stringify!($n), \"::{MIN, MAX};\")]\n+            #[doc = concat!(\"let x = \", stringify!($name), \"::splat([MIN, -2, 0, 3]);\")]\n+            /// let unsat = x.abs();\n+            /// let sat = x.saturating_abs();\n+            #[doc = concat!(\"assert_eq!(unsat, \", stringify!($name), \"::from_array([MIN, 2, 0, 3]);\")]\n+            #[doc = concat!(\"assert_eq!(sat, \", stringify!($name), \"::from_array([MAX, 2, 0, 3]));\")]\n+            /// ```\n+            #[inline]\n+            pub fn saturating_abs(self) -> Self {\n+                // arith shift for -1 or 0 mask based on sign bit, giving 2s complement\n+                const SHR: $n = <$n>::BITS as $n - 1;\n+                let m = self >> SHR;\n+                (self^m).saturating_sub(m)\n+            }\n+\n+            /// Lanewise saturating negation, implemented in Rust.\n+            ///\n+            /// # Examples\n+            /// # use core_simd::*;\n+            #[doc = concat!(\"# use core::\", stringify!($n), \"::{MIN, MAX};\")]\n+            #[doc = concat!(\"let x = \", stringify!($name), \"::splat([MIN, -2, 3, MAX]);\")]\n+            /// let unsat = -x;\n+            /// let sat = x.saturating_neg();\n+            #[doc = concat!(\"assert_eq!(unsat, \", stringify!($name), \"::from_array([MIN, 2, -3, MIN + 1]);\")]\n+            #[doc = concat!(\"assert_eq!(sat, \", stringify!($name), \"::from_array([MAX, 2, -3, MIN + 1]));\")]\n+            /// ```\n+            #[inline]\n+            pub fn saturating_neg(self) -> Self {\n+                Self::splat(0).saturating_sub(self)\n+            }\n         })+\n     }\n }"}]}