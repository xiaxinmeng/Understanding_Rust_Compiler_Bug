{"sha": "750820342130a026f10c15be4ef0a200f5959be6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MDgyMDM0MjEzMGEwMjZmMTBjMTViZTRlZjBhMjAwZjU5NTliZTY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-05-26T04:31:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-26T04:31:03Z"}, "message": "Rollup merge of #85647 - rust-lang:revert-81601-llvm-on-demand, r=jyn514\n\nRevert \"Move llvm submodule updates to rustbuild\"\n\nReverts rust-lang/rust#81601\n\nThis updates LLVM a bit too eagerly -- and particularly on Windows, this can be slow. See discussion on [Zulip].\n\n[Zulip]: https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/x.2Epy.20always.20updates.20LLVM.20submodule", "tree": {"sha": "41ea01bedee65fb2609df2ff1baeb10729c3093c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41ea01bedee65fb2609df2ff1baeb10729c3093c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/750820342130a026f10c15be4ef0a200f5959be6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrc8ICRBK7hj4Ov3rIwAAE3gIABJ77cUthfn/PtOBtAftkRHa\nWbBFC6o2LmXwEI0JXmJlNv078u70Zr7CWhU/HqG+nvyF1g/S7YZZ+s5S2YU9mgY0\nhlnRIomYwnY1frpK+5j+rEh1DWrewtYrjKq1UAkQHrHFkIhQTvsCJ3NUnjkB6NLC\ngPsJPnsd2w5RFbtHk0LtLlJEJHkISi84kK5/eRhqmwqlWK7YhR/byVl5as6BxSID\nQJdZ0m9TcBZh77GLu5gx8K2fP2xjI1jUM+C4kbBp3GWXm+kLrFfnomXwubKlbwlC\nHGC+eiQTXa4PfsnekWPKFi7s0RzF6ARINi7GmVbiN9RalCB957aiSt1B3Z3aV58=\n=jGwS\n-----END PGP SIGNATURE-----\n", "payload": "tree 41ea01bedee65fb2609df2ff1baeb10729c3093c\nparent 587de8e5f9ef083b2546311f0c2c36bbad0ed8e3\nparent ad308264a38531bc8d2179324bac3652a1cda640\nauthor Yuki Okushi <jtitor@2k36.org> 1622003463 +0900\ncommitter GitHub <noreply@github.com> 1622003463 +0900\n\nRollup merge of #85647 - rust-lang:revert-81601-llvm-on-demand, r=jyn514\n\nRevert \"Move llvm submodule updates to rustbuild\"\n\nReverts rust-lang/rust#81601\n\nThis updates LLVM a bit too eagerly -- and particularly on Windows, this can be slow. See discussion on [Zulip].\n\n[Zulip]: https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/x.2Epy.20always.20updates.20LLVM.20submodule\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/750820342130a026f10c15be4ef0a200f5959be6", "html_url": "https://github.com/rust-lang/rust/commit/750820342130a026f10c15be4ef0a200f5959be6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/750820342130a026f10c15be4ef0a200f5959be6/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "587de8e5f9ef083b2546311f0c2c36bbad0ed8e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/587de8e5f9ef083b2546311f0c2c36bbad0ed8e3", "html_url": "https://github.com/rust-lang/rust/commit/587de8e5f9ef083b2546311f0c2c36bbad0ed8e3"}, {"sha": "ad308264a38531bc8d2179324bac3652a1cda640", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad308264a38531bc8d2179324bac3652a1cda640", "html_url": "https://github.com/rust-lang/rust/commit/ad308264a38531bc8d2179324bac3652a1cda640"}], "stats": {"total": 111, "additions": 13, "deletions": 98}, "files": [{"sha": "149a899cef7a0cf615c88dfa94c6e3443af4d26d", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/750820342130a026f10c15be4ef0a200f5959be6/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/750820342130a026f10c15be4ef0a200f5959be6/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=750820342130a026f10c15be4ef0a200f5959be6", "patch": "@@ -991,20 +991,28 @@ def update_submodules(self):\n         ).decode(default_encoding).splitlines()]\n         filtered_submodules = []\n         submodules_names = []\n+        llvm_checked_out = os.path.exists(os.path.join(self.rust_root, \"src/llvm-project/.git\"))\n+        external_llvm_provided = self.get_toml('llvm-config') or self.downloading_llvm()\n+        llvm_needed = not self.get_toml('codegen-backends', 'rust') \\\n+            or \"llvm\" in self.get_toml('codegen-backends', 'rust')\n         for module in submodules:\n-            # This is handled by native::Llvm in rustbuild, not here\n             if module.endswith(\"llvm-project\"):\n-                continue\n+                # Don't sync the llvm-project submodule if an external LLVM was\n+                # provided, if we are downloading LLVM or if the LLVM backend is\n+                # not being built. Also, if the submodule has been initialized\n+                # already, sync it anyways so that it doesn't mess up contributor\n+                # pull requests.\n+                if external_llvm_provided or not llvm_needed:\n+                    if self.get_toml('lld') != 'true' and not llvm_checked_out:\n+                        continue\n             check = self.check_submodule(module, slow_submodules)\n             filtered_submodules.append((module, check))\n             submodules_names.append(module)\n         recorded = subprocess.Popen([\"git\", \"ls-tree\", \"HEAD\"] + submodules_names,\n                                     cwd=self.rust_root, stdout=subprocess.PIPE)\n         recorded = recorded.communicate()[0].decode(default_encoding).strip().splitlines()\n-        # { filename: hash }\n         recorded_submodules = {}\n         for data in recorded:\n-            # [mode, kind, hash, filename]\n             data = data.split()\n             recorded_submodules[data[3]] = data[2]\n         for module in filtered_submodules:"}, {"sha": "2960dd3df6bf48b81a98cbd0ee8c80e42a6176f2", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/750820342130a026f10c15be4ef0a200f5959be6/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/750820342130a026f10c15be4ef0a200f5959be6/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=750820342130a026f10c15be4ef0a200f5959be6", "patch": "@@ -472,22 +472,12 @@ impl Build {\n         slice::from_ref(&self.build.triple)\n     }\n \n-    /// If the LLVM submodule has been initialized already, sync it unconditionally. This avoids\n-    /// contributors checking in a submodule change by accident.\n-    pub fn maybe_update_llvm_submodule(&self) {\n-        if self.in_tree_llvm_info.is_git() {\n-            native::update_llvm_submodule(self);\n-        }\n-    }\n-\n     /// Executes the entire build, as configured by the flags and configuration.\n     pub fn build(&mut self) {\n         unsafe {\n             job::setup(self);\n         }\n \n-        self.maybe_update_llvm_submodule();\n-\n         if let Subcommand::Format { check, paths } = &self.config.cmd {\n             return format::format(self, *check, &paths);\n         }"}, {"sha": "bde0a96f03013d22aeb30a80e8a600a15f252ebc", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 83, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/750820342130a026f10c15be4ef0a200f5959be6/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/750820342130a026f10c15be4ef0a200f5959be6/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=750820342130a026f10c15be4ef0a200f5959be6", "patch": "@@ -21,7 +21,7 @@ use build_helper::{output, t};\n use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n use crate::config::TargetSelection;\n use crate::util::{self, exe};\n-use crate::{Build, GitRepo};\n+use crate::GitRepo;\n use build_helper::up_to_date;\n \n pub struct Meta {\n@@ -91,85 +91,6 @@ pub fn prebuilt_llvm_config(\n     Err(Meta { stamp, build_llvm_config, out_dir, root: root.into() })\n }\n \n-// modified from `check_submodule` and `update_submodule` in bootstrap.py\n-pub(crate) fn update_llvm_submodule(build: &Build) {\n-    let llvm_project = &Path::new(\"src\").join(\"llvm-project\");\n-\n-    fn dir_is_empty(dir: &Path) -> bool {\n-        t!(std::fs::read_dir(dir)).next().is_none()\n-    }\n-\n-    // NOTE: The check for the empty directory is here because when running x.py\n-    // the first time, the llvm submodule won't be checked out. Check it out\n-    // now so we can build it.\n-    if !build.in_tree_llvm_info.is_git() && !dir_is_empty(&build.config.src.join(llvm_project)) {\n-        return;\n-    }\n-\n-    // check_submodule\n-    let checked_out = if build.config.fast_submodules {\n-        Some(output(\n-            Command::new(\"git\")\n-                .args(&[\"rev-parse\", \"HEAD\"])\n-                .current_dir(build.config.src.join(llvm_project)),\n-        ))\n-    } else {\n-        None\n-    };\n-\n-    // update_submodules\n-    let recorded = output(\n-        Command::new(\"git\")\n-            .args(&[\"ls-tree\", \"HEAD\"])\n-            .arg(llvm_project)\n-            .current_dir(&build.config.src),\n-    );\n-    let hash =\n-        recorded.split(' ').nth(2).unwrap_or_else(|| panic!(\"unexpected output `{}`\", recorded));\n-\n-    // update_submodule\n-    if let Some(llvm_hash) = checked_out {\n-        if hash == llvm_hash {\n-            // already checked out\n-            return;\n-        }\n-    }\n-\n-    println!(\"Updating submodule {}\", llvm_project.display());\n-    build.run(\n-        Command::new(\"git\")\n-            .args(&[\"submodule\", \"-q\", \"sync\"])\n-            .arg(llvm_project)\n-            .current_dir(&build.config.src),\n-    );\n-\n-    // Try passing `--progress` to start, then run git again without if that fails.\n-    let update = |progress: bool| {\n-        let mut git = Command::new(\"git\");\n-        git.args(&[\"submodule\", \"update\", \"--init\", \"--recursive\"]);\n-        if progress {\n-            git.arg(\"--progress\");\n-        }\n-        git.arg(llvm_project).current_dir(&build.config.src);\n-        git\n-    };\n-    // NOTE: doesn't use `try_run` because this shouldn't print an error if it fails.\n-    if !update(true).status().map_or(false, |status| status.success()) {\n-        build.run(&mut update(false));\n-    }\n-\n-    build.run(\n-        Command::new(\"git\")\n-            .args(&[\"reset\", \"-q\", \"--hard\"])\n-            .current_dir(build.config.src.join(llvm_project)),\n-    );\n-    build.run(\n-        Command::new(\"git\")\n-            .args(&[\"clean\", \"-qdfx\"])\n-            .current_dir(build.config.src.join(llvm_project)),\n-    );\n-}\n-\n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Llvm {\n     pub target: TargetSelection,\n@@ -207,9 +128,6 @@ impl Step for Llvm {\n                 Err(m) => m,\n             };\n \n-        if !builder.config.dry_run {\n-            update_llvm_submodule(builder);\n-        }\n         if builder.config.llvm_link_shared\n             && (target.contains(\"windows\") || target.contains(\"apple-darwin\"))\n         {"}, {"sha": "80f804174ed082e20527f8206cd6aef5bbf5eb19", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/750820342130a026f10c15be4ef0a200f5959be6/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/750820342130a026f10c15be4ef0a200f5959be6/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=750820342130a026f10c15be4ef0a200f5959be6", "patch": "@@ -130,7 +130,6 @@ pub fn make(host: &str) -> PathBuf {\n     }\n }\n \n-#[track_caller]\n pub fn output(cmd: &mut Command) -> String {\n     let output = match cmd.stderr(Stdio::inherit()).output() {\n         Ok(status) => status,"}]}