{"sha": "64e6288b8bd78dd8b0addbd0a599e393e2209b76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZTYyODhiOGJkNzhkZDhiMGFkZGJkMGE1OTllMzkzZTIyMDliNzY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-04-07T15:31:38Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-04-07T15:31:38Z"}, "message": "rebase and update tests", "tree": {"sha": "319e6f889d3ba1085b37824ae67ab8b02d65b5eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/319e6f889d3ba1085b37824ae67ab8b02d65b5eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64e6288b8bd78dd8b0addbd0a599e393e2209b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64e6288b8bd78dd8b0addbd0a599e393e2209b76", "html_url": "https://github.com/rust-lang/rust/commit/64e6288b8bd78dd8b0addbd0a599e393e2209b76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64e6288b8bd78dd8b0addbd0a599e393e2209b76/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60c7f37f7ca755db24a414c66a919aab8ae7a9cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/60c7f37f7ca755db24a414c66a919aab8ae7a9cc", "html_url": "https://github.com/rust-lang/rust/commit/60c7f37f7ca755db24a414c66a919aab8ae7a9cc"}], "stats": {"total": 52, "additions": 42, "deletions": 10}, "files": [{"sha": "58bcb13e68ebdfb1eb0394c45714a4a57ba43f42", "filename": "src/test/ui/generic-associated-types/impl_bounds.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64e6288b8bd78dd8b0addbd0a599e393e2209b76/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64e6288b8bd78dd8b0addbd0a599e393e2209b76/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr?ref=64e6288b8bd78dd8b0addbd0a599e393e2209b76", "patch": "@@ -58,8 +58,8 @@ LL |     type C where Self: Clone;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ this trait associated type doesn't have the requirement `Fooy<T>: Copy`\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Copy> Foo for Fooy<T> {\n-   |       ^^^^^^\n+LL | impl<T: std::marker::Copy> Foo for Fooy<T> {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied\n   --> $DIR/impl_bounds.rs:23:5"}, {"sha": "54eb5a96c9d81e75940b665e0c2c25926b10e45a", "filename": "src/test/ui/impl-trait/projection-mismatch-in-impl-where-clause.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64e6288b8bd78dd8b0addbd0a599e393e2209b76/src%2Ftest%2Fui%2Fimpl-trait%2Fprojection-mismatch-in-impl-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64e6288b8bd78dd8b0addbd0a599e393e2209b76/src%2Ftest%2Fui%2Fimpl-trait%2Fprojection-mismatch-in-impl-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fprojection-mismatch-in-impl-where-clause.stderr?ref=64e6288b8bd78dd8b0addbd0a599e393e2209b76", "patch": "@@ -4,7 +4,11 @@ error[E0271]: type mismatch resolving `<() as Super>::Assoc == ()`\n LL | fn test() -> impl Test {\n    |              ^^^^^^^^^ expected `()`, found `u8`\n    |\n-   = note: required because of the requirements on the impl of `Test` for `()`\n+note: required because of the requirements on the impl of `Test` for `()`\n+  --> $DIR/projection-mismatch-in-impl-where-clause.rs:11:9\n+   |\n+LL | impl<T> Test for T where T: Super<Assoc = ()> {}\n+   |         ^^^^     ^\n \n error: aborting due to previous error\n "}, {"sha": "035501009bda4c4074b44b5f45d8c8b080cd94d8", "filename": "src/test/ui/kindck/kindck-impl-type-params.nll.stderr", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/64e6288b8bd78dd8b0addbd0a599e393e2209b76/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64e6288b8bd78dd8b0addbd0a599e393e2209b76/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr?ref=64e6288b8bd78dd8b0addbd0a599e393e2209b76", "patch": "@@ -4,7 +4,11 @@ error[E0277]: `T` cannot be sent between threads safely\n LL |     let a = &t as &dyn Gettable<T>;\n    |             ^^ `T` cannot be sent between threads safely\n    |\n-   = note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n+note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n+  --> $DIR/kindck-impl-type-params.rs:14:32\n+   |\n+LL | impl<T: Send + Copy + 'static> Gettable<T> for S<T> {}\n+   |                                ^^^^^^^^^^^     ^^^^\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n@@ -17,7 +21,11 @@ error[E0277]: the trait bound `T: Copy` is not satisfied\n LL |     let a = &t as &dyn Gettable<T>;\n    |             ^^ the trait `Copy` is not implemented for `T`\n    |\n-   = note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n+note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n+  --> $DIR/kindck-impl-type-params.rs:14:32\n+   |\n+LL | impl<T: Send + Copy + 'static> Gettable<T> for S<T> {}\n+   |                                ^^^^^^^^^^^     ^^^^\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n@@ -30,7 +38,11 @@ error[E0277]: `T` cannot be sent between threads safely\n LL |     let a: &dyn Gettable<T> = &t;\n    |                               ^^ `T` cannot be sent between threads safely\n    |\n-   = note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n+note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n+  --> $DIR/kindck-impl-type-params.rs:14:32\n+   |\n+LL | impl<T: Send + Copy + 'static> Gettable<T> for S<T> {}\n+   |                                ^^^^^^^^^^^     ^^^^\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n@@ -43,7 +55,11 @@ error[E0277]: the trait bound `T: Copy` is not satisfied\n LL |     let a: &dyn Gettable<T> = &t;\n    |                               ^^ the trait `Copy` is not implemented for `T`\n    |\n-   = note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n+note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n+  --> $DIR/kindck-impl-type-params.rs:14:32\n+   |\n+LL | impl<T: Send + Copy + 'static> Gettable<T> for S<T> {}\n+   |                                ^^^^^^^^^^^     ^^^^\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n@@ -56,7 +72,11 @@ error[E0277]: the trait bound `String: Copy` is not satisfied\n LL |     let a = t as Box<dyn Gettable<String>>;\n    |             ^ the trait `Copy` is not implemented for `String`\n    |\n-   = note: required because of the requirements on the impl of `Gettable<String>` for `S<String>`\n+note: required because of the requirements on the impl of `Gettable<String>` for `S<String>`\n+  --> $DIR/kindck-impl-type-params.rs:14:32\n+   |\n+LL | impl<T: Send + Copy + 'static> Gettable<T> for S<T> {}\n+   |                                ^^^^^^^^^^^     ^^^^\n    = note: required for the cast to the object type `dyn Gettable<String>`\n \n error[E0277]: the trait bound `Foo: Copy` is not satisfied\n@@ -65,7 +85,11 @@ error[E0277]: the trait bound `Foo: Copy` is not satisfied\n LL |     let a: Box<dyn Gettable<Foo>> = t;\n    |                                     ^ the trait `Copy` is not implemented for `Foo`\n    |\n-   = note: required because of the requirements on the impl of `Gettable<Foo>` for `S<Foo>`\n+note: required because of the requirements on the impl of `Gettable<Foo>` for `S<Foo>`\n+  --> $DIR/kindck-impl-type-params.rs:14:32\n+   |\n+LL | impl<T: Send + Copy + 'static> Gettable<T> for S<T> {}\n+   |                                ^^^^^^^^^^^     ^^^^\n    = note: required for the cast to the object type `dyn Gettable<Foo>`\n \n error: aborting due to 6 previous errors"}, {"sha": "a3d94679434d18876f2cdc27274f04980db5cb8c", "filename": "src/test/ui/rfc1623.nll.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64e6288b8bd78dd8b0addbd0a599e393e2209b76/src%2Ftest%2Fui%2Frfc1623.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64e6288b8bd78dd8b0addbd0a599e393e2209b76/src%2Ftest%2Fui%2Frfc1623.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1623.nll.stderr?ref=64e6288b8bd78dd8b0addbd0a599e393e2209b76", "patch": "@@ -11,7 +11,11 @@ LL | | };\n    |\n    = help: within `&SomeStruct`, the trait `Sync` is not implemented for `dyn for<'a, 'b> Fn(&'a Foo<'b>) -> &'a Foo<'b>`\n    = note: required because it appears within the type `&dyn for<'a, 'b> Fn(&'a Foo<'b>) -> &'a Foo<'b>`\n-   = note: required because it appears within the type `SomeStruct`\n+note: required because it appears within the type `SomeStruct`\n+  --> $DIR/rfc1623.rs:11:8\n+   |\n+LL | struct SomeStruct<'x, 'y, 'z: 'x> {\n+   |        ^^^^^^^^^^\n    = note: required because it appears within the type `&SomeStruct`\n    = note: shared static variables must have a type that implements `Sync`\n "}]}