{"sha": "8610edd01451e16d4fcb66324a27890c559fbf7b", "node_id": "C_kwDOAAsO6NoAKDg2MTBlZGQwMTQ1MWUxNmQ0ZmNiNjYzMjRhMjc4OTBjNTU5ZmJmN2I", "commit": {"author": {"name": "Lucas Kent", "email": "rubickent@gmail.com", "date": "2022-02-06T06:44:41Z"}, "committer": {"name": "Lucas Kent", "email": "rubickent@gmail.com", "date": "2022-02-16T03:58:36Z"}, "message": "Suggest deriving required supertraits", "tree": {"sha": "08763ab56d0a86edd4eb8ee6f124afe2c58cd75e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08763ab56d0a86edd4eb8ee6f124afe2c58cd75e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8610edd01451e16d4fcb66324a27890c559fbf7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8610edd01451e16d4fcb66324a27890c559fbf7b", "html_url": "https://github.com/rust-lang/rust/commit/8610edd01451e16d4fcb66324a27890c559fbf7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8610edd01451e16d4fcb66324a27890c559fbf7b/comments", "author": {"login": "rukai", "id": 5120858, "node_id": "MDQ6VXNlcjUxMjA4NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5120858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rukai", "html_url": "https://github.com/rukai", "followers_url": "https://api.github.com/users/rukai/followers", "following_url": "https://api.github.com/users/rukai/following{/other_user}", "gists_url": "https://api.github.com/users/rukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rukai/subscriptions", "organizations_url": "https://api.github.com/users/rukai/orgs", "repos_url": "https://api.github.com/users/rukai/repos", "events_url": "https://api.github.com/users/rukai/events{/privacy}", "received_events_url": "https://api.github.com/users/rukai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rukai", "id": 5120858, "node_id": "MDQ6VXNlcjUxMjA4NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5120858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rukai", "html_url": "https://github.com/rukai", "followers_url": "https://api.github.com/users/rukai/followers", "following_url": "https://api.github.com/users/rukai/following{/other_user}", "gists_url": "https://api.github.com/users/rukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rukai/subscriptions", "organizations_url": "https://api.github.com/users/rukai/orgs", "repos_url": "https://api.github.com/users/rukai/repos", "events_url": "https://api.github.com/users/rukai/events{/privacy}", "received_events_url": "https://api.github.com/users/rukai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "393fdc10483da930cdbb00eabc3635030d2e776f", "url": "https://api.github.com/repos/rust-lang/rust/commits/393fdc10483da930cdbb00eabc3635030d2e776f", "html_url": "https://github.com/rust-lang/rust/commit/393fdc10483da930cdbb00eabc3635030d2e776f"}], "stats": {"total": 130, "additions": 126, "deletions": 4}, "files": [{"sha": "5b06cc333027ecb8dd1641200a9976806a14ffce", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8610edd01451e16d4fcb66324a27890c559fbf7b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8610edd01451e16d4fcb66324a27890c559fbf7b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=8610edd01451e16d4fcb66324a27890c559fbf7b", "patch": "@@ -1196,7 +1196,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 Some(adt) if adt.did.is_local() => adt,\n                 _ => continue,\n             };\n-            let can_derive = match self.tcx.get_diagnostic_name(trait_pred.def_id()) {\n+            let diagnostic_name = self.tcx.get_diagnostic_name(trait_pred.def_id());\n+            let can_derive = match diagnostic_name {\n                 Some(sym::Default) => !adt.is_enum(),\n                 Some(\n                     sym::Eq\n@@ -1211,10 +1212,18 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 _ => false,\n             };\n             if can_derive {\n+                let self_name = trait_pred.self_ty().to_string();\n+                let self_span = self.tcx.def_span(adt.did);\n+                if let Some(sym::Ord) = diagnostic_name {\n+                    derives.push((self_name.clone(), self_span.clone(), \"PartialOrd\".to_string()));\n+                }\n+                if let Some(sym::Eq) = diagnostic_name {\n+                    derives.push((self_name.clone(), self_span.clone(), \"PartialEq\".to_string()));\n+                }\n                 derives.push((\n-                    format!(\"{}\", trait_pred.self_ty()),\n-                    self.tcx.def_span(adt.did),\n-                    format!(\"{}\", trait_pred.trait_ref.print_only_trait_name()),\n+                    self_name,\n+                    self_span,\n+                    trait_pred.trait_ref.print_only_trait_name().to_string(),\n                 ));\n             } else {\n                 traits.push(self.tcx.def_span(trait_pred.def_id()));"}, {"sha": "56fd5ffa89eea4080af1e38377f57702ae1885cd", "filename": "src/test/ui/derives/issue-91550.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8610edd01451e16d4fcb66324a27890c559fbf7b/src%2Ftest%2Fui%2Fderives%2Fissue-91550.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8610edd01451e16d4fcb66324a27890c559fbf7b/src%2Ftest%2Fui%2Fderives%2Fissue-91550.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fissue-91550.rs?ref=8610edd01451e16d4fcb66324a27890c559fbf7b", "patch": "@@ -0,0 +1,29 @@\n+use std::collections::HashSet;\n+\n+/// natural case from the issue\n+struct Value(u32);\n+\n+fn main() {\n+    let hs = HashSet::<Value>::new();\n+    hs.insert(Value(0)); //~ ERROR\n+}\n+\n+/// synthetic cases\n+pub struct NoDerives;\n+\n+struct Object<T>(T);\n+impl<T: Eq> Object<T> {\n+    fn use_eq(&self) {}\n+}\n+impl<T: Ord> Object<T> {\n+    fn use_ord(&self) {}\n+}\n+impl<T: Ord + PartialOrd> Object<T> {\n+    fn use_ord_and_partial_ord(&self) {}\n+}\n+\n+fn function(foo: Object<NoDerives>) {\n+    foo.use_eq(); //~ ERROR\n+    foo.use_ord(); //~ ERROR\n+    foo.use_ord_and_partial_ord(); //~ ERROR\n+}"}, {"sha": "2b88c35c6a39669db2846f6c8764a7bedaa6f98a", "filename": "src/test/ui/derives/issue-91550.stderr", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/8610edd01451e16d4fcb66324a27890c559fbf7b/src%2Ftest%2Fui%2Fderives%2Fissue-91550.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8610edd01451e16d4fcb66324a27890c559fbf7b/src%2Ftest%2Fui%2Fderives%2Fissue-91550.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fissue-91550.stderr?ref=8610edd01451e16d4fcb66324a27890c559fbf7b", "patch": "@@ -0,0 +1,84 @@\n+error[E0599]: the method `insert` exists for struct `HashSet<Value>`, but its trait bounds were not satisfied\n+  --> $DIR/issue-91550.rs:8:8\n+   |\n+LL | struct Value(u32);\n+   | ------------------\n+   | |\n+   | doesn't satisfy `Value: Eq`\n+   | doesn't satisfy `Value: Hash`\n+...\n+LL |     hs.insert(Value(0));\n+   |        ^^^^^^ method cannot be called on `HashSet<Value>` due to unsatisfied trait bounds\n+   |\n+   = note: the following trait bounds were not satisfied:\n+           `Value: Eq`\n+           `Value: Hash`\n+help: consider annotating `Value` with `#[derive(Eq, Hash, PartialEq)]`\n+   |\n+LL | #[derive(Eq, Hash, PartialEq)]\n+   |\n+\n+error[E0599]: the method `use_eq` exists for struct `Object<NoDerives>`, but its trait bounds were not satisfied\n+  --> $DIR/issue-91550.rs:26:9\n+   |\n+LL | pub struct NoDerives;\n+   | --------------------- doesn't satisfy `NoDerives: Eq`\n+LL | \n+LL | struct Object<T>(T);\n+   | -------------------- method `use_eq` not found for this\n+...\n+LL |     foo.use_eq();\n+   |         ^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds\n+   |\n+   = note: the following trait bounds were not satisfied:\n+           `NoDerives: Eq`\n+help: consider annotating `NoDerives` with `#[derive(Eq, PartialEq)]`\n+   |\n+LL | #[derive(Eq, PartialEq)]\n+   |\n+\n+error[E0599]: the method `use_ord` exists for struct `Object<NoDerives>`, but its trait bounds were not satisfied\n+  --> $DIR/issue-91550.rs:27:9\n+   |\n+LL | pub struct NoDerives;\n+   | --------------------- doesn't satisfy `NoDerives: Ord`\n+LL | \n+LL | struct Object<T>(T);\n+   | -------------------- method `use_ord` not found for this\n+...\n+LL |     foo.use_ord();\n+   |         ^^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds\n+   |\n+   = note: the following trait bounds were not satisfied:\n+           `NoDerives: Ord`\n+help: consider annotating `NoDerives` with `#[derive(Ord, PartialOrd)]`\n+   |\n+LL | #[derive(Ord, PartialOrd)]\n+   |\n+\n+error[E0599]: the method `use_ord_and_partial_ord` exists for struct `Object<NoDerives>`, but its trait bounds were not satisfied\n+  --> $DIR/issue-91550.rs:28:9\n+   |\n+LL | pub struct NoDerives;\n+   | ---------------------\n+   | |\n+   | doesn't satisfy `NoDerives: Ord`\n+   | doesn't satisfy `NoDerives: PartialOrd`\n+LL | \n+LL | struct Object<T>(T);\n+   | -------------------- method `use_ord_and_partial_ord` not found for this\n+...\n+LL |     foo.use_ord_and_partial_ord();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds\n+   |\n+   = note: the following trait bounds were not satisfied:\n+           `NoDerives: Ord`\n+           `NoDerives: PartialOrd`\n+help: consider annotating `NoDerives` with `#[derive(Ord, PartialOrd)]`\n+   |\n+LL | #[derive(Ord, PartialOrd)]\n+   |\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0599`."}]}