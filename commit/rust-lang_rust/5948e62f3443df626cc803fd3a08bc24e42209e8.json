{"sha": "5948e62f3443df626cc803fd3a08bc24e42209e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NDhlNjJmMzQ0M2RmNjI2Y2M4MDNmZDNhMDhiYzI0ZTQyMjA5ZTg=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-10-20T16:38:54Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-10-20T18:21:17Z"}, "message": "Sync LLVM submodule if it has been initialized\n\nSince having enabled the download-ci-llvm option,\nand having rebased on top of f05b47ccdfa63f8b4b9fb47a9aa92381801d3ff1,\nI've noticed that I had to update the llvm-project\nsubmodule manually if it was checked out.\nOrignally, the submodule update logic was\nintroduced to reduce the friction for contributors\nto manage the submodules, or in other words, to prevent\ngetting PRs that have unwanted submodule rollbacks\nbecause the contributors didn't run git submodule update.\n\nThis commit adds logic to ensure there is no inadvertent\nLLVM submodule rollback in a PR if download-ci-llvm\n(or llvm-config) is enabled. It will detect whether the\nllvm-project submodule is initialized, and if so, update\nit in any case. If it is not initialized, behaviour is\nkept to not do any update/initialization.\n\nAn alternative to the chosen implementation would\nbe to not pass the --init command line arg to\n`git submodule update` for the src/llvm-project\nsubmodule. This would show a confusing error message\nhowever on all builds with an uninitialized repo.\nWe could pass the --silent param, but we still want\nit to print something if it is initialized and has\nto update something.\nSo we just do a manual check for whether the\nsubmodule is initialized.", "tree": {"sha": "c53cd1af2be92f0ef3feb278cb7ab2df8b2e544e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c53cd1af2be92f0ef3feb278cb7ab2df8b2e544e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5948e62f3443df626cc803fd3a08bc24e42209e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5948e62f3443df626cc803fd3a08bc24e42209e8", "html_url": "https://github.com/rust-lang/rust/commit/5948e62f3443df626cc803fd3a08bc24e42209e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5948e62f3443df626cc803fd3a08bc24e42209e8/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463", "html_url": "https://github.com/rust-lang/rust/commit/4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "a14c12a39e5e42e9fd3e7b8e9a23dccf2bfa0be8", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5948e62f3443df626cc803fd3a08bc24e42209e8/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/5948e62f3443df626cc803fd3a08bc24e42209e8/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=5948e62f3443df626cc803fd3a08bc24e42209e8", "patch": "@@ -891,10 +891,15 @@ def update_submodules(self):\n         ).decode(default_encoding).splitlines()]\n         filtered_submodules = []\n         submodules_names = []\n+        llvm_checked_out = os.path.exists(os.path.join(self.rust_root, \"src/llvm-project/.git\"))\n         for module in submodules:\n             if module.endswith(\"llvm-project\"):\n+                # Don't sync the llvm-project submodule either if an external LLVM\n+                # was provided, or if we are downloading LLVM. Also, if the\n+                # submodule has been initialized already, sync it anyways so that\n+                # it doesn't mess up contributor pull requests.\n                 if self.get_toml('llvm-config') or self.downloading_llvm():\n-                    if self.get_toml('lld') != 'true':\n+                    if self.get_toml('lld') != 'true' and not llvm_checked_out:\n                         continue\n             check = self.check_submodule(module, slow_submodules)\n             filtered_submodules.append((module, check))"}]}