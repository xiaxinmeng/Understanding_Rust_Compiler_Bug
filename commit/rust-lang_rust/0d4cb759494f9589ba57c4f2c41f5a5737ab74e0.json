{"sha": "0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNGNiNzU5NDk0Zjk1ODliYTU3YzRmMmM0MWY1YTU3MzdhYjc0ZTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-09T22:06:43Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-09T22:06:43Z"}, "message": "rustc: Create def IDs for region parameters", "tree": {"sha": "d36e4a9ce8a6be94b2e2eb98c1bdf44c74dff675", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d36e4a9ce8a6be94b2e2eb98c1bdf44c74dff675"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "html_url": "https://github.com/rust-lang/rust/commit/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2975bcdd7d9ee0772f1d0a106898eca26fa0a5c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2975bcdd7d9ee0772f1d0a106898eca26fa0a5c4", "html_url": "https://github.com/rust-lang/rust/commit/2975bcdd7d9ee0772f1d0a106898eca26fa0a5c4"}], "stats": {"total": 1740, "additions": 899, "deletions": 841}, "files": [{"sha": "6775b539ec572af7e3ffb0b591316b791ae922c8", "filename": "src/rustc/metadata/astencode.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fmetadata%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fmetadata%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fastencode.rs?ref=0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "patch": "@@ -434,6 +434,7 @@ impl of tr for ast::def {\n           ast::def_class_method(did0, did1) {\n             ast::def_class_method(did0.tr(xcx), did1.tr(xcx))\n           }\n+          ast::def_region_param(did) { ast::def_region_param(did.tr(xcx)) }\n         }\n     }\n }\n@@ -1004,4 +1005,4 @@ fn test_simplification() {\n       }\n       _ { fail; }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "1688c5afb1d1323fe6b622eaf324936488270db9", "filename": "src/rustc/metadata/astencode_gen.rs", "status": "modified", "additions": 886, "deletions": 834, "changes": 1720, "blob_url": "https://github.com/rust-lang/rust/blob/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fmetadata%2Fastencode_gen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fmetadata%2Fastencode_gen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fastencode_gen.rs?ref=0d4cb759494f9589ba57c4f2c41f5a5737ab74e0"}, {"sha": "9a69e549fd1cf4056ad1a394e71df1704a987b7e", "filename": "src/rustc/middle/resolve.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fresolve.rs?ref=0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "patch": "@@ -1711,7 +1711,8 @@ fn ns_for_def(d: def) -> namespace {\n           { ns_val(value_or_enum) }\n       ast::def_mod(_) | ast::def_native_mod(_) { ns_module }\n       ast::def_ty(_) | ast::def_binding(_) | ast::def_use(_) |\n-      ast::def_ty_param(_, _) | ast::def_prim_ty(_) | ast::def_class(_)\n+      ast::def_ty_param(_, _) | ast::def_prim_ty(_) | ast::def_class(_) |\n+      ast::def_region_param(_)\n       { ns_type }\n     }\n }"}, {"sha": "6445d3f4bf2538566cda437f741c950e5577bc27", "filename": "src/rustc/syntax/ast.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fsyntax%2Fast.rs?ref=0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "patch": "@@ -28,6 +28,8 @@ enum ty_param_bound {\n \n type ty_param = {ident: ident, id: node_id, bounds: @[ty_param_bound]};\n \n+type region_param = {ident: ident, id: node_id};\n+\n enum def {\n     def_fn(def_id, purity),\n     def_self(node_id),\n@@ -50,7 +52,8 @@ enum def {\n     def_class_field(def_id, def_id),\n     // No purity allowed for now, I guess\n     // (simpler this way, b/c presumably methods read mutable state)\n-    def_class_method(def_id, def_id)\n+    def_class_method(def_id, def_id),\n+    def_region_param(def_id),\n }\n \n // The set of meta_items that define the compilation environment of the crate,\n@@ -342,7 +345,7 @@ enum prim_ty {\n \n enum region {\n     re_inferred,\n-    re_named(ident),\n+    re_named(region_param),\n     re_self\n }\n "}, {"sha": "e6e539244ed9a13c1b307434ee7537cd7a17ce5f", "filename": "src/rustc/syntax/ast_util.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fsyntax%2Fast_util.rs?ref=0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "patch": "@@ -39,7 +39,8 @@ fn def_id_of_def(d: def) -> def_id {\n       def_native_mod(id) | def_const(id) |\n       def_variant(_, id) | def_ty(id) | def_ty_param(id, _) |\n       def_use(id) |\n-      def_class(id) | def_class_field(_, id) | def_class_method(_, id) { id }\n+      def_class(id) | def_class_field(_, id) | def_class_method(_, id) |\n+      def_region_param(id) { id }\n \n       def_arg(id, _) | def_local(id, _) | def_self(id) |\n       def_upvar(id, _, _) | def_binding(id) {"}, {"sha": "2e3eac602caa8a0a7be581858172746d2afe8124", "filename": "src/rustc/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fsyntax%2Fparse%2Fparser.rs?ref=0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "patch": "@@ -424,7 +424,7 @@ fn parse_region(p: parser) -> ast::region {\n             if string == \"self\" {\n                 ast::re_self\n             } else {\n-                ast::re_named(string)\n+                ast::re_named({ ident: string, id: p.get_id()})\n             }\n         }\n         _ { ast::re_inferred }"}, {"sha": "e11ad472df8bd2850e02eb5591268cd4320cb61e", "filename": "src/rustc/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d4cb759494f9589ba57c4f2c41f5a5737ab74e0/src%2Frustc%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fsyntax%2Fprint%2Fpprust.rs?ref=0d4cb759494f9589ba57c4f2c41f5a5737ab74e0", "patch": "@@ -316,7 +316,7 @@ fn print_native_mod(s: ps, nmod: ast::native_mod, attrs: [ast::attribute]) {\n fn print_region(s: ps, region: ast::region) {\n     alt region {\n       ast::re_inferred { /* no-op */ }\n-      ast::re_named(name) { word(s.s, name); word(s.s, \".\"); }\n+      ast::re_named(name) { word(s.s, name.ident); word(s.s, \".\"); }\n       ast::re_self { word(s.s, \"self\"); word(s.s, \".\"); }\n     }\n }"}]}