{"sha": "2e39d4757b239490269f37d6c975da83add042e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMzlkNDc1N2IyMzk0OTAyNjlmMzdkNmM5NzVkYTgzYWRkMDQyZTI=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-20T16:05:25Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-20T16:05:25Z"}, "message": "More tests", "tree": {"sha": "7606b93b35c3fa8d6e83b0a70a6c29f885ced0d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7606b93b35c3fa8d6e83b0a70a6c29f885ced0d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e39d4757b239490269f37d6c975da83add042e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e39d4757b239490269f37d6c975da83add042e2", "html_url": "https://github.com/rust-lang/rust/commit/2e39d4757b239490269f37d6c975da83add042e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e39d4757b239490269f37d6c975da83add042e2/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb71ebb985bc7869028d922d37d1edc4464e4aa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb71ebb985bc7869028d922d37d1edc4464e4aa8", "html_url": "https://github.com/rust-lang/rust/commit/bb71ebb985bc7869028d922d37d1edc4464e4aa8"}], "stats": {"total": 120, "additions": 81, "deletions": 39}, "files": [{"sha": "8cab677f5aefbab858617e5abde6e57acdc8ec43", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 81, "deletions": 39, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/2e39d4757b239490269f37d6c975da83add042e2/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e39d4757b239490269f37d6c975da83add042e2/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=2e39d4757b239490269f37d6c975da83add042e2", "patch": "@@ -463,7 +463,7 @@ mod tests {\n     use super::*;\n \n     #[test]\n-    fn test_doc_url_crate() {\n+    fn external_docs_doc_url_crate() {\n         check_external_docs(\n             r#\"\n //- /main.rs crate:main deps:test\n@@ -476,7 +476,7 @@ pub struct Foo;\n     }\n \n     #[test]\n-    fn test_doc_url_struct() {\n+    fn external_docs_doc_url_struct() {\n         check_external_docs(\n             r#\"\n pub struct Fo$0o;\n@@ -486,7 +486,19 @@ pub struct Fo$0o;\n     }\n \n     #[test]\n-    fn test_doc_url_fn() {\n+    fn external_docs_doc_url_struct_field() {\n+        check_external_docs(\n+            r#\"\n+pub struct Foo {\n+    field$0: ()\n+}\n+\"#,\n+            expect![[r##\"https://docs.rs/test/*/test/struct.Foo.html#structfield.field\"##]],\n+        );\n+    }\n+\n+    #[test]\n+    fn external_docs_doc_url_fn() {\n         check_external_docs(\n             r#\"\n pub fn fo$0o() {}\n@@ -496,73 +508,119 @@ pub fn fo$0o() {}\n     }\n \n     #[test]\n-    fn test_doc_url_inherent_method() {\n+    fn external_docs_doc_url_impl_assoc() {\n         check_external_docs(\n             r#\"\n pub struct Foo;\n impl Foo {\n-    pub fn met$0hod() {}\n+    pub fn method$0() {}\n }\n \"#,\n             expect![[r##\"https://docs.rs/test/*/test/struct.Foo.html#method.method\"##]],\n         );\n+        check_external_docs(\n+            r#\"\n+pub struct Foo;\n+impl Foo {\n+    const CONST$0: () = ();\n+}\n+\"#,\n+            expect![[r##\"https://docs.rs/test/*/test/struct.Foo.html#associatedconstant.CONST\"##]],\n+        );\n     }\n \n     #[test]\n-    fn test_doc_url_impl_trait_method() {\n+    fn external_docs_doc_url_impl_trait_assoc() {\n         check_external_docs(\n             r#\"\n pub struct Foo;\n pub trait Trait {\n-    fn met hod();\n+    fn method() {}\n }\n impl Trait for Foo {\n-    pub fn met$0hod() {}\n+    pub fn method$0() {}\n }\n \"#,\n             expect![[r##\"https://docs.rs/test/*/test/struct.Foo.html#method.method\"##]],\n         );\n+        check_external_docs(\n+            r#\"\n+pub struct Foo;\n+pub trait Trait {\n+    const CONST: () = ();\n+}\n+impl Trait for Foo {\n+    const CONST$0: () = ();\n+}\n+\"#,\n+            expect![[r##\"https://docs.rs/test/*/test/struct.Foo.html#associatedconstant.CONST\"##]],\n+        );\n+        check_external_docs(\n+            r#\"\n+pub struct Foo;\n+pub trait Trait {\n+    type Type;\n+}\n+impl Trait for Foo {\n+    type Type$0 = ();\n+}\n+\"#,\n+            expect![[r##\"https://docs.rs/test/*/test/struct.Foo.html#associatedtype.Type\"##]],\n+        );\n     }\n \n     #[test]\n-    fn test_doc_url_trait_required_method() {\n+    fn external_docs_doc_url_trait_assoc() {\n         check_external_docs(\n             r#\"\n pub trait Foo {\n-    fn met$0hod();\n+    fn method$0();\n }\n \"#,\n             expect![[r##\"https://docs.rs/test/*/test/trait.Foo.html#tymethod.method\"##]],\n         );\n+        check_external_docs(\n+            r#\"\n+pub trait Foo {\n+    const CONST$0: ();\n+}\n+\"#,\n+            expect![[r##\"https://docs.rs/test/*/test/trait.Foo.html#associatedconstant.CONST\"##]],\n+        );\n+        check_external_docs(\n+            r#\"\n+pub trait Foo {\n+    type Type$0;\n+}\n+\"#,\n+            expect![[r##\"https://docs.rs/test/*/test/trait.Foo.html#associatedtype.Type\"##]],\n+        );\n     }\n \n     #[test]\n-    fn test_doc_url_field() {\n+    fn external_docs_trait() {\n         check_external_docs(\n             r#\"\n-pub struct Foo {\n-    pub fie$0ld: ()\n-}\n-\n+trait Trait$0 {}\n \"#,\n-            expect![[r##\"https://docs.rs/test/*/test/struct.Foo.html#structfield.field\"##]],\n-        );\n+            expect![[r#\"https://docs.rs/test/*/test/trait.Trait.html\"#]],\n+        )\n     }\n \n     #[test]\n-    fn test_module() {\n+    fn external_docs_module() {\n         check_external_docs(\n             r#\"\n pub mod foo {\n     pub mod ba$0r {}\n }\n-        \"#,\n+\"#,\n             expect![[r#\"https://docs.rs/test/*/test/foo/bar/index.html\"#]],\n         )\n     }\n \n     #[test]\n-    fn test_reexport_order() {\n+    fn external_docs_reexport_order() {\n         check_external_docs(\n             r#\"\n pub mod wrapper {\n@@ -603,7 +661,7 @@ trait Trait$0 {\n     }\n \n     #[test]\n-    fn test_rewrite_html_root_url() {\n+    fn rewrite_html_root_url() {\n         check_rewrite(\n             r#\"\n #![doc(arbitrary_attribute = \"test\", html_root_url = \"https:/example.com\", arbitrary_attribute2)]\n@@ -619,7 +677,7 @@ pub struct B$0ar\n     }\n \n     #[test]\n-    fn test_rewrite_on_field() {\n+    fn rewrite_on_field() {\n         // FIXME: Should be\n         //  [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n         check_rewrite(\n@@ -634,7 +692,7 @@ pub struct Foo {\n     }\n \n     #[test]\n-    fn test_rewrite_struct() {\n+    fn rewrite_struct() {\n         check_rewrite(\n             r#\"\n /// [Foo]\n@@ -674,22 +732,6 @@ pub struct $0Foo;\n         );\n     }\n \n-    #[test]\n-    fn test_rewrite() {\n-        check_rewrite(\n-            r#\"\n-pub trait Foo {\n-    fn buzz() -> usize;\n-}\n-/// [Foo][buzz]\n-///\n-/// [buzz]: Foo::buzz\n-pub struct Bar$0;\n-\"#,\n-            expect![[r###\"[Foo](https://docs.rs/test/*/test/trait.Foo.html#tymethod.buzz)\"###]],\n-        )\n-    }\n-\n     fn check_external_docs(ra_fixture: &str, expect: Expect) {\n         let (analysis, position) = fixture::position(ra_fixture);\n         let url = analysis.external_docs(position).unwrap().expect(\"could not find url for symbol\");"}]}