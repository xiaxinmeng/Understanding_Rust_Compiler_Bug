{"sha": "37abcda42b5060eafd65bf9fe6a6861efa5f0c15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YWJjZGE0MmI1MDYwZWFmZDY1YmY5ZmU2YTY4NjFlZmE1ZjBjMTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-05-18T00:20:58Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-05-18T00:20:58Z"}, "message": "rustc: Make type_is_pod class-aware", "tree": {"sha": "579f85e9a5db71def3c6b656fe1fe878aa749956", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/579f85e9a5db71def3c6b656fe1fe878aa749956"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37abcda42b5060eafd65bf9fe6a6861efa5f0c15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37abcda42b5060eafd65bf9fe6a6861efa5f0c15", "html_url": "https://github.com/rust-lang/rust/commit/37abcda42b5060eafd65bf9fe6a6861efa5f0c15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37abcda42b5060eafd65bf9fe6a6861efa5f0c15/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f45ba4744cec88bfac0b1672b13409aa5ebb42f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f45ba4744cec88bfac0b1672b13409aa5ebb42f", "html_url": "https://github.com/rust-lang/rust/commit/7f45ba4744cec88bfac0b1672b13409aa5ebb42f"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "3b8fe334dc4c5d3c271d98432bf8a01342e466f5", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/37abcda42b5060eafd65bf9fe6a6861efa5f0c15/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37abcda42b5060eafd65bf9fe6a6861efa5f0c15/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=37abcda42b5060eafd65bf9fe6a6861efa5f0c15", "patch": "@@ -1686,6 +1686,13 @@ fn type_is_pod(cx: ctxt, ty: t) -> bool {\n       ty_constr(subt, _) { result = type_is_pod(cx, subt); }\n       ty_param(_, _) { result = false; }\n       ty_opaque_closure_ptr(_) { result = true; }\n+      ty_class(did, substs) {\n+        result = vec::any(lookup_class_fields(cx, did)) { |f|\n+            let fty = ty::lookup_item_type(cx, f.id);\n+            let sty = subst(cx, substs, fty.ty);\n+            type_is_pod(cx, sty)\n+        };\n+      }\n       _ { cx.sess.bug(\"unexpected type in type_is_pod\"); }\n     }\n "}]}