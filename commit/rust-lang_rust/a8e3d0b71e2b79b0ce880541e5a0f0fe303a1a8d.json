{"sha": "a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZTNkMGI3MWUyYjc5YjBjZTg4MDU0MWU1YTBmMGZlMzAzYTFhOGQ=", "commit": {"author": {"name": "sapir", "email": "yasapir@gmail.com", "date": "2020-03-06T08:03:34Z"}, "committer": {"name": "sapir", "email": "yasapir@gmail.com", "date": "2020-04-10T00:55:52Z"}, "message": "Replace non-shorthand variables with _, not _var", "tree": {"sha": "1bdbd5ee353134a9357633753365ddca65188dfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bdbd5ee353134a9357633753365ddca65188dfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d", "html_url": "https://github.com/rust-lang/rust/commit/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d/comments", "author": {"login": "sapir", "id": 896766, "node_id": "MDQ6VXNlcjg5Njc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/896766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sapir", "html_url": "https://github.com/sapir", "followers_url": "https://api.github.com/users/sapir/followers", "following_url": "https://api.github.com/users/sapir/following{/other_user}", "gists_url": "https://api.github.com/users/sapir/gists{/gist_id}", "starred_url": "https://api.github.com/users/sapir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sapir/subscriptions", "organizations_url": "https://api.github.com/users/sapir/orgs", "repos_url": "https://api.github.com/users/sapir/repos", "events_url": "https://api.github.com/users/sapir/events{/privacy}", "received_events_url": "https://api.github.com/users/sapir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sapir", "id": 896766, "node_id": "MDQ6VXNlcjg5Njc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/896766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sapir", "html_url": "https://github.com/sapir", "followers_url": "https://api.github.com/users/sapir/followers", "following_url": "https://api.github.com/users/sapir/following{/other_user}", "gists_url": "https://api.github.com/users/sapir/gists{/gist_id}", "starred_url": "https://api.github.com/users/sapir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sapir/subscriptions", "organizations_url": "https://api.github.com/users/sapir/orgs", "repos_url": "https://api.github.com/users/sapir/repos", "events_url": "https://api.github.com/users/sapir/events{/privacy}", "received_events_url": "https://api.github.com/users/sapir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e22e443208b4e6e1f0bf430877b19ecbf7a3d0ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/e22e443208b4e6e1f0bf430877b19ecbf7a3d0ca", "html_url": "https://github.com/rust-lang/rust/commit/e22e443208b4e6e1f0bf430877b19ecbf7a3d0ca"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "24f6d1a9c58941c4bee3a40abf7a4071d9f0420d", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d", "patch": "@@ -1556,15 +1556,16 @@ impl<'tcx> Liveness<'_, 'tcx> {\n                             .map(|(_, span)| (span, format!(\"{}: _\", name)))\n                             .collect::<Vec<_>>();\n \n-                        let non_shorthands = non_shorthands\n-                            .into_iter()\n-                            .map(|(_, span)| (span, format!(\"_{}\", name)))\n-                            .collect::<Vec<_>>();\n-\n                         // If we have both shorthand and non-shorthand, prefer the \"try ignoring\n-                        // the field\" message.\n+                        // the field\" message, and suggest `_` for the non-shorthands. If we only\n+                        // have non-shorthand, then prefix with an underscore instead.\n                         if !shorthands.is_empty() {\n-                            shorthands.extend(non_shorthands);\n+                            shorthands.extend(\n+                                non_shorthands\n+                                    .into_iter()\n+                                    .map(|(_, span)| (span, \"_\".to_string()))\n+                                    .collect::<Vec<_>>(),\n+                            );\n \n                             err.multipart_suggestion(\n                                 \"try ignoring the field\",\n@@ -1574,7 +1575,10 @@ impl<'tcx> Liveness<'_, 'tcx> {\n                         } else {\n                             err.multipart_suggestion(\n                                 \"if this is intentional, prefix it with an underscore\",\n-                                non_shorthands,\n+                                non_shorthands\n+                                    .into_iter()\n+                                    .map(|(_, span)| (span, format!(\"_{}\", name)))\n+                                    .collect::<Vec<_>>(),\n                                 Applicability::MachineApplicable,\n                             );\n                         }"}, {"sha": "f842fcebe1f8ffc5dd3a2718ab1d37bcd4fc757b", "filename": "src/test/ui/lint/issue-67691-unused-field-in-or-pattern.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.fixed?ref=a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d", "patch": "@@ -59,15 +59,15 @@ pub fn inner_with_ref(x: Option<MyEnum>) {\n \n pub fn mixed_no_ref(x: MixedEnum) {\n     match x {\n-        MixedEnum::A { i: _ } | MixedEnum::B(_i) => {\n+        MixedEnum::A { i: _ } | MixedEnum::B(_) => {\n             println!(\"match\");\n         }\n     }\n }\n \n pub fn mixed_with_ref(x: MixedEnum) {\n     match x {\n-        MixedEnum::A { i: _ } | MixedEnum::B(_i) => {\n+        MixedEnum::A { i: _ } | MixedEnum::B(_) => {\n             println!(\"match\");\n         }\n     }"}, {"sha": "8aefe243a944b497575cd0418829bd07dc6f658a", "filename": "src/test/ui/lint/issue-67691-unused-field-in-or-pattern.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-67691-unused-field-in-or-pattern.stderr?ref=a8e3d0b71e2b79b0ce880541e5a0f0fe303a1a8d", "patch": "@@ -56,8 +56,8 @@ LL |         MixedEnum::A { i } | MixedEnum::B(i) => {\n    |\n help: try ignoring the field\n    |\n-LL |         MixedEnum::A { i: _ } | MixedEnum::B(_i) => {\n-   |                        ^^^^                  ^^\n+LL |         MixedEnum::A { i: _ } | MixedEnum::B(_) => {\n+   |                        ^^^^                  ^\n \n error: unused variable: `i`\n   --> $DIR/issue-67691-unused-field-in-or-pattern.rs:70:24\n@@ -67,8 +67,8 @@ LL |         MixedEnum::A { ref i } | MixedEnum::B(ref i) => {\n    |\n help: try ignoring the field\n    |\n-LL |         MixedEnum::A { i: _ } | MixedEnum::B(_i) => {\n-   |                        ^^^^                  ^^\n+LL |         MixedEnum::A { i: _ } | MixedEnum::B(_) => {\n+   |                        ^^^^                  ^\n \n error: aborting due to 6 previous errors\n "}]}