{"sha": "a313abe3ba989ba4b6c041627c903488886f8559", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMTNhYmUzYmE5ODliYTRiNmMwNDE2MjdjOTAzNDg4ODg2Zjg1NTk=", "commit": {"author": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-08-08T23:28:59Z"}, "committer": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-08-10T21:06:04Z"}, "message": "Manually implement Debug for BTreeMap::{IntoKeys,IntoValues} structs", "tree": {"sha": "24c95a0f9bef1f8fae12e834d8922adb9493866a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24c95a0f9bef1f8fae12e834d8922adb9493866a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a313abe3ba989ba4b6c041627c903488886f8559", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEpYetfNnk4ATM3f2Aci54bwcpZHoFAl8xtrwACgkQci54bwcp\nZHp73xAAhEVXLvN4KE8d+W/OP/6w//Y2TV0vonZUxrJHtknPmjkuxn7kXTVTdaQE\ngGjfKBHdEzReLOwCFxmgsJJ10QJes1p60s3morLOtqMaH06j1/xWCDRPpxdlGf8e\nFAFwxCFTVXqztRbnaTaQka9r+NFP0Zqn/M1sc44Hpt/vJe08VOJZskgzhM6kDcev\nEmBPp53K5rBEiX4imWP48258vtY5TxsZr9PeciZdhzLmthbL7/XBsw8KwPMZZgqH\nmDKr4M6pRx551RKywoav3i6Uidx6ZHn1T5UxppndkbHas+RG6/Qxiy/qhECE9l9l\nvOH4WOeQlwOtDHJCuHzxA1mp4ikr9iIqEb7q5gEQJEtdLHZXlUmUfNCeMEc07Lt6\neZ5Wdzr584JOy+04tMFcUrX75Y3hAakkZwYFMadJoRUt+Qwet99/NfcfiyFkvx1r\n/zlkNlvr//ovRW5leJSJoeIkQBkcOMb/Nb8QESCDFMf/6D7psBT9jIoj4VmwSHGc\n82eekCNJllfFlwUSBKjYWX4rOU92fGNQJMgKz96V8ZrBLHMVeVdPkC3M5z6dB/Tb\njiObFUZ0+VSr2erh9mO+5RTOVTCdwI3YVKv7tXcqkZy5uTFqacAOFJGh+9fzUXPx\nsVW16It/00teSSI/eusYx1r48UdwlMRf5X5K+o3cg3QMvt+NI6g=\n=7QpH\n-----END PGP SIGNATURE-----", "payload": "tree 24c95a0f9bef1f8fae12e834d8922adb9493866a\nparent 1facd4a77b181ad44b9c9a64f0fd21b6d5180458\nauthor Naz\u0131m Can Alt\u0131nova <canaltinova@gmail.com> 1596929339 +0200\ncommitter Naz\u0131m Can Alt\u0131nova <canaltinova@gmail.com> 1597093564 +0200\n\nManually implement Debug for BTreeMap::{IntoKeys,IntoValues} structs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a313abe3ba989ba4b6c041627c903488886f8559", "html_url": "https://github.com/rust-lang/rust/commit/a313abe3ba989ba4b6c041627c903488886f8559", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a313abe3ba989ba4b6c041627c903488886f8559/comments", "author": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1facd4a77b181ad44b9c9a64f0fd21b6d5180458", "url": "https://api.github.com/repos/rust-lang/rust/commits/1facd4a77b181ad44b9c9a64f0fd21b6d5180458", "html_url": "https://github.com/rust-lang/rust/commit/1facd4a77b181ad44b9c9a64f0fd21b6d5180458"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "37bca05b97640f1fcaac0416c0416fea843ce06a", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a313abe3ba989ba4b6c041627c903488886f8559/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a313abe3ba989ba4b6c041627c903488886f8559/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=a313abe3ba989ba4b6c041627c903488886f8559", "patch": "@@ -298,14 +298,23 @@ pub struct IntoIter<K, V> {\n     length: usize,\n }\n \n-#[stable(feature = \"collection_debug\", since = \"1.17.0\")]\n-impl<K: fmt::Debug, V: fmt::Debug> fmt::Debug for IntoIter<K, V> {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+impl<K, V> IntoIter<K, V> {\n+    /// Returns an iterator of references over the remaining items.\n+    #[inline]\n+    pub(super) fn iter(&self) -> Iter<'_, K, V> {\n         let range = Range {\n             front: self.front.as_ref().map(|f| f.reborrow()),\n             back: self.back.as_ref().map(|b| b.reborrow()),\n         };\n-        f.debug_list().entries(range).finish()\n+\n+        Iter { range: range, length: self.length }\n+    }\n+}\n+\n+#[stable(feature = \"collection_debug\", since = \"1.17.0\")]\n+impl<K: fmt::Debug, V: fmt::Debug> fmt::Debug for IntoIter<K, V> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_list().entries(self.iter()).finish()\n     }\n }\n \n@@ -364,23 +373,35 @@ pub struct ValuesMut<'a, K: 'a, V: 'a> {\n ///\n /// [`into_keys`]: BTreeMap::into_keys\n #[unstable(feature = \"map_into_keys_values\", issue = \"75294\")]\n-#[derive(Debug)]\n pub struct IntoKeys<K, V> {\n     inner: IntoIter<K, V>,\n }\n \n+#[unstable(feature = \"map_into_keys_values\", issue = \"75294\")]\n+impl<K: fmt::Debug, V> fmt::Debug for IntoKeys<K, V> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_list().entries(self.inner.iter().map(|(key, _)| key)).finish()\n+    }\n+}\n+\n /// An owning iterator over the values of a `BTreeMap`.\n ///\n /// This `struct` is created by the [`into_values`] method on [`BTreeMap`].\n /// See its documentation for more.\n ///\n /// [`into_values`]: BTreeMap::into_values\n #[unstable(feature = \"map_into_keys_values\", issue = \"75294\")]\n-#[derive(Debug)]\n pub struct IntoValues<K, V> {\n     inner: IntoIter<K, V>,\n }\n \n+#[unstable(feature = \"map_into_keys_values\", issue = \"75294\")]\n+impl<K, V: fmt::Debug> fmt::Debug for IntoValues<K, V> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_list().entries(self.inner.iter().map(|(_, val)| val)).finish()\n+    }\n+}\n+\n /// An iterator over a sub-range of entries in a `BTreeMap`.\n ///\n /// This `struct` is created by the [`range`] method on [`BTreeMap`]. See its"}]}