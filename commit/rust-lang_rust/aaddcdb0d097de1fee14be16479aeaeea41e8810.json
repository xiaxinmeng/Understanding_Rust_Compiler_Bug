{"sha": "aaddcdb0d097de1fee14be16479aeaeea41e8810", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZGRjZGIwZDA5N2RlMWZlZTE0YmUxNjQ3OWFlYWVlYTQxZTg4MTA=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-09-20T16:37:05Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-09-20T16:37:05Z"}, "message": "Fix nits", "tree": {"sha": "2020e9a19c22fccc58cc06900806d74163c6ad17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2020e9a19c22fccc58cc06900806d74163c6ad17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaddcdb0d097de1fee14be16479aeaeea41e8810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaddcdb0d097de1fee14be16479aeaeea41e8810", "html_url": "https://github.com/rust-lang/rust/commit/aaddcdb0d097de1fee14be16479aeaeea41e8810", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaddcdb0d097de1fee14be16479aeaeea41e8810/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58", "url": "https://api.github.com/repos/rust-lang/rust/commits/b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58", "html_url": "https://github.com/rust-lang/rust/commit/b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "eab26b6c7150ca69feba282d03556a66b8868f54", "filename": "library/std/src/sync/barrier.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aaddcdb0d097de1fee14be16479aeaeea41e8810/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaddcdb0d097de1fee14be16479aeaeea41e8810/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs?ref=aaddcdb0d097de1fee14be16479aeaeea41e8810", "patch": "@@ -150,8 +150,8 @@ impl fmt::Debug for BarrierWaitResult {\n }\n \n impl BarrierWaitResult {\n-    /// Returns `true` if this thread from [`Barrier::wait()`] is the\n-    /// \"leader thread\".\n+    /// Returns `true` if this thread is the \"leader thread\" for the call to\n+    /// [`Barrier::wait()`].\n     ///\n     /// Only one thread will have `true` returned from their result, all other\n     /// threads will have `false` returned."}, {"sha": "de5ddf1daf27b5d76e1cc46d075a4658518c1421", "filename": "library/std/src/sync/once.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aaddcdb0d097de1fee14be16479aeaeea41e8810/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaddcdb0d097de1fee14be16479aeaeea41e8810/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs?ref=aaddcdb0d097de1fee14be16479aeaeea41e8810", "patch": "@@ -95,8 +95,7 @@ use crate::thread::{self, Thread};\n \n /// A synchronization primitive which can be used to run a one-time global\n /// initialization. Useful for one-time initialization for FFI or related\n-/// functionality. This type can only be constructed with the [`Once::new()`]\n-/// constructor.\n+/// functionality. This type can only be constructed with [`Once::new()`].\n ///\n /// # Examples\n ///"}]}