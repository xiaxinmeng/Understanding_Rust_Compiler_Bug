{"sha": "3fab50019c0e19fbd06891c83038b1593ba7901a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmYWI1MDAxOWMwZTE5ZmJkMDY4OTFjODMwMzhiMTU5M2JhNzkwMWE=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-26T11:30:41Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-26T18:26:24Z"}, "message": "Simplify", "tree": {"sha": "b04dbb5ee4548cb706542fd8221579446e1e80c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b04dbb5ee4548cb706542fd8221579446e1e80c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fab50019c0e19fbd06891c83038b1593ba7901a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fab50019c0e19fbd06891c83038b1593ba7901a", "html_url": "https://github.com/rust-lang/rust/commit/3fab50019c0e19fbd06891c83038b1593ba7901a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fab50019c0e19fbd06891c83038b1593ba7901a/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d571ca814e4efa64bc905df1789a2cf03beb6f62", "url": "https://api.github.com/repos/rust-lang/rust/commits/d571ca814e4efa64bc905df1789a2cf03beb6f62", "html_url": "https://github.com/rust-lang/rust/commit/d571ca814e4efa64bc905df1789a2cf03beb6f62"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "40e570bbbaeee0db442ecadd1713e3f8900f3ec3", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3fab50019c0e19fbd06891c83038b1593ba7901a/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fab50019c0e19fbd06891c83038b1593ba7901a/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=3fab50019c0e19fbd06891c83038b1593ba7901a", "patch": "@@ -24,6 +24,7 @@ use crate::{\n     FilePosition, Semantics,\n };\n \n+/// Weblink to an item's documentation.\n pub(crate) type DocumentationLink = String;\n \n /// Rewrite documentation links in markdown to point to an online host (e.g. docs.rs)"}, {"sha": "ca22b10dfcb53edda387d21e13ebca94eb0568b8", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3fab50019c0e19fbd06891c83038b1593ba7901a/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fab50019c0e19fbd06891c83038b1593ba7901a/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=3fab50019c0e19fbd06891c83038b1593ba7901a", "patch": "@@ -43,11 +43,10 @@ pub(crate) fn goto_definition(\n     let parent = token.parent()?;\n     if let Some(_) = ast::Comment::cast(token.clone()) {\n         let (attributes, def) = doc_attributes(&sema, &parent)?;\n-\n         let (docs, doc_mapping) = attributes.docs_with_rangemap(db)?;\n         let (_, link, ns) =\n-            extract_definitions_from_docs(&docs).into_iter().find(|(range, ..)| {\n-                doc_mapping.map(*range).map_or(false, |InFile { file_id, value: range }| {\n+            extract_definitions_from_docs(&docs).into_iter().find(|&(range, ..)| {\n+                doc_mapping.map(range).map_or(false, |InFile { file_id, value: range }| {\n                     file_id == position.file_id.into() && range.contains(position.offset)\n                 })\n             })?;"}, {"sha": "35601f2efc7a0d9df7d43c1b99d1dcbd7879c1bf", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fab50019c0e19fbd06891c83038b1593ba7901a/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fab50019c0e19fbd06891c83038b1593ba7901a/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=3fab50019c0e19fbd06891c83038b1593ba7901a", "patch": "@@ -120,12 +120,8 @@ pub(crate) fn hover(\n                     let (docs, doc_mapping) = attributes.docs_with_rangemap(db)?;\n                     let (idl_range, link, ns) =\n                         extract_definitions_from_docs(&docs).into_iter().find_map(|(range, link, ns)| {\n-                            let hir::InFile { file_id, value: range } = doc_mapping.map(range)?;\n-                            if file_id == position.file_id.into() && range.contains(position.offset) {\n-                                Some((range, link, ns))\n-                            } else {\n-                                None\n-                            }\n+                            let hir::InFile { file_id, value: mapped_range } = doc_mapping.map(range)?;\n+                            (file_id == position.file_id.into() && mapped_range.contains(position.offset)).then(||(mapped_range, link, ns))\n                         })?;\n                     range = Some(idl_range);\n                     resolve_doc_path_for_def(db, def, &link, ns).map(Definition::ModuleDef)"}, {"sha": "7c9fd46fc57958563e2afb2368c52d176b91c46b", "filename": "crates/ide/src/syntax_highlighting/inject.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fab50019c0e19fbd06891c83038b1593ba7901a/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fab50019c0e19fbd06891c83038b1593ba7901a/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs?ref=3fab50019c0e19fbd06891c83038b1593ba7901a", "patch": "@@ -107,9 +107,11 @@ pub(super) fn doc_comment(\n         extract_definitions_from_docs(&docs)\n             .into_iter()\n             .filter_map(|(range, link, ns)| {\n-                let def = resolve_doc_path_for_def(sema.db, def, &link, ns)?;\n-                let InFile { file_id, value: range } = doc_mapping.map(range)?;\n-                (file_id == node.file_id).then(|| (range, def))\n+                doc_mapping.map(range).filter(|mapping| mapping.file_id == node.file_id).and_then(\n+                    |InFile { value: mapped_range, .. }| {\n+                        Some(mapped_range).zip(resolve_doc_path_for_def(sema.db, def, &link, ns))\n+                    },\n+                )\n             })\n             .for_each(|(range, def)| {\n                 hl.add(HlRange {"}]}