{"sha": "a243e8820a2bc61866e6d644f56c2f96096e17bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNDNlODgyMGEyYmM2MTg2NmU2ZDY0NGY1NmMyZjk2MDk2ZTE3YmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-12-07T13:42:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-12-07T13:42:18Z"}, "message": "auto merge of #19522 : mukilan/rust/import-conflicts-item, r=cmr\n\nFixes #19498", "tree": {"sha": "91364f671707a7e542d19298f8f8cfff04202264", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91364f671707a7e542d19298f8f8cfff04202264"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a243e8820a2bc61866e6d644f56c2f96096e17bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a243e8820a2bc61866e6d644f56c2f96096e17bb", "html_url": "https://github.com/rust-lang/rust/commit/a243e8820a2bc61866e6d644f56c2f96096e17bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a243e8820a2bc61866e6d644f56c2f96096e17bb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e835cc7e3828fb21dfa59c4974d535108c4b024", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e835cc7e3828fb21dfa59c4974d535108c4b024", "html_url": "https://github.com/rust-lang/rust/commit/1e835cc7e3828fb21dfa59c4974d535108c4b024"}, {"sha": "4b75a5d8da6cc47fdf2a5a292889ac0a3f02e8b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b75a5d8da6cc47fdf2a5a292889ac0a3f02e8b1", "html_url": "https://github.com/rust-lang/rust/commit/4b75a5d8da6cc47fdf2a5a292889ac0a3f02e8b1"}], "stats": {"total": 63, "additions": 55, "deletions": 8}, "files": [{"sha": "f1a75f996b09240158f41bb6582e4bf8ea48af0a", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 32, "deletions": 7, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a243e8820a2bc61866e6d644f56c2f96096e17bb/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a243e8820a2bc61866e6d644f56c2f96096e17bb/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=a243e8820a2bc61866e6d644f56c2f96096e17bb", "patch": "@@ -2654,10 +2654,34 @@ impl<'a> Resolver<'a> {\n \n                     }\n                     Some(_) => {\n-                        // The import is unresolved. Bail out.\n-                        debug!(\"(resolving single import) unresolved import; \\\n-                                bailing out\");\n-                        return Indeterminate;\n+                        // If containing_module is the same module whose import we are resolving\n+                        // and there it has an unresolved import with the same name as `source`,\n+                        // then the user is actually trying to import an item that is declared\n+                        // in the same scope\n+                        //\n+                        // e.g\n+                        // use self::submodule;\n+                        // pub mod submodule;\n+                        //\n+                        // In this case we continue as if we resolved the import and let the\n+                        // check_for_conflicts_between_imports_and_items call below handle\n+                        // the conflict\n+                        match (module_.def_id.get(),  containing_module.def_id.get()) {\n+                            (Some(id1), Some(id2)) if id1 == id2  => {\n+                                if value_result.is_unknown() {\n+                                    value_result = UnboundResult;\n+                                }\n+                                if type_result.is_unknown() {\n+                                    type_result = UnboundResult;\n+                                }\n+                            }\n+                            _ =>  {\n+                                // The import is unresolved. Bail out.\n+                                debug!(\"(resolving single import) unresolved import; \\\n+                                        bailing out\");\n+                                return Indeterminate;\n+                            }\n+                        }\n                     }\n                 }\n             }\n@@ -3018,7 +3042,7 @@ impl<'a> Resolver<'a> {\n     fn check_for_conflicts_between_imports_and_items(&mut self,\n                                                      module: &Module,\n                                                      import_resolution:\n-                                                     &mut ImportResolution,\n+                                                     &ImportResolution,\n                                                      import_span: Span,\n                                                      name: Name) {\n         if self.session.features.borrow().import_shadowing {\n@@ -3031,8 +3055,9 @@ impl<'a> Resolver<'a> {\n                  .contains_key(&name) {\n             match import_resolution.type_target {\n                 Some(ref target) if !target.shadowable => {\n-                    let msg = format!(\"import `{}` conflicts with imported \\\n-                                       crate in this module\",\n+                    let msg = format!(\"import `{0}` conflicts with imported \\\n+                                       crate in this module \\\n+                                       (maybe you meant `use {0}::*`?)\",\n                                       token::get_name(name).get());\n                     self.session.span_err(import_span, msg.as_slice());\n                 }"}, {"sha": "02b9c42b65b9a9e948f997abe2d390b7ce9f0905", "filename": "src/test/compile-fail/issue-19498.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a243e8820a2bc61866e6d644f56c2f96096e17bb/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a243e8820a2bc61866e6d644f56c2f96096e17bb/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs?ref=a243e8820a2bc61866e6d644f56c2f96096e17bb", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use self::A; //~ ERROR import `A` conflicts with existing submodule\n+use self::B; //~ ERROR import `B` conflicts with existing submodule\n+mod A {}\n+pub mod B {}\n+\n+mod C {\n+    use C::D; //~ ERROR import `D` conflicts with existing submodule\n+    mod D {}\n+}\n+\n+fn main() {}"}, {"sha": "c2ee62c195cb0155478a3322c7a4762678185c9e", "filename": "src/test/compile-fail/unresolved-extern-mod-suggestion.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a243e8820a2bc61866e6d644f56c2f96096e17bb/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a243e8820a2bc61866e6d644f56c2f96096e17bb/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs?ref=a243e8820a2bc61866e6d644f56c2f96096e17bb", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n extern crate core;\n-use core; //~ ERROR unresolved import (maybe you meant `core::*`?)\n+use core;\n+//~^ ERROR import `core` conflicts with imported crate in this module\n \n fn main() {}"}]}