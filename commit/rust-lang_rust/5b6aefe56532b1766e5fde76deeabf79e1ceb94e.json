{"sha": "5b6aefe56532b1766e5fde76deeabf79e1ceb94e", "node_id": "C_kwDOAAsO6NoAKDViNmFlZmU1NjUzMmIxNzY2ZTVmZGU3NmRlZWFiZjc5ZTFjZWI5NGU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-25T19:06:35Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-25T19:07:24Z"}, "message": "Update test fixtures", "tree": {"sha": "0ebd5d6bb4c4ecd951bce479b39e9a73c2af2a7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ebd5d6bb4c4ecd951bce479b39e9a73c2af2a7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b6aefe56532b1766e5fde76deeabf79e1ceb94e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6aefe56532b1766e5fde76deeabf79e1ceb94e", "html_url": "https://github.com/rust-lang/rust/commit/5b6aefe56532b1766e5fde76deeabf79e1ceb94e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b6aefe56532b1766e5fde76deeabf79e1ceb94e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c9375b829034b342c78b324b3aab3a497838055", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c9375b829034b342c78b324b3aab3a497838055", "html_url": "https://github.com/rust-lang/rust/commit/0c9375b829034b342c78b324b3aab3a497838055"}], "stats": {"total": 715, "additions": 358, "deletions": 357}, "files": [{"sha": "9ccb6e9101ef440c4604350b1901060375df66ae", "filename": "crates/project-model/src/tests.rs", "status": "modified", "additions": 357, "deletions": 357, "changes": 714, "blob_url": "https://github.com/rust-lang/rust/blob/5b6aefe56532b1766e5fde76deeabf79e1ceb94e/crates%2Fproject-model%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6aefe56532b1766e5fde76deeabf79e1ceb94e/crates%2Fproject-model%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Ftests.rs?ref=5b6aefe56532b1766e5fde76deeabf79e1ceb94e", "patch": "@@ -185,10 +185,10 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        2,\n+                        1,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            3,\n+                            2,\n                         ),\n                         edition: Edition2018,\n                         version: Some(\n@@ -197,9 +197,9 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"an_example\",\n+                                    \"hello_world\",\n                                 ),\n-                                canonical_name: \"an-example\",\n+                                canonical_name: \"hello-world\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -260,77 +260,85 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        4,\n+                        2,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            5,\n+                            3,\n                         ),\n-                        edition: Edition2015,\n+                        edition: Edition2018,\n                         version: Some(\n-                            \"0.2.98\",\n+                            \"0.1.0\",\n                         ),\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"libc\",\n+                                    \"an_example\",\n                                 ),\n-                                canonical_name: \"libc\",\n+                                canonical_name: \"an-example\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n                             [\n                                 \"debug_assertions\",\n-                                \"feature=default\",\n-                                \"feature=std\",\n                             ],\n                         ),\n                         potential_cfg_options: CfgOptions(\n                             [\n                                 \"debug_assertions\",\n-                                \"feature=align\",\n-                                \"feature=const-extern-fn\",\n-                                \"feature=default\",\n-                                \"feature=extra_traits\",\n-                                \"feature=rustc-dep-of-std\",\n-                                \"feature=std\",\n-                                \"feature=use_std\",\n                             ],\n                         ),\n                         env: Env {\n                             entries: {\n                                 \"CARGO_PKG_LICENSE\": \"\",\n                                 \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n-                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n                                 \"CARGO_PKG_AUTHORS\": \"\",\n-                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n                                 \"CARGO_PKG_LICENSE_FILE\": \"\",\n                                 \"CARGO_PKG_HOMEPAGE\": \"\",\n                                 \"CARGO_PKG_DESCRIPTION\": \"\",\n-                                \"CARGO_PKG_NAME\": \"libc\",\n-                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n                                 \"CARGO\": \"cargo\",\n                                 \"CARGO_PKG_REPOSITORY\": \"\",\n-                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n                                 \"CARGO_PKG_VERSION_PRE\": \"\",\n                             },\n                         },\n-                        dependencies: [],\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                                prelude: true,\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                                prelude: true,\n+                            },\n+                        ],\n                         proc_macro: Err(\n                             \"crate has not (yet) been built\",\n                         ),\n                         origin: CratesIo {\n-                            repo: Some(\n-                                \"https://github.com/rust-lang/libc\",\n-                            ),\n+                            repo: None,\n                         },\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        1,\n+                        3,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            2,\n+                            4,\n                         ),\n                         edition: Edition2018,\n                         version: Some(\n@@ -339,9 +347,9 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"hello_world\",\n+                                    \"it\",\n                                 ),\n-                                canonical_name: \"hello-world\",\n+                                canonical_name: \"it\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -402,77 +410,69 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        3,\n+                        4,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            4,\n+                            5,\n                         ),\n-                        edition: Edition2018,\n+                        edition: Edition2015,\n                         version: Some(\n-                            \"0.1.0\",\n+                            \"0.2.98\",\n                         ),\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"it\",\n+                                    \"libc\",\n                                 ),\n-                                canonical_name: \"it\",\n+                                canonical_name: \"libc\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n                             [\n                                 \"debug_assertions\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n                             ],\n                         ),\n                         potential_cfg_options: CfgOptions(\n                             [\n                                 \"debug_assertions\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n                             ],\n                         ),\n                         env: Env {\n                             entries: {\n                                 \"CARGO_PKG_LICENSE\": \"\",\n                                 \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n                                 \"CARGO_PKG_AUTHORS\": \"\",\n-                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n                                 \"CARGO_PKG_LICENSE_FILE\": \"\",\n                                 \"CARGO_PKG_HOMEPAGE\": \"\",\n                                 \"CARGO_PKG_DESCRIPTION\": \"\",\n-                                \"CARGO_PKG_NAME\": \"hello-world\",\n-                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n                                 \"CARGO\": \"cargo\",\n                                 \"CARGO_PKG_REPOSITORY\": \"\",\n-                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n                                 \"CARGO_PKG_VERSION_PRE\": \"\",\n                             },\n                         },\n-                        dependencies: [\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    0,\n-                                ),\n-                                name: CrateName(\n-                                    \"hello_world\",\n-                                ),\n-                                prelude: true,\n-                            },\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    4,\n-                                ),\n-                                name: CrateName(\n-                                    \"libc\",\n-                                ),\n-                                prelude: true,\n-                            },\n-                        ],\n+                        dependencies: [],\n                         proc_macro: Err(\n                             \"crate has not (yet) been built\",\n                         ),\n                         origin: CratesIo {\n-                            repo: None,\n+                            repo: Some(\n+                                \"https://github.com/rust-lang/libc\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -567,10 +567,10 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        2,\n+                        1,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            3,\n+                            2,\n                         ),\n                         edition: Edition2018,\n                         version: Some(\n@@ -579,9 +579,9 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"an_example\",\n+                                    \"hello_world\",\n                                 ),\n-                                canonical_name: \"an-example\",\n+                                canonical_name: \"hello-world\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -644,77 +644,10 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        4,\n-                    ): CrateData {\n-                        root_file_id: FileId(\n-                            5,\n-                        ),\n-                        edition: Edition2015,\n-                        version: Some(\n-                            \"0.2.98\",\n-                        ),\n-                        display_name: Some(\n-                            CrateDisplayName {\n-                                crate_name: CrateName(\n-                                    \"libc\",\n-                                ),\n-                                canonical_name: \"libc\",\n-                            },\n-                        ),\n-                        cfg_options: CfgOptions(\n-                            [\n-                                \"debug_assertions\",\n-                                \"feature=default\",\n-                                \"feature=std\",\n-                            ],\n-                        ),\n-                        potential_cfg_options: CfgOptions(\n-                            [\n-                                \"debug_assertions\",\n-                                \"feature=align\",\n-                                \"feature=const-extern-fn\",\n-                                \"feature=default\",\n-                                \"feature=extra_traits\",\n-                                \"feature=rustc-dep-of-std\",\n-                                \"feature=std\",\n-                                \"feature=use_std\",\n-                            ],\n-                        ),\n-                        env: Env {\n-                            entries: {\n-                                \"CARGO_PKG_LICENSE\": \"\",\n-                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n-                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n-                                \"CARGO_PKG_AUTHORS\": \"\",\n-                                \"CARGO_CRATE_NAME\": \"libc\",\n-                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                                \"CARGO_PKG_HOMEPAGE\": \"\",\n-                                \"CARGO_PKG_DESCRIPTION\": \"\",\n-                                \"CARGO_PKG_NAME\": \"libc\",\n-                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n-                                \"CARGO\": \"cargo\",\n-                                \"CARGO_PKG_REPOSITORY\": \"\",\n-                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n-                                \"CARGO_PKG_VERSION_PRE\": \"\",\n-                            },\n-                        },\n-                        dependencies: [],\n-                        proc_macro: Err(\n-                            \"crate has not (yet) been built\",\n-                        ),\n-                        origin: CratesIo {\n-                            repo: Some(\n-                                \"https://github.com/rust-lang/libc\",\n-                            ),\n-                        },\n-                        is_proc_macro: false,\n-                    },\n-                    CrateId(\n-                        1,\n+                        2,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            2,\n+                            3,\n                         ),\n                         edition: Edition2018,\n                         version: Some(\n@@ -723,9 +656,9 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"hello_world\",\n+                                    \"an_example\",\n                                 ),\n-                                canonical_name: \"hello-world\",\n+                                canonical_name: \"an-example\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -864,92 +797,91 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         },\n                         is_proc_macro: false,\n                     },\n-                },\n-            }\"#]],\n-    )\n-}\n-\n-#[test]\n-fn cargo_hello_world_project_model() {\n-    let crate_graph = load_cargo(\"hello-world-metadata.json\");\n-    check_crate_graph(\n-        crate_graph,\n-        expect![[r#\"\n-            CrateGraph {\n-                arena: {\n                     CrateId(\n-                        0,\n+                        4,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            1,\n+                            5,\n                         ),\n-                        edition: Edition2018,\n+                        edition: Edition2015,\n                         version: Some(\n-                            \"0.1.0\",\n+                            \"0.2.98\",\n                         ),\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"hello_world\",\n+                                    \"libc\",\n                                 ),\n-                                canonical_name: \"hello-world\",\n+                                canonical_name: \"libc\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n                             [\n                                 \"debug_assertions\",\n-                                \"test\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n                             ],\n                         ),\n                         potential_cfg_options: CfgOptions(\n                             [\n                                 \"debug_assertions\",\n-                                \"test\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n                             ],\n                         ),\n                         env: Env {\n                             entries: {\n                                 \"CARGO_PKG_LICENSE\": \"\",\n                                 \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n                                 \"CARGO_PKG_AUTHORS\": \"\",\n-                                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n                                 \"CARGO_PKG_LICENSE_FILE\": \"\",\n                                 \"CARGO_PKG_HOMEPAGE\": \"\",\n                                 \"CARGO_PKG_DESCRIPTION\": \"\",\n-                                \"CARGO_PKG_NAME\": \"hello-world\",\n-                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n                                 \"CARGO\": \"cargo\",\n                                 \"CARGO_PKG_REPOSITORY\": \"\",\n-                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n                                 \"CARGO_PKG_VERSION_PRE\": \"\",\n                             },\n                         },\n-                        dependencies: [\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    4,\n-                                ),\n-                                name: CrateName(\n-                                    \"libc\",\n-                                ),\n-                                prelude: true,\n-                            },\n-                        ],\n+                        dependencies: [],\n                         proc_macro: Err(\n                             \"crate has not (yet) been built\",\n                         ),\n                         origin: CratesIo {\n-                            repo: None,\n+                            repo: Some(\n+                                \"https://github.com/rust-lang/libc\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n+                },\n+            }\"#]],\n+    )\n+}\n+\n+#[test]\n+fn cargo_hello_world_project_model() {\n+    let crate_graph = load_cargo(\"hello-world-metadata.json\");\n+    check_crate_graph(\n+        crate_graph,\n+        expect![[r#\"\n+            CrateGraph {\n+                arena: {\n                     CrateId(\n-                        2,\n+                        0,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            3,\n+                            1,\n                         ),\n                         edition: Edition2018,\n                         version: Some(\n@@ -958,9 +890,9 @@ fn cargo_hello_world_project_model() {\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"an_example\",\n+                                    \"hello_world\",\n                                 ),\n-                                canonical_name: \"an-example\",\n+                                canonical_name: \"hello-world\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -995,15 +927,6 @@ fn cargo_hello_world_project_model() {\n                             },\n                         },\n                         dependencies: [\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    0,\n-                                ),\n-                                name: CrateName(\n-                                    \"hello_world\",\n-                                ),\n-                                prelude: true,\n-                            },\n                             Dependency {\n                                 crate_id: CrateId(\n                                     4,\n@@ -1023,77 +946,87 @@ fn cargo_hello_world_project_model() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        4,\n+                        1,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            5,\n+                            2,\n                         ),\n-                        edition: Edition2015,\n+                        edition: Edition2018,\n                         version: Some(\n-                            \"0.2.98\",\n+                            \"0.1.0\",\n                         ),\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"libc\",\n+                                    \"hello_world\",\n                                 ),\n-                                canonical_name: \"libc\",\n+                                canonical_name: \"hello-world\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n                             [\n                                 \"debug_assertions\",\n-                                \"feature=default\",\n-                                \"feature=std\",\n+                                \"test\",\n                             ],\n                         ),\n                         potential_cfg_options: CfgOptions(\n                             [\n                                 \"debug_assertions\",\n-                                \"feature=align\",\n-                                \"feature=const-extern-fn\",\n-                                \"feature=default\",\n-                                \"feature=extra_traits\",\n-                                \"feature=rustc-dep-of-std\",\n-                                \"feature=std\",\n-                                \"feature=use_std\",\n+                                \"test\",\n                             ],\n                         ),\n                         env: Env {\n                             entries: {\n                                 \"CARGO_PKG_LICENSE\": \"\",\n                                 \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n-                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                                \"CARGO_PKG_VERSION\": \"0.1.0\",\n                                 \"CARGO_PKG_AUTHORS\": \"\",\n-                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_CRATE_NAME\": \"hello_world\",\n                                 \"CARGO_PKG_LICENSE_FILE\": \"\",\n                                 \"CARGO_PKG_HOMEPAGE\": \"\",\n                                 \"CARGO_PKG_DESCRIPTION\": \"\",\n-                                \"CARGO_PKG_NAME\": \"libc\",\n-                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO_PKG_NAME\": \"hello-world\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n                                 \"CARGO\": \"cargo\",\n                                 \"CARGO_PKG_REPOSITORY\": \"\",\n-                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n                                 \"CARGO_PKG_VERSION_PRE\": \"\",\n                             },\n                         },\n-                        dependencies: [],\n+                        dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"hello_world\",\n+                                ),\n+                                prelude: true,\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    4,\n+                                ),\n+                                name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                                prelude: true,\n+                            },\n+                        ],\n                         proc_macro: Err(\n                             \"crate has not (yet) been built\",\n                         ),\n                         origin: CratesIo {\n-                            repo: Some(\n-                                \"https://github.com/rust-lang/libc\",\n-                            ),\n+                            repo: None,\n                         },\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        1,\n+                        2,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            2,\n+                            3,\n                         ),\n                         edition: Edition2018,\n                         version: Some(\n@@ -1102,9 +1035,9 @@ fn cargo_hello_world_project_model() {\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"hello_world\",\n+                                    \"an_example\",\n                                 ),\n-                                canonical_name: \"hello-world\",\n+                                canonical_name: \"an-example\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1243,6 +1176,73 @@ fn cargo_hello_world_project_model() {\n                         },\n                         is_proc_macro: false,\n                     },\n+                    CrateId(\n+                        4,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            5,\n+                        ),\n+                        edition: Edition2015,\n+                        version: Some(\n+                            \"0.2.98\",\n+                        ),\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"libc\",\n+                                ),\n+                                canonical_name: \"libc\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=default\",\n+                                \"feature=std\",\n+                            ],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [\n+                                \"debug_assertions\",\n+                                \"feature=align\",\n+                                \"feature=const-extern-fn\",\n+                                \"feature=default\",\n+                                \"feature=extra_traits\",\n+                                \"feature=rustc-dep-of-std\",\n+                                \"feature=std\",\n+                                \"feature=use_std\",\n+                            ],\n+                        ),\n+                        env: Env {\n+                            entries: {\n+                                \"CARGO_PKG_LICENSE\": \"\",\n+                                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                                \"CARGO_PKG_AUTHORS\": \"\",\n+                                \"CARGO_CRATE_NAME\": \"libc\",\n+                                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                                \"CARGO_PKG_NAME\": \"libc\",\n+                                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                                \"CARGO\": \"cargo\",\n+                                \"CARGO_PKG_REPOSITORY\": \"\",\n+                                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                                \"CARGO_PKG_VERSION_PRE\": \"\",\n+                            },\n+                        },\n+                        dependencies: [],\n+                        proc_macro: Err(\n+                            \"crate has not (yet) been built\",\n+                        ),\n+                        origin: CratesIo {\n+                            repo: Some(\n+                                \"https://github.com/rust-lang/libc\",\n+                            ),\n+                        },\n+                        is_proc_macro: false,\n+                    },\n                 },\n             }\"#]],\n     )\n@@ -1301,19 +1301,53 @@ fn rust_project_hello_world_project_model() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        10,\n+                        1,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            11,\n+                            2,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"unwind\",\n+                                    \"core\",\n                                 ),\n-                                canonical_name: \"unwind\",\n+                                canonical_name: \"core\",\n+                            },\n+                        ),\n+                        cfg_options: CfgOptions(\n+                            [],\n+                        ),\n+                        potential_cfg_options: CfgOptions(\n+                            [],\n+                        ),\n+                        env: Env {\n+                            entries: {},\n+                        },\n+                        dependencies: [],\n+                        proc_macro: Err(\n+                            \"no proc macro loaded for sysroot crate\",\n+                        ),\n+                        origin: Lang(\n+                            Core,\n+                        ),\n+                        is_proc_macro: false,\n+                    },\n+                    CrateId(\n+                        2,\n+                    ): CrateData {\n+                        root_file_id: FileId(\n+                            3,\n+                        ),\n+                        edition: Edition2018,\n+                        version: None,\n+                        display_name: Some(\n+                            CrateDisplayName {\n+                                crate_name: CrateName(\n+                                    \"panic_abort\",\n+                                ),\n+                                canonical_name: \"panic_abort\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1335,19 +1369,19 @@ fn rust_project_hello_world_project_model() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        7,\n+                        3,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            8,\n+                            4,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"std_detect\",\n+                                    \"panic_unwind\",\n                                 ),\n-                                canonical_name: \"std_detect\",\n+                                canonical_name: \"panic_unwind\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1413,19 +1447,19 @@ fn rust_project_hello_world_project_model() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        1,\n+                        5,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            2,\n+                            6,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"core\",\n+                                    \"profiler_builtins\",\n                                 ),\n-                                canonical_name: \"core\",\n+                                canonical_name: \"profiler_builtins\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1442,24 +1476,24 @@ fn rust_project_hello_world_project_model() {\n                             \"no proc macro loaded for sysroot crate\",\n                         ),\n                         origin: Lang(\n-                            Core,\n+                            Other,\n                         ),\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        11,\n+                        6,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            12,\n+                            7,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"hello_world\",\n+                                    \"std\",\n                                 ),\n-                                canonical_name: \"hello_world\",\n+                                canonical_name: \"std\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1472,6 +1506,15 @@ fn rust_project_hello_world_project_model() {\n                             entries: {},\n                         },\n                         dependencies: [\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    0,\n+                                ),\n+                                name: CrateName(\n+                                    \"alloc\",\n+                                ),\n+                                prelude: true,\n+                            },\n                             Dependency {\n                                 crate_id: CrateId(\n                                     1,\n@@ -1483,19 +1526,46 @@ fn rust_project_hello_world_project_model() {\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    0,\n+                                    2,\n                                 ),\n                                 name: CrateName(\n-                                    \"alloc\",\n+                                    \"panic_abort\",\n                                 ),\n                                 prelude: true,\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    6,\n+                                    3,\n                                 ),\n                                 name: CrateName(\n-                                    \"std\",\n+                                    \"panic_unwind\",\n+                                ),\n+                                prelude: true,\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    5,\n+                                ),\n+                                name: CrateName(\n+                                    \"profiler_builtins\",\n+                                ),\n+                                prelude: true,\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    7,\n+                                ),\n+                                name: CrateName(\n+                                    \"std_detect\",\n+                                ),\n+                                prelude: true,\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    8,\n+                                ),\n+                                name: CrateName(\n+                                    \"term\",\n                                 ),\n                                 prelude: true,\n                             },\n@@ -1506,31 +1576,40 @@ fn rust_project_hello_world_project_model() {\n                                 name: CrateName(\n                                     \"test\",\n                                 ),\n-                                prelude: false,\n+                                prelude: true,\n+                            },\n+                            Dependency {\n+                                crate_id: CrateId(\n+                                    10,\n+                                ),\n+                                name: CrateName(\n+                                    \"unwind\",\n+                                ),\n+                                prelude: true,\n                             },\n                         ],\n                         proc_macro: Err(\n-                            \"no proc macro dylib present\",\n+                            \"no proc macro loaded for sysroot crate\",\n+                        ),\n+                        origin: Lang(\n+                            Std,\n                         ),\n-                        origin: CratesIo {\n-                            repo: None,\n-                        },\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        8,\n+                        7,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            9,\n+                            8,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"term\",\n+                                    \"std_detect\",\n                                 ),\n-                                canonical_name: \"term\",\n+                                canonical_name: \"std_detect\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1552,19 +1631,19 @@ fn rust_project_hello_world_project_model() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        5,\n+                        8,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            6,\n+                            9,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"profiler_builtins\",\n+                                    \"term\",\n                                 ),\n-                                canonical_name: \"profiler_builtins\",\n+                                canonical_name: \"term\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1586,19 +1665,19 @@ fn rust_project_hello_world_project_model() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        2,\n+                        9,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            3,\n+                            10,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"panic_abort\",\n+                                    \"test\",\n                                 ),\n-                                canonical_name: \"panic_abort\",\n+                                canonical_name: \"test\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1615,24 +1694,24 @@ fn rust_project_hello_world_project_model() {\n                             \"no proc macro loaded for sysroot crate\",\n                         ),\n                         origin: Lang(\n-                            Other,\n+                            Test,\n                         ),\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        9,\n+                        10,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            10,\n+                            11,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"test\",\n+                                    \"unwind\",\n                                 ),\n-                                canonical_name: \"test\",\n+                                canonical_name: \"unwind\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1649,24 +1728,24 @@ fn rust_project_hello_world_project_model() {\n                             \"no proc macro loaded for sysroot crate\",\n                         ),\n                         origin: Lang(\n-                            Test,\n+                            Other,\n                         ),\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        6,\n+                        11,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            7,\n+                            12,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n-                                    \"std\",\n+                                    \"hello_world\",\n                                 ),\n-                                canonical_name: \"std\",\n+                                canonical_name: \"hello_world\",\n                             },\n                         ),\n                         cfg_options: CfgOptions(\n@@ -1679,15 +1758,6 @@ fn rust_project_hello_world_project_model() {\n                             entries: {},\n                         },\n                         dependencies: [\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    0,\n-                                ),\n-                                name: CrateName(\n-                                    \"alloc\",\n-                                ),\n-                                prelude: true,\n-                            },\n                             Dependency {\n                                 crate_id: CrateId(\n                                     1,\n@@ -1699,46 +1769,19 @@ fn rust_project_hello_world_project_model() {\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    2,\n-                                ),\n-                                name: CrateName(\n-                                    \"panic_abort\",\n-                                ),\n-                                prelude: true,\n-                            },\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    3,\n-                                ),\n-                                name: CrateName(\n-                                    \"panic_unwind\",\n-                                ),\n-                                prelude: true,\n-                            },\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    5,\n-                                ),\n-                                name: CrateName(\n-                                    \"profiler_builtins\",\n-                                ),\n-                                prelude: true,\n-                            },\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    7,\n+                                    0,\n                                 ),\n                                 name: CrateName(\n-                                    \"std_detect\",\n+                                    \"alloc\",\n                                 ),\n                                 prelude: true,\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    8,\n+                                    6,\n                                 ),\n                                 name: CrateName(\n-                                    \"term\",\n+                                    \"std\",\n                                 ),\n                                 prelude: true,\n                             },\n@@ -1749,58 +1792,15 @@ fn rust_project_hello_world_project_model() {\n                                 name: CrateName(\n                                     \"test\",\n                                 ),\n-                                prelude: true,\n-                            },\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    10,\n-                                ),\n-                                name: CrateName(\n-                                    \"unwind\",\n-                                ),\n-                                prelude: true,\n+                                prelude: false,\n                             },\n                         ],\n                         proc_macro: Err(\n-                            \"no proc macro loaded for sysroot crate\",\n-                        ),\n-                        origin: Lang(\n-                            Std,\n-                        ),\n-                        is_proc_macro: false,\n-                    },\n-                    CrateId(\n-                        3,\n-                    ): CrateData {\n-                        root_file_id: FileId(\n-                            4,\n-                        ),\n-                        edition: Edition2018,\n-                        version: None,\n-                        display_name: Some(\n-                            CrateDisplayName {\n-                                crate_name: CrateName(\n-                                    \"panic_unwind\",\n-                                ),\n-                                canonical_name: \"panic_unwind\",\n-                            },\n-                        ),\n-                        cfg_options: CfgOptions(\n-                            [],\n-                        ),\n-                        potential_cfg_options: CfgOptions(\n-                            [],\n+                            \"no proc macro dylib present\",\n                         ),\n-                        env: Env {\n-                            entries: {},\n+                        origin: CratesIo {\n+                            repo: None,\n                         },\n-                        dependencies: [],\n-                        proc_macro: Err(\n-                            \"no proc macro loaded for sysroot crate\",\n-                        ),\n-                        origin: Lang(\n-                            Other,\n-                        ),\n                         is_proc_macro: false,\n                     },\n                 },"}, {"sha": "9909d71bdf066bd4117531998f054aeeaab45444", "filename": "crates/stdx/src/hash.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b6aefe56532b1766e5fde76deeabf79e1ceb94e/crates%2Fstdx%2Fsrc%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6aefe56532b1766e5fde76deeabf79e1ceb94e/crates%2Fstdx%2Fsrc%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Fhash.rs?ref=5b6aefe56532b1766e5fde76deeabf79e1ceb94e", "patch": "@@ -1,3 +1,4 @@\n+//! A none hashing [`Hasher`] implementation.\n use std::{\n     hash::{BuildHasher, Hasher},\n     marker::PhantomData,"}]}