{"sha": "64182a587c0c26559b166cbf45ab33f10b332ffc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MTgyYTU4N2MwYzI2NTU5YjE2NmNiZjQ1YWIzM2YxMGIzMzJmZmM=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-02-02T06:41:01Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-02-10T17:42:41Z"}, "message": "Reimplement simplify_cfg for SwitchInt\n\nFirst example of optimisation that applies to many more cases than originally.", "tree": {"sha": "59f4c6ed389b4c46c0c2a59159dac8c10e3f824a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59f4c6ed389b4c46c0c2a59159dac8c10e3f824a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64182a587c0c26559b166cbf45ab33f10b332ffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64182a587c0c26559b166cbf45ab33f10b332ffc", "html_url": "https://github.com/rust-lang/rust/commit/64182a587c0c26559b166cbf45ab33f10b332ffc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64182a587c0c26559b166cbf45ab33f10b332ffc/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92c56f607b24e5ef5dcbc70ac442c88c296e4591", "url": "https://api.github.com/repos/rust-lang/rust/commits/92c56f607b24e5ef5dcbc70ac442c88c296e4591", "html_url": "https://github.com/rust-lang/rust/commit/92c56f607b24e5ef5dcbc70ac442c88c296e4591"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "3d5106c4b06f7bd4d7f43ed332e106a28be35625", "filename": "src/librustc_mir/transform/simplify_branches.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/64182a587c0c26559b166cbf45ab33f10b332ffc/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64182a587c0c26559b166cbf45ab33f10b332ffc/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs?ref=64182a587c0c26559b166cbf45ab33f10b332ffc", "patch": "@@ -30,26 +30,30 @@ impl<'l, 'tcx> MirPass<'tcx> for SimplifyBranches<'l> {\n         for block in mir.basic_blocks_mut() {\n             let terminator = block.terminator_mut();\n             terminator.kind = match terminator.kind {\n-                // TerminatorKind::If { ref targets, cond: Operand::Constant(Constant {\n-                //     literal: Literal::Value {\n-                //         value: ConstVal::Bool(cond)\n-                //     }, ..\n-                // }) } => {\n-                //     if cond {\n-                //         TerminatorKind::Goto { target: targets.0 }\n-                //     } else {\n-                //         TerminatorKind::Goto { target: targets.1 }\n-                //     }\n-                // }\n-\n+                TerminatorKind::SwitchInt { discr: Operand::Constant(Constant {\n+                    literal: Literal::Value { ref value }, ..\n+                }), ref values, ref targets, .. } => {\n+                    if let Some(ref constint) = value.to_const_int() {\n+                        let (otherwise, targets) = targets.split_last().unwrap();\n+                        let mut ret = TerminatorKind::Goto { target: *otherwise };\n+                        for (v, t) in values.iter().zip(targets.iter()) {\n+                            if v == constint {\n+                                ret = TerminatorKind::Goto { target: *t };\n+                                break;\n+                            }\n+                        }\n+                        ret\n+                    } else {\n+                        continue\n+                    }\n+                },\n                 TerminatorKind::Assert { target, cond: Operand::Constant(Constant {\n                     literal: Literal::Value {\n                         value: ConstVal::Bool(cond)\n                     }, ..\n                 }), expected, .. } if cond == expected => {\n                     TerminatorKind::Goto { target: target }\n-                }\n-\n+                },\n                 _ => continue\n             };\n         }"}]}