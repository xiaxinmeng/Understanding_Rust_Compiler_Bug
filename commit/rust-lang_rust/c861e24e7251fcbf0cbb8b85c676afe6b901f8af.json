{"sha": "c861e24e7251fcbf0cbb8b85c676afe6b901f8af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NjFlMjRlNzI1MWZjYmYwY2JiOGI4NWM2NzZhZmU2YjkwMWY4YWY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-28T01:42:30Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-28T16:56:28Z"}, "message": "clean up", "tree": {"sha": "356e89555f13f2be614c00e9c5e2288c1df340a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/356e89555f13f2be614c00e9c5e2288c1df340a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c861e24e7251fcbf0cbb8b85c676afe6b901f8af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c861e24e7251fcbf0cbb8b85c676afe6b901f8af", "html_url": "https://github.com/rust-lang/rust/commit/c861e24e7251fcbf0cbb8b85c676afe6b901f8af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c861e24e7251fcbf0cbb8b85c676afe6b901f8af/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae51953e8034a8f02a12c32a839f9be74cc0ca1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae51953e8034a8f02a12c32a839f9be74cc0ca1c", "html_url": "https://github.com/rust-lang/rust/commit/ae51953e8034a8f02a12c32a839f9be74cc0ca1c"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "a1011697ef1606ca6d69a42de6d23f336429601d", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c861e24e7251fcbf0cbb8b85c676afe6b901f8af/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c861e24e7251fcbf0cbb8b85c676afe6b901f8af/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=c861e24e7251fcbf0cbb8b85c676afe6b901f8af", "patch": "@@ -830,11 +830,11 @@ impl<'hir> Map<'hir> {\n                 Node::ForeignItem(_) |\n                 Node::TraitItem(_) |\n                 Node::ImplItem(_) => break,\n-                Node::Expr(expr) => match expr.node {\n+                Node::Expr(expr) => match expr.kind {\n                     ExprKind::Match(_, _, _) => return Some(expr),\n                     _ => {}\n                 },\n-                Node::Stmt(stmt) => match stmt.node {\n+                Node::Stmt(stmt) => match stmt.kind {\n                     StmtKind::Local(_) => break,\n                     _ => {}\n                 }"}, {"sha": "56962d53a645064b4ff9ea9d735a86eaa9f23e58", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c861e24e7251fcbf0cbb8b85c676afe6b901f8af/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c861e24e7251fcbf0cbb8b85c676afe6b901f8af/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=c861e24e7251fcbf0cbb8b85c676afe6b901f8af", "patch": "@@ -51,7 +51,7 @@\n //! we may want to adjust precisely when coercions occur.\n \n use crate::check::{FnCtxt, Needs};\n-use errors::{Applicability, DiagnosticBuilder};\n+use errors::DiagnosticBuilder;\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n use rustc::hir::ptr::P;\n@@ -1311,13 +1311,8 @@ impl<'tcx, 'exprs, E: AsCoercionSite> CoerceMany<'tcx, 'exprs, E> {\n                 pointing_at_return_type,\n             ) {\n                 if match_expr.span.desugaring_kind().is_none() {\n-                    err.span_laber(match_expr.span, \"expected this to be `()`\");\n-                    err.span_suggestion_short(\n-                        match_expr.span.shrink_to_hi(),\n-                        \"consider using a semicolon here\",\n-                        \";\".to_string(),\n-                        Applicability::MachineApplicable,\n-                    );\n+                    err.span_label(match_expr.span, \"expected this to be `()`\");\n+                    fcx.suggest_semicolon_at_end(match_expr.span, &mut err);\n                 }\n             }\n             fcx.get_node_fn_decl(parent).map(|(fn_decl, _, is_main)| (fn_decl, is_main))"}, {"sha": "7560a72c8905503c0780a3fbd58b226bcb7b22f3", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c861e24e7251fcbf0cbb8b85c676afe6b901f8af/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c861e24e7251fcbf0cbb8b85c676afe6b901f8af/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=c861e24e7251fcbf0cbb8b85c676afe6b901f8af", "patch": "@@ -3858,6 +3858,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n+    fn suggest_semicolon_at_end(&self, span: Span, err: &mut DiagnosticBuilder<'_>) {\n+        err.span_suggestion_short(\n+            span.shrink_to_hi(),\n+            \"consider using a semicolon here\",\n+            \";\".to_string(),\n+            Applicability::MachineApplicable,\n+        );\n+    }\n+\n     pub fn check_stmt(&self, stmt: &'tcx hir::Stmt) {\n         // Don't do all the complex logic below for `DeclItem`.\n         match stmt.kind {\n@@ -3883,12 +3892,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // Check with expected type of `()`.\n \n                 self.check_expr_has_type_or_error(&expr, self.tcx.mk_unit(), |err| {\n-                    err.span_suggestion_short(\n-                        expr.span.shrink_to_hi(),\n-                        \"consider using a semicolon here\",\n-                        \";\".to_string(),\n-                        Applicability::MachineApplicable,\n-                    );\n+                    self.suggest_semicolon_at_end(expr.span, err);\n                 });\n             }\n             hir::StmtKind::Semi(ref expr) => {"}]}