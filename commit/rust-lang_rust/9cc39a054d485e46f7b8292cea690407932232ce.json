{"sha": "9cc39a054d485e46f7b8292cea690407932232ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYzM5YTA1NGQ0ODVlNDZmN2I4MjkyY2VhNjkwNDA3OTMyMjMyY2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-21T16:51:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-21T16:51:37Z"}, "message": "auto merge of #15450 : chris-morgan/rust/vim-misc-2014-07-04, r=kballard", "tree": {"sha": "59e6469c3b730e1809e9b9faf23d7e5df42eb863", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59e6469c3b730e1809e9b9faf23d7e5df42eb863"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cc39a054d485e46f7b8292cea690407932232ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cc39a054d485e46f7b8292cea690407932232ce", "html_url": "https://github.com/rust-lang/rust/commit/9cc39a054d485e46f7b8292cea690407932232ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cc39a054d485e46f7b8292cea690407932232ce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f15d6d28396e8700b6c3f2704204a2769e710403", "url": "https://api.github.com/repos/rust-lang/rust/commits/f15d6d28396e8700b6c3f2704204a2769e710403", "html_url": "https://github.com/rust-lang/rust/commit/f15d6d28396e8700b6c3f2704204a2769e710403"}, {"sha": "0a0c6da564e91a241feadae8bc1f5ad879045042", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0c6da564e91a241feadae8bc1f5ad879045042", "html_url": "https://github.com/rust-lang/rust/commit/0a0c6da564e91a241feadae8bc1f5ad879045042"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "e3fadccd1c9fde65979b0aa169f978b16b2f497f", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9cc39a054d485e46f7b8292cea690407932232ce/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/9cc39a054d485e46f7b8292cea690407932232ce/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=9cc39a054d485e46f7b8292cea690407932232ce", "patch": "@@ -3,7 +3,7 @@\n \" Maintainer:   Patrick Walton <pcwalton@mozilla.com>\n \" Maintainer:   Ben Blum <bblum@cs.cmu.edu>\n \" Maintainer:   Chris Morgan <me@chrismorgan.info>\n-\" Last Change:  July 06, 2014\n+\" Last Change:  July 18, 2014\n \n if version < 600\n   syntax clear\n@@ -38,7 +38,7 @@ syn keyword   rustKeyword     for in if impl let\n syn keyword   rustKeyword     loop once proc pub\n syn keyword   rustKeyword     return super\n syn keyword   rustKeyword     unsafe virtual while\n-syn keyword   rustKeyword     use nextgroup=rustModPath skipwhite skipempty\n+syn keyword   rustKeyword     use nextgroup=rustModPath,rustModPathInUse skipwhite skipempty\n \" FIXME: Scoped impl's name is also fallen in this category\n syn keyword   rustKeyword     mod trait struct enum type nextgroup=rustIdentifier skipwhite skipempty\n syn keyword   rustStorage     mut ref static const\n@@ -60,6 +60,10 @@ syn region    rustBoxPlacementBalance start=\"(\" end=\")\" containedin=rustBoxPlace\n syn region    rustBoxPlacementBalance start=\"\\[\" end=\"\\]\" containedin=rustBoxPlacement transparent\n \" {} are handled by rustFoldBraces\n \n+syn region rustMacroRepeat matchgroup=rustMacroRepeatDelimiters start=\"$(\" end=\")\" contains=TOP nextgroup=rustMacroRepeatCount\n+syn match rustMacroRepeatCount \".\\?[*+]\" contained\n+syn match rustMacroVariable \"$\\w\\+\"\n+\n \" Reserved (but not yet used) keywords {{{2\n syn keyword   rustReservedKeyword alignof be do offsetof priv pure sizeof typeof unsized yield\n \n@@ -138,8 +142,9 @@ syn keyword   rustBoolean     true false\n \" If foo::bar changes to foo.bar, change this (\"::\" to \"\\.\").\n \" If foo::bar changes to Foo::bar, change this (first \"\\w\" to \"\\u\").\n syn match     rustModPath     \"\\w\\(\\w\\)*::[^<]\"he=e-3,me=e-3\n-syn match     rustModPath     \"\\w\\(\\w\\)*\" contained \" only for 'use path;'\n+syn match     rustModPathInUse \"\\w\\(\\w\\)*\" contained \" only for 'use path;'\n syn match     rustModPathSep  \"::\"\n+\" rustModPathInUse is split out from rustModPath so that :syn-include can get the group list right.\n \n syn match     rustFuncCall    \"\\w\\(\\w\\)*(\"he=e-1,me=e-1\n syn match     rustFuncCall    \"\\w\\(\\w\\)*::<\"he=e-3,me=e-3 \" foo::<T>();\n@@ -233,6 +238,9 @@ hi def link rustBinNumber       rustNumber\n hi def link rustIdentifierPrime rustIdentifier\n hi def link rustTrait           rustType\n \n+hi def link rustMacroRepeatCount   rustMacroRepeatDelimiters\n+hi def link rustMacroRepeatDelimiters   Macro\n+hi def link rustMacroVariable Define\n hi def link rustSigil         StorageClass\n hi def link rustEscape        Special\n hi def link rustEscapeUnicode rustEscape\n@@ -255,6 +263,7 @@ hi def link rustReservedKeyword Error\n hi def link rustConditional   Conditional\n hi def link rustIdentifier    Identifier\n hi def link rustCapsIdent     rustIdentifier\n+hi def link rustModPathInUse  rustModPath\n hi def link rustModPath       Include\n hi def link rustModPathSep    Delimiter\n hi def link rustFunction      Function"}]}