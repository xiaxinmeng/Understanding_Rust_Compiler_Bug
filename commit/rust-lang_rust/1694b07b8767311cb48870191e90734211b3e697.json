{"sha": "1694b07b8767311cb48870191e90734211b3e697", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2OTRiMDdiODc2NzMxMWNiNDg4NzAxOTFlOTA3MzQyMTFiM2U2OTc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-02T16:40:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-02T16:41:16Z"}, "message": "Implement intrinsic init", "tree": {"sha": "8b31232c5b05ae7e46c805240ee1e665ba0292a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b31232c5b05ae7e46c805240ee1e665ba0292a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1694b07b8767311cb48870191e90734211b3e697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1694b07b8767311cb48870191e90734211b3e697", "html_url": "https://github.com/rust-lang/rust/commit/1694b07b8767311cb48870191e90734211b3e697", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1694b07b8767311cb48870191e90734211b3e697/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fce5fa5231fc0c4ae7c6cb1b4831ec2b23ffe2f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/fce5fa5231fc0c4ae7c6cb1b4831ec2b23ffe2f2", "html_url": "https://github.com/rust-lang/rust/commit/fce5fa5231fc0c4ae7c6cb1b4831ec2b23ffe2f2"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "ea4275e50b0ec8e1dfede62883fd32f896f049f0", "filename": "src/abi.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1694b07b8767311cb48870191e90734211b3e697/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1694b07b8767311cb48870191e90734211b3e697/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=1694b07b8767311cb48870191e90734211b3e697", "patch": "@@ -821,6 +821,24 @@ fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n                     let dst_layout = fx.layout_of(dst_ty);\n                     ret.write_cvalue(fx, CValue::ByRef(addr, dst_layout))\n                 }\n+                \"init\" => {\n+                    assert_eq!(args.len(), 0);\n+                    let ty = substs.type_at(0);\n+                    let layout = fx.layout_of(ty);\n+                    let stack_slot = fx.bcx.create_stack_slot(StackSlotData {\n+                        kind: StackSlotKind::ExplicitSlot,\n+                        size: layout.size.bytes() as u32,\n+                        offset: None,\n+                    });\n+                    let addr = fx.bcx.ins().stack_addr(pointer_ty(fx.tcx), stack_slot, 0);\n+                    let zero_val = fx.bcx.ins().iconst(types::I8, 0);\n+                    let len_val = fx.bcx.ins().iconst(pointer_ty(fx.tcx), layout.size.bytes() as i64);\n+                    fx.bcx.call_memset(fx.isa, addr, zero_val, len_val);\n+\n+                    let uninit_place = CPlace::from_stack_slot(fx, stack_slot, ty);\n+                    let uninit_val = uninit_place.to_cvalue(fx);\n+                    ret.write_cvalue(fx, uninit_val);\n+                }\n                 \"uninit\" => {\n                     assert_eq!(args.len(), 0);\n                     let ty = substs.type_at(0);"}]}