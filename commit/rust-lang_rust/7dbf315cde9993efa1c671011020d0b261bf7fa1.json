{"sha": "7dbf315cde9993efa1c671011020d0b261bf7fa1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYmYzMTVjZGU5OTkzZWZhMWM2NzEwMTEwMjBkMGIyNjFiZjdmYTE=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-03-05T10:13:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-05T10:13:55Z"}, "message": "Merge pull request #2509 from ordovicia/redundant_field_names_range\n\nRemove unused variable and a minor refactoring", "tree": {"sha": "2175b41b5c7cc55a5b15aac2127181dc91a426f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2175b41b5c7cc55a5b15aac2127181dc91a426f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dbf315cde9993efa1c671011020d0b261bf7fa1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJanRhjCRBK7hj4Ov3rIwAAdHIIAI9z5FIPS4YS/MOtPzvK7lSw\nl+Iakcu6jJlpvrharWpDzAB2U4FMxFSeW8QTM61xIUNJLL9vQ9Z7vYmGZP9nRCOL\nyp5FJXvgxKzH6gHVQJNKBA9++QkHqZ+qULReb87gP3/NpXACdNB8DOk9yPnotElU\n2ADQKNf8mP6F0E78CbThnenb4qH/5PnnD95/zka+Divo3SKnTQAk7LNE6hWJE/nN\nlxA+HRDYjutOvUaYz1IL8gXmAqdWq5wkBH0y3NC8C9e58VGU3aYiqkrqUTtbblDO\n1cB9Rd2ILV92njgEnKEe8iOsgbEt5QaODsBpZ79I8+R6o+qANjgyl8WfGrOGzdY=\n=2bd5\n-----END PGP SIGNATURE-----\n", "payload": "tree 2175b41b5c7cc55a5b15aac2127181dc91a426f4\nparent 05f92b84c9898c37ee7e1f2fb19d7cfaab10301f\nparent 8e406760a4ee4bf0b0db5d0a14b8e5dca292d2d9\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1520244835 +0100\ncommitter GitHub <noreply@github.com> 1520244835 +0100\n\nMerge pull request #2509 from ordovicia/redundant_field_names_range\n\nRemove unused variable and a minor refactoring"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dbf315cde9993efa1c671011020d0b261bf7fa1", "html_url": "https://github.com/rust-lang/rust/commit/7dbf315cde9993efa1c671011020d0b261bf7fa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dbf315cde9993efa1c671011020d0b261bf7fa1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05f92b84c9898c37ee7e1f2fb19d7cfaab10301f", "url": "https://api.github.com/repos/rust-lang/rust/commits/05f92b84c9898c37ee7e1f2fb19d7cfaab10301f", "html_url": "https://github.com/rust-lang/rust/commit/05f92b84c9898c37ee7e1f2fb19d7cfaab10301f"}, {"sha": "8e406760a4ee4bf0b0db5d0a14b8e5dca292d2d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e406760a4ee4bf0b0db5d0a14b8e5dca292d2d9", "html_url": "https://github.com/rust-lang/rust/commit/8e406760a4ee4bf0b0db5d0a14b8e5dca292d2d9"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "6775129f9df49fb11117159a531aa80bca294f9e", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7dbf315cde9993efa1c671011020d0b261bf7fa1/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dbf315cde9993efa1c671011020d0b261bf7fa1/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=7dbf315cde9993efa1c671011020d0b261bf7fa1", "patch": "@@ -36,17 +36,17 @@ impl LintPass for RedundantFieldNames {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantFieldNames {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n-        if let ExprStruct(ref path, ref fields, _) = expr.node {\n+        // Do not care about range expressions.\n+        // They could have redundant field name when desugared to structs.\n+        // e.g. `start..end` is desugared to `Range { start: start, end: end }`\n+        if is_range_expression(expr.span) {\n+            return;\n+        }\n+\n+        if let ExprStruct(_, ref fields, _) = expr.node {\n             for field in fields {\n                 let name = field.name.node;\n \n-                // Do not care about range expressions.\n-                // They could have redundant field name when desugared to structs.\n-                // e.g. `start..end` is desugared to `Range { start: start, end: end }`\n-                if is_range_expression(expr.span) {\n-                    continue;\n-                }\n-\n                 if match_var(&field.expr, name) && !field.is_shorthand {\n                     span_lint_and_sugg (\n                         cx,"}]}