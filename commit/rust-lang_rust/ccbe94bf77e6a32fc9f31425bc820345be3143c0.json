{"sha": "ccbe94bf77e6a32fc9f31425bc820345be3143c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYmU5NGJmNzdlNmEzMmZjOWYzMTQyNWJjODIwMzQ1YmUzMTQzYzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-17T19:52:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-19T20:53:16Z"}, "message": "Simplify search for bare `\\r` in doc comments\n\nOuter `if` is the fast path -- it calls into hyperoptimized memchr.\n\nThe inner loop is just the simplest code possible -- it doesn't\ngenerated the tightest code, but that shouldn't matter if we are going\nto error anyhow.", "tree": {"sha": "9b5ba0c7121a0908a2a0c9ff0c5f1b8f80ea1c30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b5ba0c7121a0908a2a0c9ff0c5f1b8f80ea1c30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccbe94bf77e6a32fc9f31425bc820345be3143c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccbe94bf77e6a32fc9f31425bc820345be3143c0", "html_url": "https://github.com/rust-lang/rust/commit/ccbe94bf77e6a32fc9f31425bc820345be3143c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccbe94bf77e6a32fc9f31425bc820345be3143c0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39197e673e79ca91ac6f1484adf3aa051696d575", "url": "https://api.github.com/repos/rust-lang/rust/commits/39197e673e79ca91ac6f1484adf3aa051696d575", "html_url": "https://github.com/rust-lang/rust/commit/39197e673e79ca91ac6f1484adf3aa051696d575"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "60a4dc574cb8775e2a4b68c7e2ce198ca9bcabe9", "filename": "src/librustc_parse/lexer/mod.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ccbe94bf77e6a32fc9f31425bc820345be3143c0/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbe94bf77e6a32fc9f31425bc820345be3143c0/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Fmod.rs?ref=ccbe94bf77e6a32fc9f31425bc820345be3143c0", "patch": "@@ -323,20 +323,17 @@ impl<'a> StringReader<'a> {\n         comment_kind: CommentKind,\n         doc_style: DocStyle,\n     ) -> TokenKind {\n-        let mut idx = 0;\n-        loop {\n-            idx = match content[idx..].find('\\r') {\n-                None => break,\n-                Some(it) => idx + it + 1,\n-            };\n-            self.err_span_(\n-                content_start + BytePos(idx as u32 - 1),\n-                content_start + BytePos(idx as u32),\n-                match comment_kind {\n-                    CommentKind::Line => \"bare CR not allowed in doc-comment\",\n-                    CommentKind::Block => \"bare CR not allowed in block doc-comment\",\n-                },\n-            );\n+        if content.contains('\\r') {\n+            for (idx, _) in content.char_indices().filter(|&(_, c)| c == '\\r') {\n+                self.err_span_(\n+                    content_start + BytePos(idx as u32),\n+                    content_start + BytePos(idx as u32 + 1),\n+                    match comment_kind {\n+                        CommentKind::Line => \"bare CR not allowed in doc-comment\",\n+                        CommentKind::Block => \"bare CR not allowed in block doc-comment\",\n+                    },\n+                );\n+            }\n         }\n \n         let attr_style = match doc_style {"}]}