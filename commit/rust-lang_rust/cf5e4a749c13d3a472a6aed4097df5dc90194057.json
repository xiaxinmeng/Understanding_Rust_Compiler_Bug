{"sha": "cf5e4a749c13d3a472a6aed4097df5dc90194057", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNWU0YTc0OWMxM2QzYTQ3MmE2YWVkNDA5N2RmNWRjOTAxOTQwNTc=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-04-29T14:58:36Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-04-29T15:04:57Z"}, "message": "Add explicit references to the BuildHasher trait", "tree": {"sha": "45f673a81d6109890100d544ec23210218cc1fe3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45f673a81d6109890100d544ec23210218cc1fe3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf5e4a749c13d3a472a6aed4097df5dc90194057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf5e4a749c13d3a472a6aed4097df5dc90194057", "html_url": "https://github.com/rust-lang/rust/commit/cf5e4a749c13d3a472a6aed4097df5dc90194057", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf5e4a749c13d3a472a6aed4097df5dc90194057/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e91aebc1a3835b9b420da0c021e211175a724b8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91aebc1a3835b9b420da0c021e211175a724b8d", "html_url": "https://github.com/rust-lang/rust/commit/e91aebc1a3835b9b420da0c021e211175a724b8d"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "56cf9be339194e75fe8d09719e03784b66750754", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cf5e4a749c13d3a472a6aed4097df5dc90194057/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf5e4a749c13d3a472a6aed4097df5dc90194057/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=cf5e4a749c13d3a472a6aed4097df5dc90194057", "patch": "@@ -251,6 +251,9 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// cause many collisions and very poor performance. Setting it\n     /// manually using this function can expose a DoS attack vector.\n     ///\n+    /// The `hash_builder` passed should implement the [`BuildHasher`] trait for\n+    /// the HashMap to be useful, see its documentation for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -261,6 +264,8 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// let mut map = HashMap::with_hasher(s);\n     /// map.insert(1, 2);\n     /// ```\n+    ///\n+    /// [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n     pub fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {\n@@ -278,6 +283,9 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// cause many collisions and very poor performance. Setting it\n     /// manually using this function can expose a DoS attack vector.\n     ///\n+    /// The `hash_builder` passed should implement the [`BuildHasher`] trait for\n+    /// the HashMap to be useful, see its documentation for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -288,6 +296,8 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// let mut map = HashMap::with_capacity_and_hasher(10, s);\n     /// map.insert(1, 2);\n     /// ```\n+    ///\n+    /// [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n     pub fn with_capacity_and_hasher(capacity: usize, hash_builder: S) -> HashMap<K, V, S> {"}, {"sha": "ca06457291cae7e282f800df8fb14e3faec74984", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cf5e4a749c13d3a472a6aed4097df5dc90194057/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf5e4a749c13d3a472a6aed4097df5dc90194057/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=cf5e4a749c13d3a472a6aed4097df5dc90194057", "patch": "@@ -273,6 +273,9 @@ impl<T, S> HashSet<T, S> {\n     /// cause many collisions and very poor performance. Setting it\n     /// manually using this function can expose a DoS attack vector.\n     ///\n+    /// The `hash_builder` passed should implement the [`BuildHasher`] trait for\n+    /// the HashMap to be useful, see its documentation for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -283,6 +286,8 @@ impl<T, S> HashSet<T, S> {\n     /// let mut set = HashSet::with_hasher(s);\n     /// set.insert(2);\n     /// ```\n+    ///\n+    /// [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n     pub fn with_hasher(hasher: S) -> HashSet<T, S> {\n@@ -300,6 +305,9 @@ impl<T, S> HashSet<T, S> {\n     /// cause many collisions and very poor performance. Setting it\n     /// manually using this function can expose a DoS attack vector.\n     ///\n+    /// The `hash_builder` passed should implement the [`BuildHasher`] trait for\n+    /// the HashMap to be useful, see its documentation for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -310,6 +318,8 @@ impl<T, S> HashSet<T, S> {\n     /// let mut set = HashSet::with_capacity_and_hasher(10, s);\n     /// set.insert(1);\n     /// ```\n+    ///\n+    /// [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {"}]}