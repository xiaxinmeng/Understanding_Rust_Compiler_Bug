{"sha": "c57920b37b401ca364b6d4c99dc714f28988c7f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NzkyMGIzN2I0MDFjYTM2NGI2ZDRjOTlkYzcxNGYyODk4OGM3ZjA=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-01-15T20:53:56Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-01-15T20:53:56Z"}, "message": "path: Fix joining Windows path when the receiver is \"C:\"\n\nWindowsPath::new(\"C:\").join(\"a\") produces r\"C:\\a\". This is incorrect.\nIt should produce \"C:a\".", "tree": {"sha": "5cf8fc5d56e3f9614ecb693b78eaf4c89ededf96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cf8fc5d56e3f9614ecb693b78eaf4c89ededf96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c57920b37b401ca364b6d4c99dc714f28988c7f0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c57920b37b401ca364b6d4c99dc714f28988c7f0", "html_url": "https://github.com/rust-lang/rust/commit/c57920b37b401ca364b6d4c99dc714f28988c7f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c57920b37b401ca364b6d4c99dc714f28988c7f0/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "900893112570eea5a01c0573ae1fa1e3a72397e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/900893112570eea5a01c0573ae1fa1e3a72397e9", "html_url": "https://github.com/rust-lang/rust/commit/900893112570eea5a01c0573ae1fa1e3a72397e9"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "f8d805991511f9772100dec211660edb99898cd6", "filename": "src/libstd/path/windows.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c57920b37b401ca364b6d4c99dc714f28988c7f0/src%2Flibstd%2Fpath%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57920b37b401ca364b6d4c99dc714f28988c7f0/src%2Flibstd%2Fpath%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fwindows.rs?ref=c57920b37b401ca364b6d4c99dc714f28988c7f0", "patch": "@@ -261,8 +261,13 @@ impl GenericPathUnsafe for Path {\n             let mut s = str::with_capacity(me.repr.len() + 1 + pathlen);\n             s.push_str(me.repr);\n             let plen = me.prefix_len();\n-            if !(me.repr.len() > plen && me.repr[me.repr.len()-1] == sep as u8) {\n-                s.push_char(sep);\n+            // if me is \"C:\" we don't want to add a path separator\n+            match me.prefix {\n+                Some(DiskPrefix) if me.repr.len() == plen => (),\n+                _ if !(me.repr.len() > plen && me.repr[me.repr.len()-1] == sep as u8) => {\n+                    s.push_char(sep);\n+                }\n+                _ => ()\n             }\n             match path_ {\n                 None => s.push_str(path),\n@@ -1549,6 +1554,8 @@ mod tests {\n         t!(s: \"C:a\\\\b\\\\c\", \"C:d\", \"C:a\\\\b\\\\c\\\\d\");\n         t!(s: \"C:a\\\\b\", \"..\\\\..\\\\..\\\\c\", \"C:..\\\\c\");\n         t!(s: \"C:\\\\a\\\\b\", \"..\\\\..\\\\..\\\\c\", \"C:\\\\c\");\n+        t!(s: \"C:\", r\"a\\b\\c\", r\"C:a\\b\\c\");\n+        t!(s: \"C:\", r\"..\\a\", r\"C:..\\a\");\n         t!(s: \"\\\\\\\\server\\\\share\\\\foo\", \"bar\", \"\\\\\\\\server\\\\share\\\\foo\\\\bar\");\n         t!(s: \"\\\\\\\\server\\\\share\\\\foo\", \"..\\\\..\\\\bar\", \"\\\\\\\\server\\\\share\\\\bar\");\n         t!(s: \"\\\\\\\\server\\\\share\\\\foo\", \"C:baz\", \"C:baz\");"}]}