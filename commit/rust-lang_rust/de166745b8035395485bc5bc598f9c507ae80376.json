{"sha": "de166745b8035395485bc5bc598f9c507ae80376", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMTY2NzQ1YjgwMzUzOTU0ODViYzViYzU5OGY5YzUwN2FlODAzNzY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-06T01:27:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-06T01:27:34Z"}, "message": "rustboot: Report the alias-ness of function parameters in type errors", "tree": {"sha": "3c602c234e9eac5f09b58dd5ac31fac35c9cca63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c602c234e9eac5f09b58dd5ac31fac35c9cca63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de166745b8035395485bc5bc598f9c507ae80376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de166745b8035395485bc5bc598f9c507ae80376", "html_url": "https://github.com/rust-lang/rust/commit/de166745b8035395485bc5bc598f9c507ae80376", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de166745b8035395485bc5bc598f9c507ae80376/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79015e2d599287d448662e3436f77026c4ffb232", "url": "https://api.github.com/repos/rust-lang/rust/commits/79015e2d599287d448662e3436f77026c4ffb232", "html_url": "https://github.com/rust-lang/rust/commit/79015e2d599287d448662e3436f77026c4ffb232"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c22e788bef6ab38629e58c05d46a3497989bdff8", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/de166745b8035395485bc5bc598f9c507ae80376/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/de166745b8035395485bc5bc598f9c507ae80376/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=de166745b8035395485bc5bc598f9c507ae80376", "patch": "@@ -999,9 +999,14 @@ let rec pretty_ty_str (cx:ctxt) (fallback:(Ast.ty -> string)) (ty:Ast.ty) =\n           \"rec(\" ^ (String.concat \", \" fields) ^ \")\"\n       | Ast.TY_fn (fnsig, aux) ->\n           let format_slot slot =\n+            let prefix =\n+              match slot.Ast.slot_mode with\n+                  Ast.MODE_local -> \"\"\n+                | Ast.MODE_alias -> \"&\"\n+            in\n             match slot.Ast.slot_ty with\n                 None -> Common.bug () \"no ty in slot\"\n-              | Some ty' -> pretty_ty_str cx fallback ty'\n+              | Some ty' -> prefix ^ (pretty_ty_str cx fallback ty')\n           in\n           let effect = aux.Ast.fn_effect in\n           let qual = Fmt.sprintf_fmt Ast.fmt_effect_qual () effect in"}]}