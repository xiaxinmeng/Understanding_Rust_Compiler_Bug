{"sha": "8a59f81180b0699be24ad5c4e40d3b66b3d78447", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNTlmODExODBiMDY5OWJlMjRhZDVjNGU0MGQzYjY2YjNkNzg0NDc=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-03-12T07:01:21Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-03-12T07:01:21Z"}, "message": "Rename span_lint_node* functions to span_lint_hir*\n\nBecause they now take a `hir_id` instead of a `node_id` argument.", "tree": {"sha": "8587cbb3a4e90cb99d3fcb6692ebd28212431335", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8587cbb3a4e90cb99d3fcb6692ebd28212431335"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a59f81180b0699be24ad5c4e40d3b66b3d78447", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlyHWWkACgkQtvoGpuDi\nZltxvQ/6A2EjFFwNN3AfJXzRYmP7eOXWtT37GuRrOqeOB0egJ7161UlX8+r2eocF\nvwNkCoJvB/GC2jmoHv+qKAMEMk2V+oKCtzHcWpC49w/2D0eDterJWx4aHYgaZYfC\nCnV3SXa0TIjgM6o7bfcAzUJljHFvJbTeYrBCJSySwAmGW9rGRyMcIBY4lHsOekBt\n7FJZWK9bBG1s2hpMvamAe2LQQqNcYlzH8nQIH0lE2R2QLKb0K5TShOxzb8Ib9iL/\n+pxlgoyi0DyVmvmF++PLKMojFtkEZD+NVqlyzIpdV7L46jQM6VU+yAWT8Cd2Ox0E\nT3Zzc54g0lT0/M+l0RsHs0alaaAwJDMT+RP8rbr4T84p7LoC7A+Ihv6t15Q4YJ9K\nd2MB1ylFJEAMZUm3xrepQYJyU/FnDUtFKUGnErM2RcdcQNE/9NXoEHKzvmyI33LO\nGlJHL/fhPZMAI/XhXoZo40wY+l0Bgo1xCdGhFDXjz17jBTNV9JrojB4AFBQNAlp2\nMA3W3dLQ7sPGZEGxTpnXjwn3fy2o2hL5hfRY4A+HtViDiInWBKd1R/OR0/jgLapg\n3HQM3nCj6rOhKpJMAgy54lMU5hWkD8WLuuJCRh02l8Lqe8PfzsxHJMB2dgbOhk1J\n68bcqdqL0/1uXscReMitisE4Sxir99uhWVNi4aG/RAEYHnBHwW0=\n=gRFJ\n-----END PGP SIGNATURE-----", "payload": "tree 8587cbb3a4e90cb99d3fcb6692ebd28212431335\nparent 1cdac4a9c798f8e22a4db220020713175eb9159b\nauthor Philipp Hansch <dev@phansch.net> 1552374081 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1552374081 +0100\n\nRename span_lint_node* functions to span_lint_hir*\n\nBecause they now take a `hir_id` instead of a `node_id` argument.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a59f81180b0699be24ad5c4e40d3b66b3d78447", "html_url": "https://github.com/rust-lang/rust/commit/8a59f81180b0699be24ad5c4e40d3b66b3d78447", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a59f81180b0699be24ad5c4e40d3b66b3d78447/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cdac4a9c798f8e22a4db220020713175eb9159b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cdac4a9c798f8e22a4db220020713175eb9159b", "html_url": "https://github.com/rust-lang/rust/commit/1cdac4a9c798f8e22a4db220020713175eb9159b"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "fde4081ae8f5389c04df175672e831708b331b89", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8a59f81180b0699be24ad5c4e40d3b66b3d78447/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a59f81180b0699be24ad5c4e40d3b66b3d78447/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=8a59f81180b0699be24ad5c4e40d3b66b3d78447", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::paths;\n use crate::utils::sugg::DiagnosticBuilderExt;\n-use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_node_and_then};\n+use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_hir_and_then};\n use if_chain::if_chain;\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n@@ -163,7 +163,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n                                     }\n \n                                     if let Some(sp) = can_derive_default(self_ty, cx, default_trait_id) {\n-                                        span_lint_node_and_then(\n+                                        span_lint_hir_and_then(\n                                             cx,\n                                             NEW_WITHOUT_DEFAULT,\n                                             id,\n@@ -182,7 +182,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n                                                 );\n                                             });\n                                     } else {\n-                                        span_lint_node_and_then(\n+                                        span_lint_hir_and_then(\n                                             cx,\n                                             NEW_WITHOUT_DEFAULT,\n                                             id,"}, {"sha": "2f034b9f1aac51d01e03db025943b83c428974ad", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a59f81180b0699be24ad5c4e40d3b66b3d78447/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a59f81180b0699be24ad5c4e40d3b66b3d78447/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=8a59f81180b0699be24ad5c4e40d3b66b3d78447", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::{is_automatically_derived, span_lint_node};\n+use crate::utils::{is_automatically_derived, span_lint_hir};\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n@@ -51,7 +51,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             then {\n                 for impl_item in impl_items {\n                     if impl_item.ident.name == \"ne\" {\n-                        span_lint_node(\n+                        span_lint_hir(\n                             cx,\n                             PARTIALEQ_NE_IMPL,\n                             impl_item.id.hir_id,"}, {"sha": "bb90bdf33d85a9111b28ad1f911078c81f49b5f5", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a59f81180b0699be24ad5c4e40d3b66b3d78447/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a59f81180b0699be24ad5c4e40d3b66b3d78447/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=8a59f81180b0699be24ad5c4e40d3b66b3d78447", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{\n-    has_drop, in_macro, is_copy, match_def_path, match_type, paths, snippet_opt, span_lint_node,\n-    span_lint_node_and_then, walk_ptrs_ty_depth,\n+    has_drop, in_macro, is_copy, match_def_path, match_type, paths, snippet_opt, span_lint_hir,\n+    span_lint_hir_and_then, walk_ptrs_ty_depth,\n };\n use if_chain::if_chain;\n use matches::matches;\n@@ -199,7 +199,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantClone {\n                             span.lo() + BytePos(u32::try_from(dot).unwrap())\n                         );\n \n-                        span_lint_node_and_then(cx, REDUNDANT_CLONE, node, sugg_span, \"redundant clone\", |db| {\n+                        span_lint_hir_and_then(cx, REDUNDANT_CLONE, node, sugg_span, \"redundant clone\", |db| {\n                             db.span_suggestion(\n                                 sugg_span,\n                                 \"remove this\",\n@@ -212,7 +212,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantClone {\n                             );\n                         });\n                     } else {\n-                        span_lint_node(cx, REDUNDANT_CLONE, node, span, \"redundant clone\");\n+                        span_lint_hir(cx, REDUNDANT_CLONE, node, span, \"redundant clone\");\n                     }\n                 }\n             }"}, {"sha": "fa9a7dac9a0b830df2d1ea4f0bb48f170e709d86", "filename": "clippy_lints/src/utils/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8a59f81180b0699be24ad5c4e40d3b66b3d78447/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a59f81180b0699be24ad5c4e40d3b66b3d78447/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs?ref=8a59f81180b0699be24ad5c4e40d3b66b3d78447", "patch": "@@ -134,19 +134,19 @@ pub fn span_lint_and_then<'a, 'tcx: 'a, T: LintContext<'tcx>, F>(\n     db.docs_link(lint);\n }\n \n-pub fn span_lint_node(cx: &LateContext<'_, '_>, lint: &'static Lint, node: HirId, sp: Span, msg: &str) {\n-    DiagnosticWrapper(cx.tcx.struct_span_lint_hir(lint, node, sp, msg)).docs_link(lint);\n+pub fn span_lint_hir(cx: &LateContext<'_, '_>, lint: &'static Lint, hir_id: HirId, sp: Span, msg: &str) {\n+    DiagnosticWrapper(cx.tcx.struct_span_lint_hir(lint, hir_id, sp, msg)).docs_link(lint);\n }\n \n-pub fn span_lint_node_and_then(\n+pub fn span_lint_hir_and_then(\n     cx: &LateContext<'_, '_>,\n     lint: &'static Lint,\n-    node: HirId,\n+    hir_id: HirId,\n     sp: Span,\n     msg: &str,\n     f: impl FnOnce(&mut DiagnosticBuilder<'_>),\n ) {\n-    let mut db = DiagnosticWrapper(cx.tcx.struct_span_lint_hir(lint, node, sp, msg));\n+    let mut db = DiagnosticWrapper(cx.tcx.struct_span_lint_hir(lint, hir_id, sp, msg));\n     f(&mut db.0);\n     db.docs_link(lint);\n }"}]}