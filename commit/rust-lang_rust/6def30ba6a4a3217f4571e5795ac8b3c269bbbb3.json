{"sha": "6def30ba6a4a3217f4571e5795ac8b3c269bbbb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZWYzMGJhNmE0YTMyMTdmNDU3MWU1Nzk1YWM4YjNjMjY5YmJiYjM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-23T16:32:50Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-08T13:52:02Z"}, "message": "Move the `memory_accessed` hook onto the `Extra` value", "tree": {"sha": "9fe7e4d8671c87085a9d777984ab8dc316de3acd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fe7e4d8671c87085a9d777984ab8dc316de3acd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3", "html_url": "https://github.com/rust-lang/rust/commit/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48f6941acfeb96b572314243bb60a13e4db3689d", "url": "https://api.github.com/repos/rust-lang/rust/commits/48f6941acfeb96b572314243bb60a13e4db3689d", "html_url": "https://github.com/rust-lang/rust/commit/48f6941acfeb96b572314243bb60a13e4db3689d"}], "stats": {"total": 52, "additions": 31, "deletions": 21}, "files": [{"sha": "cf38116b0b472fb62aba4f46797eea134c7ae0e1", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=6def30ba6a4a3217f4571e5795ac8b3c269bbbb3", "patch": "@@ -40,6 +40,36 @@ pub struct Allocation<Tag=(),Extra=()> {\n     pub extra: Extra,\n }\n \n+trait AllocationExtra<Tag> {\n+    /// Hook for performing extra checks on a memory read access.\n+    ///\n+    /// Takes read-only access to the allocation so we can keep all the memory read\n+    /// operations take `&self`.  Use a `RefCell` in `AllocExtra` if you\n+    /// need to mutate.\n+    #[inline]\n+    fn memory_read(\n+        &self,\n+        _ptr: Pointer<Self::PointerTag>,\n+        _size: Size,\n+    ) -> EvalResult<'tcx> {\n+        Ok(())\n+    }\n+\n+    /// Hook for performing extra checks on a memory write access.\n+    ///\n+    /// Takes read-only access to the allocation so we can keep all the memory read\n+    /// operations take `&self`.  Use a `RefCell` in `AllocExtra` if you\n+    /// need to mutate.\n+    #[inline]\n+    fn memory_written(\n+        &mut self,\n+        _ptr: Pointer<Self::PointerTag>,\n+        _size: Size,\n+    ) -> EvalResult<'tcx> {\n+        Ok(())\n+    }\n+}\n+\n impl<Tag, Extra: Default> Allocation<Tag, Extra> {\n     /// Creates a read-only allocation initialized by the given bytes\n     pub fn from_bytes(slice: &[u8], align: Align) -> Self {"}, {"sha": "282104f78427d46a8e5bb82c1972a19028ef02a0", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=6def30ba6a4a3217f4571e5795ac8b3c269bbbb3", "patch": "@@ -26,7 +26,7 @@ pub use self::error::{\n \n pub use self::value::{Scalar, ConstValue};\n \n-pub use self::allocation::Allocation;\n+pub use self::allocation::{Allocation, MemoryAccess};\n \n use std::fmt;\n use mir;"}, {"sha": "7e42fd97c569ccf0be292593d5523d35d3dc1961", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6def30ba6a4a3217f4571e5795ac8b3c269bbbb3/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=6def30ba6a4a3217f4571e5795ac8b3c269bbbb3", "patch": "@@ -174,26 +174,6 @@ pub trait Machine<'a, 'mir, 'tcx>: Sized {\n         dest: PlaceTy<'tcx, Self::PointerTag>,\n     ) -> EvalResult<'tcx>;\n \n-    /// Hook for performing extra checks on a memory read access.\n-    #[inline]\n-    fn memory_read(\n-        _alloc: &Allocation<Self::PointerTag, Self::AllocExtra>,\n-        _ptr: Pointer<Self::PointerTag>,\n-        _size: Size,\n-    ) -> EvalResult<'tcx> {\n-        Ok(())\n-    }\n-\n-    /// Hook for performing extra checks on a memory write access.\n-    #[inline]\n-    fn memory_written(\n-        _alloc: &mut Allocation<Self::PointerTag, Self::AllocExtra>,\n-        _ptr: Pointer<Self::PointerTag>,\n-        _size: Size,\n-    ) -> EvalResult<'tcx> {\n-        Ok(())\n-    }\n-\n     /// Hook for performing extra checks when memory gets deallocated.\n     #[inline]\n     fn memory_deallocated("}]}