{"sha": "0168dfec6d8ec4dcb037401ae0c9c9ec8efcc173", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNjhkZmVjNmQ4ZWM0ZGNiMDM3NDAxYWUwYzljOWVjOGVmY2MxNzM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-08-02T14:27:17Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-08-03T14:06:19Z"}, "message": "Use predefined helper instead of a new one", "tree": {"sha": "582516ca9db761e7c2431ca43387caf82fc7b2c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/582516ca9db761e7c2431ca43387caf82fc7b2c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0168dfec6d8ec4dcb037401ae0c9c9ec8efcc173", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0168dfec6d8ec4dcb037401ae0c9c9ec8efcc173", "html_url": "https://github.com/rust-lang/rust/commit/0168dfec6d8ec4dcb037401ae0c9c9ec8efcc173", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0168dfec6d8ec4dcb037401ae0c9c9ec8efcc173/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30bc5a936bf7dd57ba5dedaa5d2054f01d1eab2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/30bc5a936bf7dd57ba5dedaa5d2054f01d1eab2c", "html_url": "https://github.com/rust-lang/rust/commit/30bc5a936bf7dd57ba5dedaa5d2054f01d1eab2c"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "aecb2373eaf36deb223d1980ec1fd2e8fbd1a14f", "filename": "compiler/rustc_mir/src/transform/abort_unwinding_calls.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0168dfec6d8ec4dcb037401ae0c9c9ec8efcc173/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fabort_unwinding_calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0168dfec6d8ec4dcb037401ae0c9c9ec8efcc173/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fabort_unwinding_calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fabort_unwinding_calls.rs?ref=0168dfec6d8ec4dcb037401ae0c9c9ec8efcc173", "patch": "@@ -125,28 +125,17 @@ impl<'tcx> MirPass<'tcx> for AbortUnwindingCalls {\n             let abort_bb = body.basic_blocks_mut().push(bb);\n \n             for bb in calls_to_terminate {\n-                let cleanup = get_cleanup(body.basic_blocks_mut()[bb].terminator_mut());\n+                let cleanup = body.basic_blocks_mut()[bb].terminator_mut().unwind_mut().unwrap();\n                 *cleanup = Some(abort_bb);\n             }\n         }\n \n         for id in cleanups_to_remove {\n-            let cleanup = get_cleanup(body.basic_blocks_mut()[id].terminator_mut());\n+            let cleanup = body.basic_blocks_mut()[id].terminator_mut().unwind_mut().unwrap();\n             *cleanup = None;\n         }\n \n         // We may have invalidated some `cleanup` blocks so clean those up now.\n         super::simplify::remove_dead_blocks(tcx, body);\n     }\n }\n-\n-fn get_cleanup<'a>(t: &'a mut Terminator<'_>) -> &'a mut Option<BasicBlock> {\n-    match &mut t.kind {\n-        TerminatorKind::Call { cleanup, .. }\n-        | TerminatorKind::Drop { unwind: cleanup, .. }\n-        | TerminatorKind::DropAndReplace { unwind: cleanup, .. }\n-        | TerminatorKind::Assert { cleanup, .. }\n-        | TerminatorKind::FalseUnwind { unwind: cleanup, .. } => cleanup,\n-        _ => unreachable!(),\n-    }\n-}"}]}