{"sha": "7bd4fde684fb3ef282b83f90defbf2790034c69b", "node_id": "C_kwDOAAsO6NoAKDdiZDRmZGU2ODRmYjNlZjI4MmI4M2Y5MGRlZmJmMjc5MDAzNGM2OWI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-17T10:28:33Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-17T10:28:33Z"}, "message": "Compute dominators on demand for borrowck.", "tree": {"sha": "3b70a15c6ca68acae83e01e454076dc0b5c3c4ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b70a15c6ca68acae83e01e454076dc0b5c3c4ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bd4fde684fb3ef282b83f90defbf2790034c69b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd4fde684fb3ef282b83f90defbf2790034c69b", "html_url": "https://github.com/rust-lang/rust/commit/7bd4fde684fb3ef282b83f90defbf2790034c69b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bd4fde684fb3ef282b83f90defbf2790034c69b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae318e34449c0b8d92f4067d68fda604bac5da82", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae318e34449c0b8d92f4067d68fda604bac5da82", "html_url": "https://github.com/rust-lang/rust/commit/ae318e34449c0b8d92f4067d68fda604bac5da82"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "04b8174079acc5360d3157d82a1a0b699bbd2b40", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bd4fde684fb3ef282b83f90defbf2790034c69b/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bd4fde684fb3ef282b83f90defbf2790034c69b/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=7bd4fde684fb3ef282b83f90defbf2790034c69b", "patch": "@@ -2382,7 +2382,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         let mut back_edge_stack = Vec::new();\n \n         predecessor_locations(self.body, location).for_each(|predecessor| {\n-            if location.dominates(predecessor, self.dominators) {\n+            if location.dominates(predecessor, self.dominators()) {\n                 back_edge_stack.push(predecessor)\n             } else {\n                 stack.push(predecessor);\n@@ -2494,7 +2494,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n             let mut has_predecessor = false;\n             predecessor_locations(self.body, location).for_each(|predecessor| {\n-                if location.dominates(predecessor, self.dominators) {\n+                if location.dominates(predecessor, self.dominators()) {\n                     back_edge_stack.push(predecessor)\n                 } else {\n                     stack.push(predecessor);"}, {"sha": "43c4e1a9d6fd21bdbe8e94d394f46a7e3cf472b1", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bd4fde684fb3ef282b83f90defbf2790034c69b/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bd4fde684fb3ef282b83f90defbf2790034c69b/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=7bd4fde684fb3ef282b83f90defbf2790034c69b", "patch": "@@ -330,7 +330,6 @@ fn do_mir_borrowck<'tcx>(\n                 used_mut: Default::default(),\n                 used_mut_upvars: SmallVec::new(),\n                 borrow_set: Rc::clone(&borrow_set),\n-                dominators: promoted_body.basic_blocks.dominators(),\n                 upvars: Vec::new(),\n                 local_names: IndexVec::from_elem(None, &promoted_body.local_decls),\n                 region_names: RefCell::default(),\n@@ -359,7 +358,6 @@ fn do_mir_borrowck<'tcx>(\n         used_mut: Default::default(),\n         used_mut_upvars: SmallVec::new(),\n         borrow_set: Rc::clone(&borrow_set),\n-        dominators: body.basic_blocks.dominators(),\n         upvars,\n         local_names,\n         region_names: RefCell::default(),\n@@ -590,9 +588,6 @@ struct MirBorrowckCtxt<'cx, 'tcx> {\n     /// The set of borrows extracted from the MIR\n     borrow_set: Rc<BorrowSet<'tcx>>,\n \n-    /// Dominators for MIR\n-    dominators: &'cx Dominators<BasicBlock>,\n-\n     /// Information about upvars not necessarily preserved in types or MIR\n     upvars: Vec<Upvar<'tcx>>,\n \n@@ -1102,7 +1097,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n                 (Read(kind), BorrowKind::Unique | BorrowKind::Mut { .. }) => {\n                     // Reading from mere reservations of mutable-borrows is OK.\n-                    if !is_active(this.dominators, borrow, location) {\n+                    if !is_active(this.dominators(), borrow, location) {\n                         assert!(allow_two_phase_borrow(borrow.kind));\n                         return Control::Continue;\n                     }\n@@ -2266,6 +2261,11 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n     fn is_upvar_field_projection(&self, place_ref: PlaceRef<'tcx>) -> Option<FieldIdx> {\n         path_utils::is_upvar_field_projection(self.infcx.tcx, &self.upvars, place_ref, self.body())\n     }\n+\n+    fn dominators(&self) -> &Dominators<BasicBlock> {\n+        // `BasicBlocks` computes dominators on-demand and caches them.\n+        self.body.basic_blocks.dominators()\n+    }\n }\n \n mod error {"}]}