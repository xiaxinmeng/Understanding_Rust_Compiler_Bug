{"sha": "5af61cb114e4af46e5c1c6c97b4556d5f007536f", "node_id": "C_kwDOAAsO6NoAKDVhZjYxY2IxMTRlNGFmNDZlNWMxYzZjOTdiNDU1NmQ1ZjAwNzUzNmY", "commit": {"author": {"name": "DeveloperC", "email": "DeveloperC@protonmail.com", "date": "2021-09-25T12:55:45Z"}, "committer": {"name": "DeveloperC", "email": "DeveloperC@protonmail.com", "date": "2021-10-05T18:09:49Z"}, "message": "refactor: VecDeques IterMut fields to private\n\nMade the fields of VecDeque's IterMut private by creating a IterMut::new(...) function to create a new instance of IterMut and migrating usage to use IterMut::new(...).", "tree": {"sha": "4cbcdf6d717af2004426542a8f184e1bd31e086e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cbcdf6d717af2004426542a8f184e1bd31e086e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5af61cb114e4af46e5c1c6c97b4556d5f007536f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5af61cb114e4af46e5c1c6c97b4556d5f007536f", "html_url": "https://github.com/rust-lang/rust/commit/5af61cb114e4af46e5c1c6c97b4556d5f007536f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5af61cb114e4af46e5c1c6c97b4556d5f007536f/comments", "author": {"login": "DeveloperC286", "id": 65925405, "node_id": "MDQ6VXNlcjY1OTI1NDA1", "avatar_url": "https://avatars.githubusercontent.com/u/65925405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeveloperC286", "html_url": "https://github.com/DeveloperC286", "followers_url": "https://api.github.com/users/DeveloperC286/followers", "following_url": "https://api.github.com/users/DeveloperC286/following{/other_user}", "gists_url": "https://api.github.com/users/DeveloperC286/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeveloperC286/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeveloperC286/subscriptions", "organizations_url": "https://api.github.com/users/DeveloperC286/orgs", "repos_url": "https://api.github.com/users/DeveloperC286/repos", "events_url": "https://api.github.com/users/DeveloperC286/events{/privacy}", "received_events_url": "https://api.github.com/users/DeveloperC286/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DeveloperC286", "id": 65925405, "node_id": "MDQ6VXNlcjY1OTI1NDA1", "avatar_url": "https://avatars.githubusercontent.com/u/65925405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeveloperC286", "html_url": "https://github.com/DeveloperC286", "followers_url": "https://api.github.com/users/DeveloperC286/followers", "following_url": "https://api.github.com/users/DeveloperC286/following{/other_user}", "gists_url": "https://api.github.com/users/DeveloperC286/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeveloperC286/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeveloperC286/subscriptions", "organizations_url": "https://api.github.com/users/DeveloperC286/orgs", "repos_url": "https://api.github.com/users/DeveloperC286/repos", "events_url": "https://api.github.com/users/DeveloperC286/events{/privacy}", "received_events_url": "https://api.github.com/users/DeveloperC286/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25ec8273855fde2d72ae877b397e054de5300e10", "url": "https://api.github.com/repos/rust-lang/rust/commits/25ec8273855fde2d72ae877b397e054de5300e10", "html_url": "https://github.com/rust-lang/rust/commit/25ec8273855fde2d72ae877b397e054de5300e10"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "31e6e3b06af5fdd1e7e27ee88b013db480d0283d", "filename": "library/alloc/src/collections/vec_deque/iter_mut.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5af61cb114e4af46e5c1c6c97b4556d5f007536f/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5af61cb114e4af46e5c1c6c97b4556d5f007536f/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter_mut.rs?ref=5af61cb114e4af46e5c1c6c97b4556d5f007536f", "patch": "@@ -13,10 +13,21 @@ use super::{count, wrap_index, RingSlices};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct IterMut<'a, T: 'a> {\n     // Internal safety invariant: the entire slice is dereferencable.\n-    pub(crate) ring: *mut [T],\n-    pub(crate) tail: usize,\n-    pub(crate) head: usize,\n-    pub(crate) phantom: PhantomData<&'a mut [T]>,\n+    ring: *mut [T],\n+    tail: usize,\n+    head: usize,\n+    phantom: PhantomData<&'a mut [T]>,\n+}\n+\n+impl<'a, T> IterMut<'a, T> {\n+    pub(super) unsafe fn new(\n+        ring: *mut [T],\n+        tail: usize,\n+        head: usize,\n+        phantom: PhantomData<&'a mut [T]>,\n+    ) -> Self {\n+        IterMut { ring, tail, head, phantom }\n+    }\n }\n \n // SAFETY: we do nothing thread-local and there is no interior mutability,"}, {"sha": "54fcb358ede1be7cc5f3b4f864ca8b120a23d714", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5af61cb114e4af46e5c1c6c97b4556d5f007536f/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5af61cb114e4af46e5c1c6c97b4556d5f007536f/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=5af61cb114e4af46e5c1c6c97b4556d5f007536f", "patch": "@@ -1000,12 +1000,9 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     pub fn iter_mut(&mut self) -> IterMut<'_, T> {\n         // SAFETY: The internal `IterMut` safety invariant is established because the\n         // `ring` we create is a dereferencable slice for lifetime '_.\n-        IterMut {\n-            tail: self.tail,\n-            head: self.head,\n-            ring: ptr::slice_from_raw_parts_mut(self.ptr(), self.cap()),\n-            phantom: PhantomData,\n-        }\n+        let ring = ptr::slice_from_raw_parts_mut(self.ptr(), self.cap());\n+\n+        unsafe { IterMut::new(ring, self.tail, self.head, PhantomData) }\n     }\n \n     /// Returns a pair of slices which contain, in order, the contents of the\n@@ -1192,12 +1189,9 @@ impl<T, A: Allocator> VecDeque<T, A> {\n \n         // SAFETY: The internal `IterMut` safety invariant is established because the\n         // `ring` we create is a dereferencable slice for lifetime '_.\n-        IterMut {\n-            tail,\n-            head,\n-            ring: ptr::slice_from_raw_parts_mut(self.ptr(), self.cap()),\n-            phantom: PhantomData,\n-        }\n+        let ring = ptr::slice_from_raw_parts_mut(self.ptr(), self.cap());\n+\n+        unsafe { IterMut::new(ring, tail, head, PhantomData) }\n     }\n \n     /// Creates a draining iterator that removes the specified range in the"}]}