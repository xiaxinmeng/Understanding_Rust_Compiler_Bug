{"sha": "8a5889d2a2eb4b2c9d41f6f3991fdd2622933047", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNTg4OWQyYTJlYjRiMmM5ZDQxZjZmMzk5MWZkZDI2MjI5MzMwNDc=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-18T11:57:34Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-19T09:19:59Z"}, "message": "std::str: Add str::raw::slice_unchecked\n\nAdd a function like raw::slice_bytes, but it doesn't check slice\nboundaries. For iterator use where we always know the begin, end indices\nare in range.", "tree": {"sha": "2e9b24610fd78b96ff3f5bf37e27bccdcbf287f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e9b24610fd78b96ff3f5bf37e27bccdcbf287f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a5889d2a2eb4b2c9d41f6f3991fdd2622933047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5889d2a2eb4b2c9d41f6f3991fdd2622933047", "html_url": "https://github.com/rust-lang/rust/commit/8a5889d2a2eb4b2c9d41f6f3991fdd2622933047", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a5889d2a2eb4b2c9d41f6f3991fdd2622933047/comments", "author": null, "committer": null, "parents": [{"sha": "3cb5b8dc1849c5958c62caf990faf75fcec6b2ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb5b8dc1849c5958c62caf990faf75fcec6b2ea", "html_url": "https://github.com/rust-lang/rust/commit/3cb5b8dc1849c5958c62caf990faf75fcec6b2ea"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "5022e558884f177a69ed07c1c2b8e066bd646625", "filename": "src/libstd/str.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8a5889d2a2eb4b2c9d41f6f3991fdd2622933047/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5889d2a2eb4b2c9d41f6f3991fdd2622933047/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=8a5889d2a2eb4b2c9d41f6f3991fdd2622933047", "patch": "@@ -847,12 +847,21 @@ pub mod raw {\n     /// If end is greater than the length of the string.\n     #[inline]\n     pub unsafe fn slice_bytes<'a>(s: &'a str, begin: uint, end: uint) -> &'a str {\n-        do s.as_imm_buf |sbuf, n| {\n-             assert!((begin <= end));\n-             assert!((end <= n));\n+        assert!(begin <= end);\n+        assert!(end <= s.len());\n+        slice_unchecked(s, begin, end)\n+    }\n \n+    /// Takes a bytewise (not UTF-8) slice from a string.\n+    ///\n+    /// Returns the substring from [`begin`..`end`).\n+    ///\n+    /// Caller must check slice boundaries!\n+    #[inline]\n+    pub unsafe fn slice_unchecked<'a>(s: &'a str, begin: uint, end: uint) -> &'a str {\n+        do s.as_imm_buf |sbuf, _n| {\n              cast::transmute(Slice {\n-                 data: ptr::offset(sbuf, begin as int),\n+                 data: sbuf.offset_inbounds(begin as int),\n                  len: end - begin,\n              })\n         }"}]}