{"sha": "e5d21b9ff1ea4160b728b62aeca110c0a563d9ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZDIxYjlmZjFlYTQxNjBiNzI4YjYyYWVjYTExMGMwYTU2M2Q5ZWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-22T20:10:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-22T20:11:02Z"}, "message": "core::rt: Make I/O constructors return Option instead of Result\n\nFor consistency, for all I/O calls, inspecting the error can be done with\nthe io_error condition.", "tree": {"sha": "0dade2a5212aadcecc5533b4619f65df2758977e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dade2a5212aadcecc5533b4619f65df2758977e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee", "html_url": "https://github.com/rust-lang/rust/commit/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0786fdffcbae5c89762455fd3b3ffb5b9a3b6a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0786fdffcbae5c89762455fd3b3ffb5b9a3b6a1", "html_url": "https://github.com/rust-lang/rust/commit/d0786fdffcbae5c89762455fd3b3ffb5b9a3b6a1"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "e4fe066a173f427ecd7359c211b37313fb796bf6", "filename": "src/libcore/rt/io/file.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/src%2Flibcore%2Frt%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/src%2Flibcore%2Frt%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Ffile.rs?ref=e5d21b9ff1ea4160b728b62aeca110c0a563d9ee", "patch": "@@ -42,7 +42,7 @@ impl FileStream {\n     pub fn open<P: PathLike>(_path: &P,\n                              _mode: FileMode,\n                              _access: FileAccess\n-                            ) -> Result<FileStream, IoError> {\n+                            ) -> Option<FileStream> {\n         fail!()\n     }\n }"}, {"sha": "d726bae821c874587bfe5e645fa5e3915ac0d674", "filename": "src/libcore/rt/io/net/tcp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs?ref=e5d21b9ff1ea4160b728b62aeca110c0a563d9ee", "patch": "@@ -16,7 +16,7 @@ use super::ip::IpAddr;\n pub struct TcpStream;\n \n impl TcpStream {\n-    pub fn connect(_addr: IpAddr) -> Result<TcpStream, IoError> {\n+    pub fn connect(_addr: IpAddr) -> Option<TcpStream> {\n         fail!()\n     }\n }\n@@ -40,7 +40,7 @@ impl Close for TcpStream {\n pub struct TcpListener;\n \n impl TcpListener {\n-    pub fn bind(_addr: IpAddr) -> Result<TcpListener, IoError> {\n+    pub fn bind(_addr: IpAddr) -> Option<TcpListener> {\n         fail!()\n     }\n }"}, {"sha": "8691a697e888892c62f867ad64fc2b4a4c340045", "filename": "src/libcore/rt/io/net/udp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs?ref=e5d21b9ff1ea4160b728b62aeca110c0a563d9ee", "patch": "@@ -16,7 +16,7 @@ use super::ip::IpAddr;\n pub struct UdpStream;\n \n impl UdpStream {\n-    pub fn connect(_addr: IpAddr) -> Result<UdpStream, IoError> {\n+    pub fn connect(_addr: IpAddr) -> Option<UdpStream> {\n         fail!()\n     }\n }\n@@ -40,7 +40,7 @@ impl Close for UdpStream {\n pub struct UdpListener;\n \n impl UdpListener {\n-    pub fn bind(_addr: IpAddr) -> Result<UdpListener, IoError> {\n+    pub fn bind(_addr: IpAddr) -> Option<UdpListener> {\n         fail!()\n     }\n }"}, {"sha": "bb3db6ec0d502048c28a0e03698c0843b4ffd8e1", "filename": "src/libcore/rt/io/net/unix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d21b9ff1ea4160b728b62aeca110c0a563d9ee/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs?ref=e5d21b9ff1ea4160b728b62aeca110c0a563d9ee", "patch": "@@ -16,7 +16,7 @@ use super::super::support::PathLike;\n pub struct UnixStream;\n \n impl UnixStream {\n-    pub fn connect<P: PathLike>(_path: &P) -> Result<UnixStream, IoError> {\n+    pub fn connect<P: PathLike>(_path: &P) -> Option<UnixStream> {\n         fail!()\n     }\n }\n@@ -40,7 +40,7 @@ impl Close for UnixStream {\n pub struct UnixListener;\n \n impl UnixListener {\n-    pub fn bind<P: PathLike>(_path: &P) -> Result<UnixListener, IoError> {\n+    pub fn bind<P: PathLike>(_path: &P) -> Option<UnixListener> {\n         fail!()\n     }\n }"}]}