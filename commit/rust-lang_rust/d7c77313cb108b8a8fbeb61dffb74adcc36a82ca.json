{"sha": "d7c77313cb108b8a8fbeb61dffb74adcc36a82ca", "node_id": "C_kwDOAAsO6NoAKGQ3Yzc3MzEzY2IxMDhiOGE4ZmJlYjYxZGZmYjc0YWRjYzM2YTgyY2E", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-15T20:27:41Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-15T20:27:41Z"}, "message": "nits", "tree": {"sha": "e35e146052870b61cbd35c5d4aaab64ae4c4f801", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e35e146052870b61cbd35c5d4aaab64ae4c4f801"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7c77313cb108b8a8fbeb61dffb74adcc36a82ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c77313cb108b8a8fbeb61dffb74adcc36a82ca", "html_url": "https://github.com/rust-lang/rust/commit/d7c77313cb108b8a8fbeb61dffb74adcc36a82ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7c77313cb108b8a8fbeb61dffb74adcc36a82ca/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a10dd1f340c425660557c042836da9e1e52e7453", "url": "https://api.github.com/repos/rust-lang/rust/commits/a10dd1f340c425660557c042836da9e1e52e7453", "html_url": "https://github.com/rust-lang/rust/commit/a10dd1f340c425660557c042836da9e1e52e7453"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "6b4ed9b9d4053911b786715c1ef1060495060be8", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d7c77313cb108b8a8fbeb61dffb74adcc36a82ca/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7c77313cb108b8a8fbeb61dffb74adcc36a82ca/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=d7c77313cb108b8a8fbeb61dffb74adcc36a82ca", "patch": "@@ -117,17 +117,7 @@ pub(crate) fn codegen_constant<'tcx>(\n     constant: &Constant<'tcx>,\n ) -> CValue<'tcx> {\n     let (const_val, ty) = match fx.monomorphize(constant.literal) {\n-        ConstantKind::Ty(const_) => match const_.kind() {\n-            ConstKind::Value(valtree) => {\n-                (fx.tcx.valtree_to_const_val((const_.ty(), valtree)), const_.ty())\n-            }\n-            ConstKind::Unevaluated(_) => bug!(\"expected constant to be evaluated at this stage\"),\n-            ConstKind::Param(_)\n-            | ConstKind::Infer(_)\n-            | ConstKind::Bound(_, _)\n-            | ConstKind::Placeholder(_)\n-            | ConstKind::Error(_) => unreachable!(\"{:?}\", const_),\n-        },\n+        ConstantKind::Ty(const_) => unreachable!(\"{:?}\", const_),\n         ConstantKind::Unevaluated(ty::Unevaluated { def, substs, promoted }, ty)\n             if fx.tcx.is_static(def.did) =>\n         {"}]}