{"sha": "9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNGJjM2I2ZWZjYjlkYWY4YzFkYWY5ZjdmMmE4YmZhMTk5NzNhZDg=", "commit": {"author": {"name": "Guillem Nieto", "email": "gnieto.talo@gmail.com", "date": "2018-10-26T20:35:16Z"}, "committer": {"name": "Guillem Nieto", "email": "gnieto@scopely.com", "date": "2018-11-25T22:34:23Z"}, "message": "Add unsafe set_len initialization", "tree": {"sha": "ada71756d035c9e5a3c1b9243f24cca1cd49979e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ada71756d035c9e5a3c1b9243f24cca1cd49979e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8", "html_url": "https://github.com/rust-lang/rust/commit/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8/comments", "author": {"login": "gnieto", "id": 4637936, "node_id": "MDQ6VXNlcjQ2Mzc5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/4637936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnieto", "html_url": "https://github.com/gnieto", "followers_url": "https://api.github.com/users/gnieto/followers", "following_url": "https://api.github.com/users/gnieto/following{/other_user}", "gists_url": "https://api.github.com/users/gnieto/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnieto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnieto/subscriptions", "organizations_url": "https://api.github.com/users/gnieto/orgs", "repos_url": "https://api.github.com/users/gnieto/repos", "events_url": "https://api.github.com/users/gnieto/events{/privacy}", "received_events_url": "https://api.github.com/users/gnieto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnieto", "id": 4637936, "node_id": "MDQ6VXNlcjQ2Mzc5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/4637936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnieto", "html_url": "https://github.com/gnieto", "followers_url": "https://api.github.com/users/gnieto/followers", "following_url": "https://api.github.com/users/gnieto/following{/other_user}", "gists_url": "https://api.github.com/users/gnieto/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnieto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnieto/subscriptions", "organizations_url": "https://api.github.com/users/gnieto/orgs", "repos_url": "https://api.github.com/users/gnieto/repos", "events_url": "https://api.github.com/users/gnieto/events{/privacy}", "received_events_url": "https://api.github.com/users/gnieto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0ccc9d9afa2b7800e288a6367422b2a2389f57e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0ccc9d9afa2b7800e288a6367422b2a2389f57e", "html_url": "https://github.com/rust-lang/rust/commit/e0ccc9d9afa2b7800e288a6367422b2a2389f57e"}], "stats": {"total": 135, "additions": 92, "deletions": 43}, "files": [{"sha": "5d0b302e06b10a51e66dde59d1c84199e87f79b6", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 33, "deletions": 7, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8", "patch": "@@ -71,6 +71,9 @@ enum InitializationType<'tcx> {\n \n     /// Resize is a slow initialization with the form `vec.resize(.., 0)`\n     Resize(&'tcx Expr),\n+\n+    /// UnsafeSetLen is a slow initialization with the form `vec.set_len(..)`\n+    UnsafeSetLen(&'tcx Expr),\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n@@ -93,7 +96,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     len_expr: len_arg,\n                 };\n \n-                Pass::search_slow_zero_filling(cx, vi, expr.id, expr.span);\n+                Pass::search_slow_initialization(cx, vi, expr.id, expr.span);\n             }\n         }\n     }\n@@ -114,7 +117,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     len_expr: len_arg,\n                 };\n \n-                Pass::search_slow_zero_filling(cx, vi, stmt.node.id(), stmt.span);\n+                Pass::search_slow_initialization(cx, vi, stmt.node.id(), stmt.span);\n             }\n         }\n     }\n@@ -138,8 +141,8 @@ impl Pass {\n         None\n     }\n \n-    /// Search for slow zero filling vector initialization for the given vector\n-    fn search_slow_zero_filling<'tcx>(\n+    /// Search a slow initialization for the given vector\n+    fn search_slow_initialization<'tcx>(\n         cx: &LateContext<'_, 'tcx>,\n         vec_initialization: VecInitialization<'tcx>,\n         parent_node: NodeId,\n@@ -171,11 +174,14 @@ impl Pass {\n \n                     match repeat_expr {\n                         InitializationType::Extend(e) => {\n-                            db.span_note(e.span, \"extended here with .. 0\");\n+                            db.span_note(e.span, \"extended at\");\n                         },\n                         InitializationType::Resize(e) => {\n-                            db.span_note(e.span, \"resize here with .. 0\");\n-                        }\n+                            db.span_note(e.span, \"resized at\");\n+                        },\n+                        InitializationType::UnsafeSetLen(e) => {\n+                            db.span_note(e.span, \"changed len at\");\n+                        },\n                     }\n                 }\n             );\n@@ -239,6 +245,25 @@ impl<'a, 'tcx> SlowInitializationVisitor<'a, 'tcx> {\n         }\n     }\n \n+    /// Checks if the given expression is using `set_len` to initialize the vector\n+    fn search_unsafe_set_len(&mut self, expr: &'tcx Expr) {\n+        if_chain! {\n+            if self.initialization_found;\n+            if let ExprKind::MethodCall(ref path, _, ref args) = expr.node;\n+            if let ExprKind::Path(ref qpath_subj) = args[0].node;\n+            if match_qpath(&qpath_subj, &[&self.vec_ini.variable_name.to_string()]);\n+            if path.ident.name == \"set_len\";\n+            if let Some(ref len_arg) = args.get(1);\n+\n+            // Check that len expression is equals to `with_capacity` expression\n+            if SpanlessEq::new(self.cx).eq_expr(len_arg, self.vec_ini.len_expr);\n+\n+            then {\n+                self.slow_expression = Some(InitializationType::UnsafeSetLen(expr));\n+            }\n+        }\n+    }\n+\n     /// Returns `true` if give expression is `repeat(0).take(...)`\n     fn is_repeat_take(&self, expr: &Expr) -> bool {\n         if_chain! {\n@@ -294,6 +319,7 @@ impl<'a, 'tcx> Visitor<'tcx> for SlowInitializationVisitor<'a, 'tcx> {\n         \n         self.search_slow_extend_filling(expr);\n         self.search_slow_resize_filling(expr);\n+        self.search_unsafe_set_len(expr);\n \n         walk_expr(self, expr);\n     }"}, {"sha": "991d850464e0f65a698086466342f7e01315ed5c", "filename": "tests/ui/slow_vector_initialization.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8/tests%2Fui%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8/tests%2Fui%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fslow_vector_initialization.rs?ref=9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8", "patch": "@@ -13,6 +13,7 @@ fn main() {\n     resize_vector();\n     extend_vector();\n     mixed_extend_resize_vector();\n+    unsafe_vector();\n }\n \n fn extend_vector() {\n@@ -61,3 +62,11 @@ fn resize_vector() {\n     vec1 = Vec::with_capacity(10);\n     vec1.resize(10, 0);\n }\n+\n+fn unsafe_vector() {\n+    let mut unsafe_vec: Vec<u8> = Vec::with_capacity(200);\n+\n+    unsafe {\n+        unsafe_vec.set_len(200);\n+    }\n+}"}, {"sha": "ece6f388c84b762ba786cd3ce4c49c6afcb1bd76", "filename": "tests/ui/slow_vector_initialization.stderr", "status": "modified", "additions": 50, "deletions": 36, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8/tests%2Fui%2Fslow_vector_initialization.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8/tests%2Fui%2Fslow_vector_initialization.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fslow_vector_initialization.stderr?ref=9b4bc3b6efcb9daf8c1daf9f7f2a8bfa19973ad8", "patch": "@@ -1,101 +1,115 @@\n error: detected slow zero-filling initialization\n-  --> $DIR/slow_vector_initialization.rs:21:5\n+  --> $DIR/slow_vector_initialization.rs:22:5\n    |\n-21 |     let mut vec1 = Vec::with_capacity(len);\n+22 |     let mut vec1 = Vec::with_capacity(len);\n    |     ^^^^^^^^^^^^^^^-----------------------^\n    |                    |\n    |                    help: consider replacing with: `vec![0; ..]`\n    |\n    = note: `-D clippy::slow-vector-initialization` implied by `-D warnings`\n-note: extended here with .. 0\n-  --> $DIR/slow_vector_initialization.rs:22:5\n+note: extended at\n+  --> $DIR/slow_vector_initialization.rs:23:5\n    |\n-22 |     vec1.extend(repeat(0).take(len));\n+23 |     vec1.extend(repeat(0).take(len));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: detected slow zero-filling initialization\n-  --> $DIR/slow_vector_initialization.rs:25:5\n+  --> $DIR/slow_vector_initialization.rs:26:5\n    |\n-25 |     let mut vec2 = Vec::with_capacity(len - 10);\n+26 |     let mut vec2 = Vec::with_capacity(len - 10);\n    |     ^^^^^^^^^^^^^^^----------------------------^\n    |                    |\n    |                    help: consider replacing with: `vec![0; ..]`\n    |\n-note: extended here with .. 0\n-  --> $DIR/slow_vector_initialization.rs:26:5\n+note: extended at\n+  --> $DIR/slow_vector_initialization.rs:27:5\n    |\n-26 |     vec2.extend(repeat(0).take(len - 10));\n+27 |     vec2.extend(repeat(0).take(len - 10));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: detected slow zero-filling initialization\n-  --> $DIR/slow_vector_initialization.rs:38:5\n+  --> $DIR/slow_vector_initialization.rs:39:5\n    |\n-38 |     let mut resized_vec = Vec::with_capacity(30);\n+39 |     let mut resized_vec = Vec::with_capacity(30);\n    |     ^^^^^^^^^^^^^^^^^^^^^^----------------------^\n    |                           |\n    |                           help: consider replacing with: `vec![0; ..]`\n    |\n-note: resize here with .. 0\n-  --> $DIR/slow_vector_initialization.rs:41:5\n+note: resized at\n+  --> $DIR/slow_vector_initialization.rs:42:5\n    |\n-41 |     resized_vec.resize(30, 0);\n+42 |     resized_vec.resize(30, 0);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: detected slow zero-filling initialization\n-  --> $DIR/slow_vector_initialization.rs:39:5\n+  --> $DIR/slow_vector_initialization.rs:40:5\n    |\n-39 |     let mut extend_vec = Vec::with_capacity(30);\n+40 |     let mut extend_vec = Vec::with_capacity(30);\n    |     ^^^^^^^^^^^^^^^^^^^^^----------------------^\n    |                          |\n    |                          help: consider replacing with: `vec![0; ..]`\n    |\n-note: extended here with .. 0\n-  --> $DIR/slow_vector_initialization.rs:43:5\n+note: extended at\n+  --> $DIR/slow_vector_initialization.rs:44:5\n    |\n-43 |     extend_vec.extend(repeat(0).take(30));\n+44 |     extend_vec.extend(repeat(0).take(30));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: detected slow zero-filling initialization\n-  --> $DIR/slow_vector_initialization.rs:49:5\n+  --> $DIR/slow_vector_initialization.rs:50:5\n    |\n-49 |     let mut vec1 = Vec::with_capacity(len);\n+50 |     let mut vec1 = Vec::with_capacity(len);\n    |     ^^^^^^^^^^^^^^^-----------------------^\n    |                    |\n    |                    help: consider replacing with: `vec![0; ..]`\n    |\n-note: resize here with .. 0\n-  --> $DIR/slow_vector_initialization.rs:50:5\n+note: resized at\n+  --> $DIR/slow_vector_initialization.rs:51:5\n    |\n-50 |     vec1.resize(len, 0);\n+51 |     vec1.resize(len, 0);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: detected slow zero-filling initialization\n-  --> $DIR/slow_vector_initialization.rs:57:5\n+  --> $DIR/slow_vector_initialization.rs:58:5\n    |\n-57 |     let mut vec3 = Vec::with_capacity(len - 10);\n+58 |     let mut vec3 = Vec::with_capacity(len - 10);\n    |     ^^^^^^^^^^^^^^^----------------------------^\n    |                    |\n    |                    help: consider replacing with: `vec![0; ..]`\n    |\n-note: resize here with .. 0\n-  --> $DIR/slow_vector_initialization.rs:58:5\n+note: resized at\n+  --> $DIR/slow_vector_initialization.rs:59:5\n    |\n-58 |     vec3.resize(len - 10, 0);\n+59 |     vec3.resize(len - 10, 0);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: detected slow zero-filling initialization\n-  --> $DIR/slow_vector_initialization.rs:61:5\n+  --> $DIR/slow_vector_initialization.rs:62:5\n    |\n-61 |     vec1 = Vec::with_capacity(10);\n+62 |     vec1 = Vec::with_capacity(10);\n    |     ^^^^^^^----------------------\n    |            |\n    |            help: consider replacing with: `vec![0; ..]`\n    |\n-note: resize here with .. 0\n-  --> $DIR/slow_vector_initialization.rs:62:5\n+note: resized at\n+  --> $DIR/slow_vector_initialization.rs:63:5\n    |\n-62 |     vec1.resize(10, 0);\n+63 |     vec1.resize(10, 0);\n    |     ^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 7 previous errors\n+error: detected slow zero-filling initialization\n+  --> $DIR/slow_vector_initialization.rs:67:5\n+   |\n+67 |     let mut unsafe_vec: Vec<u8> = Vec::with_capacity(200);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------^\n+   |                                   |\n+   |                                   help: consider replacing with: `vec![0; ..]`\n+   |\n+note: changed len at\n+  --> $DIR/slow_vector_initialization.rs:70:9\n+   |\n+70 |         unsafe_vec.set_len(200);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 8 previous errors\n "}]}