{"sha": "66d8e8b481a487d372936c553bf7a6d7435056c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZDhlOGI0ODFhNDg3ZDM3MjkzNmM1NTNiZjdhNmQ3NDM1MDU2Yzc=", "commit": {"author": {"name": "James Miller", "email": "bladeon@gmail.com", "date": "2013-06-15T04:31:37Z"}, "committer": {"name": "James Miller", "email": "bladeon@gmail.com", "date": "2013-06-22T00:24:21Z"}, "message": "Make log_fn_time a method", "tree": {"sha": "c8ec08fecd559c3a4e53077774db968ef926b0cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8ec08fecd559c3a4e53077774db968ef926b0cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66d8e8b481a487d372936c553bf7a6d7435056c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66d8e8b481a487d372936c553bf7a6d7435056c7", "html_url": "https://github.com/rust-lang/rust/commit/66d8e8b481a487d372936c553bf7a6d7435056c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66d8e8b481a487d372936c553bf7a6d7435056c7/comments", "author": null, "committer": null, "parents": [{"sha": "b4b2cbb299842a6854a7e82e745b8a9b63c8d6b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4b2cbb299842a6854a7e82e745b8a9b63c8d6b9", "html_url": "https://github.com/rust-lang/rust/commit/b4b2cbb299842a6854a7e82e745b8a9b63c8d6b9"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "18d87b46e19357870a6ba69579f6c91a4f4b1f1f", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/66d8e8b481a487d372936c553bf7a6d7435056c7/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d8e8b481a487d372936c553bf7a6d7435056c7/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=66d8e8b481a487d372936c553bf7a6d7435056c7", "patch": "@@ -138,13 +138,6 @@ fn fcx_has_nonzero_span(fcx: fn_ctxt) -> bool {\n     }\n }\n \n-pub fn log_fn_time(ccx: @mut CrateContext, name: ~str, start: time::Timespec,\n-                   end: time::Timespec) {\n-    let elapsed = 1000 * ((end.sec - start.sec) as int) +\n-        ((end.nsec as int) - (start.nsec as int)) / 1000000;\n-    ccx.stats.fn_times.push((name, elapsed));\n-}\n-\n pub fn decl_fn(llmod: ModuleRef,\n                name: &str,\n                cc: lib::llvm::CallConv,\n@@ -1962,7 +1955,7 @@ pub fn trans_fn(ccx: @mut CrateContext,\n                   |_bcx| { });\n     if do_time {\n         let end = time::get_time();\n-        log_fn_time(ccx, the_path_str, start, end);\n+        ccx.log_fn_time(the_path_str, start, end);\n     }\n }\n \n@@ -3130,11 +3123,6 @@ pub fn trans_crate(sess: session::Session,\n         io::println(fmt!(\"n_closures: %u\", ccx.stats.n_closures));\n     }\n \n-    if ccx.sess.count_llvm_insns() {\n-        for ccx.stats.llvm_insns.each |&k, &v| {\n-            io::println(fmt!(\"%-7u %s\", v, k));\n-        }\n-    }\n     let llcx = ccx.llcx;\n     let link_meta = ccx.link_meta;\n     let llmod = ccx.llmod;"}, {"sha": "3a66be04585c5fab9006e0a060aabf93b86df7f6", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/66d8e8b481a487d372936c553bf7a6d7435056c7/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d8e8b481a487d372936c553bf7a6d7435056c7/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=66d8e8b481a487d372936c553bf7a6d7435056c7", "patch": "@@ -31,6 +31,7 @@ use core::hash;\n use core::hashmap::{HashMap, HashSet};\n use core::str;\n use core::local_data;\n+use extra::time;\n use syntax::ast;\n \n use middle::trans::common::{ExternMap,tydesc_info,BuilderRef_res,Stats,namegen,addrspace_gen};\n@@ -222,6 +223,12 @@ impl CrateContext {\n             }\n         }\n     }\n+\n+    pub fn log_fn_time(&mut self, name: ~str, start: time::Timespec, end: time::Timespec) {\n+        let elapsed = 1000 * ((end.sec - start.sec) as int) +\n+            ((end.nsec as int) - (start.nsec as int)) / 1000000;\n+        self.stats.fn_times.push((name, elapsed));\n+    }\n }\n \n #[unsafe_destructor]"}, {"sha": "6f1442637aeec173204c58aea6b87729def7410a", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/66d8e8b481a487d372936c553bf7a6d7435056c7/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d8e8b481a487d372936c553bf7a6d7435056c7/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=66d8e8b481a487d372936c553bf7a6d7435056c7", "patch": "@@ -731,10 +731,7 @@ pub fn make_generic_glue(ccx: @mut CrateContext,\n     let start = time::get_time();\n     let llval = make_generic_glue_inner(ccx, t, llfn, helper);\n     let end = time::get_time();\n-    log_fn_time(ccx,\n-                fmt!(\"glue %s %s\", name, ty_to_short_str(ccx.tcx, t)),\n-                start,\n-                end);\n+    ccx.log_fn_time(fmt!(\"glue %s %s\", name, ty_to_short_str(ccx.tcx, t)), start, end);\n     return llval;\n }\n "}]}