{"sha": "5d3be12a4d43b73c79e81adc964766a706bb5a07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkM2JlMTJhNGQ0M2I3M2M3OWU4MWFkYzk2NDc2NmE3MDZiYjVhMDc=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-02T01:35:39Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-02T01:35:39Z"}, "message": "save-analysis: fix issue with sub-exprs in for loops\n\nFixes https://github.com/nrc/rls-analysis/issues/78", "tree": {"sha": "8845f27d335230fb2877384acfef873d99a08dee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8845f27d335230fb2877384acfef873d99a08dee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d3be12a4d43b73c79e81adc964766a706bb5a07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d3be12a4d43b73c79e81adc964766a706bb5a07", "html_url": "https://github.com/rust-lang/rust/commit/5d3be12a4d43b73c79e81adc964766a706bb5a07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d3be12a4d43b73c79e81adc964766a706bb5a07/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2", "html_url": "https://github.com/rust-lang/rust/commit/20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8b6f7eae9c7226412f0b8a1d7763173e4b39d99c", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d3be12a4d43b73c79e81adc964766a706bb5a07/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d3be12a4d43b73c79e81adc964766a706bb5a07/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=5d3be12a4d43b73c79e81adc964766a706bb5a07", "patch": "@@ -1415,15 +1415,15 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tc\n                 let value = self.span.snippet(subexpression.span);\n                 self.process_var_decl(pattern, value);\n                 debug!(\"for loop, walk sub-expr: {:?}\", subexpression.node);\n-                visit::walk_expr(self, subexpression);\n+                self.visit_expr(subexpression);\n                 visit::walk_block(self, block);\n             }\n             ast::ExprKind::IfLet(ref pattern, ref subexpression, ref block, ref opt_else) => {\n                 let value = self.span.snippet(subexpression.span);\n                 self.process_var_decl(pattern, value);\n-                visit::walk_expr(self, subexpression);\n+                self.visit_expr(subexpression);\n                 visit::walk_block(self, block);\n-                opt_else.as_ref().map(|el| visit::walk_expr(self, el));\n+                opt_else.as_ref().map(|el| self.visit_expr(el));\n             }\n             ast::ExprKind::Repeat(ref element, ref count) => {\n                 self.visit_expr(element);"}]}