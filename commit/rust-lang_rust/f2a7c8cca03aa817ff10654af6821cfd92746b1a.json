{"sha": "f2a7c8cca03aa817ff10654af6821cfd92746b1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYTdjOGNjYTAzYWE4MTdmZjEwNjU0YWY2ODIxY2ZkOTI3NDZiMWE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-05T23:42:55Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-05T23:42:55Z"}, "message": "Update `update_wiki.py` to extract default lint level", "tree": {"sha": "b538bf250d7cf61e24d31b1637841324543fbbeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b538bf250d7cf61e24d31b1637841324543fbbeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2a7c8cca03aa817ff10654af6821cfd92746b1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2a7c8cca03aa817ff10654af6821cfd92746b1a", "html_url": "https://github.com/rust-lang/rust/commit/f2a7c8cca03aa817ff10654af6821cfd92746b1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2a7c8cca03aa817ff10654af6821cfd92746b1a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83a82a1d86b0a5b9fe39ca7b33e7bca2687a733b", "url": "https://api.github.com/repos/rust-lang/rust/commits/83a82a1d86b0a5b9fe39ca7b33e7bca2687a733b", "html_url": "https://github.com/rust-lang/rust/commit/83a82a1d86b0a5b9fe39ca7b33e7bca2687a733b"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "990b8860c0193df3ca2d5c1e0661e8ecca79279f", "filename": "util/update_wiki.py", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f2a7c8cca03aa817ff10654af6821cfd92746b1a/util%2Fupdate_wiki.py", "raw_url": "https://github.com/rust-lang/rust/raw/f2a7c8cca03aa817ff10654af6821cfd92746b1a/util%2Fupdate_wiki.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fupdate_wiki.py?ref=f2a7c8cca03aa817ff10654af6821cfd92746b1a", "patch": "@@ -8,6 +8,9 @@\n import sys\n \n \n+level_re = re.compile(r'''(Forbid|Deny|Warn|Allow)''')\n+\n+\n def parse_path(p=\"src\"):\n     d = {}\n     for f in os.listdir(p):\n@@ -38,9 +41,20 @@ def parse_file(d, f):\n             if not comment:\n                 l = line.strip()\n                 m = re.search(r\"pub\\s+([A-Z_]+)\", l)\n+\n                 if m:\n-                    print(\"found %s in %s\" % (m.group(1).lower(), f))\n-                    d[m.group(1).lower()] = last_comment\n+                    name = m.group(1).lower()\n+\n+                    while True:\n+                        m = re.search(level_re, line)\n+                        if m:\n+                            level = m.group(0)\n+                            break\n+\n+                        line = next(rs)\n+\n+                    print(\"found %s with level %s in %s\" % (name, level, f))\n+                    d[name] = (level, last_comment)\n                     last_comment = []\n                     comment = True\n                 if \"}\" in l:\n@@ -51,7 +65,6 @@ def parse_file(d, f):\n \n Here we aim to collect further explanations on the lints clippy provides. So \\\n without further ado:\n-\n \"\"\"\n \n WARNING = \"\"\"\n@@ -61,19 +74,33 @@ def parse_file(d, f):\n internal API. We have gotten quite good at keeping pace with the API \\\n evolution, but the consequence is that clippy absolutely needs to be compiled \\\n with the version of `rustc` it will run on, otherwise you will get strange \\\n-errors of missing symbols.\"\"\"\n+errors of missing symbols.\n+\n+\"\"\"\n+\n+\n+template = \"\"\"# `%s`\n+\n+**Default level:** %s\n+\n+%s\"\"\"\n \n \n def write_wiki_page(d, f):\n     keys = list(d.keys())\n     keys.sort()\n     with open(f, \"w\") as w:\n         w.write(PREFIX)\n-        for k in keys:\n-            w.write(\"[`%s`](#%s)\\n\" % (k, k))\n+\n+        for level in ('Deny', 'Warn', 'Allow'):\n+            w.write(\"\\n**Those lints are %s by default**:\\n\\n\" % level)\n+            for k in keys:\n+                if d[k][0] == level:\n+                    w.write(\"[`%s`](#%s)\\n\" % (k, k))\n+\n         w.write(WARNING)\n         for k in keys:\n-            w.write(\"\\n# `%s`\\n\\n%s\" % (k, \"\".join(d[k])))\n+            w.write(template % (k, d[k][0], \"\".join(d[k][1])))\n \n \n def check_wiki_page(d, f):"}]}