{"sha": "71792d822c713b66616b2b5dde1fa9cffe3ab21d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNzkyZDgyMmM3MTNiNjY2MTZiMmI1ZGRlMWZhOWNmZmUzYWIyMWQ=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-02-02T21:01:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-02T21:01:36Z"}, "message": "Rollup merge of #81517 - tmiasko:san-crates, r=Mark-Simulacrum\n\nRemove remnants of the santizer runtime crates from bootstrap", "tree": {"sha": "77e9e246133ff1e60e9554d96df86ca723aa4509", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77e9e246133ff1e60e9554d96df86ca723aa4509"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71792d822c713b66616b2b5dde1fa9cffe3ab21d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgGb2wCRBK7hj4Ov3rIwAAdHIIAIpKTyWH3BOgaQ+V1JFkNl2h\nvl09EF/8YHrrquOPMeuIM4tPSptFV0KzIea+GUtr+iJJRlRq2mp7e2TkJISkx03x\nFixb4gP1GZNe35P/RXfZa0mDNnYWzft7KiA2J4gvmo24coWn8LQ5NIKtQ6DQdZzf\nLdmcci2U3GahCLajVLwgyyNs17OXvqlp5M7T191MTWyklZGTbTP4g9O7d83/QYY5\nVj5jrPk7jYbwGkwBgVkOMK582B6JvJK/aKM6LFQEjImT+DKRCCOIeGXtrd8kdczb\nKB/e3GqT2cyrJmqUVShmsgX9A7qermIUJMvoey74bjZbE+2BcyM/9P9wQv9DEBQ=\n=vHw9\n-----END PGP SIGNATURE-----\n", "payload": "tree 77e9e246133ff1e60e9554d96df86ca723aa4509\nparent 399c0a8e52471ba17292d7538f1fb1fc26a32979\nparent 99eeb13e7677df995791f3faf6aadbfdfe002553\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1612299696 -0500\ncommitter GitHub <noreply@github.com> 1612299696 -0500\n\nRollup merge of #81517 - tmiasko:san-crates, r=Mark-Simulacrum\n\nRemove remnants of the santizer runtime crates from bootstrap\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71792d822c713b66616b2b5dde1fa9cffe3ab21d", "html_url": "https://github.com/rust-lang/rust/commit/71792d822c713b66616b2b5dde1fa9cffe3ab21d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71792d822c713b66616b2b5dde1fa9cffe3ab21d/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "399c0a8e52471ba17292d7538f1fb1fc26a32979", "url": "https://api.github.com/repos/rust-lang/rust/commits/399c0a8e52471ba17292d7538f1fb1fc26a32979", "html_url": "https://github.com/rust-lang/rust/commit/399c0a8e52471ba17292d7538f1fb1fc26a32979"}, {"sha": "99eeb13e7677df995791f3faf6aadbfdfe002553", "url": "https://api.github.com/repos/rust-lang/rust/commits/99eeb13e7677df995791f3faf6aadbfdfe002553", "html_url": "https://github.com/rust-lang/rust/commit/99eeb13e7677df995791f3faf6aadbfdfe002553"}], "stats": {"total": 51, "additions": 1, "deletions": 50}, "files": [{"sha": "ef71cf6e7daebd0475804caf9b5684335299f2f4", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 50, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/71792d822c713b66616b2b5dde1fa9cffe3ab21d/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71792d822c713b66616b2b5dde1fa9cffe3ab21d/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=71792d822c713b66616b2b5dde1fa9cffe3ab21d", "patch": "@@ -14,7 +14,7 @@ use std::process::Command;\n use build_helper::{self, output, t};\n \n use crate::builder::{Builder, Compiler, Kind, RunConfig, ShouldRun, Step};\n-use crate::cache::{Interned, INTERNER};\n+use crate::cache::Interned;\n use crate::compile;\n use crate::config::TargetSelection;\n use crate::dist;\n@@ -1613,55 +1613,6 @@ impl Step for CrateLibrustc {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n-pub struct CrateNotDefault {\n-    compiler: Compiler,\n-    target: TargetSelection,\n-    test_kind: TestKind,\n-    krate: &'static str,\n-}\n-\n-impl Step for CrateNotDefault {\n-    type Output = ();\n-\n-    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/librustc_asan\")\n-            .path(\"src/librustc_lsan\")\n-            .path(\"src/librustc_msan\")\n-            .path(\"src/librustc_tsan\")\n-    }\n-\n-    fn make_run(run: RunConfig<'_>) {\n-        let builder = run.builder;\n-        let compiler = builder.compiler(builder.top_stage, run.build_triple());\n-\n-        let test_kind = builder.kind.into();\n-\n-        builder.ensure(CrateNotDefault {\n-            compiler,\n-            target: run.target,\n-            test_kind,\n-            krate: match run.path {\n-                _ if run.path.ends_with(\"src/librustc_asan\") => \"rustc_asan\",\n-                _ if run.path.ends_with(\"src/librustc_lsan\") => \"rustc_lsan\",\n-                _ if run.path.ends_with(\"src/librustc_msan\") => \"rustc_msan\",\n-                _ if run.path.ends_with(\"src/librustc_tsan\") => \"rustc_tsan\",\n-                _ => panic!(\"unexpected path {:?}\", run.path),\n-            },\n-        });\n-    }\n-\n-    fn run(self, builder: &Builder<'_>) {\n-        builder.ensure(Crate {\n-            compiler: self.compiler,\n-            target: self.target,\n-            mode: Mode::Std,\n-            test_kind: self.test_kind,\n-            krate: INTERNER.intern_str(self.krate),\n-        });\n-    }\n-}\n-\n #[derive(Debug, Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct Crate {\n     pub compiler: Compiler,"}]}