{"sha": "2a8d48d8a9a83c46ca60bdf6e49a4690383b236a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhOGQ0OGQ4YTlhODNjNDZjYTYwYmRmNmU0OWE0NjkwMzgzYjIzNmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-07T14:57:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-07T14:57:30Z"}, "message": "Merge #2193\n\n2193: cargo xtask format with rust 1.39 r=matklad a=kjeremy\n\nNeeded to pass tests on latest stable\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "a7794b1b89440dfe2d088a4716d25bfefafebc08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7794b1b89440dfe2d088a4716d25bfefafebc08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a8d48d8a9a83c46ca60bdf6e49a4690383b236a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdxDDaCRBK7hj4Ov3rIwAAdHIIAHz1GsJ6QC0i4UA3VYOW1LZ5\ngHtJ7FkgLRbq8a+XzisWWt7T17ts99JdoT/QmVYh+mnwJsIPfGX7bDKvVfL7sZ1C\nM5QIPJQh9JwfER2YYAwdMWxOhI7ofv+Ap8Mp6m3iVo0JWo7m4lsWIU7AERVqI32v\nf3d6/KWPlcGk68NHQGse44832irzM3LEiUyA39tqQp/E+1FTmW/PNvDlu/h8bkB+\n1U/X8wi5Cro0AYpHqMuFO40C4juKplPOQsOpZ1yzJ11jjE+BYUALNu74GYMhE00t\nHQByWWECO1rMhojS5sM5yPj0sVCD20inpWDi1/XWsXrFWjt4WqnxnrzoIO74QSI=\n=DwOV\n-----END PGP SIGNATURE-----\n", "payload": "tree a7794b1b89440dfe2d088a4716d25bfefafebc08\nparent 14e19c0df19eb4ce71bbd24114452157c65c8209\nparent e670a99413f00de17ce8f65b77ddcd5cc6805a1d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1573138650 +0000\ncommitter GitHub <noreply@github.com> 1573138650 +0000\n\nMerge #2193\n\n2193: cargo xtask format with rust 1.39 r=matklad a=kjeremy\n\nNeeded to pass tests on latest stable\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8d48d8a9a83c46ca60bdf6e49a4690383b236a", "html_url": "https://github.com/rust-lang/rust/commit/2a8d48d8a9a83c46ca60bdf6e49a4690383b236a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a8d48d8a9a83c46ca60bdf6e49a4690383b236a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14e19c0df19eb4ce71bbd24114452157c65c8209", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e19c0df19eb4ce71bbd24114452157c65c8209", "html_url": "https://github.com/rust-lang/rust/commit/14e19c0df19eb4ce71bbd24114452157c65c8209"}, {"sha": "e670a99413f00de17ce8f65b77ddcd5cc6805a1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e670a99413f00de17ce8f65b77ddcd5cc6805a1d", "html_url": "https://github.com/rust-lang/rust/commit/e670a99413f00de17ce8f65b77ddcd5cc6805a1d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9b2e440fb9c21a6eb5a19fced114bc7dca06695b", "filename": "crates/ra_parser/src/grammar/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a8d48d8a9a83c46ca60bdf6e49a4690383b236a/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8d48d8a9a83c46ca60bdf6e49a4690383b236a/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=2a8d48d8a9a83c46ca60bdf6e49a4690383b236a", "patch": "@@ -28,7 +28,7 @@ fn type_with_bounds_cond(p: &mut Parser, allow_bounds: bool) {\n         T![fn] | T![unsafe] | T![extern] => fn_pointer_type(p),\n         T![for] => for_type(p),\n         T![impl] => impl_trait_type(p),\n-        T![dyn ] => dyn_trait_type(p),\n+        T![dyn] => dyn_trait_type(p),\n         // Some path types are not allowed to have bounds (no plus)\n         T![<] => path_type_(p, allow_bounds),\n         _ if paths::is_use_path_start(p) => path_or_macro_type_(p, allow_bounds),\n@@ -234,9 +234,9 @@ fn impl_trait_type(p: &mut Parser) {\n // test dyn_trait_type\n // type A = dyn Iterator<Item=Foo<'a>> + 'a;\n fn dyn_trait_type(p: &mut Parser) {\n-    assert!(p.at(T![dyn ]));\n+    assert!(p.at(T![dyn]));\n     let m = p.start();\n-    p.bump(T![dyn ]);\n+    p.bump(T![dyn]);\n     type_params::bounds_without_colon(p);\n     m.complete(p, DYN_TRAIT_TYPE);\n }"}]}