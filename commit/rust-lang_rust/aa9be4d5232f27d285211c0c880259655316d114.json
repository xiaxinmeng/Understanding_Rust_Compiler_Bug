{"sha": "aa9be4d5232f27d285211c0c880259655316d114", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhOWJlNGQ1MjMyZjI3ZDI4NTIxMWMwYzg4MDI1OTY1NTMxNmQxMTQ=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-19T17:58:32Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-19T17:58:32Z"}, "message": "Use xshell::read_file instead of fs::read_to_string", "tree": {"sha": "340cb5b3a28d57e47314779ab31f367c0ac836ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/340cb5b3a28d57e47314779ab31f367c0ac836ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa9be4d5232f27d285211c0c880259655316d114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa9be4d5232f27d285211c0c880259655316d114", "html_url": "https://github.com/rust-lang/rust/commit/aa9be4d5232f27d285211c0c880259655316d114", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa9be4d5232f27d285211c0c880259655316d114/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a20e7795cc853fd335dcf64b893693514f62bb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a20e7795cc853fd335dcf64b893693514f62bb3", "html_url": "https://github.com/rust-lang/rust/commit/2a20e7795cc853fd335dcf64b893693514f62bb3"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "d7c85ebe9f8d565f9628c7e424e706c4ec38d4b2", "filename": "xtask/src/codegen/gen_assists_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa9be4d5232f27d285211c0c880259655316d114/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9be4d5232f27d285211c0c880259655316d114/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs?ref=aa9be4d5232f27d285211c0c880259655316d114", "patch": "@@ -1,6 +1,6 @@\n //! Generates `assists.md` documentation.\n \n-use std::{fmt, fs, path::Path};\n+use std::{fmt, path::Path};\n \n use crate::{\n     codegen::{self, extract_comment_blocks_with_empty_lines, reformat, Location, Mode, PREAMBLE},\n@@ -39,7 +39,7 @@ impl Assist {\n         return Ok(res);\n \n         fn collect_file(acc: &mut Vec<Assist>, path: &Path) -> Result<()> {\n-            let text = fs::read_to_string(path)?;\n+            let text = xshell::read_file(path)?;\n             let comment_blocks = extract_comment_blocks_with_empty_lines(\"Assist\", &text);\n \n             for block in comment_blocks {"}, {"sha": "00aaea5b7755b324a156bff3ddc0dc6591aa2051", "filename": "xtask/src/codegen/gen_diagnostic_docs.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aa9be4d5232f27d285211c0c880259655316d114/xtask%2Fsrc%2Fcodegen%2Fgen_diagnostic_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9be4d5232f27d285211c0c880259655316d114/xtask%2Fsrc%2Fcodegen%2Fgen_diagnostic_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_diagnostic_docs.rs?ref=aa9be4d5232f27d285211c0c880259655316d114", "patch": "@@ -1,15 +1,16 @@\n //! Generates `assists.md` documentation.\n \n-use std::{fmt, fs, path::PathBuf};\n+use std::{fmt, path::PathBuf};\n \n use crate::{\n     codegen::{self, extract_comment_blocks_with_empty_lines, Location, Mode, PREAMBLE},\n     project_root, rust_files, Result,\n };\n \n pub fn generate_diagnostic_docs(mode: Mode) -> Result<()> {\n-    let features = Diagnostic::collect()?;\n-    let contents = features.into_iter().map(|it| it.to_string()).collect::<Vec<_>>().join(\"\\n\\n\");\n+    let diagnostics = Diagnostic::collect()?;\n+    let contents =\n+        diagnostics.into_iter().map(|it| it.to_string()).collect::<Vec<_>>().join(\"\\n\\n\");\n     let contents = format!(\"//{}\\n{}\\n\", PREAMBLE, contents.trim());\n     let dst = project_root().join(\"docs/user/generated_diagnostic.adoc\");\n     codegen::update(&dst, &contents, mode)?;\n@@ -33,7 +34,7 @@ impl Diagnostic {\n         return Ok(res);\n \n         fn collect_file(acc: &mut Vec<Diagnostic>, path: PathBuf) -> Result<()> {\n-            let text = fs::read_to_string(&path)?;\n+            let text = xshell::read_file(&path)?;\n             let comment_blocks = extract_comment_blocks_with_empty_lines(\"Diagnostic\", &text);\n \n             for block in comment_blocks {"}, {"sha": "065dd33f15486714268397658656d104d940e327", "filename": "xtask/src/codegen/gen_feature_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa9be4d5232f27d285211c0c880259655316d114/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9be4d5232f27d285211c0c880259655316d114/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs?ref=aa9be4d5232f27d285211c0c880259655316d114", "patch": "@@ -1,6 +1,6 @@\n //! Generates `assists.md` documentation.\n \n-use std::{fmt, fs, path::PathBuf};\n+use std::{fmt, path::PathBuf};\n \n use crate::{\n     codegen::{self, extract_comment_blocks_with_empty_lines, Location, Mode, PREAMBLE},\n@@ -33,7 +33,7 @@ impl Feature {\n         return Ok(res);\n \n         fn collect_file(acc: &mut Vec<Feature>, path: PathBuf) -> Result<()> {\n-            let text = fs::read_to_string(&path)?;\n+            let text = xshell::read_file(&path)?;\n             let comment_blocks = extract_comment_blocks_with_empty_lines(\"Feature\", &text);\n \n             for block in comment_blocks {"}, {"sha": "19ae949d4ab8e2ba77b614ad0aef4240c5854c50", "filename": "xtask/src/codegen/gen_parser_tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa9be4d5232f27d285211c0c880259655316d114/xtask%2Fsrc%2Fcodegen%2Fgen_parser_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9be4d5232f27d285211c0c880259655316d114/xtask%2Fsrc%2Fcodegen%2Fgen_parser_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_parser_tests.rs?ref=aa9be4d5232f27d285211c0c880259655316d114", "patch": "@@ -124,7 +124,7 @@ fn existing_tests(dir: &Path, ok: bool) -> Result<HashMap<String, (PathBuf, Test\n             let file_name = path.file_name().unwrap().to_str().unwrap();\n             file_name[5..file_name.len() - 3].to_string()\n         };\n-        let text = fs::read_to_string(&path)?;\n+        let text = xshell::read_file(&path)?;\n         let test = Test { name: name.clone(), text, ok };\n         if let Some(old) = res.insert(name, (path, test)) {\n             println!(\"Duplicate test: {:?}\", old);"}]}