{"sha": "f916f3a36b21629d58e1b8ea4dbddc0db1316903", "node_id": "C_kwDOAAsO6NoAKGY5MTZmM2EzNmIyMTYyOWQ1OGUxYjhlYTRkYmRkYzBkYjEzMTY5MDM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-02-01T05:18:39Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-02-01T22:06:34Z"}, "message": "Remove rlib special-casing in `FileSearch::search`.\n\nThis code and comment appear to be out of date.\n`CrateLocator::find_library_crate` is the only caller of this function\nand it handles rlib vs dylib overlap itself (see\n`CrateLocator::extract_lib`) after inspecting all the files present, so\nit doesn't need to see them in any particular order.", "tree": {"sha": "f2b0f3e914ab05e880ec68b1886f6b99ba9efbc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2b0f3e914ab05e880ec68b1886f6b99ba9efbc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f916f3a36b21629d58e1b8ea4dbddc0db1316903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f916f3a36b21629d58e1b8ea4dbddc0db1316903", "html_url": "https://github.com/rust-lang/rust/commit/f916f3a36b21629d58e1b8ea4dbddc0db1316903", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f916f3a36b21629d58e1b8ea4dbddc0db1316903/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad88831cd50ffe9cb9006bbdcb7fc9d97142e410", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad88831cd50ffe9cb9006bbdcb7fc9d97142e410", "html_url": "https://github.com/rust-lang/rust/commit/ad88831cd50ffe9cb9006bbdcb7fc9d97142e410"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "9687d0bd8a7019eb576b861b9b30f1fd0d3164c4", "filename": "compiler/rustc_session/src/filesearch.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f916f3a36b21629d58e1b8ea4dbddc0db1316903/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f916f3a36b21629d58e1b8ea4dbddc0db1316903/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs?ref=f916f3a36b21629d58e1b8ea4dbddc0db1316903", "patch": "@@ -49,16 +49,7 @@ impl<'a> FileSearch<'a> {\n     {\n         for search_path in self.search_paths() {\n             debug!(\"searching {}\", search_path.dir.display());\n-            fn is_rlib(spf: &SearchPathFile) -> bool {\n-                if let Some(f) = &spf.file_name_str { f.ends_with(\".rlib\") } else { false }\n-            }\n-            // Reading metadata out of rlibs is faster, and if we find both\n-            // an rlib and a dylib we only read one of the files of\n-            // metadata, so in the name of speed, bring all rlib files to\n-            // the front of the search list.\n-            let files1 = search_path.files.iter().filter(|spf| is_rlib(&spf));\n-            let files2 = search_path.files.iter().filter(|spf| !is_rlib(&spf));\n-            for spf in files1.chain(files2) {\n+            for spf in search_path.files.iter() {\n                 debug!(\"testing {}\", spf.path.display());\n                 let maybe_picked = pick(spf, search_path.kind);\n                 match maybe_picked {"}]}