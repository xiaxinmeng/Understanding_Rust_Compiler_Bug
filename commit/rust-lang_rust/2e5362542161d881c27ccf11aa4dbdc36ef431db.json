{"sha": "2e5362542161d881c27ccf11aa4dbdc36ef431db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNTM2MjU0MjE2MWQ4ODFjMjdjY2YxMWFhNGRiZGMzNmVmNDMxZGI=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T13:44:17Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T13:44:17Z"}, "message": "Document an `unwrap`", "tree": {"sha": "ff7320f5be4d4fe59480aa329a904b636826edfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff7320f5be4d4fe59480aa329a904b636826edfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e5362542161d881c27ccf11aa4dbdc36ef431db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e5362542161d881c27ccf11aa4dbdc36ef431db", "html_url": "https://github.com/rust-lang/rust/commit/2e5362542161d881c27ccf11aa4dbdc36ef431db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e5362542161d881c27ccf11aa4dbdc36ef431db/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abacaf2aef26043ce09e3aee176a9587bb87eaf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/abacaf2aef26043ce09e3aee176a9587bb87eaf6", "html_url": "https://github.com/rust-lang/rust/commit/abacaf2aef26043ce09e3aee176a9587bb87eaf6"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "6ec0b2492b9448dca9efa1c8414a004b3de7e976", "filename": "compiler/rustc_middle/src/ty/consts/int.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2e5362542161d881c27ccf11aa4dbdc36ef431db/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e5362542161d881c27ccf11aa4dbdc36ef431db/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs?ref=2e5362542161d881c27ccf11aa4dbdc36ef431db", "patch": "@@ -265,7 +265,10 @@ macro_rules! try_from {\n                 type Error = Size;\n                 #[inline]\n                 fn try_from(int: ScalarInt) -> Result<Self, Size> {\n-                    int.to_bits(Size::from_bytes(std::mem::size_of::<$ty>())).map(|u| u.try_into().unwrap())\n+                    // The `unwrap` cannot fail because to_bits (if it succeeds)\n+                    // is guaranteed to return a value that fits into the size.\n+                    int.to_bits(Size::from_bytes(std::mem::size_of::<$ty>()))\n+                       .map(|u| u.try_into().unwrap())\n                 }\n             }\n         )*"}]}