{"sha": "a4c1cec4f8d27fcff7a3fca2276bec5e767696e9", "node_id": "C_kwDOAAsO6NoAKGE0YzFjZWM0ZjhkMjdmY2ZmN2EzZmNhMjI3NmJlYzVlNzY3Njk2ZTk", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-08-20T13:33:06Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:40:10Z"}, "message": "Add some sanity assertions to make sure we use the opaque types correctly", "tree": {"sha": "d0ca6b6905789da85674abd4d1fd878ef1fbc6ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0ca6b6905789da85674abd4d1fd878ef1fbc6ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4c1cec4f8d27fcff7a3fca2276bec5e767696e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4c1cec4f8d27fcff7a3fca2276bec5e767696e9", "html_url": "https://github.com/rust-lang/rust/commit/a4c1cec4f8d27fcff7a3fca2276bec5e767696e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4c1cec4f8d27fcff7a3fca2276bec5e767696e9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d49b0746f6c0cf41e94e4bbd1592c52082a9cad7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d49b0746f6c0cf41e94e4bbd1592c52082a9cad7", "html_url": "https://github.com/rust-lang/rust/commit/d49b0746f6c0cf41e94e4bbd1592c52082a9cad7"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "6b5d55784b2c9552c4320fd7186f746c1505288d", "filename": "compiler/rustc_infer/src/infer/opaque_types/table.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a4c1cec4f8d27fcff7a3fca2276bec5e767696e9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c1cec4f8d27fcff7a3fca2276bec5e767696e9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types%2Ftable.rs?ref=a4c1cec4f8d27fcff7a3fca2276bec5e767696e9", "patch": "@@ -6,7 +6,7 @@ use crate::infer::InferCtxtUndoLogs;\n \n use super::{OpaqueTypeDecl, OpaqueTypeMap};\n \n-#[derive(Default)]\n+#[derive(Default, Debug)]\n pub struct OpaqueTypeStorage<'tcx> {\n     // Opaque types found in explicit return types and their\n     // associated fresh inference variable. Writeback resolves these\n@@ -23,6 +23,7 @@ pub struct OpaqueTypeStorage<'tcx> {\n }\n \n impl<'tcx> OpaqueTypeStorage<'tcx> {\n+    #[instrument(level = \"debug\")]\n     pub(crate) fn remove(&mut self, key: OpaqueTypeKey<'tcx>) {\n         match self.opaque_types.remove(&key) {\n             None => bug!(\"reverted opaque type inference that was never registered\"),\n@@ -42,6 +43,7 @@ impl<'tcx> OpaqueTypeStorage<'tcx> {\n         self.opaque_types.clone()\n     }\n \n+    #[instrument(level = \"debug\")]\n     pub fn take_opaque_types(&mut self) -> OpaqueTypeMap<'tcx> {\n         std::mem::take(&mut self.opaque_types)\n     }\n@@ -54,13 +56,21 @@ impl<'tcx> OpaqueTypeStorage<'tcx> {\n         OpaqueTypeTable { storage: self, undo_log }\n     }\n }\n+\n+impl<'tcx> Drop for OpaqueTypeStorage<'tcx> {\n+    fn drop(&mut self) {\n+        assert!(self.opaque_types.is_empty(), \"{:?}\", self.opaque_types);\n+    }\n+}\n+\n pub struct OpaqueTypeTable<'a, 'tcx> {\n     storage: &'a mut OpaqueTypeStorage<'tcx>,\n \n     undo_log: &'a mut InferCtxtUndoLogs<'tcx>,\n }\n \n impl<'a, 'tcx> OpaqueTypeTable<'a, 'tcx> {\n+    #[instrument(skip(self), level = \"debug\")]\n     pub fn register(&mut self, key: OpaqueTypeKey<'tcx>, decl: OpaqueTypeDecl<'tcx>) {\n         self.undo_log.push(key);\n         self.storage.opaque_types.insert(key, decl);"}, {"sha": "e4c9cdbeef3f4035130aa9f6d901781ccdfd42ce", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4c1cec4f8d27fcff7a3fca2276bec5e767696e9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c1cec4f8d27fcff7a3fca2276bec5e767696e9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=a4c1cec4f8d27fcff7a3fca2276bec5e767696e9", "patch": "@@ -498,7 +498,9 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n \n     #[instrument(skip(self, span), level = \"debug\")]\n     fn visit_opaque_types(&mut self, span: Span) {\n-        for (opaque_type_key, opaque_defn) in self.fcx.infcx.opaque_types() {\n+        let opaque_types =\n+            self.fcx.infcx.inner.borrow_mut().opaque_type_storage.take_opaque_types();\n+        for (opaque_type_key, opaque_defn) in opaque_types {\n             let hir_id =\n                 self.tcx().hir().local_def_id_to_hir_id(opaque_type_key.def_id.expect_local());\n             let instantiated_ty = self.resolve(opaque_defn.concrete_ty, &hir_id);"}]}