{"sha": "00b71e668d067f60c0ba966afba75ba4adda83eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwYjcxZTY2OGQwNjdmNjBjMGJhOTY2YWZiYTc1YmE0YWRkYTgzZWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-17T20:23:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-17T20:23:44Z"}, "message": "update architecture.md", "tree": {"sha": "d706601793422cf511d73caa960a1313a8f3a6ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d706601793422cf511d73caa960a1313a8f3a6ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00b71e668d067f60c0ba966afba75ba4adda83eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00b71e668d067f60c0ba966afba75ba4adda83eb", "html_url": "https://github.com/rust-lang/rust/commit/00b71e668d067f60c0ba966afba75ba4adda83eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00b71e668d067f60c0ba966afba75ba4adda83eb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1875aa024f885f1d6119bff8aa828634b4941248", "url": "https://api.github.com/repos/rust-lang/rust/commits/1875aa024f885f1d6119bff8aa828634b4941248", "html_url": "https://github.com/rust-lang/rust/commit/1875aa024f885f1d6119bff8aa828634b4941248"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "d920ce2abc1096f509d935ba93ca40a46a02c7d7", "filename": "ARCHITECTURE.md", "status": "modified", "additions": 27, "deletions": 19, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/00b71e668d067f60c0ba966afba75ba4adda83eb/ARCHITECTURE.md", "raw_url": "https://github.com/rust-lang/rust/raw/00b71e668d067f60c0ba966afba75ba4adda83eb/ARCHITECTURE.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ARCHITECTURE.md?ref=00b71e668d067f60c0ba966afba75ba4adda83eb", "patch": "@@ -58,27 +58,25 @@ all `//test test_name` comments into files inside `tests/data` directory.\n See [#93](https://github.com/rust-analyzer/rust-analyzer/pull/93) for an example PR which\n fixes a bug in the grammar.\n \n-### `crates/ra_hir`\n-\n-HIR (previsouly known as descriptors) provides a high-level OO acess to Rust\n-code.\n+### `crates/ra_db`\n \n-The principal difference between HIR and syntax trees is that HIR is bound\n-to a particular crate instance. That is, it has cfg flags and features\n-applied. So, there relation between syntax and HIR is many-to-one.\n+We use [salsa][https://github.com/salsa-rs/salsa] crate for incremental and\n+on-demand computation. Roughly, you can think of salsa as a key-value store, but\n+it also can compute derived values using specified functions. The `ra_db` crate\n+provides a basic infrastructure for interracting with salsa. Crucially, it\n+defines most of the \"input\" queries: facts supplied by the client of the analyzer.\n \n-### `crates/ra_editor`\n+### `crates/ra_hir`\n \n-All IDE features which can be implemented if you only have access to a\n-single file. `ra_editor` could be used to enhance editing of Rust code\n-without the need to fiddle with build-systems, file\n-synchronization and such.\n+HIR provides a high-level \"object oriented\" acess to Rust code.\n \n-In a sense, `ra_editor` is just a bunch of pure functions which take a\n-syntax tree as an input.\n+The principal difference between HIR and syntax trees is that HIR is bound to a\n+particular crate instance. That is, it has cfg flags and features applied (in\n+theory, in practice this is to be implemented). So, there relation between\n+syntax and HIR is many-to-one. The `source_binder` modules is responsible for\n+guessing a hir for a particular source position.\n \n-The tests for `ra_editor` are `#[cfg(test)] mod tests` unit-tests spread\n-throughout its modules.\n+Underneath, hir works on top of salsa, using a `HirDatabase` trait.\n \n ### `crates/ra_analysis`\n \n@@ -88,9 +86,6 @@ current state, incorporates changes and handles out `Analysis` --- an\n immutable consistent snapshot of world state at a point in time, which\n actually powers analysis.\n \n-### `crates/ra_db`\n-This defines basic database traits. Concrete DB is defined by ra_analysis.\n-\n ### `crates/ra_lsp_server`\n \n An LSP implementation which uses `ra_analysis` for managing state and\n@@ -100,6 +95,19 @@ See [#79](https://github.com/rust-analyzer/rust-analyzer/pull/79/) as an\n example of PR which adds a new feature to `ra_editor` and exposes it\n to `ra_lsp_server`.\n \n+### `crates/ra_editor`\n+\n+All IDE features which can be implemented if you only have access to a\n+single file. `ra_editor` could be used to enhance editing of Rust code\n+without the need to fiddle with build-systems, file\n+synchronization and such.\n+\n+In a sense, `ra_editor` is just a bunch of pure functions which take a\n+syntax tree as an input.\n+\n+The tests for `ra_editor` are `#[cfg(test)] mod tests` unit-tests spread\n+throughout its modules.\n+\n ### `crates/gen_lsp_server`\n \n A language server scaffold, exposing a synchronous crossbeam-channel based API."}]}