{"sha": "ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f", "node_id": "C_kwDOAAsO6NoAKGFjMWU2OWM5MDMzYTMzZTM3NGYxZGQ5MWIzZTRjZDU0ZTFjMDAzM2Y", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-07T03:18:19Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-07T08:29:31Z"}, "message": "Add some useful comments.", "tree": {"sha": "69a1c73beb90ff62ea92a22791e635fa15356b91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69a1c73beb90ff62ea92a22791e635fa15356b91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f", "html_url": "https://github.com/rust-lang/rust/commit/ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c844730d3f7f7d5d3f01a35b67fa5814ee208ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c844730d3f7f7d5d3f01a35b67fa5814ee208ee", "html_url": "https://github.com/rust-lang/rust/commit/0c844730d3f7f7d5d3f01a35b67fa5814ee208ee"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "1990a74841bc2211ed1dc272a14abb1f35f11ee9", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f", "patch": "@@ -127,6 +127,7 @@ fn lint_mod(tcx: TyCtxt<'_>, module_def_id: LocalDefId) {\n     late::late_lint_mod(tcx, module_def_id, BuiltinCombinedModuleLateLintPass::new());\n }\n \n+// See the comment on `BuiltinCombinedEarlyLintPass`, which is similar.\n early_lint_methods!(\n     declare_combined_early_lint_pass,\n     [\n@@ -137,6 +138,9 @@ early_lint_methods!(\n     ]\n );\n \n+// Declare `BuiltinCombinedEarlyLintPass`, a lint pass that combines multiple\n+// lint passes into a single pass for maximum speed. Each `check_foo` method\n+// within this pass simply calls `check_foo` once per listed lint.\n early_lint_methods!(\n     declare_combined_early_lint_pass,\n     [\n@@ -162,7 +166,9 @@ early_lint_methods!(\n     ]\n );\n \n-// FIXME: Make a separate lint type which do not require typeck tables\n+// FIXME: Make a separate lint type which does not require typeck tables.\n+\n+// See the comment on `BuiltinCombinedEarlyLintPass`, which is similar.\n late_lint_methods!(\n     declare_combined_late_lint_pass,\n     [\n@@ -182,6 +188,7 @@ late_lint_methods!(\n     ]\n );\n \n+// See the comment on `BuiltinCombinedEarlyLintPass`, which is similar.\n late_lint_methods!(\n     declare_combined_late_lint_pass,\n     ["}, {"sha": "312dbcd68bdd769eedd508c12db1318ddab0f4d7", "filename": "compiler/rustc_lint/src/passes.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs?ref=ac1e69c9033a33e374f1dd91b3e4cd54e1c0033f", "patch": "@@ -73,6 +73,8 @@ macro_rules! declare_late_lint_pass {\n     )\n }\n \n+// Declare the `LateLintPass` trait, which contains empty default definitions\n+// for all the `check_*` methods.\n late_lint_methods!(declare_late_lint_pass, []);\n \n impl LateLintPass<'_> for HardwiredLints {}\n@@ -176,6 +178,8 @@ macro_rules! declare_early_lint_pass {\n     )\n }\n \n+// Declare the `EarlyLintPass` trait, which contains empty default definitions\n+// for all the `check_*` methods.\n early_lint_methods!(declare_early_lint_pass, []);\n \n #[macro_export]"}]}