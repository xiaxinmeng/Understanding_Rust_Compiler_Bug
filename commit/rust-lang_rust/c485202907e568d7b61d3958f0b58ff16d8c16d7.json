{"sha": "c485202907e568d7b61d3958f0b58ff16d8c16d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ODUyMDI5MDdlNTY4ZDdiNjFkMzk1OGYwYjU4ZmYxNmQ4YzE2ZDc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-12T23:02:06Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-12T23:02:06Z"}, "message": "Format generics on unit struct", "tree": {"sha": "684d2cd880d8914cffc94c89fa4666e89d113b47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/684d2cd880d8914cffc94c89fa4666e89d113b47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c485202907e568d7b61d3958f0b58ff16d8c16d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c485202907e568d7b61d3958f0b58ff16d8c16d7", "html_url": "https://github.com/rust-lang/rust/commit/c485202907e568d7b61d3958f0b58ff16d8c16d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c485202907e568d7b61d3958f0b58ff16d8c16d7/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8685cdaddaac410c9d0b961cb38cec86ab6f7d87", "url": "https://api.github.com/repos/rust-lang/rust/commits/8685cdaddaac410c9d0b961cb38cec86ab6f7d87", "html_url": "https://github.com/rust-lang/rust/commit/8685cdaddaac410c9d0b961cb38cec86ab6f7d87"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "b9c8e37ea0db862591c3aa2cb28d088210589bab", "filename": "src/items.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c485202907e568d7b61d3958f0b58ff16d8c16d7/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c485202907e568d7b61d3958f0b58ff16d8c16d7/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=c485202907e568d7b61d3958f0b58ff16d8c16d7", "patch": "@@ -911,7 +911,7 @@ fn format_struct(\n     one_line_width: Option<usize>,\n ) -> Option<String> {\n     match *struct_parts.def {\n-        ast::VariantData::Unit(..) => Some(format_unit_struct(struct_parts)),\n+        ast::VariantData::Unit(..) => format_unit_struct(context, struct_parts, offset),\n         ast::VariantData::Tuple(ref fields, _) => {\n             format_tuple_struct(context, struct_parts, fields, offset)\n         }\n@@ -1088,8 +1088,15 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n     }\n }\n \n-fn format_unit_struct(p: &StructParts) -> String {\n-    format!(\"{};\", format_header(p.prefix, p.ident, p.vis))\n+fn format_unit_struct(context: &RewriteContext, p: &StructParts, offset: Indent) -> Option<String> {\n+    let header_str = format_header(p.prefix, p.ident, p.vis);\n+    let generics_str = if let Some(generics) = p.generics {\n+        let shape = Shape::indented(offset, context.config).offset_left(header_str.len())?;\n+        rewrite_generics(context, generics, shape, generics.span)?\n+    } else {\n+        String::new()\n+    };\n+    Some(format!(\"{}{};\", header_str, generics_str))\n }\n \n pub fn format_struct_struct("}]}