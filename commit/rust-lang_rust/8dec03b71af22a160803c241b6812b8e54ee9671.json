{"sha": "8dec03b71af22a160803c241b6812b8e54ee9671", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZWMwM2I3MWFmMjJhMTYwODAzYzI0MWI2ODEyYjhlNTRlZTk2NzE=", "commit": {"author": {"name": "Guillaume Girol", "email": "symphorien+git@xlumurb.eu", "date": "2018-05-31T17:18:58Z"}, "committer": {"name": "Guillaume Girol", "email": "symphorien+git@xlumurb.eu", "date": "2018-05-31T17:18:58Z"}, "message": "libstd/sys/unix/fs.rs: fix compilation on fuchsia", "tree": {"sha": "259906cc545006fd8da4ead1c334097a9a121ca2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/259906cc545006fd8da4ead1c334097a9a121ca2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dec03b71af22a160803c241b6812b8e54ee9671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dec03b71af22a160803c241b6812b8e54ee9671", "html_url": "https://github.com/rust-lang/rust/commit/8dec03b71af22a160803c241b6812b8e54ee9671", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dec03b71af22a160803c241b6812b8e54ee9671/comments", "author": {"login": "symphorien", "id": 12595971, "node_id": "MDQ6VXNlcjEyNTk1OTcx", "avatar_url": "https://avatars.githubusercontent.com/u/12595971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/symphorien", "html_url": "https://github.com/symphorien", "followers_url": "https://api.github.com/users/symphorien/followers", "following_url": "https://api.github.com/users/symphorien/following{/other_user}", "gists_url": "https://api.github.com/users/symphorien/gists{/gist_id}", "starred_url": "https://api.github.com/users/symphorien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/symphorien/subscriptions", "organizations_url": "https://api.github.com/users/symphorien/orgs", "repos_url": "https://api.github.com/users/symphorien/repos", "events_url": "https://api.github.com/users/symphorien/events{/privacy}", "received_events_url": "https://api.github.com/users/symphorien/received_events", "type": "User", "site_admin": false}, "committer": {"login": "symphorien", "id": 12595971, "node_id": "MDQ6VXNlcjEyNTk1OTcx", "avatar_url": "https://avatars.githubusercontent.com/u/12595971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/symphorien", "html_url": "https://github.com/symphorien", "followers_url": "https://api.github.com/users/symphorien/followers", "following_url": "https://api.github.com/users/symphorien/following{/other_user}", "gists_url": "https://api.github.com/users/symphorien/gists{/gist_id}", "starred_url": "https://api.github.com/users/symphorien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/symphorien/subscriptions", "organizations_url": "https://api.github.com/users/symphorien/orgs", "repos_url": "https://api.github.com/users/symphorien/repos", "events_url": "https://api.github.com/users/symphorien/events{/privacy}", "received_events_url": "https://api.github.com/users/symphorien/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb2a0d61adb47b530f8922c9ae3c816cbbf062c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2a0d61adb47b530f8922c9ae3c816cbbf062c5", "html_url": "https://github.com/rust-lang/rust/commit/cb2a0d61adb47b530f8922c9ae3c816cbbf062c5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c4d94259bd6dba34d3d866d6d507c5a9927d2c24", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dec03b71af22a160803c241b6812b8e54ee9671/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dec03b71af22a160803c241b6812b8e54ee9671/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=8dec03b71af22a160803c241b6812b8e54ee9671", "patch": "@@ -229,7 +229,7 @@ impl Iterator for ReadDir {\n                 // is safe to use in threaded applications and it is generally preferred\n                 // over the readdir_r(3C) function.\n                 super::os::set_errno(0);\n-                let entry_ptr = libc::readdir(self.dirp.0);\n+                let entry_ptr = libc::readdir(self.0.dirp.0);\n                 if entry_ptr.is_null() {\n                     // NULL can mean either the end is reached or an error occurred.\n                     // So we had to clear errno beforehand to check for an error now."}]}