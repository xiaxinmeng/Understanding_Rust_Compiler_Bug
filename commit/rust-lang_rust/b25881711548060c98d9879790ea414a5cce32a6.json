{"sha": "b25881711548060c98d9879790ea414a5cce32a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNTg4MTcxMTU0ODA2MGM5OGQ5ODc5NzkwZWE0MTRhNWNjZTMyYTY=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-08T03:54:09Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-09T19:25:22Z"}, "message": "rustc_typeck: use IndexSet in UniquePredicates", "tree": {"sha": "f28e2f658817cc0ffd69762495c0ed7357b753a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f28e2f658817cc0ffd69762495c0ed7357b753a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b25881711548060c98d9879790ea414a5cce32a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b25881711548060c98d9879790ea414a5cce32a6", "html_url": "https://github.com/rust-lang/rust/commit/b25881711548060c98d9879790ea414a5cce32a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b25881711548060c98d9879790ea414a5cce32a6/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d1547d3009cac6edea086bd3e356054275b3e45", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d1547d3009cac6edea086bd3e356054275b3e45", "html_url": "https://github.com/rust-lang/rust/commit/7d1547d3009cac6edea086bd3e356054275b3e45"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "b47ef34600404c1c7e5d37d48af1fb8fca744eee", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b25881711548060c98d9879790ea414a5cce32a6/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b25881711548060c98d9879790ea414a5cce32a6/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=b25881711548060c98d9879790ea414a5cce32a6", "patch": "@@ -22,7 +22,7 @@ use rustc_ast::ast;\n use rustc_ast::ast::MetaItemKind;\n use rustc_attr::{list_contains_name, InlineAttr, OptimizeAttr};\n use rustc_data_structures::captures::Captures;\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n@@ -1718,21 +1718,17 @@ fn explicit_predicates_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::GenericPredicat\n     /// A data structure with unique elements, which preserves order of insertion.\n     /// Preserving the order of insertion is important here so as not to break\n     /// compile-fail UI tests.\n-    // FIXME(eddyb) just use `IndexSet` from `indexmap`.\n     struct UniquePredicates<'tcx> {\n-        predicates: Vec<(ty::Predicate<'tcx>, Span)>,\n-        uniques: FxHashSet<(ty::Predicate<'tcx>, Span)>,\n+        predicates: FxIndexSet<(ty::Predicate<'tcx>, Span)>,\n     }\n \n     impl<'tcx> UniquePredicates<'tcx> {\n         fn new() -> Self {\n-            UniquePredicates { predicates: vec![], uniques: FxHashSet::default() }\n+            UniquePredicates { predicates: FxIndexSet::default() }\n         }\n \n         fn push(&mut self, value: (ty::Predicate<'tcx>, Span)) {\n-            if self.uniques.insert(value) {\n-                self.predicates.push(value);\n-            }\n+            self.predicates.insert(value);\n         }\n \n         fn extend<I: IntoIterator<Item = (ty::Predicate<'tcx>, Span)>>(&mut self, iter: I) {\n@@ -2014,7 +2010,7 @@ fn explicit_predicates_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::GenericPredicat\n         }))\n     }\n \n-    let mut predicates = predicates.predicates;\n+    let mut predicates: Vec<_> = predicates.predicates.into_iter().collect();\n \n     // Subtle: before we store the predicates into the tcx, we\n     // sort them so that predicates like `T: Foo<Item=U>` come"}]}