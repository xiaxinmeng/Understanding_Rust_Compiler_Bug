{"sha": "5ea36cfc1c98d672a5ce92cfe5f56b64e846203b", "node_id": "C_kwDOAAsO6NoAKDVlYTM2Y2ZjMWM5OGQ2NzJhNWNlOTJjZmU1ZjU2YjY0ZTg0NjIwM2I", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-27T21:14:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-27T21:14:09Z"}, "message": "Rollup merge of #104984 - GuillaumeGomez:remote-crate-primitives, r=notriddle\n\nRemove Crate::primitives field\n\nIt is a new approach to #90447. Instead of removing primitives from everywhere (ie from `BadImplStripper`), I just removed them from the `Crate` type, allowing to reduce its size.\n\ncc `@camelid`\nr? `@notriddle`", "tree": {"sha": "69e5d48a31c22cf77e6519b268a0d526d27d27e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69e5d48a31c22cf77e6519b268a0d526d27d27e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjg9MhCRBK7hj4Ov3rIwAA8f8IAKRMg4c7W+Zx2cyTxLb//txQ\nvv1DKKLiCXECAe6tdZKuEsk/IrZCfGXDq1JaENvyf703/kv2nN6eWNxxN/+RhVn5\nk8lzyk+/ctRkDSfKhB4bYvn/cM5sKJvt855UplDK6ZBel3NIbvPJvCRCcWjuHqcZ\n5S++hB0A7hIM+1vle52ec+XCHoljuM73F/FVGrg5WuHX26XZIFqBSmYnBXVfc3+O\nVdtcViv7I6b4U1u1eQNWbdRv8OR89hGM3BlPkmz6ly6nsxuAJWV8TbldhUU/pfyK\nDmF5Dgv1NBqzuwbBua3ZIlqhC+hjANCe+77DLkPg/g+sfZ4F+feGkHjJetxjaTc=\n=Nr9j\n-----END PGP SIGNATURE-----\n", "payload": "tree 69e5d48a31c22cf77e6519b268a0d526d27d27e6\nparent 86304f5149fde69905bc28bc80e7734f3b9745f7\nparent 23c3941942ef1ea3cf2980e385235463add95460\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669583649 +0100\ncommitter GitHub <noreply@github.com> 1669583649 +0100\n\nRollup merge of #104984 - GuillaumeGomez:remote-crate-primitives, r=notriddle\n\nRemove Crate::primitives field\n\nIt is a new approach to #90447. Instead of removing primitives from everywhere (ie from `BadImplStripper`), I just removed them from the `Crate` type, allowing to reduce its size.\n\ncc `@camelid`\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b", "html_url": "https://github.com/rust-lang/rust/commit/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86304f5149fde69905bc28bc80e7734f3b9745f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/86304f5149fde69905bc28bc80e7734f3b9745f7", "html_url": "https://github.com/rust-lang/rust/commit/86304f5149fde69905bc28bc80e7734f3b9745f7"}, {"sha": "23c3941942ef1ea3cf2980e385235463add95460", "url": "https://api.github.com/repos/rust-lang/rust/commits/23c3941942ef1ea3cf2980e385235463add95460", "html_url": "https://github.com/rust-lang/rust/commit/23c3941942ef1ea3cf2980e385235463add95460"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "2894b19877cc72283c2d3f08d29b0104025ddf7e", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=5ea36cfc1c98d672a5ce92cfe5f56b64e846203b", "patch": "@@ -115,7 +115,6 @@ impl From<DefId> for ItemId {\n #[derive(Clone, Debug)]\n pub(crate) struct Crate {\n     pub(crate) module: Item,\n-    pub(crate) primitives: ThinVec<(DefId, PrimitiveType)>,\n     /// Only here so that they can be filtered through the rustdoc passes.\n     pub(crate) external_traits: Rc<RefCell<FxHashMap<DefId, Trait>>>,\n }\n@@ -2572,7 +2571,7 @@ mod size_asserts {\n     use super::*;\n     use rustc_data_structures::static_assert_size;\n     // tidy-alphabetical-start\n-    static_assert_size!(Crate, 72); // frequently moved by-value\n+    static_assert_size!(Crate, 64); // frequently moved by-value\n     static_assert_size!(DocFragment, 32);\n     static_assert_size!(GenericArg, 32);\n     static_assert_size!(GenericArgs, 32);"}, {"sha": "3c48dd80b6fc5fd611eab89184a948a9bc2751b1", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=5ea36cfc1c98d672a5ce92cfe5f56b64e846203b", "patch": "@@ -73,7 +73,7 @@ pub(crate) fn krate(cx: &mut DocContext<'_>) -> Crate {\n         }));\n     }\n \n-    Crate { module, primitives, external_traits: cx.external_traits.clone() }\n+    Crate { module, external_traits: cx.external_traits.clone() }\n }\n \n pub(crate) fn substs_to_args<'tcx>("}, {"sha": "d57f981d51a84fac39729d530f055d8324a8d68c", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=5ea36cfc1c98d672a5ce92cfe5f56b64e846203b", "patch": "@@ -8,7 +8,7 @@ use crate::formats::cache::Cache;\n use crate::visit::DocVisitor;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_hir::def_id::DefId;\n+use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_middle::ty::{self, DefIdTree};\n use rustc_span::symbol::sym;\n \n@@ -25,7 +25,9 @@ pub(crate) fn collect_trait_impls(mut krate: Crate, cx: &mut DocContext<'_>) ->\n         synth.impls\n     });\n \n-    let prims: FxHashSet<PrimitiveType> = krate.primitives.iter().map(|p| p.1).collect();\n+    let local_crate = ExternalCrate { crate_num: LOCAL_CRATE };\n+    let prims: FxHashSet<PrimitiveType> =\n+        local_crate.primitives(cx.tcx).iter().map(|p| p.1).collect();\n \n     let crate_items = {\n         let mut coll = ItemCollector::new();"}, {"sha": "527de780d48923c5d2b3ba501ed5e2f8b4b20397", "filename": "src/test/rustdoc/deref-to-primitive.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/src%2Ftest%2Frustdoc%2Fderef-to-primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea36cfc1c98d672a5ce92cfe5f56b64e846203b/src%2Ftest%2Frustdoc%2Fderef-to-primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-to-primitive.rs?ref=5ea36cfc1c98d672a5ce92cfe5f56b64e846203b", "patch": "@@ -0,0 +1,15 @@\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/struct.Foo.html'\n+// @has - '//*[@id=\"deref-methods-i32\"]' 'Methods from Deref<Target = i32>'\n+// @has - '//*[@id=\"deref-methods-i32-1\"]//*[@id=\"associatedconstant.BITS\"]/h4' \\\n+//        'pub const BITS: u32 = 32u32'\n+pub struct Foo(i32);\n+\n+impl std::ops::Deref for Foo {\n+    type Target = i32;\n+\n+    fn deref(&self) -> &Self::Target {\n+        &self.0\n+    }\n+}"}]}