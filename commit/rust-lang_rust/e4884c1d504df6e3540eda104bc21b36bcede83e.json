{"sha": "e4884c1d504df6e3540eda104bc21b36bcede83e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ODg0YzFkNTA0ZGY2ZTM1NDBlZGExMDRiYzIxYjM2YmNlZGU4M2U=", "commit": {"author": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2021-03-10T04:53:48Z"}, "committer": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2021-03-10T22:32:13Z"}, "message": "Grouped some ungrouped use and mod lines.", "tree": {"sha": "a8231f903802faf3e914df38028599e8266a2274", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8231f903802faf3e914df38028599e8266a2274"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4884c1d504df6e3540eda104bc21b36bcede83e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4884c1d504df6e3540eda104bc21b36bcede83e", "html_url": "https://github.com/rust-lang/rust/commit/e4884c1d504df6e3540eda104bc21b36bcede83e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4884c1d504df6e3540eda104bc21b36bcede83e/comments", "author": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17a07d71bfd692f9b2dad2a566aff52bf3d4bfe2", "url": "https://api.github.com/repos/rust-lang/rust/commits/17a07d71bfd692f9b2dad2a566aff52bf3d4bfe2", "html_url": "https://github.com/rust-lang/rust/commit/17a07d71bfd692f9b2dad2a566aff52bf3d4bfe2"}], "stats": {"total": 54, "additions": 19, "deletions": 35}, "files": [{"sha": "4e46b041fd7563c1de05e1bff43357153dffd6d3", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 19, "deletions": 35, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/e4884c1d504df6e3540eda104bc21b36bcede83e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4884c1d504df6e3540eda104bc21b36bcede83e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=e4884c1d504df6e3540eda104bc21b36bcede83e", "patch": "@@ -24,8 +24,7 @@ use crate::ich::StableHashingContext;\n use crate::middle::cstore::CrateStoreDyn;\n use crate::middle::resolve_lifetime::ObjectLifetimeDefault;\n use crate::mir::interpret::ErrorHandled;\n-use crate::mir::Body;\n-use crate::mir::GeneratorLayout;\n+use crate::mir::{Body, GeneratorLayout};\n use crate::traits::{self, Reveal};\n use crate::ty;\n use crate::ty::subst::{GenericArg, InternalSubsts, Subst, SubstsRef};\n@@ -34,9 +33,7 @@ use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fingerprint::Fingerprint;\n-use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::fx::FxIndexMap;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_data_structures::sorted_map::SortedIndexMultiMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::{self, par_iter, ParallelIterator};\n@@ -58,56 +55,42 @@ use rustc_target::abi::{Align, VariantIdx};\n \n use std::cell::RefCell;\n use std::cmp::Ordering;\n-use std::fmt;\n use std::hash::{Hash, Hasher};\n use std::ops::{ControlFlow, Range};\n-use std::ptr;\n-use std::str;\n+use std::{fmt, ptr, str};\n \n-pub use self::sty::BoundRegionKind::*;\n-pub use self::sty::RegionKind;\n-pub use self::sty::RegionKind::*;\n-pub use self::sty::TyKind::*;\n-pub use self::sty::{Binder, BoundTy, BoundTyKind, BoundVar};\n-pub use self::sty::{BoundRegion, BoundRegionKind, EarlyBoundRegion, FreeRegion, Region};\n-pub use self::sty::{CanonicalPolyFnSig, FnSig, GenSig, PolyFnSig, PolyGenSig};\n-pub use self::sty::{ClosureSubsts, GeneratorSubsts, TypeAndMut, UpvarSubsts};\n-pub use self::sty::{ClosureSubstsParts, GeneratorSubstsParts};\n-pub use self::sty::{ConstVid, RegionVid};\n-pub use self::sty::{ExistentialPredicate, ParamConst, ParamTy, ProjectionTy};\n-pub use self::sty::{ExistentialProjection, PolyExistentialProjection};\n-pub use self::sty::{ExistentialTraitRef, PolyExistentialTraitRef};\n-pub use self::sty::{PolyTraitRef, TraitRef, TyKind};\n pub use crate::ty::diagnostics::*;\n pub use rustc_type_ir::InferTy::*;\n pub use rustc_type_ir::*;\n \n pub use self::binding::BindingMode;\n pub use self::binding::BindingMode::*;\n-\n-pub use self::context::{tls, FreeRegionInfo, TyCtxt};\n-pub use self::context::{\n-    CanonicalUserType, CanonicalUserTypeAnnotation, CanonicalUserTypeAnnotations,\n-    DelaySpanBugEmitted, ResolvedOpaqueTy, UserType, UserTypeAnnotationIndex,\n-};\n+pub use self::consts::{Const, ConstInt, ConstKind, InferConst, ScalarInt};\n pub use self::context::{\n-    CtxtInterners, GeneratorInteriorTypeCause, GlobalCtxt, Lift, TypeckResults,\n+    tls, CanonicalUserType, CanonicalUserTypeAnnotation, CanonicalUserTypeAnnotations,\n+    CtxtInterners, DelaySpanBugEmitted, FreeRegionInfo, GeneratorInteriorTypeCause, GlobalCtxt,\n+    Lift, ResolvedOpaqueTy, TyCtxt, TypeckResults, UserType, UserTypeAnnotationIndex,\n };\n-\n pub use self::instance::{Instance, InstanceDef};\n-\n pub use self::list::List;\n-\n+pub use self::sty::BoundRegionKind::*;\n+pub use self::sty::RegionKind::*;\n+pub use self::sty::TyKind::*;\n+pub use self::sty::{\n+    Binder, BoundRegion, BoundRegionKind, BoundTy, BoundTyKind, BoundVar, CanonicalPolyFnSig,\n+    ClosureSubsts, ClosureSubstsParts, ConstVid, EarlyBoundRegion, ExistentialPredicate,\n+    ExistentialProjection, ExistentialTraitRef, FnSig, FreeRegion, GenSig, GeneratorSubsts,\n+    GeneratorSubstsParts, ParamConst, ParamTy, PolyExistentialProjection, PolyExistentialTraitRef,\n+    PolyFnSig, PolyGenSig, PolyTraitRef, ProjectionTy, Region, RegionKind, RegionVid, TraitRef,\n+    TyKind, TypeAndMut, UpvarSubsts,\n+};\n pub use self::trait_def::TraitDef;\n \n-pub use self::consts::{Const, ConstInt, ConstKind, InferConst, ScalarInt};\n-\n pub mod _match;\n pub mod adjustment;\n pub mod binding;\n pub mod cast;\n pub mod codec;\n-mod erase_regions;\n pub mod error;\n pub mod fast_reject;\n pub mod flags;\n@@ -127,6 +110,7 @@ pub mod walk;\n mod consts;\n mod context;\n mod diagnostics;\n+mod erase_regions;\n mod instance;\n mod list;\n mod structural_impls;"}]}