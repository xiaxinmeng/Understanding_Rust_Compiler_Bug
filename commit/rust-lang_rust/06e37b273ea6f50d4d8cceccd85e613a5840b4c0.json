{"sha": "06e37b273ea6f50d4d8cceccd85e613a5840b4c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ZTM3YjI3M2VhNmY1MGQ0ZDhjY2VjY2Q4NWU2MTNhNTg0MGI0YzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T17:10:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T17:10:15Z"}, "message": "Better name", "tree": {"sha": "0a5883daca8ee09000fb83156d1030dc802e8e65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a5883daca8ee09000fb83156d1030dc802e8e65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06e37b273ea6f50d4d8cceccd85e613a5840b4c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06e37b273ea6f50d4d8cceccd85e613a5840b4c0", "html_url": "https://github.com/rust-lang/rust/commit/06e37b273ea6f50d4d8cceccd85e613a5840b4c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06e37b273ea6f50d4d8cceccd85e613a5840b4c0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ef916061b208ce6f746562bc732b4a437639505", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ef916061b208ce6f746562bc732b4a437639505", "html_url": "https://github.com/rust-lang/rust/commit/3ef916061b208ce6f746562bc732b4a437639505"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f4eb0bd3c209673b864d05d5f0a712d2384ae174", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06e37b273ea6f50d4d8cceccd85e613a5840b4c0/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06e37b273ea6f50d4d8cceccd85e613a5840b4c0/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=06e37b273ea6f50d4d8cceccd85e613a5840b4c0", "patch": "@@ -17,7 +17,7 @@ type Result<T, E = Box<dyn Error + Send + Sync>> = std::result::Result<T, E>;\n fn main() -> Result<()> {\n     env_logger::try_init()?;\n \n-    let command = match Command::from_args()? {\n+    let command = match Command::from_env_args()? {\n         Ok(it) => it,\n         Err(HelpPrinted) => return Ok(()),\n     };\n@@ -108,7 +108,7 @@ enum Command {\n struct HelpPrinted;\n \n impl Command {\n-    fn from_args() -> Result<Result<Command, HelpPrinted>> {\n+    fn from_env_args() -> Result<Result<Command, HelpPrinted>> {\n         let mut matches = Arguments::from_env();\n         let subcommand = matches.subcommand()?.unwrap_or_default();\n "}]}