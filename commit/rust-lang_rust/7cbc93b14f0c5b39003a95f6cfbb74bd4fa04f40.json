{"sha": "7cbc93b14f0c5b39003a95f6cfbb74bd4fa04f40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYmM5M2IxNGYwYzViMzkwMDNhOTVmNmNmYmI3NGJkNGZhMDRmNDA=", "commit": {"author": {"name": "Michael Lamparski", "email": "diagonaldevice@gmail.com", "date": "2018-03-18T00:02:55Z"}, "committer": {"name": "Michael Lamparski", "email": "diagonaldevice@gmail.com", "date": "2018-03-18T00:08:07Z"}, "message": "elide elidable lifetime in Path::strip_prefix", "tree": {"sha": "65e18f2cfbe7ebf17b4f932520c9870ee00731a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65e18f2cfbe7ebf17b4f932520c9870ee00731a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cbc93b14f0c5b39003a95f6cfbb74bd4fa04f40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cbc93b14f0c5b39003a95f6cfbb74bd4fa04f40", "html_url": "https://github.com/rust-lang/rust/commit/7cbc93b14f0c5b39003a95f6cfbb74bd4fa04f40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cbc93b14f0c5b39003a95f6cfbb74bd4fa04f40/comments", "author": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d0a470b89df7b859ce048e29873621c957e29d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d0a470b89df7b859ce048e29873621c957e29d8", "html_url": "https://github.com/rust-lang/rust/commit/0d0a470b89df7b859ce048e29873621c957e29d8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c624a0b2a2f180a37707c52f2bd21a46dab8f828", "filename": "src/libstd/path.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7cbc93b14f0c5b39003a95f6cfbb74bd4fa04f40/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cbc93b14f0c5b39003a95f6cfbb74bd4fa04f40/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=7cbc93b14f0c5b39003a95f6cfbb74bd4fa04f40", "patch": "@@ -1880,15 +1880,15 @@ impl Path {\n     /// assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));\n     /// ```\n     #[stable(since = \"1.7.0\", feature = \"path_strip_prefix\")]\n-    pub fn strip_prefix<'a, P>(&'a self, base: P)\n-                               -> Result<&'a Path, StripPrefixError>\n+    pub fn strip_prefix<P>(&self, base: P)\n+                           -> Result<&Path, StripPrefixError>\n         where P: AsRef<Path>\n     {\n         self._strip_prefix(base.as_ref())\n     }\n \n-    fn _strip_prefix<'a>(&'a self, base: &Path)\n-                         -> Result<&'a Path, StripPrefixError> {\n+    fn _strip_prefix(&self, base: &Path)\n+                     -> Result<&Path, StripPrefixError> {\n         iter_after(self.components(), base.components())\n             .map(|c| c.as_path())\n             .ok_or(StripPrefixError(()))"}]}