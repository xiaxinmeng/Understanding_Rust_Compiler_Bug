{"sha": "a91d15c80c337dd1afb0eddd5eb048010d098ac7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MWQxNWM4MGMzMzdkZDFhZmIwZWRkZDVlYjA0ODAxMGQwOThhYzc=", "commit": {"author": {"name": "George Fraser", "email": "george@fivetran.com", "date": "2020-05-09T19:24:59Z"}, "committer": {"name": "George Fraser", "email": "george@fivetran.com", "date": "2020-05-10T20:07:28Z"}, "message": "Import built-in textmate grammar, with no changes", "tree": {"sha": "0e3ea6003923f4da2ba644267891eaac452a3911", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e3ea6003923f4da2ba644267891eaac452a3911"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a91d15c80c337dd1afb0eddd5eb048010d098ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a91d15c80c337dd1afb0eddd5eb048010d098ac7", "html_url": "https://github.com/rust-lang/rust/commit/a91d15c80c337dd1afb0eddd5eb048010d098ac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a91d15c80c337dd1afb0eddd5eb048010d098ac7/comments", "author": {"login": "georgewfraser", "id": 1369240, "node_id": "MDQ6VXNlcjEzNjkyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1369240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgewfraser", "html_url": "https://github.com/georgewfraser", "followers_url": "https://api.github.com/users/georgewfraser/followers", "following_url": "https://api.github.com/users/georgewfraser/following{/other_user}", "gists_url": "https://api.github.com/users/georgewfraser/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgewfraser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgewfraser/subscriptions", "organizations_url": "https://api.github.com/users/georgewfraser/orgs", "repos_url": "https://api.github.com/users/georgewfraser/repos", "events_url": "https://api.github.com/users/georgewfraser/events{/privacy}", "received_events_url": "https://api.github.com/users/georgewfraser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "georgewfraser", "id": 1369240, "node_id": "MDQ6VXNlcjEzNjkyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1369240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgewfraser", "html_url": "https://github.com/georgewfraser", "followers_url": "https://api.github.com/users/georgewfraser/followers", "following_url": "https://api.github.com/users/georgewfraser/following{/other_user}", "gists_url": "https://api.github.com/users/georgewfraser/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgewfraser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgewfraser/subscriptions", "organizations_url": "https://api.github.com/users/georgewfraser/orgs", "repos_url": "https://api.github.com/users/georgewfraser/repos", "events_url": "https://api.github.com/users/georgewfraser/events{/privacy}", "received_events_url": "https://api.github.com/users/georgewfraser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cff0d6b6e667832a3822d84718dd0e1d44272cf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cff0d6b6e667832a3822d84718dd0e1d44272cf7", "html_url": "https://github.com/rust-lang/rust/commit/cff0d6b6e667832a3822d84718dd0e1d44272cf7"}], "stats": {"total": 698, "additions": 698, "deletions": 0}, "files": [{"sha": "257b744bfeaa3f34fd7542d280eaaa67d9c6783c", "filename": "editors/code/.vscodeignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a91d15c80c337dd1afb0eddd5eb048010d098ac7/editors%2Fcode%2F.vscodeignore", "raw_url": "https://github.com/rust-lang/rust/raw/a91d15c80c337dd1afb0eddd5eb048010d098ac7/editors%2Fcode%2F.vscodeignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2F.vscodeignore?ref=a91d15c80c337dd1afb0eddd5eb048010d098ac7", "patch": "@@ -3,5 +3,6 @@\n !package.json\n !package-lock.json\n !ra_syntax_tree.tmGrammar.json\n+!rust.tmGrammar.json\n !icon.png\n !README.md"}, {"sha": "40ae3ab9eb6eb41606552ef056c4b9dd57fd3863", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a91d15c80c337dd1afb0eddd5eb048010d098ac7/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/a91d15c80c337dd1afb0eddd5eb048010d098ac7/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=a91d15c80c337dd1afb0eddd5eb048010d098ac7", "patch": "@@ -478,6 +478,11 @@\n             }\n         ],\n         \"grammars\": [\n+            {\n+                \"language\": \"rust\",\n+                \"scopeName\": \"source.rust\",\n+                \"path\": \"rust.tmGrammar.json\"\n+            },\n             {\n                 \"language\": \"ra_syntax_tree\",\n                 \"scopeName\": \"source.ra_syntax_tree\","}, {"sha": "784bd8c9aca7527a0d12328e29240fb57d2178fd", "filename": "editors/code/rust.tmGrammar.json", "status": "added", "additions": 692, "deletions": 0, "changes": 692, "blob_url": "https://github.com/rust-lang/rust/blob/a91d15c80c337dd1afb0eddd5eb048010d098ac7/editors%2Fcode%2Frust.tmGrammar.json", "raw_url": "https://github.com/rust-lang/rust/raw/a91d15c80c337dd1afb0eddd5eb048010d098ac7/editors%2Fcode%2Frust.tmGrammar.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Frust.tmGrammar.json?ref=a91d15c80c337dd1afb0eddd5eb048010d098ac7", "patch": "@@ -0,0 +1,692 @@\n+{\n+\t\"information_for_contributors\": [\n+\t\t\"This file has been converted from https://github.com/zargony/atom-language-rust/blob/master/grammars/rust.cson\",\n+\t\t\"If you want to provide a fix or improvement, please create a pull request against the original repository.\",\n+\t\t\"Once accepted there, we are happy to receive an update request.\"\n+\t],\n+\t\"version\": \"https://github.com/zargony/atom-language-rust/commit/7d59e2ad79fbe5925bd2fd3bd3857bf9f421ff6f\",\n+\t\"name\": \"Rust\",\n+\t\"scopeName\": \"source.rust\",\n+\t\"patterns\": [\n+\t\t{\n+\t\t\t\"comment\": \"Implementation\",\n+\t\t\t\"begin\": \"\\\\b(impl)\\\\b\",\n+\t\t\t\"end\": \"\\\\{\",\n+\t\t\t\"beginCaptures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"storage.type.rust\"\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#line_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#sigils\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#mut\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#dyn\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#ref_lifetime\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_marker\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#type_params\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#where\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"name\": \"storage.type.rust\",\n+\t\t\t\t\t\"match\": \"\\\\bfor\\\\b\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#type\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#block_doc_comment\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#block_comment\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#line_doc_comment\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#line_comment\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Attribute\",\n+\t\t\t\"name\": \"meta.attribute.rust\",\n+\t\t\t\"begin\": \"#\\\\!?\\\\[\",\n+\t\t\t\"end\": \"\\\\]\",\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#string_literal\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_doc_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#line_doc_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#line_comment\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Single-quote string literal (character)\",\n+\t\t\t\"name\": \"string.quoted.single.rust\",\n+\t\t\t\"match\": \"b?'([^'\\\\\\\\]|\\\\\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.))'\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#string_literal\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#raw_string_literal\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Floating point literal (fraction)\",\n+\t\t\t\"name\": \"constant.numeric.float.rust\",\n+\t\t\t\"match\": \"\\\\b[0-9][0-9_]*\\\\.[0-9][0-9_]*([eE][+-]?[0-9_]+)?(f32|f64)?\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Floating point literal (exponent)\",\n+\t\t\t\"name\": \"constant.numeric.float.rust\",\n+\t\t\t\"match\": \"\\\\b[0-9][0-9_]*(\\\\.[0-9][0-9_]*)?[eE][+-]?[0-9_]+(f32|f64)?\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Floating point literal (typed)\",\n+\t\t\t\"name\": \"constant.numeric.float.rust\",\n+\t\t\t\"match\": \"\\\\b[0-9][0-9_]*(\\\\.[0-9][0-9_]*)?([eE][+-]?[0-9_]+)?(f32|f64)\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Integer literal (decimal)\",\n+\t\t\t\"name\": \"constant.numeric.integer.decimal.rust\",\n+\t\t\t\"match\": \"\\\\b[0-9][0-9_]*([ui](8|16|32|64|128|s|size))?\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Integer literal (hexadecimal)\",\n+\t\t\t\"name\": \"constant.numeric.integer.hexadecimal.rust\",\n+\t\t\t\"match\": \"\\\\b0x[a-fA-F0-9_]+([ui](8|16|32|64|128|s|size))?\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Integer literal (octal)\",\n+\t\t\t\"name\": \"constant.numeric.integer.octal.rust\",\n+\t\t\t\"match\": \"\\\\b0o[0-7_]+([ui](8|16|32|64|128|s|size))?\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Integer literal (binary)\",\n+\t\t\t\"name\": \"constant.numeric.integer.binary.rust\",\n+\t\t\t\"match\": \"\\\\b0b[01_]+([ui](8|16|32|64|128|s|size))?\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Static storage modifier\",\n+\t\t\t\"name\": \"storage.modifier.static.rust\",\n+\t\t\t\"match\": \"\\\\bstatic\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Boolean constant\",\n+\t\t\t\"name\": \"constant.language.boolean.rust\",\n+\t\t\t\"match\": \"\\\\b(true|false)\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Control keyword\",\n+\t\t\t\"name\": \"keyword.control.rust\",\n+\t\t\t\"match\": \"\\\\b(async|await|break|continue|else|if|in|for|loop|match|return|try|while)\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Keyword\",\n+\t\t\t\"name\": \"keyword.other.rust\",\n+\t\t\t\"match\": \"\\\\b(crate|extern|mod|let|ref|use|super|move)\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Reserved keyword\",\n+\t\t\t\"name\": \"invalid.deprecated.rust\",\n+\t\t\t\"match\": \"\\\\b(abstract|alignof|become|do|final|macro|offsetof|override|priv|proc|pure|sizeof|typeof|virtual|yield)\\\\b\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#unsafe\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#sigils\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#self\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#mut\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#dyn\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#impl\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#box\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#lifetime\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#ref_lifetime\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#const\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#pub\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Miscellaneous operator\",\n+\t\t\t\"name\": \"keyword.operator.misc.rust\",\n+\t\t\t\"match\": \"(=>|::|\\\\bas\\\\b)\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Comparison operator\",\n+\t\t\t\"name\": \"keyword.operator.comparison.rust\",\n+\t\t\t\"match\": \"(&&|\\\\|\\\\||==|!=)\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Assignment operator\",\n+\t\t\t\"name\": \"keyword.operator.assignment.rust\",\n+\t\t\t\"match\": \"(\\\\+=|-=|/=|\\\\*=|%=|\\\\^=|&=|\\\\|=|<<=|>>=|=)\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Arithmetic operator\",\n+\t\t\t\"name\": \"keyword.operator.arithmetic.rust\",\n+\t\t\t\"match\": \"(!|\\\\+|-|/|\\\\*|%|\\\\^|&|\\\\||<<|>>)\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Comparison operator (second group because of regex precedence)\",\n+\t\t\t\"name\": \"keyword.operator.comparison.rust\",\n+\t\t\t\"match\": \"(<=|>=|<|>)\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#core_types\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#core_vars\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#core_marker\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#core_traits\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#std_types\"\n+\t\t},\n+\t\t{\n+\t\t\t\"include\": \"#std_traits\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Built-in macro\",\n+\t\t\t\"name\": \"support.function.builtin.rust\",\n+\t\t\t\"match\": \"\\\\b(macro_rules|compile_error|format_args|env|option_env|concat_idents|concat|line|column|file|stringify|include|include_str|include_bytes|module_path|cfg)!\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Core macro\",\n+\t\t\t\"name\": \"support.function.core.rust\",\n+\t\t\t\"match\": \"\\\\b(panic|assert|assert_eq|assert_ne|debug_assert|debug_assert_eq|debug_assert_ne|try|write|writeln|unreachable|unimplemented)!\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Standard library macro\",\n+\t\t\t\"name\": \"support.function.std.rust\",\n+\t\t\t\"match\": \"\\\\b(format|print|println|eprint|eprintln|select|vec)!\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Logging macro\",\n+\t\t\t\"name\": \"support.function.log.rust\",\n+\t\t\t\"match\": \"\\\\b(log|error|warn|info|debug|trace|log_enabled)!\"\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Invokation of a macro\",\n+\t\t\t\"match\": \"\\\\b([a-zA-Z_][a-zA-Z0-9_]*\\\\!)\\\\s*[({\\\\[]\",\n+\t\t\t\"captures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"entity.name.function.macro.rust\"\n+\t\t\t\t}\n+\t\t\t}\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Function call\",\n+\t\t\t\"match\": \"\\\\b([A-Za-z][A-Za-z0-9_]*|_[A-Za-z0-9_]+)\\\\s*\\\\(\",\n+\t\t\t\"captures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"entity.name.function.rust\"\n+\t\t\t\t}\n+\t\t\t}\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Function call with type parameters\",\n+\t\t\t\"begin\": \"\\\\b([A-Za-z][A-Za-z0-9_]*|_[A-Za-z0-9_]+)\\\\s*(::)(?=\\\\s*<.*>\\\\s*\\\\()\",\n+\t\t\t\"end\": \"\\\\(\",\n+\t\t\t\"captures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"entity.name.function.rust\"\n+\t\t\t\t},\n+\t\t\t\t\"2\": {\n+\t\t\t\t\t\"name\": \"keyword.operator.misc.rust\"\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#type_params\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Function definition\",\n+\t\t\t\"begin\": \"\\\\b(fn)\\\\s+([A-Za-z][A-Za-z0-9_]*|_[A-Za-z0-9_]+)\",\n+\t\t\t\"end\": \"[\\\\{;]\",\n+\t\t\t\"beginCaptures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"keyword.other.fn.rust\"\n+\t\t\t\t},\n+\t\t\t\t\"2\": {\n+\t\t\t\t\t\"name\": \"entity.name.function.rust\"\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#line_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#sigils\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#self\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#mut\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#dyn\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#impl\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#ref_lifetime\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_marker\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#type_params\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#const\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#where\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#unsafe\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"comment\": \"Function arguments\",\n+\t\t\t\t\t\"match\": \"\\bfn\\b\",\n+\t\t\t\t\t\"name\": \"keyword.other.fn.rust\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Type declaration\",\n+\t\t\t\"begin\": \"\\\\b(enum|struct|trait|union)\\\\s+([a-zA-Z_][a-zA-Z0-9_]*)\",\n+\t\t\t\"end\": \"[\\\\{\\\\(;]\",\n+\t\t\t\"beginCaptures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"storage.type.rust\"\n+\t\t\t\t},\n+\t\t\t\t\"2\": {\n+\t\t\t\t\t\"name\": \"entity.name.type.rust\"\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#line_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#type_params\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#pub\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#where\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t},\n+\t\t{\n+\t\t\t\"comment\": \"Type alias\",\n+\t\t\t\"begin\": \"\\\\b(type)\\\\s+([a-zA-Z_][a-zA-Z0-9_]*)\",\n+\t\t\t\"end\": \";\",\n+\t\t\t\"beginCaptures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"storage.type.rust\"\n+\t\t\t\t},\n+\t\t\t\t\"2\": {\n+\t\t\t\t\t\"name\": \"entity.name.type.rust\"\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#line_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#sigils\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#mut\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#dyn\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#impl\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#lifetime\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#ref_lifetime\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_marker\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#type_params\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t}\n+\t],\n+\t\"repository\": {\n+\t\t\"block_doc_comment\": {\n+\t\t\t\"comment\": \"Block documentation comment\",\n+\t\t\t\"name\": \"comment.block.documentation.rust\",\n+\t\t\t\"begin\": \"/\\\\*[\\\\*!](?![\\\\*/])\",\n+\t\t\t\"end\": \"\\\\*/\",\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_doc_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_comment\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t},\n+\t\t\"block_comment\": {\n+\t\t\t\"comment\": \"Block comment\",\n+\t\t\t\"name\": \"comment.block.rust\",\n+\t\t\t\"begin\": \"/\\\\*\",\n+\t\t\t\"end\": \"\\\\*/\",\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_doc_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_comment\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t},\n+\t\t\"line_doc_comment\": {\n+\t\t\t\"comment\": \"Single-line documentation comment\",\n+\t\t\t\"name\": \"comment.line.documentation.rust\",\n+\t\t\t\"begin\": \"//[!/](?=[^/])\",\n+\t\t\t\"end\": \"$\"\n+\t\t},\n+\t\t\"line_comment\": {\n+\t\t\t\"comment\": \"Single-line comment\",\n+\t\t\t\"name\": \"comment.line.double-slash.rust\",\n+\t\t\t\"begin\": \"//\",\n+\t\t\t\"end\": \"$\"\n+\t\t},\n+\t\t\"escaped_character\": {\n+\t\t\t\"name\": \"constant.character.escape.rust\",\n+\t\t\t\"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)\"\n+\t\t},\n+\t\t\"string_literal\": {\n+\t\t\t\"comment\": \"Double-quote string literal\",\n+\t\t\t\"name\": \"string.quoted.double.rust\",\n+\t\t\t\"begin\": \"b?\\\"\",\n+\t\t\t\"end\": \"\\\"\",\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#escaped_character\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t},\n+\t\t\"raw_string_literal\": {\n+\t\t\t\"comment\": \"Raw double-quote string literal\",\n+\t\t\t\"name\": \"string.quoted.double.raw.rust\",\n+\t\t\t\"begin\": \"b?r(#*)\\\"\",\n+\t\t\t\"end\": \"\\\"\\\\1\"\n+\t\t},\n+\t\t\"sigils\": {\n+\t\t\t\"comment\": \"Sigil\",\n+\t\t\t\"name\": \"keyword.operator.sigil.rust\",\n+\t\t\t\"match\": \"[&*](?=[a-zA-Z0-9_\\\\(\\\\[\\\\|\\\\\\\"]+)\"\n+\t\t},\n+\t\t\"self\": {\n+\t\t\t\"comment\": \"Self variable\",\n+\t\t\t\"name\": \"variable.language.rust\",\n+\t\t\t\"match\": \"\\\\bself\\\\b\"\n+\t\t},\n+\t\t\"mut\": {\n+\t\t\t\"comment\": \"Mutable storage modifier\",\n+\t\t\t\"name\": \"storage.modifier.mut.rust\",\n+\t\t\t\"match\": \"\\\\bmut\\\\b\"\n+\t\t},\n+\t\t\"dyn\": {\n+\t\t\t\"comment\": \"Dynamic modifier\",\n+\t\t\t\"name\": \"storage.modifier.dyn.rust\",\n+\t\t\t\"match\": \"\\\\bdyn\\\\b\"\n+\t\t},\n+\t\t\"impl\": {\n+\t\t\t\"comment\": \"Existential type modifier\",\n+\t\t\t\"name\": \"storage.modifier.impl.rust\",\n+\t\t\t\"match\": \"\\\\bimpl\\\\b\"\n+\t\t},\n+\t\t\"box\": {\n+\t\t\t\"comment\": \"Box storage modifier\",\n+\t\t\t\"name\": \"storage.modifier.box.rust\",\n+\t\t\t\"match\": \"\\\\bbox\\\\b\"\n+\t\t},\n+\t\t\"const\": {\n+\t\t\t\"comment\": \"Const storage modifier\",\n+\t\t\t\"name\": \"storage.modifier.const.rust\",\n+\t\t\t\"match\": \"\\\\bconst\\\\b\"\n+\t\t},\n+\t\t\"pub\": {\n+\t\t\t\"comment\": \"Visibility modifier\",\n+\t\t\t\"name\": \"storage.modifier.visibility.rust\",\n+\t\t\t\"match\": \"\\\\bpub\\\\b\"\n+\t\t},\n+\t\t\"unsafe\": {\n+\t\t\t\"comment\": \"Unsafe code keyword\",\n+\t\t\t\"name\": \"keyword.other.unsafe.rust\",\n+\t\t\t\"match\": \"\\\\bunsafe\\\\b\"\n+\t\t},\n+\t\t\"where\": {\n+\t\t\t\"comment\": \"Generic where clause\",\n+\t\t\t\"name\": \"keyword.other.where.rust\",\n+\t\t\t\"match\": \"\\\\bwhere\\\\b\"\n+\t\t},\n+\t\t\"lifetime\": {\n+\t\t\t\"comment\": \"Named lifetime\",\n+\t\t\t\"name\": \"storage.modifier.lifetime.rust\",\n+\t\t\t\"match\": \"'([a-zA-Z_][a-zA-Z0-9_]*)\\\\b\",\n+\t\t\t\"captures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"entity.name.lifetime.rust\"\n+\t\t\t\t}\n+\t\t\t}\n+\t\t},\n+\t\t\"ref_lifetime\": {\n+\t\t\t\"comment\": \"Reference with named lifetime\",\n+\t\t\t\"match\": \"&('([a-zA-Z_][a-zA-Z0-9_]*))\\\\b\",\n+\t\t\t\"captures\": {\n+\t\t\t\t\"1\": {\n+\t\t\t\t\t\"name\": \"storage.modifier.lifetime.rust\"\n+\t\t\t\t},\n+\t\t\t\t\"2\": {\n+\t\t\t\t\t\"name\": \"entity.name.lifetime.rust\"\n+\t\t\t\t}\n+\t\t\t}\n+\t\t},\n+\t\t\"core_types\": {\n+\t\t\t\"comment\": \"Built-in/core type\",\n+\t\t\t\"name\": \"storage.type.core.rust\",\n+\t\t\t\"match\": \"\\\\b(bool|char|usize|isize|u8|u16|u32|u64|u128|i8|i16|i32|i64|i128|f32|f64|str|Self|Option|Result)\\\\b\"\n+\t\t},\n+\t\t\"core_vars\": {\n+\t\t\t\"comment\": \"Core type variant\",\n+\t\t\t\"name\": \"support.constant.core.rust\",\n+\t\t\t\"match\": \"\\\\b(Some|None|Ok|Err)\\\\b\"\n+\t\t},\n+\t\t\"core_marker\": {\n+\t\t\t\"comment\": \"Core trait (marker)\",\n+\t\t\t\"name\": \"support.type.marker.rust\",\n+\t\t\t\"match\": \"\\\\b(Copy|Send|Sized|Sync)\\\\b\"\n+\t\t},\n+\t\t\"core_traits\": {\n+\t\t\t\"comment\": \"Core trait\",\n+\t\t\t\"name\": \"support.type.core.rust\",\n+\t\t\t\"match\": \"\\\\b(Drop|Fn|FnMut|FnOnce|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator)\\\\b\"\n+\t\t},\n+\t\t\"std_types\": {\n+\t\t\t\"comment\": \"Standard library type\",\n+\t\t\t\"name\": \"storage.class.std.rust\",\n+\t\t\t\"match\": \"\\\\b(Box|String|Vec|Path|PathBuf)\\\\b\"\n+\t\t},\n+\t\t\"std_traits\": {\n+\t\t\t\"comment\": \"Standard library trait\",\n+\t\t\t\"name\": \"support.type.std.rust\",\n+\t\t\t\"match\": \"\\\\b(ToOwned|ToString)\\\\b\"\n+\t\t},\n+\t\t\"type\": {\n+\t\t\t\"comment\": \"A type\",\n+\t\t\t\"name\": \"entity.name.type.rust\",\n+\t\t\t\"match\": \"\\\\b([A-Za-z][_A-Za-z0-9]*|_[_A-Za-z0-9]+)\\\\b\"\n+\t\t},\n+\t\t\"type_params\": {\n+\t\t\t\"comment\": \"Type parameters\",\n+\t\t\t\"name\": \"meta.type_params.rust\",\n+\t\t\t\"begin\": \"<(?![=<])\",\n+\t\t\t\"end\": \"(?<![-])>\",\n+\t\t\t\"patterns\": [\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#block_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#line_comment\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#sigils\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#mut\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#dyn\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#impl\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#lifetime\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_marker\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#core_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_types\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#std_traits\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"include\": \"#type_params\"\n+\t\t\t\t}\n+\t\t\t]\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file"}]}