{"sha": "2f0da79e4723f3535367581099dc59d1289a3c7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMGRhNzllNDcyM2YzNTM1MzY3NTgxMDk5ZGM1OWQxMjg5YTNjN2M=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-05-26T08:26:03Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-05-26T08:26:03Z"}, "message": "Do not forget to schedule the drop for the argument", "tree": {"sha": "e6a0bd8de2c563550758945db2a295dd3ea43cea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6a0bd8de2c563550758945db2a295dd3ea43cea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f0da79e4723f3535367581099dc59d1289a3c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f0da79e4723f3535367581099dc59d1289a3c7c", "html_url": "https://github.com/rust-lang/rust/commit/2f0da79e4723f3535367581099dc59d1289a3c7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f0da79e4723f3535367581099dc59d1289a3c7c/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0e50a4b74c4e52e696cfe2608c3ed54a18e411f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e50a4b74c4e52e696cfe2608c3ed54a18e411f", "html_url": "https://github.com/rust-lang/rust/commit/e0e50a4b74c4e52e696cfe2608c3ed54a18e411f"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "712805061ea8cd026cda30d19f67bc882b062133", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2f0da79e4723f3535367581099dc59d1289a3c7c/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f0da79e4723f3535367581099dc59d1289a3c7c/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=2f0da79e4723f3535367581099dc59d1289a3c7c", "patch": "@@ -1660,8 +1660,8 @@ impl<'blk, 'tcx> FunctionContext<'blk, 'tcx> {\n                     self.schedule_drop_mem(arg_scope_id, llarg, arg_ty, None);\n \n                     datum::Datum::new(llarg,\n-                                    arg_ty,\n-                                    datum::Lvalue::new(\"FunctionContext::bind_args\"))\n+                                      arg_ty,\n+                                      datum::Lvalue::new(\"FunctionContext::bind_args\"))\n                 } else {\n                     let lltmp = if common::type_is_fat_ptr(bcx.tcx(), arg_ty) {\n                         let lltemp = alloc_ty(bcx, arg_ty, \"\");\n@@ -1683,6 +1683,7 @@ impl<'blk, 'tcx> FunctionContext<'blk, 'tcx> {\n                         // And coerce the temporary into the type we expect.\n                         b.pointercast(lltemp, arg.memory_ty(bcx.ccx()).ptr_to())\n                     };\n+                    bcx.fcx.schedule_drop_mem(arg_scope_id, lltmp, arg_ty, None);\n                     datum::Datum::new(lltmp, arg_ty,\n                                       datum::Lvalue::new(\"bind_args\"))\n                 }"}]}