{"sha": "f353625705854877a8347c3a46f15e294a9338e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNTM2MjU3MDU4NTQ4NzdhODM0N2MzYTQ2ZjE1ZTI5NGE5MzM4ZTQ=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-03-01T14:25:38Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-03-01T14:25:38Z"}, "message": "match single prefix slice", "tree": {"sha": "5a595ce0b149a0565ab562165dcd44a1642c0319", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a595ce0b149a0565ab562165dcd44a1642c0319"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f353625705854877a8347c3a46f15e294a9338e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f353625705854877a8347c3a46f15e294a9338e4", "html_url": "https://github.com/rust-lang/rust/commit/f353625705854877a8347c3a46f15e294a9338e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f353625705854877a8347c3a46f15e294a9338e4/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6db2da4993d3956fc7c8ebf152963a132611426a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6db2da4993d3956fc7c8ebf152963a132611426a", "html_url": "https://github.com/rust-lang/rust/commit/6db2da4993d3956fc7c8ebf152963a132611426a"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "b991720ff6cf08ec5deae306093d94cb77df17c6", "filename": "crates/ra_hir_ty/src/infer/pat.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f353625705854877a8347c3a46f15e294a9338e4/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f353625705854877a8347c3a46f15e294a9338e4/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=f353625705854877a8347c3a46f15e294a9338e4", "patch": "@@ -12,7 +12,7 @@ use hir_expand::name::Name;\n use test_utils::tested_by;\n \n use super::{BindingMode, InferenceContext};\n-use crate::{db::HirDatabase, utils::variant_data, Substs, Ty, TypeCtor};\n+use crate::{db::HirDatabase, utils::variant_data, Substs, Ty, TypeCtor, ApplicationTy};\n \n impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n     fn infer_tuple_struct_pat(\n@@ -185,6 +185,20 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 self.write_pat_ty(pat, bound_ty);\n                 return inner_ty;\n             }\n+            Pat::Slice { prefix, slice, suffix } => {\n+                if let Ty::Apply(ApplicationTy { ctor: TypeCtor::Slice, parameters }) = expected {\n+                    match (prefix.as_slice(), slice, suffix.as_slice()) {\n+                        ([prefix_pat_id], None, []) => {\n+                            let ty = self.infer_pat(*prefix_pat_id, &parameters.0[0], default_bm);\n+\n+                            Ty::apply_one(TypeCtor::Slice, ty)\n+                        },\n+                        _ => Ty::Unknown,\n+                    }\n+                } else {\n+                    Ty::Unknown\n+                }\n+            }\n             _ => Ty::Unknown,\n         };\n         // use a new type variable if we got Ty::Unknown here"}, {"sha": "fdc9dd1808eaba3f56c53eec0dcc87f98f951a56", "filename": "crates/ra_hir_ty/src/tests/patterns.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f353625705854877a8347c3a46f15e294a9338e4/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f353625705854877a8347c3a46f15e294a9338e4/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs?ref=f353625705854877a8347c3a46f15e294a9338e4", "patch": "@@ -136,6 +136,39 @@ fn test() {\n     );\n }\n \n+#[test]\n+fn infer_pattern_match_slice() {\n+    assert_snapshot!(\n+        infer(r#\"\n+fn test() {\n+    let slice: &[f64] = &[0.0];\n+    match slice {\n+        &[a] => {\n+            a;\n+        }\n+        _ => {}\n+    }\n+}\n+\"#),\n+    @r###\"\n+    [11; 129) '{     ...   } }': ()\n+    [21; 26) 'slice': &[f64]\n+    [37; 43) '&[0.0]': &[f64; _]\n+    [38; 43) '[0.0]': [f64; _]\n+    [39; 42) '0.0': f64\n+    [49; 127) 'match ...     }': ()\n+    [55; 60) 'slice': &[f64]\n+    [71; 75) '&[a]': &[f64]\n+    [72; 75) '[a]': [f64]\n+    [73; 74) 'a': f64\n+    [79; 105) '{     ...     }': ()\n+    [93; 94) 'a': f64\n+    [114; 115) '_': &[f64]\n+    [119; 121) '{}': ()\n+    \"###\n+    );\n+}\n+\n #[test]\n fn infer_adt_pattern() {\n     assert_snapshot!("}]}