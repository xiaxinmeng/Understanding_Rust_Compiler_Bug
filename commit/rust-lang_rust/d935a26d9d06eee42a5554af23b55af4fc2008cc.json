{"sha": "d935a26d9d06eee42a5554af23b55af4fc2008cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MzVhMjZkOWQwNmVlZTQyYTU1NTRhZjIzYjU1YWY0ZmMyMDA4Y2M=", "commit": {"author": {"name": "JP Sugarbroad", "email": "taralx@gmail.com", "date": "2019-12-30T20:17:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-30T20:17:23Z"}, "message": "Less-than is asymmetric, not antisymmetric\n\nThis has bothered me for a while. It's such a small nit, but...", "tree": {"sha": "6bea3308c123f8dc4cba377b4c769e899817eb03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bea3308c123f8dc4cba377b4c769e899817eb03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d935a26d9d06eee42a5554af23b55af4fc2008cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeCltTCRBK7hj4Ov3rIwAAdHIIAH/THb/BRqzKUMtvLhyYrRF5\nxZpsPbT1IH6r0CgA5ljlTHcDqC/+IonCG1mf28TjjYYApDN2n8eIjECDTmFVJjWA\nJnZrcYsXyZEkUq4x5DPvdyP4G13WSmN2wuu1MzOUVmnnjKPoBOTOasWe3TpAPbFv\nZggir7nQ7vRFXvgNQ9dtSpeHjffrQRrMSy5vOoKNX4msLCyGf/y1boS2K2XYLBnE\nql4zFAMZDKODd4ETutzdCRVmqIK+awLl1XSRZB0gziWrS+jo744bn8T8DV2/M6fI\n89bDAER1QZgl/rOLwf+wFy5L080YYbn2f9onUW3yRVUfiq9Ds+vx2qlQTowBfYk=\n=UcU1\n-----END PGP SIGNATURE-----\n", "payload": "tree 6bea3308c123f8dc4cba377b4c769e899817eb03\nparent 9d6f87184e5116cf4a96f6686eb67994f19908a5\nauthor JP Sugarbroad <taralx@gmail.com> 1577737043 -0800\ncommitter GitHub <noreply@github.com> 1577737043 -0800\n\nLess-than is asymmetric, not antisymmetric\n\nThis has bothered me for a while. It's such a small nit, but..."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d935a26d9d06eee42a5554af23b55af4fc2008cc", "html_url": "https://github.com/rust-lang/rust/commit/d935a26d9d06eee42a5554af23b55af4fc2008cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d935a26d9d06eee42a5554af23b55af4fc2008cc/comments", "author": {"login": "taralx", "id": 1036808, "node_id": "MDQ6VXNlcjEwMzY4MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1036808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taralx", "html_url": "https://github.com/taralx", "followers_url": "https://api.github.com/users/taralx/followers", "following_url": "https://api.github.com/users/taralx/following{/other_user}", "gists_url": "https://api.github.com/users/taralx/gists{/gist_id}", "starred_url": "https://api.github.com/users/taralx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taralx/subscriptions", "organizations_url": "https://api.github.com/users/taralx/orgs", "repos_url": "https://api.github.com/users/taralx/repos", "events_url": "https://api.github.com/users/taralx/events{/privacy}", "received_events_url": "https://api.github.com/users/taralx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d6f87184e5116cf4a96f6686eb67994f19908a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d6f87184e5116cf4a96f6686eb67994f19908a5", "html_url": "https://github.com/rust-lang/rust/commit/9d6f87184e5116cf4a96f6686eb67994f19908a5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "06e7e45c7014e796b125174d0a8d302b74f07b2f", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d935a26d9d06eee42a5554af23b55af4fc2008cc/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d935a26d9d06eee42a5554af23b55af4fc2008cc/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=d935a26d9d06eee42a5554af23b55af4fc2008cc", "patch": "@@ -495,7 +495,7 @@ impl<T: Ord> Ord for Reverse<T> {\n ///\n /// An order is a total order if it is (for all `a`, `b` and `c`):\n ///\n-/// - total and antisymmetric: exactly one of `a < b`, `a == b` or `a > b` is true; and\n+/// - total and asymmetric: exactly one of `a < b`, `a == b` or `a > b` is true; and\n /// - transitive, `a < b` and `b < c` implies `a < c`. The same must hold for both `==` and `>`.\n ///\n /// ## Derivable\n@@ -674,7 +674,7 @@ impl PartialOrd for Ordering {\n ///\n /// The comparison must satisfy, for all `a`, `b` and `c`:\n ///\n-/// - antisymmetry: if `a < b` then `!(a > b)`, as well as `a > b` implying `!(a < b)`; and\n+/// - asymmetry: if `a < b` then `!(a > b)`, as well as `a > b` implying `!(a < b)`; and\n /// - transitivity: `a < b` and `b < c` implies `a < c`. The same must hold for both `==` and `>`.\n ///\n /// Note that these requirements mean that the trait itself must be implemented symmetrically and"}]}