{"sha": "4843f227885bf23a34cc8485173c11601b00d977", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NDNmMjI3ODg1YmYyM2EzNGNjODQ4NTE3M2MxMTYwMWIwMGQ5Nzc=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-30T13:30:34Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-30T13:41:07Z"}, "message": "Handle recursive instantiation of drop shims", "tree": {"sha": "5d56ca4ff8eca066afc1df30590583142743dcc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d56ca4ff8eca066afc1df30590583142743dcc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4843f227885bf23a34cc8485173c11601b00d977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4843f227885bf23a34cc8485173c11601b00d977", "html_url": "https://github.com/rust-lang/rust/commit/4843f227885bf23a34cc8485173c11601b00d977", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4843f227885bf23a34cc8485173c11601b00d977/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "580ac0b4f1c6f9cf76f6edafdaf9806437770aff", "url": "https://api.github.com/repos/rust-lang/rust/commits/580ac0b4f1c6f9cf76f6edafdaf9806437770aff", "html_url": "https://github.com/rust-lang/rust/commit/580ac0b4f1c6f9cf76f6edafdaf9806437770aff"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "dfc3c4cd76947f4cd686f5ad21da0e9195aaa65f", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4843f227885bf23a34cc8485173c11601b00d977/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4843f227885bf23a34cc8485173c11601b00d977/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=4843f227885bf23a34cc8485173c11601b00d977", "patch": "@@ -423,7 +423,7 @@ fn check_recursion_limit<'tcx>(\n     let recursion_depth = recursion_depths.get(&def_id).cloned().unwrap_or(0);\n     debug!(\" => recursion depth={}\", recursion_depth);\n \n-    let recursion_depth = if Some(def_id) == tcx.lang_items().drop_in_place_fn() {\n+    let adjusted_recursion_depth = if Some(def_id) == tcx.lang_items().drop_in_place_fn() {\n         // HACK: drop_in_place creates tight monomorphization loops. Give\n         // it more margin.\n         recursion_depth / 4\n@@ -434,7 +434,7 @@ fn check_recursion_limit<'tcx>(\n     // Code that needs to instantiate the same function recursively\n     // more than the recursion limit is assumed to be causing an\n     // infinite expansion.\n-    if recursion_depth > *tcx.sess.recursion_limit.get() {\n+    if adjusted_recursion_depth > *tcx.sess.recursion_limit.get() {\n         let error = format!(\"reached the recursion limit while instantiating `{}`\", instance);\n         if let Some(hir_id) = tcx.hir().as_local_hir_id(def_id) {\n             tcx.sess.span_fatal(tcx.hir().span(hir_id), &error);"}, {"sha": "2f594b48e697f2b0e0ef0b4c11bcdb9fce8a031e", "filename": "src/test/ui/issues/issue-38591.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/580ac0b4f1c6f9cf76f6edafdaf9806437770aff/src%2Ftest%2Fui%2Fissues%2Fissue-38591.rs", "raw_url": "https://github.com/rust-lang/rust/raw/580ac0b4f1c6f9cf76f6edafdaf9806437770aff/src%2Ftest%2Fui%2Fissues%2Fissue-38591.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38591.rs?ref=580ac0b4f1c6f9cf76f6edafdaf9806437770aff", "patch": "@@ -1,10 +0,0 @@\n-// check-pass\n-\n-struct S<T> {\n-    t : T,\n-    s : Box<S<fn(u : T)>>\n-}\n-\n-fn f(x : S<u32>) {}\n-\n-fn main () {}"}, {"sha": "6ee8c0fcfdaded5c76d34d4944a7ae0e9db39066", "filename": "src/test/ui/recursion/issue-26548-recursion-via-normalize.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4843f227885bf23a34cc8485173c11601b00d977/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4843f227885bf23a34cc8485173c11601b00d977/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.rs?ref=4843f227885bf23a34cc8485173c11601b00d977", "previous_filename": "src/test/ui/issues/issue-26548.rs"}, {"sha": "6a83f91ce5b32a79e9751ef62c6e7510b771b6a6", "filename": "src/test/ui/recursion/issue-26548-recursion-via-normalize.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4843f227885bf23a34cc8485173c11601b00d977/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4843f227885bf23a34cc8485173c11601b00d977/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.stderr?ref=4843f227885bf23a34cc8485173c11601b00d977", "patch": "@@ -3,7 +3,7 @@ error[E0391]: cycle detected when computing layout of `std::option::Option<S>`\n    = note: ...which requires computing layout of `S`...\n    = note: ...which again requires computing layout of `std::option::Option<S>`, completing the cycle\n note: cycle used when processing `main`\n-  --> $DIR/issue-26548.rs:11:1\n+  --> $DIR/issue-26548-recursion-via-normalize.rs:11:1\n    |\n LL | fn main() {\n    | ^^^^^^^^^", "previous_filename": "src/test/ui/issues/issue-26548.stderr"}, {"sha": "0fcf77d8722d6c969e812c411c06e6532fcc307c", "filename": "src/test/ui/recursion/issue-38591-non-regular-dropck-recursion.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4843f227885bf23a34cc8485173c11601b00d977/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4843f227885bf23a34cc8485173c11601b00d977/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.rs?ref=4843f227885bf23a34cc8485173c11601b00d977", "patch": "@@ -0,0 +1,17 @@\n+// Dropck shouldn't hit a recursion limit from checking `S<u32>` since it has\n+// no free regions or type parameters.\n+// Codegen however, has to error for the infinitely many `real_drop_in_place`\n+// functions it has been asked to create.\n+// build-fail\n+\n+struct S<T> {\n+    t: T,\n+    s: Box<S<fn(u: T)>>,\n+}\n+\n+fn f(x: S<u32>) {}\n+\n+fn main() {\n+    // Force instantiation.\n+    f as fn(_);\n+}"}, {"sha": "77309a82a0fa794f71f89e55aba2b6a94a6c9e0a", "filename": "src/test/ui/recursion/issue-38591-non-regular-dropck-recursion.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4843f227885bf23a34cc8485173c11601b00d977/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4843f227885bf23a34cc8485173c11601b00d977/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.stderr?ref=4843f227885bf23a34cc8485173c11601b00d977", "patch": "@@ -0,0 +1,4 @@\n+error: reached the recursion limit while instantiating `std::ptr::real_drop_in_place::<S<fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(u32))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))>> - shim(Some(S<fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(fn(u32))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))>))`\n+\n+error: aborting due to previous error\n+"}]}