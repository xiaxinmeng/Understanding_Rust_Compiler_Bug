{"sha": "06d403d67076dabd263ff038979f791b07853a3f", "node_id": "C_kwDOAAsO6NoAKDA2ZDQwM2Q2NzA3NmRhYmQyNjNmZjAzODk3OWY3OTFiMDc4NTNhM2Y", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-18T04:44:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-18T04:44:45Z"}, "message": "Rollup merge of #109981 - duckymirror:issue-107094, r=albertlarsan68\n\nSet commit information environment variables when building tools\n\nThis fixes #107094.\n~I'm trying to add a regression test for this issue.~\n**Update**: I've added a test and a new test header `needs-git-hash` which makes sure it doesn't run when commit hashes are ignored (`bootstrap`'s `ignore-git` option).", "tree": {"sha": "038a8b09a97cf69c862405aea06c562afc9c2b73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/038a8b09a97cf69c862405aea06c562afc9c2b73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06d403d67076dabd263ff038979f791b07853a3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkPiA9CRBK7hj4Ov3rIwAASOQIAJx+ay/cWg2vUWIAYV9B882a\npLLrMVNRooQecEk092gOkoJnttp3aLI9AV9PYiuW6s5kMarK4g0ROQZ17BtcQZbU\n3ZzjhMASdWaOZKgIlX2/f+XOHcTX+qkcpm629JUH3GNLtjES2R0BvqortRI7qc2o\n9d1l9Bhm4mdj3NkZU/LodwVX8XfFOCa8xtjTplyLo4iw5TV5PL2IdmshMNX9eXDb\n+P8RXl0puPPOF2DR4SiORmjdWDk81inYhfNEvaV31Pwv17nB0A72m0WKGgpzYzgN\nmByNfRFXfTX6Dm3K6G6IAETPMi+m7rAr7+T3E4VPZWn8A1DuohY4cK4QP1zDEWU=\n=OM0n\n-----END PGP SIGNATURE-----\n", "payload": "tree 038a8b09a97cf69c862405aea06c562afc9c2b73\nparent e279f902f31af1e111f2a951781c9eed82f8c360\nparent 0a763c92f214501ccd0460fdddfbb49d21fe9b2e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681793085 +0200\ncommitter GitHub <noreply@github.com> 1681793085 +0200\n\nRollup merge of #109981 - duckymirror:issue-107094, r=albertlarsan68\n\nSet commit information environment variables when building tools\n\nThis fixes #107094.\n~I'm trying to add a regression test for this issue.~\n**Update**: I've added a test and a new test header `needs-git-hash` which makes sure it doesn't run when commit hashes are ignored (`bootstrap`'s `ignore-git` option).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06d403d67076dabd263ff038979f791b07853a3f", "html_url": "https://github.com/rust-lang/rust/commit/06d403d67076dabd263ff038979f791b07853a3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06d403d67076dabd263ff038979f791b07853a3f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e279f902f31af1e111f2a951781c9eed82f8c360", "url": "https://api.github.com/repos/rust-lang/rust/commits/e279f902f31af1e111f2a951781c9eed82f8c360", "html_url": "https://github.com/rust-lang/rust/commit/e279f902f31af1e111f2a951781c9eed82f8c360"}, {"sha": "0a763c92f214501ccd0460fdddfbb49d21fe9b2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a763c92f214501ccd0460fdddfbb49d21fe9b2e", "html_url": "https://github.com/rust-lang/rust/commit/0a763c92f214501ccd0460fdddfbb49d21fe9b2e"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "3814dc63ed4dcfc7ca37e2e1eed809cbdbddbcf8", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06d403d67076dabd263ff038979f791b07853a3f/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06d403d67076dabd263ff038979f791b07853a3f/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=06d403d67076dabd263ff038979f791b07853a3f", "patch": "@@ -1804,6 +1804,10 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n \n         cmd.arg(\"--channel\").arg(&builder.config.channel);\n \n+        if !builder.config.omit_git_hash {\n+            cmd.arg(\"--git-hash\");\n+        }\n+\n         if let Some(commit) = builder.config.download_rustc_commit() {\n             cmd.env(\"FAKE_DOWNLOAD_RUSTC_PREFIX\", format!(\"/rustc/{commit}\"));\n         }"}, {"sha": "79fab00efe703d7fa83c621789b190743deeedd6", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/06d403d67076dabd263ff038979f791b07853a3f/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06d403d67076dabd263ff038979f791b07853a3f/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=06d403d67076dabd263ff038979f791b07853a3f", "patch": "@@ -194,6 +194,12 @@ pub fn prepare_tool_cargo(\n     cargo.env(\"CFG_VERSION\", builder.rust_version());\n     cargo.env(\"CFG_RELEASE_NUM\", &builder.version);\n     cargo.env(\"DOC_RUST_LANG_ORG_CHANNEL\", builder.doc_rust_lang_org_channel());\n+    if let Some(ref ver_date) = builder.rust_info().commit_date() {\n+        cargo.env(\"CFG_VER_DATE\", ver_date);\n+    }\n+    if let Some(ref ver_hash) = builder.rust_info().sha() {\n+        cargo.env(\"CFG_VER_HASH\", ver_hash);\n+    }\n \n     let info = GitInfo::new(builder.config.omit_git_hash, &dir);\n     if let Some(sha) = info.sha() {"}, {"sha": "3f36cc5bbcc91e204131ee41c37e81246eb93a99", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/06d403d67076dabd263ff038979f791b07853a3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06d403d67076dabd263ff038979f791b07853a3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=06d403d67076dabd263ff038979f791b07853a3f", "patch": "@@ -303,6 +303,9 @@ pub struct Config {\n     /// The current Rust channel\n     pub channel: String,\n \n+    /// Whether adding git commit information such as the commit hash has been enabled for building\n+    pub git_hash: bool,\n+\n     /// The default Rust edition\n     pub edition: Option<String>,\n "}, {"sha": "81179480ed8100e33eb7b365cebd25e81fbdc844", "filename": "src/tools/compiletest/src/header/needs.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/06d403d67076dabd263ff038979f791b07853a3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fneeds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06d403d67076dabd263ff038979f791b07853a3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fneeds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fneeds.rs?ref=06d403d67076dabd263ff038979f791b07853a3f", "patch": "@@ -115,6 +115,11 @@ pub(super) fn handle_needs(\n             condition: cache.x86_64_dlltool,\n             ignore_reason: \"ignored when dlltool for x86_64 is not present\",\n         },\n+        Need {\n+            name: \"needs-git-hash\",\n+            condition: config.git_hash,\n+            ignore_reason: \"ignored when git hashes have been omitted for building\",\n+        },\n     ];\n \n     let (name, comment) = match ln.split_once([':', ' ']) {"}, {"sha": "362fba11697befc67b47a1b8b5a3364e5cbd076c", "filename": "src/tools/compiletest/src/header/tests.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/06d403d67076dabd263ff038979f791b07853a3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06d403d67076dabd263ff038979f791b07853a3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs?ref=06d403d67076dabd263ff038979f791b07853a3f", "patch": "@@ -251,6 +251,16 @@ fn debugger() {\n     assert!(check_ignore(&config, \"// ignore-lldb\"));\n }\n \n+#[test]\n+fn git_hash() {\n+    let mut config = config();\n+    config.git_hash = false;\n+    assert!(check_ignore(&config, \"// needs-git-hash\"));\n+\n+    config.git_hash = true;\n+    assert!(!check_ignore(&config, \"// needs-git-hash\"));\n+}\n+\n #[test]\n fn sanitizers() {\n     let mut config = config();"}, {"sha": "c4bef998f3171d45e9a4e01cb1bef300782f9f81", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06d403d67076dabd263ff038979f791b07853a3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06d403d67076dabd263ff038979f791b07853a3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=06d403d67076dabd263ff038979f791b07853a3f", "patch": "@@ -159,6 +159,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         .optflag(\"\", \"nocapture\", \"\")\n         .optflag(\"h\", \"help\", \"show this message\")\n         .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\")\n+        .optflag(\"\", \"git-hash\", \"run tests which rely on commit version being compiled into the binaries\")\n         .optopt(\"\", \"edition\", \"default Rust edition\", \"EDITION\");\n \n     let (argv0, args_) = args.split_first().unwrap();\n@@ -302,6 +303,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         rustfix_coverage: matches.opt_present(\"rustfix-coverage\"),\n         has_tidy,\n         channel: matches.opt_str(\"channel\").unwrap(),\n+        git_hash: matches.opt_present(\"git-hash\"),\n         edition: matches.opt_str(\"edition\"),\n \n         cc: matches.opt_str(\"cc\").unwrap(),"}, {"sha": "d614e3e1055c0aa0532874b5670709e9682d420c", "filename": "tests/run-make/issue-107094/Makefile", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/06d403d67076dabd263ff038979f791b07853a3f/tests%2Frun-make%2Fissue-107094%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/06d403d67076dabd263ff038979f791b07853a3f/tests%2Frun-make%2Fissue-107094%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fissue-107094%2FMakefile?ref=06d403d67076dabd263ff038979f791b07853a3f", "patch": "@@ -0,0 +1,7 @@\n+# needs-git-hash\n+\n+include ../tools.mk\n+\n+all:\n+\t$(BARE_RUSTC) --version --verbose | $(CGREP) -i -e \"commit-hash: [0-9a-f]{40}\" \"commit-date: [0-9]{4}-[0-9]{2}-[0-9]{2}\"\n+\t$(BARE_RUSTDOC) --version --verbose | $(CGREP) -i -e \"commit-hash: [0-9a-f]{40}\" \"commit-date: [0-9]{4}-[0-9]{2}-[0-9]{2}\""}]}