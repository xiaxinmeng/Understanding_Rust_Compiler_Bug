{"sha": "f738669b636eae466fef00f62af5d393169c676d", "node_id": "C_kwDOAAsO6NoAKGY3Mzg2NjliNjM2ZWFlNDY2ZmVmMDBmNjJhZjVkMzkzMTY5YzY3NmQ", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-30T20:33:51Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-30T20:33:51Z"}, "message": "Clarify safety of PanicInfo::can_unwind", "tree": {"sha": "f39cb721a7b38155dd0593b21f7c07cb6832ebd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f39cb721a7b38155dd0593b21f7c07cb6832ebd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f738669b636eae466fef00f62af5d393169c676d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f738669b636eae466fef00f62af5d393169c676d", "html_url": "https://github.com/rust-lang/rust/commit/f738669b636eae466fef00f62af5d393169c676d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f738669b636eae466fef00f62af5d393169c676d/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e", "html_url": "https://github.com/rust-lang/rust/commit/c4f2d21f1a9e41c025cc8cfca5f5f06053aba70e"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "be8598fae09d793a8859a0e9dac14e2cd9fa3dbe", "filename": "library/core/src/panic/panic_info.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f738669b636eae466fef00f62af5d393169c676d/library%2Fcore%2Fsrc%2Fpanic%2Fpanic_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f738669b636eae466fef00f62af5d393169c676d/library%2Fcore%2Fsrc%2Fpanic%2Fpanic_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpanic%2Fpanic_info.rs?ref=f738669b636eae466fef00f62af5d393169c676d", "patch": "@@ -136,6 +136,10 @@ impl<'a> PanicInfo<'a> {\n     /// This is true for most kinds of panics with the exception of panics\n     /// caused by trying to unwind out of a `Drop` implementation or a function\n     /// whose ABI does not support unwinding.\n+    ///\n+    /// It is safe for a panic handler to unwind even when this function returns\n+    /// true, however this will simply cause the panic handler to be called\n+    /// again.\n     #[must_use]\n     #[unstable(feature = \"panic_can_unwind\", issue = \"92988\")]\n     pub fn can_unwind(&self) -> bool {"}]}