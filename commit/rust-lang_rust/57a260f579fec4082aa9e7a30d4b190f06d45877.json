{"sha": "57a260f579fec4082aa9e7a30d4b190f06d45877", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3YTI2MGY1NzlmZWM0MDgyYWE5ZTdhMzBkNGIxOTBmMDZkNDU4Nzc=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-07T21:54:58Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-09T22:42:20Z"}, "message": "Properly reacto to keywords", "tree": {"sha": "cfb13fc5d355c72648f804f5727c7723b69d52bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfb13fc5d355c72648f804f5727c7723b69d52bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57a260f579fec4082aa9e7a30d4b190f06d45877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57a260f579fec4082aa9e7a30d4b190f06d45877", "html_url": "https://github.com/rust-lang/rust/commit/57a260f579fec4082aa9e7a30d4b190f06d45877", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57a260f579fec4082aa9e7a30d4b190f06d45877/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc43abcde87ed4a834f3b56a96ef165d8e4f0d86", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc43abcde87ed4a834f3b56a96ef165d8e4f0d86", "html_url": "https://github.com/rust-lang/rust/commit/cc43abcde87ed4a834f3b56a96ef165d8e4f0d86"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "6394189f00c1904495cca004f57d6adbf32f7a2d", "filename": "crates/ide/src/completion/complete_attribute.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs?ref=57a260f579fec4082aa9e7a30d4b190f06d45877", "patch": "@@ -13,6 +13,10 @@ use crate::completion::{\n };\n \n pub(super) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n+    if ctx.mod_is_prev {\n+        return None;\n+    }\n+\n     let attribute = ctx.attribute_under_caret.as_ref()?;\n     match (attribute.path(), attribute.token_tree()) {\n         (Some(path), Some(token_tree)) if path.to_string() == \"derive\" => {"}, {"sha": "5d41d0f69b1cd58210f763fac43075c22a56c2e9", "filename": "crates/ide/src/completion/complete_mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_mod.rs?ref=57a260f579fec4082aa9e7a30d4b190f06d45877", "patch": "@@ -9,6 +9,12 @@ use super::{completion_context::CompletionContext, completion_item::Completions}\n \n /// Complete mod declaration, i.e. `mod <|> ;`\n pub(super) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n+    let _p = profile::span(\"completion::complete_mod\");\n+\n+    if !ctx.mod_is_prev {\n+        return None;\n+    }\n+\n     let current_module = ctx.scope.module()?;\n \n     let module_definition_file =\n@@ -63,7 +69,7 @@ pub(super) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Op\n         .collect::<Vec<_>>();\n     dbg!(mod_declaration_candidates);\n \n-    // TODO kb exlude existing children from the candidates\n+    // TODO kb actually add the results\n \n     Some(())\n }"}, {"sha": "351461351767bbeecb1eace55b64924b58c8c47a", "filename": "crates/ide/src/completion/complete_qualified_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs?ref=57a260f579fec4082aa9e7a30d4b190f06d45877", "patch": "@@ -13,7 +13,7 @@ pub(super) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n         None => return,\n     };\n \n-    if ctx.attribute_under_caret.is_some() {\n+    if ctx.attribute_under_caret.is_some() || ctx.mod_is_prev {\n         return;\n     }\n "}, {"sha": "9f2dc16ab9e9b46d4400bbcf68673def285db191", "filename": "crates/ide/src/completion/complete_unqualified_path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=57a260f579fec4082aa9e7a30d4b190f06d45877", "patch": "@@ -13,6 +13,7 @@ pub(super) fn complete_unqualified_path(acc: &mut Completions, ctx: &CompletionC\n     if ctx.record_lit_syntax.is_some()\n         || ctx.record_pat_syntax.is_some()\n         || ctx.attribute_under_caret.is_some()\n+        || ctx.mod_is_prev\n     {\n         return;\n     }"}, {"sha": "d289aac2738956505ea47460d15ab65ccd785105", "filename": "crates/ide/src/completion/completion_context.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=57a260f579fec4082aa9e7a30d4b190f06d45877", "patch": "@@ -19,7 +19,7 @@ use crate::{\n             has_bind_pat_parent, has_block_expr_parent, has_field_list_parent,\n             has_impl_as_prev_sibling, has_impl_parent, has_item_list_or_source_file_parent,\n             has_ref_parent, has_trait_as_prev_sibling, has_trait_parent, if_is_prev,\n-            is_in_loop_body, is_match_arm, unsafe_is_prev,\n+            is_in_loop_body, is_match_arm, mod_is_prev, unsafe_is_prev,\n         },\n         CompletionConfig,\n     },\n@@ -77,6 +77,7 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) is_path_type: bool,\n     pub(super) has_type_args: bool,\n     pub(super) attribute_under_caret: Option<ast::Attr>,\n+    pub(super) mod_is_prev: bool,\n     pub(super) unsafe_is_prev: bool,\n     pub(super) if_is_prev: bool,\n     pub(super) block_expr_parent: bool,\n@@ -152,6 +153,7 @@ impl<'a> CompletionContext<'a> {\n             has_type_args: false,\n             dot_receiver_is_ambiguous_float_literal: false,\n             attribute_under_caret: None,\n+            mod_is_prev: false,\n             unsafe_is_prev: false,\n             in_loop_body: false,\n             ref_pat_parent: false,\n@@ -238,7 +240,8 @@ impl<'a> CompletionContext<'a> {\n         self.trait_as_prev_sibling = has_trait_as_prev_sibling(syntax_element.clone());\n         self.is_match_arm = is_match_arm(syntax_element.clone());\n         self.has_item_list_or_source_file_parent =\n-            has_item_list_or_source_file_parent(syntax_element);\n+            has_item_list_or_source_file_parent(syntax_element.clone());\n+        self.mod_is_prev = mod_is_prev(syntax_element);\n     }\n \n     fn fill("}, {"sha": "bc4ce4d6f41ce3360eda41e026df637aaa236836", "filename": "crates/ide/src/completion/patterns.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57a260f579fec4082aa9e7a30d4b190f06d45877/crates%2Fide%2Fsrc%2Fcompletion%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fpatterns.rs?ref=57a260f579fec4082aa9e7a30d4b190f06d45877", "patch": "@@ -115,6 +115,16 @@ pub(crate) fn if_is_prev(element: SyntaxElement) -> bool {\n         .filter(|it| it.kind() == IF_KW)\n         .is_some()\n }\n+\n+// TODO kb generify?\n+pub(crate) fn mod_is_prev(element: SyntaxElement) -> bool {\n+    element\n+        .into_token()\n+        .and_then(|it| previous_non_trivia_token(it))\n+        .filter(|it| it.kind() == MOD_KW)\n+        .is_some()\n+}\n+\n #[test]\n fn test_if_is_prev() {\n     check_pattern_is_applicable(r\"if l<|>\", if_is_prev);"}]}