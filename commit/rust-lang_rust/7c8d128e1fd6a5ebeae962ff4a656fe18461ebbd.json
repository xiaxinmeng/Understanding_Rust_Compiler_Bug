{"sha": "7c8d128e1fd6a5ebeae962ff4a656fe18461ebbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOGQxMjhlMWZkNmE1ZWJlYWU5NjJmZjRhNjU2ZmUxODQ2MWViYmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-08T09:05:53Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-08T09:06:16Z"}, "message": "bench: Add shootout-spectralnorm", "tree": {"sha": "b582aad4149b0ad80535ed7294c4409b89be65bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b582aad4149b0ad80535ed7294c4409b89be65bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c8d128e1fd6a5ebeae962ff4a656fe18461ebbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c8d128e1fd6a5ebeae962ff4a656fe18461ebbd", "html_url": "https://github.com/rust-lang/rust/commit/7c8d128e1fd6a5ebeae962ff4a656fe18461ebbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c8d128e1fd6a5ebeae962ff4a656fe18461ebbd/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "708f7b927c0c98d60bf1c8c55eefd09c9da56239", "url": "https://api.github.com/repos/rust-lang/rust/commits/708f7b927c0c98d60bf1c8c55eefd09c9da56239", "html_url": "https://github.com/rust-lang/rust/commit/708f7b927c0c98d60bf1c8c55eefd09c9da56239"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "44f550968e1765097d381a464a21a809c54c6b6b", "filename": "src/test/bench/shootout-spectralnorm.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/7c8d128e1fd6a5ebeae962ff4a656fe18461ebbd/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c8d128e1fd6a5ebeae962ff4a656fe18461ebbd/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs?ref=7c8d128e1fd6a5ebeae962ff4a656fe18461ebbd", "patch": "@@ -0,0 +1,70 @@\n+// Based on spectalnorm.gcc by Sebastien Loisel\n+\n+use std;\n+\n+fn eval_A(i: uint, j: uint) -> float {\n+    1.0/(((i+j)*(i+j+1u)/2u+i+1u) as float)\n+}\n+\n+fn eval_A_times_u(u: [const float], Au: [mutable float]) {\n+    let N = vec::len(u);\n+    let i = 0u;\n+    while i < N {\n+        Au[i] = 0.0;\n+        let j = 0u;\n+        while j < N {\n+            Au[i] += eval_A(i, j) * u[j];\n+            j += 1u;\n+        }\n+        i += 1u;\n+    }\n+}\n+\n+fn eval_At_times_u(u: [const float], Au: [mutable float]) {\n+    let N = vec::len(u);\n+    let i = 0u;\n+    while i < N {\n+        Au[i] = 0.0;\n+        let j = 0u;\n+        while j < N {\n+            Au[i] += eval_A(j, i) * u[j];\n+            j += 1u;\n+        }\n+        i += 1u;\n+    }\n+}\n+\n+fn eval_AtA_times_u(u: [const float], AtAu: [mutable float]) {\n+    let v = vec::init_elt_mut(vec::len(u), 0.0);\n+    eval_A_times_u(u, v);\n+    eval_At_times_u(v, AtAu);\n+}\n+\n+fn main(args: [str]) {\n+\n+    let N = if vec::len(args) == 2u {\n+        uint::from_str(args[1])\n+    } else {\n+        1000u\n+    };\n+\n+    let u = vec::init_elt_mut(N, 1.0);\n+    let v = vec::init_elt_mut(N, 0.0);\n+    let i = 0u;\n+    while i < 10u {\n+        eval_AtA_times_u(u, v);\n+        eval_AtA_times_u(v, u);\n+        i += 1u;\n+    }\n+\n+    let vBv = 0.0;\n+    let vv = 0.0;\n+    let i = 0u;\n+    while i < N {\n+        vBv += u[i] * v[i];\n+        vv += v[i] * v[i];\n+        i += 1u;\n+    }\n+\n+    std::io::println(#fmt(\"%0.9f\\n\", float::sqrt(vBv / vv)));\n+}"}]}