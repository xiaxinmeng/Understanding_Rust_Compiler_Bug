{"sha": "f59c71eb8ed808347c1e4245b842d673c75daeb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1OWM3MWViOGVkODA4MzQ3YzFlNDI0NWI4NDJkNjczYzc1ZGFlYjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-14T15:58:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-14T15:58:33Z"}, "message": "Auto merge of #60787 - alexcrichton:error-type-id-destabilize-master, r=pietroalbini\n\nDestabilize the `Error::type_id` function\n\nThis commit destabilizes the `Error::type_id` function in the standard library.\nThis does so by effectively reverting #58048, restoring the `#[unstable]`\nattribute. The security mailing list has recently been notified of a\nvulnerability relating to the stabilization of this function. First stabilized\nin Rust 1.34.0, a stable function here allows users to implement a custom\nreturn value for this function:\n\n    struct MyType;\n\n    impl Error for MyType {\n\tfn type_id(&self) -> TypeId {\n\t    // Enable safe casting to `String` by accident.\n\t    TypeId::of::<String>()\n\t}\n    }\n\nThis, when combined with the `Error::downcast` family of functions, allows\nsafely casting a type to any other type, clearly a memory safety issue! A\nformal announcement has been made to the [security mailing list](https://groups.google.com/forum/#!topic/rustlang-security-announcements/aZabeCMUv70) as well as [the blog](https://blog.rust-lang.org/2019/05/13/Security-advisory.html)\n\nThis commit simply destabilizes the `Error::type_id` which, although breaking\nfor users since Rust 1.34.0, is hoped to have little impact and has been deemed\nsufficient to mitigate this issue for the stable channel. The long-term fate of\nthe `Error::type_id` API will be discussed at #60784.", "tree": {"sha": "c0aca59bab1924d08e5161737d5d1b471f6722c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0aca59bab1924d08e5161737d5d1b471f6722c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f59c71eb8ed808347c1e4245b842d673c75daeb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f59c71eb8ed808347c1e4245b842d673c75daeb6", "html_url": "https://github.com/rust-lang/rust/commit/f59c71eb8ed808347c1e4245b842d673c75daeb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f59c71eb8ed808347c1e4245b842d673c75daeb6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80e7cde2238e837a9d6a240af9a3253f469bb2cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/80e7cde2238e837a9d6a240af9a3253f469bb2cf", "html_url": "https://github.com/rust-lang/rust/commit/80e7cde2238e837a9d6a240af9a3253f469bb2cf"}, {"sha": "3db667a81944c14f0933522560822fc20809c63f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3db667a81944c14f0933522560822fc20809c63f", "html_url": "https://github.com/rust-lang/rust/commit/3db667a81944c14f0933522560822fc20809c63f"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "48bd13105bbea92a5b431359095b3863c908cbb5", "filename": "RELEASES.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f59c71eb8ed808347c1e4245b842d673c75daeb6/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/f59c71eb8ed808347c1e4245b842d673c75daeb6/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=f59c71eb8ed808347c1e4245b842d673c75daeb6", "patch": "@@ -1,3 +1,11 @@\n+Version 1.34.2 (2019-05-14)\n+===========================\n+\n+* [Destabilize the `Error::type_id` function due to a security\n+   vulnerability][60785]\n+\n+[60785]: https://github.com/rust-lang/rust/pull/60785\n+\n Version 1.34.1 (2019-04-25)\n ===========================\n "}, {"sha": "7cb830e751a77653295b4bcb0f6f6e8d9bb8d48c", "filename": "src/libstd/error.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f59c71eb8ed808347c1e4245b842d673c75daeb6/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f59c71eb8ed808347c1e4245b842d673c75daeb6/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=f59c71eb8ed808347c1e4245b842d673c75daeb6", "patch": "@@ -197,7 +197,10 @@ pub trait Error: Debug + Display {\n     fn source(&self) -> Option<&(dyn Error + 'static)> { None }\n \n     /// Gets the `TypeId` of `self`\n-    #[stable(feature = \"error_type_id\", since = \"1.34.0\")]\n+    #[doc(hidden)]\n+    #[unstable(feature = \"error_type_id\",\n+               reason = \"this is memory unsafe to override in user code\",\n+               issue = \"60784\")]\n     fn type_id(&self) -> TypeId where Self: 'static {\n         TypeId::of::<Self>()\n     }"}]}