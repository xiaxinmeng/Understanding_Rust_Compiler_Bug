{"sha": "b9ed51c8f179da643bc7186c35d1beb3c5239723", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZWQ1MWM4ZjE3OWRhNjQzYmM3MTg2YzM1ZDFiZWIzYzUyMzk3MjM=", "commit": {"author": {"name": "Josh Driver", "email": "keeperofdakeys@gmail.com", "date": "2016-11-17T11:36:36Z"}, "committer": {"name": "Josh Driver", "email": "keeperofdakeys@gmail.com", "date": "2016-11-17T11:36:36Z"}, "message": "Show a better error when using --test with #[proc_macro_derive]", "tree": {"sha": "3ceb45e92f48685a0a16a337ecc07e619173c144", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ceb45e92f48685a0a16a337ecc07e619173c144"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9ed51c8f179da643bc7186c35d1beb3c5239723", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ed51c8f179da643bc7186c35d1beb3c5239723", "html_url": "https://github.com/rust-lang/rust/commit/b9ed51c8f179da643bc7186c35d1beb3c5239723", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9ed51c8f179da643bc7186c35d1beb3c5239723/comments", "author": {"login": "keeperofdakeys", "id": 141626, "node_id": "MDQ6VXNlcjE0MTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/141626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keeperofdakeys", "html_url": "https://github.com/keeperofdakeys", "followers_url": "https://api.github.com/users/keeperofdakeys/followers", "following_url": "https://api.github.com/users/keeperofdakeys/following{/other_user}", "gists_url": "https://api.github.com/users/keeperofdakeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/keeperofdakeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keeperofdakeys/subscriptions", "organizations_url": "https://api.github.com/users/keeperofdakeys/orgs", "repos_url": "https://api.github.com/users/keeperofdakeys/repos", "events_url": "https://api.github.com/users/keeperofdakeys/events{/privacy}", "received_events_url": "https://api.github.com/users/keeperofdakeys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "keeperofdakeys", "id": 141626, "node_id": "MDQ6VXNlcjE0MTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/141626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keeperofdakeys", "html_url": "https://github.com/keeperofdakeys", "followers_url": "https://api.github.com/users/keeperofdakeys/followers", "following_url": "https://api.github.com/users/keeperofdakeys/following{/other_user}", "gists_url": "https://api.github.com/users/keeperofdakeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/keeperofdakeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keeperofdakeys/subscriptions", "organizations_url": "https://api.github.com/users/keeperofdakeys/orgs", "repos_url": "https://api.github.com/users/keeperofdakeys/repos", "events_url": "https://api.github.com/users/keeperofdakeys/events{/privacy}", "received_events_url": "https://api.github.com/users/keeperofdakeys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43006fcea0066a935b657fff9ccef56983cbf56c", "url": "https://api.github.com/repos/rust-lang/rust/commits/43006fcea0066a935b657fff9ccef56983cbf56c", "html_url": "https://github.com/rust-lang/rust/commit/43006fcea0066a935b657fff9ccef56983cbf56c"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "97dff3396c539bd8d0a784190cc3b0a01208e17c", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9ed51c8f179da643bc7186c35d1beb3c5239723/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ed51c8f179da643bc7186c35d1beb3c5239723/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=b9ed51c8f179da643bc7186c35d1beb3c5239723", "patch": "@@ -709,10 +709,12 @@ pub fn phase_2_configure_and_expand<'a, F>(sess: &Session,\n             let crate_types = sess.crate_types.borrow();\n             let num_crate_types = crate_types.len();\n             let is_proc_macro_crate = crate_types.contains(&config::CrateTypeProcMacro);\n+            let is_test_crate = sess.opts.test;\n             syntax_ext::proc_macro_registrar::modify(&sess.parse_sess,\n                                                      &mut resolver,\n                                                      krate,\n                                                      is_proc_macro_crate,\n+                                                     is_test_crate,\n                                                      num_crate_types,\n                                                      sess.diagnostic(),\n                                                      &sess.features.borrow())"}, {"sha": "36fd6408b4f316287d8db0d2ff27b814b57372e1", "filename": "src/libsyntax_ext/proc_macro_registrar.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b9ed51c8f179da643bc7186c35d1beb3c5239723/src%2Flibsyntax_ext%2Fproc_macro_registrar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ed51c8f179da643bc7186c35d1beb3c5239723/src%2Flibsyntax_ext%2Fproc_macro_registrar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_registrar.rs?ref=b9ed51c8f179da643bc7186c35d1beb3c5239723", "patch": "@@ -38,12 +38,14 @@ struct CollectCustomDerives<'a> {\n     in_root: bool,\n     handler: &'a errors::Handler,\n     is_proc_macro_crate: bool,\n+    is_test_crate: bool,\n }\n \n pub fn modify(sess: &ParseSess,\n               resolver: &mut ::syntax::ext::base::Resolver,\n               mut krate: ast::Crate,\n               is_proc_macro_crate: bool,\n+              is_test_crate: bool,\n               num_crate_types: usize,\n               handler: &errors::Handler,\n               features: &Features) -> ast::Crate {\n@@ -55,6 +57,7 @@ pub fn modify(sess: &ParseSess,\n         in_root: true,\n         handler: handler,\n         is_proc_macro_crate: is_proc_macro_crate,\n+        is_test_crate: is_test_crate,\n     };\n     visit::walk_crate(&mut collect, &krate);\n \n@@ -137,6 +140,12 @@ impl<'a> Visitor for CollectCustomDerives<'a> {\n                                              attributes found\");\n         }\n \n+        if self.is_test_crate {\n+            self.handler.span_err(attr.span(),\n+                                  \"`--test` cannot be used with proc-macro crates\");\n+            return;\n+        }\n+\n         if !self.is_proc_macro_crate {\n             self.handler.span_err(attr.span(),\n                                   \"the `#[proc_macro_derive]` attribute is \\"}]}