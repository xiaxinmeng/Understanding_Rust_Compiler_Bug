{"sha": "17a627fe876ded260d5563751d8d1530275e1c55", "node_id": "C_kwDOAAsO6NoAKDE3YTYyN2ZlODc2ZGVkMjYwZDU1NjM3NTFkOGQxNTMwMjc1ZTFjNTU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-11T13:49:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-11T13:49:52Z"}, "message": "Auto merge of #101682 - compiler-errors:rpitit-encode, r=fee1-dead\n\nOnly encode return-position `impl Trait` in trait when parent function has a default body\n\nSemi-blocked on #101679, because I can't currently write a test for when we _should_ encode the type of the return-position `impl Trait` in trait, which is when a trait has a default function body, like so:\n\n```rust\ntrait Foo {\n  fn bar() -> impl Sized { }\n}\n```\n\nThough this can land even without #101679, since it does prevent ICEs from occuring any time you use `#![feature(return_position_impl_trait_in_trait)]` in a library, which is kind annoying.", "tree": {"sha": "4090e2f9531926312f3b48e3098e989dd20610ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4090e2f9531926312f3b48e3098e989dd20610ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17a627fe876ded260d5563751d8d1530275e1c55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17a627fe876ded260d5563751d8d1530275e1c55", "html_url": "https://github.com/rust-lang/rust/commit/17a627fe876ded260d5563751d8d1530275e1c55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17a627fe876ded260d5563751d8d1530275e1c55/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f0c4a6c5c36f1f8f433a12e10a29918f3d40a31", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0c4a6c5c36f1f8f433a12e10a29918f3d40a31", "html_url": "https://github.com/rust-lang/rust/commit/6f0c4a6c5c36f1f8f433a12e10a29918f3d40a31"}, {"sha": "1335da9d485879a99c3ba24827781c6ee6705cc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1335da9d485879a99c3ba24827781c6ee6705cc6", "html_url": "https://github.com/rust-lang/rust/commit/1335da9d485879a99c3ba24827781c6ee6705cc6"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "5a60ea794edd809fb24f37561a53c40ed18e6dc2", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/17a627fe876ded260d5563751d8d1530275e1c55/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17a627fe876ded260d5563751d8d1530275e1c55/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=17a627fe876ded260d5563751d8d1530275e1c55", "patch": "@@ -1036,7 +1036,6 @@ fn should_encode_type(tcx: TyCtxt<'_>, def_id: LocalDefId, def_kind: DefKind) ->\n         | DefKind::Static(..)\n         | DefKind::TyAlias\n         | DefKind::OpaqueTy\n-        | DefKind::ImplTraitPlaceholder\n         | DefKind::ForeignTy\n         | DefKind::Impl\n         | DefKind::AssocFn\n@@ -1047,6 +1046,19 @@ fn should_encode_type(tcx: TyCtxt<'_>, def_id: LocalDefId, def_kind: DefKind) ->\n         | DefKind::AnonConst\n         | DefKind::InlineConst => true,\n \n+        DefKind::ImplTraitPlaceholder => {\n+            let parent_def_id = tcx.impl_trait_in_trait_parent(def_id.to_def_id());\n+            let assoc_item = tcx.associated_item(parent_def_id);\n+            match assoc_item.container {\n+                // Always encode an RPIT in an impl fn, since it always has a body\n+                ty::AssocItemContainer::ImplContainer => true,\n+                ty::AssocItemContainer::TraitContainer => {\n+                    // Encode an RPIT for a trait only if the trait has a default body\n+                    assoc_item.defaultness(tcx).has_value()\n+                }\n+            }\n+        }\n+\n         DefKind::AssocTy => {\n             let assoc_item = tcx.associated_item(def_id);\n             match assoc_item.container {"}, {"sha": "efb9f6498ba6d9a5582d585f13a31f0ad3fcd808", "filename": "src/test/ui/impl-trait/in-trait/encode.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/17a627fe876ded260d5563751d8d1530275e1c55/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17a627fe876ded260d5563751d8d1530275e1c55/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fencode.rs?ref=17a627fe876ded260d5563751d8d1530275e1c55", "patch": "@@ -0,0 +1,9 @@\n+// build-pass\n+// compile-flags: --crate-type=lib\n+\n+#![feature(return_position_impl_trait_in_trait)]\n+#![allow(incomplete_features)]\n+\n+trait Foo {\n+    fn bar() -> impl Sized;\n+}"}]}