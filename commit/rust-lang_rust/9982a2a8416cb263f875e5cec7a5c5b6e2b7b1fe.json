{"sha": "9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ODJhMmE4NDE2Y2IyNjNmODc1ZTVjZWM3YTVjNWI2ZTJiN2IxZmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T05:06:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T05:52:41Z"}, "message": "rustc: Don't add duplicate entries to exp_map", "tree": {"sha": "7fdbe4c99c1dcac99a88d13426e65e0cb95d5184", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fdbe4c99c1dcac99a88d13426e65e0cb95d5184"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe", "html_url": "https://github.com/rust-lang/rust/commit/9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb7022cfc20b89947ff3fa96d4617f9fe64d2f3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb7022cfc20b89947ff3fa96d4617f9fe64d2f3e", "html_url": "https://github.com/rust-lang/rust/commit/cb7022cfc20b89947ff3fa96d4617f9fe64d2f3e"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "0a070f75b20a7867701c384abcc8a7a8bd6414e6", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe", "patch": "@@ -2021,7 +2021,13 @@ fn check_exports(e: @env) {\n         alt def {\n           some(def) {\n             alt e.exp_map.find(path) {\n-              some(v) { *v += [def]; }\n+              some(v) {\n+                // If there are multiple reexports of the same def\n+                // using the same path, then we only need one copy\n+                if !vec::contains(*v, def) {\n+                    *v += [def];\n+                }\n+              }\n               none { e.exp_map.insert(path, @mutable [def]); }\n             }\n           }"}, {"sha": "b397767b03bf21282c68d2c7c6f82f9f43f0db60", "filename": "src/rustdoc/reexport_pass.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe/src%2Frustdoc%2Freexport_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe/src%2Frustdoc%2Freexport_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Freexport_pass.rs?ref=9982a2a8416cb263f875e5cec7a5c5b6e2b7b1fe", "patch": "@@ -144,7 +144,6 @@ fn build_reexport_path_map(srv: astsrv::srv, -def_map: def_map) -> path_map {\n             let name = option::get(vec::last(path));\n \n             let reexportdocs = [];\n-\n             for def in *defs {\n                 let def_id = ast_util::def_id_of_def(def);\n                 alt def_map.find(def_id) {\n@@ -337,6 +336,18 @@ fn should_reexport_in_topmod() {\n     assert doc.topmod.enums()[0].name() == \"option\";\n }\n \n+#[test]\n+fn should_not_reexport_multiple_times() {\n+    let source = \"import option = option::t; \\\n+                  export option; \\\n+                  export option; \\\n+                  mod option { \\\n+                  enum t { none, some } \\\n+                  }\";\n+    let doc = test::mk_doc(source);\n+    assert vec::len(doc.topmod.enums()) == 1u;\n+}\n+\n #[cfg(test)]\n mod test {\n     fn mk_doc(source: str) -> doc::cratedoc {"}]}