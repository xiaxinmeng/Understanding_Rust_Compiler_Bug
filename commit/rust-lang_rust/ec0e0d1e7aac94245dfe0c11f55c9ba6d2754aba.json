{"sha": "ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMGUwZDFlN2FhYzk0MjQ1ZGZlMGMxMWY1NWM5YmE2ZDI3NTRhYmE=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-05-19T02:36:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-19T02:36:04Z"}, "message": "Rollup merge of #85274 - luqmana:linker-is-gnu-gc-sections, r=petrochenkov\n\nOnly pass --[no-]gc-sections if linker is GNU ld.\n\nFixes a regression from #84468 where linking now fails with solaris linkers. LinkerFlavor::Gcc does not always mean GNU ld specifically. And in the case of at least the solaris ld in illumos, that flag is unrecognized and will cause the linking step to fail.\n\nEven though removing the `is_like_solaris` branch from `gc_sections` in #84468 made sense as `-z ignore/record` are more analogous to the `--[no-]-as-needed` flags, it inadvertently caused solaris linkers to be passed the `--gc-sections` flag. So let's just change it to be more explicit about when we pass those flags.", "tree": {"sha": "366aa54a500ddb17d691d2e558ec215411f2e307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/366aa54a500ddb17d691d2e558ec215411f2e307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgpHmWCRBK7hj4Ov3rIwAAuEIIAERKam1jv7LisPy0r/72eKmt\nKzH/qiq/tqk5XUk0ol0ZHuQqeFt8NQEOyC/tvUQj5p+4wn2o9owvGgpfCIYuAmWw\npmBNUd0ihsIC8CFT+LeM08SGuRcS9Ry999NBkKpF7Ry0Sj6kYqIliZ6rWWEFnIEp\nuYGCNg3xTzQIEwncFGid6eH87bBejevHDKIshCyU0VhSETclc2ZkT584ZJx7bC8p\ny2V4Xp6EejalKTrJC/yzMuJkg+WVZ25MSa/LgyhItG/QQMYTAJMtxayJvYYXJOIl\nJnqHG6nUKU0CpCi0bJHTx8J4xwGUHShNv3a53iagmZZJo1PJl5Fg80p/M1oYfHE=\n=0MGv\n-----END PGP SIGNATURE-----\n", "payload": "tree 366aa54a500ddb17d691d2e558ec215411f2e307\nparent 37ecede50758eaf42372d7ec4b653ea06d8ee160\nparent ac5fd90d822304a6b6e059d84a3c1e4103e24200\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1621391764 -0400\ncommitter GitHub <noreply@github.com> 1621391764 -0400\n\nRollup merge of #85274 - luqmana:linker-is-gnu-gc-sections, r=petrochenkov\n\nOnly pass --[no-]gc-sections if linker is GNU ld.\n\nFixes a regression from #84468 where linking now fails with solaris linkers. LinkerFlavor::Gcc does not always mean GNU ld specifically. And in the case of at least the solaris ld in illumos, that flag is unrecognized and will cause the linking step to fail.\n\nEven though removing the `is_like_solaris` branch from `gc_sections` in #84468 made sense as `-z ignore/record` are more analogous to the `--[no-]-as-needed` flags, it inadvertently caused solaris linkers to be passed the `--gc-sections` flag. So let's just change it to be more explicit about when we pass those flags.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba", "html_url": "https://github.com/rust-lang/rust/commit/ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37ecede50758eaf42372d7ec4b653ea06d8ee160", "url": "https://api.github.com/repos/rust-lang/rust/commits/37ecede50758eaf42372d7ec4b653ea06d8ee160", "html_url": "https://github.com/rust-lang/rust/commit/37ecede50758eaf42372d7ec4b653ea06d8ee160"}, {"sha": "ac5fd90d822304a6b6e059d84a3c1e4103e24200", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac5fd90d822304a6b6e059d84a3c1e4103e24200", "html_url": "https://github.com/rust-lang/rust/commit/ac5fd90d822304a6b6e059d84a3c1e4103e24200"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "4dc9a3f5e41be181199eb2e5b74b762705d557f8", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba", "patch": "@@ -281,8 +281,11 @@ impl<'a> Linker for GccLinker<'a> {\n                 }\n             }\n             LinkOutputKind::DynamicPicExe => {\n-                // `-pie` works for both gcc wrapper and ld.\n-                self.cmd.arg(\"-pie\");\n+                // noop on windows w/ gcc & ld, error w/ lld\n+                if !self.sess.target.is_like_windows {\n+                    // `-pie` works for both gcc wrapper and ld.\n+                    self.cmd.arg(\"-pie\");\n+                }\n             }\n             LinkOutputKind::StaticNoPicExe => {\n                 // `-static` works for both gcc wrapper and ld.\n@@ -347,7 +350,7 @@ impl<'a> Linker for GccLinker<'a> {\n                 // has -needed-l{} / -needed_library {}\n                 // but we have no way to detect that here.\n                 self.sess.warn(\"`as-needed` modifier not implemented yet for ld64\");\n-            } else if self.sess.target.linker_is_gnu {\n+            } else if self.sess.target.linker_is_gnu && !self.sess.target.is_like_windows {\n                 self.linker_arg(\"--no-as-needed\");\n             } else {\n                 self.sess.warn(\"`as-needed` modifier not supported for current linker\");\n@@ -358,7 +361,7 @@ impl<'a> Linker for GccLinker<'a> {\n         if !as_needed {\n             if self.sess.target.is_like_osx {\n                 // See above FIXME comment\n-            } else if self.sess.target.linker_is_gnu {\n+            } else if self.sess.target.linker_is_gnu && !self.sess.target.is_like_windows {\n                 self.linker_arg(\"--as-needed\");\n             }\n         }\n@@ -469,17 +472,15 @@ impl<'a> Linker for GccLinker<'a> {\n         // eliminate the metadata. If we're building an executable, however,\n         // --gc-sections drops the size of hello world from 1.8MB to 597K, a 67%\n         // reduction.\n-        } else if !keep_metadata {\n+        } else if self.sess.target.linker_is_gnu && !keep_metadata {\n             self.linker_arg(\"--gc-sections\");\n         }\n     }\n \n     fn no_gc_sections(&mut self) {\n         if self.sess.target.is_like_osx {\n             self.linker_arg(\"-no_dead_strip\");\n-        } else if self.sess.target.is_like_solaris {\n-            self.linker_arg(\"-zrecord\");\n-        } else {\n+        } else if self.sess.target.linker_is_gnu {\n             self.linker_arg(\"--no-gc-sections\");\n         }\n     }\n@@ -692,7 +693,7 @@ impl<'a> Linker for GccLinker<'a> {\n     }\n \n     fn add_as_needed(&mut self) {\n-        if self.sess.target.linker_is_gnu {\n+        if self.sess.target.linker_is_gnu && !self.sess.target.is_like_windows {\n             self.linker_arg(\"--as-needed\");\n         } else if self.sess.target.is_like_solaris {\n             // -z ignore is the Solaris equivalent to the GNU ld --as-needed option"}, {"sha": "5808391ee065d8fb8b823a9ba5539ec494e87899", "filename": "compiler/rustc_target/src/spec/windows_gnu_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs?ref=ec0e0d1e7aac94245dfe0c11f55c9ba6d2754aba", "patch": "@@ -66,6 +66,7 @@ pub fn opts() -> TargetOptions {\n         // FIXME(#13846) this should be enabled for windows\n         function_sections: false,\n         linker: Some(\"gcc\".to_string()),\n+        linker_is_gnu: true,\n         dynamic_linking: true,\n         executables: true,\n         dll_prefix: String::new(),"}]}