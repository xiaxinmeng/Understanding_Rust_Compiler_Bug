{"sha": "6d102173826eea9aea770013132e4046784fd37b", "node_id": "C_kwDOAAsO6NoAKDZkMTAyMTczODI2ZWVhOWFlYTc3MDAxMzEzMmU0MDQ2Nzg0ZmQzN2I", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-05-29T09:43:01Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-05-30T11:44:56Z"}, "message": "--bless", "tree": {"sha": "e2aa5a32cfa5c857d90cbe4a2b11d28ea9008fb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2aa5a32cfa5c857d90cbe4a2b11d28ea9008fb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d102173826eea9aea770013132e4046784fd37b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d102173826eea9aea770013132e4046784fd37b", "html_url": "https://github.com/rust-lang/rust/commit/6d102173826eea9aea770013132e4046784fd37b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d102173826eea9aea770013132e4046784fd37b/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cca47ea1ad1e966ad8d16f3100a83fe07336916", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cca47ea1ad1e966ad8d16f3100a83fe07336916", "html_url": "https://github.com/rust-lang/rust/commit/0cca47ea1ad1e966ad8d16f3100a83fe07336916"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "a48cd1abef15c24eb2a564117e02ae7fb6a70208", "filename": "src/test/ui/const-ptr/forbidden_slices.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/6d102173826eea9aea770013132e4046784fd37b/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6d102173826eea9aea770013132e4046784fd37b/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.stderr?ref=6d102173826eea9aea770013132e4046784fd37b", "patch": "@@ -7,10 +7,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: null pointer is not a valid pointer\n    |         inside `std::slice::from_raw_parts::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:15:34\n+  ::: $DIR/forbidden_slices.rs:16:34\n    |\n LL | pub static S0: &[u32] = unsafe { from_raw_parts(ptr::null(), 0) };\n-   |                                  ------------------------------ inside `S0` at $DIR/forbidden_slices.rs:15:34\n+   |                                  ------------------------------ inside `S0` at $DIR/forbidden_slices.rs:16:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n@@ -21,10 +21,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: null pointer is not a valid pointer\n    |         inside `std::slice::from_raw_parts::<()>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:16:33\n+  ::: $DIR/forbidden_slices.rs:17:33\n    |\n LL | pub static S1: &[()] = unsafe { from_raw_parts(ptr::null(), 0) };\n-   |                                 ------------------------------ inside `S1` at $DIR/forbidden_slices.rs:16:33\n+   |                                 ------------------------------ inside `S1` at $DIR/forbidden_slices.rs:17:33\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n@@ -35,13 +35,13 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: alloc26 has size 4, so pointer to 8 bytes starting at offset 0 is out-of-bounds\n    |         inside `std::slice::from_raw_parts::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:19:34\n+  ::: $DIR/forbidden_slices.rs:20:34\n    |\n LL | pub static S2: &[u32] = unsafe { from_raw_parts(&D0, 2) };\n-   |                                  ---------------------- inside `S2` at $DIR/forbidden_slices.rs:19:34\n+   |                                  ---------------------- inside `S2` at $DIR/forbidden_slices.rs:20:34\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:22:1\n+  --> $DIR/forbidden_slices.rs:23:1\n    |\n LL | pub static S4: &[u8] = unsafe { from_raw_parts((&D1) as *const _ as _, 1) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>[0]: encountered uninitialized bytes\n@@ -52,7 +52,7 @@ LL | pub static S4: &[u8] = unsafe { from_raw_parts((&D1) as *const _ as _, 1) }\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:24:1\n+  --> $DIR/forbidden_slices.rs:25:1\n    |\n LL | pub static S5: &[u8] = unsafe { from_raw_parts((&D3) as *const _ as _, size_of::<&u32>()) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>: encountered a pointer, but expected plain (non-pointer) bytes\n@@ -63,7 +63,7 @@ LL | pub static S5: &[u8] = unsafe { from_raw_parts((&D3) as *const _ as _, size\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:26:1\n+  --> $DIR/forbidden_slices.rs:27:1\n    |\n LL | pub static S6: &[bool] = unsafe { from_raw_parts((&D0) as *const _ as _, 4) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<deref>[0]: encountered 0x11, but expected a boolean\n@@ -74,7 +74,7 @@ LL | pub static S6: &[bool] = unsafe { from_raw_parts((&D0) as *const _ as _, 4)\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:29:1\n+  --> $DIR/forbidden_slices.rs:30:1\n    |\n LL | / pub static S7: &[u16] = unsafe {\n LL | |\n@@ -98,10 +98,10 @@ LL |         &*ptr::slice_from_raw_parts(data, len)\n    |         dereferencing pointer failed: alloc96 has size 8, so pointer to 8 bytes starting at offset 1 is out-of-bounds\n    |         inside `std::slice::from_raw_parts::<u64>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:40:5\n+  ::: $DIR/forbidden_slices.rs:41:5\n    |\n LL |     from_raw_parts(ptr, 1)\n-   |     ---------------------- inside `S8` at $DIR/forbidden_slices.rs:40:5\n+   |     ---------------------- inside `S8` at $DIR/forbidden_slices.rs:41:5\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -117,10 +117,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:43:34\n+  ::: $DIR/forbidden_slices.rs:44:34\n    |\n LL | pub static R0: &[u32] = unsafe { from_ptr_range(ptr::null()..ptr::null()) };\n-   |                                  ---------------------------------------- inside `R0` at $DIR/forbidden_slices.rs:43:34\n+   |                                  ---------------------------------------- inside `R0` at $DIR/forbidden_slices.rs:44:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -136,10 +136,10 @@ LL |         assert!(0 < pointee_size && pointee_size <= isize::MAX as usize);\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<()>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:44:33\n+  ::: $DIR/forbidden_slices.rs:45:33\n    |\n LL | pub static R1: &[()] = unsafe { from_ptr_range(ptr::null()..ptr::null()) };\n-   |                                 ---------------------------------------- inside `R1` at $DIR/forbidden_slices.rs:44:33\n+   |                                 ---------------------------------------- inside `R1` at $DIR/forbidden_slices.rs:45:33\n    |\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -155,13 +155,13 @@ LL |         unsafe { intrinsics::offset(self, count) }\n LL |         unsafe { self.offset(count as isize) }\n    |                  --------------------------- inside `ptr::const_ptr::<impl *const u32>::add` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:47:25\n+  ::: $DIR/forbidden_slices.rs:48:25\n    |\n LL |     from_ptr_range(ptr..ptr.add(2))\n-   |                         ---------- inside `R2` at $DIR/forbidden_slices.rs:47:25\n+   |                         ---------- inside `R2` at $DIR/forbidden_slices.rs:48:25\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:49:1\n+  --> $DIR/forbidden_slices.rs:50:1\n    |\n LL | / pub static R4: &[u8] = unsafe {\n LL | |\n@@ -176,7 +176,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:54:1\n+  --> $DIR/forbidden_slices.rs:55:1\n    |\n LL | / pub static R5: &[u8] = unsafe {\n LL | |\n@@ -191,7 +191,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:59:1\n+  --> $DIR/forbidden_slices.rs:60:1\n    |\n LL | / pub static R6: &[bool] = unsafe {\n LL | |\n@@ -206,7 +206,7 @@ LL | | };\n            }\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/forbidden_slices.rs:64:1\n+  --> $DIR/forbidden_slices.rs:65:1\n    |\n LL | / pub static R7: &[u16] = unsafe {\n LL | |\n@@ -232,10 +232,10 @@ LL |         unsafe { intrinsics::offset(self, count) }\n LL |         unsafe { self.offset(count as isize) }\n    |                  --------------------------- inside `ptr::const_ptr::<impl *const u64>::add` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:71:25\n+  ::: $DIR/forbidden_slices.rs:72:25\n    |\n LL |     from_ptr_range(ptr..ptr.add(1))\n-   |                         ---------- inside `R8` at $DIR/forbidden_slices.rs:71:25\n+   |                         ---------- inside `R8` at $DIR/forbidden_slices.rs:72:25\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -251,10 +251,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:76:34\n+  ::: $DIR/forbidden_slices.rs:77:34\n    |\n LL | pub static R9: &[u32] = unsafe { from_ptr_range(&D0..(&D0 as *const u32).add(1)) };\n-   |                                  ----------------------------------------------- inside `R9` at $DIR/forbidden_slices.rs:76:34\n+   |                                  ----------------------------------------------- inside `R9` at $DIR/forbidden_slices.rs:77:34\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n@@ -270,10 +270,10 @@ LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n    |                                          ------------------------------ inside `from_ptr_range::<u32>` at $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:77:35\n+  ::: $DIR/forbidden_slices.rs:78:35\n    |\n LL | pub static R10: &[u32] = unsafe { from_ptr_range(&D0..&D0) };\n-   |                                   ------------------------ inside `R10` at $DIR/forbidden_slices.rs:77:35\n+   |                                   ------------------------ inside `R10` at $DIR/forbidden_slices.rs:78:35\n \n error: aborting due to 18 previous errors\n "}]}