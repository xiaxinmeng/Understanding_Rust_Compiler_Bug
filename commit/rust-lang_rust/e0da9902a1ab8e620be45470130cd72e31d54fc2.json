{"sha": "e0da9902a1ab8e620be45470130cd72e31d54fc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZGE5OTAyYTFhYjhlNjIwYmU0NTQ3MDEzMGNkNzJlMzFkNTRmYzI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-02-14T15:44:53Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-14T16:04:18Z"}, "message": "Revert \"rustbuild: Pass `ccache` to build scripts\"\n\nThis reverts commit 64a8730e171367e4979cd9c25f0e0fdc2c157446.", "tree": {"sha": "8c5e904998498ba5c058f1676ce1194d6dde0d6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c5e904998498ba5c058f1676ce1194d6dde0d6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0da9902a1ab8e620be45470130cd72e31d54fc2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqEXgIACgkQ/vbIBR0O\nATx3zg//TU9w/1iUPy8KA6N5lrEzqI716OjsCtH3HqjnNtktOOTSrEag5lMPlKv7\n4nD87T0kKCvxq6ubHIHrsYHe3vzR4AQN0WDHYw2Lu/UlYKQERE+w2kqsJtdO0QxB\nXZA8mhlgU77jf7uEIhjjjiP+mxaIGVdIijCrZ9eq48y2JrQCsqsXqw2+wnrALSww\n6+dd16PKPQnRYrUVmezs3BiFLnfHaRAPxnMjKMDNAdpO/6tCrECf5ZimXvZ9Syz4\nnWUcnm/hXwXtIOfDOerCK4NKUbuzHzAHveYGZTgmp/qkHWgFDidkCN+7rNewd1jc\n8Lzmag0Ydljs8/u8kcdTvpvgE5KX88fm4ZrLzBR+R0kLbaLxE14r2P0d0+0D6GGZ\nWl26de2YLEQllwKioNY46x0DBVg5RbYMD3H5wCxYZNaYc9rHfYr7akBl5qiHSv6Z\nKCsiZj9kUuZ34PJqvTwd8KDxWIws0Oypci1UthmDzzanfhfkgvT8Ht7GLhSGB/vH\nmmS+jfrZ7vrDU8JKt4Q+BErCnsLvPtuoapDBR3oJ8EMwAdLMfqG7/jnDv2mEsHcw\nGqRVniE0i6qNgHlvq0ZNoyMtJ6jHq3dBERlB8dwxXcr71McsiePD7I3513jof7FV\nMuZUhMGvT5L1TWbPQI/Kseyw10GzF9l5Qf35qCNfVjdxpowpizc=\n=Lxl7\n-----END PGP SIGNATURE-----", "payload": "tree 8c5e904998498ba5c058f1676ce1194d6dde0d6f\nparent ec36e7e972e8036fe7bd428458462a2aacd40927\nauthor Alex Crichton <alex@alexcrichton.com> 1518623093 -0800\ncommitter kennytm <kennytm@gmail.com> 1518624258 +0800\n\nRevert \"rustbuild: Pass `ccache` to build scripts\"\n\nThis reverts commit 64a8730e171367e4979cd9c25f0e0fdc2c157446.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0da9902a1ab8e620be45470130cd72e31d54fc2", "html_url": "https://github.com/rust-lang/rust/commit/e0da9902a1ab8e620be45470130cd72e31d54fc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0da9902a1ab8e620be45470130cd72e31d54fc2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec36e7e972e8036fe7bd428458462a2aacd40927", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec36e7e972e8036fe7bd428458462a2aacd40927", "html_url": "https://github.com/rust-lang/rust/commit/ec36e7e972e8036fe7bd428458462a2aacd40927"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "03630dfbed3e035caa5d2529abb40903f19ed158", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e0da9902a1ab8e620be45470130cd72e31d54fc2/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0da9902a1ab8e620be45470130cd72e31d54fc2/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=e0da9902a1ab8e620be45470130cd72e31d54fc2", "patch": "@@ -600,25 +600,9 @@ impl<'a> Builder<'a> {\n         //\n         // FIXME: the guard against msvc shouldn't need to be here\n         if !target.contains(\"msvc\") {\n-            let ccache = self.config.ccache.as_ref();\n-            let ccacheify = |s: &Path| {\n-                let ccache = match ccache {\n-                    Some(ref s) => s,\n-                    None => return s.display().to_string(),\n-                };\n-                // FIXME: the cc-rs crate only recognizes the literal strings\n-                // `ccache` and `sccache` when doing caching compilations, so we\n-                // mirror that here. It should probably be fixed upstream to\n-                // accept a new env var or otherwise work with custom ccache\n-                // vars.\n-                match &ccache[..] {\n-                    \"ccache\" | \"sccache\" => format!(\"{} {}\", ccache, s.display()),\n-                    _ => s.display().to_string(),\n-                }\n-            };\n-            let cc = ccacheify(&self.cc(target));\n-            cargo.env(format!(\"CC_{}\", target), &cc)\n-                 .env(\"CC\", &cc);\n+            let cc = self.cc(target);\n+            cargo.env(format!(\"CC_{}\", target), cc)\n+                 .env(\"CC\", cc);\n \n             let cflags = self.cflags(target).join(\" \");\n             cargo.env(format!(\"CFLAGS_{}\", target), cflags.clone())\n@@ -633,9 +617,8 @@ impl<'a> Builder<'a> {\n             }\n \n             if let Ok(cxx) = self.cxx(target) {\n-                let cxx = ccacheify(&cxx);\n-                cargo.env(format!(\"CXX_{}\", target), &cxx)\n-                     .env(\"CXX\", &cxx)\n+                cargo.env(format!(\"CXX_{}\", target), cxx)\n+                     .env(\"CXX\", cxx)\n                      .env(format!(\"CXXFLAGS_{}\", target), cflags.clone())\n                      .env(\"CXXFLAGS\", cflags);\n             }"}]}