{"sha": "14df54989aecb437e9cf6f3e066553cfbc979e26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZGY1NDk4OWFlY2I0MzdlOWNmNmYzZTA2NjU1M2NmYmM5NzllMjY=", "commit": {"author": {"name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "date": "2017-06-22T10:01:22Z"}, "committer": {"name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "date": "2017-06-22T14:54:32Z"}, "message": "Ensure Guard types impl Display & Debug\n\nFixes #24372", "tree": {"sha": "02b3a31e709f869dd0701d4ba23c33b765d1b9fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02b3a31e709f869dd0701d4ba23c33b765d1b9fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14df54989aecb437e9cf6f3e066553cfbc979e26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14df54989aecb437e9cf6f3e066553cfbc979e26", "html_url": "https://github.com/rust-lang/rust/commit/14df54989aecb437e9cf6f3e066553cfbc979e26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14df54989aecb437e9cf6f3e066553cfbc979e26/comments", "author": {"login": "ChrisMacNaughton", "id": 429739, "node_id": "MDQ6VXNlcjQyOTczOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/429739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisMacNaughton", "html_url": "https://github.com/ChrisMacNaughton", "followers_url": "https://api.github.com/users/ChrisMacNaughton/followers", "following_url": "https://api.github.com/users/ChrisMacNaughton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisMacNaughton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisMacNaughton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisMacNaughton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisMacNaughton/orgs", "repos_url": "https://api.github.com/users/ChrisMacNaughton/repos", "events_url": "https://api.github.com/users/ChrisMacNaughton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisMacNaughton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisMacNaughton", "id": 429739, "node_id": "MDQ6VXNlcjQyOTczOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/429739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisMacNaughton", "html_url": "https://github.com/ChrisMacNaughton", "followers_url": "https://api.github.com/users/ChrisMacNaughton/followers", "following_url": "https://api.github.com/users/ChrisMacNaughton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisMacNaughton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisMacNaughton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisMacNaughton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisMacNaughton/orgs", "repos_url": "https://api.github.com/users/ChrisMacNaughton/repos", "events_url": "https://api.github.com/users/ChrisMacNaughton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisMacNaughton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efdf55d04817cba9a613197b41facae945320a12", "url": "https://api.github.com/repos/rust-lang/rust/commits/efdf55d04817cba9a613197b41facae945320a12", "html_url": "https://github.com/rust-lang/rust/commit/efdf55d04817cba9a613197b41facae945320a12"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "1eebf67ad04cb893a234804b59913255902dab9b", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/14df54989aecb437e9cf6f3e066553cfbc979e26/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14df54989aecb437e9cf6f3e066553cfbc979e26/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=14df54989aecb437e9cf6f3e066553cfbc979e26", "patch": "@@ -942,6 +942,13 @@ impl<'b, T: ?Sized> Ref<'b, T> {\n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n impl<'b, T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Ref<'b, U>> for Ref<'b, T> {}\n \n+#[stable(feature = \"std_guard_impls\", since = \"1.20\")]\n+impl<'a, T: ?Sized + fmt::Display> fmt::Display for Ref<'a, T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        self.value.fmt(f)\n+    }\n+}\n+\n impl<'b, T: ?Sized> RefMut<'b, T> {\n     /// Make a new `RefMut` for a component of the borrowed data, e.g. an enum\n     /// variant.\n@@ -1034,6 +1041,13 @@ impl<'b, T: ?Sized> DerefMut for RefMut<'b, T> {\n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n impl<'b, T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<RefMut<'b, U>> for RefMut<'b, T> {}\n \n+#[stable(feature = \"std_guard_impls\", since = \"1.20\")]\n+impl<'a, T: ?Sized + fmt::Display> fmt::Display for RefMut<'a, T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        self.value.fmt(f)\n+    }\n+}\n+\n /// The core primitive for interior mutability in Rust.\n ///\n /// `UnsafeCell<T>` is a type that wraps some `T` and indicates unsafe interior operations on the"}, {"sha": "fc6c7de9ef083a753f0d91067c36e3f9688baeec", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14df54989aecb437e9cf6f3e066553cfbc979e26/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14df54989aecb437e9cf6f3e066553cfbc979e26/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=14df54989aecb437e9cf6f3e066553cfbc979e26", "patch": "@@ -440,6 +440,13 @@ impl<'a, T: ?Sized + fmt::Debug> fmt::Debug for MutexGuard<'a, T> {\n     }\n }\n \n+#[stable(feature = \"std_guard_impls\", since = \"1.20\")]\n+impl<'a, T: ?Sized + fmt::Display> fmt::Display for MutexGuard<'a, T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        (**self).fmt(f)\n+    }\n+}\n+\n pub fn guard_lock<'a, T: ?Sized>(guard: &MutexGuard<'a, T>) -> &'a sys::Mutex {\n     &guard.__lock.inner\n }"}, {"sha": "944801e8a3bf021ee131a395a8458393372248c0", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/14df54989aecb437e9cf6f3e066553cfbc979e26/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14df54989aecb437e9cf6f3e066553cfbc979e26/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=14df54989aecb437e9cf6f3e066553cfbc979e26", "patch": "@@ -370,6 +370,13 @@ impl<'a, T: fmt::Debug> fmt::Debug for RwLockReadGuard<'a, T> {\n     }\n }\n \n+#[stable(feature = \"std_guard_impls\", since = \"1.20\")]\n+impl<'a, T: ?Sized + fmt::Display> fmt::Display for RwLockReadGuard<'a, T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        (**self).fmt(f)\n+    }\n+}\n+\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T: fmt::Debug> fmt::Debug for RwLockWriteGuard<'a, T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -379,6 +386,13 @@ impl<'a, T: fmt::Debug> fmt::Debug for RwLockWriteGuard<'a, T> {\n     }\n }\n \n+#[stable(feature = \"std_guard_impls\", since = \"1.20\")]\n+impl<'a, T: ?Sized + fmt::Display> fmt::Display for RwLockWriteGuard<'a, T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        (**self).fmt(f)\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'rwlock, T: ?Sized> Deref for RwLockReadGuard<'rwlock, T> {\n     type Target = T;"}]}