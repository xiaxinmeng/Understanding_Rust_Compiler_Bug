{"sha": "c77ad2d76576b97f6b2ea8c8b5ddb672c3383512", "node_id": "C_kwDOAAsO6NoAKGM3N2FkMmQ3NjU3NmI5N2Y2YjJlYThjOGI1ZGRiNjcyYzMzODM1MTI", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-07T19:32:26Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-11T17:46:02Z"}, "message": "Remove mention of \"assoc type\" in label as it is already in the `note` message", "tree": {"sha": "faabc591007323f2005c7be2cf3576957ba10436", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faabc591007323f2005c7be2cf3576957ba10436"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512", "html_url": "https://github.com/rust-lang/rust/commit/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71db025cfa85ea3c1e7d628f4c596ca498c7acf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/71db025cfa85ea3c1e7d628f4c596ca498c7acf0", "html_url": "https://github.com/rust-lang/rust/commit/71db025cfa85ea3c1e7d628f4c596ca498c7acf0"}], "stats": {"total": 44, "additions": 21, "deletions": 23}, "files": [{"sha": "bef2a067ae31035a19b9a22d3e816dab40fb1b2c", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=c77ad2d76576b97f6b2ea8c8b5ddb672c3383512", "patch": "@@ -3011,7 +3011,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                                     primary_spans.push(span);\n                                     span_labels.push((\n                                         span,\n-                                        format!(\"associated type `{assoc}` is `{ty}` here\"),\n+                                        format!(\"`{assoc}` is `{ty}` here\"),\n                                     ));\n                                 }\n                                 break;\n@@ -3025,15 +3025,13 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                                             primary_spans.push(span);\n                                             span_labels.push((\n                                                 span,\n-                                                format!(\"associated type `{assoc}` changed to `{ty}` here\"),\n+                                                format!(\"`{assoc}` changed to `{ty}` here\"),\n                                             ));\n                                         }\n                                     }\n                                     (Some((span, (assoc, ty))), None) => {\n-                                        span_labels.push((\n-                                            span,\n-                                            format!(\"associated type `{assoc}` is `{ty}` here\"),\n-                                        ));\n+                                        span_labels\n+                                            .push((span, format!(\"`{assoc}` is `{ty}` here\")));\n                                     }\n                                     (None, Some(_)) | (None, None) => {}\n                                 }\n@@ -3055,7 +3053,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                                 multi_span,\n                                 format!(\n                                     \"the method call chain might not have had the expected \\\n-                                        associated types\",\n+                                     associated types\",\n                                 ),\n                             );\n                         }"}, {"sha": "ac3b3e95faf304d223e30353f1805df38911acd1", "filename": "src/test/ui/issues/issue-34334.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr?ref=c77ad2d76576b97f6b2ea8c8b5ddb672c3383512", "patch": "@@ -29,9 +29,9 @@ LL |     let sr: Vec<(u32, _, _) = vec![];\n    |                               ------ this expression has type `Vec<(_, _, _)>`\n ...\n LL |     let sr2: Vec<(u32, _, _)> = sr.iter().map(|(faction, th_sender, th_receiver)| {}).collect();\n-   |                                    ^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated type `std::iter::Iterator::Item` changed to `()` here\n+   |                                    ^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `std::iter::Iterator::Item` changed to `()` here\n    |                                    |\n-   |                                    associated type `std::iter::Iterator::Item` is `&(_, _, _)` here\n+   |                                    `std::iter::Iterator::Item` is `&(_, _, _)` here\n note: required by a bound in `collect`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |"}, {"sha": "9a560c631fec45b7894cef9f0dadb398d95dbaf0", "filename": "src/test/ui/issues/issue-66923-show-error-for-correct-call.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.stderr?ref=c77ad2d76576b97f6b2ea8c8b5ddb672c3383512", "patch": "@@ -14,7 +14,7 @@ note: the method call chain might not have had the expected associated types\n LL |     let x1: &[f64] = &v;\n    |                      -- this expression has type `&Vec<f64>`\n LL |     let x2: Vec<f64> = x1.into_iter().collect();\n-   |                           ^^^^^^^^^^^ associated type `std::iter::Iterator::Item` is `&f64` here\n+   |                           ^^^^^^^^^^^ `std::iter::Iterator::Item` is `&f64` here\n note: required by a bound in `collect`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |\n@@ -38,7 +38,7 @@ LL |     let x1: &[f64] = &v;\n    |                      -- this expression has type `&Vec<f64>`\n ...\n LL |     let x3 = x1.into_iter().collect::<Vec<f64>>();\n-   |                 ^^^^^^^^^^^ associated type `std::iter::Iterator::Item` is `&f64` here\n+   |                 ^^^^^^^^^^^ `std::iter::Iterator::Item` is `&f64` here\n note: required by a bound in `collect`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |"}, {"sha": "0505dd86af32c7c87fd64e1e29ca7ceade246c0d", "filename": "src/test/ui/iterators/invalid-iterator-chain.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/src%2Ftest%2Fui%2Fiterators%2Finvalid-iterator-chain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77ad2d76576b97f6b2ea8c8b5ddb672c3383512/src%2Ftest%2Fui%2Fiterators%2Finvalid-iterator-chain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finvalid-iterator-chain.stderr?ref=c77ad2d76576b97f6b2ea8c8b5ddb672c3383512", "patch": "@@ -15,12 +15,12 @@ note: the method call chain might not have had the expected associated types\n LL |       let scores = vec![(0, 0)]\n    |                    ------------ this expression has type `Vec<({integer}, {integer})>`\n LL |           .iter()\n-   |            ^^^^^^ associated type `std::iter::Iterator::Item` is `&({integer}, {integer})` here\n+   |            ^^^^^^ `std::iter::Iterator::Item` is `&({integer}, {integer})` here\n LL |           .map(|(a, b)| {\n    |  __________^\n LL | |             a + b;\n LL | |         });\n-   | |__________^ associated type `std::iter::Iterator::Item` changed to `()` here\n+   | |__________^ `std::iter::Iterator::Item` changed to `()` here\n note: required by a bound in `std::iter::Iterator::sum`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |\n@@ -50,19 +50,19 @@ note: the method call chain might not have had the expected associated types\n LL |         vec![0, 1]\n    |         ---------- this expression has type `Vec<{integer}>`\n LL |             .iter()\n-   |              ^^^^^^ associated type `std::iter::Iterator::Item` is `&{integer}` here\n+   |              ^^^^^^ `std::iter::Iterator::Item` is `&{integer}` here\n LL |             .map(|x| x * 2)\n-   |              ^^^^^^^^^^^^^^ associated type `std::iter::Iterator::Item` changed to `{integer}` here\n+   |              ^^^^^^^^^^^^^^ `std::iter::Iterator::Item` changed to `{integer}` here\n LL |             .map(|x| x as f64)\n-   |              ^^^^^^^^^^^^^^^^^ associated type `std::iter::Iterator::Item` changed to `f64` here\n+   |              ^^^^^^^^^^^^^^^^^ `std::iter::Iterator::Item` changed to `f64` here\n LL |             .map(|x| x as i64)\n-   |              ^^^^^^^^^^^^^^^^^ associated type `std::iter::Iterator::Item` changed to `i64` here\n+   |              ^^^^^^^^^^^^^^^^^ `std::iter::Iterator::Item` changed to `i64` here\n LL |             .filter(|x| *x > 0)\n    |              ------------------\n LL |             .map(|x| { x + 1 })\n    |              ------------------\n LL |             .map(|x| { x; })\n-   |              ^^^^^^^^^^^^^^^ associated type `std::iter::Iterator::Item` changed to `()` here\n+   |              ^^^^^^^^^^^^^^^ `std::iter::Iterator::Item` changed to `()` here\n note: required by a bound in `std::iter::Iterator::sum`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |\n@@ -84,9 +84,9 @@ note: the method call chain might not have had the expected associated types\n   --> $DIR/invalid-iterator-chain.rs:20:31\n    |\n LL |     println!(\"{}\", vec![0, 1].iter().map(|x| { x; }).sum::<i32>());\n-   |                    ---------- ^^^^^^ ^^^^^^^^^^^^^^^ associated type `std::iter::Iterator::Item` changed to `()` here\n+   |                    ---------- ^^^^^^ ^^^^^^^^^^^^^^^ `std::iter::Iterator::Item` changed to `()` here\n    |                    |          |\n-   |                    |          associated type `std::iter::Iterator::Item` is `&{integer}` here\n+   |                    |          `std::iter::Iterator::Item` is `&{integer}` here\n    |                    this expression has type `Vec<{integer}>`\n note: required by a bound in `std::iter::Iterator::sum`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n@@ -109,7 +109,7 @@ note: the method call chain might not have had the expected associated types\n   --> $DIR/invalid-iterator-chain.rs:21:33\n    |\n LL |     println!(\"{}\", vec![(), ()].iter().sum::<i32>());\n-   |                    ------------ ^^^^^^ associated type `std::iter::Iterator::Item` is `&()` here\n+   |                    ------------ ^^^^^^ `std::iter::Iterator::Item` is `&()` here\n    |                    |\n    |                    this expression has type `Vec<()>`\n note: required by a bound in `std::iter::Iterator::sum`\n@@ -134,7 +134,7 @@ note: the method call chain might not have had the expected associated types\n LL |       let a = vec![0];\n    |               ------- this expression has type `Vec<{integer}>`\n LL |       let b = a.into_iter();\n-   |                 ^^^^^^^^^^^ associated type `std::iter::Iterator::Item` is `{integer}` here\n+   |                 ^^^^^^^^^^^ `std::iter::Iterator::Item` is `{integer}` here\n LL |       let c = b.map(|x| x + 1);\n    |                 --------------\n LL |       let d = c.filter(|x| *x > 10 );\n@@ -143,7 +143,7 @@ LL |       let e = d.map(|x| {\n    |  _______________^\n LL | |         x + 1;\n LL | |     });\n-   | |______^ associated type `std::iter::Iterator::Item` changed to `()` here\n+   | |______^ `std::iter::Iterator::Item` changed to `()` here\n LL |       let f = e.filter(|_| false);\n    |                 -----------------\n note: required by a bound in `collect`"}]}