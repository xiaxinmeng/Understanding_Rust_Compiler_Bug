{"sha": "e784712f09d4978b5331ceaf96476bcf4b1b0b1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ODQ3MTJmMDlkNDk3OGI1MzMxY2VhZjk2NDc2YmNmNGIxYjBiMWI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-09T09:07:49Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-09T09:07:49Z"}, "message": "Try to fix a build regression before it happens", "tree": {"sha": "0d3b184f71ad2077cebacbabca0cbfbdddeabc1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d3b184f71ad2077cebacbabca0cbfbdddeabc1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e784712f09d4978b5331ceaf96476bcf4b1b0b1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e784712f09d4978b5331ceaf96476bcf4b1b0b1b", "html_url": "https://github.com/rust-lang/rust/commit/e784712f09d4978b5331ceaf96476bcf4b1b0b1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e784712f09d4978b5331ceaf96476bcf4b1b0b1b/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f14671131ed919659b534d5e86c7055995fa3f71", "url": "https://api.github.com/repos/rust-lang/rust/commits/f14671131ed919659b534d5e86c7055995fa3f71", "html_url": "https://github.com/rust-lang/rust/commit/f14671131ed919659b534d5e86c7055995fa3f71"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "9a02ee64fb7dc23d335a7b48ed118bd5b4a6ac22", "filename": "src/imports.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e784712f09d4978b5331ceaf96476bcf4b1b0b1b/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e784712f09d4978b5331ceaf96476bcf4b1b0b1b/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=e784712f09d4978b5331ceaf96476bcf4b1b0b1b", "patch": "@@ -309,19 +309,24 @@ impl UseTree {\n             }\n         }\n \n+        let mut done = false;\n         if aliased_self {\n-            match self.path.last() {\n+            match self.path.last_mut() {\n                 Some(UseSegment::Ident(_, ref mut old_rename)) => {\n                     assert!(old_rename.is_none());\n-                    if let UseSegment::Slf(Some(rename)) = last {\n+                    if let UseSegment::Slf(Some(rename)) = last.clone() {\n                         *old_rename = Some(rename);\n-                        return self;\n+                        done = true;\n                     }\n                 }\n                 _ => unreachable!(),\n             }\n         }\n \n+        if done {\n+            return self;\n+        }\n+\n         // Normalise foo::{bar} -> foo::bar\n         if let UseSegment::List(ref list) = last {\n             if list.len() == 1 {"}]}