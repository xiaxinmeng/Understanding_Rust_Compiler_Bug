{"sha": "1874b6738ab4b849e5cbcb37fe2019192f950e5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NzRiNjczOGFiNGI4NDllNWNiY2IzN2ZlMjAxOTE5MmY5NTBlNWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T11:06:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T11:22:06Z"}, "message": "Move ReferenceKind", "tree": {"sha": "63016f6cfcfe7604cbd2be8ea2f2dd964ce1f4da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63016f6cfcfe7604cbd2be8ea2f2dd964ce1f4da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1874b6738ab4b849e5cbcb37fe2019192f950e5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1874b6738ab4b849e5cbcb37fe2019192f950e5e", "html_url": "https://github.com/rust-lang/rust/commit/1874b6738ab4b849e5cbcb37fe2019192f950e5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1874b6738ab4b849e5cbcb37fe2019192f950e5e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a549da7e3ea66fd336de331c7c8d62b186051521", "url": "https://api.github.com/repos/rust-lang/rust/commits/a549da7e3ea66fd336de331c7c8d62b186051521", "html_url": "https://github.com/rust-lang/rust/commit/a549da7e3ea66fd336de331c7c8d62b186051521"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "c797918b0ece7422eb428c6139fbd13394b04911", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1874b6738ab4b849e5cbcb37fe2019192f950e5e/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1874b6738ab4b849e5cbcb37fe2019192f950e5e/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=1874b6738ab4b849e5cbcb37fe2019192f950e5e", "patch": "@@ -31,7 +31,7 @@ use crate::{display::TryToNav, FilePosition, FileRange, NavigationTarget, RangeI\n \n pub(crate) use self::rename::rename;\n \n-pub use ra_ide_db::search::SearchScope;\n+pub use ra_ide_db::search::{Reference, ReferenceAccess, ReferenceKind, SearchScope};\n \n #[derive(Debug, Clone)]\n pub struct ReferenceSearchResult {\n@@ -46,25 +46,6 @@ pub struct Declaration {\n     pub access: Option<ReferenceAccess>,\n }\n \n-#[derive(Debug, Clone)]\n-pub struct Reference {\n-    pub file_range: FileRange,\n-    pub kind: ReferenceKind,\n-    pub access: Option<ReferenceAccess>,\n-}\n-\n-#[derive(Debug, Clone, PartialEq)]\n-pub enum ReferenceKind {\n-    StructLiteral,\n-    Other,\n-}\n-\n-#[derive(Debug, Copy, Clone, PartialEq)]\n-pub enum ReferenceAccess {\n-    Read,\n-    Write,\n-}\n-\n impl ReferenceSearchResult {\n     pub fn declaration(&self) -> &Declaration {\n         &self.declaration"}, {"sha": "ca458388c906383b0da0ea2cbc1af389a7d58968", "filename": "crates/ra_ide_db/src/search.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1874b6738ab4b849e5cbcb37fe2019192f950e5e/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1874b6738ab4b849e5cbcb37fe2019192f950e5e/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs?ref=1874b6738ab4b849e5cbcb37fe2019192f950e5e", "patch": "@@ -5,13 +5,32 @@\n use std::mem;\n \n use hir::{DefWithBody, HasSource, ModuleSource};\n-use ra_db::{FileId, SourceDatabaseExt};\n+use ra_db::{FileId, FileRange, SourceDatabaseExt};\n use ra_prof::profile;\n use ra_syntax::{AstNode, TextRange};\n use rustc_hash::FxHashMap;\n \n use crate::{defs::Definition, RootDatabase};\n \n+#[derive(Debug, Clone)]\n+pub struct Reference {\n+    pub file_range: FileRange,\n+    pub kind: ReferenceKind,\n+    pub access: Option<ReferenceAccess>,\n+}\n+\n+#[derive(Debug, Clone, PartialEq)]\n+pub enum ReferenceKind {\n+    StructLiteral,\n+    Other,\n+}\n+\n+#[derive(Debug, Copy, Clone, PartialEq)]\n+pub enum ReferenceAccess {\n+    Read,\n+    Write,\n+}\n+\n pub struct SearchScope {\n     entries: FxHashMap<FileId, Option<TextRange>>,\n }"}]}