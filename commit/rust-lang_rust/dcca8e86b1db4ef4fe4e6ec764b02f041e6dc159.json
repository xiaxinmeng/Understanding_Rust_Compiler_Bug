{"sha": "dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjY2E4ZTg2YjFkYjRlZjRmZTRlNmVjNzY0YjAyZjA0MWU2ZGMxNTk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-07T05:47:24Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-07T10:13:59Z"}, "message": "Rollup merge of #53991 - TimDiekmann:fix-unchecked-intrinsics, r=oli-obk\n\nAdd unchecked_shl/shr check for intrinsics to fix miri's test suit\n\nr? @RalfJung\n\ncc @oli-obk\n\n#53697 broke miri's test suite as described in [this comment](https://github.com/rust-lang/rust/pull/53697#issuecomment-419034668). This PR adds test for the `unchecked_shr/shl` for the intrinsics.", "tree": {"sha": "2e25f39f9ccafe5b77cd4f5f6ef5e0351de98b90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e25f39f9ccafe5b77cd4f5f6ef5e0351de98b90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAluST2gACgkQ/vbIBR0O\nATyedBAAogLsk9fVGuYAWUHQ+tQKHyE+rUNsYNKKMO8pLIiTYlUn2oVFpsXxw4g/\nKqNhhCHpf/weMhLHPRFOh0pFuvncyTswPaRFGK9Molv0/58+ek07EJLYjXj8/DX2\neUqHczdoHmwVPdQx1XkHz3bo+Y2CPuCFtwtzaqCHTtCATa746Px9A29cEY9bgvDB\nqvm6MZ/JmnfQf3N7Z0eTIhrJ1DHpcneMH4yBL+pAsr4j2LGvXwBNcqiQbIv6lC9P\nalRrtV5DrWRSc9xd6faA113RWwGOaMuUEDFSbDMPqInV+Qe8udpMAY+w0LJ65Ib3\n51k/NtjX766L0vXgmIWlfg/3bfs7mPNcVtH6NDLRJxWWe3x+L51cDgiDfqI50vxp\nLhNVKHcQUmA/muIUscTq2Vn8WNvreX9gM6qhv+3MXbEr4H235CSrD+sT+2Ve32RD\nZqKAV8qMWUx36GUuXPXBwea2tx3ot1vlaI0VjIAECnMwExiwK/WM2aNkSQK03pnP\n2nzN7PIX4xWLb/HdAtWsyTAnsn+ZRoWw6/QvUrH4FZkes6OxLYxW8DxQ46Tq7L/G\nuNbD1Zcj8vDpbebxQbT2C3BDlvK2CssYR31ejlaDITm9firSyVViukaMqDGFgD1R\nDRTBXhHUvUfmVrnKjnAUsdn3N9FWcMT4Eb1mVJ9brrFrGnHo+WY=\n=eoH/\n-----END PGP SIGNATURE-----", "payload": "tree 2e25f39f9ccafe5b77cd4f5f6ef5e0351de98b90\nparent 9b70ef7780ee3afdf68700b64327353babae9310\nparent 43eb9259ec92561033969118d1cc071a91f86084\nauthor kennytm <kennytm@gmail.com> 1536299244 +0800\ncommitter kennytm <kennytm@gmail.com> 1536315239 +0800\n\nRollup merge of #53991 - TimDiekmann:fix-unchecked-intrinsics, r=oli-obk\n\nAdd unchecked_shl/shr check for intrinsics to fix miri's test suit\n\nr? @RalfJung\n\ncc @oli-obk\n\n#53697 broke miri's test suite as described in [this comment](https://github.com/rust-lang/rust/pull/53697#issuecomment-419034668). This PR adds test for the `unchecked_shr/shl` for the intrinsics.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159", "html_url": "https://github.com/rust-lang/rust/commit/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b70ef7780ee3afdf68700b64327353babae9310", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b70ef7780ee3afdf68700b64327353babae9310", "html_url": "https://github.com/rust-lang/rust/commit/9b70ef7780ee3afdf68700b64327353babae9310"}, {"sha": "43eb9259ec92561033969118d1cc071a91f86084", "url": "https://api.github.com/repos/rust-lang/rust/commits/43eb9259ec92561033969118d1cc071a91f86084", "html_url": "https://github.com/rust-lang/rust/commit/43eb9259ec92561033969118d1cc071a91f86084"}], "stats": {"total": 63, "additions": 59, "deletions": 4}, "files": [{"sha": "48085c2145418ed1a2e6e01e94da1db1e1144dcc", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159", "patch": "@@ -105,8 +105,6 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n             | \"overflowing_add\"\n             | \"overflowing_sub\"\n             | \"overflowing_mul\"\n-            | \"unchecked_shl\"\n-            | \"unchecked_shr\"\n             | \"add_with_overflow\"\n             | \"sub_with_overflow\"\n             | \"mul_with_overflow\" => {\n@@ -116,8 +114,6 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                     \"overflowing_add\" => (BinOp::Add, true),\n                     \"overflowing_sub\" => (BinOp::Sub, true),\n                     \"overflowing_mul\" => (BinOp::Mul, true),\n-                    \"unchecked_shl\" => (BinOp::Shl, true),\n-                    \"unchecked_shr\" => (BinOp::Shr, true),\n                     \"add_with_overflow\" => (BinOp::Add, false),\n                     \"sub_with_overflow\" => (BinOp::Sub, false),\n                     \"mul_with_overflow\" => (BinOp::Mul, false),\n@@ -129,6 +125,24 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                     self.binop_with_overflow(bin_op, lhs, rhs, dest)?;\n                 }\n             }\n+            \"unchecked_shl\" | \"unchecked_shr\" => {\n+                let l = self.read_value(args[0])?;\n+                let r = self.read_value(args[1])?;\n+                let bin_op = match intrinsic_name {\n+                    \"unchecked_shl\" => BinOp::Shl,\n+                    \"unchecked_shr\" => BinOp::Shr,\n+                    _ => bug!(\"Already checked for int ops\")\n+                };\n+                let (val, overflowed) = self.binary_op_val(bin_op, l, r)?;\n+                if overflowed {\n+                    let layout = self.layout_of(substs.type_at(0))?;\n+                    let r_val =  r.to_scalar()?.to_bits(layout.size)?;\n+                    return err!(Intrinsic(\n+                        format!(\"Overflowing shift by {} in {}\", r_val, intrinsic_name),\n+                    ));\n+                }\n+                self.write_scalar(val, dest)?;\n+            }\n             \"transmute\" => {\n                 // Go through an allocation, to make sure the completely different layouts\n                 // do not pose a problem.  (When the user transmutes through a union,"}, {"sha": "cbf855633fd2d06c5beacfd4a4d1744cd2f1b899", "filename": "src/test/ui/consts/const-int-unchecked.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs?ref=dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics;\n+\n+const SHR: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n+//^~ ERROR: Overflowing shift by 8 in unchecked_shr\n+const SHL: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };\n+//^~ ERROR: Overflowing shift by 8 in unchecked_shl\n+\n+fn main() {\n+}"}, {"sha": "b8fd0facbc1ae53262bc5a3411eb9022a7ea7d24", "filename": "src/test/ui/consts/const-int-unchecked.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr?ref=dcca8e86b1db4ef4fe4e6ec764b02f041e6dc159", "patch": "@@ -0,0 +1,20 @@\n+error: this constant cannot be used\n+  --> $DIR/const-int-unchecked.rs:15:1\n+   |\n+LL | const SHR: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^----------------------------------^^^\n+   |                          |\n+   |                          Overflowing shift by 8 in unchecked_shr\n+   |\n+   = note: #[deny(const_err)] on by default\n+\n+error: this constant cannot be used\n+  --> $DIR/const-int-unchecked.rs:17:1\n+   |\n+LL | const SHL: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^----------------------------------^^^\n+   |                          |\n+   |                          Overflowing shift by 8 in unchecked_shl\n+\n+error: aborting due to 2 previous errors\n+"}]}