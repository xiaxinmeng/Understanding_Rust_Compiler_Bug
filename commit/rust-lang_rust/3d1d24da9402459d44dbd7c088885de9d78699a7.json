{"sha": "3d1d24da9402459d44dbd7c088885de9d78699a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMWQyNGRhOTQwMjQ1OWQ0NGRiZDdjMDg4ODg1ZGU5ZDc4Njk5YTc=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-26T23:53:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-26T23:53:23Z"}, "message": "Rollup merge of #77208 - mati865:late-link-args-order, r=petrochenkov\n\nLate link args order\n\nMSYS2 changed how winpthreads is built and as the result it now depends on more mingw-w64 libraries.\n\nThis PR affects only MinGW targets since nobody else is using `late_link_args_{dynamic,static}`. Now the order is similar to how it used to be before https://github.com/rust-lang/rust/pull/67502.", "tree": {"sha": "2db86be5c0d84c48bef242ca56aa51401773cac8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2db86be5c0d84c48bef242ca56aa51401773cac8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d1d24da9402459d44dbd7c088885de9d78699a7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfb9R0CRBK7hj4Ov3rIwAAdHIIAHzRyNiCamyp52mNrqplYmB9\nvxzCj6CmiFAEeP38GdQEwdbCkwRqcLczUBTcVDr7JkzYElbtdhQ4bKb09yQLsnkI\naaTztez72AIqfmjH1+V8dDVNAF748adLtHOxaGMEYZ/XRY+JOvGPW2AflOtAyc99\n6Z3CiWvF2IaklyZgvWBDJdDOuy7Lv5mTbeqEy+G7vWPIgO/3OPhbF8At3Qm/E5HA\npznS0kvTudJXVIh10/8b8YLOnfHKg5VrYQD9jwJEQfGfYzhI+0Gu00Fonexye+MU\ngZN9846GoRJVc6UgWNv51ZjNyrpFTZ47Mmp6tlgcd+jQmGh16iUhtcZkGt4BX9Y=\n=2RKr\n-----END PGP SIGNATURE-----\n", "payload": "tree 2db86be5c0d84c48bef242ca56aa51401773cac8\nparent bb416f3a59ae5d5e4178a29ec351b579d9e36321\nparent bfdb7903c924127e90afe8838410feb660ec4811\nauthor Jonas Schievink <jonasschievink@gmail.com> 1601164403 +0200\ncommitter GitHub <noreply@github.com> 1601164403 +0200\n\nRollup merge of #77208 - mati865:late-link-args-order, r=petrochenkov\n\nLate link args order\n\nMSYS2 changed how winpthreads is built and as the result it now depends on more mingw-w64 libraries.\n\nThis PR affects only MinGW targets since nobody else is using `late_link_args_{dynamic,static}`. Now the order is similar to how it used to be before https://github.com/rust-lang/rust/pull/67502.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d1d24da9402459d44dbd7c088885de9d78699a7", "html_url": "https://github.com/rust-lang/rust/commit/3d1d24da9402459d44dbd7c088885de9d78699a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d1d24da9402459d44dbd7c088885de9d78699a7/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb416f3a59ae5d5e4178a29ec351b579d9e36321", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb416f3a59ae5d5e4178a29ec351b579d9e36321", "html_url": "https://github.com/rust-lang/rust/commit/bb416f3a59ae5d5e4178a29ec351b579d9e36321"}, {"sha": "bfdb7903c924127e90afe8838410feb660ec4811", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfdb7903c924127e90afe8838410feb660ec4811", "html_url": "https://github.com/rust-lang/rust/commit/bfdb7903c924127e90afe8838410feb660ec4811"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "87d539f748c6b86f071e7e0508f54c655a9ae854", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d1d24da9402459d44dbd7c088885de9d78699a7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d1d24da9402459d44dbd7c088885de9d78699a7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=3d1d24da9402459d44dbd7c088885de9d78699a7", "patch": "@@ -1333,9 +1333,6 @@ fn add_late_link_args(\n     crate_type: CrateType,\n     codegen_results: &CodegenResults,\n ) {\n-    if let Some(args) = sess.target.target.options.late_link_args.get(&flavor) {\n-        cmd.args(args);\n-    }\n     let any_dynamic_crate = crate_type == CrateType::Dylib\n         || codegen_results.crate_info.dependency_formats.iter().any(|(ty, list)| {\n             *ty == crate_type && list.iter().any(|&linkage| linkage == Linkage::Dynamic)\n@@ -1349,6 +1346,9 @@ fn add_late_link_args(\n             cmd.args(args);\n         }\n     }\n+    if let Some(args) = sess.target.target.options.late_link_args.get(&flavor) {\n+        cmd.args(args);\n+    }\n }\n \n /// Add arbitrary \"post-link\" args defined by the target spec."}, {"sha": "0234ff55f011823cc070e818d3812eee84b83107", "filename": "compiler/rustc_target/src/spec/windows_gnu_base.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3d1d24da9402459d44dbd7c088885de9d78699a7/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d1d24da9402459d44dbd7c088885de9d78699a7/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs?ref=3d1d24da9402459d44dbd7c088885de9d78699a7", "patch": "@@ -23,6 +23,7 @@ pub fn opts() -> TargetOptions {\n         \"-lmsvcrt\".to_string(),\n         \"-lmingwex\".to_string(),\n         \"-lmingw32\".to_string(),\n+        \"-lgcc\".to_string(), // alas, mingw* libraries above depend on libgcc\n         // mingw's msvcrt is a weird hybrid import library and static library.\n         // And it seems that the linker fails to use import symbols from msvcrt\n         // that are required from functions in msvcrt in certain cases. For example\n@@ -41,8 +42,6 @@ pub fn opts() -> TargetOptions {\n         // the shared libgcc_s-dw2-1.dll. This is required to support\n         // unwinding across DLL boundaries.\n         \"-lgcc_s\".to_string(),\n-        \"-lgcc\".to_string(),\n-        \"-lkernel32\".to_string(),\n     ];\n     late_link_args_dynamic.insert(LinkerFlavor::Gcc, dynamic_unwind_libs.clone());\n     late_link_args_dynamic.insert(LinkerFlavor::Lld(LldFlavor::Ld), dynamic_unwind_libs);\n@@ -54,10 +53,6 @@ pub fn opts() -> TargetOptions {\n         // boundaries when unwinding across FFI boundaries.\n         \"-lgcc_eh\".to_string(),\n         \"-l:libpthread.a\".to_string(),\n-        \"-lgcc\".to_string(),\n-        // libpthread depends on libmsvcrt, so we need to link it *again*.\n-        \"-lmsvcrt\".to_string(),\n-        \"-lkernel32\".to_string(),\n     ];\n     late_link_args_static.insert(LinkerFlavor::Gcc, static_unwind_libs.clone());\n     late_link_args_static.insert(LinkerFlavor::Lld(LldFlavor::Ld), static_unwind_libs);"}]}