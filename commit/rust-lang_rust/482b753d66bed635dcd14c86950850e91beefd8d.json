{"sha": "482b753d66bed635dcd14c86950850e91beefd8d", "node_id": "C_kwDOAAsO6NoAKDQ4MmI3NTNkNjZiZWQ2MzVkY2QxNGM4Njk1MDg1MGU5MWJlZWZkOGQ", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-02-07T10:46:08Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-02-13T14:59:16Z"}, "message": "rustdoc: Consider enum variants when resolving assoc items in doc links", "tree": {"sha": "27e2b9c27a35ba335cf6af59a108b6cdeeaee6c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27e2b9c27a35ba335cf6af59a108b6cdeeaee6c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/482b753d66bed635dcd14c86950850e91beefd8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/482b753d66bed635dcd14c86950850e91beefd8d", "html_url": "https://github.com/rust-lang/rust/commit/482b753d66bed635dcd14c86950850e91beefd8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/482b753d66bed635dcd14c86950850e91beefd8d/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f4681ad7a132755452c32a987ad0f0d075aa6aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4681ad7a132755452c32a987ad0f0d075aa6aa", "html_url": "https://github.com/rust-lang/rust/commit/1f4681ad7a132755452c32a987ad0f0d075aa6aa"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "ae891b96ce3e88957cf0ced42ee2d317642aa90c", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/482b753d66bed635dcd14c86950850e91beefd8d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482b753d66bed635dcd14c86950850e91beefd8d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=482b753d66bed635dcd14c86950850e91beefd8d", "patch": "@@ -10,7 +10,7 @@ use rustc_hir::def::{\n     PerNS,\n };\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_ID};\n-use rustc_middle::ty::{DefIdTree, Ty, TyCtxt};\n+use rustc_middle::ty::{DefIdTree, Ty, TyCtxt, TyKind};\n use rustc_middle::{bug, span_bug, ty};\n use rustc_session::lint::Lint;\n use rustc_span::hygiene::MacroKind;\n@@ -723,10 +723,27 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n                 self.resolve_associated_item(res, item_name, ns, module_id)\n             }\n             Res::Def(\n-                DefKind::Struct | DefKind::Union | DefKind::Enum | DefKind::ForeignTy,\n+                def_kind @ (DefKind::Struct | DefKind::Union | DefKind::Enum | DefKind::ForeignTy),\n                 did,\n             ) => {\n                 debug!(\"looking for associated item named {} for item {:?}\", item_name, did);\n+                // Checks if item_name is a variant of the `SomeItem` enum\n+                if ns == TypeNS && def_kind == DefKind::Enum {\n+                    match tcx.type_of(did).kind() {\n+                        TyKind::Adt(adt_def, _) => {\n+                            for variant in &adt_def.variants {\n+                                if variant.name == item_name {\n+                                    return Some((\n+                                        root_res,\n+                                        ItemFragment(FragmentKind::Variant, variant.def_id),\n+                                    ));\n+                                }\n+                            }\n+                        }\n+                        _ => unreachable!(),\n+                    }\n+                }\n+\n                 // Checks if item_name belongs to `impl SomeItem`\n                 let assoc_item = tcx\n                     .inherent_impls(did)"}, {"sha": "0b958eb8eac12b450f6b0d32ef13367f112d8fcf", "filename": "src/test/rustdoc/intra-doc/associated-items.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/482b753d66bed635dcd14c86950850e91beefd8d/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482b753d66bed635dcd14c86950850e91beefd8d/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs?ref=482b753d66bed635dcd14c86950850e91beefd8d", "patch": "@@ -57,4 +57,12 @@ impl T2 for S {\n     fn ambiguous_method() {}\n }\n \n+// @has associated_items/enum.MyEnum.html '//a/@href' 'enum.MyEnum.html#variant.MyVariant'\n+/// Link to [MyEnumAlias::MyVariant]\n+pub enum MyEnum {\n+    MyVariant,\n+}\n+\n+pub type MyEnumAlias = MyEnum;\n+\n fn main() {}"}]}