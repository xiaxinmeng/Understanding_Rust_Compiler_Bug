{"sha": "63af3e6cd2a24a02ad38e47f37010fff30c19908", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzYWYzZTZjZDJhMjRhMDJhZDM4ZTQ3ZjM3MDEwZmZmMzBjMTk5MDg=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-31T02:03:26Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-01T03:50:27Z"}, "message": "time: unbox closures used in let bindings", "tree": {"sha": "68430b7fb4a5fdd656f12280dfa35dae02ea192d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68430b7fb4a5fdd656f12280dfa35dae02ea192d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63af3e6cd2a24a02ad38e47f37010fff30c19908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63af3e6cd2a24a02ad38e47f37010fff30c19908", "html_url": "https://github.com/rust-lang/rust/commit/63af3e6cd2a24a02ad38e47f37010fff30c19908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63af3e6cd2a24a02ad38e47f37010fff30c19908/comments", "author": null, "committer": null, "parents": [{"sha": "ab402c0744f1cb542dee01f810b0c96e47c44df0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab402c0744f1cb542dee01f810b0c96e47c44df0", "html_url": "https://github.com/rust-lang/rust/commit/ab402c0744f1cb542dee01f810b0c96e47c44df0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "87a00334c478f914ecb668833ebd9ecafb1ba877", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/63af3e6cd2a24a02ad38e47f37010fff30c19908/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63af3e6cd2a24a02ad38e47f37010fff30c19908/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=63af3e6cd2a24a02ad38e47f37010fff30c19908", "patch": "@@ -596,7 +596,7 @@ impl<'a> fmt::Show for TmFmt<'a> {\n         }\n \n         fn parse_type(fmt: &mut fmt::Formatter, ch: char, tm: &Tm) -> fmt::Result {\n-            let die = || {\n+            let die = |&:| {\n                 unreachable!()\n             };\n             match ch {"}]}