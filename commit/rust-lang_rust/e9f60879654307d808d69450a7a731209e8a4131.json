{"sha": "e9f60879654307d808d69450a7a731209e8a4131", "node_id": "C_kwDOAAsO6NoAKGU5ZjYwODc5NjU0MzA3ZDgwOGQ2OTQ1MGE3YTczMTIwOWU4YTQxMzE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-24T15:52:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-24T15:52:27Z"}, "message": "Auto merge of #13661 - iredelmeier:fix-null-checkonsave-target, r=jonas-schievink\n\nFix: Handle empty `checkOnSave/target` values\n\nThis fixes a regression introduced by #13290, in which failing to set `checkOnSave/target` (or `checkOnSave/targets`) would lead to an invalid config.\n\n[Fixes #13660]", "tree": {"sha": "ecde5c1c2b1af66196fec10f9e988d282e21c89f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecde5c1c2b1af66196fec10f9e988d282e21c89f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9f60879654307d808d69450a7a731209e8a4131", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f60879654307d808d69450a7a731209e8a4131", "html_url": "https://github.com/rust-lang/rust/commit/e9f60879654307d808d69450a7a731209e8a4131", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9f60879654307d808d69450a7a731209e8a4131/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86", "url": "https://api.github.com/repos/rust-lang/rust/commits/63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86", "html_url": "https://github.com/rust-lang/rust/commit/63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86"}, {"sha": "b116fe9be0812ce3052d7c96359e87cfe7aca558", "url": "https://api.github.com/repos/rust-lang/rust/commits/b116fe9be0812ce3052d7c96359e87cfe7aca558", "html_url": "https://github.com/rust-lang/rust/commit/b116fe9be0812ce3052d7c96359e87cfe7aca558"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "6c0d712a4f473fd18221130027264ebc19a36566", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e9f60879654307d808d69450a7a731209e8a4131/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9f60879654307d808d69450a7a731209e8a4131/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=e9f60879654307d808d69450a7a731209e8a4131", "patch": "@@ -182,7 +182,7 @@ config_data! {\n         /// `[\"aarch64-apple-darwin\", \"x86_64-apple-darwin\"]`.\n         ///\n         /// Aliased as `\"checkOnSave.targets\"`.\n-        checkOnSave_target | checkOnSave_targets: CheckOnSaveTargets           = \"[]\",\n+        checkOnSave_target | checkOnSave_targets: Option<CheckOnSaveTargets>           = \"null\",\n \n         /// Toggles the additional completions that automatically add imports when completed.\n         /// Note that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.\n@@ -1153,10 +1153,15 @@ impl Config {\n             }\n             Some(_) | None => FlycheckConfig::CargoCommand {\n                 command: self.data.checkOnSave_command.clone(),\n-                target_triples: match &self.data.checkOnSave_target.0[..] {\n-                    [] => self.data.cargo_target.clone().into_iter().collect(),\n-                    targets => targets.into(),\n-                },\n+                target_triples: self\n+                    .data\n+                    .checkOnSave_target\n+                    .clone()\n+                    .and_then(|targets| match &targets.0[..] {\n+                        [] => None,\n+                        targets => Some(targets.into()),\n+                    })\n+                    .unwrap_or_else(|| self.data.cargo_target.clone().into_iter().collect()),\n                 all_targets: self.data.checkOnSave_allTargets,\n                 no_default_features: self\n                     .data\n@@ -2126,8 +2131,11 @@ fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json\n                 \"The command will be executed in the project root.\"\n             ],\n         },\n-        \"CheckOnSaveTargets\" => set! {\n+        \"Option<CheckOnSaveTargets>\" => set! {\n             \"anyOf\": [\n+                {\n+                    \"type\": \"null\"\n+                },\n                 {\n                     \"type\": \"string\",\n                 },"}, {"sha": "db41c7bf109e2628947b9bb165acd936aab8ed17", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9f60879654307d808d69450a7a731209e8a4131/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/e9f60879654307d808d69450a7a731209e8a4131/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=e9f60879654307d808d69450a7a731209e8a4131", "patch": "@@ -190,7 +190,7 @@ cargo check --workspace --message-format=json --all-targets\n ```\n .\n --\n-[[rust-analyzer.checkOnSave.target]]rust-analyzer.checkOnSave.target (default: `[]`)::\n+[[rust-analyzer.checkOnSave.target]]rust-analyzer.checkOnSave.target (default: `null`)::\n +\n --\n Check for specific targets. Defaults to `#rust-analyzer.cargo.target#` if empty."}, {"sha": "a3385a3868b6dae2076f4cefedda81c7c2a587a1", "filename": "editors/code/package.json", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e9f60879654307d808d69450a7a731209e8a4131/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/e9f60879654307d808d69450a7a731209e8a4131/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=e9f60879654307d808d69450a7a731209e8a4131", "patch": "@@ -640,8 +640,11 @@\n                 },\n                 \"rust-analyzer.checkOnSave.target\": {\n                     \"markdownDescription\": \"Check for specific targets. Defaults to `#rust-analyzer.cargo.target#` if empty.\\n\\nCan be a single target, e.g. `\\\"x86_64-unknown-linux-gnu\\\"` or a list of targets, e.g.\\n`[\\\"aarch64-apple-darwin\\\", \\\"x86_64-apple-darwin\\\"]`.\\n\\nAliased as `\\\"checkOnSave.targets\\\"`.\",\n-                    \"default\": [],\n+                    \"default\": null,\n                     \"anyOf\": [\n+                        {\n+                            \"type\": \"null\"\n+                        },\n                         {\n                             \"type\": \"string\"\n                         },"}]}