{"sha": "f22aabc1360eb7e900a4495bc68f3302c7c49a7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMmFhYmMxMzYwZWI3ZTkwMGE0NDk1YmM2OGYzMzAyYzdjNDlhN2M=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-12-20T14:43:30Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-12-20T14:43:30Z"}, "message": "Use unwrap_or_default", "tree": {"sha": "a6da34eb24dc8cb312fb14ec7645921f629237d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6da34eb24dc8cb312fb14ec7645921f629237d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f22aabc1360eb7e900a4495bc68f3302c7c49a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f22aabc1360eb7e900a4495bc68f3302c7c49a7c", "html_url": "https://github.com/rust-lang/rust/commit/f22aabc1360eb7e900a4495bc68f3302c7c49a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f22aabc1360eb7e900a4495bc68f3302c7c49a7c/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "133b4063a696ab9fbf350b2235c006bdd623b136", "url": "https://api.github.com/repos/rust-lang/rust/commits/133b4063a696ab9fbf350b2235c006bdd623b136", "html_url": "https://github.com/rust-lang/rust/commit/133b4063a696ab9fbf350b2235c006bdd623b136"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ae5d639276ea72f741b2cdb2af6cfd79bd046f67", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f22aabc1360eb7e900a4495bc68f3302c7c49a7c/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22aabc1360eb7e900a4495bc68f3302c7c49a7c/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=f22aabc1360eb7e900a4495bc68f3302c7c49a7c", "patch": "@@ -104,7 +104,7 @@ impl ast::ItemList {\n             }\n         };\n \n-        let indent = leading_indent(self.syntax()).unwrap_or(\"\".into());\n+        let indent = leading_indent(self.syntax()).unwrap_or_default();\n         let ws = tokens::WsBuilder::new(&format!(\"\\n{}\", indent));\n         let to_insert = iter::once(ws.ws().into());\n         match existing_ws {\n@@ -133,7 +133,7 @@ impl ast::RecordFieldList {\n         let space = if is_multiline {\n             ws = tokens::WsBuilder::new(&format!(\n                 \"\\n{}    \",\n-                leading_indent(self.syntax()).unwrap_or(\"\".into())\n+                leading_indent(self.syntax()).unwrap_or_default()\n             ));\n             ws.ws()\n         } else {"}]}