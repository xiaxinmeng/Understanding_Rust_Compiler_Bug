{"sha": "3177286a248b4ca308fbc6b2b22689123bccaeec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNzcyODZhMjQ4YjRjYTMwOGZiYzZiMmIyMjY4OTEyM2JjY2FlZWM=", "commit": {"author": {"name": "Margaret Meyerhofer", "email": "mmeyerho@andrew", "date": "2012-05-23T00:49:16Z"}, "committer": {"name": "Margaret Meyerhofer", "email": "mmeyerho@andrew", "date": "2012-05-23T00:49:16Z"}, "message": "Changed the pretty printer also read #! comments", "tree": {"sha": "9491246bb545e017ecf5b744d1b67f9930bac6e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9491246bb545e017ecf5b744d1b67f9930bac6e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3177286a248b4ca308fbc6b2b22689123bccaeec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3177286a248b4ca308fbc6b2b22689123bccaeec", "html_url": "https://github.com/rust-lang/rust/commit/3177286a248b4ca308fbc6b2b22689123bccaeec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3177286a248b4ca308fbc6b2b22689123bccaeec/comments", "author": null, "committer": null, "parents": [{"sha": "f1cea3ce21eb896b0849eca0a8fd9ea4e03ab35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1cea3ce21eb896b0849eca0a8fd9ea4e03ab35f", "html_url": "https://github.com/rust-lang/rust/commit/f1cea3ce21eb896b0849eca0a8fd9ea4e03ab35f"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "9fa4a4c3e8c18ea139f4e793754bb4377696f2db", "filename": "src/librustsyntax/parse/comments.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3177286a248b4ca308fbc6b2b22689123bccaeec/src%2Flibrustsyntax%2Fparse%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3177286a248b4ca308fbc6b2b22689123bccaeec/src%2Flibrustsyntax%2Fparse%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Fcomments.rs?ref=3177286a248b4ca308fbc6b2b22689123bccaeec", "patch": "@@ -1,4 +1,5 @@\n import io::reader_util;\n+import io::println;//XXXXXXXXxxx\n import util::interner;\n import lexer::{ reader, new_reader, next_token, is_whitespace };\n \n@@ -28,7 +29,8 @@ fn read_to_eol(rdr: reader) -> str {\n \n fn read_one_line_comment(rdr: reader) -> str {\n     let val = read_to_eol(rdr);\n-    assert (val[0] == '/' as u8 && val[1] == '/' as u8);\n+    assert ((val[0] == '/' as u8 && val[1] == '/' as u8) ||\n+            (val[0] == '#' as u8 && val[1] == '!' as u8));\n     ret val;\n }\n \n@@ -53,6 +55,15 @@ fn consume_whitespace_counting_blank_lines(rdr: reader, &comments: [cmnt]) {\n     }\n }\n \n+fn read_shebang_comment(rdr: reader, code_to_the_left: bool) -> cmnt {\n+    #debug(\">>> shebang comment\");\n+    let p = rdr.chpos;\n+    #debug(\"<<< shebang comment\");\n+    ret {style: if code_to_the_left { trailing } else { isolated },\n+         lines: [read_one_line_comment(rdr)],\n+         pos: p};\n+}\n+\n fn read_line_comments(rdr: reader, code_to_the_left: bool) -> cmnt {\n     #debug(\">>> line comments\");\n     let p = rdr.chpos;\n@@ -134,8 +145,9 @@ fn read_block_comment(rdr: reader, code_to_the_left: bool) -> cmnt {\n }\n \n fn peeking_at_comment(rdr: reader) -> bool {\n-    ret rdr.curr == '/' && rdr.next() == '/' ||\n-            rdr.curr == '/' && rdr.next() == '*';\n+    ret ((rdr.curr == '/' && rdr.next() == '/') ||\n+         (rdr.curr == '/' && rdr.next() == '*')) ||\n+        (rdr.curr == '#' && rdr.next() == '!');\n }\n \n fn consume_comment(rdr: reader, code_to_the_left: bool, &comments: [cmnt]) {\n@@ -144,6 +156,8 @@ fn consume_comment(rdr: reader, code_to_the_left: bool, &comments: [cmnt]) {\n         comments += [read_line_comments(rdr, code_to_the_left)];\n     } else if rdr.curr == '/' && rdr.next() == '*' {\n         comments += [read_block_comment(rdr, code_to_the_left)];\n+    } else if rdr.curr == '#' && rdr.next() == '!' {\n+        comments += [read_shebang_comment(rdr, code_to_the_left)];\n     } else { fail; }\n     #debug(\"<<< consume comment\");\n }"}]}