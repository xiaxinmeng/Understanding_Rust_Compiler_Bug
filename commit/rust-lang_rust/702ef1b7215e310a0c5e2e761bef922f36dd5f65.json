{"sha": "702ef1b7215e310a0c5e2e761bef922f36dd5f65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMmVmMWI3MjE1ZTMxMGEwYzVlMmU3NjFiZWY5MjJmMzZkZDVmNjU=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "message": "Call mark_variable_as_used_mut even after assignment errors\n\nIt doesn't actually matter if we call mark_variable_as_used_mut when the\nassignment was invalid, since the variable was still used mutably.", "tree": {"sha": "9209c0dc8d3798cccc02440c63dcb4a74a1dd712", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9209c0dc8d3798cccc02440c63dcb4a74a1dd712"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/702ef1b7215e310a0c5e2e761bef922f36dd5f65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/702ef1b7215e310a0c5e2e761bef922f36dd5f65", "html_url": "https://github.com/rust-lang/rust/commit/702ef1b7215e310a0c5e2e761bef922f36dd5f65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/702ef1b7215e310a0c5e2e761bef922f36dd5f65/comments", "author": null, "committer": null, "parents": [{"sha": "ba203c5c5de5af9941dc5be4b7c200db69b3c4d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba203c5c5de5af9941dc5be4b7c200db69b3c4d4", "html_url": "https://github.com/rust-lang/rust/commit/ba203c5c5de5af9941dc5be4b7c200db69b3c4d4"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "ac8b0867f7ac4633ac947a117997ca4c66bd0464", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/702ef1b7215e310a0c5e2e761bef922f36dd5f65/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702ef1b7215e310a0c5e2e761bef922f36dd5f65/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=702ef1b7215e310a0c5e2e761bef922f36dd5f65", "patch": "@@ -684,11 +684,9 @@ impl<'a> CheckLoanCtxt<'a> {\n         // and aliasing restrictions:\n         if assignee_cmt.mutbl.is_mutable() {\n             if check_for_aliasable_mutable_writes(self, assignment_span, assignee_cmt.clone()) {\n-                if mode != euv::Init &&\n+                if mode != euv::Init {\n                     check_for_assignment_to_restricted_or_frozen_location(\n-                        self, assignment_id, assignment_span, assignee_cmt.clone())\n-                {\n-                    // Safe, but record for lint pass later:\n+                        self, assignment_id, assignment_span, assignee_cmt.clone());\n                     mark_variable_as_used_mut(self, assignee_cmt);\n                 }\n             }"}]}