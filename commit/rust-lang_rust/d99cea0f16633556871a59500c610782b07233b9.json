{"sha": "d99cea0f16633556871a59500c610782b07233b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5OWNlYTBmMTY2MzM1NTY4NzFhNTk1MDBjNjEwNzgyYjA3MjMzYjk=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-28T11:13:42Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-28T11:13:42Z"}, "message": "Update imports and rustup", "tree": {"sha": "f1aaca561e23fc859ad93239011da773b6094548", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1aaca561e23fc859ad93239011da773b6094548"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d99cea0f16633556871a59500c610782b07233b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d99cea0f16633556871a59500c610782b07233b9", "html_url": "https://github.com/rust-lang/rust/commit/d99cea0f16633556871a59500c610782b07233b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d99cea0f16633556871a59500c610782b07233b9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b001ab33fed1fd40930ba55f2bca8738832e7185", "url": "https://api.github.com/repos/rust-lang/rust/commits/b001ab33fed1fd40930ba55f2bca8738832e7185", "html_url": "https://github.com/rust-lang/rust/commit/b001ab33fed1fd40930ba55f2bca8738832e7185"}], "stats": {"total": 323, "additions": 164, "deletions": 159}, "files": [{"sha": "7de4f850c1c2e2d1516338d21065729664feca3f", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -185,7 +185,7 @@ It's worth noting that the majority of `clippy_lints/src/lib.rs` is autogenerate\n ```rust\n // ./clippy_lints/src/else_if_without_else.rs\n \n-use rustc::lint::*;\n+use rustc::lint::{EarlyLintPass, LintArray, LintPass};\n \n // ...\n "}, {"sha": "fe00d325f7756bcb6e374bc507adfece791e5147", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::span_lint;\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use std::f64::consts as f64;\n use syntax::ast::{FloatTy, Lit, LitKind};"}, {"sha": "209963e06880583d96ab152e7a8b4900b5c113ba", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::span_lint;\n use rustc::hir;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::source_map::Span;\n "}, {"sha": "28fd96e3aac2c25aa1fe03ef3253530a95bfa4f0", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -2,7 +2,7 @@ use crate::utils::{get_trait_def_id, implements_trait, snippet_opt, span_lint_an\n use crate::utils::{higher, sugg};\n use rustc::hir;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast;\n@@ -133,7 +133,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssignOps {\n                                         // the crate node is the only one that is not in the map\n                                         if_chain! {\n                                             if parent_impl != ast::CRATE_NODE_ID;\n-                                            if let hir::map::Node::NodeItem(item) = cx.tcx.hir.get(parent_impl);\n+                                            if let hir::Node::Item(item) = cx.tcx.hir.get(parent_impl);\n                                             if let hir::ItemKind::Impl(_, _, _, _, Some(ref trait_ref), _, _) =\n                                                 item.node;\n                                             if trait_ref.path.def.def_id() == trait_id;"}, {"sha": "6614470681622c666c6edb9b23897e6247a4da50", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -6,7 +6,7 @@ use crate::utils::{\n     without_block_comments,\n };\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, TyCtxt};"}, {"sha": "86788fded05a0536b6742f6d58de95392bc205f4", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast::LitKind;"}, {"sha": "e5af07890644ff83b4e6741730eec4eb3da6fba9", "filename": "clippy_lints/src/blacklisted_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblacklisted_name.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use crate::utils::span_lint;"}, {"sha": "5c9b571c78cf61f93ff61b79e3a3dc766753459a", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;"}, {"sha": "09fcf47c920032492feb5b917ac5abcd46db7869", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -12,7 +12,7 @@\n //!\n //! This lint is **warn** by default\n \n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast;"}, {"sha": "42788e77d6ebc5f63894dbebb7b5c8668249b860", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::ty::Ty;\n use rustc::hir::*;"}, {"sha": "031b088bf9e6251e3fb60c53cb8b7f12f12f385e", "filename": "clippy_lints/src/copy_iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopy_iterator.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{is_copy, match_path, paths, span_note_and_lint};\n use rustc::hir::{Item, ItemKind};\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n \n /// **What it does:** Checks for types that implement `Copy` as well as"}, {"sha": "ee53fca9f70549db35e21dc53d818b1e570e8a4c", "filename": "clippy_lints/src/cyclomatic_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n //! calculate cyclomatic complexity and warn about overly complex functions\n \n use rustc::cfg::CFG;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, LintContext};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use rustc::ty;"}, {"sha": "09c607600767bfad5d818444e316bb8754a96165", "filename": "clippy_lints/src/default_trait_access.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_trait_access.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::TyKind;"}, {"sha": "9df2e257b1ea9b0b51b5c63a3a1dd77cad135416", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};"}, {"sha": "957ede66698fd3bede3a23867da1612943071404", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use itertools::Itertools;\n use pulldown_cmark;\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast;\n use syntax::source_map::{BytePos, Span};"}, {"sha": "70dc532e55ba432adbc32cdd76bdf9e9f5f38036", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n //! Lint on unnecessary double comparisons. Some examples:\n \n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::source_map::Span;\n "}, {"sha": "5aca7d734e2e9d514e1897e3f4628eb6f0b9713c", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;"}, {"sha": "77d3014d9fd815c6edd7342d19979ac03702a597", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::source_map::Spanned;"}, {"sha": "1259b49d93ac6db605420f08ab02a982d72fcc4f", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n //! lint on if expressions with an else if, but without a final else branch\n \n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n "}, {"sha": "86f9fbdba9ba161acba4cf2f5f570a77b4603fb0", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n //! lint when there is an enum with no variants\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use crate::utils::span_lint_and_then;"}, {"sha": "46ef16ddc7394e052074068ad2e4423ac5ddb516", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use rustc::hir::*;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::source_map::Span;"}, {"sha": "2402cfde5b38db68349e34bdb511746297e12a53", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n //! lint on C-like enums that are `repr(isize/usize)` and have values that\n //! don't fit into an `i32`\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use rustc::ty;"}, {"sha": "512775165716c2f2149aa5e382a9fb9778574b25", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n //! lint on enum variants that are prefixed or suffixed by the same characters\n \n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass, Lint};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n use syntax::source_map::Span;"}, {"sha": "a08d9f39382124b2760b43093aabd21dd0b708b3", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use crate::utils::{in_macro, implements_trait, is_copy, multispan_sugg, snippet, span_lint, span_lint_and_then, SpanlessEq};\n "}, {"sha": "e6d70b22fde2c8f9192391db756a26535c34af29", "filename": "clippy_lints/src/erasing_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ferasing_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ferasing_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ferasing_op.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant_simple, Constant};\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::source_map::Span;\n use crate::utils::{in_macro, span_lint};"}, {"sha": "3c61509d1f71a0b0f60bc41443e83341451032b0", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,6 @@\n use rustc::hir::*;\n use rustc::hir::intravisit as visit;\n-use rustc::hir::map::Node::{NodeExpr, NodeStmt};\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::middle::expr_use_visitor::*;\n use rustc::middle::mem_categorization::{cmt_, Categorization};\n@@ -100,7 +99,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         let map = &self.cx.tcx.hir;\n         if map.is_argument(consume_pat.id) {\n             // Skip closure arguments\n-            if let Some(NodeExpr(..)) = map.find(map.get_parent_node(consume_pat.id)) {\n+            if let Some(Node::Expr(..)) = map.find(map.get_parent_node(consume_pat.id)) {\n                 return;\n             }\n             if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n@@ -110,7 +109,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         }\n         if let Categorization::Rvalue(..) = cmt.cat {\n             let id = map.hir_to_node_id(cmt.hir_id);\n-            if let Some(NodeStmt(st)) = map.find(map.get_parent_node(id)) {\n+            if let Some(Node::Stmt(st)) = map.find(map.get_parent_node(id)) {\n                 if let StmtKind::Decl(ref decl, _) = st.node {\n                     if let DeclKind::Local(ref loc) = decl.node {\n                         if let Some(ref ex) = loc.init {"}, {"sha": "f60785662ddbc094145546d6d6cc4e520d717efc", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::ty;\n use rustc::hir::*;"}, {"sha": "f1c31d095e154a70855c7a408246ab105eb99cba", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::hir::*;\n use rustc::ty;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast;\n@@ -189,9 +189,9 @@ fn check_for_unsequenced_reads(vis: &mut ReadVisitor<'_, '_>) {\n         };\n \n         let stop_early = match parent_node {\n-            map::Node::NodeExpr(expr) => check_expr(vis, expr),\n-            map::Node::NodeStmt(stmt) => check_stmt(vis, stmt),\n-            map::Node::NodeItem(_) => {\n+            Node::Expr(expr) => check_expr(vis, expr),\n+            Node::Stmt(stmt) => check_stmt(vis, stmt),\n+            Node::Item(_) => {\n                 // We reached the top of the function, stop.\n                 break;\n             },"}, {"sha": "df540cad93157b479a8955e4f21387f49353327a", "filename": "clippy_lints/src/excessive_precision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_precision.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::TyKind;"}, {"sha": "f0cee563a2eb603fcb231ef46113f0157f3462ff", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use crate::utils::{is_expn_of, match_def_path, resolve_node, span_lint};"}, {"sha": "f541abee8a7ead166922c895f71cf93ebbde2877", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir;"}, {"sha": "f967b9ce58ed3e94540c1d26b13b7306a62b08cd", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;"}, {"sha": "2f46891e6a1210aa4a92fdd97c07c38cd4411494", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast;\n use crate::utils::{differing_macro_contexts, in_macro, snippet_opt, span_note_and_lint};"}, {"sha": "2f076dc1f6e54001ac547bb44afc6f5324abe222", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n use matches::matches;\n use rustc::hir::intravisit;\n use rustc::hir;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::ty;\n use rustc::hir::def::Def;\n@@ -85,9 +85,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Functions {\n         span: Span,\n         nodeid: ast::NodeId,\n     ) {\n-        use rustc::hir::map::Node::*;\n-\n-        let is_impl = if let Some(NodeItem(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(nodeid)) {\n+        let is_impl = if let Some(hir::Node::Item(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(nodeid)) {\n             matches!(item.node, hir::ItemKind::Impl(_, _, _, _, Some(_), _, _))\n         } else {\n             false"}, {"sha": "3fa30dee988da81d5ae0b68a115195fb2ca94ec0", "filename": "clippy_lints/src/identity_conversion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_conversion.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use syntax::ast::NodeId;"}, {"sha": "b0c290ffc0e339fb1702d0fcc0c93c32d324b8cd", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant_simple, Constant};\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::source_map::Span;\n use crate::utils::{in_macro, snippet, span_lint, unsext, clip};"}, {"sha": "f1b8aadef6706660e2f4ab65548f3332135c1c2f", "filename": "clippy_lints/src/if_let_redundant_pattern_matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use crate::utils::{match_qpath, paths, snippet, span_lint_and_then};"}, {"sha": "153bfbb97798cb1df1472bb7ddc4960789e82e3a", "filename": "clippy_lints/src/if_not_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n //! lint on if branches that could be swapped so no `!` operation is necessary\n //! on the condition\n \n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n "}, {"sha": "01a659473c1a56ea7b63d8f6186f437f5538b756", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -5,7 +5,7 @@ use crate::utils;\n use crate::utils::higher;\n use crate::utils::higher::Range;\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::ty;\n use syntax::ast::RangeLimits;"}, {"sha": "a085f32ed841fd51c3c31e96ec842db3e80c664b", "filename": "clippy_lints/src/infallible_destructuring_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use super::utils::{get_arg_name, match_var, remove_blocks, snippet, span_lint_and_sugg};\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n "}, {"sha": "d42a2380ec46c45a428952672101b9436b104422", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use crate::utils::{get_trait_def_id, higher, implements_trait, match_qpath, paths, span_lint};\n "}, {"sha": "46dbb5bc39f902cec416059e4051b531e105c4f9", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,11 +1,12 @@\n //! lint on inherent implementations\n \n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use std::collections::HashMap;\n use std::default::Default;\n use syntax_pos::Span;\n+use crate::utils::span_lint_and_then;\n \n /// **What it does:** Checks for multiple inherent implementations of a struct\n ///\n@@ -81,12 +82,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     .map(|(span, _)| span);\n                 if let Some(initial_span) = impl_spans.nth(0) {\n                     impl_spans.for_each(|additional_span| {\n-                        cx.span_lint_note(\n+                        span_lint_and_then(\n+                            cx,\n                             MULTIPLE_INHERENT_IMPL,\n                             *additional_span,\n                             \"Multiple implementations of this structure\",\n-                            *initial_span,\n-                            \"First implementation here\",\n+                            |db| {\n+                                db.span_note(\n+                                    *initial_span,\n+                                    \"First implementation here\",\n+                                );\n+                            },\n                         )\n                     })\n                 }"}, {"sha": "b879d7349291bd95048460445c2a06c234eb95dc", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n //! checks for `#[inline]` on trait methods without bodies\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use syntax::ast::{Attribute, Name};"}, {"sha": "086567ac5317487c2a9b4f9b627c89abf69b20b0", "filename": "clippy_lints/src/int_plus_one.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fint_plus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fint_plus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fint_plus_one.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n //! lint on blocks unnecessarily using >= with a + 1 or - 1\n \n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n "}, {"sha": "58f1575abb68003e84aa18efc3eb99a189d159c8", "filename": "clippy_lints/src/invalid_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finvalid_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Finvalid_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finvalid_ref.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;"}, {"sha": "2ea6c0e0447a9eacf33d1a6c1e67dc630cdabea7", "filename": "clippy_lints/src/items_after_statements.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_statements.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n //! lint when items are used after statements\n \n use matches::matches;\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n use crate::utils::{in_macro, span_lint};"}, {"sha": "3e49f866170c98e04f7594086b365dba77936234", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n //! lint when there is a large size difference between variants on an enum\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use crate::utils::{snippet_opt, span_lint_and_then};"}, {"sha": "e14f3bc24b7408aa792fe98f866f67b936e85f40", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use rustc::hir::def_id::DefId;\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::ty;\n use std::collections::HashSet;"}, {"sha": "494efc225384766c36bfa4f837df3a6c8c1bfdc5", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir;"}, {"sha": "7da62b9d458670e6b8e0540e62d611b9203ac858", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use crate::reexport::*;\n use matches::matches;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::def::Def;\n use rustc::hir::*;"}, {"sha": "9437b243cbb96587efb5f20d9d2f06f87fbc5194", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n //! Lints concerned with the grouping of digits with underscores in integral or\n //! floating-point literal expressions.\n \n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast::*;"}, {"sha": "988256ab29ef724e0371146a9a236940db0a91c7", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -4,8 +4,7 @@ use rustc::hir::*;\n use rustc::hir::def::Def;\n use rustc::hir::def_id;\n use rustc::hir::intravisit::{walk_block, walk_decl, walk_expr, walk_pat, walk_stmt, NestedVisitorMap, Visitor};\n-use rustc::hir::map::Node::{NodeBlock, NodeExpr, NodeStmt};\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::middle::region;\n@@ -1330,7 +1329,7 @@ fn check_for_loop_explicit_counter<'a, 'tcx>(\n     let parent_scope = map.get_enclosing_scope(expr.id)\n         .and_then(|id| map.get_enclosing_scope(id));\n     if let Some(parent_id) = parent_scope {\n-        if let NodeBlock(block) = map.get(parent_id) {\n+        if let Node::Block(block) = map.get(parent_id) {\n             for (id, _) in visitor\n                 .states\n                 .iter()\n@@ -1506,7 +1505,7 @@ fn check_for_mutability(cx: &LateContext<'_, '_>, bound: &Expr) -> Option<NodeId\n             if let Def::Local(node_id) = def {\n                 let node_str = cx.tcx.hir.get(node_id);\n                 if_chain! {\n-                    if let map::Node::NodeBinding(pat) = node_str;\n+                    if let Node::Binding(pat) = node_str;\n                     if let PatKind::Binding(bind_ann, _, _, _) = pat.node;\n                     if let BindingAnnotation::Mutable = bind_ann;\n                     then {\n@@ -2047,7 +2046,7 @@ fn is_conditional(expr: &Expr) -> bool {\n fn is_nested(cx: &LateContext<'_, '_>, match_expr: &Expr, iter_expr: &Expr) -> bool {\n     if_chain! {\n         if let Some(loop_block) = get_enclosing_block(cx, match_expr.id);\n-        if let Some(map::Node::NodeExpr(loop_expr)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(loop_block.id));\n+        if let Some(Node::Expr(loop_expr)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(loop_block.id));\n         then {\n             return is_loop_nested(cx, loop_expr, iter_expr)\n         }\n@@ -2068,13 +2067,13 @@ fn is_loop_nested(cx: &LateContext<'_, '_>, loop_expr: &Expr, iter_expr: &Expr)\n             return false;\n         }\n         match cx.tcx.hir.find(parent) {\n-            Some(NodeExpr(expr)) => match expr.node {\n+            Some(Node::Expr(expr)) => match expr.node {\n                 ExprKind::Loop(..) | ExprKind::While(..) => {\n                     return true;\n                 },\n                 _ => (),\n             },\n-            Some(NodeBlock(block)) => {\n+            Some(Node::Block(block)) => {\n                 let mut block_visitor = LoopNestVisitor {\n                     id,\n                     iterator: iter_name,\n@@ -2085,7 +2084,7 @@ fn is_loop_nested(cx: &LateContext<'_, '_>, loop_expr: &Expr, iter_expr: &Expr)\n                     return false;\n                 }\n             },\n-            Some(NodeStmt(_)) => (),\n+            Some(Node::Stmt(_)) => (),\n             _ => {\n                 return false;\n             },"}, {"sha": "bd304db2dd59002090e0c163c5b636ab787251f8", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "2376b1a2b48e18e1e8a9b40c7ec5f5b09bda972b", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;"}, {"sha": "6dc16e623a421b14f1c483dce925410cad0da2aa", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};"}, {"sha": "76df98727f9c66b3930208197fe5cd701f6bf4eb", "filename": "clippy_lints/src/mem_forget.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::{Expr, ExprKind};\n use crate::utils::{match_def_path, opt_def_id, paths, span_lint};"}, {"sha": "3bc1282fa15293f31180a02356f167e06f6b504e", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use matches::matches;\n use rustc::hir;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, Lint, LintContext};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};\n@@ -1145,14 +1145,14 @@ fn lint_clone_on_copy(cx: &LateContext<'_, '_>, expr: &hir::Expr, arg: &hir::Exp\n             if let ty::Ref(..) = cx.tables.expr_ty(arg).sty {\n                 let parent = cx.tcx.hir.get_parent_node(expr.id);\n                 match cx.tcx.hir.get(parent) {\n-                    hir::map::NodeExpr(parent) => match parent.node {\n+                    hir::Node::Expr(parent) => match parent.node {\n                         // &*x is a nop, &x.clone() is not\n                         hir::ExprKind::AddrOf(..) |\n                         // (*x).func() is useless, x.clone().func() can work in case func borrows mutably\n                         hir::ExprKind::MethodCall(..) => return,\n                         _ => {},\n                     }\n-                    hir::map::NodeStmt(stmt) => {\n+                    hir::Node::Stmt(stmt) => {\n                         if let hir::StmtKind::Decl(ref decl, _) = stmt.node {\n                             if let hir::DeclKind::Local(ref loc) = decl.node {\n                                 if let hir::PatKind::Ref(..) = loc.pat.node {"}, {"sha": "b187c28def6d2a15112daa6f960efe13663eb5e9", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,7 +1,7 @@\n use crate::consts::{constant_simple, Constant};\n use crate::utils::{match_def_path, opt_def_id, paths, span_lint};\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use std::cmp::Ordering;\n "}, {"sha": "7fab12bd9d90e5ccdcd3ac5c4604703d8d6a3bc9", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -2,7 +2,7 @@ use crate::reexport::*;\n use matches::matches;\n use rustc::hir::*;\n use rustc::hir::intravisit::FnKind;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;\n@@ -522,7 +522,7 @@ fn check_to_owned(cx: &LateContext<'_, '_>, expr: &Expr, other: &Expr) {\n             let parent_fn = cx.tcx.hir.get_parent(expr.id);\n             let parent_impl = cx.tcx.hir.get_parent(parent_fn);\n             if parent_impl != CRATE_NODE_ID {\n-                if let map::NodeItem(item) = cx.tcx.hir.get(parent_impl) {\n+                if let Node::Item(item) = cx.tcx.hir.get(parent_impl) {\n                     if let ItemKind::Impl(.., Some(ref trait_ref), _, _) = item.node {\n                         if trait_ref.path.def.def_id() == partial_eq_trait_id {\n                             // we are implementing PartialEq, don't suggest not doing `to_owned`, otherwise"}, {"sha": "4edb6a9133a7e7b44b9ab46f613fc202535da572", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass, LintContext, in_external_macro};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use std::collections::HashMap;"}, {"sha": "339ab7577024001c998f0aa66b956302cc9e74ba", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -19,13 +19,13 @@\n //\n \n use rustc::hir;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, LintContext};\n use rustc::{declare_lint, lint_array};\n use rustc::ty;\n use syntax::ast;\n use syntax::attr;\n use syntax::source_map::Span;\n-use crate::utils::in_macro;\n+use crate::utils::{span_lint, in_macro};\n \n /// **What it does:** Warns if there is missing doc for any documentable item\n /// (public or private).\n@@ -87,7 +87,8 @@ impl MissingDoc {\n             .iter()\n             .any(|a| a.is_value_str() && a.name() == \"doc\");\n         if !has_doc {\n-            cx.span_lint(\n+            span_lint(\n+                cx,\n                 MISSING_DOCS_IN_PRIVATE_ITEMS,\n                 sp,\n                 &format!(\"missing documentation for {}\", desc),"}, {"sha": "c0f12bd3f7eac0902673e39a404317bbe21a8aa2", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -10,10 +10,11 @@\n //\n \n use rustc::hir;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast;\n use syntax::source_map::Span;\n+use crate::utils::span_lint;\n \n /// **What it does:** it lints if an exported function, method, trait method with default impl,\n /// or trait method impl is not `#[inline]`.\n@@ -74,7 +75,8 @@ fn check_missing_inline_attrs(cx: &LateContext<'_, '_>,\n         .iter()\n         .any(|a| a.name() == \"inline\" );\n     if !has_inline {\n-        cx.span_lint(\n+        span_lint(\n+            cx,\n             MISSING_INLINE_IN_PUBLIC_ITEMS,\n             sp,\n             &format!(\"missing `#[inline]` for {}\", desc),"}, {"sha": "78458843ffc2fbd356e1da5af5c4e56a4612217d", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,8 +1,9 @@\n //! lint on multiple versions of a crate being used\n \n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n+use crate::utils::span_lint;\n \n use cargo_metadata;\n use itertools::Itertools;\n@@ -43,7 +44,8 @@ impl EarlyLintPass for Pass {\n         let metadata = match cargo_metadata::metadata_deps(None, true) {\n             Ok(metadata) => metadata,\n             Err(_) => {\n-                cx.span_lint(\n+                span_lint(\n+                    cx,\n                     MULTIPLE_CRATE_VERSIONS,\n                     krate.span,\n                     \"could not read cargo metadata\"\n@@ -62,7 +64,8 @@ impl EarlyLintPass for Pass {\n             if group.len() > 1 {\n                 let versions = group.into_iter().map(|p| p.version).join(\", \");\n \n-                cx.span_lint(\n+                span_lint(\n+                    cx,\n                     MULTIPLE_CRATE_VERSIONS,\n                     krate.span,\n                     &format!(\"multiple versions for dependency `{}`: {}\", name, versions),"}, {"sha": "5c8a2648a187a00066da20c9e72cad99f3cfd3dc", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use rustc::hir;\n use rustc::hir::intravisit;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use rustc::ty;\n use crate::utils::{higher, span_lint};"}, {"sha": "5b562f3dd34c516aacb500edf88a01f2514c6b1a", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::ty::{self, Ty};\n use rustc::ty::subst::Subst;"}, {"sha": "90b38440a832d3acae56130dcfd7018bf9f665b3", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -2,7 +2,7 @@\n //!\n //! This lint is **warn** by default\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use syntax::ast::LitKind;"}, {"sha": "b8ac425fd5916d678b555beb60143b37edfcef63", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -2,7 +2,7 @@\n //!\n //! This lint is **warn** by default\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::{BindingAnnotation, Expr, ExprKind, MutImmutable, Pat, PatKind};"}, {"sha": "d5a16f2122fda3140d82d753c153c1dcc66be516", "filename": "clippy_lints/src/needless_borrowed_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -2,7 +2,7 @@\n //!\n //! This lint is **warn** by default\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::{BindingAnnotation, MutImmutable, Pat, PatKind};"}, {"sha": "e5f01847ed1e02141e034c770be9722f164e6d54", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -27,7 +27,7 @@\n //! ```\n //!\n //! This lint is **warn** by default.\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast;\n use syntax::source_map::{original_sp, DUMMY_SP};"}, {"sha": "06baf895c936536e1fb3aa15525b5bccc917ea5e", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,8 +1,7 @@\n use matches::matches;\n use rustc::hir::*;\n-use rustc::hir::map::*;\n use rustc::hir::intravisit::FnKind;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, RegionKind, TypeFoldable};\n@@ -90,7 +89,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n         }\n \n         // Exclude non-inherent impls\n-        if let Some(NodeItem(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(node_id)) {\n+        if let Some(Node::Item(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(node_id)) {\n             if matches!(item.node, ItemKind::Impl(_, _, _, _, Some(_), _, _) |\n                 ItemKind::Trait(..))\n             {\n@@ -340,7 +339,7 @@ impl<'a, 'tcx> MovedVariablesCtxt<'a, 'tcx> {\n \n                 if let Some(node) = self.cx.tcx.hir.find(id) {\n                     match node {\n-                        map::Node::NodeExpr(e) => {\n+                        Node::Expr(e) => {\n                             // `match` and `if let`\n                             if let ExprKind::Match(ref c, ..) = e.node {\n                                 self.spans_need_deref\n@@ -350,7 +349,7 @@ impl<'a, 'tcx> MovedVariablesCtxt<'a, 'tcx> {\n                             }\n                         },\n \n-                        map::Node::NodeStmt(s) => {\n+                        Node::Stmt(s) => {\n                             // `let <pat> = x;`\n                             if_chain! {\n                                 if let StmtKind::Decl(ref decl, _) = s.node;"}, {"sha": "bec875d16d608441c1e5992b73917fe4273753e4", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n \n@@ -20,7 +20,7 @@ use crate::utils::{self, paths, span_lint};\n ///\n /// ```rust\n /// use std::cmp::Ordering;\n-/// \n+///\n /// // Bad\n /// let a = 1.0;\n /// let b = std::f64::NAN;"}, {"sha": "5246e62aecbfbb89be384a797d40bb7eb3773c8b", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::source_map::{Span, Spanned};"}, {"sha": "4dd2ea9839979d0a152fcd3626fdf7ef6fd160df", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use rustc::hir::def_id::DefId;\n use rustc::hir;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};"}, {"sha": "c2692f8818764a26492e014a48f7ee9ef5e79664", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -212,7 +212,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonCopyConst {\n                 if parent_id == cur_expr.id {\n                     break;\n                 }\n-                if let Some(map::NodeExpr(parent_expr)) = cx.tcx.hir.find(parent_id) {\n+                if let Some(Node::Expr(parent_expr)) = cx.tcx.hir.find(parent_id) {\n                     match &parent_expr.node {\n                         ExprKind::AddrOf(..) => {\n                             // `&e` => `e` must be referenced"}, {"sha": "14aba635c1a5b35731b56ca90d91fcda0a197f82", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LintArray, LintPass, EarlyContext, EarlyLintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::source_map::Span;\n use syntax::symbol::LocalInternedString;"}, {"sha": "52eb86a0bc0b134bfe9af99d5123645076f33577", "filename": "clippy_lints/src/ok_if_let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fok_if_let.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "bfb88449fba0629fb6bdacbef8b58499a63025a2", "filename": "clippy_lints/src/open_options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::{Expr, ExprKind};\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::LitKind;\n use syntax::source_map::{Span, Spanned};"}, {"sha": "cb230bc9fc5719f4c36ec16720fb4a24760a9abf", "filename": "clippy_lints/src/overflow_check_conditional.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "e21c071861251c098a399e5c1395f8007f85dcd0", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast::LitKind;"}, {"sha": "fe93a8bbe99aa62d0867a42746b24dd8cad7e823", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "42bbe68783243df98a94ffb8ae5c44fc64b240a8", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n use syntax::source_map::Spanned;"}, {"sha": "cedb6e0b26bb834121e3f56aacae3aae93db9349", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -2,9 +2,8 @@\n \n use std::borrow::Cow;\n use rustc::hir::*;\n-use rustc::hir::map::NodeItem;\n use rustc::hir::QPath;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;\n@@ -112,7 +111,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for PointerPass {\n \n     fn check_impl_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx ImplItem) {\n         if let ImplItemKind::Method(ref sig, body_id) = item.node {\n-            if let Some(NodeItem(it)) = cx.tcx.hir.find(cx.tcx.hir.get_parent(item.id)) {\n+            if let Some(Node::Item(it)) = cx.tcx.hir.find(cx.tcx.hir.get_parent(item.id)) {\n                 if let ItemKind::Impl(_, _, _, _, Some(_), _, _) = it.node {\n                     return; // ignore trait impls\n                 }"}, {"sha": "cb98ecd3decef77d67ebf2edf9ee7cfe420af8b3", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "bef4532bbe5358c21f19ef8600031db6111db33d", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "3021ef2dc471c7a9dda5cd3a19fefa56c736265a", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n use crate::utils::{span_lint_and_sugg};"}, {"sha": "f5bc03c6d6eae3de4748bca82c37f731316515af", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use syntax::ast::{Expr, ExprKind, UnOp};\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use crate::utils::{snippet, span_lint_and_sugg};"}, {"sha": "5fe37e164843943d2dbed5489f495d7066a41d67", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use regex_syntax;\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use std::collections::HashSet;"}, {"sha": "093ad0358bc14f27338ce0762539f9a9970185d7", "filename": "clippy_lints/src/replace_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freplace_consts.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir;"}, {"sha": "694433a8b92a0ebe66a6a6920f01af0370a181c6", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast;"}, {"sha": "41d8b1f7d2472aaef1ae430cdbca5ea082946195", "filename": "clippy_lints/src/serde_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fserde_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fserde_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde_api.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use crate::utils::{get_trait_def_id, paths, span_lint};"}, {"sha": "4964b7e79ef539c024cd051de86f4711f1e564f1", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use crate::reexport::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use rustc::hir::intravisit::FnKind;"}, {"sha": "2b915f461757e0d1f92e2e1249f4818a26330f8a", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::source_map::Spanned;\n use crate::utils::SpanlessEq;"}, {"sha": "7e0684e7f16a19383c2b833524218a04eb36765f", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir;\n@@ -76,7 +76,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for SuspiciousImpl {\n             // as a child node\n             let mut parent_expr = cx.tcx.hir.get_parent_node(expr.id);\n             while parent_expr != ast::CRATE_NODE_ID {\n-                if let hir::map::Node::NodeExpr(e) = cx.tcx.hir.get(parent_expr) {\n+                if let hir::Node::Expr(e) = cx.tcx.hir.get(parent_expr) {\n                     match e.node {\n                         hir::ExprKind::Binary(..)\n                         | hir::ExprKind::Unary(hir::UnOp::UnNot, _)\n@@ -187,7 +187,7 @@ fn check_binop<'a>(\n \n     if_chain! {\n         if parent_impl != ast::CRATE_NODE_ID;\n-        if let hir::map::Node::NodeItem(item) = cx.tcx.hir.get(parent_impl);\n+        if let hir::Node::Item(item) = cx.tcx.hir.get(parent_impl);\n         if let hir::ItemKind::Impl(_, _, _, _, Some(ref trait_ref), _, _) = item.node;\n         if let Some(idx) = trait_ids.iter().position(|&tid| tid == trait_ref.path.def.def_id());\n         if binop != expected_ops[idx];"}, {"sha": "7fd72cbea326732fd89ded4a9d9ab4ec5480114a", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,6 +1,6 @@\n use matches::matches;\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;"}, {"sha": "9fe22b7dafcabe8ee23e5892f23ed774d02538f8", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};"}, {"sha": "8f417861ca94266f41db43306d2a90bf764fe97f", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -3,9 +3,8 @@ use std::cmp;\n use matches::matches;\n use rustc::hir;\n use rustc::hir::*;\n-use rustc::hir::map::*;\n use rustc::hir::intravisit::FnKind;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::TyKind;\n@@ -109,7 +108,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TriviallyCopyPassByRef {\n         }\n \n         // Exclude non-inherent impls\n-        if let Some(NodeItem(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(node_id)) {\n+        if let Some(Node::Item(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(node_id)) {\n             if matches!(item.node, ItemKind::Impl(_, _, _, _, Some(_), _, _) |\n                 ItemKind::Trait(..))\n             {"}, {"sha": "a38d232d3e1d6388b7d66eba444c838056f5db4f", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -2,7 +2,7 @@ use crate::reexport::*;\n use rustc::hir;\n use rustc::hir::*;\n use rustc::hir::intravisit::{walk_body, walk_expr, walk_ty, FnKind, NestedVisitorMap, Visitor};\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, in_external_macro, LintContext};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty, TyCtxt, TypeckTables};\n@@ -140,7 +140,7 @@ impl LintPass for TypePass {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypePass {\n     fn check_fn(&mut self, cx: &LateContext<'_, '_>, _: FnKind<'_>, decl: &FnDecl, _: &Body, _: Span, id: NodeId) {\n         // skip trait implementations, see #605\n-        if let Some(map::NodeItem(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent(id)) {\n+        if let Some(hir::Node::Item(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent(id)) {\n             if let ItemKind::Impl(_, _, _, _, Some(..), _, _) = item.node {\n                 return;\n             }\n@@ -514,7 +514,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnitArg {\n                         if !is_questionmark_desugar_marked_call(expr) {\n                             if_chain!{\n                                 let opt_parent_node = map.find(map.get_parent_node(expr.id));\n-                                if let Some(hir::map::NodeExpr(parent_expr)) = opt_parent_node;\n+                                if let Some(hir::Node::Expr(parent_expr)) = opt_parent_node;\n                                 if is_questionmark_desugar_marked_call(parent_expr);\n                                 then {}\n                                 else {"}, {"sha": "4e5c9a94424ee7dd05105f26b0ab92d6530bbee6", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use syntax::ast::{LitKind, NodeId};"}, {"sha": "753ee40be7fa496d31d0a1200bc1f09074b6596c", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n use syntax::source_map::Span;"}, {"sha": "e388ca93888cd1a725dc2732cdb20dedb07e793c", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir;\n use crate::utils::{is_try, match_qpath, match_trait_method, paths, span_lint};"}, {"sha": "1fd143d6d03b2cd45e1661317611108d856c2553", "filename": "clippy_lints/src/unused_label.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funused_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funused_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_label.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir;\n use rustc::hir::intravisit::{walk_expr, walk_fn, FnKind, NestedVisitorMap, Visitor};"}, {"sha": "0435db93ee62a45e1825e1a6bea818515ccf6696", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n "}, {"sha": "f45ec75aedc645a2336a9b69db1203a418a19b4a", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -3,7 +3,7 @@\n \n #![allow(print_stdout, use_debug)]\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir;\n use rustc::hir::{Expr, ExprKind, QPath, TyKind, Pat, PatKind, BindingAnnotation, StmtKind, DeclKind, Stmt};"}, {"sha": "30c6db977f7f75a708b0590405600e76537dc581", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use crate::consts::{constant_simple, constant_context};\n-use rustc::lint::*;\n+use rustc::lint::LateContext;\n use rustc::hir::*;\n use rustc::ty::{TypeckTables};\n use std::hash::{Hash, Hasher};"}, {"sha": "73c86d8bf67cdc4c69f4cd721cb2c69004d8c7d0", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -2,7 +2,7 @@\n \n //! checks for attributes\n \n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir;\n use rustc::hir::print;"}, {"sha": "39a3d9b3b74e636730947885e98a0743c9cb90e7", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass, EarlyContext, EarlyLintPass};\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use rustc::hir;"}, {"sha": "976161a40a9c4f0e8be18fa48aacd974cc6b7886", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -6,7 +6,7 @@ use rustc::hir::*;\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::hir::def::Def;\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n-use rustc::hir::map::Node;\n+use rustc::hir::Node;\n use rustc::lint::{LateContext, Level, Lint, LintContext};\n use rustc::session::Session;\n use rustc::traits;\n@@ -309,9 +309,9 @@ pub fn method_chain_args<'a>(expr: &'a Expr, methods: &[&str]) -> Option<Vec<&'a\n pub fn get_item_name(cx: &LateContext<'_, '_>, expr: &Expr) -> Option<Name> {\n     let parent_id = cx.tcx.hir.get_parent(expr.id);\n     match cx.tcx.hir.find(parent_id) {\n-        Some(Node::NodeItem(&Item { ref name, .. })) => Some(*name),\n-        Some(Node::NodeTraitItem(&TraitItem { ident, .. })) |\n-        Some(Node::NodeImplItem(&ImplItem { ident, .. })) => Some(ident.name),\n+        Some(Node::Item(&Item { ref name, .. })) => Some(*name),\n+        Some(Node::TraitItem(&TraitItem { ident, .. })) |\n+        Some(Node::ImplItem(&ImplItem { ident, .. })) => Some(ident.name),\n         _ => None,\n     }\n }\n@@ -464,7 +464,7 @@ pub fn get_parent_expr<'c>(cx: &'c LateContext<'_, '_>, e: &Expr) -> Option<&'c\n         return None;\n     }\n     map.find(parent_id).and_then(|node| {\n-        if let Node::NodeExpr(parent) = node {\n+        if let Node::Expr(parent) = node {\n             Some(parent)\n         } else {\n             None\n@@ -478,11 +478,11 @@ pub fn get_enclosing_block<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, node: NodeI\n         .and_then(|enclosing_id| map.find(enclosing_id));\n     if let Some(node) = enclosing_node {\n         match node {\n-            Node::NodeBlock(block) => Some(block),\n-            Node::NodeItem(&Item {\n+            Node::Block(block) => Some(block),\n+            Node::Item(&Item {\n                 node: ItemKind::Fn(_, _, _, eid),\n                 ..\n-            }) | Node::NodeImplItem(&ImplItem {\n+            }) | Node::ImplItem(&ImplItem {\n                 node: ImplItemKind::Method(_, eid),\n                 ..\n             }) => match cx.tcx.hir.body(eid).value.node {"}, {"sha": "2661bc945f36ba175d70b9b76386a51210fcc609", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::LateContext;\n \n use rustc::hir::def::Def;\n use rustc::hir::*;"}, {"sha": "8e49a3d4326a8278686d2569aed44c9ab5b601fc", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use rustc::hir::*;\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};"}, {"sha": "bc9fa09c9322a87d7dc79cb31a54c69c05659d05", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,4 +1,4 @@\n-use rustc::lint::*;\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n use syntax::tokenstream::{ThinTokenStream, TokenStream};"}, {"sha": "77bc48027420246c1b8c556a837032eaf1490dce", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99cea0f16633556871a59500c610782b07233b9/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=d99cea0f16633556871a59500c610782b07233b9", "patch": "@@ -1,5 +1,5 @@\n use crate::consts::{constant_simple, Constant};\n-use rustc::lint::*;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::*;"}]}