{"sha": "d91946b3f4ea04bc205b5796fc4af0f13069d204", "node_id": "C_kwDOAAsO6NoAKGQ5MTk0NmIzZjRlYTA0YmMyMDViNTc5NmZjNGFmMGYxMzA2OWQyMDQ", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-23T01:11:16Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-09-30T20:52:57Z"}, "message": "Remove `Path.global`", "tree": {"sha": "a873fb15224a9b4aafc2748e64e0de2b7aa1dc57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a873fb15224a9b4aafc2748e64e0de2b7aa1dc57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d91946b3f4ea04bc205b5796fc4af0f13069d204", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d91946b3f4ea04bc205b5796fc4af0f13069d204", "html_url": "https://github.com/rust-lang/rust/commit/d91946b3f4ea04bc205b5796fc4af0f13069d204", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d91946b3f4ea04bc205b5796fc4af0f13069d204/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dc08b909b469d58dd8fa54c57ab193b8cf95257", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc08b909b469d58dd8fa54c57ab193b8cf95257", "html_url": "https://github.com/rust-lang/rust/commit/6dc08b909b469d58dd8fa54c57ab193b8cf95257"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "daff902aaa5d689192bec3f40187b7344f248331", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d91946b3f4ea04bc205b5796fc4af0f13069d204/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91946b3f4ea04bc205b5796fc4af0f13069d204/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=d91946b3f4ea04bc205b5796fc4af0f13069d204", "patch": "@@ -526,7 +526,6 @@ fn build_module(\n                         item.ident.name,\n                         clean::ImportSource {\n                             path: clean::Path {\n-                                global: false,\n                                 res,\n                                 segments: vec![clean::PathSegment {\n                                     name: prim_ty.as_sym(),"}, {"sha": "a7960807f4c15a3e81771cc3fbe5f630dee3b9b0", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d91946b3f4ea04bc205b5796fc4af0f13069d204/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91946b3f4ea04bc205b5796fc4af0f13069d204/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=d91946b3f4ea04bc205b5796fc4af0f13069d204", "patch": "@@ -1277,7 +1277,6 @@ fn clean_qpath(hir_ty: &hir::Ty<'_>, cx: &mut DocContext<'_>) -> Type {\n             let trait_segments = &segments[..segments.len() - 1];\n             let trait_def = cx.tcx.associated_item(p.res.def_id()).container.id();\n             let trait_path = self::Path {\n-                global: p.is_global(),\n                 res: Res::Def(DefKind::Trait, trait_def),\n                 segments: trait_segments.clean(cx),\n             };\n@@ -1728,11 +1727,7 @@ impl Clean<Variant> for hir::VariantData<'_> {\n \n impl Clean<Path> for hir::Path<'_> {\n     fn clean(&self, cx: &mut DocContext<'_>) -> Path {\n-        Path {\n-            global: self.is_global(),\n-            res: self.res,\n-            segments: if self.is_global() { &self.segments[1..] } else { &self.segments }.clean(cx),\n-        }\n+        Path { res: self.res, segments: self.segments.clean(cx) }\n     }\n }\n "}, {"sha": "7b0d331045c7d26a36d16d2d94944024a51ac907", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d91946b3f4ea04bc205b5796fc4af0f13069d204/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91946b3f4ea04bc205b5796fc4af0f13069d204/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=d91946b3f4ea04bc205b5796fc4af0f13069d204", "patch": "@@ -1967,7 +1967,6 @@ impl Span {\n \n #[derive(Clone, PartialEq, Eq, Debug, Hash)]\n crate struct Path {\n-    crate global: bool,\n     crate res: Res,\n     crate segments: Vec<PathSegment>,\n }\n@@ -1982,8 +1981,7 @@ impl Path {\n     }\n \n     crate fn whole_name(&self) -> String {\n-        String::from(if self.global { \"::\" } else { \"\" })\n-            + &self.segments.iter().map(|s| s.name.to_string()).collect::<Vec<_>>().join(\"::\")\n+        self.segments.iter().map(|s| s.name.to_string()).collect::<Vec<_>>().join(\"::\")\n     }\n \n     /// Checks if this is a `T::Name` path for an associated type."}, {"sha": "55dfa2711db67cc642ed4fd3bbb802530df8473e", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d91946b3f4ea04bc205b5796fc4af0f13069d204/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91946b3f4ea04bc205b5796fc4af0f13069d204/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=d91946b3f4ea04bc205b5796fc4af0f13069d204", "patch": "@@ -148,7 +148,6 @@ pub(super) fn external_path(\n     let def_kind = cx.tcx.def_kind(did);\n     let name = cx.tcx.item_name(did);\n     Path {\n-        global: false,\n         res: Res::Def(def_kind, did),\n         segments: vec![PathSegment {\n             name,\n@@ -199,7 +198,7 @@ crate fn strip_path(path: &Path) -> Path {\n         })\n         .collect();\n \n-    Path { global: path.global, res: path.res, segments }\n+    Path { res: path.res, segments }\n }\n \n crate fn qpath_to_string(p: &hir::QPath<'_>) -> String {"}]}