{"sha": "ba2df27525ab535aa600cd25fda4aa7f0f13a2aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMmRmMjc1MjVhYjUzNWFhNjAwY2QyNWZkYTRhYTdmMGYxM2EyYWE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-29T01:16:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-29T01:16:20Z"}, "message": "Rollup merge of #69546 - matthiaskrgr:slice_to_vec, r=davidtwco,nagisa\n\nuse to_vec() instead of .iter().cloned().collect() to convert slices to vecs.", "tree": {"sha": "73eab702c8fdc66b472cc1d3a3ff2a9fe4b282e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73eab702c8fdc66b472cc1d3a3ff2a9fe4b282e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba2df27525ab535aa600cd25fda4aa7f0f13a2aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWbtkCRBK7hj4Ov3rIwAAdHIIAFvqk6bf6JQVqxcJ2jeZQ7CH\nEk5J+lk2gcPGgPII+guh7nPqwqPas3/YYyYt1P4GU3G+IMYzIkNCsdOoVqu3sBHx\nKdmMA0rGNL4S6o36blk7KOg5VdmURxVILv25pWVWKCkJCpbgTu6hIYA+zwxm5ex/\nWpGjtvFTqmfilt8t5T5y9o72JZuuIg7qGt4qWlELzCiFwbjVA/OulLgsiWbZflMe\nAgOcIb7iTzY6eW5NdWmUfUZNHMEeHNApLRkElRXmV3stPAegn2Dk4wIoTbGr5DYK\nfUppQjSn02eXIe5KuGaRsGkjCsNQC4kYaN69J36gflRWfPcp1PM6Z183oSrCFDM=\n=z8QM\n-----END PGP SIGNATURE-----\n", "payload": "tree 73eab702c8fdc66b472cc1d3a3ff2a9fe4b282e9\nparent 2774d4833709919812c9414c6ea642d42465f208\nparent 0c5d497603129d3bf25e83e3e387bb39202b34ef\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582938980 +0100\ncommitter GitHub <noreply@github.com> 1582938980 +0100\n\nRollup merge of #69546 - matthiaskrgr:slice_to_vec, r=davidtwco,nagisa\n\nuse to_vec() instead of .iter().cloned().collect() to convert slices to vecs.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba2df27525ab535aa600cd25fda4aa7f0f13a2aa", "html_url": "https://github.com/rust-lang/rust/commit/ba2df27525ab535aa600cd25fda4aa7f0f13a2aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba2df27525ab535aa600cd25fda4aa7f0f13a2aa/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2774d4833709919812c9414c6ea642d42465f208", "url": "https://api.github.com/repos/rust-lang/rust/commits/2774d4833709919812c9414c6ea642d42465f208", "html_url": "https://github.com/rust-lang/rust/commit/2774d4833709919812c9414c6ea642d42465f208"}, {"sha": "0c5d497603129d3bf25e83e3e387bb39202b34ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5d497603129d3bf25e83e3e387bb39202b34ef", "html_url": "https://github.com/rust-lang/rust/commit/0c5d497603129d3bf25e83e3e387bb39202b34ef"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7f7ee6e0fed7be1e7f19e4c3b1e880a0a0541787", "filename": "src/librustc_builtin_macros/deriving/generic/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba2df27525ab535aa600cd25fda4aa7f0f13a2aa/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba2df27525ab535aa600cd25fda4aa7f0f13a2aa/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs?ref=ba2df27525ab535aa600cd25fda4aa7f0f13a2aa", "patch": "@@ -588,14 +588,14 @@ impl<'a> TraitDef<'a> {\n                         span: self.span,\n                         bound_generic_params: wb.bound_generic_params.clone(),\n                         bounded_ty: wb.bounded_ty.clone(),\n-                        bounds: wb.bounds.iter().cloned().collect(),\n+                        bounds: wb.bounds.to_vec(),\n                     })\n                 }\n                 ast::WherePredicate::RegionPredicate(ref rb) => {\n                     ast::WherePredicate::RegionPredicate(ast::WhereRegionPredicate {\n                         span: self.span,\n                         lifetime: rb.lifetime,\n-                        bounds: rb.bounds.iter().cloned().collect(),\n+                        bounds: rb.bounds.to_vec(),\n                     })\n                 }\n                 ast::WherePredicate::EqPredicate(ref we) => {"}]}