{"sha": "e87c4dd334b0f118bbf7938671b3359dc0c904d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4N2M0ZGQzMzRiMGYxMThiYmY3OTM4NjcxYjMzNTlkYzBjOTA0ZDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-16T00:01:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-16T00:01:49Z"}, "message": "Auto merge of #84226 - Aaron1011:track-link-dead-code, r=Mark-Simulacrum\n\nTrack `-C link-dead-code` during incremental compilation\n\nThis option influences monomorphization, which participates in\nincremental compilation.", "tree": {"sha": "430dea427b28337967769a7fc734f13c893cda2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/430dea427b28337967769a7fc734f13c893cda2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e87c4dd334b0f118bbf7938671b3359dc0c904d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e87c4dd334b0f118bbf7938671b3359dc0c904d6", "html_url": "https://github.com/rust-lang/rust/commit/e87c4dd334b0f118bbf7938671b3359dc0c904d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e87c4dd334b0f118bbf7938671b3359dc0c904d6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7af1f55ae359e731c2c303f5d98e42a1a8163af0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7af1f55ae359e731c2c303f5d98e42a1a8163af0", "html_url": "https://github.com/rust-lang/rust/commit/7af1f55ae359e731c2c303f5d98e42a1a8163af0"}, {"sha": "1ce1cda02fe52974c6ceb5e318f456ef6fad86c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ce1cda02fe52974c6ceb5e318f456ef6fad86c8", "html_url": "https://github.com/rust-lang/rust/commit/1ce1cda02fe52974c6ceb5e318f456ef6fad86c8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9685d21762b7c0948d78f5d3fd5603fd70653ed1", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e87c4dd334b0f118bbf7938671b3359dc0c904d6/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e87c4dd334b0f118bbf7938671b3359dc0c904d6/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=e87c4dd334b0f118bbf7938671b3359dc0c904d6", "patch": "@@ -405,7 +405,6 @@ fn test_codegen_options_tracking_hash() {\n     untracked!(incremental, Some(String::from(\"abc\")));\n     // `link_arg` is omitted because it just forwards to `link_args`.\n     untracked!(link_args, vec![String::from(\"abc\"), String::from(\"def\")]);\n-    untracked!(link_dead_code, Some(true));\n     untracked!(link_self_contained, Some(true));\n     untracked!(linker, Some(PathBuf::from(\"linker\")));\n     untracked!(linker_flavor, Some(LinkerFlavor::Gcc));\n@@ -433,6 +432,7 @@ fn test_codegen_options_tracking_hash() {\n     tracked!(force_unwind_tables, Some(true));\n     tracked!(inline_threshold, Some(0xf007ba11));\n     tracked!(linker_plugin_lto, LinkerPluginLto::LinkerPluginAuto);\n+    tracked!(link_dead_code, Some(true));\n     tracked!(llvm_args, vec![String::from(\"1\"), String::from(\"2\")]);\n     tracked!(lto, LtoCli::Fat);\n     tracked!(metadata, vec![String::from(\"A\"), String::from(\"B\")]);"}, {"sha": "fd26f50da5a8ef3e0b2a348c1ff9c08cffc98920", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e87c4dd334b0f118bbf7938671b3359dc0c904d6/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e87c4dd334b0f118bbf7938671b3359dc0c904d6/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=e87c4dd334b0f118bbf7938671b3359dc0c904d6", "patch": "@@ -814,7 +814,7 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n         \"a single extra argument to append to the linker invocation (can be used several times)\"),\n     link_args: Vec<String> = (Vec::new(), parse_list, [UNTRACKED],\n         \"extra arguments to append to the linker invocation (space separated)\"),\n-    link_dead_code: Option<bool> = (None, parse_opt_bool, [UNTRACKED],\n+    link_dead_code: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"keep dead code at link time (useful for code coverage) (default: no)\"),\n     link_self_contained: Option<bool> = (None, parse_opt_bool, [UNTRACKED],\n         \"control whether to link Rust provided C objects/libraries or rely"}]}