{"sha": "a8dc2975fd2700e3ed56679ce1bcbd6c2f4c3ab0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZGMyOTc1ZmQyNzAwZTNlZDU2Njc5Y2UxYmNiZDZjMmY0YzNhYjA=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-10-15T04:55:46Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-10-15T04:55:46Z"}, "message": "Improve doc example for `std::borrow::Cow`.", "tree": {"sha": "03dcd87efccc3a816d3e362d57e885649905fead", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03dcd87efccc3a816d3e362d57e885649905fead"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8dc2975fd2700e3ed56679ce1bcbd6c2f4c3ab0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8dc2975fd2700e3ed56679ce1bcbd6c2f4c3ab0", "html_url": "https://github.com/rust-lang/rust/commit/a8dc2975fd2700e3ed56679ce1bcbd6c2f4c3ab0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8dc2975fd2700e3ed56679ce1bcbd6c2f4c3ab0/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8d189af90841ca15f8d9dcc77628613f25e6b78", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8d189af90841ca15f8d9dcc77628613f25e6b78", "html_url": "https://github.com/rust-lang/rust/commit/a8d189af90841ca15f8d9dcc77628613f25e6b78"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "8f9c35783379133e98a31bc58c9d1c086d0e936e", "filename": "src/libcollections/borrow.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a8dc2975fd2700e3ed56679ce1bcbd6c2f4c3ab0/src%2Flibcollections%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8dc2975fd2700e3ed56679ce1bcbd6c2f4c3ab0/src%2Flibcollections%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fborrow.rs?ref=a8dc2975fd2700e3ed56679ce1bcbd6c2f4c3ab0", "patch": "@@ -86,16 +86,29 @@ impl<T> ToOwned for T where T: Clone {\n /// ```\n /// use std::borrow::Cow;\n ///\n-/// # #[allow(dead_code)]\n /// fn abs_all(input: &mut Cow<[i32]>) {\n ///     for i in 0..input.len() {\n ///         let v = input[i];\n ///         if v < 0 {\n-///             // clones into a vector the first time (if not already owned)\n+///             // Clones into a vector if not already owned.\n ///             input.to_mut()[i] = -v;\n ///         }\n ///     }\n /// }\n+///\n+/// // No clone occurs because `input` doesn't need to be mutated.\n+/// let slice = [0, 1, 2];\n+/// let mut input = Cow::from(&slice[..]);\n+/// abs_all(&mut input);\n+///\n+/// // Clone occurs because `input` needs to be mutated.\n+/// let slice = [-1, 0, 1];\n+/// let mut input = Cow::from(&slice[..]);\n+/// abs_all(&mut input);\n+///\n+/// // No clone occurs because `input` is already owned.\n+/// let mut input = Cow::from(vec![-1, 0, 1]);\n+/// abs_all(&mut input);\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum Cow<'a, B: ?Sized + 'a>"}]}