{"sha": "f14cb96b07517b5638bf966e6f6e30b946552912", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNGNiOTZiMDc1MTdiNTYzOGJmOTY2ZTZmNmUzMGI5NDY1NTI5MTI=", "commit": {"author": {"name": "Dan Schatzberg", "email": "schatzberg.dan@gmail.com", "date": "2014-09-04T21:59:28Z"}, "committer": {"name": "Dan Schatzberg", "email": "schatzberg.dan@gmail.com", "date": "2014-10-02T15:22:05Z"}, "message": "Use RawPtr::offset when size_of::<T>() > 0", "tree": {"sha": "7a23eaaa6052e084cc16904990c9ef94f4e87f81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a23eaaa6052e084cc16904990c9ef94f4e87f81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f14cb96b07517b5638bf966e6f6e30b946552912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f14cb96b07517b5638bf966e6f6e30b946552912", "html_url": "https://github.com/rust-lang/rust/commit/f14cb96b07517b5638bf966e6f6e30b946552912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f14cb96b07517b5638bf966e6f6e30b946552912/comments", "author": {"login": "dschatzberg", "id": 165988, "node_id": "MDQ6VXNlcjE2NTk4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/165988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschatzberg", "html_url": "https://github.com/dschatzberg", "followers_url": "https://api.github.com/users/dschatzberg/followers", "following_url": "https://api.github.com/users/dschatzberg/following{/other_user}", "gists_url": "https://api.github.com/users/dschatzberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschatzberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschatzberg/subscriptions", "organizations_url": "https://api.github.com/users/dschatzberg/orgs", "repos_url": "https://api.github.com/users/dschatzberg/repos", "events_url": "https://api.github.com/users/dschatzberg/events{/privacy}", "received_events_url": "https://api.github.com/users/dschatzberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dschatzberg", "id": 165988, "node_id": "MDQ6VXNlcjE2NTk4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/165988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschatzberg", "html_url": "https://github.com/dschatzberg", "followers_url": "https://api.github.com/users/dschatzberg/followers", "following_url": "https://api.github.com/users/dschatzberg/following{/other_user}", "gists_url": "https://api.github.com/users/dschatzberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschatzberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschatzberg/subscriptions", "organizations_url": "https://api.github.com/users/dschatzberg/orgs", "repos_url": "https://api.github.com/users/dschatzberg/repos", "events_url": "https://api.github.com/users/dschatzberg/events{/privacy}", "received_events_url": "https://api.github.com/users/dschatzberg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4184396f28d5612520f7b30718df9fff6918d239", "url": "https://api.github.com/repos/rust-lang/rust/commits/4184396f28d5612520f7b30718df9fff6918d239", "html_url": "https://github.com/rust-lang/rust/commit/4184396f28d5612520f7b30718df9fff6918d239"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "b3a3609bdce1c8c16151e335c9afc89a7467c3db", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f14cb96b07517b5638bf966e6f6e30b946552912/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14cb96b07517b5638bf966e6f6e30b946552912/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=f14cb96b07517b5638bf966e6f6e30b946552912", "patch": "@@ -848,7 +848,11 @@ impl<T> Vec<T> {\n             let ptr = self.ptr;\n             let cap = self.cap;\n             let begin = self.ptr as *const T;\n-            let end = (self.ptr as uint + self.len()) as *const T;\n+            let end = if mem::size_of::<T>() == 0 {\n+                (ptr as uint + self.len()) as *const T;\n+            } else {\n+                ptr.offset(self.len() as int)\n+            };\n             mem::forget(self);\n             MoveItems { allocation: ptr, cap: cap, ptr: begin, end: end }\n         }"}]}