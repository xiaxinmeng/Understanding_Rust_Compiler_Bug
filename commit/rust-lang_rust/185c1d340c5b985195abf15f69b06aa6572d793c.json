{"sha": "185c1d340c5b985195abf15f69b06aa6572d793c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NWMxZDM0MGM1Yjk4NTE5NWFiZjE1ZjY5YjA2YWE2NTcyZDc5M2M=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-07T18:15:35Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-18T14:08:25Z"}, "message": "extract error_decl_mod_in_block", "tree": {"sha": "28e968cd1b37f50327169272aabe1bdbb499385e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28e968cd1b37f50327169272aabe1bdbb499385e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/185c1d340c5b985195abf15f69b06aa6572d793c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/185c1d340c5b985195abf15f69b06aa6572d793c", "html_url": "https://github.com/rust-lang/rust/commit/185c1d340c5b985195abf15f69b06aa6572d793c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/185c1d340c5b985195abf15f69b06aa6572d793c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2899a58cab62e132dc7af7b7e0446a90b6d0feff", "url": "https://api.github.com/repos/rust-lang/rust/commits/2899a58cab62e132dc7af7b7e0446a90b6d0feff", "html_url": "https://github.com/rust-lang/rust/commit/2899a58cab62e132dc7af7b7e0446a90b6d0feff"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "c7d120e3cc6c62d99814d71d312fccc15ca86368", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/185c1d340c5b985195abf15f69b06aa6572d793c/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/185c1d340c5b985195abf15f69b06aa6572d793c/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=185c1d340c5b985195abf15f69b06aa6572d793c", "patch": "@@ -129,23 +129,22 @@ impl<'a> Parser<'a> {\n             DirectoryOwnership::Owned { .. } => {\n                 paths.result.map_err(|err| self.span_fatal_err(id_sp, err))\n             }\n-            DirectoryOwnership::UnownedViaBlock => {\n-                let msg = \"Cannot declare a non-inline module inside a block \\\n-                    unless it has a path attribute\";\n-                let mut err = self.struct_span_err(id_sp, msg);\n-                if paths.path_exists {\n-                    let msg = format!(\n-                        \"Maybe `use` the module `{}` instead of redeclaring it\",\n-                        paths.name\n-                    );\n-                    err.span_note(id_sp, &msg);\n-                }\n-                Err(err)\n-            }\n+            DirectoryOwnership::UnownedViaBlock => self.error_decl_mod_in_block(id_sp, paths),\n             DirectoryOwnership::UnownedViaMod => self.error_cannot_declare_mod_here(id_sp, paths),\n         }\n     }\n \n+    fn error_decl_mod_in_block<T>(&self, id_sp: Span, paths: ModulePath) -> PResult<'a, T> {\n+        let msg =\n+            \"Cannot declare a non-inline module inside a block unless it has a path attribute\";\n+        let mut err = self.struct_span_err(id_sp, msg);\n+        if paths.path_exists {\n+            let msg = format!(\"Maybe `use` the module `{}` instead of redeclaring it\", paths.name);\n+            err.span_note(id_sp, &msg);\n+        }\n+        Err(err)\n+    }\n+\n     fn error_cannot_declare_mod_here<T>(&self, id_sp: Span, paths: ModulePath) -> PResult<'a, T> {\n         let mut err = self.struct_span_err(id_sp, \"cannot declare a new module at this location\");\n         if !id_sp.is_dummy() {"}]}