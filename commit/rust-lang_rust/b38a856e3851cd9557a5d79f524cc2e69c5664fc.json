{"sha": "b38a856e3851cd9557a5d79f524cc2e69c5664fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzOGE4NTZlMzg1MWNkOTU1N2E1ZDc5ZjUyNGNjMmU2OWM1NjY0ZmM=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-23T08:52:44Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-23T20:47:13Z"}, "message": "Don't show associated consts from trait impls", "tree": {"sha": "542159f72f86866119bdb6d193b298b7eb76ec36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/542159f72f86866119bdb6d193b298b7eb76ec36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b38a856e3851cd9557a5d79f524cc2e69c5664fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b38a856e3851cd9557a5d79f524cc2e69c5664fc", "html_url": "https://github.com/rust-lang/rust/commit/b38a856e3851cd9557a5d79f524cc2e69c5664fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b38a856e3851cd9557a5d79f524cc2e69c5664fc/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be7196a793a185355efb7ec8801102ddec95483d", "url": "https://api.github.com/repos/rust-lang/rust/commits/be7196a793a185355efb7ec8801102ddec95483d", "html_url": "https://github.com/rust-lang/rust/commit/be7196a793a185355efb7ec8801102ddec95483d"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "a30c087bd8b85cb9f61e713eaa551fda384800d7", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b38a856e3851cd9557a5d79f524cc2e69c5664fc/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b38a856e3851cd9557a5d79f524cc2e69c5664fc/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=b38a856e3851cd9557a5d79f524cc2e69c5664fc", "patch": "@@ -243,6 +243,7 @@ pub struct Cache {\n \n     stack: Vec<String>,\n     parent_stack: Vec<DefId>,\n+    parent_is_trait_impl: bool,\n     search_index: Vec<IndexItem>,\n     privmod: bool,\n     remove_priv: bool,\n@@ -487,6 +488,7 @@ pub fn run(mut krate: clean::Crate,\n         stack: Vec::new(),\n         parent_stack: Vec::new(),\n         search_index: Vec::new(),\n+        parent_is_trait_impl: false,\n         extern_locations: HashMap::new(),\n         primitive_locations: HashMap::new(),\n         remove_priv: cx.passes.contains(\"strip-private\"),\n@@ -995,6 +997,10 @@ impl DocFolder for Cache {\n         // Index this method for searching later on\n         if let Some(ref s) = item.name {\n             let (parent, is_method) = match item.inner {\n+                clean::AssociatedConstItem(..) if self.parent_is_trait_impl => {\n+                    // skip associated consts in trait impls\n+                    ((None, None), false)\n+                }\n                 clean::AssociatedTypeItem(..) |\n                 clean::AssociatedConstItem(..) |\n                 clean::TyMethodItem(..) |\n@@ -1115,12 +1121,15 @@ impl DocFolder for Cache {\n         }\n \n         // Maintain the parent stack\n+        let orig_parent_is_trait_impl = self.parent_is_trait_impl;\n         let parent_pushed = match item.inner {\n             clean::TraitItem(..) | clean::EnumItem(..) | clean::StructItem(..) => {\n                 self.parent_stack.push(item.def_id);\n+                self.parent_is_trait_impl = false;\n                 true\n             }\n             clean::ImplItem(ref i) => {\n+                self.parent_is_trait_impl = i.trait_.is_some();\n                 match i.for_ {\n                     clean::ResolvedPath{ did, .. } => {\n                         self.parent_stack.push(did);\n@@ -1201,6 +1210,7 @@ impl DocFolder for Cache {\n         if pushed { self.stack.pop().unwrap(); }\n         if parent_pushed { self.parent_stack.pop().unwrap(); }\n         self.privmod = orig_privmod;\n+        self.parent_is_trait_impl = orig_parent_is_trait_impl;\n         return ret;\n     }\n }"}, {"sha": "46be8229d7c651ba2982fb01a88dc8d1b381a84b", "filename": "src/test/rustdoc/issue-31808.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b38a856e3851cd9557a5d79f524cc2e69c5664fc/src%2Ftest%2Frustdoc%2Fissue-31808.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b38a856e3851cd9557a5d79f524cc2e69c5664fc/src%2Ftest%2Frustdoc%2Fissue-31808.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-31808.rs?ref=b38a856e3851cd9557a5d79f524cc2e69c5664fc", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts, associated_types)]\n+\n+// Test that associated item impls on primitive types don't crash rustdoc\n+\n+pub trait Foo {\n+    const BAR: usize;\n+    type BAZ;\n+}\n+\n+impl Foo for () {\n+    const BAR: usize = 0;\n+    type BAZ = usize;\n+}"}]}