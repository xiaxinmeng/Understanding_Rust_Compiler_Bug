{"sha": "dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNjNmMTcwMjdkNWM4NzNhNTc4MmRjYmIwOGU5YjA2OGZjOGVlMDA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T14:48:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T15:28:51Z"}, "message": "use Source for module, part 2", "tree": {"sha": "925ed48be65afe9d534332db57f486fa8cf60e73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/925ed48be65afe9d534332db57f486fa8cf60e73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "html_url": "https://github.com/rust-lang/rust/commit/dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd63f17027d5c873a5782dcbb08e9b068fc8ee00/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0145d06515d990f8b7bf45e261674c265c52d858", "url": "https://api.github.com/repos/rust-lang/rust/commits/0145d06515d990f8b7bf45e261674c265c52d858", "html_url": "https://github.com/rust-lang/rust/commit/0145d06515d990f8b7bf45e261674c265c52d858"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "1a33127fa6c566c6fa0e3f0fc493ad8470fa5231", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd63f17027d5c873a5782dcbb08e9b068fc8ee00/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd63f17027d5c873a5782dcbb08e9b068fc8ee00/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "patch": "@@ -210,11 +210,11 @@ impl Module {\n     pub fn declaration_source(\n         self,\n         db: &(impl DefDatabase + AstDatabase),\n-    ) -> Option<(HirFileId, TreeArc<ast::Module>)> {\n+    ) -> Option<Source<TreeArc<ast::Module>>> {\n         let def_map = db.crate_def_map(self.krate);\n         let decl = def_map[self.module_id].declaration?;\n         let ast = decl.to_node(db);\n-        Some((decl.file_id(), ast))\n+        Some((decl.file_id(), ast).into())\n     }\n \n     /// Returns the syntax of the last path segment corresponding to this import"}, {"sha": "4db066c438991df3d952a98a83a0b17a91e1b68f", "filename": "crates/ra_hir/src/docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd63f17027d5c873a5782dcbb08e9b068fc8ee00/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd63f17027d5c873a5782dcbb08e9b068fc8ee00/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdocs.rs?ref=dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "patch": "@@ -71,7 +71,7 @@ pub(crate) fn documentation_query(\n     def: DocDef,\n ) -> Option<Documentation> {\n     match def {\n-        DocDef::Module(it) => docs_from_ast(&*it.declaration_source(db)?.1),\n+        DocDef::Module(it) => docs_from_ast(&*it.declaration_source(db)?.ast),\n         DocDef::StructField(it) => match it.source(db).ast {\n             FieldSource::Named(named) => docs_from_ast(&*named),\n             FieldSource::Pos(..) => return None,"}, {"sha": "d7687e1a4afdd1dd4bbd2a638fcf8710081c91e9", "filename": "crates/ra_ide_api/src/display/navigation_target.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd63f17027d5c873a5782dcbb08e9b068fc8ee00/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd63f17027d5c873a5782dcbb08e9b068fc8ee00/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "patch": "@@ -149,15 +149,15 @@ impl NavigationTarget {\n \n     pub(crate) fn from_module_to_decl(db: &RootDatabase, module: hir::Module) -> NavigationTarget {\n         let name = module.name(db).map(|it| it.to_string().into()).unwrap_or_default();\n-        if let Some((file_id, source)) = module.declaration_source(db) {\n-            let file_id = file_id.as_original_file();\n+        if let Some(src) = module.declaration_source(db) {\n+            let file_id = src.file_id.as_original_file();\n             return NavigationTarget::from_syntax(\n                 file_id,\n                 name,\n                 None,\n-                source.syntax(),\n-                source.doc_comment_text(),\n-                source.short_label(),\n+                src.ast.syntax(),\n+                src.ast.doc_comment_text(),\n+                src.ast.short_label(),\n             );\n         }\n         NavigationTarget::from_module(db, module)"}]}