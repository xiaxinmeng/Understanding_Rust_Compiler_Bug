{"sha": "356b0246d9a884febc89049b85c07eb678658b95", "node_id": "C_kwDOAAsO6NoAKDM1NmIwMjQ2ZDlhODg0ZmViYzg5MDQ5Yjg1YzA3ZWI2Nzg2NThiOTU", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-09T21:11:13Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-01-07T22:54:28Z"}, "message": "Remove span from UpvarCapture::ByValue\n\nThis span is unused and is superseded by capture_kind_expr_id in CaptureInfo", "tree": {"sha": "b7681a58dd9c4acb359e090f054bc717f393a0a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7681a58dd9c4acb359e090f054bc717f393a0a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/356b0246d9a884febc89049b85c07eb678658b95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/356b0246d9a884febc89049b85c07eb678658b95", "html_url": "https://github.com/rust-lang/rust/commit/356b0246d9a884febc89049b85c07eb678658b95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/356b0246d9a884febc89049b85c07eb678658b95/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7a60337fcee0c484405c3572f2139f39284e95b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7a60337fcee0c484405c3572f2139f39284e95b", "html_url": "https://github.com/rust-lang/rust/commit/d7a60337fcee0c484405c3572f2139f39284e95b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5ce68bc4d1d5c3bb748feb3fb24bd9a8e9bdf294", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/356b0246d9a884febc89049b85c07eb678658b95/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/356b0246d9a884febc89049b85c07eb678658b95/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=356b0246d9a884febc89049b85c07eb678658b95", "patch": "@@ -969,7 +969,7 @@ pub fn can_move_expr_to_closure(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) ->\n                         };\n                         if !self.locals.contains(&local_id) {\n                             let capture = match capture.info.capture_kind {\n-                                UpvarCapture::ByValue(_) => CaptureKind::Value,\n+                                UpvarCapture::ByValue => CaptureKind::Value,\n                                 UpvarCapture::ByRef(borrow) => match borrow.kind {\n                                     BorrowKind::ImmBorrow => CaptureKind::Ref(Mutability::Not),\n                                     BorrowKind::UniqueImmBorrow | BorrowKind::MutBorrow => {"}]}