{"sha": "c95e3ab6a8bdaf5c73b7addbda5af0e2e7e24a10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NWUzYWI2YThiZGFmNWM3M2I3YWRkYmRhNWFmMGUyZTdlMjRhMTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-17T05:28:26Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-17T16:55:55Z"}, "message": "Remove transitional interfaces from std::extfmt", "tree": {"sha": "7bb9ae8c5b720c56f5ecf291670062a115b2f45d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bb9ae8c5b720c56f5ecf291670062a115b2f45d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c95e3ab6a8bdaf5c73b7addbda5af0e2e7e24a10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c95e3ab6a8bdaf5c73b7addbda5af0e2e7e24a10", "html_url": "https://github.com/rust-lang/rust/commit/c95e3ab6a8bdaf5c73b7addbda5af0e2e7e24a10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c95e3ab6a8bdaf5c73b7addbda5af0e2e7e24a10/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53df58a177365703ef7a798ffb3c468cb7d1a5ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/53df58a177365703ef7a798ffb3c468cb7d1a5ae", "html_url": "https://github.com/rust-lang/rust/commit/53df58a177365703ef7a798ffb3c468cb7d1a5ae"}], "stats": {"total": 19, "additions": 1, "deletions": 18}, "files": [{"sha": "d7460a6b24eb7b6d26ab50a5a424499c207e0e93", "filename": "src/lib/extfmt.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c95e3ab6a8bdaf5c73b7addbda5af0e2e7e24a10/src%2Flib%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c95e3ab6a8bdaf5c73b7addbda5af0e2e7e24a10/src%2Flib%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fextfmt.rs?ref=c95e3ab6a8bdaf5c73b7addbda5af0e2e7e24a10", "patch": "@@ -270,23 +270,6 @@ mod rt {\n     // instead just use a bool per flag\n     type conv = {flags: [flag], width: count, precision: count, ty: ty};\n \n-    // FIXME: Remove these transitional *_ivec interfaces\n-    fn conv_int_ivec(cv: &conv, i: int) -> str {\n-        conv_int(cv, i)\n-    }\n-    fn conv_uint_ivec(cv: &conv, u: uint) -> str {\n-        conv_uint(cv, u)\n-    }\n-    fn conv_bool_ivec(cv: &conv, b: bool) -> str {\n-        conv_bool(cv, b)\n-    }\n-    fn conv_char_ivec(cv: &conv, c: char) -> str {\n-        conv_char(cv, c)\n-    }\n-    fn conv_str_ivec(cv: &conv, s: str) -> str {\n-        conv_str(cv, s)\n-    }\n-\n     fn conv_int(cv: &conv, i: int) -> str {\n         let radix = 10u;\n         let prec = get_int_precision(cv);\n@@ -317,7 +300,7 @@ mod rt {\n         // run the boolean conversion through the string conversion logic,\n         // giving it the same rules for precision, etc.\n \n-        ret conv_str_ivec(cv, s);\n+        ret conv_str(cv, s);\n     }\n     fn conv_char(cv: &conv, c: char) -> str {\n         ret pad(cv, str::from_char(c), pad_nozero);"}]}