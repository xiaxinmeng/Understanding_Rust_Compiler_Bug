{"sha": "df845784ee74cee760caf38064d39e14a23ef791", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmODQ1Nzg0ZWU3NGNlZTc2MGNhZjM4MDY0ZDM5ZTE0YTIzZWY3OTE=", "commit": {"author": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-05-31T16:36:37Z"}, "committer": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-05-31T16:36:37Z"}, "message": "Add Bound tests", "tree": {"sha": "84854efbe49e5b81cded5087f11a237b1b9c6462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84854efbe49e5b81cded5087f11a237b1b9c6462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df845784ee74cee760caf38064d39e14a23ef791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df845784ee74cee760caf38064d39e14a23ef791", "html_url": "https://github.com/rust-lang/rust/commit/df845784ee74cee760caf38064d39e14a23ef791", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df845784ee74cee760caf38064d39e14a23ef791/comments", "author": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0772f9a92082c3f5a734e1fae198f817bbf2f61f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0772f9a92082c3f5a734e1fae198f817bbf2f61f", "html_url": "https://github.com/rust-lang/rust/commit/0772f9a92082c3f5a734e1fae198f817bbf2f61f"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "3f6d63fc8a1510dcb0475e052789ec2e23dc3ef2", "filename": "src/libcore/tests/ops.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/df845784ee74cee760caf38064d39e14a23ef791/src%2Flibcore%2Ftests%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df845784ee74cee760caf38064d39e14a23ef791/src%2Flibcore%2Ftests%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fops.rs?ref=df845784ee74cee760caf38064d39e14a23ef791", "patch": "@@ -82,3 +82,18 @@ fn test_range_is_empty() {\n     assert!( (NAN ..= EPSILON).is_empty());\n     assert!( (NAN ..= NAN).is_empty());\n }\n+\n+#[test]\n+fn test_bound_cloned_unbounded() {\n+    assert_eq!(Bound::<&u32>::Unbounded.cloned(), Bound::Unbounded);\n+}\n+\n+#[test]\n+fn test_bound_cloned_included() {\n+    assert_eq!(Bound::Included(&3).cloned(), Bound::Included(3));\n+}\n+\n+#[test]\n+fn test_bound_cloned_excluded() {\n+    assert_eq!(Bound::Excluded(&3).cloned(), Bound::Excluded(3));\n+}"}]}