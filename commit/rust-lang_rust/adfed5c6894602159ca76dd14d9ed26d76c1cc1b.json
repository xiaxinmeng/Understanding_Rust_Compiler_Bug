{"sha": "adfed5c6894602159ca76dd14d9ed26d76c1cc1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZmVkNWM2ODk0NjAyMTU5Y2E3NmRkMTRkOWVkMjZkNzZjMWNjMWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-11T17:33:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-11T17:33:25Z"}, "message": "Fix join lines when two rules match", "tree": {"sha": "80cd31752c796076ca5118ec50ace20f452b167a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80cd31752c796076ca5118ec50ace20f452b167a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adfed5c6894602159ca76dd14d9ed26d76c1cc1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adfed5c6894602159ca76dd14d9ed26d76c1cc1b", "html_url": "https://github.com/rust-lang/rust/commit/adfed5c6894602159ca76dd14d9ed26d76c1cc1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adfed5c6894602159ca76dd14d9ed26d76c1cc1b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "305d9219823f5c0a6ffe526351b225b410702dfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/305d9219823f5c0a6ffe526351b225b410702dfd", "html_url": "https://github.com/rust-lang/rust/commit/305d9219823f5c0a6ffe526351b225b410702dfd"}], "stats": {"total": 69, "additions": 46, "deletions": 23}, "files": [{"sha": "552d7f66e5a8e9ac2e18abc7c8c6bbe5c5e2f1ad", "filename": "crates/ra_ide/src/join_lines.rs", "status": "modified", "additions": 46, "deletions": 23, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/adfed5c6894602159ca76dd14d9ed26d76c1cc1b/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adfed5c6894602159ca76dd14d9ed26d76c1cc1b/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs?ref=adfed5c6894602159ca76dd14d9ed26d76c1cc1b", "patch": "@@ -60,29 +60,6 @@ fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextU\n         return;\n     }\n \n-    // Special case that turns something like:\n-    //\n-    // ```\n-    // my_function({<|>\n-    //    <some-expr>\n-    // })\n-    // ```\n-    //\n-    // into `my_function(<some-expr>)`\n-    if join_single_expr_block(edit, token).is_some() {\n-        return;\n-    }\n-    // ditto for\n-    //\n-    // ```\n-    // use foo::{<|>\n-    //    bar\n-    // };\n-    // ```\n-    if join_single_use_tree(edit, token).is_some() {\n-        return;\n-    }\n-\n     // The node is between two other nodes\n     let prev = token.prev_sibling_or_token().unwrap();\n     let next = token.next_sibling_or_token().unwrap();\n@@ -110,6 +87,29 @@ fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextU\n             next.syntax().text_range().start() + TextUnit::of_str(next.prefix()),\n         ));\n     } else {\n+        // Special case that turns something like:\n+        //\n+        // ```\n+        // my_function({<|>\n+        //    <some-expr>\n+        // })\n+        // ```\n+        //\n+        // into `my_function(<some-expr>)`\n+        if join_single_expr_block(edit, token).is_some() {\n+            return;\n+        }\n+        // ditto for\n+        //\n+        // ```\n+        // use foo::{<|>\n+        //    bar\n+        // };\n+        // ```\n+        if join_single_use_tree(edit, token).is_some() {\n+            return;\n+        }\n+\n         // Remove newline but add a computed amount of whitespace characters\n         edit.replace(token.text_range(), compute_ws(prev.kind(), next.kind()).to_string());\n     }\n@@ -608,4 +608,27 @@ pub fn handle_find_matching_brace() {\n }\",\n         );\n     }\n+\n+    #[test]\n+    fn test_join_lines_commented_block() {\n+        check_join_lines(\n+            r\"\n+fn main() {\n+    let _ = {\n+        // <|>foo\n+        // bar\n+        92\n+    };\n+}\n+        \",\n+            r\"\n+fn main() {\n+    let _ = {\n+        // <|>foo bar\n+        92\n+    };\n+}\n+        \",\n+        )\n+    }\n }"}]}