{"sha": "1128fabb333a35eac6ee56001c0f7e5eb910a85d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMjhmYWJiMzMzYTM1ZWFjNmVlNTYwMDFjMGY3ZTVlYjkxMGE4NWQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-28T02:54:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-28T02:54:05Z"}, "message": "Rollup merge of #42266 - rkruppe:clean-trans-api, r=arielb1\n\nRemove unused APIs from rustc_trans\n\nThere were public re-exports of some rustc modules dating back to 2011 or so. While I was at it, some functions and modules were public but never used outside the crate. I made them private or `pub(crate)` as appropriate and in one case removed an unused function.", "tree": {"sha": "328f3e9d6039adc2cbc73a8dea0f5db37b2153d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/328f3e9d6039adc2cbc73a8dea0f5db37b2153d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1128fabb333a35eac6ee56001c0f7e5eb910a85d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1128fabb333a35eac6ee56001c0f7e5eb910a85d", "html_url": "https://github.com/rust-lang/rust/commit/1128fabb333a35eac6ee56001c0f7e5eb910a85d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1128fabb333a35eac6ee56001c0f7e5eb910a85d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "423b410fcef856cd45cca3179119d62dd3a04af6", "url": "https://api.github.com/repos/rust-lang/rust/commits/423b410fcef856cd45cca3179119d62dd3a04af6", "html_url": "https://github.com/rust-lang/rust/commit/423b410fcef856cd45cca3179119d62dd3a04af6"}, {"sha": "6fec17ee152cbd9c25989d880f9e0e43f3c72f19", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fec17ee152cbd9c25989d880f9e0e43f3c72f19", "html_url": "https://github.com/rust-lang/rust/commit/6fec17ee152cbd9c25989d880f9e0e43f3c72f19"}], "stats": {"total": 122, "additions": 50, "deletions": 72}, "files": [{"sha": "b5ef4aac34c89586436a73ade3cff6f517807bb5", "filename": "src/librustc_trans/assert_module_sources.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fassert_module_sources.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -40,8 +40,8 @@ const CFG: &'static str = \"cfg\";\n #[derive(Debug, PartialEq)]\n enum Disposition { Reused, Translated }\n \n-pub fn assert_module_sources<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                       modules: &[ModuleTranslation]) {\n+pub(crate) fn assert_module_sources<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                                              modules: &[ModuleTranslation]) {\n     let _ignore = tcx.dep_graph.in_ignore();\n \n     if tcx.sess.opts.incremental.is_none() {"}, {"sha": "e40267238801cb791e63a600821b493aa769e84b", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -14,18 +14,16 @@ use super::rpath::RPathConfig;\n use super::rpath;\n use super::msvc;\n use metadata::METADATA_FILENAME;\n-use session::config;\n-use session::config::NoDebugInfo;\n-use session::config::{OutputFilenames, Input, OutputType};\n-use session::filesearch;\n-use session::search_paths::PathKind;\n-use session::Session;\n-use middle::cstore::{self, LinkMeta, NativeLibrary, LibSource};\n-use middle::cstore::{LinkagePreference, NativeLibraryKind};\n-use middle::dependency_format::Linkage;\n+use rustc::session::config::{self, NoDebugInfo, OutputFilenames, Input, OutputType};\n+use rustc::session::filesearch;\n+use rustc::session::search_paths::PathKind;\n+use rustc::session::Session;\n+use rustc::middle::cstore::{self, LinkMeta, NativeLibrary, LibSource, LinkagePreference,\n+                            NativeLibraryKind};\n+use rustc::middle::dependency_format::Linkage;\n use CrateTranslation;\n-use util::common::time;\n-use util::fs::fix_windows_verbatim_for_gcc;\n+use rustc::util::common::time;\n+use rustc::util::fs::fix_windows_verbatim_for_gcc;\n use rustc::dep_graph::DepNode;\n use rustc::hir::def_id::CrateNum;\n use rustc::hir::svh::Svh;"}, {"sha": "0b15886083a4e4d099613a43d86c06c88f86f74e", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -20,11 +20,11 @@ use context::SharedCrateContext;\n \n use back::archive;\n use back::symbol_export::{self, ExportedSymbols};\n-use middle::dependency_format::Linkage;\n+use rustc::middle::dependency_format::Linkage;\n use rustc::hir::def_id::{LOCAL_CRATE, CrateNum};\n use rustc_back::LinkerFlavor;\n-use session::Session;\n-use session::config::{self, CrateType, OptLevel, DebugInfoLevel};\n+use rustc::session::Session;\n+use rustc::session::config::{self, CrateType, OptLevel, DebugInfoLevel};\n use serialize::{json, Encoder};\n \n /// For all the linkers we support, and information they might"}, {"sha": "97648888fa9b95bebc3362964c64c3598a2fac42", "filename": "src/librustc_trans/back/msvc/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Fmsvc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Fmsvc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fmsvc%2Fmod.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -52,7 +52,7 @@ mod platform {\n     use std::fs;\n     use std::path::{Path, PathBuf};\n     use std::process::Command;\n-    use session::Session;\n+    use rustc::session::Session;\n     use super::arch::{host_arch, Arch};\n     use super::registry::LOCAL_MACHINE;\n \n@@ -296,7 +296,7 @@ mod platform {\n mod platform {\n     use std::path::PathBuf;\n     use std::process::Command;\n-    use session::Session;\n+    use rustc::session::Session;\n     pub fn link_exe_cmd(_sess: &Session) -> (Command, Option<PathBuf>) {\n         (Command::new(\"link.exe\"), None)\n     }"}, {"sha": "ef75de04045e5d64b5307b535cbe5e17386fccf8", "filename": "src/librustc_trans/back/symbol_export.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -10,7 +10,7 @@\n \n use context::SharedCrateContext;\n use monomorphize::Instance;\n-use util::nodemap::FxHashMap;\n+use rustc::util::nodemap::FxHashMap;\n use rustc::hir::def_id::{DefId, CrateNum, LOCAL_CRATE};\n use rustc::session::config;\n use rustc::ty::TyCtxt;"}, {"sha": "8e14335ceacb9950a2d8ffe9cddc52114db062bc", "filename": "src/librustc_trans/back/symbol_names.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -348,16 +348,6 @@ impl ItemPathBuffer for SymbolPathBuffer {\n     }\n }\n \n-pub fn exported_name_from_type_and_prefix<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                                    t: Ty<'tcx>,\n-                                                    prefix: &str)\n-                                                    -> String {\n-    let hash = get_symbol_hash(tcx, None, t, None);\n-    let mut buffer = SymbolPathBuffer::new();\n-    buffer.push(prefix);\n-    buffer.finish(hash)\n-}\n-\n // Name sanitation. LLVM will happily accept identifiers with weird names, but\n // gas doesn't!\n // gas accepts the following characters in symbols: a-z, A-Z, 0-9, ., _, $"}, {"sha": "6ed0cb0092f52d0be31e3d5fa522ac49c807c534", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -12,16 +12,15 @@ use back::lto;\n use back::link::{get_linker, remove};\n use back::symbol_export::ExportedSymbols;\n use rustc_incremental::{save_trans_partition, in_incr_comp_dir};\n-use session::config::{OutputFilenames, OutputTypes, Passes, SomePasses, AllPasses, Sanitizer};\n-use session::Session;\n-use session::config::{self, OutputType};\n+use rustc::session::config::{self, OutputFilenames, OutputType, OutputTypes, Passes, SomePasses,\n+                             AllPasses, Sanitizer};\n+use rustc::session::Session;\n use llvm;\n use llvm::{ModuleRef, TargetMachineRef, PassManagerRef, DiagnosticInfoRef, ContextRef};\n use llvm::SMDiagnosticRef;\n use {CrateTranslation, ModuleLlvm, ModuleSource, ModuleTranslation};\n-use util::common::{time, time_depth, set_time_depth};\n-use util::common::path2cstr;\n-use util::fs::link_or_copy;\n+use rustc::util::common::{time, time_depth, set_time_depth, path2cstr};\n+use rustc::util::fs::link_or_copy;\n use errors::{self, Handler, Level, DiagnosticBuilder};\n use errors::emitter::Emitter;\n use syntax_pos::MultiSpan;"}, {"sha": "1b3f0ba7ce5b6f61c7430d92a882cfb7cc7fa9f7", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -36,16 +36,16 @@ use llvm::{ContextRef, Linkage, ModuleRef, ValueRef, Vector, get_param};\n use llvm;\n use metadata;\n use rustc::hir::def_id::LOCAL_CRATE;\n-use middle::lang_items::StartFnLangItem;\n-use middle::cstore::EncodedMetadata;\n+use rustc::middle::lang_items::StartFnLangItem;\n+use rustc::middle::cstore::EncodedMetadata;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::dep_graph::AssertDepGraphSafe;\n use rustc::middle::cstore::LinkMeta;\n use rustc::hir::map as hir_map;\n use rustc::util::common::time;\n-use session::config::{self, NoDebugInfo};\n+use rustc::session::config::{self, NoDebugInfo};\n+use rustc::session::{self, DataTypeKind, Session};\n use rustc_incremental::IncrementalHashesMap;\n-use session::{self, DataTypeKind, Session};\n use abi;\n use mir::lvalue::LvalueRef;\n use attributes;\n@@ -71,7 +71,7 @@ use trans_item::{TransItem, DefPathBasedNames};\n use type_::Type;\n use type_of;\n use value::Value;\n-use util::nodemap::{NodeSet, FxHashMap, FxHashSet};\n+use rustc::util::nodemap::{NodeSet, FxHashMap, FxHashSet};\n \n use libc::c_uint;\n use std::ffi::{CStr, CString};"}, {"sha": "672a37a0bd5c2af0904fdb1f6dd235f814fdca54", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -204,7 +204,7 @@ use rustc::mir::visit::Visitor as MirVisitor;\n use context::SharedCrateContext;\n use common::{def_ty, instance_ty};\n use monomorphize::{self, Instance};\n-use util::nodemap::{FxHashSet, FxHashMap, DefIdMap};\n+use rustc::util::nodemap::{FxHashSet, FxHashMap, DefIdMap};\n \n use trans_item::{TransItem, DefPathBasedNames, InstantiationMode};\n "}, {"sha": "fc48ec6b5c5abd78666780f08b779a53524830f0", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -17,7 +17,7 @@ use llvm::{ValueRef, ContextRef, TypeKind};\n use llvm::{True, False, Bool, OperandBundleDef};\n use rustc::hir::def_id::DefId;\n use rustc::hir::map::DefPathData;\n-use middle::lang_items::LangItem;\n+use rustc::middle::lang_items::LangItem;\n use base;\n use builder::Builder;\n use consts;"}, {"sha": "c3b16c2d07d0733ddc43b0c403ab7dc426a38455", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -26,10 +26,9 @@ use rustc_data_structures::base_n;\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::layout::{LayoutTyper, TyLayout};\n-use session::config::NoDebugInfo;\n-use session::Session;\n-use session::config;\n-use util::nodemap::{NodeSet, DefIdMap, FxHashMap};\n+use rustc::session::config::{self, NoDebugInfo};\n+use rustc::session::Session;\n+use rustc::util::nodemap::{NodeSet, DefIdMap, FxHashMap};\n \n use std::ffi::{CStr, CString};\n use std::cell::{Cell, RefCell};"}, {"sha": "14d3fa495530773173de9e870aa5eff813f9c2b9", "filename": "src/librustc_trans/debuginfo/gdb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -16,7 +16,7 @@ use common::{C_bytes, CrateContext, C_i32};\n use builder::Builder;\n use declare;\n use type_::Type;\n-use session::config::NoDebugInfo;\n+use rustc::session::config::NoDebugInfo;\n \n use std::ptr;\n use syntax::attr;"}, {"sha": "fea24e6da873e02420303f8c0089c8211073b378", "filename": "src/librustc_trans/debuginfo/metadata.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -19,7 +19,6 @@ use super::namespace::mangled_name_of_item;\n use super::type_names::compute_debuginfo_type_name;\n use super::{CrateDebugContext};\n use context::SharedCrateContext;\n-use session::Session;\n \n use llvm::{self, ValueRef};\n use llvm::debuginfo::{DIType, DIFile, DIScope, DIDescriptor,\n@@ -37,8 +36,8 @@ use common::{self, CrateContext};\n use type_::Type;\n use rustc::ty::{self, AdtKind, Ty};\n use rustc::ty::layout::{self, LayoutTyper};\n-use session::config;\n-use util::nodemap::FxHashMap;\n+use rustc::session::{Session, config};\n+use rustc::util::nodemap::FxHashMap;\n \n use libc::{c_uint, c_longlong};\n use std::ffi::CString;"}, {"sha": "4d781d6f77de919f15d71832f8dd7e709da38e39", "filename": "src/librustc_trans/debuginfo/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -32,8 +32,8 @@ use builder::Builder;\n use monomorphize::Instance;\n use rustc::ty::{self, Ty};\n use rustc::mir;\n-use session::config::{self, FullDebugInfo, LimitedDebugInfo, NoDebugInfo};\n-use util::nodemap::{DefIdMap, FxHashMap, FxHashSet};\n+use rustc::session::config::{self, FullDebugInfo, LimitedDebugInfo, NoDebugInfo};\n+use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet};\n \n use libc::c_uint;\n use std::cell::{Cell, RefCell};"}, {"sha": "c111a3983e7ea272e0b7c0c9957e2d906776f775", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -63,32 +63,25 @@ extern crate syntax_pos;\n extern crate rustc_errors as errors;\n extern crate serialize;\n \n-pub use rustc::session;\n-pub use rustc::middle;\n-pub use rustc::lint;\n-pub use rustc::util;\n-\n pub use base::trans_crate;\n pub use back::symbol_names::provide;\n \n pub use metadata::LlvmMetadataLoader;\n pub use llvm_util::{init, target_features, print_version, print_passes, print, enable_llvm_debug};\n \n pub mod back {\n-    pub use rustc::hir::svh;\n-\n-    pub mod archive;\n-    pub mod linker;\n+    mod archive;\n+    pub(crate) mod linker;\n     pub mod link;\n-    pub mod lto;\n-    pub mod symbol_export;\n-    pub mod symbol_names;\n+    mod lto;\n+    pub(crate) mod symbol_export;\n+    pub(crate) mod symbol_names;\n     pub mod write;\n-    pub mod msvc;\n-    pub mod rpath;\n+    mod msvc;\n+    mod rpath;\n }\n \n-pub mod diagnostics;\n+mod diagnostics;\n \n mod abi;\n mod adt;\n@@ -171,8 +164,8 @@ pub struct CrateTranslation {\n     pub crate_name: Symbol,\n     pub modules: Vec<ModuleTranslation>,\n     pub metadata_module: ModuleTranslation,\n-    pub link: middle::cstore::LinkMeta,\n-    pub metadata: middle::cstore::EncodedMetadata,\n+    pub link: rustc::middle::cstore::LinkMeta,\n+    pub metadata: rustc::middle::cstore::EncodedMetadata,\n     pub exported_symbols: back::symbol_export::ExportedSymbols,\n     pub no_builtins: bool,\n     pub windows_subsystem: Option<String>,"}, {"sha": "aa20d70978c94978716e3f9243db26041435e87a", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -17,7 +17,7 @@ use rustc::mir::{self, Mir};\n use rustc::mir::tcx::LvalueTy;\n use rustc::ty::subst::Substs;\n use rustc::infer::TransNormalize;\n-use session::config::FullDebugInfo;\n+use rustc::session::config::FullDebugInfo;\n use base;\n use builder::Builder;\n use common::{self, CrateContext, Funclet};"}, {"sha": "fc4130942a192a70a3916ba105e7a5521ca1507c", "filename": "src/librustc_trans/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Frvalue.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -14,7 +14,7 @@ use rustc::ty::cast::{CastTy, IntTy};\n use rustc::ty::layout::{Layout, LayoutTyper};\n use rustc::mir::tcx::LvalueTy;\n use rustc::mir;\n-use middle::lang_items::ExchangeMallocFnLangItem;\n+use rustc::middle::lang_items::ExchangeMallocFnLangItem;\n \n use base;\n use builder::Builder;"}, {"sha": "2fe463e92a8aad9540d4337b7da478622b40463a", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128fabb333a35eac6ee56001c0f7e5eb910a85d/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=1128fabb333a35eac6ee56001c0f7e5eb910a85d", "patch": "@@ -118,7 +118,7 @@ use std::sync::Arc;\n use syntax::ast::NodeId;\n use syntax::symbol::{Symbol, InternedString};\n use trans_item::{TransItem, InstantiationMode};\n-use util::nodemap::{FxHashMap, FxHashSet};\n+use rustc::util::nodemap::{FxHashMap, FxHashSet};\n \n pub enum PartitioningStrategy {\n     /// Generate one codegen unit per source-level module."}]}