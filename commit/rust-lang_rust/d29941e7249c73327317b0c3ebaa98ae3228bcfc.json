{"sha": "d29941e7249c73327317b0c3ebaa98ae3228bcfc", "node_id": "C_kwDOAAsO6NoAKGQyOTk0MWU3MjQ5YzczMzI3MzE3YjBjM2ViYWE5OGFlMzIyOGJjZmM", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-30T20:45:02Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-30T20:45:02Z"}, "message": "Remove needless allocation from example code of OsString", "tree": {"sha": "77d445e9daaf7659d63e0db1c5153603f1a91fd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77d445e9daaf7659d63e0db1c5153603f1a91fd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d29941e7249c73327317b0c3ebaa98ae3228bcfc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHOGk4ACgkQ+boUO5X/\nbYIPlA/+P5lB99vkuGMf3eVOLp9fmYLFR/gZTsMrObd61UGMZOLf5Ksx4GVoJzAh\nZMZIWBxZqkjfBC3F0d0HQtkese2YytWgf927g80Gw//BsS4gbf+vzlXpAmRZG1DE\n0SjpmBLMdWN8tM0UAri2M8X+dpUWkqQxFy05rxUWP6fh5xkAxrsOysFqLGdzr5ly\nPLRB1pFWgbN/pTKe9Qwugx+xq6VUtzzFNLPpvi1Z3bF6POP7guGZnAiMEJ3xA782\nF28dVD4BhswgHmQT5gS5VHgDTYLL0Jc7wPR9rsAyrQZFiloG+CrWI0E4iq91XeNt\nQlQS8JWAiWOWoQA13pvfQqk9KkJYHB90nL9SRZPugxBnClqgQYDWN+2+beT3eiiR\nOlaWCEj+rYmq717SFEIcDM7gr8kQgg/BCpFazNl4ksUQSlj0ISBI9nbRIZ0ZtZI5\nMCeGKyiS2nueFgzwRHYW/F0SsXqQL79fKoGUrDAoApOPkNeg8g7wKjquLN7QyfJ+\nAzptojsIS6LUfDq8tKMRFgg/Ewhl45yM/1ETSANM7vQwEafJC2nFetmGxh23wpja\nTwFpPRPPhfTZ2eNaotMw4GVRA7p6WOE8CAoiu2UomB86qP+1HHNCclmHy2kdnVNY\nc9wLLEAF9nSJVKFO3QlmaeX92CQxpacpSRp+hCr3HP/lUGgYOOo=\n=gdZ+\n-----END PGP SIGNATURE-----", "payload": "tree 77d445e9daaf7659d63e0db1c5153603f1a91fd1\nparent 1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a\nauthor David Tolnay <dtolnay@gmail.com> 1640897102 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1640897102 -0800\n\nRemove needless allocation from example code of OsString\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d29941e7249c73327317b0c3ebaa98ae3228bcfc", "html_url": "https://github.com/rust-lang/rust/commit/d29941e7249c73327317b0c3ebaa98ae3228bcfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d29941e7249c73327317b0c3ebaa98ae3228bcfc/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a", "html_url": "https://github.com/rust-lang/rust/commit/1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "982ad1898788e26104382347d239f8848bbfe1fa", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d29941e7249c73327317b0c3ebaa98ae3228bcfc/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d29941e7249c73327317b0c3ebaa98ae3228bcfc/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=d29941e7249c73327317b0c3ebaa98ae3228bcfc", "patch": "@@ -281,14 +281,14 @@ impl OsString {\n     ///\n     /// ```\n     /// #![feature(try_reserve_2)]\n-    /// use std::ffi::OsString;\n+    /// use std::ffi::{OsStr, OsString};\n     /// use std::collections::TryReserveError;\n     ///\n     /// fn process_data(data: &str) -> Result<OsString, TryReserveError> {\n     ///     let mut s = OsString::new();\n     ///\n     ///     // Pre-reserve the memory, exiting if we can't\n-    ///     s.try_reserve(OsString::from(data).len())?;\n+    ///     s.try_reserve(OsStr::new(data).len())?;\n     ///\n     ///     // Now we know this can't OOM in the middle of our complex work\n     ///     s.push(data);\n@@ -349,14 +349,14 @@ impl OsString {\n     ///\n     /// ```\n     /// #![feature(try_reserve_2)]\n-    /// use std::ffi::OsString;\n+    /// use std::ffi::{OsStr, OsString};\n     /// use std::collections::TryReserveError;\n     ///\n     /// fn process_data(data: &str) -> Result<OsString, TryReserveError> {\n     ///     let mut s = OsString::new();\n     ///\n     ///     // Pre-reserve the memory, exiting if we can't\n-    ///     s.try_reserve_exact(OsString::from(data).len())?;\n+    ///     s.try_reserve_exact(OsStr::new(data).len())?;\n     ///\n     ///     // Now we know this can't OOM in the middle of our complex work\n     ///     s.push(data);"}]}