{"sha": "ac33b2e578de58016271012452e4f1be6af9d516", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMzNiMmU1NzhkZTU4MDE2MjcxMDEyNDUyZTRmMWJlNmFmOWQ1MTY=", "commit": {"author": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2018-10-02T16:13:30Z"}, "committer": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2018-10-08T17:04:24Z"}, "message": "Run debuginfo tests against rust-enabled lldb, when possible\n\nIf the rust-enabled lldb was built, then use it when running the\ndebuginfo tests.  Updating the lldb submodule was necessary as this\nneeded a way to differentiate the rust-enabled lldb, so I added a line\nto the --version output.\n\nThis adds compiletest commands to differentiate between the\nrust-enabled and non-rust-enabled lldb, as is already done for gdb.  A\nnew \"rust-lldb\" header directive is also added, but not used in this\npatch; I plan to use it in #54004.\n\nThis updates all the tests.", "tree": {"sha": "6c6bdaecc5cf1d2bf3369d9f9c9949abe9ad7873", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c6bdaecc5cf1d2bf3369d9f9c9949abe9ad7873"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac33b2e578de58016271012452e4f1be6af9d516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac33b2e578de58016271012452e4f1be6af9d516", "html_url": "https://github.com/rust-lang/rust/commit/ac33b2e578de58016271012452e4f1be6af9d516", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac33b2e578de58016271012452e4f1be6af9d516/comments", "author": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6188c58a55a27efac25f6e50a8e5f18c2650b60f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6188c58a55a27efac25f6e50a8e5f18c2650b60f", "html_url": "https://github.com/rust-lang/rust/commit/6188c58a55a27efac25f6e50a8e5f18c2650b60f"}], "stats": {"total": 2107, "additions": 1405, "deletions": 702}, "files": [{"sha": "247727762d16e7efcf1fbfa06e3ff14835b2a565", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -278,10 +278,6 @@ pub struct Build {\n     initial_rustc: PathBuf,\n     initial_cargo: PathBuf,\n \n-    // Probed tools at runtime\n-    lldb_version: Option<String>,\n-    lldb_python_dir: Option<String>,\n-\n     // Runtime state filled in later on\n     // C/C++ compilers and archiver for all targets\n     cc: HashMap<Interned<String>, cc::Tool>,\n@@ -416,8 +412,6 @@ impl Build {\n             ar: HashMap::new(),\n             ranlib: HashMap::new(),\n             crates: HashMap::new(),\n-            lldb_version: None,\n-            lldb_python_dir: None,\n             is_sudo,\n             ci_env: CiEnv::current(),\n             delayed_failures: RefCell::new(Vec::new()),"}, {"sha": "724cb5841f48f1e975861dede918b5d7bc71779e", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -236,19 +236,6 @@ $ pacman -R cmake && pacman -S mingw-w64-x86_64-cmake\n         }\n     }\n \n-    let run = |cmd: &mut Command| {\n-        cmd.output().map(|output| {\n-            String::from_utf8_lossy(&output.stdout)\n-                   .lines().next().unwrap_or_else(|| {\n-                       panic!(\"{:?} failed {:?}\", cmd, output)\n-                   }).to_string()\n-        })\n-    };\n-    build.lldb_version = run(Command::new(\"lldb\").arg(\"--version\")).ok();\n-    if build.lldb_version.is_some() {\n-        build.lldb_python_dir = run(Command::new(\"lldb\").arg(\"-P\")).ok();\n-    }\n-\n     if let Some(ref s) = build.config.ccache {\n         cmd_finder.must_have(s);\n     }"}, {"sha": "633c15b54b9ef22298a6e7b47f862b57531ec399", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -1082,11 +1082,34 @@ impl Step for Compiletest {\n         if let Some(ref gdb) = builder.config.gdb {\n             cmd.arg(\"--gdb\").arg(gdb);\n         }\n-        if let Some(ref vers) = builder.lldb_version {\n+\n+        let run = |cmd: &mut Command| {\n+            cmd.output().map(|output| {\n+                String::from_utf8_lossy(&output.stdout)\n+                    .lines().next().unwrap_or_else(|| {\n+                        panic!(\"{:?} failed {:?}\", cmd, output)\n+                    }).to_string()\n+            })\n+        };\n+        let lldb_exe = if builder.config.lldb_enabled && !target.contains(\"emscripten\") {\n+            // Test against the lldb that was just built.\n+            builder.llvm_out(target)\n+                .join(\"bin\")\n+                .join(\"lldb\")\n+        } else {\n+            PathBuf::from(\"lldb\")\n+        };\n+        let lldb_version = Command::new(&lldb_exe)\n+            .arg(\"--version\")\n+            .output()\n+            .map(|output| { String::from_utf8_lossy(&output.stdout).to_string() })\n+            .ok();\n+        if let Some(ref vers) = lldb_version {\n             cmd.arg(\"--lldb-version\").arg(vers);\n-        }\n-        if let Some(ref dir) = builder.lldb_python_dir {\n-            cmd.arg(\"--lldb-python-dir\").arg(dir);\n+            let lldb_python_dir = run(Command::new(&lldb_exe).arg(\"-P\")).ok();\n+            if let Some(ref dir) = lldb_python_dir {\n+                cmd.arg(\"--lldb-python-dir\").arg(dir);\n+            }\n         }\n \n         // Get paths from cmd args"}, {"sha": "229f9466b512257ea140ca9ec9d8b3226e30c3b7", "filename": "src/test/debuginfo/associated-types.rs", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -51,33 +51,42 @@\n // lldb-command:run\n \n // lldb-command:print arg\n-// lldb-check:[...]$0 = Struct<i32> { b: -1, b1: 0 }\n+// lldbg-check:[...]$0 = Struct<i32> { b: -1, b1: 0 }\n+// lldbr-check:(associated_types::Struct<i32>) arg = Struct<i32> { b: -1, b1: 0 }\n // lldb-command:continue\n \n // lldb-command:print inferred\n-// lldb-check:[...]$1 = 1\n+// lldbg-check:[...]$1 = 1\n+// lldbr-check:(i64) inferred = 1\n // lldb-command:print explicitly\n-// lldb-check:[...]$2 = 1\n+// lldbg-check:[...]$2 = 1\n+// lldbr-check:(i64) explicitly = 1\n // lldb-command:continue\n \n // lldb-command:print arg\n-// lldb-check:[...]$3 = 2\n+// lldbg-check:[...]$3 = 2\n+// lldbr-check:(i64) arg = 2\n // lldb-command:continue\n \n // lldb-command:print arg\n-// lldb-check:[...]$4 = (4, 5)\n+// lldbg-check:[...]$4 = (4, 5)\n+// lldbr-check:((i32, i64)) arg = { = 4 = 5 }\n // lldb-command:continue\n \n // lldb-command:print a\n-// lldb-check:[...]$5 = 6\n+// lldbg-check:[...]$5 = 6\n+// lldbr-check:(i32) a = 6\n // lldb-command:print b\n-// lldb-check:[...]$6 = 7\n+// lldbg-check:[...]$6 = 7\n+// lldbr-check:(i64) b = 7\n // lldb-command:continue\n \n // lldb-command:print a\n-// lldb-check:[...]$7 = 8\n+// lldbg-check:[...]$7 = 8\n+// lldbr-check:(i64) a = 8\n // lldb-command:print b\n-// lldb-check:[...]$8 = 9\n+// lldbg-check:[...]$8 = 9\n+// lldbr-check:(i32) b = 9\n // lldb-command:continue\n \n #![allow(unused_variables)]"}, {"sha": "75737cd6f135e835cdc9337a8a77c1a2fd2eeaae", "filename": "src/test/debuginfo/basic-types.rs", "status": "modified", "additions": 29, "deletions": 16, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -56,36 +56,49 @@\n \n // lldb-command:run\n // lldb-command:print b\n-// lldb-check:[...]$0 = false\n+// lldbg-check:[...]$0 = false\n+// lldbr-check:(bool) b = false\n // lldb-command:print i\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) i = -1\n \n-// NOTE: LLDB does not support 32bit chars\n-// d ebugger:print (usize)(c)\n-// c heck:$3 = 97\n+// NOTE: only rust-enabled lldb supports 32bit chars\n+// lldbr-command:print c\n+// lldbr-check:(char) c = 'a'\n \n // lldb-command:print i8\n-// lldb-check:[...]$2 = 'D'\n+// lldbg-check:[...]$2 = 'D'\n+// lldbr-check:(i8) i8 = 68\n // lldb-command:print i16\n-// lldb-check:[...]$3 = -16\n+// lldbg-check:[...]$3 = -16\n+// lldbr-check:(i16) i16 = -16\n // lldb-command:print i32\n-// lldb-check:[...]$4 = -32\n+// lldbg-check:[...]$4 = -32\n+// lldbr-check:(i32) i32 = -32\n // lldb-command:print i64\n-// lldb-check:[...]$5 = -64\n+// lldbg-check:[...]$5 = -64\n+// lldbr-check:(i64) i64 = -64\n // lldb-command:print u\n-// lldb-check:[...]$6 = 1\n+// lldbg-check:[...]$6 = 1\n+// lldbr-check:(usize) u = 1\n // lldb-command:print u8\n-// lldb-check:[...]$7 = 'd'\n+// lldbg-check:[...]$7 = 'd'\n+// lldbr-check:(u8) u8 = 100\n // lldb-command:print u16\n-// lldb-check:[...]$8 = 16\n+// lldbg-check:[...]$8 = 16\n+// lldbr-check:(u16) u16 = 16\n // lldb-command:print u32\n-// lldb-check:[...]$9 = 32\n+// lldbg-check:[...]$9 = 32\n+// lldbr-check:(u32) u32 = 32\n // lldb-command:print u64\n-// lldb-check:[...]$10 = 64\n+// lldbg-check:[...]$10 = 64\n+// lldbr-check:(u64) u64 = 64\n // lldb-command:print f32\n-// lldb-check:[...]$11 = 2.5\n+// lldbg-check:[...]$11 = 2.5\n+// lldbr-check:(f32) f32 = 2.5\n // lldb-command:print f64\n-// lldb-check:[...]$12 = 3.5\n+// lldbg-check:[...]$12 = 3.5\n+// lldbr-check:(f64) f64 = 3.5\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "6f618c3881f968e056b8a7e2c4193ac66833c1a8", "filename": "src/test/debuginfo/borrowed-basic.rs", "status": "modified", "additions": 29, "deletions": 16, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -68,47 +68,60 @@\n \n // lldb-command:run\n // lldb-command:print *bool_ref\n-// lldb-check:[...]$0 = true\n+// lldbg-check:[...]$0 = true\n+// lldbr-check:(bool) *bool_ref = true\n \n // lldb-command:print *int_ref\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) *int_ref = -1\n \n-// NOTE: lldb doesn't support 32bit chars at the moment\n-// d ebugger:print *char_ref\n-// c heck:[...]$x = 97\n+// NOTE: only rust-enabled lldb supports 32bit chars\n+// lldbr-command:print *char_ref\n+// lldbr-check:(char) *char_ref = 'a'\n \n // lldb-command:print *i8_ref\n-// lldb-check:[...]$2 = 'D'\n+// lldbg-check:[...]$2 = 'D'\n+// lldbr-check:(i8) *i8_ref = 68\n \n // lldb-command:print *i16_ref\n-// lldb-check:[...]$3 = -16\n+// lldbg-check:[...]$3 = -16\n+// lldbr-check:(i16) *i16_ref = -16\n \n // lldb-command:print *i32_ref\n-// lldb-check:[...]$4 = -32\n+// lldbg-check:[...]$4 = -32\n+// lldbr-check:(i32) *i32_ref = -32\n \n // lldb-command:print *i64_ref\n-// lldb-check:[...]$5 = -64\n+// lldbg-check:[...]$5 = -64\n+// lldbr-check:(i64) *i64_ref = -64\n \n // lldb-command:print *uint_ref\n-// lldb-check:[...]$6 = 1\n+// lldbg-check:[...]$6 = 1\n+// lldbr-check:(usize) *uint_ref = 1\n \n // lldb-command:print *u8_ref\n-// lldb-check:[...]$7 = 'd'\n+// lldbg-check:[...]$7 = 'd'\n+// lldbr-check:(u8) *u8_ref = 100\n \n // lldb-command:print *u16_ref\n-// lldb-check:[...]$8 = 16\n+// lldbg-check:[...]$8 = 16\n+// lldbr-check:(u16) *u16_ref = 16\n \n // lldb-command:print *u32_ref\n-// lldb-check:[...]$9 = 32\n+// lldbg-check:[...]$9 = 32\n+// lldbr-check:(u32) *u32_ref = 32\n \n // lldb-command:print *u64_ref\n-// lldb-check:[...]$10 = 64\n+// lldbg-check:[...]$10 = 64\n+// lldbr-check:(u64) *u64_ref = 64\n \n // lldb-command:print *f32_ref\n-// lldb-check:[...]$11 = 2.5\n+// lldbg-check:[...]$11 = 2.5\n+// lldbr-check:(f32) *f32_ref = 2.5\n \n // lldb-command:print *f64_ref\n-// lldb-check:[...]$12 = 3.5\n+// lldbg-check:[...]$12 = 3.5\n+// lldbr-check:(f64) *f64_ref = 3.5\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "73b92b82ba0a6032c888e9301be75cbbad271185", "filename": "src/test/debuginfo/borrowed-c-style-enum.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -34,13 +34,16 @@\n // lldb-command:run\n \n // lldb-command:print *the_a_ref\n-// lldb-check:[...]$0 = TheA\n+// lldbg-check:[...]$0 = TheA\n+// lldbr-check:(borrowed_c_style_enum::ABC) *the_a_ref = borrowed_c_style_enum::ABC::TheA\n \n // lldb-command:print *the_b_ref\n-// lldb-check:[...]$1 = TheB\n+// lldbg-check:[...]$1 = TheB\n+// lldbr-check:(borrowed_c_style_enum::ABC) *the_b_ref = borrowed_c_style_enum::ABC::TheB\n \n // lldb-command:print *the_c_ref\n-// lldb-check:[...]$2 = TheC\n+// lldbg-check:[...]$2 = TheC\n+// lldbr-check:(borrowed_c_style_enum::ABC) *the_c_ref = borrowed_c_style_enum::ABC::TheC\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "9143e83343fb89cddc0ee653302d92e8e4c585c1", "filename": "src/test/debuginfo/borrowed-enum.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -36,11 +36,14 @@\n // lldb-command:run\n \n // lldb-command:print *the_a_ref\n-// lldb-check:[...]$0 = TheA { x: 0, y: 8970181431921507452 }\n+// lldbg-check:[...]$0 = TheA { x: 0, y: 8970181431921507452 }\n+// lldbr-check:(borrowed_enum::ABC::TheA) *the_a_ref = TheA { borrowed_enum::ABC::TheA: 0, borrowed_enum::ABC::TheB: 8970181431921507452 }\n // lldb-command:print *the_b_ref\n-// lldb-check:[...]$1 = TheB(0, 286331153, 286331153)\n+// lldbg-check:[...]$1 = TheB(0, 286331153, 286331153)\n+// lldbr-check:(borrowed_enum::ABC::TheB) *the_b_ref = { = 0 = 286331153 = 286331153 }\n // lldb-command:print *univariant_ref\n-// lldb-check:[...]$2 = TheOnlyCase(4820353753753434)\n+// lldbg-check:[...]$2 = TheOnlyCase(4820353753753434)\n+// lldbr-check:(borrowed_enum::Univariant) *univariant_ref = { borrowed_enum::TheOnlyCase = { = 4820353753753434 } }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "3efb4dd470e65800ce62a5b860ecb7dc1f96eace", "filename": "src/test/debuginfo/borrowed-struct.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -45,25 +45,32 @@\n // lldb-command:run\n \n // lldb-command:print *stack_val_ref\n-// lldb-check:[...]$0 = SomeStruct { x: 10, y: 23.5 }\n+// lldbg-check:[...]$0 = SomeStruct { x: 10, y: 23.5 }\n+// lldbr-check:(borrowed_struct::SomeStruct) *stack_val_ref = SomeStruct { x: 10, y: 23.5 }\n \n // lldb-command:print *stack_val_interior_ref_1\n-// lldb-check:[...]$1 = 10\n+// lldbg-check:[...]$1 = 10\n+// lldbr-check:(isize) *stack_val_interior_ref_1 = 10\n \n // lldb-command:print *stack_val_interior_ref_2\n-// lldb-check:[...]$2 = 23.5\n+// lldbg-check:[...]$2 = 23.5\n+// lldbr-check:(f64) *stack_val_interior_ref_2 = 23.5\n \n // lldb-command:print *ref_to_unnamed\n-// lldb-check:[...]$3 = SomeStruct { x: 11, y: 24.5 }\n+// lldbg-check:[...]$3 = SomeStruct { x: 11, y: 24.5 }\n+// lldbr-check:(borrowed_struct::SomeStruct) *ref_to_unnamed = SomeStruct { x: 11, y: 24.5 }\n \n // lldb-command:print *unique_val_ref\n-// lldb-check:[...]$4 = SomeStruct { x: 13, y: 26.5 }\n+// lldbg-check:[...]$4 = SomeStruct { x: 13, y: 26.5 }\n+// lldbr-check:(borrowed_struct::SomeStruct) *unique_val_ref = SomeStruct { x: 13, y: 26.5 }\n \n // lldb-command:print *unique_val_interior_ref_1\n-// lldb-check:[...]$5 = 13\n+// lldbg-check:[...]$5 = 13\n+// lldbr-check:(isize) *unique_val_interior_ref_1 = 13\n \n // lldb-command:print *unique_val_interior_ref_2\n-// lldb-check:[...]$6 = 26.5\n+// lldbg-check:[...]$6 = 26.5\n+// lldbr-check:(f64) *unique_val_interior_ref_2 = 26.5\n \n #![allow(unused_variables)]\n #![feature(box_syntax)]"}, {"sha": "ec7c000350f53023ce9fa366227feab7b4a54c48", "filename": "src/test/debuginfo/borrowed-tuple.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -34,13 +34,16 @@\n // lldb-command:run\n \n // lldb-command:print *stack_val_ref\n-// lldb-check:[...]$0 = (-14, -19)\n+// lldbg-check:[...]$0 = (-14, -19)\n+// lldbr-check:((i16, f32)) *stack_val_ref = { = -14 = -19 }\n \n // lldb-command:print *ref_to_unnamed\n-// lldb-check:[...]$1 = (-15, -20)\n+// lldbg-check:[...]$1 = (-15, -20)\n+// lldbr-check:((i16, f32)) *ref_to_unnamed = { = -15 = -20 }\n \n // lldb-command:print *unique_val_ref\n-// lldb-check:[...]$2 = (-17, -22)\n+// lldbg-check:[...]$2 = (-17, -22)\n+// lldbr-check:((i16, f32)) *unique_val_ref = { = -17 = -22 }\n \n \n #![allow(unused_variables)]"}, {"sha": "78effa5f3dffe3af4575bfb9d6bac054e0f6d7f6", "filename": "src/test/debuginfo/borrowed-unique-basic.rs", "status": "modified", "additions": 29, "deletions": 15, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -70,46 +70,60 @@\n // lldb-command:run\n \n // lldb-command:print *bool_ref\n-// lldb-check:[...]$0 = true\n+// lldbg-check:[...]$0 = true\n+// lldbr-check:(bool) *bool_ref = true\n \n // lldb-command:print *int_ref\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) *int_ref = -1\n \n-// d ebugger:print *char_ref\n-// c heck:[...]$3 = 97\n+// NOTE: only rust-enabled lldb supports 32bit chars\n+// lldbr-command:print *char_ref\n+// lldbr-check:(char) *char_ref = 97\n \n // lldb-command:print *i8_ref\n-// lldb-check:[...]$2 = 68\n+// lldbg-check:[...]$2 = 68\n+// lldbr-check:(i8) *i8_ref = 68\n \n // lldb-command:print *i16_ref\n-// lldb-check:[...]$3 = -16\n+// lldbg-check:[...]$3 = -16\n+// lldbr-check:(i16) *i16_ref = -16\n \n // lldb-command:print *i32_ref\n-// lldb-check:[...]$4 = -32\n+// lldbg-check:[...]$4 = -32\n+// lldbr-check:(i32) *i32_ref = -32\n \n // lldb-command:print *i64_ref\n-// lldb-check:[...]$5 = -64\n+// lldbg-check:[...]$5 = -64\n+// lldbr-check:(i64) *i64_ref = -64\n \n // lldb-command:print *uint_ref\n-// lldb-check:[...]$6 = 1\n+// lldbg-check:[...]$6 = 1\n+// lldbr-check:(usize) *uint_ref = 1\n \n // lldb-command:print *u8_ref\n-// lldb-check:[...]$7 = 100\n+// lldbg-check:[...]$7 = 100\n+// lldbr-check:(u8) *u8_ref = 100\n \n // lldb-command:print *u16_ref\n-// lldb-check:[...]$8 = 16\n+// lldbg-check:[...]$8 = 16\n+// lldbr-check:(u16) *u16_ref = 16\n \n // lldb-command:print *u32_ref\n-// lldb-check:[...]$9 = 32\n+// lldbg-check:[...]$9 = 32\n+// lldbr-check:(u32) *u32_ref = 32\n \n // lldb-command:print *u64_ref\n-// lldb-check:[...]$10 = 64\n+// lldbg-check:[...]$10 = 64\n+// lldbr-check:(u64) *u64_ref = 64\n \n // lldb-command:print *f32_ref\n-// lldb-check:[...]$11 = 2.5\n+// lldbg-check:[...]$11 = 2.5\n+// lldbr-check:(f32) *f32_ref = 2.5\n \n // lldb-command:print *f64_ref\n-// lldb-check:[...]$12 = 3.5\n+// lldbg-check:[...]$12 = 3.5\n+// lldbr-check:(f64) *f64_ref = 3.5\n \n #![allow(unused_variables)]\n #![feature(box_syntax)]"}, {"sha": "7e25a9bf76a86e947511c16f88386d000a923e13", "filename": "src/test/debuginfo/box.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbox.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -27,9 +27,11 @@\n \n // lldb-command:run\n // lldb-command:print *a\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(i32) *a = 1\n // lldb-command:print *b\n-// lldb-check:[...]$1 = (2, 3.5)\n+// lldbg-check:[...]$1 = (2, 3.5)\n+// lldbr-check:((i32, f64)) *b = { = 2 = 3.5 }\n \n #![allow(unused_variables)]\n #![feature(box_syntax)]"}, {"sha": "130ea3822cb3ae9e91eee7886d7fd80e2ab610ea", "filename": "src/test/debuginfo/boxed-struct.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n+\n // min-lldb-version: 310\n \n // compile-flags:-g\n@@ -30,10 +32,12 @@\n // lldb-command:run\n \n // lldb-command:print *unique\n-// lldb-check:[...]$0 = StructWithSomePadding { x: 99, y: 999, z: 9999, w: 99999 }\n+// lldbg-check:[...]$0 = StructWithSomePadding { x: 99, y: 999, z: 9999, w: 99999 }\n+// lldbr-check:(boxed_struct::StructWithSomePadding) *unique = StructWithSomePadding { x: 99, y: 999, z: 9999, w: 99999 }\n \n // lldb-command:print *unique_dtor\n-// lldb-check:[...]$1 = StructWithDestructor { x: 77, y: 777, z: 7777, w: 77777 }\n+// lldbg-check:[...]$1 = StructWithDestructor { x: 77, y: 777, z: 7777, w: 77777 }\n+// lldbr-check:(boxed_struct::StructWithDestructor) *unique_dtor = StructWithDestructor { x: 77, y: 777, z: 7777, w: 77777 }\n \n #![allow(unused_variables)]\n #![feature(box_syntax)]"}, {"sha": "c0fb2dbdda2746776004599a6b7f288f253d3e50", "filename": "src/test/debuginfo/by-value-self-argument-in-trait-impl.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -36,15 +36,18 @@\n // lldb-command:run\n \n // lldb-command:print self\n-// lldb-check:[...]$0 = 1111\n+// lldbg-check:[...]$0 = 1111\n+// lldbr-check:(isize) self = 1111\n // lldb-command:continue\n \n // lldb-command:print self\n-// lldb-check:[...]$1 = Struct { x: 2222, y: 3333 }\n+// lldbg-check:[...]$1 = Struct { x: 2222, y: 3333 }\n+// lldbr-check:(by_value_self_argument_in_trait_impl::Struct) self = Struct { x: 2222, y: 3333 }\n // lldb-command:continue\n \n // lldb-command:print self\n-// lldb-check:[...]$2 = (4444.5, 5555, 6666, 7777.5)\n+// lldbg-check:[...]$2 = (4444.5, 5555, 6666, 7777.5)\n+// lldbr-check:((f64, isize, isize, f64)) self = { = 4444.5 = 5555 = 6666 = 7777.5 }\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "0a19a040a5f438bed847e4d88a6a48b15ca7844d", "filename": "src/test/debuginfo/c-style-enum-in-composite.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -50,24 +50,31 @@\n // lldb-command:run\n \n // lldb-command:print tuple_interior_padding\n-// lldb-check:[...]$0 = (0, OneHundred)\n+// lldbg-check:[...]$0 = (0, OneHundred)\n+// lldbr-check:((i16, c_style_enum_in_composite::AnEnum)) tuple_interior_padding = { = 0 = c_style_enum_in_composite::AnEnum::OneHundred }\n \n // lldb-command:print tuple_padding_at_end\n-// lldb-check:[...]$1 = ((1, OneThousand), 2)\n+// lldbg-check:[...]$1 = ((1, OneThousand), 2)\n+// lldbr-check:(((u64, c_style_enum_in_composite::AnEnum), u64)) tuple_padding_at_end = { = { = 1 = c_style_enum_in_composite::AnEnum::OneThousand } = 2 }\n // lldb-command:print tuple_different_enums\n-// lldb-check:[...]$2 = (OneThousand, MountainView, OneMillion, Vienna)\n+// lldbg-check:[...]$2 = (OneThousand, MountainView, OneMillion, Vienna)\n+// lldbr-check:((c_style_enum_in_composite::AnEnum, c_style_enum_in_composite::AnotherEnum, c_style_enum_in_composite::AnEnum, c_style_enum_in_composite::AnotherEnum)) tuple_different_enums = { = c_style_enum_in_composite::AnEnum::OneThousand = c_style_enum_in_composite::AnotherEnum::MountainView = c_style_enum_in_composite::AnEnum::OneMillion = c_style_enum_in_composite::AnotherEnum::Vienna }\n \n // lldb-command:print padded_struct\n-// lldb-check:[...]$3 = PaddedStruct { a: 3, b: OneMillion, c: 4, d: Toronto, e: 5 }\n+// lldbg-check:[...]$3 = PaddedStruct { a: 3, b: OneMillion, c: 4, d: Toronto, e: 5 }\n+// lldbr-check:(c_style_enum_in_composite::PaddedStruct) padded_struct = PaddedStruct { a: 3, b: c_style_enum_in_composite::AnEnum::OneMillion, c: 4, d: c_style_enum_in_composite::AnotherEnum::Toronto, e: 5 }\n \n // lldb-command:print packed_struct\n-// lldb-check:[...]$4 = PackedStruct { a: 6, b: OneHundred, c: 7, d: Vienna, e: 8 }\n+// lldbg-check:[...]$4 = PackedStruct { a: 6, b: OneHundred, c: 7, d: Vienna, e: 8 }\n+// lldbr-check:(c_style_enum_in_composite::PackedStruct) packed_struct = PackedStruct { a: 6, b: c_style_enum_in_composite::AnEnum::OneHundred, c: 7, d: c_style_enum_in_composite::AnotherEnum::Vienna, e: 8 }\n \n // lldb-command:print non_padded_struct\n-// lldb-check:[...]$5 = NonPaddedStruct { a: OneMillion, b: MountainView, c: OneThousand, d: Toronto }\n+// lldbg-check:[...]$5 = NonPaddedStruct { a: OneMillion, b: MountainView, c: OneThousand, d: Toronto }\n+// lldbr-check:(c_style_enum_in_composite::NonPaddedStruct) non_padded_struct = NonPaddedStruct { a: c_style_enum_in_composite::AnEnum::OneMillion, b: c_style_enum_in_composite::AnotherEnum::MountainView, c: c_style_enum_in_composite::AnEnum::OneThousand, d: c_style_enum_in_composite::AnotherEnum::Toronto }\n \n // lldb-command:print struct_with_drop\n-// lldb-check:[...]$6 = (StructWithDrop { a: OneHundred, b: Vienna }, 9)\n+// lldbg-check:[...]$6 = (StructWithDrop { a: OneHundred, b: Vienna }, 9)\n+// lldbr-check:((c_style_enum_in_composite::StructWithDrop, i64)) struct_with_drop = { = StructWithDrop { a: c_style_enum_in_composite::AnEnum::OneHundred, b: c_style_enum_in_composite::AnotherEnum::Vienna } = 9 }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "a756d4fdf6ce799fb192cdf73ac10459af284e64", "filename": "src/test/debuginfo/c-style-enum.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n+\n // ignore-aarch64\n // ignore-gdb // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n // min-lldb-version: 310\n@@ -107,25 +109,32 @@\n // lldb-command:run\n \n // lldb-command:print auto_one\n-// lldb-check:[...]$0 = One\n+// lldbg-check:[...]$0 = One\n+// lldbr-check:(c_style_enum::AutoDiscriminant) auto_one = c_style_enum::AutoDiscriminant::One\n \n // lldb-command:print auto_two\n-// lldb-check:[...]$1 = Two\n+// lldbg-check:[...]$1 = Two\n+// lldbr-check:(c_style_enum::AutoDiscriminant) auto_two = c_style_enum::AutoDiscriminant::Two\n \n // lldb-command:print auto_three\n-// lldb-check:[...]$2 = Three\n+// lldbg-check:[...]$2 = Three\n+// lldbr-check:(c_style_enum::AutoDiscriminant) auto_three = c_style_enum::AutoDiscriminant::Three\n \n // lldb-command:print manual_one_hundred\n-// lldb-check:[...]$3 = OneHundred\n+// lldbg-check:[...]$3 = OneHundred\n+// lldbr-check:(c_style_enum::ManualDiscriminant) manual_one_hundred = c_style_enum::ManualDiscriminant::OneHundred\n \n // lldb-command:print manual_one_thousand\n-// lldb-check:[...]$4 = OneThousand\n+// lldbg-check:[...]$4 = OneThousand\n+// lldbr-check:(c_style_enum::ManualDiscriminant) manual_one_thousand = c_style_enum::ManualDiscriminant::OneThousand\n \n // lldb-command:print manual_one_million\n-// lldb-check:[...]$5 = OneMillion\n+// lldbg-check:[...]$5 = OneMillion\n+// lldbr-check:(c_style_enum::ManualDiscriminant) manual_one_million = c_style_enum::ManualDiscriminant::OneMillion\n \n // lldb-command:print single_variant\n-// lldb-check:[...]$6 = TheOnlyVariant\n+// lldbg-check:[...]$6 = TheOnlyVariant\n+// lldbr-check:(c_style_enum::SingleVariant) single_variant = c_style_enum::SingleVariant::TheOnlyVariant\n \n #![allow(unused_variables)]\n #![allow(dead_code)]"}, {"sha": "bb61b394a9c7be2831228671e66f38d8e0ca8488", "filename": "src/test/debuginfo/closure-in-generic-function.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -34,15 +34,19 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = 0.5\n+// lldbg-check:[...]$0 = 0.5\n+// lldbr-check:(f64) x = 0.5\n // lldb-command:print y\n-// lldb-check:[...]$1 = 10\n+// lldbg-check:[...]$1 = 10\n+// lldbr-check:(i32) y = 10\n // lldb-command:continue\n \n // lldb-command:print *x\n-// lldb-check:[...]$2 = 29\n+// lldbg-check:[...]$2 = 29\n+// lldbr-check:(i32) *x = 29\n // lldb-command:print *y\n-// lldb-check:[...]$3 = 110\n+// lldbg-check:[...]$3 = 110\n+// lldbr-check:(i32) *y = 110\n // lldb-command:continue\n \n #![feature(box_syntax)]"}, {"sha": "9002e19ce21baa77b38b903e732393794e475362", "filename": "src/test/debuginfo/cross-crate-spans.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fcross-crate-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fcross-crate-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fcross-crate-spans.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -50,19 +50,25 @@ extern crate cross_crate_spans;\n // lldb-command:run\n \n // lldb-command:print result\n-// lldb-check:[...]$0 = (17, 17)\n+// lldbg-check:[...]$0 = (17, 17)\n+// lldbr-check:((u32, u32)) result = { = 17 = 17 }\n // lldb-command:print a_variable\n-// lldb-check:[...]$1 = 123456789\n+// lldbg-check:[...]$1 = 123456789\n+// lldbr-check:(u32) a_variable = 123456789\n // lldb-command:print another_variable\n-// lldb-check:[...]$2 = 123456789.5\n+// lldbg-check:[...]$2 = 123456789.5\n+// lldbr-check:(f64) another_variable = 123456789.5\n // lldb-command:continue\n \n // lldb-command:print result\n-// lldb-check:[...]$3 = (1212, 1212)\n+// lldbg-check:[...]$3 = (1212, 1212)\n+// lldbr-check:((i16, i16)) result = { = 1212 = 1212 }\n // lldb-command:print a_variable\n-// lldb-check:[...]$4 = 123456789\n+// lldbg-check:[...]$4 = 123456789\n+// lldbr-check:(u32) a_variable = 123456789\n // lldb-command:print another_variable\n-// lldb-check:[...]$5 = 123456789.5\n+// lldbg-check:[...]$5 = 123456789.5\n+// lldbr-check:(f64) another_variable = 123456789.5\n // lldb-command:continue\n \n "}, {"sha": "b152fa27906f1d146fee8142c683d9817ddb5f2b", "filename": "src/test/debuginfo/destructured-fn-argument.rs", "status": "modified", "additions": 98, "deletions": 49, "changes": 147, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -174,147 +174,196 @@\n // lldb-command:run\n \n // lldb-command:print a\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(isize) a = 1\n // lldb-command:print b\n-// lldb-check:[...]$1 = false\n+// lldbg-check:[...]$1 = false\n+// lldbr-check:(bool) b = false\n // lldb-command:continue\n \n // lldb-command:print a\n-// lldb-check:[...]$2 = 2\n+// lldbg-check:[...]$2 = 2\n+// lldbr-check:(isize) a = 2\n // lldb-command:print b\n-// lldb-check:[...]$3 = 3\n+// lldbg-check:[...]$3 = 3\n+// lldbr-check:(u16) b = 3\n // lldb-command:print c\n-// lldb-check:[...]$4 = 4\n+// lldbg-check:[...]$4 = 4\n+// lldbr-check:(u16) c = 4\n // lldb-command:continue\n \n // lldb-command:print a\n-// lldb-check:[...]$5 = 5\n+// lldbg-check:[...]$5 = 5\n+// lldbr-check:(isize) a = 5\n // lldb-command:print b\n-// lldb-check:[...]$6 = (6, 7)\n+// lldbg-check:[...]$6 = (6, 7)\n+// lldbr-check:((u32, u32)) b = { = 6 = 7 }\n // lldb-command:continue\n \n // lldb-command:print h\n-// lldb-check:[...]$7 = 8\n+// lldbg-check:[...]$7 = 8\n+// lldbr-check:(i16) h = 8\n // lldb-command:print i\n-// lldb-check:[...]$8 = Struct { a: 9, b: 10 }\n+// lldbg-check:[...]$8 = Struct { a: 9, b: 10 }\n+// lldbr-check:(destructured_fn_argument::Struct) i = Struct { a: 9, b: 10 }\n // lldb-command:print j\n-// lldb-check:[...]$9 = 11\n+// lldbg-check:[...]$9 = 11\n+// lldbr-check:(i16) j = 11\n // lldb-command:continue\n \n // lldb-command:print k\n-// lldb-check:[...]$10 = 12\n+// lldbg-check:[...]$10 = 12\n+// lldbr-check:(i64) k = 12\n // lldb-command:print l\n-// lldb-check:[...]$11 = 13\n+// lldbg-check:[...]$11 = 13\n+// lldbr-check:(i32) l = 13\n // lldb-command:continue\n \n // lldb-command:print m\n-// lldb-check:[...]$12 = 14\n+// lldbg-check:[...]$12 = 14\n+// lldbr-check:(isize) m = 14\n // lldb-command:print n\n-// lldb-check:[...]$13 = 16\n+// lldbg-check:[...]$13 = 16\n+// lldbr-check:(i32) n = 16\n // lldb-command:continue\n \n // lldb-command:print o\n-// lldb-check:[...]$14 = 18\n+// lldbg-check:[...]$14 = 18\n+// lldbr-check:(i32) o = 18\n // lldb-command:continue\n \n // lldb-command:print p\n-// lldb-check:[...]$15 = 19\n+// lldbg-check:[...]$15 = 19\n+// lldbr-check:(i64) p = 19\n // lldb-command:print q\n-// lldb-check:[...]$16 = 20\n+// lldbg-check:[...]$16 = 20\n+// lldbr-check:(i32) q = 20\n // lldb-command:print r\n-// lldb-check:[...]$17 = Struct { a: 21, b: 22 }\n+// lldbg-check:[...]$17 = Struct { a: 21, b: 22 }\n+// lldbr-check:(destructured_fn_argument::Struct) r = Struct { a: 21, b: 22 }\n // lldb-command:continue\n \n // lldb-command:print s\n-// lldb-check:[...]$18 = 24\n+// lldbg-check:[...]$18 = 24\n+// lldbr-check:(i32) s = 24\n // lldb-command:print t\n-// lldb-check:[...]$19 = 23\n+// lldbg-check:[...]$19 = 23\n+// lldbr-check:(i64) t = 23\n // lldb-command:continue\n \n // lldb-command:print u\n-// lldb-check:[...]$20 = 25\n+// lldbg-check:[...]$20 = 25\n+// lldbr-check:(i16) u = 25\n // lldb-command:print v\n-// lldb-check:[...]$21 = 26\n+// lldbg-check:[...]$21 = 26\n+// lldbr-check:(i32) v = 26\n // lldb-command:print w\n-// lldb-check:[...]$22 = 27\n+// lldbg-check:[...]$22 = 27\n+// lldbr-check:(i64) w = 27\n // lldb-command:print x\n-// lldb-check:[...]$23 = 28\n+// lldbg-check:[...]$23 = 28\n+// lldbr-check:(i32) x = 28\n // lldb-command:print y\n-// lldb-check:[...]$24 = 29\n+// lldbg-check:[...]$24 = 29\n+// lldbr-check:(i64) y = 29\n // lldb-command:print z\n-// lldb-check:[...]$25 = 30\n+// lldbg-check:[...]$25 = 30\n+// lldbr-check:(i32) z = 30\n // lldb-command:print ae\n-// lldb-check:[...]$26 = 31\n+// lldbg-check:[...]$26 = 31\n+// lldbr-check:(i64) ae = 31\n // lldb-command:print oe\n-// lldb-check:[...]$27 = 32\n+// lldbg-check:[...]$27 = 32\n+// lldbr-check:(i32) oe = 32\n // lldb-command:print ue\n-// lldb-check:[...]$28 = 33\n+// lldbg-check:[...]$28 = 33\n+// lldbr-check:(u16) ue = 33\n // lldb-command:continue\n \n // lldb-command:print aa\n-// lldb-check:[...]$29 = (34, 35)\n+// lldbg-check:[...]$29 = (34, 35)\n+// lldbr-check:((isize, isize)) aa = { = 34 = 35 }\n // lldb-command:continue\n \n // lldb-command:print bb\n-// lldb-check:[...]$30 = (36, 37)\n+// lldbg-check:[...]$30 = (36, 37)\n+// lldbr-check:((isize, isize)) bb = { = 36 = 37 }\n // lldb-command:continue\n \n // lldb-command:print cc\n-// lldb-check:[...]$31 = 38\n+// lldbg-check:[...]$31 = 38\n+// lldbr-check:(isize) cc = 38\n // lldb-command:continue\n \n // lldb-command:print dd\n-// lldb-check:[...]$32 = (40, 41, 42)\n+// lldbg-check:[...]$32 = (40, 41, 42)\n+// lldbr-check:((isize, isize, isize)) dd = { = 40 = 41 = 42 }\n // lldb-command:continue\n \n // lldb-command:print *ee\n-// lldb-check:[...]$33 = (43, 44, 45)\n+// lldbg-check:[...]$33 = (43, 44, 45)\n+// lldbr-check:((isize, isize, isize)) *ee = { = 43 = 44 = 45 }\n // lldb-command:continue\n \n // lldb-command:print *ff\n-// lldb-check:[...]$34 = 46\n+// lldbg-check:[...]$34 = 46\n+// lldbr-check:(isize) *ff = 46\n // lldb-command:print gg\n-// lldb-check:[...]$35 = (47, 48)\n+// lldbg-check:[...]$35 = (47, 48)\n+// lldbr-check:((isize, isize)) gg = { = 47 = 48 }\n // lldb-command:continue\n \n // lldb-command:print *hh\n-// lldb-check:[...]$36 = 50\n+// lldbg-check:[...]$36 = 50\n+// lldbr-check:(i32) *hh = 50\n // lldb-command:continue\n \n // lldb-command:print ii\n-// lldb-check:[...]$37 = 51\n+// lldbg-check:[...]$37 = 51\n+// lldbr-check:(i32) ii = 51\n // lldb-command:continue\n \n // lldb-command:print *jj\n-// lldb-check:[...]$38 = 52\n+// lldbg-check:[...]$38 = 52\n+// lldbr-check:(i32) *jj = 52\n // lldb-command:continue\n \n // lldb-command:print kk\n-// lldb-check:[...]$39 = 53\n+// lldbg-check:[...]$39 = 53\n+// lldbr-check:(f64) kk = 53\n // lldb-command:print ll\n-// lldb-check:[...]$40 = 54\n+// lldbg-check:[...]$40 = 54\n+// lldbr-check:(isize) ll = 54\n // lldb-command:continue\n \n // lldb-command:print mm\n-// lldb-check:[...]$41 = 55\n+// lldbg-check:[...]$41 = 55\n+// lldbr-check:(f64) mm = 55\n // lldb-command:print *nn\n-// lldb-check:[...]$42 = 56\n+// lldbg-check:[...]$42 = 56\n+// lldbr-check:(isize) *nn = 56\n // lldb-command:continue\n \n // lldb-command:print oo\n-// lldb-check:[...]$43 = 57\n+// lldbg-check:[...]$43 = 57\n+// lldbr-check:(isize) oo = 57\n // lldb-command:print pp\n-// lldb-check:[...]$44 = 58\n+// lldbg-check:[...]$44 = 58\n+// lldbr-check:(isize) pp = 58\n // lldb-command:print qq\n-// lldb-check:[...]$45 = 59\n+// lldbg-check:[...]$45 = 59\n+// lldbr-check:(isize) qq = 59\n // lldb-command:continue\n \n // lldb-command:print rr\n-// lldb-check:[...]$46 = 60\n+// lldbg-check:[...]$46 = 60\n+// lldbr-check:(isize) rr = 60\n // lldb-command:print ss\n-// lldb-check:[...]$47 = 61\n+// lldbg-check:[...]$47 = 61\n+// lldbr-check:(isize) ss = 61\n // lldb-command:print tt\n-// lldb-check:[...]$48 = 62\n+// lldbg-check:[...]$48 = 62\n+// lldbr-check:(isize) tt = 62\n // lldb-command:continue\n \n #![allow(unused_variables)]"}, {"sha": "48231a906c902a7032a7187f33dc6c2dac277621", "filename": "src/test/debuginfo/destructured-for-loop-variable.rs", "status": "modified", "additions": 50, "deletions": 24, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n+\n // min-lldb-version: 310\n \n // compile-flags:-g\n@@ -91,66 +93,90 @@\n \n // DESTRUCTURED STRUCT\n // lldb-command:print x\n-// lldb-check:[...]$0 = 400\n+// lldbg-check:[...]$0 = 400\n+// lldbr-check:(i16) x = 400\n // lldb-command:print y\n-// lldb-check:[...]$1 = 401.5\n+// lldbg-check:[...]$1 = 401.5\n+// lldbr-check:(f32) y = 401.5\n // lldb-command:print z\n-// lldb-check:[...]$2 = true\n+// lldbg-check:[...]$2 = true\n+// lldbr-check:(bool) z = true\n // lldb-command:continue\n \n // DESTRUCTURED TUPLE\n // lldb-command:print _i8\n-// lldb-check:[...]$3 = 0x6f\n+// lldbg-check:[...]$3 = 0x6f\n+// lldbr-check:(i8) _i8 = 111\n // lldb-command:print _u8\n-// lldb-check:[...]$4 = 0x70\n+// lldbg-check:[...]$4 = 0x70\n+// lldbr-check:(u8) _u8 = 112\n // lldb-command:print _i16\n-// lldb-check:[...]$5 = -113\n+// lldbg-check:[...]$5 = -113\n+// lldbr-check:(i16) _i16 = -113\n // lldb-command:print _u16\n-// lldb-check:[...]$6 = 114\n+// lldbg-check:[...]$6 = 114\n+// lldbr-check:(u16) _u16 = 114\n // lldb-command:print _i32\n-// lldb-check:[...]$7 = -115\n+// lldbg-check:[...]$7 = -115\n+// lldbr-check:(i32) _i32 = -115\n // lldb-command:print _u32\n-// lldb-check:[...]$8 = 116\n+// lldbg-check:[...]$8 = 116\n+// lldbr-check:(u32) _u32 = 116\n // lldb-command:print _i64\n-// lldb-check:[...]$9 = -117\n+// lldbg-check:[...]$9 = -117\n+// lldbr-check:(i64) _i64 = -117\n // lldb-command:print _u64\n-// lldb-check:[...]$10 = 118\n+// lldbg-check:[...]$10 = 118\n+// lldbr-check:(u64) _u64 = 118\n // lldb-command:print _f32\n-// lldb-check:[...]$11 = 119.5\n+// lldbg-check:[...]$11 = 119.5\n+// lldbr-check:(f32) _f32 = 119.5\n // lldb-command:print _f64\n-// lldb-check:[...]$12 = 120.5\n+// lldbg-check:[...]$12 = 120.5\n+// lldbr-check:(f64) _f64 = 120.5\n // lldb-command:continue\n \n // MORE COMPLEX CASE\n // lldb-command:print v1\n-// lldb-check:[...]$13 = 80000\n+// lldbg-check:[...]$13 = 80000\n+// lldbr-check:(i32) v1 = 80000\n // lldb-command:print x1\n-// lldb-check:[...]$14 = 8000\n+// lldbg-check:[...]$14 = 8000\n+// lldbr-check:(i16) x1 = 8000\n // lldb-command:print *y1\n-// lldb-check:[...]$15 = 80001.5\n+// lldbg-check:[...]$15 = 80001.5\n+// lldbr-check:(f32) *y1 = 80001.5\n // lldb-command:print z1\n-// lldb-check:[...]$16 = false\n+// lldbg-check:[...]$16 = false\n+// lldbr-check:(bool) z1 = false\n // lldb-command:print *x2\n-// lldb-check:[...]$17 = -30000\n+// lldbg-check:[...]$17 = -30000\n+// lldbr-check:(i16) *x2 = -30000\n // lldb-command:print y2\n-// lldb-check:[...]$18 = -300001.5\n+// lldbg-check:[...]$18 = -300001.5\n+// lldbr-check:(f32) y2 = -300001.5\n // lldb-command:print *z2\n-// lldb-check:[...]$19 = true\n+// lldbg-check:[...]$19 = true\n+// lldbr-check:(bool) *z2 = true\n // lldb-command:print v2\n-// lldb-check:[...]$20 = 854237.5\n+// lldbg-check:[...]$20 = 854237.5\n+// lldbr-check:(f64) v2 = 854237.5\n // lldb-command:continue\n \n // SIMPLE IDENTIFIER\n // lldb-command:print i\n-// lldb-check:[...]$21 = 1234\n+// lldbg-check:[...]$21 = 1234\n+// lldbr-check:(i32) i = 1234\n // lldb-command:continue\n \n // lldb-command:print simple_struct_ident\n-// lldb-check:[...]$22 = Struct { x: 3537, y: 35437.5, z: true }\n+// lldbg-check:[...]$22 = Struct { x: 3537, y: 35437.5, z: true }\n+// lldbr-check:(destructured_for_loop_variable::Struct) simple_struct_ident = Struct { x: 3537, y: 35437.5, z: true }\n // lldb-command:continue\n \n // lldb-command:print simple_tuple_ident\n-// lldb-check:[...]$23 = (34903493, 232323)\n+// lldbg-check:[...]$23 = (34903493, 232323)\n+// lldbr-check:((u32, i64)) simple_tuple_ident = { = 34903493 = 232323 }\n // lldb-command:continue\n \n #![allow(unused_variables)]"}, {"sha": "5a2edf81d29316012d8a31e0ba3e82c3cfc86099", "filename": "src/test/debuginfo/destructured-local.rs", "status": "modified", "additions": 86, "deletions": 43, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -140,114 +140,157 @@\n // lldb-command:run\n \n // lldb-command:print a\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(isize) a = 1\n // lldb-command:print b\n-// lldb-check:[...]$1 = false\n+// lldbg-check:[...]$1 = false\n+// lldbr-check:(bool) b = false\n \n // lldb-command:print c\n-// lldb-check:[...]$2 = 2\n+// lldbg-check:[...]$2 = 2\n+// lldbr-check:(isize) c = 2\n // lldb-command:print d\n-// lldb-check:[...]$3 = 3\n+// lldbg-check:[...]$3 = 3\n+// lldbr-check:(u16) d = 3\n // lldb-command:print e\n-// lldb-check:[...]$4 = 4\n+// lldbg-check:[...]$4 = 4\n+// lldbr-check:(u16) e = 4\n \n // lldb-command:print f\n-// lldb-check:[...]$5 = 5\n+// lldbg-check:[...]$5 = 5\n+// lldbr-check:(isize) f = 5\n // lldb-command:print g\n-// lldb-check:[...]$6 = (6, 7)\n+// lldbg-check:[...]$6 = (6, 7)\n+// lldbr-check:((u32, u32)) g = { = 6 = 7 }\n \n // lldb-command:print h\n-// lldb-check:[...]$7 = 8\n+// lldbg-check:[...]$7 = 8\n+// lldbr-check:(i16) h = 8\n // lldb-command:print i\n-// lldb-check:[...]$8 = Struct { a: 9, b: 10 }\n+// lldbg-check:[...]$8 = Struct { a: 9, b: 10 }\n+// lldbr-check:(destructured_local::Struct) i = Struct { a: 9, b: 10 }\n // lldb-command:print j\n-// lldb-check:[...]$9 = 11\n+// lldbg-check:[...]$9 = 11\n+// lldbr-check:(i16) j = 11\n \n // lldb-command:print k\n-// lldb-check:[...]$10 = 12\n+// lldbg-check:[...]$10 = 12\n+// lldbr-check:(i64) k = 12\n // lldb-command:print l\n-// lldb-check:[...]$11 = 13\n+// lldbg-check:[...]$11 = 13\n+// lldbr-check:(i32) l = 13\n \n // lldb-command:print m\n-// lldb-check:[...]$12 = 14\n+// lldbg-check:[...]$12 = 14\n+// lldbr-check:(i32) m = 14\n // lldb-command:print n\n-// lldb-check:[...]$13 = 16\n+// lldbg-check:[...]$13 = 16\n+// lldbr-check:(i32) n = 16\n \n // lldb-command:print o\n-// lldb-check:[...]$14 = 18\n+// lldbg-check:[...]$14 = 18\n+// lldbr-check:(i32) o = 18\n \n // lldb-command:print p\n-// lldb-check:[...]$15 = 19\n+// lldbg-check:[...]$15 = 19\n+// lldbr-check:(i64) p = 19\n // lldb-command:print q\n-// lldb-check:[...]$16 = 20\n+// lldbg-check:[...]$16 = 20\n+// lldbr-check:(i32) q = 20\n // lldb-command:print r\n-// lldb-check:[...]$17 = Struct { a: 21, b: 22 }\n+// lldbg-check:[...]$17 = Struct { a: 21, b: 22 }\n+// lldbr-check:(destructured_local::Struct) r = Struct { a: 21, b: 22 }\n \n // lldb-command:print s\n-// lldb-check:[...]$18 = 24\n+// lldbg-check:[...]$18 = 24\n+// lldbr-check:(i32) s = 24\n // lldb-command:print t\n-// lldb-check:[...]$19 = 23\n+// lldbg-check:[...]$19 = 23\n+// lldbr-check:(i64) t = 23\n \n // lldb-command:print u\n-// lldb-check:[...]$20 = 25\n+// lldbg-check:[...]$20 = 25\n+// lldbr-check:(i32) u = 25\n // lldb-command:print v\n-// lldb-check:[...]$21 = 26\n+// lldbg-check:[...]$21 = 26\n+// lldbr-check:(i32) v = 26\n // lldb-command:print w\n-// lldb-check:[...]$22 = 27\n+// lldbg-check:[...]$22 = 27\n+// lldbr-check:(i32) w = 27\n // lldb-command:print x\n-// lldb-check:[...]$23 = 28\n+// lldbg-check:[...]$23 = 28\n+// lldbr-check:(i32) x = 28\n // lldb-command:print y\n-// lldb-check:[...]$24 = 29\n+// lldbg-check:[...]$24 = 29\n+// lldbr-check:(i64) y = 29\n // lldb-command:print z\n-// lldb-check:[...]$25 = 30\n+// lldbg-check:[...]$25 = 30\n+// lldbr-check:(i32) z = 30\n // lldb-command:print ae\n-// lldb-check:[...]$26 = 31\n+// lldbg-check:[...]$26 = 31\n+// lldbr-check:(i64) ae = 31\n // lldb-command:print oe\n-// lldb-check:[...]$27 = 32\n+// lldbg-check:[...]$27 = 32\n+// lldbr-check:(i32) oe = 32\n // lldb-command:print ue\n-// lldb-check:[...]$28 = 33\n+// lldbg-check:[...]$28 = 33\n+// lldbr-check:(i32) ue = 33\n \n // lldb-command:print aa\n-// lldb-check:[...]$29 = (34, 35)\n+// lldbg-check:[...]$29 = (34, 35)\n+// lldbr-check:((i32, i32)) aa = { = 34 = 35 }\n \n // lldb-command:print bb\n-// lldb-check:[...]$30 = (36, 37)\n+// lldbg-check:[...]$30 = (36, 37)\n+// lldbr-check:((i32, i32)) bb = { = 36 = 37 }\n \n // lldb-command:print cc\n-// lldb-check:[...]$31 = 38\n+// lldbg-check:[...]$31 = 38\n+// lldbr-check:(i32) cc = 38\n \n // lldb-command:print dd\n-// lldb-check:[...]$32 = (40, 41, 42)\n+// lldbg-check:[...]$32 = (40, 41, 42)\n+// lldbr-check:((i32, i32, i32)) dd = { = 40 = 41 = 42 }\n \n // lldb-command:print *ee\n-// lldb-check:[...]$33 = (43, 44, 45)\n+// lldbg-check:[...]$33 = (43, 44, 45)\n+// lldbr-check:((i32, i32, i32)) *ee = { = 43 = 44 = 45 }\n \n // lldb-command:print *ff\n-// lldb-check:[...]$34 = 46\n+// lldbg-check:[...]$34 = 46\n+// lldbr-check:(i32) *ff = 46\n \n // lldb-command:print gg\n-// lldb-check:[...]$35 = (47, 48)\n+// lldbg-check:[...]$35 = (47, 48)\n+// lldbr-check:((i32, i32)) gg = { = 47 = 48 }\n \n // lldb-command:print *hh\n-// lldb-check:[...]$36 = 50\n+// lldbg-check:[...]$36 = 50\n+// lldbr-check:(i32) *hh = 50\n \n // lldb-command:print ii\n-// lldb-check:[...]$37 = 51\n+// lldbg-check:[...]$37 = 51\n+// lldbr-check:(i32) ii = 51\n \n // lldb-command:print *jj\n-// lldb-check:[...]$38 = 52\n+// lldbg-check:[...]$38 = 52\n+// lldbr-check:(i32) *jj = 52\n \n // lldb-command:print kk\n-// lldb-check:[...]$39 = 53\n+// lldbg-check:[...]$39 = 53\n+// lldbr-check:(f64) kk = 53\n \n // lldb-command:print ll\n-// lldb-check:[...]$40 = 54\n+// lldbg-check:[...]$40 = 54\n+// lldbr-check:(isize) ll = 54\n \n // lldb-command:print mm\n-// lldb-check:[...]$41 = 55\n+// lldbg-check:[...]$41 = 55\n+// lldbr-check:(f64) mm = 55\n \n // lldb-command:print *nn\n-// lldb-check:[...]$42 = 56\n+// lldbg-check:[...]$42 = 56\n+// lldbr-check:(isize) *nn = 56\n \n \n #![allow(unused_variables)]"}, {"sha": "c5460c69944f1535128af557dec11aa821a44ce2", "filename": "src/test/debuginfo/evec-in-struct.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n+\n // min-lldb-version: 310\n \n // compile-flags:-g\n@@ -41,18 +43,23 @@\n // lldb-command:run\n \n // lldb-command:print no_padding1\n-// lldb-check:[...]$0 = NoPadding1 { x: [0, 1, 2], y: -3, z: [4.5, 5.5] }\n+// lldbg-check:[...]$0 = NoPadding1 { x: [0, 1, 2], y: -3, z: [4.5, 5.5] }\n+// lldbr-check:(evec_in_struct::NoPadding1) no_padding1 = NoPadding1 { x: [0, 1, 2], y: -3, z: [4.5, 5.5] }\n // lldb-command:print no_padding2\n-// lldb-check:[...]$1 = NoPadding2 { x: [6, 7, 8], y: [[9, 10], [11, 12]] }\n+// lldbg-check:[...]$1 = NoPadding2 { x: [6, 7, 8], y: [[9, 10], [11, 12]] }\n+// lldbr-check:(evec_in_struct::NoPadding2) no_padding2 = NoPadding2 { x: [6, 7, 8], y: [[9, 10], [11, 12]] }\n \n // lldb-command:print struct_internal_padding\n-// lldb-check:[...]$2 = StructInternalPadding { x: [13, 14], y: [15, 16] }\n+// lldbg-check:[...]$2 = StructInternalPadding { x: [13, 14], y: [15, 16] }\n+// lldbr-check:(evec_in_struct::StructInternalPadding) struct_internal_padding = StructInternalPadding { x: [13, 14], y: [15, 16] }\n \n // lldb-command:print single_vec\n-// lldb-check:[...]$3 = SingleVec { x: [17, 18, 19, 20, 21] }\n+// lldbg-check:[...]$3 = SingleVec { x: [17, 18, 19, 20, 21] }\n+// lldbr-check:(evec_in_struct::SingleVec) single_vec = SingleVec { x: [17, 18, 19, 20, 21] }\n \n // lldb-command:print struct_padded_at_end\n-// lldb-check:[...]$4 = StructPaddedAtEnd { x: [22, 23], y: [24, 25] }\n+// lldbg-check:[...]$4 = StructPaddedAtEnd { x: [22, 23], y: [24, 25] }\n+// lldbr-check:(evec_in_struct::StructPaddedAtEnd) struct_padded_at_end = StructPaddedAtEnd { x: [22, 23], y: [24, 25] }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "2e6602c63ff707e2031b2e4142ba6535c658bf05", "filename": "src/test/debuginfo/extern-c-fn.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fextern-c-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fextern-c-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fextern-c-fn.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -33,13 +33,17 @@\n // lldb-command:run\n \n // lldb-command:print len\n-// lldb-check:[...]$0 = 20\n+// lldbg-check:[...]$0 = 20\n+// lldbr-check:(i32) len = 20\n // lldb-command:print local0\n-// lldb-check:[...]$1 = 19\n+// lldbg-check:[...]$1 = 19\n+// lldbr-check:(i32) local0 = 19\n // lldb-command:print local1\n-// lldb-check:[...]$2 = true\n+// lldbg-check:[...]$2 = true\n+// lldbr-check:(bool) local1 = true\n // lldb-command:print local2\n-// lldb-check:[...]$3 = 20.5\n+// lldbg-check:[...]$3 = 20.5\n+// lldbr-check:(f64) local2 = 20.5\n \n // lldb-command:continue\n "}, {"sha": "9fc03feec9b6dc5297ce3487561947fde752d592", "filename": "src/test/debuginfo/function-arguments.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -33,15 +33,19 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = 111102\n+// lldbg-check:[...]$0 = 111102\n+// lldbr-check:(isize) x = 111102\n // lldb-command:print y\n-// lldb-check:[...]$1 = true\n+// lldbg-check:[...]$1 = true\n+// lldbr-check:(bool) y = true\n // lldb-command:continue\n \n // lldb-command:print a\n-// lldb-check:[...]$2 = 2000\n+// lldbg-check:[...]$2 = 2000\n+// lldbr-check:(i32) a = 2000\n // lldb-command:print b\n-// lldb-check:[...]$3 = 3000\n+// lldbg-check:[...]$3 = 3000\n+// lldbr-check:(i64) b = 3000\n // lldb-command:continue\n \n "}, {"sha": "89b0e4ca453bf5a573acab158e3a84210d1f4c5b", "filename": "src/test/debuginfo/generic-function.rs", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -52,27 +52,36 @@\n // lldb-command:run\n \n // lldb-command:print *t0\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(i32) *t0 = 1\n // lldb-command:print *t1\n-// lldb-check:[...]$1 = 2.5\n+// lldbg-check:[...]$1 = 2.5\n+// lldbr-check:(f64) *t1 = 2.5\n // lldb-command:print ret\n-// lldb-check:[...]$2 = ((1, 2.5), (2.5, 1))\n+// lldbg-check:[...]$2 = ((1, 2.5), (2.5, 1))\n+// lldbr-check:(((i32, f64), (f64, i32))) ret = { = { = 1 = 2.5 } = { = 2.5 = 1 } }\n // lldb-command:continue\n \n // lldb-command:print *t0\n-// lldb-check:[...]$3 = 3.5\n+// lldbg-check:[...]$3 = 3.5\n+// lldbr-check:(f64) *t0 = 3.5\n // lldb-command:print *t1\n-// lldb-check:[...]$4 = 4\n+// lldbg-check:[...]$4 = 4\n+// lldbr-check:(u16) *t1 = 4\n // lldb-command:print ret\n-// lldb-check:[...]$5 = ((3.5, 4), (4, 3.5))\n+// lldbg-check:[...]$5 = ((3.5, 4), (4, 3.5))\n+// lldbr-check:(((f64, u16), (u16, f64))) ret = { = { = 3.5 = 4 } = { = 4 = 3.5 } }\n // lldb-command:continue\n \n // lldb-command:print *t0\n-// lldb-check:[...]$6 = 5\n+// lldbg-check:[...]$6 = 5\n+// lldbr-check:(i32) *t0 = 5\n // lldb-command:print *t1\n-// lldb-check:[...]$7 = Struct { a: 6, b: 7.5 }\n+// lldbg-check:[...]$7 = Struct { a: 6, b: 7.5 }\n+// lldbr-check:(generic_function::Struct) *t1 = Struct { a: 6, b: 7.5 }\n // lldb-command:print ret\n-// lldb-check:[...]$8 = ((5, Struct { a: 6, b: 7.5 }), (Struct { a: 6, b: 7.5 }, 5))\n+// lldbg-check:[...]$8 = ((5, Struct { a: 6, b: 7.5 }), (Struct { a: 6, b: 7.5 }, 5))\n+// lldbr-check:(((i32, generic_function::Struct), (generic_function::Struct, i32))) ret = { = { = 5 = Struct { a: 6, b: 7.5 } } = { = Struct { a: 6, b: 7.5 } = 5 } }\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "ea6dc62eca9eb8278f2b689f64201b236aca5b73", "filename": "src/test/debuginfo/generic-functions-nested.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -46,27 +46,35 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = -1\n+// lldbg-check:[...]$0 = -1\n+// lldbr-check:(i32) x = -1\n // lldb-command:print y\n-// lldb-check:[...]$1 = 1\n+// lldbg-check:[...]$1 = 1\n+// lldbr-check:(i32) y = 1\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = -1\n+// lldbg-check:[...]$2 = -1\n+// lldbr-check:(i32) x = -1\n // lldb-command:print y\n-// lldb-check:[...]$3 = 2.5\n+// lldbg-check:[...]$3 = 2.5\n+// lldbr-check:(f64) y = 2.5\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = -2.5\n+// lldbg-check:[...]$4 = -2.5\n+// lldbr-check:(f64) x = -2.5\n // lldb-command:print y\n-// lldb-check:[...]$5 = 1\n+// lldbg-check:[...]$5 = 1\n+// lldbr-check:(i32) y = 1\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$6 = -2.5\n+// lldbg-check:[...]$6 = -2.5\n+// lldbr-check:(f64) x = -2.5\n // lldb-command:print y\n-// lldb-check:[...]$7 = 2.5\n+// lldbg-check:[...]$7 = 2.5\n+// lldbr-check:(f64) y = 2.5\n // lldb-command:continue\n \n "}, {"sha": "97bb9aa98e87b4dd95ef7c39887c95b8610b1cd4", "filename": "src/test/debuginfo/generic-method-on-generic-struct.rs", "status": "modified", "additions": 31, "deletions": 15, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n \n // compile-flags:-g\n // min-lldb-version: 310\n@@ -73,47 +74,62 @@\n \n // STACK BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$0 = Struct<(u32, i32)> { x: (8888, -8888) }\n+// lldbg-check:[...]$0 = Struct<(u32, i32)> { x: (8888, -8888) }\n+// lldbr-check:(generic_method_on_generic_struct::Struct<(u32, i32)>) *self = { x = { = 8888 = -8888 } }\n // lldb-command:print arg1\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) arg1 = -1\n // lldb-command:print arg2\n-// lldb-check:[...]$2 = 2\n+// lldbg-check:[...]$2 = 2\n+// lldbr-check:(u16) arg2 = 2\n // lldb-command:continue\n \n // STACK BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$3 = Struct<(u32, i32)> { x: (8888, -8888) }\n+// lldbg-check:[...]$3 = Struct<(u32, i32)> { x: (8888, -8888) }\n+// lldbr-check:(generic_method_on_generic_struct::Struct<(u32, i32)>) self = { x = { = 8888 = -8888 } }\n // lldb-command:print arg1\n-// lldb-check:[...]$4 = -3\n+// lldbg-check:[...]$4 = -3\n+// lldbr-check:(isize) arg1 = -3\n // lldb-command:print arg2\n-// lldb-check:[...]$5 = -4\n+// lldbg-check:[...]$5 = -4\n+// lldbr-check:(i16) arg2 = -4\n // lldb-command:continue\n \n // OWNED BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$6 = Struct<f64> { x: 1234.5 }\n+// lldbg-check:[...]$6 = Struct<f64> { x: 1234.5 }\n+// lldbr-check:(generic_method_on_generic_struct::Struct<f64>) *self = Struct<f64> { x: 1234.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$7 = -5\n+// lldbg-check:[...]$7 = -5\n+// lldbr-check:(isize) arg1 = -5\n // lldb-command:print arg2\n-// lldb-check:[...]$8 = -6\n+// lldbg-check:[...]$8 = -6\n+// lldbr-check:(i32) arg2 = -6\n // lldb-command:continue\n \n // OWNED BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$9 = Struct<f64> { x: 1234.5 }\n+// lldbg-check:[...]$9 = Struct<f64> { x: 1234.5 }\n+// lldbr-check:(generic_method_on_generic_struct::Struct<f64>) self = Struct<f64> { x: 1234.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$10 = -7\n+// lldbg-check:[...]$10 = -7\n+// lldbr-check:(isize) arg1 = -7\n // lldb-command:print arg2\n-// lldb-check:[...]$11 = -8\n+// lldbg-check:[...]$11 = -8\n+// lldbr-check:(i64) arg2 = -8\n // lldb-command:continue\n \n // OWNED MOVED\n // lldb-command:print *self\n-// lldb-check:[...]$12 = Struct<f64> { x: 1234.5 }\n+// lldbg-check:[...]$12 = Struct<f64> { x: 1234.5 }\n+// lldbr-check:(generic_method_on_generic_struct::Struct<f64>) *self = Struct<f64> { x: 1234.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$13 = -9\n+// lldbg-check:[...]$13 = -9\n+// lldbr-check:(isize) arg1 = -9\n // lldb-command:print arg2\n-// lldb-check:[...]$14 = -10.5\n+// lldbg-check:[...]$14 = -10.5\n+// lldbr-check:(f32) arg2 = -10.5\n // lldb-command:continue\n \n #![feature(box_syntax)]"}, {"sha": "4e06a15e1cdf0000239a2f7ef8821ccdacbcab97", "filename": "src/test/debuginfo/generic-struct.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -35,14 +35,18 @@\n // lldb-command:run\n \n // lldb-command:print int_int\n-// lldb-check:[...]$0 = AGenericStruct<i32, i32> { key: 0, value: 1 }\n+// lldbg-check:[...]$0 = AGenericStruct<i32, i32> { key: 0, value: 1 }\n+// lldbr-check:(generic_struct::AGenericStruct<i32, i32>) int_int = AGenericStruct<i32, i32> { key: 0, value: 1 }\n // lldb-command:print int_float\n-// lldb-check:[...]$1 = AGenericStruct<i32, f64> { key: 2, value: 3.5 }\n+// lldbg-check:[...]$1 = AGenericStruct<i32, f64> { key: 2, value: 3.5 }\n+// lldbr-check:(generic_struct::AGenericStruct<i32, f64>) int_float = AGenericStruct<i32, f64> { key: 2, value: 3.5 }\n // lldb-command:print float_int\n-// lldb-check:[...]$2 = AGenericStruct<f64, i32> { key: 4.5, value: 5 }\n+// lldbg-check:[...]$2 = AGenericStruct<f64, i32> { key: 4.5, value: 5 }\n+// lldbr-check:(generic_struct::AGenericStruct<f64, i32>) float_int = AGenericStruct<f64, i32> { key: 4.5, value: 5 }\n \n // lldb-command:print float_int_float\n-// lldb-check:[...]$3 = AGenericStruct<f64, generic_struct::AGenericStruct<i32, f64>> { key: 6.5, value: AGenericStruct<i32, f64> { key: 7, value: 8.5 } }\n+// lldbg-check:[...]$3 = AGenericStruct<f64, generic_struct::AGenericStruct<i32, f64>> { key: 6.5, value: AGenericStruct<i32, f64> { key: 7, value: 8.5 } }\n+// lldbr-check:(generic_struct::AGenericStruct<f64, generic_struct::AGenericStruct<i32, f64>>) float_int_float = AGenericStruct<f64, generic_struct::AGenericStruct<i32, f64>> { key: 6.5, value: AGenericStruct<i32, f64> { key: 7, value: 8.5 } }\n \n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "62bec28a022af0ab397827956926f5a7edd28fb9", "filename": "src/test/debuginfo/generic-tuple-style-enum.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -41,16 +41,20 @@\n // lldb-command:run\n \n // lldb-command:print case1\n-// lldb-check:[...]$0 = Case1(0, 31868, 31868, 31868, 31868)\n+// lldbg-check:[...]$0 = Case1(0, 31868, 31868, 31868, 31868)\n+// lldbr-check:(generic_tuple_style_enum::Regular<u16, u32, u64>::Case1) case1 = { = 0 = 31868 = 31868 = 31868 = 31868 }\n \n // lldb-command:print case2\n-// lldb-check:[...]$1 = Case2(0, 286331153, 286331153)\n+// lldbg-check:[...]$1 = Case2(0, 286331153, 286331153)\n+// lldbr-check:(generic_tuple_style_enum::Regular<i16, i32, i64>::Case2) case2 = Regular<i16, i32, i64>::Case2 { generic_tuple_style_enum::Regular<i16, i32, i64>::Case1: 0, generic_tuple_style_enum::Regular<i16, i32, i64>::Case2: 286331153, generic_tuple_style_enum::Regular<i16, i32, i64>::Case3: 286331153 }\n \n // lldb-command:print case3\n-// lldb-check:[...]$2 = Case3(0, 6438275382588823897)\n+// lldbg-check:[...]$2 = Case3(0, 6438275382588823897)\n+// lldbr-check:(generic_tuple_style_enum::Regular<i16, i32, i64>::Case3) case3 = Regular<i16, i32, i64>::Case3 { generic_tuple_style_enum::Regular<i16, i32, i64>::Case1: 0, generic_tuple_style_enum::Regular<i16, i32, i64>::Case2: 6438275382588823897 }\n \n // lldb-command:print univariant\n-// lldb-check:[...]$3 = TheOnlyCase(-1)\n+// lldbg-check:[...]$3 = TheOnlyCase(-1)\n+// lldbr-check:(generic_tuple_style_enum::Univariant<i64>) univariant = { generic_tuple_style_enum::TheOnlyCase = { = -1 } }\n \n #![feature(omit_gdb_pretty_printer_section)]\n #![omit_gdb_pretty_printer_section]"}, {"sha": "e915bf137028b82589fe93d8769e7f9ee9b1cf0f", "filename": "src/test/debuginfo/include_string.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Finclude_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Finclude_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Finclude_string.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -26,11 +26,14 @@\n // lldb-command:run\n \n // lldb-command:print string1.length\n-// lldb-check:[...]$0 = 48\n+// lldbg-check:[...]$0 = 48\n+// lldbr-check:(usize) length = 48\n // lldb-command:print string2.length\n-// lldb-check:[...]$1 = 49\n+// lldbg-check:[...]$1 = 49\n+// lldbr-check:(usize) length = 49\n // lldb-command:print string3.length\n-// lldb-check:[...]$2 = 50\n+// lldbg-check:[...]$2 = 50\n+// lldbr-check:(usize) length = 50\n \n // lldb-command:continue\n "}, {"sha": "6c3988b127ec21ac05aff709c0835e4efed3e1a0", "filename": "src/test/debuginfo/issue-22656.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fissue-22656.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fissue-22656.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue-22656.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -23,10 +23,12 @@\n // lldb-command:run\n \n // lldb-command:print v\n-// lldb-check:[...]$0 = vec![1, 2, 3]\n+// lldbg-check:[...]$0 = vec![1, 2, 3]\n+// lldbr-check:(alloc::vec::Vec<i32>) v = vec![1, 2, 3]\n // lldb-command:print zs\n-// lldb-check:[...]$1 = StructWithZeroSizedField { x: ZeroSizedStruct, y: 123, z: ZeroSizedStruct, w: 456 }\n-// lldb-command:continue\n+// lldbg-check:[...]$1 = StructWithZeroSizedField { x: ZeroSizedStruct, y: 123, z: ZeroSizedStruct, w: 456 }\n+// lldbr-check:(issue_22656::StructWithZeroSizedField) zs = StructWithZeroSizedField { x: ZeroSizedStruct { }, y: 123, z: ZeroSizedStruct { }, w: 456 }\n+// lldbr-command:continue\n \n #![allow(unused_variables)]\n #![allow(dead_code)]"}, {"sha": "7a3c30ed8e5d02598ecea2d244948e80390efc5b", "filename": "src/test/debuginfo/lexical-scope-in-for-loop.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -55,34 +55,41 @@\n \n // FIRST ITERATION\n // lldb-command:print x\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(i32) x = 1\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(i32) x = -1\n // lldb-command:continue\n \n // SECOND ITERATION\n // lldb-command:print x\n-// lldb-check:[...]$2 = 2\n+// lldbg-check:[...]$2 = 2\n+// lldbr-check:(i32) x = 2\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$3 = -2\n+// lldbg-check:[...]$3 = -2\n+// lldbr-check:(i32) x = -2\n // lldb-command:continue\n \n // THIRD ITERATION\n // lldb-command:print x\n-// lldb-check:[...]$4 = 3\n+// lldbg-check:[...]$4 = 3\n+// lldbr-check:(i32) x = 3\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$5 = -3\n+// lldbg-check:[...]$5 = -3\n+// lldbr-check:(i32) x = -3\n // lldb-command:continue\n \n // AFTER LOOP\n // lldb-command:print x\n-// lldb-check:[...]$6 = 1000000\n+// lldbg-check:[...]$6 = 1000000\n+// lldbr-check:(i32) x = 1000000\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "1a21fe6c1a98c35fc73b36f7b1f4aa1bcfb90660", "filename": "src/test/debuginfo/lexical-scope-in-if.rs", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -79,58 +79,74 @@\n \n // BEFORE if\n // lldb-command:print x\n-// lldb-check:[...]$0 = 999\n+// lldbg-check:[...]$0 = 999\n+// lldbr-check:(i32) x = 999\n // lldb-command:print y\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(i32) y = -1\n // lldb-command:continue\n \n // AT BEGINNING of 'then' block\n // lldb-command:print x\n-// lldb-check:[...]$2 = 999\n+// lldbg-check:[...]$2 = 999\n+// lldbr-check:(i32) x = 999\n // lldb-command:print y\n-// lldb-check:[...]$3 = -1\n+// lldbg-check:[...]$3 = -1\n+// lldbr-check:(i32) y = -1\n // lldb-command:continue\n \n // AFTER 1st redeclaration of 'x'\n // lldb-command:print x\n-// lldb-check:[...]$4 = 1001\n+// lldbg-check:[...]$4 = 1001\n+// lldbr-check:(i32) x = 1001\n // lldb-command:print y\n-// lldb-check:[...]$5 = -1\n+// lldbg-check:[...]$5 = -1\n+// lldbr-check:(i32) y = -1\n // lldb-command:continue\n \n // AFTER 2st redeclaration of 'x'\n // lldb-command:print x\n-// lldb-check:[...]$6 = 1002\n+// lldbg-check:[...]$6 = 1002\n+// lldbr-check:(i32) x = 1002\n // lldb-command:print y\n-// lldb-check:[...]$7 = 1003\n+// lldbg-check:[...]$7 = 1003\n+// lldbr-check:(i32) y = 1003\n // lldb-command:continue\n \n // AFTER 1st if expression\n // lldb-command:print x\n-// lldb-check:[...]$8 = 999\n+// lldbg-check:[...]$8 = 999\n+// lldbr-check:(i32) x = 999\n // lldb-command:print y\n-// lldb-check:[...]$9 = -1\n+// lldbg-check:[...]$9 = -1\n+// lldbr-check:(i32) y = -1\n // lldb-command:continue\n \n // BEGINNING of else branch\n // lldb-command:print x\n-// lldb-check:[...]$10 = 999\n+// lldbg-check:[...]$10 = 999\n+// lldbr-check:(i32) x = 999\n // lldb-command:print y\n-// lldb-check:[...]$11 = -1\n+// lldbg-check:[...]$11 = -1\n+// lldbr-check:(i32) y = -1\n // lldb-command:continue\n \n // BEGINNING of else branch\n // lldb-command:print x\n-// lldb-check:[...]$12 = 1004\n+// lldbg-check:[...]$12 = 1004\n+// lldbr-check:(i32) x = 1004\n // lldb-command:print y\n-// lldb-check:[...]$13 = 1005\n+// lldbg-check:[...]$13 = 1005\n+// lldbr-check:(i32) y = 1005\n // lldb-command:continue\n \n // BEGINNING of else branch\n // lldb-command:print x\n-// lldb-check:[...]$14 = 999\n+// lldbg-check:[...]$14 = 999\n+// lldbr-check:(i32) x = 999\n // lldb-command:print y\n-// lldb-check:[...]$15 = -1\n+// lldbg-check:[...]$15 = -1\n+// lldbr-check:(i32) y = -1\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "3c10039e76abfb93b25b9dfe1a3122dbff8aa549", "filename": "src/test/debuginfo/lexical-scope-in-match.rs", "status": "modified", "additions": 36, "deletions": 18, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -74,55 +74,73 @@\n // lldb-command:run\n \n // lldb-command:print shadowed\n-// lldb-check:[...]$0 = 231\n+// lldbg-check:[...]$0 = 231\n+// lldbr-check:(i32) shadowed = 231\n // lldb-command:print not_shadowed\n-// lldb-check:[...]$1 = 232\n+// lldbg-check:[...]$1 = 232\n+// lldbr-check:(i32) not_shadowed = 232\n // lldb-command:continue\n \n // lldb-command:print shadowed\n-// lldb-check:[...]$2 = 233\n+// lldbg-check:[...]$2 = 233\n+// lldbr-check:(i32) shadowed = 233\n // lldb-command:print not_shadowed\n-// lldb-check:[...]$3 = 232\n+// lldbg-check:[...]$3 = 232\n+// lldbr-check:(i32) not_shadowed = 232\n // lldb-command:print local_to_arm\n-// lldb-check:[...]$4 = 234\n+// lldbg-check:[...]$4 = 234\n+// lldbr-check:(i32) local_to_arm = 234\n // lldb-command:continue\n \n // lldb-command:print shadowed\n-// lldb-check:[...]$5 = 236\n+// lldbg-check:[...]$5 = 236\n+// lldbr-check:(i32) shadowed = 236\n // lldb-command:print not_shadowed\n-// lldb-check:[...]$6 = 232\n+// lldbg-check:[...]$6 = 232\n+// lldbr-check:(i32) not_shadowed = 232\n // lldb-command:continue\n \n // lldb-command:print shadowed\n-// lldb-check:[...]$7 = 237\n+// lldbg-check:[...]$7 = 237\n+// lldbr-check:(isize) shadowed = 237\n // lldb-command:print not_shadowed\n-// lldb-check:[...]$8 = 232\n+// lldbg-check:[...]$8 = 232\n+// lldbr-check:(i32) not_shadowed = 232\n // lldb-command:print local_to_arm\n-// lldb-check:[...]$9 = 238\n+// lldbg-check:[...]$9 = 238\n+// lldbr-check:(isize) local_to_arm = 238\n // lldb-command:continue\n \n // lldb-command:print shadowed\n-// lldb-check:[...]$10 = 239\n+// lldbg-check:[...]$10 = 239\n+// lldbr-check:(isize) shadowed = 239\n // lldb-command:print not_shadowed\n-// lldb-check:[...]$11 = 232\n+// lldbg-check:[...]$11 = 232\n+// lldbr-check:(i32) not_shadowed = 232\n // lldb-command:continue\n \n // lldb-command:print shadowed\n-// lldb-check:[...]$12 = 241\n+// lldbg-check:[...]$12 = 241\n+// lldbr-check:(isize) shadowed = 241\n // lldb-command:print not_shadowed\n-// lldb-check:[...]$13 = 232\n+// lldbg-check:[...]$13 = 232\n+// lldbr-check:(i32) not_shadowed = 232\n // lldb-command:continue\n \n // lldb-command:print shadowed\n-// lldb-check:[...]$14 = 243\n+// lldbg-check:[...]$14 = 243\n+// lldbr-check:(i32) shadowed = 243\n // lldb-command:print *local_to_arm\n-// lldb-check:[...]$15 = 244\n+// lldbg-check:[...]$15 = 244\n+// lldbr-check:(i32) *local_to_arm = 244\n // lldb-command:continue\n \n // lldb-command:print shadowed\n-// lldb-check:[...]$16 = 231\n+// lldbg-check:[...]$16 = 231\n+// lldbr-check:(i32) shadowed = 231\n // lldb-command:print not_shadowed\n-// lldb-check:[...]$17 = 232\n+// lldbg-check:[...]$17 = 232\n+// lldbr-check:(i32) not_shadowed = 232\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "fec9d9af1bacab03286c78a2066d7f7157fae9cf", "filename": "src/test/debuginfo/lexical-scope-in-stack-closure.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -46,27 +46,33 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = false\n+// lldbg-check:[...]$0 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$1 = false\n+// lldbg-check:[...]$1 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = 1000\n+// lldbg-check:[...]$2 = 1000\n+// lldbr-check:(isize) x = 1000\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$3 = 2.5\n+// lldbg-check:[...]$3 = 2.5\n+// lldbr-check:(f64) x = 2.5\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = true\n+// lldbg-check:[...]$4 = true\n+// lldbr-check:(bool) x = true\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$5 = false\n+// lldbg-check:[...]$5 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "d160b0250cf32da9ddaf4e76c74406c28489b1ee", "filename": "src/test/debuginfo/lexical-scope-in-unconditional-loop.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -78,57 +78,70 @@\n \n // FIRST ITERATION\n // lldb-command:print x\n-// lldb-check:[...]$0 = 0\n+// lldbg-check:[...]$0 = 0\n+// lldbr-check:(i32) x = 0\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$1 = 1\n+// lldbg-check:[...]$1 = 1\n+// lldbr-check:(i32) x = 1\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = 101\n+// lldbg-check:[...]$2 = 101\n+// lldbr-check:(i32) x = 101\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$3 = 101\n+// lldbg-check:[...]$3 = 101\n+// lldbr-check:(i32) x = 101\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = -987\n+// lldbg-check:[...]$4 = -987\n+// lldbr-check:(i32) x = -987\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$5 = 101\n+// lldbg-check:[...]$5 = 101\n+// lldbr-check:(i32) x = 101\n // lldb-command:continue\n \n \n // SECOND ITERATION\n // lldb-command:print x\n-// lldb-check:[...]$6 = 1\n+// lldbg-check:[...]$6 = 1\n+// lldbr-check:(i32) x = 1\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$7 = 2\n+// lldbg-check:[...]$7 = 2\n+// lldbr-check:(i32) x = 2\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$8 = 102\n+// lldbg-check:[...]$8 = 102\n+// lldbr-check:(i32) x = 102\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$9 = 102\n+// lldbg-check:[...]$9 = 102\n+// lldbr-check:(i32) x = 102\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$10 = -987\n+// lldbg-check:[...]$10 = -987\n+// lldbr-check:(i32) x = -987\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$11 = 102\n+// lldbg-check:[...]$11 = 102\n+// lldbr-check:(i32) x = 102\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$12 = 2\n+// lldbg-check:[...]$12 = 2\n+// lldbr-check:(i32) x = 2\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "574752d728f6f7704be6d6241dfaf0bf0a801f80", "filename": "src/test/debuginfo/lexical-scope-in-unique-closure.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -46,27 +46,33 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = false\n+// lldbg-check:[...]$0 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$1 = false\n+// lldbg-check:[...]$1 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = 1000\n+// lldbg-check:[...]$2 = 1000\n+// lldbr-check:(isize) x = 1000\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$3 = 2.5\n+// lldbg-check:[...]$3 = 2.5\n+// lldbr-check:(f64) x = 2.5\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = true\n+// lldbg-check:[...]$4 = true\n+// lldbr-check:(bool) x = true\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$5 = false\n+// lldbg-check:[...]$5 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n "}, {"sha": "7bc0409f2bb02e71098458e7dc833a7b913b532c", "filename": "src/test/debuginfo/lexical-scope-in-while.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -78,57 +78,70 @@\n \n // FIRST ITERATION\n // lldb-command:print x\n-// lldb-check:[...]$0 = 0\n+// lldbg-check:[...]$0 = 0\n+// lldbr-check:(i32) x = 0\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$1 = 1\n+// lldbg-check:[...]$1 = 1\n+// lldbr-check:(i32) x = 1\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = 101\n+// lldbg-check:[...]$2 = 101\n+// lldbr-check:(i32) x = 101\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$3 = 101\n+// lldbg-check:[...]$3 = 101\n+// lldbr-check:(i32) x = 101\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = -987\n+// lldbg-check:[...]$4 = -987\n+// lldbr-check:(i32) x = -987\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$5 = 101\n+// lldbg-check:[...]$5 = 101\n+// lldbr-check:(i32) x = 101\n // lldb-command:continue\n \n \n // SECOND ITERATION\n // lldb-command:print x\n-// lldb-check:[...]$6 = 1\n+// lldbg-check:[...]$6 = 1\n+// lldbr-check:(i32) x = 1\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$7 = 2\n+// lldbg-check:[...]$7 = 2\n+// lldbr-check:(i32) x = 2\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$8 = 102\n+// lldbg-check:[...]$8 = 102\n+// lldbr-check:(i32) x = 102\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$9 = 102\n+// lldbg-check:[...]$9 = 102\n+// lldbr-check:(i32) x = 102\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$10 = -987\n+// lldbg-check:[...]$10 = -987\n+// lldbr-check:(i32) x = -987\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$11 = 102\n+// lldbg-check:[...]$11 = 102\n+// lldbr-check:(i32) x = 102\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$12 = 2\n+// lldbg-check:[...]$12 = 2\n+// lldbr-check:(i32) x = 2\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "4e88f65ad1d00b1065ddf4d4ee82f9361d5fb452", "filename": "src/test/debuginfo/lexical-scope-with-macro.rs", "status": "modified", "additions": 36, "deletions": 27, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -67,48 +67,57 @@\n // lldb-command:run\n \n // lldb-command:print a\n-// lldb-check:[...]$0 = 10\n+// lldbg-check:[...]$0 = 10\n+// lldbr-check:(i32) a = 10\n // lldb-command:print b\n-// lldb-check:[...]$1 = 34\n+// lldbg-check:[...]$1 = 34\n+// lldbr-check:(i32) b = 34\n // lldb-command:continue\n \n // lldb-command:print a\n-// lldb-check:[...]$2 = 890242\n+// lldbg-check:[...]$2 = 890242\n+// lldbr-check:(i32) a = 10\n // lldb-command:print b\n-// lldb-check:[...]$3 = 34\n+// lldbg-check:[...]$3 = 34\n+// lldbr-check:(i32) b = 34\n // lldb-command:continue\n \n // lldb-command:print a\n-// lldb-check:[...]$4 = 10\n+// lldbg-check:[...]$4 = 10\n+// lldbr-check:(i32) a = 10\n // lldb-command:print b\n-// lldb-check:[...]$5 = 34\n+// lldbg-check:[...]$5 = 34\n+// lldbr-check:(i32) b = 34\n // lldb-command:continue\n \n // lldb-command:print a\n-// lldb-check:[...]$6 = 102\n+// lldbg-check:[...]$6 = 102\n+// lldbr-check:(i32) a = 10\n // lldb-command:print b\n-// lldb-check:[...]$7 = 34\n+// lldbg-check:[...]$7 = 34\n+// lldbr-check:(i32) b = 34\n // lldb-command:continue\n \n-// lldb-command:print a\n-// lldb-check:[...]$8 = 110\n-// lldb-command:print b\n-// lldb-check:[...]$9 = 34\n-// lldb-command:continue\n-\n-// lldb-command:print a\n-// lldb-check:[...]$10 = 10\n-// lldb-command:print b\n-// lldb-check:[...]$11 = 34\n-// lldb-command:continue\n-\n-// lldb-command:print a\n-// lldb-check:[...]$12 = 10\n-// lldb-command:print b\n-// lldb-check:[...]$13 = 34\n-// lldb-command:print c\n-// lldb-check:[...]$14 = 400\n-// lldb-command:continue\n+// Don't test this with rust-enabled lldb for now; see issue #48807\n+// lldbg-command:print a\n+// lldbg-check:[...]$8 = 110\n+// lldbg-command:print b\n+// lldbg-check:[...]$9 = 34\n+// lldbg-command:continue\n+\n+// lldbg-command:print a\n+// lldbg-check:[...]$10 = 10\n+// lldbg-command:print b\n+// lldbg-check:[...]$11 = 34\n+// lldbg-command:continue\n+\n+// lldbg-command:print a\n+// lldbg-check:[...]$12 = 10\n+// lldbg-command:print b\n+// lldbg-check:[...]$13 = 34\n+// lldbg-command:print c\n+// lldbg-check:[...]$14 = 400\n+// lldbg-command:continue\n \n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "9cb2a4c546efaab724cfb7c10b5fa24760cab263", "filename": "src/test/debuginfo/lexical-scopes-in-block-expression.rs", "status": "modified", "additions": 96, "deletions": 48, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -205,155 +205,203 @@\n \n // STRUCT EXPRESSION\n // lldb-command:print val\n-// lldb-check:[...]$0 = -1\n+// lldbg-check:[...]$0 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$1 = 10\n+// lldbg-check:[...]$1 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$2 = 11\n+// lldbg-check:[...]$2 = 11\n+// lldbr-check:(isize) val = 11\n // lldb-command:print ten\n-// lldb-check:[...]$3 = 10\n+// lldbg-check:[...]$3 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$4 = -1\n+// lldbg-check:[...]$4 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$5 = 10\n+// lldbg-check:[...]$5 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // FUNCTION CALL\n // lldb-command:print val\n-// lldb-check:[...]$6 = -1\n+// lldbg-check:[...]$6 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$7 = 10\n+// lldbg-check:[...]$7 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$8 = 12\n+// lldbg-check:[...]$8 = 12\n+// lldbr-check:(isize) val = 12\n // lldb-command:print ten\n-// lldb-check:[...]$9 = 10\n+// lldbg-check:[...]$9 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$10 = -1\n+// lldbg-check:[...]$10 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$11 = 10\n+// lldbg-check:[...]$11 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // TUPLE EXPRESSION\n // lldb-command:print val\n-// lldb-check:[...]$12 = -1\n+// lldbg-check:[...]$12 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$13 = 10\n+// lldbg-check:[...]$13 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$14 = 13\n+// lldbg-check:[...]$14 = 13\n+// lldbr-check:(isize) val = 13\n // lldb-command:print ten\n-// lldb-check:[...]$15 = 10\n+// lldbg-check:[...]$15 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$16 = -1\n+// lldbg-check:[...]$16 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$17 = 10\n+// lldbg-check:[...]$17 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // VEC EXPRESSION\n // lldb-command:print val\n-// lldb-check:[...]$18 = -1\n+// lldbg-check:[...]$18 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$19 = 10\n+// lldbg-check:[...]$19 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$20 = 14\n+// lldbg-check:[...]$20 = 14\n+// lldbr-check:(isize) val = 14\n // lldb-command:print ten\n-// lldb-check:[...]$21 = 10\n+// lldbg-check:[...]$21 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$22 = -1\n+// lldbg-check:[...]$22 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$23 = 10\n+// lldbg-check:[...]$23 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // REPEAT VEC EXPRESSION\n // lldb-command:print val\n-// lldb-check:[...]$24 = -1\n+// lldbg-check:[...]$24 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$25 = 10\n+// lldbg-check:[...]$25 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$26 = 15\n+// lldbg-check:[...]$26 = 15\n+// lldbr-check:(isize) val = 15\n // lldb-command:print ten\n-// lldb-check:[...]$27 = 10\n+// lldbg-check:[...]$27 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$28 = -1\n+// lldbg-check:[...]$28 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$29 = 10\n+// lldbg-check:[...]$29 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // ASSIGNMENT EXPRESSION\n // lldb-command:print val\n-// lldb-check:[...]$30 = -1\n+// lldbg-check:[...]$30 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$31 = 10\n+// lldbg-check:[...]$31 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$32 = 16\n+// lldbg-check:[...]$32 = 16\n+// lldbr-check:(isize) val = 16\n // lldb-command:print ten\n-// lldb-check:[...]$33 = 10\n+// lldbg-check:[...]$33 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$34 = -1\n+// lldbg-check:[...]$34 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$35 = 10\n+// lldbg-check:[...]$35 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n \n // ARITHMETIC EXPRESSION\n // lldb-command:print val\n-// lldb-check:[...]$36 = -1\n+// lldbg-check:[...]$36 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$37 = 10\n+// lldbg-check:[...]$37 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$38 = 17\n+// lldbg-check:[...]$38 = 17\n+// lldbr-check:(isize) val = 17\n // lldb-command:print ten\n-// lldb-check:[...]$39 = 10\n+// lldbg-check:[...]$39 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$40 = -1\n+// lldbg-check:[...]$40 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$41 = 10\n+// lldbg-check:[...]$41 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // INDEX EXPRESSION\n // lldb-command:print val\n-// lldb-check:[...]$42 = -1\n+// lldbg-check:[...]$42 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$43 = 10\n+// lldbg-check:[...]$43 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$44 = 18\n+// lldbg-check:[...]$44 = 18\n+// lldbr-check:(isize) val = 18\n // lldb-command:print ten\n-// lldb-check:[...]$45 = 10\n+// lldbg-check:[...]$45 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n // lldb-command:print val\n-// lldb-check:[...]$46 = -1\n+// lldbg-check:[...]$46 = -1\n+// lldbr-check:(i32) val = -1\n // lldb-command:print ten\n-// lldb-check:[...]$47 = 10\n+// lldbg-check:[...]$47 = 10\n+// lldbr-check:(isize) ten = 10\n // lldb-command:continue\n \n #![allow(unused_variables)]"}, {"sha": "57238961e3fa3dae052fddf17acd3ba4559422dd", "filename": "src/test/debuginfo/method-on-generic-struct.rs", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -73,47 +73,62 @@\n \n // STACK BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$0 = Struct<(u32, i32)> { x: (8888, -8888) }\n+// lldbg-check:[...]$0 = Struct<(u32, i32)> { x: (8888, -8888) }\n+// lldbr-check:(method_on_generic_struct::Struct<(u32, i32)>) *self = { x = { = 8888 = -8888 } }\n // lldb-command:print arg1\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) arg1 = -1\n // lldb-command:print arg2\n-// lldb-check:[...]$2 = -2\n+// lldbg-check:[...]$2 = -2\n+// lldbr-check:(isize) arg2 = -2\n // lldb-command:continue\n \n // STACK BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$3 = Struct<(u32, i32)> { x: (8888, -8888) }\n+// lldbg-check:[...]$3 = Struct<(u32, i32)> { x: (8888, -8888) }\n+// lldbr-check:(method_on_generic_struct::Struct<(u32, i32)>) self = { x = { = 8888 = -8888 } }\n // lldb-command:print arg1\n-// lldb-check:[...]$4 = -3\n+// lldbg-check:[...]$4 = -3\n+// lldbr-check:(isize) arg1 = -3\n // lldb-command:print arg2\n-// lldb-check:[...]$5 = -4\n+// lldbg-check:[...]$5 = -4\n+// lldbr-check:(isize) arg2 = -4\n // lldb-command:continue\n \n // OWNED BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$6 = Struct<f64> { x: 1234.5 }\n+// lldbg-check:[...]$6 = Struct<f64> { x: 1234.5 }\n+// lldbr-check:(method_on_generic_struct::Struct<f64>) *self = Struct<f64> { x: 1234.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$7 = -5\n+// lldbg-check:[...]$7 = -5\n+// lldbr-check:(isize) arg1 = -5\n // lldb-command:print arg2\n-// lldb-check:[...]$8 = -6\n+// lldbg-check:[...]$8 = -6\n+// lldbr-check:(isize) arg2 = -6\n // lldb-command:continue\n \n // OWNED BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$9 = Struct<f64> { x: 1234.5 }\n+// lldbg-check:[...]$9 = Struct<f64> { x: 1234.5 }\n+// lldbr-check:(method_on_generic_struct::Struct<f64>) self = Struct<f64> { x: 1234.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$10 = -7\n+// lldbg-check:[...]$10 = -7\n+// lldbr-check:(isize) arg1 = -7\n // lldb-command:print arg2\n-// lldb-check:[...]$11 = -8\n+// lldbg-check:[...]$11 = -8\n+// lldbr-check:(isize) arg2 = -8\n // lldb-command:continue\n \n // OWNED MOVED\n // lldb-command:print *self\n-// lldb-check:[...]$12 = Struct<f64> { x: 1234.5 }\n+// lldbg-check:[...]$12 = Struct<f64> { x: 1234.5 }\n+// lldbr-check:(method_on_generic_struct::Struct<f64>) *self = Struct<f64> { x: 1234.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$13 = -9\n+// lldbg-check:[...]$13 = -9\n+// lldbr-check:(isize) arg1 = -9\n // lldb-command:print arg2\n-// lldb-check:[...]$14 = -10\n+// lldbg-check:[...]$14 = -10\n+// lldbr-check:(isize) arg2 = -10\n // lldb-command:continue\n \n "}, {"sha": "e64962593dfcd066406f91baf1ceb302c48fa5d5", "filename": "src/test/debuginfo/method-on-struct.rs", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -73,47 +73,62 @@\n \n // STACK BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$0 = Struct { x: 100 }\n+// lldbg-check:[...]$0 = Struct { x: 100 }\n+// lldbr-check:(method_on_struct::Struct) *self = Struct { x: 100 }\n // lldb-command:print arg1\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) arg1 = -1\n // lldb-command:print arg2\n-// lldb-check:[...]$2 = -2\n+// lldbg-check:[...]$2 = -2\n+// lldbr-check:(isize) arg2 = -2\n // lldb-command:continue\n \n // STACK BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$3 = Struct { x: 100 }\n+// lldbg-check:[...]$3 = Struct { x: 100 }\n+// lldbr-check:(method_on_struct::Struct) self = Struct { x: 100 }\n // lldb-command:print arg1\n-// lldb-check:[...]$4 = -3\n+// lldbg-check:[...]$4 = -3\n+// lldbr-check:(isize) arg1 = -3\n // lldb-command:print arg2\n-// lldb-check:[...]$5 = -4\n+// lldbg-check:[...]$5 = -4\n+// lldbr-check:(isize) arg2 = -4\n // lldb-command:continue\n \n // OWNED BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$6 = Struct { x: 200 }\n+// lldbg-check:[...]$6 = Struct { x: 200 }\n+// lldbr-check:(method_on_struct::Struct) *self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$7 = -5\n+// lldbg-check:[...]$7 = -5\n+// lldbr-check:(isize) arg1 = -5\n // lldb-command:print arg2\n-// lldb-check:[...]$8 = -6\n+// lldbg-check:[...]$8 = -6\n+// lldbr-check:(isize) arg2 = -6\n // lldb-command:continue\n \n // OWNED BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$9 = Struct { x: 200 }\n+// lldbg-check:[...]$9 = Struct { x: 200 }\n+// lldbr-check:(method_on_struct::Struct) self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$10 = -7\n+// lldbg-check:[...]$10 = -7\n+// lldbr-check:(isize) arg1 = -7\n // lldb-command:print arg2\n-// lldb-check:[...]$11 = -8\n+// lldbg-check:[...]$11 = -8\n+// lldbr-check:(isize) arg2 = -8\n // lldb-command:continue\n \n // OWNED MOVED\n // lldb-command:print *self\n-// lldb-check:[...]$12 = Struct { x: 200 }\n+// lldbg-check:[...]$12 = Struct { x: 200 }\n+// lldbr-check:(method_on_struct::Struct) *self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$13 = -9\n+// lldbg-check:[...]$13 = -9\n+// lldbr-check:(isize) arg1 = -9\n // lldb-command:print arg2\n-// lldb-check:[...]$14 = -10\n+// lldbg-check:[...]$14 = -10\n+// lldbr-check:(isize) arg2 = -10\n // lldb-command:continue\n \n "}, {"sha": "4c1e111d3b81dcbcec2a269c128842159560e661", "filename": "src/test/debuginfo/method-on-trait.rs", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -73,47 +73,62 @@\n \n // STACK BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$0 = Struct { x: 100 }\n+// lldbg-check:[...]$0 = Struct { x: 100 }\n+// lldbr-check:(method_on_trait::Struct) *self = Struct { x: 100 }\n // lldb-command:print arg1\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) arg1 = -1\n // lldb-command:print arg2\n-// lldb-check:[...]$2 = -2\n+// lldbg-check:[...]$2 = -2\n+// lldbr-check:(isize) arg2 = -2\n // lldb-command:continue\n \n // STACK BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$3 = Struct { x: 100 }\n+// lldbg-check:[...]$3 = Struct { x: 100 }\n+// lldbr-check:(method_on_trait::Struct) self = Struct { x: 100 }\n // lldb-command:print arg1\n-// lldb-check:[...]$4 = -3\n+// lldbg-check:[...]$4 = -3\n+// lldbr-check:(isize) arg1 = -3\n // lldb-command:print arg2\n-// lldb-check:[...]$5 = -4\n+// lldbg-check:[...]$5 = -4\n+// lldbr-check:(isize) arg2 = -4\n // lldb-command:continue\n \n // OWNED BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$6 = Struct { x: 200 }\n+// lldbg-check:[...]$6 = Struct { x: 200 }\n+// lldbr-check:(method_on_trait::Struct) *self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$7 = -5\n+// lldbg-check:[...]$7 = -5\n+// lldbr-check:(isize) arg1 = -5\n // lldb-command:print arg2\n-// lldb-check:[...]$8 = -6\n+// lldbg-check:[...]$8 = -6\n+// lldbr-check:(isize) arg2 = -6\n // lldb-command:continue\n \n // OWNED BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$9 = Struct { x: 200 }\n+// lldbg-check:[...]$9 = Struct { x: 200 }\n+// lldbr-check:(method_on_trait::Struct) self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$10 = -7\n+// lldbg-check:[...]$10 = -7\n+// lldbr-check:(isize) arg1 = -7\n // lldb-command:print arg2\n-// lldb-check:[...]$11 = -8\n+// lldbg-check:[...]$11 = -8\n+// lldbr-check:(isize) arg2 = -8\n // lldb-command:continue\n \n // OWNED MOVED\n // lldb-command:print *self\n-// lldb-check:[...]$12 = Struct { x: 200 }\n+// lldbg-check:[...]$12 = Struct { x: 200 }\n+// lldbr-check:(method_on_trait::Struct) *self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$13 = -9\n+// lldbg-check:[...]$13 = -9\n+// lldbr-check:(isize) arg1 = -9\n // lldb-command:print arg2\n-// lldb-check:[...]$14 = -10\n+// lldbg-check:[...]$14 = -10\n+// lldbr-check:(isize) arg2 = -10\n // lldb-command:continue\n \n "}, {"sha": "cef7a1cbf1b569c5baedf2c2acc3085f426adeaf", "filename": "src/test/debuginfo/method-on-tuple-struct.rs", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -73,47 +73,62 @@\n \n // STACK BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$0 = TupleStruct(100, -100.5)\n+// lldbg-check:[...]$0 = TupleStruct(100, -100.5)\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = { = 100 = -100.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) arg1 = -1\n // lldb-command:print arg2\n-// lldb-check:[...]$2 = -2\n+// lldbg-check:[...]$2 = -2\n+// lldbr-check:(isize) arg2 = -2\n // lldb-command:continue\n \n // STACK BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$3 = TupleStruct(100, -100.5)\n+// lldbg-check:[...]$3 = TupleStruct(100, -100.5)\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) self = { = 100 = -100.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$4 = -3\n+// lldbg-check:[...]$4 = -3\n+// lldbr-check:(isize) arg1 = -3\n // lldb-command:print arg2\n-// lldb-check:[...]$5 = -4\n+// lldbg-check:[...]$5 = -4\n+// lldbr-check:(isize) arg2 = -4\n // lldb-command:continue\n \n // OWNED BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$6 = TupleStruct(200, -200.5)\n+// lldbg-check:[...]$6 = TupleStruct(200, -200.5)\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = { = 200 = -200.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$7 = -5\n+// lldbg-check:[...]$7 = -5\n+// lldbr-check:(isize) arg1 = -5\n // lldb-command:print arg2\n-// lldb-check:[...]$8 = -6\n+// lldbg-check:[...]$8 = -6\n+// lldbr-check:(isize) arg2 = -6\n // lldb-command:continue\n \n // OWNED BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$9 = TupleStruct(200, -200.5)\n+// lldbg-check:[...]$9 = TupleStruct(200, -200.5)\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) self = { = 200 = -200.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$10 = -7\n+// lldbg-check:[...]$10 = -7\n+// lldbr-check:(isize) arg1 = -7\n // lldb-command:print arg2\n-// lldb-check:[...]$11 = -8\n+// lldbg-check:[...]$11 = -8\n+// lldbr-check:(isize) arg2 = -8\n // lldb-command:continue\n \n // OWNED MOVED\n // lldb-command:print *self\n-// lldb-check:[...]$12 = TupleStruct(200, -200.5)\n+// lldbg-check:[...]$12 = TupleStruct(200, -200.5)\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = { = 200 = -200.5 }\n // lldb-command:print arg1\n-// lldb-check:[...]$13 = -9\n+// lldbg-check:[...]$13 = -9\n+// lldbr-check:(isize) arg1 = -9\n // lldb-command:print arg2\n-// lldb-check:[...]$14 = -10\n+// lldbg-check:[...]$14 = -10\n+// lldbr-check:(isize) arg2 = -10\n // lldb-command:continue\n \n "}, {"sha": "7f370954b9053e00b564565ea28c80219d911405", "filename": "src/test/debuginfo/multi-cgu.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmulti-cgu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmulti-cgu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmulti-cgu.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -35,11 +35,13 @@\n // lldb-command:run\n \n // lldb-command:print xxx\n-// lldb-check:[...]$0 = 12345\n+// lldbg-check:[...]$0 = 12345\n+// lldbr-check:(u32) xxx = 12345\n // lldb-command:continue\n \n // lldb-command:print yyy\n-// lldb-check:[...]$1 = 67890\n+// lldbg-check:[...]$1 = 67890\n+// lldbr-check:(u64) yyy = 67890\n // lldb-command:continue\n \n "}, {"sha": "b2327e494e7d1359899113199117f409f22a48a5", "filename": "src/test/debuginfo/multiple-functions-equal-var-names.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -33,15 +33,18 @@\n // lldb-command:run\n \n // lldb-command:print abc\n-// lldb-check:[...]$0 = 10101\n+// lldbg-check:[...]$0 = 10101\n+// lldbr-check:(i32) abc = 10101\n // lldb-command:continue\n \n // lldb-command:print abc\n-// lldb-check:[...]$1 = 20202\n+// lldbg-check:[...]$1 = 20202\n+// lldbr-check:(i32) abc = 20202\n // lldb-command:continue\n \n // lldb-command:print abc\n-// lldb-check:[...]$2 = 30303\n+// lldbg-check:[...]$2 = 30303\n+// lldbr-check:(i32) abc = 30303\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "d78ef0292c16042279952c016ad60ecbac244c44", "filename": "src/test/debuginfo/multiple-functions.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -33,15 +33,18 @@\n // lldb-command:run\n \n // lldb-command:print a\n-// lldb-check:[...]$0 = 10101\n+// lldbg-check:[...]$0 = 10101\n+// lldbr-check:(i32) a = 10101\n // lldb-command:continue\n \n // lldb-command:print b\n-// lldb-check:[...]$1 = 20202\n+// lldbg-check:[...]$1 = 20202\n+// lldbr-check:(i32) b = 20202\n // lldb-command:continue\n \n // lldb-command:print c\n-// lldb-check:[...]$2 = 30303\n+// lldbg-check:[...]$2 = 30303\n+// lldbr-check:(i32) c = 30303\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "91f0e14157ee30c2f5ab65df06a48acb667058c5", "filename": "src/test/debuginfo/name-shadowing-and-scope-nesting.rs", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -58,39 +58,51 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = false\n+// lldbg-check:[...]$0 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:print y\n-// lldb-check:[...]$1 = true\n+// lldbg-check:[...]$1 = true\n+// lldbr-check:(bool) y = true\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = 10\n+// lldbg-check:[...]$2 = 10\n+// lldbr-check:(i32) x = 10\n // lldb-command:print y\n-// lldb-check:[...]$3 = true\n+// lldbg-check:[...]$3 = true\n+// lldbr-check:(bool) y = true\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = 10.5\n+// lldbg-check:[...]$4 = 10.5\n+// lldbr-check:(f64) x = 10.5\n // lldb-command:print y\n-// lldb-check:[...]$5 = 20\n+// lldbg-check:[...]$5 = 20\n+// lldbr-check:(i32) y = 20\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$6 = true\n+// lldbg-check:[...]$6 = true\n+// lldbr-check:(bool) x = true\n // lldb-command:print y\n-// lldb-check:[...]$7 = 2220\n+// lldbg-check:[...]$7 = 2220\n+// lldbr-check:(i32) y = 2220\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$8 = 203203.5\n+// lldbg-check:[...]$8 = 203203.5\n+// lldbr-check:(f64) x = 203203.5\n // lldb-command:print y\n-// lldb-check:[...]$9 = 2220\n+// lldbg-check:[...]$9 = 2220\n+// lldbr-check:(i32) y = 2220\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$10 = 10.5\n+// lldbg-check:[...]$10 = 10.5\n+// lldbr-check:(f64) x = 10.5\n // lldb-command:print y\n-// lldb-check:[...]$11 = 20\n+// lldbg-check:[...]$11 = 20\n+// lldbr-check:(i32) y = 20\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "d5273d53dc59a17b5002a291a8b332d0ad14041b", "filename": "src/test/debuginfo/packed-struct-with-destructor.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -56,28 +56,36 @@\n // lldb-command:run\n \n // lldb-command:print packed\n-// lldb-check:[...]$0 = Packed { x: 123, y: 234, z: 345 }\n+// lldbg-check:[...]$0 = Packed { x: 123, y: 234, z: 345 }\n+// lldbr-check:(packed_struct_with_destructor::Packed) packed = Packed { x: 123, y: 234, z: 345 }\n \n // lldb-command:print packedInPacked\n-// lldb-check:[...]$1 = PackedInPacked { a: 1111, b: Packed { x: 2222, y: 3333, z: 4444 }, c: 5555, d: Packed { x: 6666, y: 7777, z: 8888 } }\n+// lldbg-check:[...]$1 = PackedInPacked { a: 1111, b: Packed { x: 2222, y: 3333, z: 4444 }, c: 5555, d: Packed { x: 6666, y: 7777, z: 8888 } }\n+// lldbr-check:(packed_struct_with_destructor::PackedInPacked) packedInPacked = PackedInPacked { a: 1111, b: Packed { x: 2222, y: 3333, z: 4444 }, c: 5555, d: Packed { x: 6666, y: 7777, z: 8888 } }\n \n // lldb-command:print packedInUnpacked\n-// lldb-check:[...]$2 = PackedInUnpacked { a: -1111, b: Packed { x: -2222, y: -3333, z: -4444 }, c: -5555, d: Packed { x: -6666, y: -7777, z: -8888 } }\n+// lldbg-check:[...]$2 = PackedInUnpacked { a: -1111, b: Packed { x: -2222, y: -3333, z: -4444 }, c: -5555, d: Packed { x: -6666, y: -7777, z: -8888 } }\n+// lldbr-check:(packed_struct_with_destructor::PackedInUnpacked) packedInUnpacked = PackedInUnpacked { a: -1111, b: Packed { x: -2222, y: -3333, z: -4444 }, c: -5555, d: Packed { x: -6666, y: -7777, z: -8888 } }\n \n // lldb-command:print unpackedInPacked\n-// lldb-check:[...]$3 = UnpackedInPacked { a: 987, b: Unpacked { x: 876, y: 765, z: 654 }, c: Unpacked { x: 543, y: 432, z: 321 }, d: 210 }\n+// lldbg-check:[...]$3 = UnpackedInPacked { a: 987, b: Unpacked { x: 876, y: 765, z: 654 }, c: Unpacked { x: 543, y: 432, z: 321 }, d: 210 }\n+// lldbr-check:(packed_struct_with_destructor::UnpackedInPacked) unpackedInPacked = UnpackedInPacked { a: 987, b: Unpacked { x: 876, y: 765, z: 654 }, c: Unpacked { x: 543, y: 432, z: 321 }, d: 210 }\n \n // lldb-command:print packedInPackedWithDrop\n-// lldb-check:[...]$4 = PackedInPackedWithDrop { a: 11, b: Packed { x: 22, y: 33, z: 44 }, c: 55, d: Packed { x: 66, y: 77, z: 88 } }\n+// lldbg-check:[...]$4 = PackedInPackedWithDrop { a: 11, b: Packed { x: 22, y: 33, z: 44 }, c: 55, d: Packed { x: 66, y: 77, z: 88 } }\n+// lldbr-check:(packed_struct_with_destructor::PackedInPackedWithDrop) packedInPackedWithDrop = PackedInPackedWithDrop { a: 11, b: Packed { x: 22, y: 33, z: 44 }, c: 55, d: Packed { x: 66, y: 77, z: 88 } }\n \n // lldb-command:print packedInUnpackedWithDrop\n-// lldb-check:[...]$5 = PackedInUnpackedWithDrop { a: -11, b: Packed { x: -22, y: -33, z: -44 }, c: -55, d: Packed { x: -66, y: -77, z: -88 } }\n+// lldbg-check:[...]$5 = PackedInUnpackedWithDrop { a: -11, b: Packed { x: -22, y: -33, z: -44 }, c: -55, d: Packed { x: -66, y: -77, z: -88 } }\n+// lldbr-check:(packed_struct_with_destructor::PackedInUnpackedWithDrop) packedInUnpackedWithDrop = PackedInUnpackedWithDrop { a: -11, b: Packed { x: -22, y: -33, z: -44 }, c: -55, d: Packed { x: -66, y: -77, z: -88 } }\n \n // lldb-command:print unpackedInPackedWithDrop\n-// lldb-check:[...]$6 = UnpackedInPackedWithDrop { a: 98, b: Unpacked { x: 87, y: 76, z: 65 }, c: Unpacked { x: 54, y: 43, z: 32 }, d: 21 }\n+// lldbg-check:[...]$6 = UnpackedInPackedWithDrop { a: 98, b: Unpacked { x: 87, y: 76, z: 65 }, c: Unpacked { x: 54, y: 43, z: 32 }, d: 21 }\n+// lldbr-check:(packed_struct_with_destructor::UnpackedInPackedWithDrop) unpackedInPackedWithDrop = UnpackedInPackedWithDrop { a: 98, b: Unpacked { x: 87, y: 76, z: 65 }, c: Unpacked { x: 54, y: 43, z: 32 }, d: 21 }\n \n // lldb-command:print deeplyNested\n-// lldb-check:[...]$7 = DeeplyNested { a: PackedInPacked { a: 1, b: Packed { x: 2, y: 3, z: 4 }, c: 5, d: Packed { x: 6, y: 7, z: 8 } }, b: UnpackedInPackedWithDrop { a: 9, b: Unpacked { x: 10, y: 11, z: 12 }, c: Unpacked { x: 13, y: 14, z: 15 }, d: 16 }, c: PackedInUnpacked { a: 17, b: Packed { x: 18, y: 19, z: 20 }, c: 21, d: Packed { x: 22, y: 23, z: 24 } }, d: PackedInUnpackedWithDrop { a: 25, b: Packed { x: 26, y: 27, z: 28 }, c: 29, d: Packed { x: 30, y: 31, z: 32 } }, e: UnpackedInPacked { a: 33, b: Unpacked { x: 34, y: 35, z: 36 }, c: Unpacked { x: 37, y: 38, z: 39 }, d: 40 }, f: PackedInPackedWithDrop { a: 41, b: Packed { x: 42, y: 43, z: 44 }, c: 45, d: Packed { x: 46, y: 47, z: 48 } } }\n+// lldbg-check:[...]$7 = DeeplyNested { a: PackedInPacked { a: 1, b: Packed { x: 2, y: 3, z: 4 }, c: 5, d: Packed { x: 6, y: 7, z: 8 } }, b: UnpackedInPackedWithDrop { a: 9, b: Unpacked { x: 10, y: 11, z: 12 }, c: Unpacked { x: 13, y: 14, z: 15 }, d: 16 }, c: PackedInUnpacked { a: 17, b: Packed { x: 18, y: 19, z: 20 }, c: 21, d: Packed { x: 22, y: 23, z: 24 } }, d: PackedInUnpackedWithDrop { a: 25, b: Packed { x: 26, y: 27, z: 28 }, c: 29, d: Packed { x: 30, y: 31, z: 32 } }, e: UnpackedInPacked { a: 33, b: Unpacked { x: 34, y: 35, z: 36 }, c: Unpacked { x: 37, y: 38, z: 39 }, d: 40 }, f: PackedInPackedWithDrop { a: 41, b: Packed { x: 42, y: 43, z: 44 }, c: 45, d: Packed { x: 46, y: 47, z: 48 } } }\n+// lldbr-check:(packed_struct_with_destructor::DeeplyNested) deeplyNested = DeeplyNested { a: PackedInPacked { a: 1, b: Packed { x: 2, y: 3, z: 4 }, c: 5, d: Packed { x: 6, y: 7, z: 8 } }, b: UnpackedInPackedWithDrop { a: 9, b: Unpacked { x: 10, y: 11, z: 12 }, c: Unpacked { x: 13, y: 14, z: 15 }, d: 16 }, c: PackedInUnpacked { a: 17, b: Packed { x: 18, y: 19, z: 20 }, c: 21, d: Packed { x: 22, y: 23, z: 24 } }, d: PackedInUnpackedWithDrop { a: 25, b: Packed { x: 26, y: 27, z: 28 }, c: 29, d: Packed { x: 30, y: 31, z: 32 } }, e: UnpackedInPacked { a: 33, b: Unpacked { x: 34, y: 35, z: 36 }, c: Unpacked { x: 37, y: 38, z: 39 }, d: 40 }, f: PackedInPackedWithDrop { a: 41, b: Packed { x: 42, y: 43, z: 44 }, c: 45, d: Packed { x: 46, y: 47, z: 48 } } }\n \n \n #![allow(unused_variables)]"}, {"sha": "2ed3711fbde80a6bcf7998b7a7333e1b58eacec3", "filename": "src/test/debuginfo/packed-struct.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -46,22 +46,28 @@\n // lldb-command:run\n \n // lldb-command:print packed\n-// lldb-check:[...]$0 = Packed { x: 123, y: 234, z: 345 }\n+// lldbg-check:[...]$0 = Packed { x: 123, y: 234, z: 345 }\n+// lldbr-check:(packed_struct::Packed) packed = Packed { x: 123, y: 234, z: 345 }\n \n // lldb-command:print packedInPacked\n-// lldb-check:[...]$1 = PackedInPacked { a: 1111, b: Packed { x: 2222, y: 3333, z: 4444 }, c: 5555, d: Packed { x: 6666, y: 7777, z: 8888 } }\n+// lldbg-check:[...]$1 = PackedInPacked { a: 1111, b: Packed { x: 2222, y: 3333, z: 4444 }, c: 5555, d: Packed { x: 6666, y: 7777, z: 8888 } }\n+// lldbr-check:(packed_struct::PackedInPacked) packedInPacked = PackedInPacked { a: 1111, b: Packed { x: 2222, y: 3333, z: 4444 }, c: 5555, d: Packed { x: 6666, y: 7777, z: 8888 } }\n \n // lldb-command:print packedInUnpacked\n-// lldb-check:[...]$2 = PackedInUnpacked { a: -1111, b: Packed { x: -2222, y: -3333, z: -4444 }, c: -5555, d: Packed { x: -6666, y: -7777, z: -8888 } }\n+// lldbg-check:[...]$2 = PackedInUnpacked { a: -1111, b: Packed { x: -2222, y: -3333, z: -4444 }, c: -5555, d: Packed { x: -6666, y: -7777, z: -8888 } }\n+// lldbr-check:(packed_struct::PackedInUnpacked) packedInUnpacked = PackedInUnpacked { a: -1111, b: Packed { x: -2222, y: -3333, z: -4444 }, c: -5555, d: Packed { x: -6666, y: -7777, z: -8888 } }\n \n // lldb-command:print unpackedInPacked\n-// lldb-check:[...]$3 = UnpackedInPacked { a: 987, b: Unpacked { x: 876, y: 765, z: 654, w: 543 }, c: Unpacked { x: 432, y: 321, z: 210, w: 109 }, d: -98 }\n+// lldbg-check:[...]$3 = UnpackedInPacked { a: 987, b: Unpacked { x: 876, y: 765, z: 654, w: 543 }, c: Unpacked { x: 432, y: 321, z: 210, w: 109 }, d: -98 }\n+// lldbr-check:(packed_struct::UnpackedInPacked) unpackedInPacked = UnpackedInPacked { a: 987, b: Unpacked { x: 876, y: 765, z: 654, w: 543 }, c: Unpacked { x: 432, y: 321, z: 210, w: 109 }, d: -98 }\n \n // lldb-command:print sizeof(packed)\n-// lldb-check:[...]$4 = 14\n+// lldbg-check:[...]$4 = 14\n+// lldbr-check:(usize) = 14\n \n // lldb-command:print sizeof(packedInPacked)\n-// lldb-check:[...]$5 = 40\n+// lldbg-check:[...]$5 = 40\n+// lldbr-check:(usize) = 40\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "a9acaab7dfc06c330580e7eecbd87c634b90070b", "filename": "src/test/debuginfo/self-in-default-method.rs", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -73,47 +73,62 @@\n \n // STACK BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$0 = Struct { x: 100 }\n+// lldbg-check:[...]$0 = Struct { x: 100 }\n+// lldbr-check:(self_in_default_method::Struct) *self = Struct { x: 100 }\n // lldb-command:print arg1\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) arg1 = -1\n // lldb-command:print arg2\n-// lldb-check:[...]$2 = -2\n+// lldbg-check:[...]$2 = -2\n+// lldbr-check:(isize) arg2 = -2\n // lldb-command:continue\n \n // STACK BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$3 = Struct { x: 100 }\n+// lldbg-check:[...]$3 = Struct { x: 100 }\n+// lldbr-check:(self_in_default_method::Struct) self = Struct { x: 100 }\n // lldb-command:print arg1\n-// lldb-check:[...]$4 = -3\n+// lldbg-check:[...]$4 = -3\n+// lldbr-check:(isize) arg1 = -3\n // lldb-command:print arg2\n-// lldb-check:[...]$5 = -4\n+// lldbg-check:[...]$5 = -4\n+// lldbr-check:(isize) arg2 = -4\n // lldb-command:continue\n \n // OWNED BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$6 = Struct { x: 200 }\n+// lldbg-check:[...]$6 = Struct { x: 200 }\n+// lldbr-check:(self_in_default_method::Struct) *self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$7 = -5\n+// lldbg-check:[...]$7 = -5\n+// lldbr-check:(isize) arg1 = -5\n // lldb-command:print arg2\n-// lldb-check:[...]$8 = -6\n+// lldbg-check:[...]$8 = -6\n+// lldbr-check:(isize) arg2 = -6\n // lldb-command:continue\n \n // OWNED BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$9 = Struct { x: 200 }\n+// lldbg-check:[...]$9 = Struct { x: 200 }\n+// lldbr-check:(self_in_default_method::Struct) self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$10 = -7\n+// lldbg-check:[...]$10 = -7\n+// lldbr-check:(isize) arg1 = -7\n // lldb-command:print arg2\n-// lldb-check:[...]$11 = -8\n+// lldbg-check:[...]$11 = -8\n+// lldbr-check:(isize) arg2 = -8\n // lldb-command:continue\n \n // OWNED MOVED\n // lldb-command:print *self\n-// lldb-check:[...]$12 = Struct { x: 200 }\n+// lldbg-check:[...]$12 = Struct { x: 200 }\n+// lldbr-check:(self_in_default_method::Struct) *self = Struct { x: 200 }\n // lldb-command:print arg1\n-// lldb-check:[...]$13 = -9\n+// lldbg-check:[...]$13 = -9\n+// lldbr-check:(isize) arg1 = -9\n // lldb-command:print arg2\n-// lldb-check:[...]$14 = -10\n+// lldbg-check:[...]$14 = -10\n+// lldbr-check:(isize) arg2 = -10\n // lldb-command:continue\n \n #![feature(box_syntax)]"}, {"sha": "2613300b8d996000ea1fda80b0ac9f3d5135b0e2", "filename": "src/test/debuginfo/self-in-generic-default-method.rs", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -73,47 +73,62 @@\n \n // STACK BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$0 = Struct { x: 987 }\n+// lldbg-check:[...]$0 = Struct { x: 987 }\n+// lldbr-check:(self_in_generic_default_method::Struct) *self = Struct { x: 987 }\n // lldb-command:print arg1\n-// lldb-check:[...]$1 = -1\n+// lldbg-check:[...]$1 = -1\n+// lldbr-check:(isize) arg1 = -1\n // lldb-command:print arg2\n-// lldb-check:[...]$2 = 2\n+// lldbg-check:[...]$2 = 2\n+// lldbr-check:(u16) arg2 = 2\n // lldb-command:continue\n \n // STACK BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$3 = Struct { x: 987 }\n+// lldbg-check:[...]$3 = Struct { x: 987 }\n+// lldbr-check:(self_in_generic_default_method::Struct) self = Struct { x: 987 }\n // lldb-command:print arg1\n-// lldb-check:[...]$4 = -3\n+// lldbg-check:[...]$4 = -3\n+// lldbr-check:(isize) arg1 = -3\n // lldb-command:print arg2\n-// lldb-check:[...]$5 = -4\n+// lldbg-check:[...]$5 = -4\n+// lldbr-check:(i16) arg2 = -4\n // lldb-command:continue\n \n // OWNED BY REF\n // lldb-command:print *self\n-// lldb-check:[...]$6 = Struct { x: 879 }\n+// lldbg-check:[...]$6 = Struct { x: 879 }\n+// lldbr-check:(self_in_generic_default_method::Struct) *self = Struct { x: 879 }\n // lldb-command:print arg1\n-// lldb-check:[...]$7 = -5\n+// lldbg-check:[...]$7 = -5\n+// lldbr-check:(isize) arg1 = -5\n // lldb-command:print arg2\n-// lldb-check:[...]$8 = -6\n+// lldbg-check:[...]$8 = -6\n+// lldbr-check:(i32) arg2 = -6\n // lldb-command:continue\n \n // OWNED BY VAL\n // lldb-command:print self\n-// lldb-check:[...]$9 = Struct { x: 879 }\n+// lldbg-check:[...]$9 = Struct { x: 879 }\n+// lldbr-check:(self_in_generic_default_method::Struct) self = Struct { x: 879 }\n // lldb-command:print arg1\n-// lldb-check:[...]$10 = -7\n+// lldbg-check:[...]$10 = -7\n+// lldbr-check:(isize) arg1 = -7\n // lldb-command:print arg2\n-// lldb-check:[...]$11 = -8\n+// lldbg-check:[...]$11 = -8\n+// lldbr-check:(i64) arg2 = -8\n // lldb-command:continue\n \n // OWNED MOVED\n // lldb-command:print *self\n-// lldb-check:[...]$12 = Struct { x: 879 }\n+// lldbg-check:[...]$12 = Struct { x: 879 }\n+// lldbr-check:(self_in_generic_default_method::Struct) *self = Struct { x: 879 }\n // lldb-command:print arg1\n-// lldb-check:[...]$13 = -9\n+// lldbg-check:[...]$13 = -9\n+// lldbr-check:(isize) arg1 = -9\n // lldb-command:print arg2\n-// lldb-check:[...]$14 = -10.5\n+// lldbg-check:[...]$14 = -10.5\n+// lldbr-check:(f32) arg2 = -10.5\n // lldb-command:continue\n \n #![feature(box_syntax)]"}, {"sha": "49d876d4530b91245892bae31e1bd06fcb80a695", "filename": "src/test/debuginfo/shadowed-argument.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -40,21 +40,27 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = false\n+// lldbg-check:[...]$0 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:print y\n-// lldb-check:[...]$1 = true\n+// lldbg-check:[...]$1 = true\n+// lldbr-check:(bool) y = true\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = 10\n+// lldbg-check:[...]$2 = 10\n+// lldbr-check:(i32) x = 10\n // lldb-command:print y\n-// lldb-check:[...]$3 = true\n+// lldbg-check:[...]$3 = true\n+// lldbr-check:(bool) y = true\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = 10.5\n+// lldbg-check:[...]$4 = 10.5\n+// lldbr-check:(f64) x = 10.5\n // lldb-command:print y\n-// lldb-check:[...]$5 = 20\n+// lldbg-check:[...]$5 = 20\n+// lldbr-check:(i32) y = 20\n // lldb-command:continue\n \n "}, {"sha": "3a8f6d3b70d16b5d692e905f268d1b6e899e037b", "filename": "src/test/debuginfo/shadowed-variable.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -50,33 +50,43 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = false\n+// lldbg-check:[...]$0 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:print y\n-// lldb-check:[...]$1 = true\n+// lldbg-check:[...]$1 = true\n+// lldbr-check:(bool) y = true\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = 10\n+// lldbg-check:[...]$2 = 10\n+// lldbr-check:(i32) x = 10\n // lldb-command:print y\n-// lldb-check:[...]$3 = true\n+// lldbg-check:[...]$3 = true\n+// lldbr-check:(bool) y = true\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = 10.5\n+// lldbg-check:[...]$4 = 10.5\n+// lldbr-check:(f64) x = 10.5\n // lldb-command:print y\n-// lldb-check:[...]$5 = 20\n+// lldbg-check:[...]$5 = 20\n+// lldbr-check:(i32) y = 20\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$6 = 10.5\n+// lldbg-check:[...]$6 = 10.5\n+// lldbr-check:(f64) x = 10.5\n // lldb-command:print y\n-// lldb-check:[...]$7 = 20\n+// lldbg-check:[...]$7 = 20\n+// lldbr-check:(i32) y = 20\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$8 = 11.5\n+// lldbg-check:[...]$8 = 11.5\n+// lldbr-check:(f64) x = 11.5\n // lldb-command:print y\n-// lldb-check:[...]$9 = 20\n+// lldbg-check:[...]$9 = 20\n+// lldbr-check:(i32) y = 20\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "935a0bb2ae443bba450a1e08917add6c7b52e839", "filename": "src/test/debuginfo/simple-lexical-scope.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -50,31 +50,38 @@\n // lldb-command:run\n \n // lldb-command:print x\n-// lldb-check:[...]$0 = false\n+// lldbg-check:[...]$0 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$1 = false\n+// lldbg-check:[...]$1 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$2 = 10\n+// lldbg-check:[...]$2 = 10\n+// lldbr-check:(i32) x = 10\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$3 = 10\n+// lldbg-check:[...]$3 = 10\n+// lldbr-check:(i32) x = 10\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$4 = 10.5\n+// lldbg-check:[...]$4 = 10.5\n+// lldbr-check:(f64) x = 10.5\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$5 = 10\n+// lldbg-check:[...]$5 = 10\n+// lldbr-check:(i32) x = 10\n // lldb-command:continue\n \n // lldb-command:print x\n-// lldb-check:[...]$6 = false\n+// lldbg-check:[...]$6 = false\n+// lldbr-check:(bool) x = false\n // lldb-command:continue\n \n "}, {"sha": "e27324fe330663229473b30cdd3863135f5f6528", "filename": "src/test/debuginfo/simple-struct.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n+\n // min-lldb-version: 310\n // ignore-gdb // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n \n@@ -108,22 +110,28 @@\n // lldb-command:run\n \n // lldb-command:print no_padding16\n-// lldb-check:[...]$0 = NoPadding16 { x: 10000, y: -10001 }\n+// lldbg-check:[...]$0 = NoPadding16 { x: 10000, y: -10001 }\n+// lldbr-check:(simple_struct::NoPadding16) no_padding16 = NoPadding16 { x: 10000, y: -10001 }\n \n // lldb-command:print no_padding32\n-// lldb-check:[...]$1 = NoPadding32 { x: -10002, y: -10003.5, z: 10004 }\n+// lldbg-check:[...]$1 = NoPadding32 { x: -10002, y: -10003.5, z: 10004 }\n+// lldbr-check:(simple_struct::NoPadding32) no_padding32 = NoPadding32 { x: -10002, y: -10003.5, z: 10004 }\n \n // lldb-command:print no_padding64\n-// lldb-check:[...]$2 = NoPadding64 { x: -10005.5, y: 10006, z: 10007 }\n+// lldbg-check:[...]$2 = NoPadding64 { x: -10005.5, y: 10006, z: 10007 }\n+// lldbr-check:(simple_struct::NoPadding64) no_padding64 = NoPadding64 { x: -10005.5, y: 10006, z: 10007 }\n \n // lldb-command:print no_padding163264\n-// lldb-check:[...]$3 = NoPadding163264 { a: -10008, b: 10009, c: 10010, d: 10011 }\n+// lldbg-check:[...]$3 = NoPadding163264 { a: -10008, b: 10009, c: 10010, d: 10011 }\n+// lldbr-check:(simple_struct::NoPadding163264) no_padding163264 = NoPadding163264 { a: -10008, b: 10009, c: 10010, d: 10011 }\n \n // lldb-command:print internal_padding\n-// lldb-check:[...]$4 = InternalPadding { x: 10012, y: -10013 }\n+// lldbg-check:[...]$4 = InternalPadding { x: 10012, y: -10013 }\n+// lldbr-check:(simple_struct::InternalPadding) internal_padding = InternalPadding { x: 10012, y: -10013 }\n \n // lldb-command:print padding_at_end\n-// lldb-check:[...]$5 = PaddingAtEnd { x: -10014, y: 10015 }\n+// lldbg-check:[...]$5 = PaddingAtEnd { x: -10014, y: 10015 }\n+// lldbr-check:(simple_struct::PaddingAtEnd) padding_at_end = PaddingAtEnd { x: -10014, y: 10015 }\n \n #![allow(unused_variables)]\n #![allow(dead_code)]"}, {"sha": "ea0fd4e37fd422299c4effb24a2a96ff488b81b7", "filename": "src/test/debuginfo/simple-tuple.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -110,21 +110,28 @@\n // lldb-command:run\n \n // lldb-command:print/d noPadding8\n-// lldb-check:[...]$0 = (-100, 100)\n+// lldbg-check:[...]$0 = (-100, 100)\n+// lldbr-check:((i8, u8)) noPadding8 = { = -100 -100 = 100 100 }\n // lldb-command:print noPadding16\n-// lldb-check:[...]$1 = (0, 1, 2)\n+// lldbg-check:[...]$1 = (0, 1, 2)\n+// lldbr-check:((i16, i16, u16)) noPadding16 = { = 0 = 1 = 2 }\n // lldb-command:print noPadding32\n-// lldb-check:[...]$2 = (3, 4.5, 5)\n+// lldbg-check:[...]$2 = (3, 4.5, 5)\n+// lldbr-check:((i32, f32, u32)) noPadding32 = { = 3 = 4.5 = 5 }\n // lldb-command:print noPadding64\n-// lldb-check:[...]$3 = (6, 7.5, 8)\n+// lldbg-check:[...]$3 = (6, 7.5, 8)\n+// lldbr-check:((i64, f64, u64)) noPadding64 = { = 6 = 7.5 = 8 }\n \n // lldb-command:print internalPadding1\n-// lldb-check:[...]$4 = (9, 10)\n+// lldbg-check:[...]$4 = (9, 10)\n+// lldbr-check:((i16, i32)) internalPadding1 = { = 9 = 10 }\n // lldb-command:print internalPadding2\n-// lldb-check:[...]$5 = (11, 12, 13, 14)\n+// lldbg-check:[...]$5 = (11, 12, 13, 14)\n+// lldbr-check:((i16, i32, u32, u64)) internalPadding2 = { = 11 = 12 = 13 = 14 }\n \n // lldb-command:print paddingAtEnd\n-// lldb-check:[...]$6 = (15, 16)\n+// lldbg-check:[...]$6 = (15, 16)\n+// lldbr-check:((i32, i16)) paddingAtEnd = { = 15 = 16 }\n \n #![allow(unused_variables)]\n #![allow(dead_code)]"}, {"sha": "75a67c6b84bce623019fcd440808c1f12fc560ab", "filename": "src/test/debuginfo/static-method-on-struct-and-enum.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -39,18 +39,23 @@\n \n // STRUCT\n // lldb-command:print arg1\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(isize) arg1 = 1\n // lldb-command:print arg2\n-// lldb-check:[...]$1 = 2\n+// lldbg-check:[...]$1 = 2\n+// lldbr-check:(isize) arg2 = 2\n // lldb-command:continue\n \n // ENUM\n // lldb-command:print arg1\n-// lldb-check:[...]$2 = -3\n+// lldbg-check:[...]$2 = -3\n+// lldbr-check:(isize) arg1 = -3\n // lldb-command:print arg2\n-// lldb-check:[...]$3 = 4.5\n+// lldbg-check:[...]$3 = 4.5\n+// lldbr-check:(f64) arg2 = 4.5\n // lldb-command:print arg3\n-// lldb-check:[...]$4 = 5\n+// lldbg-check:[...]$4 = 5\n+// lldbr-check:(usize) arg3 = 5\n // lldb-command:continue\n \n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "129500860c82f47888100915a5846e675c70a12c", "filename": "src/test/debuginfo/struct-in-struct.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -35,28 +35,36 @@\n // lldb-command:run\n \n // lldb-command:print three_simple_structs\n-// lldb-check:[...]$0 = ThreeSimpleStructs { x: Simple { x: 1 }, y: Simple { x: 2 }, z: Simple { x: 3 } }\n+// lldbg-check:[...]$0 = ThreeSimpleStructs { x: Simple { x: 1 }, y: Simple { x: 2 }, z: Simple { x: 3 } }\n+// lldbr-check:(struct_in_struct::ThreeSimpleStructs) three_simple_structs = ThreeSimpleStructs { x: Simple { x: 1 }, y: Simple { x: 2 }, z: Simple { x: 3 } }\n \n // lldb-command:print internal_padding_parent\n-// lldb-check:[...]$1 = InternalPaddingParent { x: InternalPadding { x: 4, y: 5 }, y: InternalPadding { x: 6, y: 7 }, z: InternalPadding { x: 8, y: 9 } }\n+// lldbg-check:[...]$1 = InternalPaddingParent { x: InternalPadding { x: 4, y: 5 }, y: InternalPadding { x: 6, y: 7 }, z: InternalPadding { x: 8, y: 9 } }\n+// lldbr-check:(struct_in_struct::InternalPaddingParent) internal_padding_parent = InternalPaddingParent { x: InternalPadding { x: 4, y: 5 }, y: InternalPadding { x: 6, y: 7 }, z: InternalPadding { x: 8, y: 9 } }\n \n // lldb-command:print padding_at_end_parent\n-// lldb-check:[...]$2 = PaddingAtEndParent { x: PaddingAtEnd { x: 10, y: 11 }, y: PaddingAtEnd { x: 12, y: 13 }, z: PaddingAtEnd { x: 14, y: 15 } }\n+// lldbg-check:[...]$2 = PaddingAtEndParent { x: PaddingAtEnd { x: 10, y: 11 }, y: PaddingAtEnd { x: 12, y: 13 }, z: PaddingAtEnd { x: 14, y: 15 } }\n+// lldbr-check:(struct_in_struct::PaddingAtEndParent) padding_at_end_parent = PaddingAtEndParent { x: PaddingAtEnd { x: 10, y: 11 }, y: PaddingAtEnd { x: 12, y: 13 }, z: PaddingAtEnd { x: 14, y: 15 } }\n \n // lldb-command:print mixed\n-// lldb-check:[...]$3 = Mixed { x: PaddingAtEnd { x: 16, y: 17 }, y: InternalPadding { x: 18, y: 19 }, z: Simple { x: 20 }, w: 21 }\n+// lldbg-check:[...]$3 = Mixed { x: PaddingAtEnd { x: 16, y: 17 }, y: InternalPadding { x: 18, y: 19 }, z: Simple { x: 20 }, w: 21 }\n+// lldbr-check:(struct_in_struct::Mixed) mixed = Mixed { x: PaddingAtEnd { x: 16, y: 17 }, y: InternalPadding { x: 18, y: 19 }, z: Simple { x: 20 }, w: 21 }\n \n // lldb-command:print bag\n-// lldb-check:[...]$4 = Bag { x: Simple { x: 22 } }\n+// lldbg-check:[...]$4 = Bag { x: Simple { x: 22 } }\n+// lldbr-check:(struct_in_struct::Bag) bag = Bag { x: Simple { x: 22 } }\n \n // lldb-command:print bag_in_bag\n-// lldb-check:[...]$5 = BagInBag { x: Bag { x: Simple { x: 23 } } }\n+// lldbg-check:[...]$5 = BagInBag { x: Bag { x: Simple { x: 23 } } }\n+// lldbr-check:(struct_in_struct::BagInBag) bag_in_bag = BagInBag { x: Bag { x: Simple { x: 23 } } }\n \n // lldb-command:print tjo\n-// lldb-check:[...]$6 = ThatsJustOverkill { x: BagInBag { x: Bag { x: Simple { x: 24 } } } }\n+// lldbg-check:[...]$6 = ThatsJustOverkill { x: BagInBag { x: Bag { x: Simple { x: 24 } } } }\n+// lldbr-check:(struct_in_struct::ThatsJustOverkill) tjo = ThatsJustOverkill { x: BagInBag { x: Bag { x: Simple { x: 24 } } } }\n \n // lldb-command:print tree\n-// lldb-check:[...]$7 = Tree { x: Simple { x: 25 }, y: InternalPaddingParent { x: InternalPadding { x: 26, y: 27 }, y: InternalPadding { x: 28, y: 29 }, z: InternalPadding { x: 30, y: 31 } }, z: BagInBag { x: Bag { x: Simple { x: 32 } } } }\n+// lldbg-check:[...]$7 = Tree { x: Simple { x: 25 }, y: InternalPaddingParent { x: InternalPadding { x: 26, y: 27 }, y: InternalPadding { x: 28, y: 29 }, z: InternalPadding { x: 30, y: 31 } }, z: BagInBag { x: Bag { x: Simple { x: 32 } } } }\n+// lldbr-check:(struct_in_struct::Tree) tree = Tree { x: Simple { x: 25 }, y: InternalPaddingParent { x: InternalPadding { x: 26, y: 27 }, y: InternalPadding { x: 28, y: 29 }, z: InternalPadding { x: 30, y: 31 } }, z: BagInBag { x: Bag { x: Simple { x: 32 } } } }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "efa415c7100b8e144582325b1ae74ba2734b2cdc", "filename": "src/test/debuginfo/struct-namespace.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstruct-namespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstruct-namespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-namespace.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -16,14 +16,18 @@\n \n // lldb-command:run\n // lldb-command:p struct1\n-// lldb-check:(struct_namespace::Struct1) $0 = [...]\n+// lldbg-check:(struct_namespace::Struct1) $0 = [...]\n+// lldbr-check:(struct_namespace::Struct1) struct1 = Struct1 { a: 0, b: 1 }\n // lldb-command:p struct2\n-// lldb-check:(struct_namespace::Struct2) $1 = [...]\n+// lldbg-check:(struct_namespace::Struct2) $1 = [...]\n+// lldbr-check:(struct_namespace::Struct2) struct2 = { = 2 }\n \n // lldb-command:p mod1_struct1\n-// lldb-check:(struct_namespace::mod1::Struct1) $2 = [...]\n+// lldbg-check:(struct_namespace::mod1::Struct1) $2 = [...]\n+// lldbr-check:(struct_namespace::mod1::Struct1) mod1_struct1 = Struct1 { a: 3, b: 4 }\n // lldb-command:p mod1_struct2\n-// lldb-check:(struct_namespace::mod1::Struct2) $3 = [...]\n+// lldbg-check:(struct_namespace::mod1::Struct2) $3 = [...]\n+// lldbr-check:(struct_namespace::mod1::Struct2) mod1_struct2 = { = 5 }\n \n #![allow(unused_variables)]\n #![allow(dead_code)]"}, {"sha": "36cd85fb4dc6503945c48f94bd5ad0026ad917fd", "filename": "src/test/debuginfo/struct-style-enum.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -41,16 +41,20 @@\n // lldb-command:run\n \n // lldb-command:print case1\n-// lldb-check:[...]$0 = Case1 { a: 0, b: 31868, c: 31868, d: 31868, e: 31868 }\n+// lldbg-check:[...]$0 = Case1 { a: 0, b: 31868, c: 31868, d: 31868, e: 31868 }\n+// lldbr-check:(struct_style_enum::Regular::Case1) case1 = { a = 0 b = 31868 c = 31868 d = 31868 e = 31868 }\n \n // lldb-command:print case2\n-// lldb-check:[...]$1 = Case2 { a: 0, b: 286331153, c: 286331153 }\n+// lldbg-check:[...]$1 = Case2 { a: 0, b: 286331153, c: 286331153 }\n+// lldbr-check:(struct_style_enum::Regular::Case2) case2 = Case2 { struct_style_enum::Regular::Case1: 0, struct_style_enum::Regular::Case2: 286331153, struct_style_enum::Regular::Case3: 286331153 }\n \n // lldb-command:print case3\n-// lldb-check:[...]$2 = Case3 { a: 0, b: 6438275382588823897 }\n+// lldbg-check:[...]$2 = Case3 { a: 0, b: 6438275382588823897 }\n+// lldbr-check:(struct_style_enum::Regular::Case3) case3 = Case3 { struct_style_enum::Regular::Case1: 0, struct_style_enum::Regular::Case2: 6438275382588823897 }\n \n // lldb-command:print univariant\n-// lldb-check:[...]$3 = TheOnlyCase { a: -1 }\n+// lldbg-check:[...]$3 = TheOnlyCase { a: -1 }\n+// lldbr-check:(struct_style_enum::Univariant) univariant = Univariant { struct_style_enum::TheOnlyCase: TheOnlyCase { a: -1 } }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "f7722bb377531721a369ebbe0259b137d3c205b5", "filename": "src/test/debuginfo/struct-with-destructor.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -38,16 +38,20 @@\n \n // lldb-command:run\n // lldb-command:print simple\n-// lldb-check:[...]$0 = WithDestructor { x: 10, y: 20 }\n+// lldbg-check:[...]$0 = WithDestructor { x: 10, y: 20 }\n+// lldbr-check:(struct_with_destructor::WithDestructor) simple = WithDestructor { x: 10, y: 20 }\n \n // lldb-command:print noDestructor\n-// lldb-check:[...]$1 = NoDestructorGuarded { a: NoDestructor { x: 10, y: 20 }, guard: -1 }\n+// lldbg-check:[...]$1 = NoDestructorGuarded { a: NoDestructor { x: 10, y: 20 }, guard: -1 }\n+// lldbr-check:(struct_with_destructor::NoDestructorGuarded) noDestructor = NoDestructorGuarded { a: NoDestructor { x: 10, y: 20 }, guard: -1 }\n \n // lldb-command:print withDestructor\n-// lldb-check:[...]$2 = WithDestructorGuarded { a: WithDestructor { x: 10, y: 20 }, guard: -1 }\n+// lldbg-check:[...]$2 = WithDestructorGuarded { a: WithDestructor { x: 10, y: 20 }, guard: -1 }\n+// lldbr-check:(struct_with_destructor::WithDestructorGuarded) withDestructor = WithDestructorGuarded { a: WithDestructor { x: 10, y: 20 }, guard: -1 }\n \n // lldb-command:print nested\n-// lldb-check:[...]$3 = NestedOuter { a: NestedInner { a: WithDestructor { x: 7890, y: 9870 } } }\n+// lldbg-check:[...]$3 = NestedOuter { a: NestedInner { a: WithDestructor { x: 7890, y: 9870 } } }\n+// lldbr-check:(struct_with_destructor::NestedOuter) nested = NestedOuter { a: NestedInner { a: WithDestructor { x: 7890, y: 9870 } } }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "79335a3d0e139e6fd393921fcf450105dbecafa4", "filename": "src/test/debuginfo/tuple-in-tuple.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -46,21 +46,28 @@\n // lldb-command:run\n \n // lldb-command:print no_padding1\n-// lldb-check:[...]$0 = ((0, 1), 2, 3)\n+// lldbg-check:[...]$0 = ((0, 1), 2, 3)\n+// lldbr-check:(((u32, u32), u32, u32)) no_padding1 = { = { = 0 = 1 } = 2 = 3 }\n // lldb-command:print no_padding2\n-// lldb-check:[...]$1 = (4, (5, 6), 7)\n+// lldbg-check:[...]$1 = (4, (5, 6), 7)\n+// lldbr-check:((u32, (u32, u32), u32)) no_padding2 = { = 4 = { = 5 = 6 } = 7 }\n // lldb-command:print no_padding3\n-// lldb-check:[...]$2 = (8, 9, (10, 11))\n+// lldbg-check:[...]$2 = (8, 9, (10, 11))\n+// lldbr-check:((u32, u32, (u32, u32))) no_padding3 = { = 8 = 9 = { = 10 = 11 } }\n \n // lldb-command:print internal_padding1\n-// lldb-check:[...]$3 = (12, (13, 14))\n+// lldbg-check:[...]$3 = (12, (13, 14))\n+// lldbr-check:((i16, (i32, i32))) internal_padding1 = { = 12 = { = 13 = 14 } }\n // lldb-command:print internal_padding2\n-// lldb-check:[...]$4 = (15, (16, 17))\n+// lldbg-check:[...]$4 = (15, (16, 17))\n+// lldbr-check:((i16, (i16, i32))) internal_padding2 = { = 15 = { = 16 = 17 } }\n \n // lldb-command:print padding_at_end1\n-// lldb-check:[...]$5 = (18, (19, 20))\n+// lldbg-check:[...]$5 = (18, (19, 20))\n+// lldbr-check:((i32, (i32, i16))) padding_at_end1 = { = 18 = { = 19 = 20 } }\n // lldb-command:print padding_at_end2\n-// lldb-check:[...]$6 = ((21, 22), 23)\n+// lldbg-check:[...]$6 = ((21, 22), 23)\n+// lldbr-check:(((i32, i16), i32)) padding_at_end2 = { = { = 21 = 22 } = 23 }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "def48c84488dc333b7b3f05909536576d8cfc596", "filename": "src/test/debuginfo/tuple-struct.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n+\n // min-lldb-version: 310\n \n // compile-flags:-g\n@@ -46,22 +48,28 @@\n // lldb-command:run\n \n // lldb-command:print no_padding16\n-// lldb-check:[...]$0 = NoPadding16(10000, -10001)\n+// lldbg-check:[...]$0 = NoPadding16(10000, -10001)\n+// lldbr-check:(tuple_struct::NoPadding16) no_padding16 = { = 10000 = -10001 }\n \n // lldb-command:print no_padding32\n-// lldb-check:[...]$1 = NoPadding32(-10002, -10003.5, 10004)\n+// lldbg-check:[...]$1 = NoPadding32(-10002, -10003.5, 10004)\n+// lldbr-check:(tuple_struct::NoPadding32) no_padding32 = { = -10002 = -10003.5 = 10004 }\n \n // lldb-command:print no_padding64\n-// lldb-check:[...]$2 = NoPadding64(-10005.5, 10006, 10007)\n+// lldbg-check:[...]$2 = NoPadding64(-10005.5, 10006, 10007)\n+// lldbr-check:(tuple_struct::NoPadding64) no_padding64 = { = -10005.5 = 10006 = 10007 }\n \n // lldb-command:print no_padding163264\n-// lldb-check:[...]$3 = NoPadding163264(-10008, 10009, 10010, 10011)\n+// lldbg-check:[...]$3 = NoPadding163264(-10008, 10009, 10010, 10011)\n+// lldbr-check:(tuple_struct::NoPadding163264) no_padding163264 = { = -10008 = 10009 = 10010 = 10011 }\n \n // lldb-command:print internal_padding\n-// lldb-check:[...]$4 = InternalPadding(10012, -10013)\n+// lldbg-check:[...]$4 = InternalPadding(10012, -10013)\n+// lldbr-check:(tuple_struct::InternalPadding) internal_padding = { = 10012 = -10013 }\n \n // lldb-command:print padding_at_end\n-// lldb-check:[...]$5 = PaddingAtEnd(-10014, 10015)\n+// lldbg-check:[...]$5 = PaddingAtEnd(-10014, 10015)\n+// lldbr-check:(tuple_struct::PaddingAtEnd) padding_at_end = { = -10014 = 10015 }\n \n // This test case mainly makes sure that no field names are generated for tuple structs (as opposed\n // to all fields having the name \"<unnamed_field>\"). Otherwise they are handled the same a normal"}, {"sha": "682e74601b0a11b7f15f2a3357ec22e175dd8c66", "filename": "src/test/debuginfo/tuple-style-enum.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -41,16 +41,20 @@\n // lldb-command:run\n \n // lldb-command:print case1\n-// lldb-check:[...]$0 = Case1(0, 31868, 31868, 31868, 31868)\n+// lldbg-check:[...]$0 = Case1(0, 31868, 31868, 31868, 31868)\n+// lldbr-check:(tuple_style_enum::Regular::Case1) case1 = { = 0 = 31868 = 31868 = 31868 = 31868 }\n \n // lldb-command:print case2\n-// lldb-check:[...]$1 = Case2(0, 286331153, 286331153)\n+// lldbg-check:[...]$1 = Case2(0, 286331153, 286331153)\n+// lldbr-check:(tuple_style_enum::Regular::Case2) case2 = Case2 { tuple_style_enum::Regular::Case1: 0, tuple_style_enum::Regular::Case2: 286331153, tuple_style_enum::Regular::Case3: 286331153 }\n \n // lldb-command:print case3\n-// lldb-check:[...]$2 = Case3(0, 6438275382588823897)\n+// lldbg-check:[...]$2 = Case3(0, 6438275382588823897)\n+// lldbr-check:(tuple_style_enum::Regular::Case3) case3 = Case3 { tuple_style_enum::Regular::Case1: 0, tuple_style_enum::Regular::Case2: 6438275382588823897 }\n \n // lldb-command:print univariant\n-// lldb-check:[...]$3 = TheOnlyCase(-1)\n+// lldbg-check:[...]$3 = TheOnlyCase(-1)\n+// lldbr-check:(tuple_style_enum::Univariant) univariant = { tuple_style_enum::TheOnlyCase = { = -1 } }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "7772127bad295ee012d121721d58050a5ab9435d", "filename": "src/test/debuginfo/union-smoke.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Funion-smoke.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Funion-smoke.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funion-smoke.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -29,9 +29,13 @@\n \n // lldb-command:run\n // lldb-command:print u\n-// lldb-check:[...]$0 = U { a: ('\\x02', '\\x02'), b: 514 }\n-// lldb-command:print union_smoke::SU\n-// lldb-check:[...]$1 = U { a: ('\\x01', '\\x01'), b: 257 }\n+// lldbg-check:[...]$0 = U { a: ('\\x02', '\\x02'), b: 514 }\n+// lldbr-check:(union_smoke::U) u = { a = { = 2 = 2 } b = 514 }\n+\n+// Don't test this with rust-enabled lldb for now; see\n+// https://github.com/rust-lang-nursery/lldb/issues/18\n+// lldbg-command:print union_smoke::SU\n+// lldbg-check:[...]$1 = U { a: ('\\x01', '\\x01'), b: 257 }\n \n #![allow(unused)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "6b62c304513944ea0ea0f7abd220493c0258d084", "filename": "src/test/debuginfo/unique-enum.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Funique-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Funique-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funique-enum.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -36,13 +36,16 @@\n // lldb-command:run\n \n // lldb-command:print *the_a\n-// lldb-check:[...]$0 = TheA { x: 0, y: 8970181431921507452 }\n+// lldbg-check:[...]$0 = TheA { x: 0, y: 8970181431921507452 }\n+// lldbr-check:(unique_enum::ABC::TheA) *the_a = TheA { unique_enum::ABC::TheA: 0, unique_enum::ABC::TheB: 8970181431921507452 }\n \n // lldb-command:print *the_b\n-// lldb-check:[...]$1 = TheB(0, 286331153, 286331153)\n+// lldbg-check:[...]$1 = TheB(0, 286331153, 286331153)\n+// lldbr-check:(unique_enum::ABC::TheB) *the_b = { = 0 = 286331153 = 286331153 }\n \n // lldb-command:print *univariant\n-// lldb-check:[...]$2 = TheOnlyCase(123234)\n+// lldbg-check:[...]$2 = TheOnlyCase(123234)\n+// lldbr-check:(unique_enum::Univariant) *univariant = { unique_enum::TheOnlyCase = { = 123234 } }\n \n #![allow(unused_variables)]\n #![feature(box_syntax)]"}, {"sha": "02c836bb6ac47503590c65f59c1d46f64dbcf0b5", "filename": "src/test/debuginfo/var-captured-in-nested-closure.rs", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -54,31 +54,43 @@\n // lldb-command:run\n \n // lldb-command:print variable\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(isize) variable = 1\n // lldb-command:print constant\n-// lldb-check:[...]$1 = 2\n+// lldbg-check:[...]$1 = 2\n+// lldbr-check:(isize) constant = 2\n // lldb-command:print a_struct\n-// lldb-check:[...]$2 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbg-check:[...]$2 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbr-check:(var_captured_in_nested_closure::Struct) a_struct = Struct { a: -3, b: 4.5, c: 5 }\n // lldb-command:print *struct_ref\n-// lldb-check:[...]$3 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbg-check:[...]$3 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbr-check:(var_captured_in_nested_closure::Struct) *struct_ref = Struct { a: -3, b: 4.5, c: 5 }\n // lldb-command:print *owned\n-// lldb-check:[...]$4 = 6\n+// lldbg-check:[...]$4 = 6\n+// lldbr-check:(isize) *owned = 6\n // lldb-command:print closure_local\n-// lldb-check:[...]$5 = 8\n+// lldbg-check:[...]$5 = 8\n+// lldbr-check:(isize) closure_local = 8\n // lldb-command:continue\n \n // lldb-command:print variable\n-// lldb-check:[...]$6 = 1\n+// lldbg-check:[...]$6 = 1\n+// lldbr-check:(isize) variable = 1\n // lldb-command:print constant\n-// lldb-check:[...]$7 = 2\n+// lldbg-check:[...]$7 = 2\n+// lldbr-check:(isize) constant = 2\n // lldb-command:print a_struct\n-// lldb-check:[...]$8 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbg-check:[...]$8 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbr-check:(var_captured_in_nested_closure::Struct) a_struct = Struct { a: -3, b: 4.5, c: 5 }\n // lldb-command:print *struct_ref\n-// lldb-check:[...]$9 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbg-check:[...]$9 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbr-check:(var_captured_in_nested_closure::Struct) *struct_ref = Struct { a: -3, b: 4.5, c: 5 }\n // lldb-command:print *owned\n-// lldb-check:[...]$10 = 6\n+// lldbg-check:[...]$10 = 6\n+// lldbr-check:(isize) *owned = 6\n // lldb-command:print closure_local\n-// lldb-check:[...]$11 = 8\n+// lldbg-check:[...]$11 = 8\n+// lldbr-check:(isize) closure_local = 8\n // lldb-command:continue\n \n #![allow(unused_variables)]"}, {"sha": "a562584dfd028c18cfa07766d41929063348e78a", "filename": "src/test/debuginfo/var-captured-in-sendable-closure.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -34,11 +34,14 @@\n // lldb-command:run\n \n // lldb-command:print constant\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(isize) constant = 1\n // lldb-command:print a_struct\n-// lldb-check:[...]$1 = Struct { a: -2, b: 3.5, c: 4 }\n+// lldbg-check:[...]$1 = Struct { a: -2, b: 3.5, c: 4 }\n+// lldbr-check:(var_captured_in_sendable_closure::Struct) a_struct = Struct { a: -2, b: 3.5, c: 4 }\n // lldb-command:print *owned\n-// lldb-check:[...]$2 = 5\n+// lldbg-check:[...]$2 = 5\n+// lldbr-check:(isize) *owned = 5\n \n #![allow(unused_variables)]\n #![feature(box_syntax)]"}, {"sha": "cf4eaf393e9562f8c9702bda3996a40430b1dee4", "filename": "src/test/debuginfo/var-captured-in-stack-closure.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -50,28 +50,38 @@\n // lldb-command:run\n \n // lldb-command:print variable\n-// lldb-check:[...]$0 = 1\n+// lldbg-check:[...]$0 = 1\n+// lldbr-check:(isize) variable = 1\n // lldb-command:print constant\n-// lldb-check:[...]$1 = 2\n+// lldbg-check:[...]$1 = 2\n+// lldbr-check:(isize) constant = 2\n // lldb-command:print a_struct\n-// lldb-check:[...]$2 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbg-check:[...]$2 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbr-check:(var_captured_in_stack_closure::Struct) a_struct = Struct { a: -3, b: 4.5, c: 5 }\n // lldb-command:print *struct_ref\n-// lldb-check:[...]$3 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbg-check:[...]$3 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbr-check:(var_captured_in_stack_closure::Struct) *struct_ref = Struct { a: -3, b: 4.5, c: 5 }\n // lldb-command:print *owned\n-// lldb-check:[...]$4 = 6\n+// lldbg-check:[...]$4 = 6\n+// lldbr-check:(isize) *owned = 6\n \n // lldb-command:continue\n \n // lldb-command:print variable\n-// lldb-check:[...]$5 = 2\n+// lldbg-check:[...]$5 = 2\n+// lldbr-check:(isize) variable = 2\n // lldb-command:print constant\n-// lldb-check:[...]$6 = 2\n+// lldbg-check:[...]$6 = 2\n+// lldbr-check:(isize) constant = 2\n // lldb-command:print a_struct\n-// lldb-check:[...]$7 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbg-check:[...]$7 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbr-check:(var_captured_in_stack_closure::Struct) a_struct = Struct { a: -3, b: 4.5, c: 5 }\n // lldb-command:print *struct_ref\n-// lldb-check:[...]$8 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbg-check:[...]$8 = Struct { a: -3, b: 4.5, c: 5 }\n+// lldbr-check:(var_captured_in_stack_closure::Struct) *struct_ref = Struct { a: -3, b: 4.5, c: 5 }\n // lldb-command:print *owned\n-// lldb-check:[...]$9 = 6\n+// lldbg-check:[...]$9 = 6\n+// lldbr-check:(isize) *owned = 6\n \n #![feature(box_syntax)]\n #![allow(unused_variables)]"}, {"sha": "39bf0c175ebcb7ea41eb7401ee965b3d42888f5a", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n+\n // ignore-windows\n // ignore-gdb // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n // min-lldb-version: 310\n@@ -80,22 +82,28 @@\n // lldb-command:run\n \n // lldb-command:print empty\n-// lldb-check:[...]$0 = &[]\n+// lldbg-check:[...]$0 = &[]\n+// lldbr-check:(&[i64]) empty = &[]\n \n // lldb-command:print singleton\n-// lldb-check:[...]$1 = &[1]\n+// lldbg-check:[...]$1 = &[1]\n+// lldbr-check:(&[i64]) singleton = &[1]\n \n // lldb-command:print multiple\n-// lldb-check:[...]$2 = &[2, 3, 4, 5]\n+// lldbg-check:[...]$2 = &[2, 3, 4, 5]\n+// lldbr-check:(&[i64]) multiple = &[2, 3, 4, 5]\n \n // lldb-command:print slice_of_slice\n-// lldb-check:[...]$3 = &[3, 4]\n+// lldbg-check:[...]$3 = &[3, 4]\n+// lldbr-check:(&[i64]) slice_of_slice = &[3, 4]\n \n // lldb-command:print padded_tuple\n-// lldb-check:[...]$4 = &[(6, 7), (8, 9)]\n+// lldbg-check:[...]$4 = &[(6, 7), (8, 9)]\n+// lldbr-check:(&[(i32, i16)]) padded_tuple = { data_ptr = *0x555555554ff0 length = 2 }\n \n // lldb-command:print padded_struct\n-// lldb-check:[...]$5 = &[AStruct { x: 10, y: 11, z: 12 }, AStruct { x: 13, y: 14, z: 15 }]\n+// lldbg-check:[...]$5 = &[AStruct { x: 10, y: 11, z: 12 }, AStruct { x: 13, y: 14, z: 15 }]\n+// lldbr-check:(&[vec_slices::AStruct]) padded_struct = &[AStruct { x: 10, y: 11, z: 12 }, AStruct { x: 13, y: 14, z: 15 }]\n \n #![allow(dead_code, unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "752f3f1cba1ecec6e48b74cf815ff6fc59e72434", "filename": "src/test/debuginfo/vec.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftest%2Fdebuginfo%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -28,7 +28,8 @@\n \n // lldb-command:run\n // lldb-command:print a\n-// lldb-check:[...]$0 = [1, 2, 3]\n+// lldbg-check:[...]$0 = [1, 2, 3]\n+// lldbr-check:([i32; 3]) a = [1, 2, 3]\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "7006fb9427e1cec2332ee8d4afa2e9d7fcc9c249", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -205,6 +205,9 @@ pub struct Config {\n     /// Version of LLDB\n     pub lldb_version: Option<String>,\n \n+    /// Whether LLDB has native rust support\n+    pub lldb_native_rust: bool,\n+\n     /// Version of LLVM\n     pub llvm_version: Option<String>,\n "}, {"sha": "688f2babe6e8c2c570306107660cd54db7128269", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -133,6 +133,8 @@ impl EarlyProps {\n                     // Ignore if actual version is smaller the minimum required\n                     // version\n                     lldb_version_to_int(actual_version) < lldb_version_to_int(min_version)\n+                } else if line.starts_with(\"rust-lldb\") && !config.lldb_native_rust {\n+                    true\n                 } else {\n                     false\n                 }"}, {"sha": "f46e031d768bd9f6284175d9fe0d9f5345b2baef", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -282,6 +282,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n     let android_cross_path = opt_path(matches, \"android-cross-path\");\n     let (gdb, gdb_version, gdb_native_rust) = analyze_gdb(matches.opt_str(\"gdb\"), &target,\n                                                           &android_cross_path);\n+    let (lldb_version, lldb_native_rust) = extract_lldb_version(matches.opt_str(\"lldb-version\"));\n \n     let color = match matches.opt_str(\"color\").as_ref().map(|x| &**x) {\n         Some(\"auto\") | None => ColorConfig::AutoColor,\n@@ -326,7 +327,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         gdb,\n         gdb_version,\n         gdb_native_rust,\n-        lldb_version: extract_lldb_version(matches.opt_str(\"lldb-version\")),\n+        lldb_version,\n+        lldb_native_rust,\n         llvm_version: matches.opt_str(\"llvm-version\"),\n         system_llvm: matches.opt_present(\"system-llvm\"),\n         android_cross_path: android_cross_path,\n@@ -906,17 +908,27 @@ fn extract_gdb_version(full_version_line: &str) -> Option<u32> {\n     None\n }\n \n-fn extract_lldb_version(full_version_line: Option<String>) -> Option<String> {\n+/// Returns (LLDB version, LLDB is rust-enabled)\n+fn extract_lldb_version(full_version_line: Option<String>) -> (Option<String>, bool) {\n     // Extract the major LLDB version from the given version string.\n     // LLDB version strings are different for Apple and non-Apple platforms.\n-    // At the moment, this function only supports the Apple variant, which looks\n-    // like this:\n+    // The Apple variant looks like this:\n     //\n     // LLDB-179.5 (older versions)\n     // lldb-300.2.51 (new versions)\n     //\n     // We are only interested in the major version number, so this function\n     // will return `Some(\"179\")` and `Some(\"300\")` respectively.\n+    //\n+    // Upstream versions look like:\n+    // lldb version 6.0.1\n+    //\n+    // There doesn't seem to be a way to correlate the Apple version\n+    // with the upstream version, and since the tests were originally\n+    // written against Apple versions, we make a fake Apple version by\n+    // multiplying the first number by 100.  This is a hack, but\n+    // normally fine because the only non-Apple version we test is\n+    // rust-enabled.\n \n     if let Some(ref full_version_line) = full_version_line {\n         if !full_version_line.trim().is_empty() {\n@@ -951,12 +963,22 @@ fn extract_lldb_version(full_version_line: Option<String>) -> Option<String> {\n                     .take_while(|c| c.is_digit(10))\n                     .collect::<String>();\n                 if !vers.is_empty() {\n-                    return Some(vers);\n+                    return (Some(vers), full_version_line.contains(\"rust-enabled\"));\n+                }\n+            }\n+\n+            if full_version_line.starts_with(\"lldb version \") {\n+                let vers = full_version_line[13..]\n+                    .chars()\n+                    .take_while(|c| c.is_digit(10))\n+                    .collect::<String>();\n+                if !vers.is_empty() {\n+                    return (Some(vers + \"00\"), full_version_line.contains(\"rust-enabled\"));\n                 }\n             }\n         }\n     }\n-    None\n+    (None, false)\n }\n \n fn is_blacklisted_lldb_version(version: &str) -> bool {"}, {"sha": "4cb6f6b83bdd10e40a1ce0f576acdf109e85688f", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac33b2e578de58016271012452e4f1be6af9d516/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=ac33b2e578de58016271012452e4f1be6af9d516", "patch": "@@ -945,13 +945,23 @@ impl<'test> TestCx<'test> {\n             }\n         }\n \n+        let prefixes = if self.config.lldb_native_rust {\n+            static PREFIXES: &'static [&'static str] = &[\"lldb\", \"lldbr\"];\n+            println!(\"NOTE: compiletest thinks it is using LLDB with native rust support\");\n+            PREFIXES\n+        } else {\n+            static PREFIXES: &'static [&'static str] = &[\"lldb\", \"lldbg\"];\n+            println!(\"NOTE: compiletest thinks it is using LLDB without native rust support\");\n+            PREFIXES\n+        };\n+\n         // Parse debugger commands etc from test files\n         let DebuggerCommands {\n             commands,\n             check_lines,\n             breakpoint_lines,\n             ..\n-        } = self.parse_debugger_commands(&[\"lldb\"]);\n+        } = self.parse_debugger_commands(prefixes);\n \n         // Write debugger script:\n         // We don't want to hang when calling `quit` while the process is still running"}]}