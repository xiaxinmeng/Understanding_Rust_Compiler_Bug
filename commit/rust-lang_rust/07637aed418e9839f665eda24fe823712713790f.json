{"sha": "07637aed418e9839f665eda24fe823712713790f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NjM3YWVkNDE4ZTk4MzlmNjY1ZWRhMjRmZTgyMzcxMjcxMzc5MGY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git1984941651981@oli-obk.de", "date": "2015-05-04T08:09:41Z"}, "committer": {"name": "Oliver Schneider", "email": "git1984941651981@oli-obk.de", "date": "2015-05-04T08:09:41Z"}, "message": "rustfmt dislikes tabs and some newlines", "tree": {"sha": "611a211b5a252cab3b1c3a3bea33bb7dae09295e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/611a211b5a252cab3b1c3a3bea33bb7dae09295e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07637aed418e9839f665eda24fe823712713790f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07637aed418e9839f665eda24fe823712713790f", "html_url": "https://github.com/rust-lang/rust/commit/07637aed418e9839f665eda24fe823712713790f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07637aed418e9839f665eda24fe823712713790f/comments", "author": null, "committer": null, "parents": [{"sha": "b546dfcf8305d4260ffad796f9544c89e75952bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b546dfcf8305d4260ffad796f9544c89e75952bf", "html_url": "https://github.com/rust-lang/rust/commit/b546dfcf8305d4260ffad796f9544c89e75952bf"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "9f6b3602061478610e5cdfb1a275eacc2205f77e", "filename": "tests/idem.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/07637aed418e9839f665eda24fe823712713790f/tests%2Fidem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07637aed418e9839f665eda24fe823712713790f/tests%2Fidem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem.rs?ref=07637aed418e9839f665eda24fe823712713790f", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![feature(std_misc)]\n-\n extern crate rustfmt;\n \n use std::collections::HashMap;\n@@ -79,7 +78,7 @@ pub fn idempotent_check(filename: String) -> Result<(), HashMap<String, String>>\n     use std::thread;\n     use std::fs;\n     use std::io::Read;\n-\tlet args = vec![\"rustfmt\".to_owned(), filename];\n+    let args = vec![\"rustfmt\".to_owned(), filename];\n     thread::spawn(move || {\n         run(args, WriteMode::Return(HANDLE_RESULT));\n     }).join().map_err(|mut any|"}]}